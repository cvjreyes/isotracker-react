[{"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\index.js":"1","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\App.js":"2","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\home\\home.js":"4","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\welcome\\welcome.js":"5","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\register\\register.js":"6","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBtns\\reportBtns.js":"7","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\datatable\\datatable.js":"8","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\stateTable\\stateTable.js":"9","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentBox\\commentBox.js":"10","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionExtra\\actionExtra.js":"11","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionBtns\\actionBtns.js":"12","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\selectPag\\selectPag.js":"13","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressTable\\progressTable.js":"14","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\checkInTable\\checkInTable.js":"15","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBar\\navBar.js":"16","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayTable\\myTrayTable.js":"17","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayBtn\\myTrayBtn.js":"18","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binTable\\binTable.js":"19","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBtns\\navBtns.js":"20","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\statusDataTable\\statusDataTable.js":"21","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\menuList\\menuList.js":"22","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binBtn\\binBtn.js":"23","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\cancelIso\\cancelIso.js":"24","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadPopUp\\uploadPopUp.js":"25","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\chooseFile\\chooseFile.js":"26","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\dragAndDrop\\dragAndDrop.js":"27","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\loginPage\\loginPage.js":"28","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\login\\login.js":"29","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\roleDropDown\\roleDropDown.js":"30","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldTable\\onHoldTable.js":"31","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldBtn\\onHoldBtn.js":"32","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\historyDataTable\\historyDataTable.js":"33","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInsBtn\\procInsBtn.js":"34","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInstTable\\procInstTable.js":"35","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadProcInst\\uploadProcInst.js":"36","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportsBtn\\reportsBtn.js":"37","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBoxBtns\\reportBoxBtns.js":"38","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\forceClaimPopUp\\forceClaimPopUp.js":"39","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadReportPopUp\\uploadReportPopUp.js":"40","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\issuedBtn\\issuedBtn.js":"41","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\changePassword\\changePassword.js":"42","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressBtn\\progressBtn.js":"43","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlot\\progressPlot.js":"44","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledBtn\\modelledBtn.js":"45","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledDataTable\\modelledDataTable.js":"46","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\holdComment\\holdComment.js":"47","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\renamePopUp\\renamePopUp.js":"48","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentPopUp\\commentPopUp.js":"49","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\equipments\\equipments.js":"50","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\EquipmentsNavBtns\\equipmentsNavBtns.js":"51","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipEstimatedDataTable\\equipEstimatedDataTable.js":"52","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipModelledDataTable\\equipModelledDataTable.js":"53","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotEquipments\\progressPlotEquipments.js":"54","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadEquisModelledPopUp\\uploadEquisModelledPopUp.js":"55","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipTypesDataTable\\equipTypesDataTable.js":"56","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\instrumentation\\instrumentation.js":"57","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\civil\\civil.js":"58","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationEstimatedDataTable\\instrumentationEstimatedDataTable.js":"59","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationModelledDataTable\\instrumentationModelledDataTable.js":"60","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotInstrumentation\\progressPlotInstrumentation.js":"61","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationTypesDataTable\\instrumentationTypesDataTable.js":"62","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotCivils\\progressPlotCivils.js":"63","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilEstimatedDataTable\\civilEstimatedDataTable.js":"64","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilTypesDataTable\\civilTypesDataTable.js":"65","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilModelledDataTable\\civilModelledDataTable.js":"66","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadEquisEstimatedPopUp\\uploadEquisEstimatedPopUp.js":"67","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\electrical\\electrical.js":"68","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\progressCurve\\progressCurve.js":"69","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\piping\\piping.js":"70","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\navis\\navis.js":"71","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipExcel\\equipExcel.js":"72","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipExcelEdit\\equipExcelEdit.js":"73","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instExcel\\instExcel.js":"74","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instExcelEdit\\instExcelEdit.js":"75","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\usersDataTable\\usersDataTable.js":"76","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilExcelEdit\\civilExcelEdit.js":"77","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilExcel\\civilExcel.js":"78","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\deleteUserConfPopUp\\deleteUserConfPopUp.js":"79","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\manageRolesPopUp\\manageRolesPopUp.js":"80","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadPipesEstimatedPopUp\\uploadPipesEstimatedPopUp.js":"81","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadElectricalModelledPopUp\\uploadElectricalModelledPopUp.js":"82","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadElectricalEstimatedPopUp\\uploadElectricalEstimatedPopUp.js":"83","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadCivilEstimtedPopUp\\uploadCivilEstimtedPopUp.js":"84","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadCivilModelledPopUp\\uploadCivilModelledPopUp.js":"85","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadInstrumentationEstimatedPopUp\\uploadInstrumentationEstimatedPopUp.js":"86","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadInstrumentationModelledPopUp\\uploadInstrumentationModelledPopUp.js":"87","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\addUserPopUp\\addUserPopUp.js":"88","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navisTable\\navisTable.js":"89","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingExcelEdit\\pipingExcelEdit.js":"90","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingExcel\\pipingExcel.js":"91","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingEstimatedDataTable\\pipingEstimatedDataTable.js":"92","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotPiping\\progressPlotPiping.js":"93","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingTypesDataTable\\pipingTypesDataTable.js":"94","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecExcelEdit\\elecExcelEdit.js":"95","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotCurve\\progressPlotCurve.js":"96","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecExcel\\elecExcel.js":"97","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecTypesDataTable\\elecTypesDataTable.js":"98","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progresPlotElecs\\progressPlotElecs.js":"99","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\electricalModelledDataTable\\electricalModelledDataTable.js":"100","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\electricalEstimatedDataTable\\electricalEstimatedDataTable.js":"101","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\isoCtrl\\isoCtrl.js":"102","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\alert\\alert.js":"103","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\loadingScreen\\loadingScreen.js":"104","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\holdsPopUp\\holdsPopUp.js":"105","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\loadingScreen3D\\loadingScreen3D.js":"106","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\welcomeLoginF\\welcomeLoginF.js":"107","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\isoCtrlF\\isoCtrlF.js":"108","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\sptracker\\sptracker.js":"109","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\csptrackerDataTable\\csptrackerDataTable.js":"110","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\csptrackerRequestsDataTable\\csptrackerRequestsDataTable.js":"111","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\csptrackerRequestPopUp\\csptrackerRequestPopUp.js":"112","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\csptrackerKeyParams\\csptrackerKeyParams.js":"113","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadDrawingPopUp\\uploadDrawingPopUp.js":"114","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\updateDrawingPopUp\\updateDrawingPopUp.js":"115","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadBomIsocontrolPopUp\\uploadBomIsocontrolPopUp.js":"116","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlFullDataTable\\isoControlFullDataTable.js":"117","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlGroupLineIdDataTable\\isoControlGroupLineIdDataTable.js":"118","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlModelledDataTable\\isoControlModelledDataTable.js":"119","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlNotModelledDataTable\\isoControlNotModelledDataTable.js":"120","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\updateBOMPopUp\\updateBOMPopUp.js":"121","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\pitrequests\\pitrequests.js":"122","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\menuListPit\\menuListPit.js":"123","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\menuListPitList\\menuListPitList.js":"124","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\timeTrackDataTable\\timeTrackDataTable.js":"125","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\pitRequestView\\pitRequestView.js":"126","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerViewDataTable\\qtrackerViewDataTable.js":"127","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerRPSpecPopUp\\qtrackerRPSpecPopUp.js":"128","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRIDSSpecPopUp\\qtrackerNRIDSSpecPopUp.js":"129","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRBSpecPopUp\\qtrackerNRBSpecPopUp.js":"130","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRISpecPopUp\\qtrackerNRISpecPopUp.js":"131","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNVNSpecPopUp\\qtrackerNVNSpecPopUp.js":"132","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNWCSpecPopUp\\qtrackerNWCSpecPopUp.js":"133","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNWCPopUp\\qtrackerNWCPopUp.js":"134","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRIPopUp\\qtrackerNRIPopUp.js":"135","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRBPopUp\\qtrackerNRBPopUp.js":"136","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNVNPopUp\\qtrackerNVNPopUp.js":"137","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerRRPopUp\\qtrackerRRPopUp.js":"138","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRIDSPopUp\\qtrackerNRIDSPopUp.js":"139","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\revisionPopUp\\revisionPopUp.js":"140","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\updateMassivePopUp\\updateMassivePopUp.js":"141","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\updateMassive\\updateMassive.js":"142","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\newRevPopUp\\newRevPopUp.js":"143","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingNavBtns\\pipingNavBtns.js":"144","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingDataTable\\pipingDataTable.js":"145","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\estimatedPipesExcel\\estimatedPipesExcel.js":"146","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingBinTable\\pipingBinTable.js":"147","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlHoldsDataTable\\isoControlHoldsDataTable.js":"148","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingMyTrayTable\\pipingMyTrayTable.js":"149","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlHoldsPopUp\\isoControlHoldsPopUp.js":"150","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\pipingProduction\\pipingProduction.js":"151","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBarProdCurve\\navBarProdCurve.js":"152"},{"size":756,"mtime":1620977886750,"results":"153","hashOfConfig":"154"},{"size":3108,"mtime":1653561737667,"results":"155","hashOfConfig":"154"},{"size":375,"mtime":1620977886757,"results":"156","hashOfConfig":"154"},{"size":3894,"mtime":1638432295041,"results":"157","hashOfConfig":"154"},{"size":1093,"mtime":1634115157196,"results":"158","hashOfConfig":"154"},{"size":3627,"mtime":1621337132858,"results":"159","hashOfConfig":"154"},{"size":1969,"mtime":1633691732500,"results":"160","hashOfConfig":"154"},{"size":60834,"mtime":1653561737742,"results":"161","hashOfConfig":"154"},{"size":19284,"mtime":1633691732564,"results":"162","hashOfConfig":"154"},{"size":344,"mtime":1614590522413,"results":"163","hashOfConfig":"154"},{"size":5494,"mtime":1647590682578,"results":"164","hashOfConfig":"154"},{"size":15307,"mtime":1653561737751,"results":"165","hashOfConfig":"154"},{"size":1960,"mtime":1633691732548,"results":"166","hashOfConfig":"154"},{"size":4771,"mtime":1620977886735,"results":"167","hashOfConfig":"154"},{"size":5869,"mtime":1633691731296,"results":"168","hashOfConfig":"154"},{"size":32347,"mtime":1653561737904,"results":"169","hashOfConfig":"154"},{"size":54658,"mtime":1653561737913,"results":"170","hashOfConfig":"154"},{"size":1417,"mtime":1633691732209,"results":"171","hashOfConfig":"154"},{"size":14651,"mtime":1638432294735,"results":"172","hashOfConfig":"154"},{"size":6393,"mtime":1649773639497,"results":"173","hashOfConfig":"154"},{"size":14343,"mtime":1645602358564,"results":"174","hashOfConfig":"154"},{"size":16241,"mtime":1644824949463,"results":"175","hashOfConfig":"154"},{"size":1206,"mtime":1633691731293,"results":"176","hashOfConfig":"154"},{"size":3526,"mtime":1633691731295,"results":"177","hashOfConfig":"154"},{"size":2311,"mtime":1653561738000,"results":"178","hashOfConfig":"154"},{"size":1125,"mtime":1614590522410,"results":"179","hashOfConfig":"154"},{"size":12457,"mtime":1653561737739,"results":"180","hashOfConfig":"154"},{"size":480,"mtime":1627641189143,"results":"181","hashOfConfig":"154"},{"size":3981,"mtime":1633691732141,"results":"182","hashOfConfig":"154"},{"size":3135,"mtime":1633691732449,"results":"183","hashOfConfig":"154"},{"size":25449,"mtime":1653561737943,"results":"184","hashOfConfig":"154"},{"size":1191,"mtime":1620977886735,"results":"185","hashOfConfig":"154"},{"size":11242,"mtime":1638432294824,"results":"186","hashOfConfig":"154"},{"size":1846,"mtime":1620977886735,"results":"187","hashOfConfig":"154"},{"size":18610,"mtime":1638432294910,"results":"188","hashOfConfig":"154"},{"size":9926,"mtime":1638432295021,"results":"189","hashOfConfig":"154"},{"size":1208,"mtime":1620977886735,"results":"190","hashOfConfig":"154"},{"size":5513,"mtime":1649773951989,"results":"191","hashOfConfig":"154"},{"size":6983,"mtime":1633691731844,"results":"192","hashOfConfig":"154"},{"size":3773,"mtime":1627026148377,"results":"193","hashOfConfig":"154"},{"size":1195,"mtime":1623664277542,"results":"194","hashOfConfig":"154"},{"size":8394,"mtime":1633691732596,"results":"195","hashOfConfig":"154"},{"size":1201,"mtime":1623664277576,"results":"196","hashOfConfig":"154"},{"size":1521,"mtime":1633691732388,"results":"197","hashOfConfig":"154"},{"size":1191,"mtime":1623664277544,"results":"198","hashOfConfig":"154"},{"size":7982,"mtime":1653561737893,"results":"199","hashOfConfig":"154"},{"size":1569,"mtime":1633691731968,"results":"200","hashOfConfig":"154"},{"size":1966,"mtime":1638432404896,"results":"201","hashOfConfig":"154"},{"size":2047,"mtime":1634217883637,"results":"202","hashOfConfig":"154"},{"size":12905,"mtime":1638432295056,"results":"203","hashOfConfig":"154"},{"size":7059,"mtime":1634288017224,"results":"204","hashOfConfig":"154"},{"size":7240,"mtime":1638432294800,"results":"205","hashOfConfig":"154"},{"size":6752,"mtime":1653561737771,"results":"206","hashOfConfig":"154"},{"size":1532,"mtime":1633691732391,"results":"207","hashOfConfig":"154"},{"size":4279,"mtime":1627026148294,"results":"208","hashOfConfig":"154"},{"size":5327,"mtime":1653561737777,"results":"209","hashOfConfig":"154"},{"size":13186,"mtime":1638432295044,"results":"210","hashOfConfig":"154"},{"size":12851,"mtime":1638432295027,"results":"211","hashOfConfig":"154"},{"size":7226,"mtime":1638432294850,"results":"212","hashOfConfig":"154"},{"size":6741,"mtime":1653561737786,"results":"213","hashOfConfig":"154"},{"size":1536,"mtime":1633691732397,"results":"214","hashOfConfig":"154"},{"size":5338,"mtime":1653561737881,"results":"215","hashOfConfig":"154"},{"size":1528,"mtime":1633691732329,"results":"216","hashOfConfig":"154"},{"size":7304,"mtime":1638432294737,"results":"217","hashOfConfig":"154"},{"size":5307,"mtime":1653561737729,"results":"218","hashOfConfig":"154"},{"size":6730,"mtime":1653561737733,"results":"219","hashOfConfig":"154"},{"size":4194,"mtime":1627026148307,"results":"220","hashOfConfig":"154"},{"size":12908,"mtime":1638432295033,"results":"221","hashOfConfig":"154"},{"size":4755,"mtime":1638432295147,"results":"222","hashOfConfig":"154"},{"size":28137,"mtime":1653561738062,"results":"223","hashOfConfig":"154"},{"size":2685,"mtime":1633691732772,"results":"224","hashOfConfig":"154"},{"size":8201,"mtime":1653561737767,"results":"225","hashOfConfig":"154"},{"size":4555,"mtime":1649072775130,"results":"226","hashOfConfig":"154"},{"size":8194,"mtime":1653561737901,"results":"227","hashOfConfig":"154"},{"size":4507,"mtime":1638432294829,"results":"228","hashOfConfig":"154"},{"size":18479,"mtime":1653561737999,"results":"229","hashOfConfig":"154"},{"size":4494,"mtime":1638432294740,"results":"230","hashOfConfig":"154"},{"size":8156,"mtime":1653561737769,"results":"231","hashOfConfig":"154"},{"size":1905,"mtime":1627026147654,"results":"232","hashOfConfig":"154"},{"size":17020,"mtime":1653561737884,"results":"233","hashOfConfig":"154"},{"size":4202,"mtime":1627026148376,"results":"234","hashOfConfig":"154"},{"size":4206,"mtime":1627026148295,"results":"235","hashOfConfig":"154"},{"size":4210,"mtime":1627026148308,"results":"236","hashOfConfig":"154"},{"size":4199,"mtime":1627026148267,"results":"237","hashOfConfig":"154"},{"size":4195,"mtime":1627026148238,"results":"238","hashOfConfig":"154"},{"size":4219,"mtime":1627026148308,"results":"239","hashOfConfig":"154"},{"size":4248,"mtime":1627376032138,"results":"240","hashOfConfig":"154"},{"size":12480,"mtime":1653561737744,"results":"241","hashOfConfig":"154"},{"size":7332,"mtime":1634217883718,"results":"242","hashOfConfig":"154"},{"size":4492,"mtime":1638432294912,"results":"243","hashOfConfig":"154"},{"size":3730,"mtime":1644832367307,"results":"244","hashOfConfig":"154"},{"size":5500,"mtime":1653561737940,"results":"245","hashOfConfig":"154"},{"size":1527,"mtime":1633691732448,"results":"246","hashOfConfig":"154"},{"size":5311,"mtime":1638432294911,"results":"247","hashOfConfig":"154"},{"size":4499,"mtime":1638432294822,"results":"248","hashOfConfig":"154"},{"size":5608,"mtime":1628690074585,"results":"249","hashOfConfig":"154"},{"size":8175,"mtime":1653561737764,"results":"250","hashOfConfig":"154"},{"size":5309,"mtime":1653561737748,"results":"251","hashOfConfig":"154"},{"size":1526,"mtime":1633691732374,"results":"252","hashOfConfig":"154"},{"size":6762,"mtime":1638432294820,"results":"253","hashOfConfig":"154"},{"size":7203,"mtime":1638432294805,"results":"254","hashOfConfig":"154"},{"size":71984,"mtime":1649773984879,"results":"255","hashOfConfig":"154"},{"size":6385,"mtime":1653561737719,"results":"256","hashOfConfig":"154"},{"size":797,"mtime":1633691732053,"results":"257","hashOfConfig":"154"},{"size":3355,"mtime":1653561737782,"results":"258","hashOfConfig":"154"},{"size":748,"mtime":1633691732051,"results":"259","hashOfConfig":"154"},{"size":6028,"mtime":1653561738088,"results":"260","hashOfConfig":"154"},{"size":94218,"mtime":1653561738064,"results":"261","hashOfConfig":"154"},{"size":28138,"mtime":1644832367323,"results":"262","hashOfConfig":"154"},{"size":54119,"mtime":1653561737762,"results":"263","hashOfConfig":"154"},{"size":15156,"mtime":1634634466250,"results":"264","hashOfConfig":"154"},{"size":5844,"mtime":1638432294757,"results":"265","hashOfConfig":"154"},{"size":15129,"mtime":1651654704638,"results":"266","hashOfConfig":"154"},{"size":3916,"mtime":1653561737998,"results":"267","hashOfConfig":"154"},{"size":4706,"mtime":1634217883726,"results":"268","hashOfConfig":"154"},{"size":3106,"mtime":1638432295019,"results":"269","hashOfConfig":"154"},{"size":16627,"mtime":1653561737849,"results":"270","hashOfConfig":"154"},{"size":5709,"mtime":1653561737790,"results":"271","hashOfConfig":"154"},{"size":11655,"mtime":1653561737846,"results":"272","hashOfConfig":"154"},{"size":10520,"mtime":1653561737898,"results":"273","hashOfConfig":"154"},{"size":3104,"mtime":1638432295021,"results":"274","hashOfConfig":"154"},{"size":3904,"mtime":1638432295092,"results":"275","hashOfConfig":"154"},{"size":812,"mtime":1638432294904,"results":"276","hashOfConfig":"154"},{"size":5847,"mtime":1653561737884,"results":"277","hashOfConfig":"154"},{"size":6962,"mtime":1653561738007,"results":"278","hashOfConfig":"154"},{"size":23666,"mtime":1653561738069,"results":"279","hashOfConfig":"154"},{"size":86829,"mtime":1653561737999,"results":"280","hashOfConfig":"154"},{"size":4465,"mtime":1638432294985,"results":"281","hashOfConfig":"154"},{"size":3340,"mtime":1638432294973,"results":"282","hashOfConfig":"154"},{"size":5786,"mtime":1638432294962,"results":"283","hashOfConfig":"154"},{"size":5786,"mtime":1638432295010,"results":"284","hashOfConfig":"154"},{"size":5786,"mtime":1638432295010,"results":"285","hashOfConfig":"154"},{"size":5825,"mtime":1645445924126,"results":"286","hashOfConfig":"154"},{"size":9332,"mtime":1653561737954,"results":"287","hashOfConfig":"154"},{"size":9072,"mtime":1653561737946,"results":"288","hashOfConfig":"154"},{"size":8901,"mtime":1653561737936,"results":"289","hashOfConfig":"154"},{"size":9010,"mtime":1653561737950,"results":"290","hashOfConfig":"154"},{"size":8334,"mtime":1653561737987,"results":"291","hashOfConfig":"154"},{"size":7233,"mtime":1653561737945,"results":"292","hashOfConfig":"154"},{"size":13665,"mtime":1653561738066,"results":"293","hashOfConfig":"154"},{"size":2261,"mtime":1647527144974,"results":"294","hashOfConfig":"154"},{"size":7187,"mtime":1647530355456,"results":"295","hashOfConfig":"154"},{"size":2092,"mtime":1647592382016,"results":"296","hashOfConfig":"154"},{"size":6045,"mtime":1653561737938,"results":"297","hashOfConfig":"154"},{"size":15932,"mtime":1653561737918,"results":"298","hashOfConfig":"154"},{"size":13848,"mtime":1653561737784,"results":"299","hashOfConfig":"154"},{"size":8481,"mtime":1653561737935,"results":"300","hashOfConfig":"154"},{"size":7297,"mtime":1653561737855,"results":"301","hashOfConfig":"154"},{"size":27042,"mtime":1653561737985,"results":"302","hashOfConfig":"154"},{"size":15922,"mtime":1653561737834,"results":"303","hashOfConfig":"154"},{"size":86707,"mtime":1653561738087,"results":"304","hashOfConfig":"154"},{"size":32352,"mtime":1653561737933,"results":"305","hashOfConfig":"154"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},"1eahr2m",{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"308"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"308"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"339"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"308"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"308"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"308"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"308"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"308"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"308"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"308"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"308"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"537","messages":"538","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"308"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"308"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"308"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"574","messages":"575","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"308"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"308"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"628","messages":"629","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\index.js",[],["630","631"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\App.js",["632"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\home\\home.js",["633","634"],"import NavBar from '../../components/navBar/navBar';\r\nimport MenuList from '../../components/menuList/menuList';\r\nimport React, { useState , useEffect} from 'react'\r\nimport './home.css'\r\nimport LoadingScreen3D from '../../components/loadingScreen3D/loadingScreen3D';\r\nimport GreenCircle from \"../../assets/images/green_circle.png\"\r\nimport BlueCircle from \"../../assets/images/blue_circle.png\"\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\n\r\n//Página de home con el menú para ir a las aplicaciones de isotracker\r\n\r\nconst Home = () =>{\r\n\r\n    const [content, setContent] = useState();\r\n    const [navBar, setNavBar] = useState(null);\r\n    const [circles, setCircles] = useState(null);\r\n\r\n    const history = useHistory()\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if(!secureStorage.getItem(\"user\")){\r\n            history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n\r\n        setContent(<LoadingScreen3D progress={\"25\"}/>)\r\n        setTimeout(() => {\r\n            setContent(<LoadingScreen3D progress={\"75\"}/>)\r\n        }, 1000)\r\n        setTimeout(() => {\r\n            setContent(<LoadingScreen3D progress={\"100\"}/>)\r\n        }, 2000)\r\n        setTimeout(() => {\r\n            setNavBar(<NavBar/>)\r\n            setContent(<MenuList/>)    \r\n            setCircles(<div><img src={GreenCircle} alt=\"greenCircle\" className=\"greenCircle__image\"/>\r\n            <img src={BlueCircle} alt=\"blueCircle\" className=\"blueCircle__image\"/></div>)        \r\n        }, 2300);\r\n\r\n        const body = {\r\n            user: secureStorage.getItem(\"user\"),\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n\r\n          \r\n    }, [])\r\n\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    document.body.style.zoom = 0.8\r\n\r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: secureStorage.getItem(\"user\"),\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n\r\n    return(\r\n        <body>\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            {circles}\r\n            <div>\r\n                {navBar}\r\n                {content}\r\n            </div>\r\n        </body>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\welcome\\welcome.js",[],["635","636"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\register\\register.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBtns\\reportBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\datatable\\datatable.js",["637","638"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\stateTable\\stateTable.js",["639","640","641"],"//Tabla de estado de IsoTracker\r\n\r\nimport \"./stateTable.css\"\r\nimport React, { useState , useEffect} from 'react'\r\n\r\nconst StateTable = props =>{\r\n\r\n    const [designR0, setDesignR0] = useState(0)\r\n    const [designR1, setDesignR1] = useState(0)\r\n    const [designR2, setDesignR2] = useState(0)\r\n    const [designHold, setDesignHold] = useState(0)\r\n    const [designDeleted, setDesignDeleted] = useState(0)\r\n    const [designStock, setDesignStock] = useState(0)\r\n    const [stressR0, setStressR0] = useState(0)\r\n    const [stressR1, setStressR1] = useState(0)\r\n    const [stressR2, setStressR2] = useState(0)\r\n    const [stressHold, setStressHold] = useState(0)\r\n    const [stressDeleted, setStressDeleted] = useState(0)\r\n    const [stressStock, setStressStock] = useState(0)\r\n    const [supportsR0, setSupportsR0] = useState(0)\r\n    const [supportsR1, setSupportsR1] = useState(0)\r\n    const [supportsR2, setSupportsR2] = useState(0)\r\n    const [supportsHold, setSupportsHold] = useState(0)\r\n    const [supportsDeleted, setSupportsDeleted] = useState(0)\r\n    const [supportsStock, setSupportsStock] = useState(0)\r\n    const [materialsR0, setMaterialsR0] = useState(0)\r\n    const [materialsR1, setMaterialsR1] = useState(0)\r\n    const [materialsR2, setMaterialsR2] = useState(0)\r\n    const [materialsHold, setMaterialsHold] = useState(0)\r\n    const [materialsDeleted, setMaterialsDeleted] = useState(0)\r\n    const [materialsStock, setMaterialsStock] = useState(0)\r\n    const [issuerR0, setIssuerR0] = useState(0)\r\n    const [issuerR1, setIssuerR1] = useState(0)\r\n    const [issuerR2, setIssuerR2] = useState(0)\r\n    const [issuerHold, setIssuerHold] = useState(0)\r\n    const [issuerDeleted, setIssuerDeleted] = useState(0)\r\n    const [issuerStock, setIssuerStock] = useState(0)\r\n    const [toIssueR0, setToIssueR0] = useState(0)\r\n    const [toIssueR1, setToIssueR1] = useState(0)\r\n    const [toIssueR2, setToIssueR2] = useState(0)\r\n    const [toIssueHold, setToIssueHold] = useState(0)\r\n    const [toIssueDeleted, setToIssueDeleted] = useState(0)\r\n    const [toIssueStock, setToIssueStock] = useState(0)\r\n    const [issuedR0, setIssuedR0] = useState(0)\r\n    const [issuedR1, setIssuedR1] = useState(0)\r\n    const [issuedR2, setIssuedR2] = useState(0)\r\n    const [issuedDeleted, setIssuedDeleted] = useState(0)\r\n    const [issuedStock, setIssuedStock] = useState(0)\r\n    const [totalR0, setTotalR0] = useState(0)\r\n    const [totalR1, setTotalR1] = useState(0)\r\n    const [totalR2, setTotalR2] = useState(0)\r\n    const [totalHold, setTotalHold] = useState(0)\r\n    const [totalDeleted, setTotalDeleted] = useState(0)\r\n    const [totalStock, setTotalStock] = useState(0)\r\n    const [model, setModel] = useState(0)\r\n\r\n    const [progress, setProgress] = useState(0)\r\n    const [progressIso, setProgressIso] = useState(0)\r\n    \r\n\r\n    const [realProgressTD, setRealProgressTD] = useState()\r\n    const [realProgressIsoTD, setRealProgressIsoTD] = useState()\r\n    const [realProgressTDValue, setRealProgressTDValue] = useState()\r\n    const [realProgressIsoTDValue, setRealProgressIsoTDValue] = useState()\r\n\r\n    const[progressHeader, setProgressHeader] = useState()\r\n    const[progressTD, setProgressTD] = useState()\r\n    const[totalHeader, setTotalHeader] = useState()\r\n    const [totalStockTD, setTotalStockTD] = useState()\r\n\r\n    const [pISOHeaderTD, setpISOHeaderTD] = useState()\r\n    const [pISOValueTD, setpISOValueTD] = useState()\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(async ()=>{\r\n        if(loading){\r\n            if(process.env.REACT_APP_PROGRESS === \"0\"){\r\n                fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/updateStatus\")\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    setDesignR0(json[\"designR0\"])\r\n                    setDesignR1(json[\"designR1\"])\r\n                    setDesignR2(json[\"designR2\"])\r\n                    setDesignHold(json[\"designHold\"])\r\n                    setDesignDeleted(json[\"designDeleted\"])\r\n                    setDesignStock(json[\"designStock\"])\r\n                    setStressR0(json[\"stressR0\"])\r\n                    setStressR1(json[\"stressR1\"])\r\n                    setStressR2(json[\"stressR2\"])\r\n                    setStressHold(json[\"stressHold\"])\r\n                    setStressDeleted(json[\"stressDeleted\"])\r\n                    setStressStock(json[\"stressStock\"])\r\n                    setSupportsR0(json[\"supportsR0\"])\r\n                    setSupportsR1(json[\"supportsR1\"])\r\n                    setSupportsR2(json[\"supportsR2\"])\r\n                    setSupportsHold(json[\"supportsHold\"])\r\n                    setSupportsDeleted(json[\"supportsDeleted\"])\r\n                    setSupportsStock(json[\"supportsStock\"])\r\n                    setMaterialsR0(json[\"materialsR0\"])\r\n                    setMaterialsR1(json[\"materialsR1\"])\r\n                    setMaterialsR2(json[\"materialsR2\"])\r\n                    setMaterialsHold(json[\"materialsHold\"])\r\n                    setMaterialsDeleted(json[\"materialsDeleted\"])\r\n                    setMaterialsStock(json[\"materialsStock\"])\r\n                    setIssuerR0(json[\"issuerR0\"])\r\n                    setIssuerR1(json[\"issuerR1\"])\r\n                    setIssuerR2(json[\"issuerR2\"])\r\n                    setIssuerHold(json[\"issuerHold\"])\r\n                    setIssuerDeleted(json[\"issuerDeleted\"])\r\n                    setIssuerStock(json[\"issuerStock\"])\r\n                    setToIssueR0(json[\"toIssueR0\"])\r\n                    setToIssueR1(json[\"toIssueR1\"])\r\n                    setToIssueR2(json[\"toIssueR2\"])\r\n                    setToIssueHold(json[\"toIssueHold\"])\r\n                    setToIssueDeleted(json[\"toIssueDeleted\"])\r\n                    setToIssueStock(json[\"toIssueStock\"])\r\n                    setIssuedR0(json[\"issuedR0\"])\r\n                    setIssuedR1(json[\"issuedR1\"])\r\n                    setIssuedR2(json[\"issuedR2\"])\r\n                    setIssuedDeleted(json[\"issuedDeleted\"])\r\n                    setIssuedStock(json[\"issuedStock\"])\r\n                    setTotalR0(json[\"totalR0\"])\r\n                    setTotalR1(json[\"totalR1\"])\r\n                    setTotalR2(json[\"totalR2\"])\r\n                    setTotalHold(json[\"totalHold\"])\r\n                    setTotalDeleted(json[\"totalDeleted\"])\r\n                    setTotalStock(json[\"totalStock\"])\r\n                    \r\n                    setTotalHeader(<td  className=\"statusTable__header\" style={{backgroundColor:\"blue\", borderRadius:\"0 1em 0 0\"}}>Total</td>)\r\n                    setTotalStockTD(<td className=\"statusTable__state__stock\" style={{fontWeight:\"bold\", color:\"black\", borderRadius:\"0 0 1em 0\"}}>{totalStock}</td>)\r\n\r\n                    setLoading(false)\r\n                }) \r\n            }else{\r\n                fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/updateStatus\")\r\n                    .then(response => response.json())\r\n                    .then(json => {\r\n                        setDesignR0(json[\"designR0\"])\r\n                    setDesignR1(json[\"designR1\"])\r\n                    setDesignR2(json[\"designR2\"])\r\n                    setDesignHold(json[\"designHold\"])\r\n                    setDesignDeleted(json[\"designDeleted\"])\r\n                    setDesignStock(json[\"designStock\"])\r\n                    setStressR0(json[\"stressR0\"])\r\n                    setStressR1(json[\"stressR1\"])\r\n                    setStressR2(json[\"stressR2\"])\r\n                    setStressHold(json[\"stressHold\"])\r\n                    setStressDeleted(json[\"stressDeleted\"])\r\n                    setStressStock(json[\"stressStock\"])\r\n                    setSupportsR0(json[\"supportsR0\"])\r\n                    setSupportsR1(json[\"supportsR1\"])\r\n                    setSupportsR2(json[\"supportsR2\"])\r\n                    setSupportsHold(json[\"supportsHold\"])\r\n                    setSupportsDeleted(json[\"supportsDeleted\"])\r\n                    setSupportsStock(json[\"supportsStock\"])\r\n                    setMaterialsR0(json[\"materialsR0\"])\r\n                    setMaterialsR1(json[\"materialsR1\"])\r\n                    setMaterialsR2(json[\"materialsR2\"])\r\n                    setMaterialsHold(json[\"materialsHold\"])\r\n                    setMaterialsDeleted(json[\"materialsDeleted\"])\r\n                    setMaterialsStock(json[\"materialsStock\"])\r\n                    setIssuerR0(json[\"issuerR0\"])\r\n                    setIssuerR1(json[\"issuerR1\"])\r\n                    setIssuerR2(json[\"issuerR2\"])\r\n                    setIssuerHold(json[\"issuerHold\"])\r\n                    setIssuerDeleted(json[\"issuerDeleted\"])\r\n                    setIssuerStock(json[\"issuerStock\"])\r\n                    setToIssueR0(json[\"toIssueR0\"])\r\n                    setToIssueR1(json[\"toIssueR1\"])\r\n                    setToIssueR2(json[\"toIssueR2\"])\r\n                    setToIssueHold(json[\"toIssueHold\"])\r\n                    setToIssueDeleted(json[\"toIssueDeleted\"])\r\n                    setToIssueStock(json[\"toIssueStock\"])\r\n                    setIssuedR0(json[\"issuedR0\"])\r\n                    setIssuedR1(json[\"issuedR1\"])\r\n                    setIssuedR2(json[\"issuedR2\"])\r\n                    setIssuedDeleted(json[\"issuedDeleted\"])\r\n                    setIssuedStock(json[\"issuedStock\"])\r\n                    setTotalR0(json[\"totalR0\"])\r\n                    setTotalR1(json[\"totalR1\"])\r\n                    setTotalR2(json[\"totalR2\"])\r\n                    setTotalHold(json[\"totalHold\"])\r\n                    setTotalDeleted(json[\"totalDeleted\"])\r\n                    setTotalStock(json[\"totalStock\"])\r\n                    setModel(json[\"modelCount\"])\r\n                    }) \r\n                    const options = {\r\n                        method: \"GET\",\r\n                    }\r\n                    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/currentProgressISO\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                         await setProgressIso([json.progressISO, json.realprogressISO])\r\n                    })\r\n                    \r\n                    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/currentProgress\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                         await setProgress([json.progress, json.realprogress])\r\n                    })\r\n                    if(props.currentRole === \"SpecialityLead\"){\r\n                        await setRealProgressTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"#0070ed\"}}>R.P.</td>)\r\n                        await setRealProgressIsoTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"#0070ed\", borderRadius:\"0 1em 0 0\"}}>R.P. ISO</td>)\r\n                        await setRealProgressTDValue(<td rowSpan=\"6\" className=\"statusTable__state\">{progress[1]}%</td>)\r\n                        await setRealProgressIsoTDValue(<td rowSpan=\"6\" className=\"statusTable__state\" style={{borderRadius:\"0 0 1em 0\"}}>{progressIso[1]}%</td>)\r\n                        await setpISOHeaderTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"#0070ed\"}}>P.ISO</td>)\r\n                        await setpISOValueTD(<td rowSpan=\"6\" className=\"statusTable__state\">{progressIso[0]}%</td>)\r\n                    }else{\r\n                        await setRealProgressTD(null)\r\n                        await setRealProgressIsoTD(null)\r\n                        await setRealProgressTDValue(null)\r\n                        await setRealProgressIsoTDValue(null)\r\n                        await setpISOHeaderTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"#0070ed\", borderRadius:\"0 1em 0 0\"}}>P.ISO</td>)\r\n                        await setpISOValueTD(<td rowSpan=\"6\" className=\"statusTable__state\" style={{borderRadius:\"0 0 1em 0\", borderCollapse:\"collapse\"}}>{progressIso[0]}%</td>)\r\n                    }\r\n                    await setProgressHeader(<td  className=\"statusTable__header\" style={{backgroundColor:\"#0070ed\"}}>P.</td>)\r\n                    await setProgressTD(<td rowSpan=\"6\" className=\"statusTable__state\">{progress[0]}%</td> )\r\n                    await setTotalHeader(<td  className=\"statusTable__header\">Total</td>)\r\n                    await setTotalStockTD(<td className=\"statusTable__state__stock\" style={{fontWeight:\"bold\", color:\"black\"}}>{totalStock}</td>)\r\n            }\r\n\r\n            \r\n            await setLoading(false)\r\n        }\r\n        \r\n        \r\n    },[loading])\r\n\r\n    useEffect(async ()=>{\r\n        await setLoading(true)\r\n    }, [props.updateData, props.currentRole])\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <td className=\"statusTable__td\">\r\n            <table className=\"statusTable__table\">\r\n                <tbody className=\"statusTable__body\">\r\n                    <tr>\r\n                        <td  className=\"statusTable__header\" style={{backgroundColor: \"purple\", borderRadius:\"1em 0 0 0\"}}>M:{model}</td>\r\n                        <td  className=\"statusTable__header\" >Design</td>\r\n                        <td  className=\"statusTable__header\" >Stress</td>\r\n                        <td  className=\"statusTable__header\" >Supports</td>\r\n                        <td  className=\"statusTable__header\" >Materials</td>\r\n                        <td  className=\"statusTable__header\" >Issuer</td>\r\n                        <td  className=\"statusTable__header\" >To issue</td>\r\n                        <td  className=\"statusTable__header\" >Issued</td>\r\n                        {totalHeader}\r\n                        {progressHeader}\r\n                        {pISOHeaderTD}\r\n                        {realProgressTD}\r\n                        {realProgressIsoTD}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"white\", color:\"black\", fontWeight:\"bold\"}}>R0</td>\r\n                        <td className=\"statusTable__state\">{designR0}</td>\r\n                        <td className=\"statusTable__state\">{stressR0}</td>\r\n                        <td className=\"statusTable__state\">{supportsR0}</td>\r\n                        <td className=\"statusTable__state\">{materialsR0}</td>\r\n                        <td className=\"statusTable__state\">{issuerR0}</td>\r\n                        <td className=\"statusTable__state\">{toIssueR0}</td>\r\n                        <td className=\"statusTable__state\">{issuedR0}</td>   \r\n                        <td className=\"statusTable__state\">{totalR0}</td>  \r\n                        {progressTD} \r\n                        {pISOValueTD}  \r\n                        {realProgressTDValue}\r\n                        {realProgressIsoTDValue} \r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"#d1ebf7\", color:\"black\", fontWeight:\"bold\"}}>R1</td>\r\n                        <td className=\"statusTable__state_R1\">{designR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{stressR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{supportsR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{materialsR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{issuerR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{toIssueR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{issuedR1}</td>   \r\n                        <td className=\"statusTable__state_R1\">{totalR1}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"white\", color:\"black\", fontWeight:\"bold\"}}>R2</td>\r\n                        <td className=\"statusTable__state_R2\">{designR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{stressR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{supportsR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{materialsR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{issuerR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{toIssueR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{issuedR2}</td>   \r\n                        <td className=\"statusTable__state_R2\">{totalR2}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"#ff3358\", color:\"black\", fontWeight:\"bold\"}}>On hold</td>\r\n                        <td className=\"statusTable__state__hold\">{designHold}</td>\r\n                        <td className=\"statusTable__state__hold\">{stressHold}</td>\r\n                        <td className=\"statusTable__state__hold\">{supportsHold}</td>\r\n                        <td className=\"statusTable__state__hold\">{materialsHold}</td>\r\n                        <td className=\"statusTable__state__hold\">{issuerHold}</td>\r\n                        <td className=\"statusTable__state__hold\">{toIssueHold}</td>\r\n                        <td className=\"statusTable__state__hold\">-</td>   \r\n                        <td className=\"statusTable__state__hold\">{totalHold}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"#C0C0C0\", color:\"black\", fontWeight:\"bold\"}}>Deleted</td>\r\n                        <td className=\"statusTable__state__deleted\">{designDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{stressDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{supportsDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{materialsDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{issuerDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{toIssueDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{issuedDeleted}</td>   \r\n                        <td className=\"statusTable__state__deleted\">{totalDeleted}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"#94dcaa\", borderRadius:\"0 0 0 1em\", color:\"black\", fontWeight:\"bold\", border: \"0px solid black\"}}>Stock</td>\r\n                        <td className=\"statusTable__state__stock\">{designStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{stressStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{supportsStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{materialsStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{issuerStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{toIssueStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{issuedStock}</td>   \r\n                        {totalStockTD}\r\n                  </tr>\r\n                </tbody>\r\n            </table>\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default StateTable;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentBox\\commentBox.js",[],["642","643"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionExtra\\actionExtra.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionBtns\\actionBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\selectPag\\selectPag.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressTable\\progressTable.js",[],["644","645"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\checkInTable\\checkInTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBar\\navBar.js",["646","647","648","649","650"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayTable\\myTrayTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayBtn\\myTrayBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binTable\\binTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBtns\\navBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\statusDataTable\\statusDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\menuList\\menuList.js",["651","652","653","654"],"//Lista que muestra las diferentes aplicaciones de IsoTracker y su progreso\r\n\r\nimport './menuList.css'\r\nimport FileIcon from \"../../assets/images/file-icon.png\"\r\nimport ChartColorIcon from \"../../assets/images/chart-color-icon.png\"\r\nimport PipeIcon from \"../../assets/images/pipe-icon.png\"\r\nimport EquiIcon from \"../../assets/images/equi-icon.png\"\r\nimport StruIcon from \"../../assets/images/stru-icon.png\"\r\nimport ElecIcon from \"../../assets/images/elec-icon.png\"\r\nimport InstIcon from \"../../assets/images/inst-icon.png\"\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst MenuList = () =>{\r\n\r\n    //Existe un estado para cada opción del menu\r\n    const [isoIsShown, setIsoIsShown] = useState(false);\r\n    const [progIsShown, setProgIsShown] = useState(false);\r\n    const [pipeIsShown, setPipeIsShown] = useState(false);\r\n    const [equipIsShown, setEquipIsShown] = useState(false);\r\n    const [civIsShown, setCivIsShown] = useState(false);\r\n    const [instIsShown, setInstIsShown] = useState(false);\r\n    const [elecIsShown, setElecIsShown] = useState(false);\r\n\r\n    const [pipesWeight, setPipesWeight] = useState()\r\n    const [pipesProgress, setPipesProgress] = useState()\r\n    const [pipesProgressWidth, setPipesProgressWidth] = useState()\r\n\r\n    const [equisWeight, setEquisWeight] = useState()\r\n    const [equisProgress, setEquisProgress] = useState()\r\n    const [equisProgressWidth, setEquisProgressWidth] = useState()\r\n\r\n    const [civilsWeight, setCivilsWeight] = useState()\r\n    const [civilsProgress, setCivilsProgress] = useState()\r\n    const [civilsProgressWidth, setCivilsProgressWidth] = useState()\r\n\r\n    const [instsWeight, setInstsWeight] = useState()\r\n    const [instsProgress, setInstsProgress] = useState()\r\n    const [instsProgressWidth, setInstsProgressWidth] = useState()\r\n\r\n    const [elecsWeight, setElecsWeight] = useState()\r\n    const [elecsProgress, setElecsProgress] = useState()\r\n    const [elecsProgressWidth, setElecsProgressWidth] = useState()\r\n\r\n    const [totalWeight, setTotalWeight] = useState()\r\n    const [totalProgress, setTotalProgress] = useState()\r\n    const [totalProgressWidth, setTotalProgressWidth] = useState()\r\n\r\n    const [progressButtons, setProgressButtons] = useState()\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n\r\n    useEffect(async ()=>{\r\n\r\n            if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n            const options = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            }\r\n\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/pipingWeight\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await setPipesWeight(json.weight)\r\n                    await setPipesProgress(json.progress)\r\n                    await setPipesProgressWidth(json.progress + \"%\")\r\n                }\r\n                )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })   \r\n\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/weight\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await setEquisWeight(json.weight)\r\n                    await setEquisProgress(json.progress)\r\n                    await setEquisProgressWidth(json.progress+\"%\")\r\n                }\r\n                )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                }) \r\n                \r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/civils/weight\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await setCivilsWeight(json.weight)\r\n                    await setCivilsProgress(json.progress)\r\n                    await setCivilsProgressWidth(json.progress + \"%\")\r\n                }\r\n                )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                }) \r\n                \r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/instrumentation/weight\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await setInstsWeight(json.weight)\r\n                    await setInstsProgress(json.progress)\r\n                    await setInstsProgressWidth(json.progress + \"%\")\r\n                }\r\n                )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })   \r\n\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/electrical/weight\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await setElecsWeight(json.weight)\r\n                    await setElecsProgress(json.progress)\r\n                    await setElecsProgressWidth(json.progress + \"%\")\r\n                }\r\n                )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })   \r\n                await setTotalWeight(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)\r\n                await setTotalProgress(((pipesWeight/totalWeight) * pipesProgress + (equisWeight/totalWeight) * equisProgress + (civilsWeight/totalWeight) * civilsProgress + (instsWeight/totalWeight) * instsProgress + (elecsWeight/totalWeight) * elecsProgress).toFixed(2))\r\n                await setTotalProgressWidth(totalProgress+\"%\")\r\n            }\r\n        \r\n    },[])   \r\n\r\n    //((pipesWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * pipesProgress + (equisWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * equisProgress + (civilsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * civilsProgress + (instsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * instsProgress + (elecsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * elecsProgress).toFixed(2)\r\n\r\n    useEffect(async() =>{\r\n        if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n            setProgressButtons(<div>\r\n                <div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/3dprogress\"} style={{textDecoration: \"none\"}}>\r\n                    <h4  className=\"panel__icon__container\" onMouseEnter={() => setProgIsShown(true)} onMouseLeave={() => setProgIsShown(false)}><img src={ChartColorIcon} alt=\"chart\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;3D Progress (Weight: {pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight} | 100%)</h4>\r\n                </a>\r\n                <div class=\"progress\" style={{height: \"30px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: ((pipesWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * pipesProgress + (equisWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * equisProgress + (civilsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * civilsProgress + (instsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * instsProgress + (elecsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * elecsProgress).toFixed(2)+\"%\", backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{(pipesProgress*(pipesWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) + equisProgress*(equisWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) + instsProgress*(instsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) + civilsProgress*(civilsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) + elecsProgress*(elecsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight))).toFixed(2)}%</strong>                                         \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/piping\"} style={{textDecoration: \"none\"}}>\r\n                    <h4 className=\"panel__icon__container\" onMouseEnter={() => setPipeIsShown(true)} onMouseLeave={() => setPipeIsShown(false)}><img src={PipeIcon} alt=\"pipe\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;Piping (Weight: {pipesWeight} | {(pipesWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)*100).toFixed(2)}%)</h4>        \r\n                </a>\r\n                <div class=\"progress\" style={{height: \"25px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: pipesProgressWidth, backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{pipesProgress}%</strong>                                       \r\n                    </div>\r\n                </div>          \r\n            </div>\r\n        </div>\r\n        <div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/equipments\"}style={{textDecoration: \"none\"}}>\r\n                    <h4 className=\"panel__icon__container\" onMouseEnter={() => setEquipIsShown(true)} onMouseLeave={() => setEquipIsShown(false)}><img src={EquiIcon} alt=\"equi\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;Equipment (Weight: {equisWeight} | {(equisWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)*100).toFixed(2)}%)</h4>                   \r\n                </a>\r\n                <div class=\"progress\" style={{height: \"25px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: equisProgressWidth, backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{equisProgress}%</strong>                                         \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/civil\"}style={{textDecoration: \"none\"}}>\r\n                    <h4  className=\"panel__icon__container\" onMouseEnter={() => setCivIsShown(true)} onMouseLeave={() => setCivIsShown(false)}><img src={StruIcon} alt=\"stru\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;Civil (Weight: {civilsWeight} | {(civilsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)*100).toFixed(2)}%)</h4> \r\n                </a>\r\n                <div class=\"progress\" style={{height: \"25px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: civilsProgressWidth, backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{civilsProgress}%</strong>                                        \r\n                    </div>\r\n                </div>         \r\n            </div>\r\n        </div>\r\n        <div className=\"panel__content__container\">\r\n            <div >\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/instrumentation\"}style={{textDecoration: \"none\"}} className=\"panel__content__link\">\r\n                    <h4 className=\"panel__icon__container\" onMouseEnter={() => setInstIsShown(true)} onMouseLeave={() => setInstIsShown(false)}><img src={InstIcon} alt= \"inst\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;Instrumentation (Weight: {instsWeight} | {(instsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)*100).toFixed(2)}%)</h4>         \r\n                </a>\r\n                <div class=\"progress\" style={{height: \"25px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: instsProgressWidth, backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{instsProgress}%</strong>                                         \r\n                    </div>\r\n                </div>   \r\n            </div>\r\n        </div>\r\n        <div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/electrical\"} style={{textDecoration: \"none\"}} className=\"panel__content__link\">\r\n                    <h4 className=\"panel__icon__container\" onMouseEnter={() => setElecIsShown(true)} onMouseLeave={() => setElecIsShown(false)}><img src={ElecIcon} alt=\"inst\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;Electrical (Weight: {elecsWeight} | {(elecsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)*100).toFixed(2)}%)</h4>\r\n                </a>\r\n                <div class=\"progress\" style={{height: \"25px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: elecsProgressWidth, backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{elecsProgress}%</strong>                                         \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>   </div>)\r\n        }else{\r\n            setProgressButtons(<div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/isotracker\"} style={{textDecoration: \"none\"}}>\r\n                    <h4 className=\"panel__icon__container\" onMouseEnter={() => setIsoIsShown(true)} onMouseLeave={() => setIsoIsShown(false)} ><img src={FileIcon} alt=\"file\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;IsoTracker</h4>\r\n                    <div className=\"progress__bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                        <span class=\"sr-only\"></span><strong>Open</strong>\r\n                    </div>\r\n                </a> \r\n            </div>\r\n        </div>)\r\n        }\r\n    },[totalProgressWidth, refresh, isoIsShown, progIsShown, pipeIsShown, equipIsShown, civIsShown, instIsShown, elecIsShown])\r\n\r\n    if(!refresh){\r\n        setRefresh(true)\r\n    }\r\n    \r\n\r\n    return(\r\n        <div class=\"panel__container\">\r\n            <div className=\"panel__heading__container\">\r\n                <h4>\r\n                    <text className=\"panel__heading__text\"><strong style={{fontWeight:\"700\"}}>3D</strong>Tracker</text>\r\n                </h4>\r\n            </div>\r\n\r\n            <div className=\"elements__container\">\r\n                <div className=\"menu\">\r\n                    <div className=\"panel__content__container__title\">\r\n                    <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/isotracker\"} style={{textDecoration: \"none\"}}>\r\n                        <h4 className=\"click__text\">Click here to open</h4>\r\n                        <h4 className=\"iso__title__menu\">ISO<text style={{fontWeight:\"100\"}}>Tracker</text></h4>\r\n                        </a>\r\n                    </div>\r\n                        \r\n                    <h4 className=\"disciplines__text\">You can also click any of the items below to check disciplines.</h4>\r\n\r\n                    {progressButtons}\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuList;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binBtn\\binBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\cancelIso\\cancelIso.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadPopUp\\uploadPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\chooseFile\\chooseFile.js",[],["655","656"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\dragAndDrop\\dragAndDrop.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\loginPage\\loginPage.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\login\\login.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\roleDropDown\\roleDropDown.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldTable\\onHoldTable.js",["657","658","659","660","661","662","663","664","665"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldBtn\\onHoldBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\historyDataTable\\historyDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInsBtn\\procInsBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInstTable\\procInstTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadProcInst\\uploadProcInst.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportsBtn\\reportsBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBoxBtns\\reportBoxBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\forceClaimPopUp\\forceClaimPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadReportPopUp\\uploadReportPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\issuedBtn\\issuedBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\changePassword\\changePassword.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressBtn\\progressBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlot\\progressPlot.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledBtn\\modelledBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledDataTable\\modelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\holdComment\\holdComment.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\renamePopUp\\renamePopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentPopUp\\commentPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\equipments\\equipments.js",["666","667","668"],"import \"./equipments.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown'\r\nimport EquipEstimatedDataTable from \"../../components/equipEstimatedDataTable/equipEstimatedDataTable\"\r\nimport EquipModelledDataTable from \"../../components/equipModelledDataTable/equipModelledDataTable\"\r\nimport EquipmentsNavBtns from \"../../components/EquipmentsNavBtns/equipmentsNavBtns\"\r\nimport ProgressPlotEquipments from \"../../components/progressPlotEquipments/progressPlotEquipments\"\r\nimport EquipTypesDataTable from \"../../components/equipTypesDataTable/equipTypesDataTable\"\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport EquipExcel from \"../../components/equipExcel/equipExcel\"\r\nimport EquipExcelEdit from \"../../components/equipExcelEdit/equipExcelEdit\"\r\nimport IsoTrackerLogo from \"../../assets/images/3DTracker.svg\"\r\nimport ExportIcon from \"../../assets/images/downloadicon.png\"\r\nimport EditIcon from \"../../assets/images/edit.png\"\r\nimport AlertF from \"../../components/alert/alert\"\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst Equipments = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const[weight, setWeight] = useState();\r\n    const[progress, setProgress] = useState();\r\n    const[successAlert, setSuccessAlert] = useState(false);\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n\r\n        let options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/weight\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setWeight(json.weight)\r\n                setProgress(json.progress)\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })     \r\n            \r\n            const body = {\r\n                user: currentUser,\r\n            }\r\n            options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n    \r\n                })\r\n            \r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!secureStorage.getItem(\"user\")){\r\n            history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n        }\r\n    }, [])\r\n\r\n    function success(){\r\n        setSuccessAlert(true)\r\n        setTimeout(function () {\r\n            setSuccessAlert(false)\r\n        }, 1000);\r\n    }\r\n\r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n    \r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    var dataTableHeight = \"600px\"\r\n\r\n    document.body.style.zoom = 0.8\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"equip_tab\"))\r\n    if(currentTab === \"\" || currentTab === null){\r\n        setCurrentTab(\"Estimated\")\r\n    }\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n    var table = null\r\n\r\n    let downloadBtn = null\r\n    let adminBtn = null\r\n\r\n    if(currentTab === \"Estimated\"){\r\n        table = <EquipEstimatedDataTable/>\r\n    }else if(currentTab === \"Modelled\"){\r\n        downloadBtn = <button className=\"navBar__button\" onClick={()=>downloadEquipmentModelled()} style={{marginLeft:\"230px\", width:\"115px\"}}><img src={ExportIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Export</p></button>\r\n    \r\n        table = <EquipModelledDataTable/>\r\n    }else if(currentTab === \"Progress\"){\r\n        table = <ProgressPlotEquipments/>\r\n    }else if(currentTab === \"Types\"){\r\n        table = <EquipTypesDataTable/>\r\n    }else if(currentTab === \"Key parameters\"){\r\n        table = <EquipExcel success={success.bind(this)}/>\r\n    }else if(currentTab === \"Edit\"){\r\n        table = <EquipExcelEdit success={success.bind(this)}/>\r\n    }\r\n\r\n    \r\n    if(currentTab === \"Edit\" || currentTab === \"Key parameters\"){\r\n        dataTableHeight = \"600px\"\r\n    }\r\n    \r\n    if(currentRole === \"Project\"){\r\n        if(currentTab === \"Estimated\" || currentTab === \"Edit\"){\r\n            if(currentTab === \"Edit\"){\r\n                adminBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Edit\")} style={{backgroundColor:\"#99C6F8\", marginLeft:\"230px\"}}><img src={EditIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Edit</p></button>\r\n            }else{\r\n                adminBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Edit\")} style={{marginLeft:\"230px\"}}><img src={EditIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Edit</p></button>\r\n            }        }else{\r\n            adminBtn = null\r\n        }\r\n    }\r\n\r\n\r\n    async function downloadEquipmentModelled(){\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadEquipmentModelled/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"AREA\", \"TAG\", \"TYPE\", \"WEIGHT\", \"STATUS\", \"PROGRESS\"]\r\n            exportToExcel(JSON.parse(json), \"Equipment modelled\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n\r\n        let wscols = []\r\n        for(let i = 0; i < headers.length; i++){\r\n            wscols.push({width:35})\r\n        }\r\n\r\n        const ws = XLSX.utils.json_to_sheet(apiData);   \r\n        ws[\"!cols\"] = wscols\r\n        for(let i = 0; i < headers.length; i++){\r\n            ws[header_cells[i]].v = headers[i]\r\n        }\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n    return(\r\n        \r\n        <body>\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n            <div\r\n            className={`alert alert-success ${successAlert ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setSuccessAlert(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div style={{position:\"absolute\", marginTop:\"180px\", marginLeft:\"47%\"}}>\r\n                <i className=\"discipline__title\" style={{fontStyle:\"normal\"}}>Equipment</i>\r\n            </div>\r\n                <div className=\"isotracker__row\">\r\n                  <div className=\"isotracker__column\">\r\n                      <img src={IsoTrackerLogo} alt=\"isoTrackerLogo\" className=\"isoTrackerLogo__image2\"/>\r\n                      \r\n                      <div className=\"roleSelector__containerF\">\r\n                              <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                      </div>\r\n                      \r\n                  </div>\r\n\r\n                  <div className=\"isotracker__column\">\r\n                  \r\n                  <table className=\"equipTable__table\" style={{marginTop:\"270px\", width:\"35%\", marginLeft:\"59%\"}}>\r\n                        <tbody className=\"equipable__body\">\r\n                            <tr>    \r\n                                <td  className=\"equipTable__header\" style={{backgroundColor:\"#338DF1\", borderRadius:\"1em 0 0 0\"}}>Estimated weight</td>\r\n                                <td className=\"equipTable__header\" style={{backgroundColor:\"#338DF1\", borderRadius:\"0 1em 0 0\"}}>Total progress</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"equipTable__state\" style={{borderRadius:\"0 0 0 1em\"}}>{weight}</td>\r\n                                <td className=\"equipTable__state\" style={{borderRadius:\"0 0 1em 0\"}}>{progress}%</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                  </div>               \r\n                  \r\n                  \r\n              </div>\r\n              <table className=\"isotracker__table__container\">\r\n                      <tr className=\"isotracker__table__navBar__container\">\r\n                          <th  colspan=\"2\" className=\"isotracker__table__navBar\">\r\n                            {adminBtn}\r\n                            {downloadBtn}\r\n                          </th>\r\n                      </tr>\r\n                      <tr className=\"isotracker__table__tray__and__table__container\" style={{height: dataTableHeight}}>\r\n                          <td className=\"disciplines__table__trays\">\r\n                              <div className=\"trays__container\">\r\n                                  <p className=\"isotracker__table__trays__group\">Options</p>\r\n                                  <center className=\"equimentsNavBtns__center\">              \r\n                                    <EquipmentsNavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole} discipline = \"Equipment\"/>               \r\n                                    </center>\r\n                              </div>\r\n                          </td>\r\n                          <td className=\"discplines__table__table\" style={{height: dataTableHeight}} >\r\n                              <div  style={{height: dataTableHeight}} className=\"isotracker__table__table__container\">\r\n                                  {table}\r\n                              </div>\r\n                          </td>\r\n                          \r\n                      </tr>\r\n                  </table>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default Equipments;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\EquipmentsNavBtns\\equipmentsNavBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipEstimatedDataTable\\equipEstimatedDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipModelledDataTable\\equipModelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotEquipments\\progressPlotEquipments.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadEquisModelledPopUp\\uploadEquisModelledPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipTypesDataTable\\equipTypesDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\instrumentation\\instrumentation.js",["669","670","671"],"import \"./instrumentation.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown'\r\nimport InstrumentationEstimatedDataTable from \"../../components/instrumentationEstimatedDataTable/instrumentationEstimatedDataTable\"\r\nimport InstrumentationModelledDataTable from \"../../components/instrumentationModelledDataTable/instrumentationModelledDataTable\"\r\nimport EquipmentsNavBtns from \"../../components/EquipmentsNavBtns/equipmentsNavBtns\"\r\nimport ProgressPlotInstrumentation from \"../../components/progressPlotInstrumentation/progressPlotInstrumentation\"\r\nimport InstrumentationTypesDataTable from \"../../components/instrumentationTypesDataTable/instrumentationTypesDataTable\"\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport InstExcel from \"../../components/instExcel/instExcel\"\r\nimport InstExcelEdit from \"../../components/instExcelEdit/instExcelEdit\"\r\nimport IsoTrackerLogo from \"../../assets/images/3DTracker.svg\"\r\nimport ExportIcon from \"../../assets/images/downloadicon.png\"\r\nimport EditIcon from \"../../assets/images/edit.png\"\r\nimport AlertF from \"../../components/alert/alert\"\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst Instrumentation = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const[weight, setWeight] = useState();\r\n    const[progress, setProgress] = useState();\r\n    const[successAlert, setSuccessAlert] = useState(false);\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n\r\n        let options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/instrumentation/weight\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setWeight(json.weight)\r\n                setProgress(json.progress)\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n\r\n            const body = {\r\n                user: currentUser,\r\n            }\r\n            options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n    \r\n                })\r\n            \r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!secureStorage.getItem(\"user\")){\r\n            history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n        }\r\n    }, [])\r\n\r\n    function success(){\r\n        setSuccessAlert(true)\r\n        setTimeout(function () {\r\n            setSuccessAlert(false)\r\n        }, 1000);\r\n    }\r\n    \r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    var dataTableHeight = \"600px\"\r\n\r\n    document.body.style.zoom = 0.8\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"inst_tab\"))\r\n    if(currentTab === \"\" || currentTab === null){\r\n        setCurrentTab(\"Estimated\")\r\n    }\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n    var table = null\r\n\r\n    let downloadBtn = null\r\n    let adminBtn = null\r\n\r\n    if(currentTab === \"Estimated\"){\r\n        table = <InstrumentationEstimatedDataTable/>\r\n    }else if(currentTab === \"Modelled\"){\r\n        downloadBtn = <button className=\"navBar__button\" onClick={()=>downloadInstrumentationModelled()} style={{marginLeft:\"230px\", width:\"115px\", position:\"relative\"}}><img src={ExportIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\" style={{paddingLeft:\"25px\"}}>Export</p></button>\r\n    \r\n        table = <InstrumentationModelledDataTable/>\r\n    }else if(currentTab === \"Progress\"){\r\n        table = <ProgressPlotInstrumentation/>\r\n    }else if(currentTab === \"Types\"){\r\n        table = <InstrumentationTypesDataTable/>\r\n    }else if(currentTab === \"Key parameters\"){\r\n        table = <InstExcel success={success.bind(this)}/>\r\n    }else if(currentTab === \"Edit\"){\r\n        table = <InstExcelEdit success={success.bind(this)}/>\r\n    }\r\n\r\n    \r\n    if(currentTab === \"Edit\" || currentTab === \"Key parameters\"){\r\n        dataTableHeight = \"600px\"\r\n    }\r\n    \r\n    if(currentRole === \"Project\"){\r\n        if(currentTab === \"Estimated\" || currentTab === \"Edit\"){\r\n            if(currentTab === \"Edit\"){\r\n                adminBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Edit\")} style={{backgroundColor:\"#99C6F8\", marginLeft:\"230px\", position:\"relative\"}}><img src={EditIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Edit</p></button>\r\n            }else{\r\n                adminBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Edit\")} style={{marginLeft:\"230px\", position:\"relative\"}}><img src={EditIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Edit</p></button>\r\n            }        }else{\r\n            adminBtn = null\r\n        }\r\n    }\r\n\r\n\r\n    async function downloadInstrumentationModelled(){\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadInstrumentationModelled/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"AREA\", \"TAG\", \"TYPE\", \"WEIGHT\", \"STATUS\", \"PROGRESS\"]\r\n            exportToExcel(JSON.parse(json), \"Instrumentation modelled\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n\r\n        let wscols = []\r\n        for(let i = 0; i < headers.length; i++){\r\n            wscols.push({width:35})\r\n        }\r\n\r\n        const ws = XLSX.utils.json_to_sheet(apiData);   \r\n        ws[\"!cols\"] = wscols\r\n        for(let i = 0; i < headers.length; i++){\r\n            ws[header_cells[i]].v = headers[i]\r\n        }\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n    return(\r\n        \r\n        <body>\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n            <div\r\n            className={`alert alert-success ${successAlert ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setSuccessAlert(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div style={{position:\"absolute\", marginTop:\"180px\", marginLeft:\"46%\"}}>\r\n                <i className=\"discipline__title\" style={{fontStyle:\"normal\"}}>Instrumentation</i>\r\n            </div>\r\n                <div className=\"isotracker__row\">\r\n                  <div className=\"isotracker__column\">\r\n                      <img src={IsoTrackerLogo} alt=\"isoTrackerLogo\" className=\"isoTrackerLogo__image2\"/>\r\n                      \r\n                      <div className=\"roleSelector__containerF\">\r\n                              <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                      </div>\r\n                      \r\n                  </div>\r\n                  \r\n\r\n                  <div className=\"isotracker__column\">\r\n                  \r\n                  <table className=\"equipTable__table\" style={{marginTop:\"270px\", width:\"35%\", marginLeft:\"59%\"}}>\r\n                        <tbody className=\"equipable__body\">\r\n                            <tr>    \r\n                                <td  className=\"equipTable__header\" style={{backgroundColor:\"#338DF1\", borderRadius:\"1em 0 0 0\"}}>Estimated weight</td>\r\n                                <td className=\"equipTable__header\" style={{backgroundColor:\"#338DF1\", borderRadius:\"0 1em 0 0\"}}>Total progress</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"equipTable__state\" style={{borderRadius:\"0 0 0 1em\"}}>{weight}</td>\r\n                                <td className=\"equipTable__state\" style={{borderRadius:\"0 0 1em 0\"}}>{progress}%</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                  </div>               \r\n                  \r\n                  \r\n              </div>\r\n              <table className=\"isotracker__table__container\">\r\n                      <tr className=\"isotracker__table__navBar__container\">\r\n                          <th  colspan=\"2\" className=\"isotracker__table__navBar\">\r\n                            {adminBtn}\r\n                            {downloadBtn}\r\n                          </th>\r\n                      </tr>\r\n                      <tr className=\"isotracker__table__tray__and__table__container\" style={{height: dataTableHeight}}>\r\n                          <td className=\"disciplines__table__trays\">\r\n                              <div className=\"trays__container\">\r\n                                  <p className=\"isotracker__table__trays__group\">Options</p>\r\n                                  <center className=\"equimentsNavBtns__center\">              \r\n                                    <EquipmentsNavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole} discipline = \"Equipment\"/>               \r\n                                    </center>\r\n                              </div>\r\n                          </td>\r\n                          <td className=\"discplines__table__table\" style={{height: dataTableHeight}} >\r\n                              <div  style={{height: dataTableHeight}} className=\"isotracker__table__table__container\">\r\n                                  {table}\r\n                              </div>\r\n                          </td>\r\n                          \r\n                      </tr>\r\n                  </table>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default Instrumentation;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\civil\\civil.js",["672","673","674"],"import \"./civil.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown'\r\nimport EquipmentsNavBtns from \"../../components/EquipmentsNavBtns/equipmentsNavBtns\"\r\nimport ProgressPlotCivils from \"../../components/progressPlotCivils/progressPlotCivils\"\r\nimport CivilEstimatedDataTable from \"../../components/civilEstimatedDataTable/civilEstimatedDataTable\"\r\nimport CivilModelledDataTable from \"../../components/civilModelledDataTable/civilModelledDataTable\"\r\nimport CivilTypesDataTable from \"../../components/civilTypesDataTable/civilTypesDataTable\"\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport CivilExcel from \"../../components/civilExcel/civilExcel\"\r\nimport CivilExcelEdit from \"../../components/civilExcelEdit/civilExcelEdit\"\r\nimport IsoTrackerLogo from \"../../assets/images/3DTracker.svg\"\r\nimport ExportIcon from \"../../assets/images/downloadicon.png\"\r\nimport EditIcon from \"../../assets/images/edit.png\"\r\nimport AlertF from \"../../components/alert/alert\"\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\n\r\n\r\nconst Civil = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const[weight, setWeight] = useState();\r\n    const[progress, setProgress] = useState();\r\n    const[successAlert, setSuccessAlert] = useState(false);\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n\r\n        let options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/civils/weight\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setWeight(json.weight)\r\n                setProgress(json.progress)\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })  \r\n            \r\n            const body = {\r\n                user: currentUser,\r\n            }\r\n            options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n    \r\n                })\r\n            \r\n    },[]);\r\n\r\n    function success(){\r\n        setSuccessAlert(true)\r\n        setTimeout(function () {\r\n            setSuccessAlert(false)\r\n        }, 1000);\r\n    }\r\n\r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n    \r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if(!secureStorage.getItem(\"user\")){\r\n            history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n        }\r\n    }, [])\r\n\r\n    var dataTableHeight = \"600px\"\r\n\r\n    document.body.style.zoom = 0.8\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"civ_tab\"))\r\n    if(currentTab === \"\" || currentTab === null){\r\n        setCurrentTab(\"Estimated\")\r\n    }\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n    var table = null\r\n\r\n    let downloadBtn = null\r\n    let adminBtn = null\r\n\r\n\r\n    if(currentTab === \"Estimated\"){\r\n        table = <CivilEstimatedDataTable/>\r\n    }else if(currentTab === \"Modelled\"){\r\n        downloadBtn = <button className=\"navBar__button\" onClick={()=>downloadCivilsModelled()} style={{marginLeft:\"230px\", width:\"115px\"}}><img src={ExportIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Export</p></button>\r\n    \r\n        table = <CivilModelledDataTable/>\r\n    }else if(currentTab === \"Progress\"){\r\n        table = <ProgressPlotCivils/>\r\n    }else if(currentTab === \"Types\"){\r\n        table = <CivilTypesDataTable/>\r\n    }else if(currentTab === \"Key parameters\"){\r\n        table = <CivilExcel success={success.bind(this)}/>\r\n    }else if(currentTab === \"Edit\"){\r\n        table = <CivilExcelEdit success={success.bind(this)}/>\r\n    }\r\n\r\n    \r\n    if(currentTab === \"Edit\" || currentTab === \"Key parameters\"){\r\n        dataTableHeight = \"600px\"\r\n    }\r\n    \r\n    if(currentRole === \"Project\"){\r\n        if(currentTab === \"Estimated\" || currentTab === \"Edit\"){\r\n            if(currentTab === \"Edit\"){\r\n                adminBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Edit\")} style={{backgroundColor:\"#99C6F8\", marginLeft:\"230px\"}}><img src={EditIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Edit</p></button>\r\n            }else{\r\n                adminBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Edit\")} style={{marginLeft:\"230px\"}}><img src={EditIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Edit</p></button>\r\n            }        }else{\r\n            adminBtn = null \r\n        }\r\n    }\r\n\r\n    async function downloadCivilsModelled(){\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadCivilsModelled/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"AREA\", \"TAG\", \"TYPE\", \"WEIGHT\", \"STATUS\", \"PROGRESS\"]\r\n            exportToExcel(JSON.parse(json), \"Civil modelled\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n\r\n        let wscols = []\r\n        for(let i = 0; i < headers.length; i++){\r\n            wscols.push({width:35})\r\n        }\r\n\r\n        const ws = XLSX.utils.json_to_sheet(apiData);   \r\n        ws[\"!cols\"] = wscols\r\n        for(let i = 0; i < headers.length; i++){\r\n            ws[header_cells[i]].v = headers[i]\r\n        }\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n    return(\r\n        \r\n        <body>\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n            <div\r\n            className={`alert alert-success ${successAlert ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setSuccessAlert(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div style={{position:\"absolute\", marginTop:\"180px\", marginLeft:\"49%\"}}>\r\n                <i className=\"discipline__title\" style={{fontStyle:\"normal\"}}>Civil</i>\r\n            </div>\r\n                <div className=\"isotracker__row\">\r\n                  <div className=\"isotracker__column\">\r\n                      <img src={IsoTrackerLogo} alt=\"isoTrackerLogo\" className=\"isoTrackerLogo__image2\"/>\r\n                      \r\n                      <div className=\"roleSelector__containerF\">\r\n                              <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                      </div>\r\n                      \r\n                  </div>\r\n\r\n                  <div className=\"isotracker__column\">\r\n                  \r\n                  <table className=\"equipTable__table\" style={{marginTop:\"270px\", width:\"35%\", marginLeft:\"59%\"}}>\r\n                        <tbody className=\"equipable__body\">\r\n                            <tr>    \r\n                                <td  className=\"equipTable__header\" style={{backgroundColor:\"#338DF1\", borderRadius:\"1em 0 0 0\"}}>Estimated weight</td>\r\n                                <td className=\"equipTable__header\" style={{backgroundColor:\"#338DF1\", borderRadius:\"0 1em 0 0\"}}>Total progress</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"equipTable__state\" style={{borderRadius:\"0 0 0 1em\"}}>{weight}</td>\r\n                                <td className=\"equipTable__state\" style={{borderRadius:\"0 0 1em 0\"}}>{progress}%</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                  </div>               \r\n                  \r\n                  \r\n              </div>\r\n              <table className=\"isotracker__table__container\">\r\n                      <tr className=\"isotracker__table__navBar__container\">\r\n                          <th  colspan=\"2\" className=\"isotracker__table__navBar\">\r\n                            {adminBtn}\r\n                            {downloadBtn}\r\n                          </th>\r\n                      </tr>\r\n                      <tr className=\"isotracker__table__tray__and__table__container\" style={{height: dataTableHeight}}>\r\n                          <td className=\"disciplines__table__trays\">\r\n                              <div className=\"trays__container\">\r\n                                  <p className=\"isotracker__table__trays__group\">Options</p>\r\n                                  <center className=\"equimentsNavBtns__center\">              \r\n                                    <EquipmentsNavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole} discipline = \"Equipment\"/>               \r\n                                    </center>\r\n                              </div>\r\n                          </td>\r\n                          <td className=\"discplines__table__table\" style={{height: dataTableHeight}} >\r\n                              <div  style={{height: dataTableHeight}} className=\"isotracker__table__table__container\">\r\n                                  {table}\r\n                              </div>\r\n                          </td>\r\n                          \r\n                      </tr>\r\n                  </table>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default Civil;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationEstimatedDataTable\\instrumentationEstimatedDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationModelledDataTable\\instrumentationModelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotInstrumentation\\progressPlotInstrumentation.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationTypesDataTable\\instrumentationTypesDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotCivils\\progressPlotCivils.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilEstimatedDataTable\\civilEstimatedDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilTypesDataTable\\civilTypesDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilModelledDataTable\\civilModelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadEquisEstimatedPopUp\\uploadEquisEstimatedPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\electrical\\electrical.js",["675","676","677"],"import \"./electrical.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown'\r\nimport EquipmentsNavBtns from \"../../components/EquipmentsNavBtns/equipmentsNavBtns\"\r\nimport ElectricalEstimatedDataTable from \"../../components/electricalEstimatedDataTable/electricalEstimatedDataTable\"\r\nimport ElectricalModelledDataTable from \"../../components/electricalModelledDataTable/electricalModelledDataTable\"\r\nimport ProgressPlotElecs from \"../../components/progresPlotElecs/progressPlotElecs\"\r\nimport ElecTypesDataTable from \"../../components/elecTypesDataTable/elecTypesDataTable\"\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport ElecExcel from \"../../components/elecExcel/elecExcel\"\r\nimport ElecExcelEdit from \"../../components/elecExcelEdit/elecExcelEdit\"\r\nimport IsoTrackerLogo from \"../../assets/images/3DTracker.svg\"\r\nimport ExportIcon from \"../../assets/images/downloadicon.png\"\r\nimport EditIcon from \"../../assets/images/edit.png\"\r\nimport AlertF from \"../../components/alert/alert\"\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst Electrical = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const[weight, setWeight] = useState();\r\n    const[progress, setProgress] = useState();\r\n    const[successAlert, setSuccessAlert] = useState(false);\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n\r\n        let options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/electrical/weight\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setWeight(json.weight)\r\n                setProgress(json.progress)\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })     \r\n            \r\n            const body = {\r\n                user: currentUser,\r\n            }\r\n            options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n    \r\n                })\r\n            \r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(!secureStorage.getItem(\"user\")){\r\n            history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n        }\r\n    }, [])\r\n\r\n    function success(){\r\n        setSuccessAlert(true)\r\n        setTimeout(function () {\r\n            setSuccessAlert(false)\r\n        }, 1000);\r\n    }\r\n    \r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    var dataTableHeight = \"600px\"\r\n\r\n    document.body.style.zoom = 0.8\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"elec_tab\"))\r\n    if(currentTab === \"\" || currentTab === null){\r\n        setCurrentTab(\"Estimated\")\r\n    }\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n    var table = null\r\n\r\n    let downloadBtn = null\r\n    let adminBtn = null\r\n\r\n\r\n    if(currentTab === \"Estimated\"){\r\n        table = <ElectricalEstimatedDataTable/>\r\n    }else if(currentTab === \"Modelled\"){\r\n        downloadBtn = <button className=\"navBar__button\" onClick={()=>downloadCivilsModelled()} style={{marginLeft:\"230px\", width:\"115px\"}}><img src={ExportIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Export</p></button>\r\n    \r\n        table = <ElectricalModelledDataTable/>\r\n    }else if(currentTab === \"Progress\"){\r\n        table = <ProgressPlotElecs/>\r\n    }else if(currentTab === \"Types\"){\r\n        table = <ElecTypesDataTable/>\r\n    }else if(currentTab === \"Key parameters\"){\r\n        table = <ElecExcel success={success.bind(this)}/>\r\n    }else if(currentTab === \"Edit\"){\r\n        table = <ElecExcelEdit success={success.bind(this)}/>\r\n    }\r\n\r\n    \r\n    if(currentTab === \"Edit\" || currentTab === \"Key parameters\"){\r\n        dataTableHeight = \"600px\"\r\n    }\r\n    \r\n    if(currentRole === \"Project\"){\r\n        if(currentTab === \"Estimated\" || currentTab === \"Edit\"){\r\n            if(currentTab === \"Edit\"){\r\n                adminBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Edit\")} style={{backgroundColor:\"#99C6F8\", marginLeft:\"230px\"}}><img src={EditIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Edit</p></button>\r\n            }else{\r\n                adminBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Edit\")} style={{marginLeft:\"230px\"}}><img src={EditIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Edit</p></button>\r\n            }        }else{\r\n            adminBtn = null\r\n        }\r\n    }\r\n\r\n\r\n    async function downloadCivilsModelled(){\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadElectricalModelled/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"AREA\", \"TAG\", \"TYPE\", \"WEIGHT\", \"STATUS\", \"PROGRESS\"]\r\n            exportToExcel(JSON.parse(json), \"Electrical modelled\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n\r\n        let wscols = []\r\n        for(let i = 0; i < headers.length; i++){\r\n            wscols.push({width:35})\r\n        }\r\n\r\n        const ws = XLSX.utils.json_to_sheet(apiData);   \r\n        ws[\"!cols\"] = wscols\r\n        for(let i = 0; i < headers.length; i++){\r\n            ws[header_cells[i]].v = headers[i]\r\n        }\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n    return(\r\n        \r\n        <body>\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n            <div\r\n            className={`alert alert-success ${successAlert ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setSuccessAlert(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div style={{position:\"absolute\", marginTop:\"180px\", marginLeft:\"47%\"}}>\r\n                <i className=\"discipline__title\" style={{fontStyle:\"normal\"}}>Electrical</i>\r\n            </div>\r\n                <div className=\"isotracker__row\">\r\n                  <div className=\"isotracker__column\">\r\n                      <img src={IsoTrackerLogo} alt=\"isoTrackerLogo\" className=\"isoTrackerLogo__image2\"/>\r\n                      \r\n                      <div className=\"roleSelector__containerF\">\r\n                              <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                      </div>\r\n                      \r\n                  </div>\r\n\r\n                  <div className=\"isotracker__column\">\r\n                  \r\n                  <table className=\"equipTable__table\" style={{marginTop:\"270px\", width:\"35%\", marginLeft:\"59%\"}}>\r\n                        <tbody className=\"equipable__body\">\r\n                            <tr>    \r\n                                <td  className=\"equipTable__header\" style={{backgroundColor:\"#338DF1\", borderRadius:\"1em 0 0 0\"}}>Estimated weight</td>\r\n                                <td className=\"equipTable__header\" style={{backgroundColor:\"#338DF1\", borderRadius:\"0 1em 0 0\"}}>Total progress</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"equipTable__state\" style={{borderRadius:\"0 0 0 1em\"}}>{weight}</td>\r\n                                <td className=\"equipTable__state\" style={{borderRadius:\"0 0 1em 0\"}}>{progress}%</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                  </div>               \r\n                  \r\n                  \r\n              </div>\r\n              <table className=\"isotracker__table__container\">\r\n                      <tr className=\"isotracker__table__navBar__container\">\r\n                          <th  colspan=\"2\" className=\"isotracker__table__navBar\">\r\n                            {adminBtn}\r\n                            {downloadBtn}\r\n                          </th>\r\n                      </tr>\r\n                      <tr className=\"isotracker__table__tray__and__table__container\" style={{height: dataTableHeight}}>\r\n                          <td className=\"disciplines__table__trays\">\r\n                              <div className=\"trays__container\">\r\n                                  <p className=\"isotracker__table__trays__group\">Options</p>\r\n                                  <center className=\"equimentsNavBtns__center\">              \r\n                                    <EquipmentsNavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole} discipline = \"Equipment\"/>               \r\n                                    </center>\r\n                              </div>\r\n                          </td>\r\n                          <td className=\"discplines__table__table\" style={{height: dataTableHeight}} >\r\n                              <div  style={{height: dataTableHeight}} className=\"isotracker__table__table__container\">\r\n                                  {table}\r\n                              </div>\r\n                          </td>\r\n                          \r\n                      </tr>\r\n                  </table>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default Electrical;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\progressCurve\\progressCurve.js",["678","679","680"],"import \"./progressCurve.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport ProgressPlotCurve from \"../../components/progressPlotCurve/progressPlotCurve\"\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst Civil = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    const [currentRole, setCurrentRole] = useState();\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n    },[])\r\n\r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_APP_PROJECT)\r\n    }\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if(!secureStorage.getItem(\"user\")){\r\n            history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n        }\r\n    }, [])\r\n\r\n    var dataTableHeight = \"550px\"\r\n\r\n\r\n    document.body.style.zoom = 0.8\r\n    document.title= process.env.REACT_APP_PROJECT\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"civ_tab\"))\r\n    if(currentTab === \"\" || currentTab === null){\r\n        setCurrentTab(\"Estimated\")\r\n    }\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n    var table = null\r\n\r\n    table = <ProgressPlotCurve/>\r\n\r\n\r\n\r\n    return(\r\n        \r\n        <body>\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar/>\r\n            <div className=\"equipments__container\">  \r\n                <center>\r\n                    <h2 className=\"title__container\">\r\n\r\n                        <b >      \r\n                            <i className=\"iso__title\">Progress curve</i>\r\n                        </b>\r\n                    </h2>\r\n                    <h3 className=\"iso__subtitle\">3D Progress</h3>\r\n                </center>\r\n\r\n\r\n                <div style={{height: dataTableHeight}}>\r\n                    <br></br>\r\n                    <br></br> \r\n                    <br></br> \r\n                    {table}\r\n                </div>         \r\n            </div>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default Civil;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\piping\\piping.js",["681","682","683","684","685","686","687"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\navis\\navis.js",["688"],"import React, { useState , useEffect} from 'react'\r\nimport NavisTable from '../../components/navisTable/navisTable';\r\nimport \"./navis.css\"\r\n\r\nconst Navis = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    const [currentRole, setCurrentRole] = useState();\r\n    \r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n\r\n\r\n    document.body.style.zoom = 0.8\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"civ_tab\"))\r\n    if(currentTab === \"\" || currentTab === null){\r\n        setCurrentTab(\"Estimated\")\r\n    }\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n    var table = null\r\n\r\n\r\n    table = <NavisTable/>\r\n\r\n    \r\n\r\n    return(\r\n        \r\n        <body>\r\n            <div className=\"navis__container\">  \r\n                <div>\r\n                    <br></br>\r\n                    <br></br> \r\n\r\n                    <br></br> \r\n                    {table}\r\n                </div>         \r\n            </div>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default Navis;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipExcel\\equipExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipExcelEdit\\equipExcelEdit.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instExcel\\instExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instExcelEdit\\instExcelEdit.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\usersDataTable\\usersDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilExcelEdit\\civilExcelEdit.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilExcel\\civilExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\deleteUserConfPopUp\\deleteUserConfPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\manageRolesPopUp\\manageRolesPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadPipesEstimatedPopUp\\uploadPipesEstimatedPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadElectricalModelledPopUp\\uploadElectricalModelledPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadElectricalEstimatedPopUp\\uploadElectricalEstimatedPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadCivilEstimtedPopUp\\uploadCivilEstimtedPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadCivilModelledPopUp\\uploadCivilModelledPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadInstrumentationEstimatedPopUp\\uploadInstrumentationEstimatedPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadInstrumentationModelledPopUp\\uploadInstrumentationModelledPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\addUserPopUp\\addUserPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navisTable\\navisTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingExcelEdit\\pipingExcelEdit.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingExcel\\pipingExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingEstimatedDataTable\\pipingEstimatedDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotPiping\\progressPlotPiping.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingTypesDataTable\\pipingTypesDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecExcelEdit\\elecExcelEdit.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotCurve\\progressPlotCurve.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecExcel\\elecExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecTypesDataTable\\elecTypesDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progresPlotElecs\\progressPlotElecs.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\electricalModelledDataTable\\electricalModelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\electricalEstimatedDataTable\\electricalEstimatedDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\isoCtrl\\isoCtrl.js",["689","690","691","692","693"],"import DataTable from \"../../components/datatable/datatable\"\r\nimport ReportBtns from \"../../components/reportBtns/reportBtns\"\r\nimport StateTable from \"../../components/stateTable/stateTable\"\r\nimport NavBtns from \"../../components/navBtns/navBtns\"\r\nimport DragAndDrop from \"../../components/dragAndDrop/dragAndDrop\"\r\nimport \"./isoCtrl.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport ActionButtons from \"../../components/actionBtns/actionBtns\"\r\nimport SelectPag from \"../../components/selectPag/selectPag\"\r\nimport CheckInTable from \"../../components/checkInTable/checkInTable\"\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport MyTrayBtn from \"../../components/myTrayBtn/myTrayBtn\"\r\nimport MyTrayTable from \"../../components/myTrayTable/myTrayTable\"\r\nimport BinBtn from '../../components/binBtn/binBtn'\r\nimport BinTable from \"../../components/binTable/binTable\"\r\nimport OnHoldTable from \"../../components/onHoldTable/onHoldTable\"\r\nimport StatusDataTable from \"../../components/statusDataTable/statusDataTable\"\r\nimport HistoryDataTable from \"../../components/historyDataTable/historyDataTable\"\r\nimport RoleDropDown from \"../../components/roleDropDown/roleDropDown\"\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport OnHoldBtn from \"../../components/onHoldBtn/onHoldBtn\"\r\nimport ProcInsBtn from \"../../components/procInsBtn/procInsBtn\"\r\nimport ReportsBtn from \"../../components/reportsBtn/reportsBtn\"\r\nimport ProcInstTable from \"../../components/procInstTable/procInstTable\"\r\nimport JSZip from 'jszip'\r\nimport { saveAs } from 'file-saver';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport ReportBoxBtns from \"../../components/reportBoxBtns/reportBoxBtns\"\r\nimport IssuedBtn from \"../../components/issuedBtn/issuedBtn\"\r\nimport ProgressBtn from \"../../components/progressBtn/progressBtn\"\r\nimport ProgressPlot from \"../../components/progressPlot/progressPlot\"\r\nimport ModelledBtn from \"../../components/modelledBtn/modelledBtn\"\r\nimport ModelledDataTable from \"../../components/modelledDataTable/modelledDataTable\"\r\nimport UsersDataTable from \"../../components/usersDataTable/usersDataTable\"\r\n\r\n\r\nconst IsoCtrl = () => {\r\n   \r\n    document.body.style.zoom = 0.9\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const[pagination, setPagination] = useState(8) //Controla el numero de entradas por pagina de la tabla\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const [selected, setSelected] = useState([]);\r\n    const [updateData, setUpdateData] = useState();\r\n    const [comment, setComment] = useState(\" \");\r\n    const [commentAlert, setCommentAlert] = useState(false);\r\n    const [downloadZip, setDownloadzip] = useState(new JSZip());\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorUnclaim, setErrorUnclaim] = useState(false);\r\n    const [errorPI, setErrorPI] = useState(false);\r\n    const [errorCL, setErrorCL] = useState(false);\r\n    const [transactionSuccess, setTransactionSuccess] = useState(false);\r\n    const [errorReports, setErrorReports] = useState(false);\r\n    const [errorUnclaimR, setErrorUnclaimR] = useState(false);\r\n    const [warningSelected, setWarningSelected] = useState(false);\r\n    const [blocked, setBlocked] = useState(false);\r\n    const [errorReportD, setErrorReportD] = useState(false)\r\n    const [errorReportDIndex, setErrorReportDIndex] = useState(0);\r\n    const [errorDeleteUser, setErrorDeleteUser] = useState(false);\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"tab\")) //Controla la tabla y botones que se muestran\r\n    //La altura de la tabla es fija en funcion de la paginacion para evitar que los botones se muevan\r\n    var dataTableHeight = 8\r\n\r\n    if (pagination === 8){\r\n        dataTableHeight = \"550px\"\r\n    }if(pagination === 25){\r\n        dataTableHeight = \"1250px\"\r\n    }if(pagination === 50){\r\n        dataTableHeight = \"2250px\"\r\n    }if(pagination === 100){\r\n        dataTableHeight = \"4330px\"\r\n    }if(pagination === 500){\r\n        dataTableHeight = \"19300px\"\r\n    }\r\n\r\n    //Componentes de la pagina que varian en funcion del estado\r\n    var uploadButton, actionButtons, actionText, commentBox, tableContent, procInsBtn, progressBtn, modelledBtn, myTrayBtn, usersButton\r\n    var currentTabText = currentTab\r\n    if(currentTabText === \"LDE/IsoControl\"){\r\n        currentTabText = \"LOS/IsoControl\"\r\n    }\r\n    tableContent = <DataTable forceUnclaim = {forceUnclaim.bind(this)} onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} currentRole={currentRole} updateData = {updateData} unlock = {unlock.bind(this)} rename = {rename.bind(this)}/>\r\n    var pageSelector = <SelectPag onChange={value => setPagination(value)} pagination = {pagination}/>\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    \r\n    \r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            setErrorPI(false)\r\n            setErrorUnclaimR(false)\r\n            setErrorCL(false)\r\n            setUpdateData(!updateData)\r\n            setTransactionSuccess(false);\r\n            setErrorUnclaim(false)\r\n            setErrorReports(false)\r\n            setLoading(false)\r\n            setWarningSelected(false)\r\n            setBlocked(false)\r\n            setErrorReportD(false)\r\n            setErrorDeleteUser(false)\r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n        setErrorUnclaimR(false)\r\n        setErrorPI(false);\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false)\r\n        setErrorUnclaim(false)\r\n        setLoading(false)\r\n        setErrorReports(false)\r\n        setSelected([])\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n    }, [currentTab])\r\n\r\n    const getProgress = () =>{\r\n        setUpdateData(!updateData)\r\n\r\n    }\r\n\r\n    const claim = async(event) => {\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setWarningSelected(false)\r\n        setErrorPI(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if(currentTab === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claimProc\", options)\r\n                }\r\n            }else if(currentTab === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claim\", options)\r\n                }\r\n            \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n            \r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n     \r\n    }   \r\n    \r\n    const forceClaim = async(username) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : username,\r\n                    file: selected[i],\r\n                    los: currentUser\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/forceClaim\", options)\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    const unclaim = async (event) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if (currentRole === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaimProc\", options)\r\n                }\r\n            }else if(currentRole === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaim\", options)\r\n                    .then(response => response.json())\r\n                    .then(json=>{\r\n                        if(json.error === \"forced\"){\r\n                            setErrorUnclaim(true)\r\n                        }else if(json.error === \"returned\"){\r\n                            setErrorUnclaimR(true)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                    });\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n        \r\n    }\r\n\r\n    async function forceUnclaim(fileName){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n        const body ={\r\n            user : currentUser,\r\n            file: fileName,\r\n            role: currentRole\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/forceUnclaim\", options)\r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n\r\n    const verifyClick = async(event) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/verify\", options)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function cancelVerifyClick(filename){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: filename,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelVerify\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function transaction(destiny, comments){\r\n        \r\n        if(selected.length > 0){\r\n            setErrorUnclaimR(false)\r\n            setWarningSelected(false)\r\n            setErrorReports(false)\r\n            setErrorCL(false)\r\n            setErrorUnclaim(false)\r\n            setErrorPI(false);\r\n            setTransactionSuccess(false);\r\n            setLoading(true)\r\n            setErrorReportD(false)\r\n            setBlocked(false)\r\n            setErrorDeleteUser(false)\r\n            \r\n            if(destiny === \"Design\"){\r\n                if(comment.length > 1){\r\n                    setComment(\" \")\r\n                    setCommentAlert(false)\r\n                    localStorage.setItem(\"update\", true)\r\n                    for (let i = 0; i < selected.length; i++){\r\n                        const body ={\r\n                            user : currentUser,\r\n                            fileName: selected[i],\r\n                            to: destiny,\r\n                            role: secureStorage.getItem(\"role\"),\r\n                            comment: comment,\r\n                            deleted: 0,\r\n                            onhold: 0\r\n                        }\r\n                        const options = {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            body: JSON.stringify(body)\r\n                        }\r\n                        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                        .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n                        \r\n                    }\r\n                }else{\r\n                    setCommentAlert(true)\r\n                }\r\n            }else if (destiny === \"LDE/Isocontrol\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/piStatus/\"+selected[i], options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                        if(json.sit === 1 || json.sit === 4 || json.sit === 5|| json.spo === 1 || json.spo === 4 || json.spo === 5){\r\n                            localStorage.setItem(\"update\", true)\r\n                            setErrorPI(true);\r\n                            setTransactionSuccess(false);\r\n                        }else{\r\n                            setCommentAlert(false)\r\n                            localStorage.setItem(\"update\", true)\r\n                            let deleted, hold = 0\r\n                    \r\n                            const body ={\r\n                                user : currentUser,\r\n                                fileName: selected[i],\r\n                                to: destiny,\r\n                                role: secureStorage.getItem(\"role\"),\r\n                                comment: null,\r\n                                deleted: deleted,\r\n                                onhold: hold\r\n                            }\r\n                            const options = {\r\n                                method: \"POST\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                },\r\n                                body: JSON.stringify(body)\r\n                            }\r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                            .then(response => response.json())\r\n                            .then(async json=>{\r\n                                if(json.error){\r\n                                    await setErrorCL(true) \r\n                                }else if(json.blocked){\r\n                                    setBlocked(true)\r\n                                }\r\n                            })\r\n                            if(!errorCL && !blocked){\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                            \r\n                        }\r\n                    })\r\n                }\r\n                await setUpdateData(!updateData)\r\n                setLoading(false)\r\n            }else if(destiny === \"On hold\"){\r\n                setCommentAlert(false)\r\n                localStorage.setItem(\"update\", true)\r\n                let deleted, hold = 0\r\n\r\n                if(destiny === \"Recycle bin\"){\r\n                    deleted = 1\r\n                }\r\n\r\n                if(destiny === \"On hold\"){\r\n                    hold = 1\r\n                }\r\n                for (let i = 0; i < selected.length; i++){\r\n                    \r\n                    const body ={\r\n                        user : currentUser,\r\n                        fileName: selected[i],\r\n                        to: destiny,\r\n                        role: secureStorage.getItem(\"role\"),\r\n                        comment: comments,\r\n                        deleted: deleted,\r\n                        onhold: hold\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                    .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n                }\r\n            }else{\r\n                setCommentAlert(false)\r\n                localStorage.setItem(\"update\", true)\r\n                let deleted, hold = 0\r\n\r\n                if(destiny === \"Recycle bin\"){\r\n                    deleted = 1\r\n                }\r\n\r\n                if(destiny === \"On hold\"){\r\n                    hold = 1\r\n                }\r\n                for (let i = 0; i < selected.length; i++){\r\n                    \r\n                    const body ={\r\n                        user : currentUser,\r\n                        fileName: selected[i],\r\n                        to: destiny,\r\n                        role: secureStorage.getItem(\"role\"),\r\n                        comment: null,\r\n                        deleted: deleted,\r\n                        onhold: hold\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                    .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }    \r\n    }\r\n\r\n    async function returnLead(destiny){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setWarningSelected(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setErrorUnclaimR(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                setLoading(true)\r\n                const body ={\r\n                    user : currentUser,\r\n                    fileName: selected[i],\r\n                    to: destiny,\r\n                    from: currentTab\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/returnLead\", options)\r\n                .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n    \r\n    async function returnLeadStress(){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setErrorUnclaimR(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                        \r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    comments: comment\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/returnLeadStress\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    function handleComment(event){\r\n        setComment(event.target.value)\r\n    }\r\n\r\n    async function restore(){\r\n        setErrorReports(false)\r\n        setErrorUnclaimR(false)\r\n        setErrorReportD(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    fileName: selected[i],\r\n                    user: currentUser,\r\n                    role: currentRole,\r\n                    deleted: 0,\r\n                    onhold: 0\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/restore\", options)\r\n                setTransactionSuccess(true)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    function procOrInst(tab) {\r\n        if(tab === \"Process\" || tab === \"Instrument\"){\r\n            setCurrentTab(tab)\r\n        }else if (currentRole === \"Process\"){\r\n            setCurrentTab(\"Process\")\r\n        }else{\r\n            setCurrentTab(\"Instrument\")\r\n        }\r\n    }\r\n\r\n    async function sendProcessClick(fileName){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/process\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendInstrumentClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/instrument\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendCancelProcessClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body ={\r\n            file: fileName,\r\n            user: currentUser,\r\n            role: currentRole,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelProc\", options)\r\n    \r\n        await setUpdateData(!updateData)\r\n        await setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendCancelInstrumentClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setWarningSelected(false)\r\n        setLoading(true)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n        const body ={\r\n            file: fileName,\r\n            user: currentUser,\r\n            role: currentRole\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelInst\", options)\r\n    \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    function updateD(){\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function downloadFiles(){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            /*\r\n            if(selected.length === 1){\r\n                localStorage.setItem(\"update\", true)\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/pdf\"\r\n                        }\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n                    .then(res => res.blob())\r\n                        .then(response =>{\r\n                            console.log(\"Se descarga\")\r\n                            download(new Blob([response]), selected[i], \"application/pdf\")\r\n                        })\r\n                }\r\n            }else if (selected.length > 1){\r\n                localStorage.setItem(\"update\", true)\r\n                for (let i = 0; i < selected.length; i++){\r\n\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/pdf\"\r\n                        }\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n                    .then(res => res.blob())\r\n                        .then(response =>{\r\n                            setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                        })\r\n                }\r\n                const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n                downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n                    saveAs(blob,  zipname)\r\n                })\r\n                \r\n            }\r\n            await setUpdateData(!updateData)\r\n            await setDownloadzip(new JSZip())   \r\n            setLoading(false)\r\n            */\r\n            for (let i = 0; i < selected.length; i++){\r\n\r\n                const options = {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/pdf\"\r\n                    }\r\n                }\r\n                \r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getAttach/\"+selected[i], options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n                    .then(res => res.blob())\r\n                    .then( async response =>{\r\n                        setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                        for(let i = 0; i < json.length; i++){\r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+json[i], options)\r\n                            .then(res => res.blob())\r\n                            .then(response =>{\r\n                                setDownloadzip(downloadZip.file(json[i], new Blob([response]),{binary:true}))   \r\n                            })\r\n                        }\r\n                        \r\n                    })\r\n                })\r\n            \r\n\r\n                \r\n        \r\n            }\r\n            const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n            downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n                saveAs(blob,  zipname)\r\n            })  \r\n            \r\n            await setDownloadzip(new JSZip())   \r\n            //await setAttachFiles(null)\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function downloadHistory(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadHistory/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"FROM\", \"TO\", \"DATE\", \"COMMENT\", \"USER\"]\r\n            exportToExcel(JSON.parse(json), \"Comments\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadStatus(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadStatus/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            let headers = null\r\n            if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n                headers = [\"ISO_ID\", \"START_DATE\", \"CURRENT_DATE\", \"TYPE\", \"CONDITION\", \"TRAY\"]\r\n            }else{\r\n                headers = [\"ISO_ID\", \"START_DATE\", \"CURRENT_DATE\", \"CONDITION\", \"TRAY\"]\r\n            }\r\n            \r\n            exportToExcel(JSON.parse(json), \"Status\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadPI(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadPI/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"PROCESS\", \"INSTRUMENTATION\", \"UPDATED_AT\"]\r\n            exportToExcel(JSON.parse(json), \"IsoStatusSIT-SPO\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadIssued(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadIssued/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"REV0\", \"REV1\", \"REV2\", \"REV3\", \"REV4\"]\r\n            exportToExcel(JSON.parse(json), \"IsoStatusIssued\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadStatus3D(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadStatus3D/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            let output = JSON.stringify(json.log)\r\n            output = output.substring(1,output.length-1)\r\n            output = output.replaceAll(\",\", \"\\n\")\r\n            output = output.replaceAll(/['\"]+/g, \"\")\r\n\r\n\r\n            const data = new Blob([output], { type: 'txt' });\r\n            FileSaver.saveAs(data, \"fromIsoTrackerTo3d.mac\");\r\n        })\r\n    }\r\n\r\n    async function downloadModelled(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadModelled/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"TAG\", \"ISO_ID\", \"TYPE\"]\r\n            exportToExcel(JSON.parse(json), \"Modelled\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        setErrorReports(false)\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n\r\n        let wscols = []\r\n        for(let i = 0; i < headers.length; i++){\r\n            wscols.push({width:35})\r\n        }\r\n\r\n        const ws = XLSX.utils.json_to_sheet(apiData);   \r\n        ws[\"!cols\"] = wscols\r\n        for(let i = 0; i < headers.length; i++){\r\n            ws[header_cells[i]].v = headers[i]\r\n        }\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n    async function setUploading(active){\r\n        setErrorReports(false)\r\n        setErrorReportD(false)\r\n        setLoading(active)\r\n        if(!active){\r\n            setTransactionSuccess(true)\r\n        }\r\n    }\r\n\r\n    async function setErrorReport(){\r\n        setErrorReports(true)\r\n    }\r\n\r\n    async function issue(transmittal, date){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                    transmittal: transmittal,\r\n                    date: date\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/toIssue\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    async function newRev() {\r\n        setErrorReports(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/newRev\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    \r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    async function request() {\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/request\", options)\r\n                \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }\r\n\r\n    }\r\n\r\n    async function returnIso(destiny, comments){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if(comments.length < 1){\r\n                comments = comment\r\n            }\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                    from: currentTab,\r\n                    destiny: destiny,\r\n                    comments: comments\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/returnIso\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n                \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setComment(\"\")\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function success(){\r\n        setTransactionSuccess(true)\r\n    }\r\n\r\n    async function unlock(filename){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            fileName: filename\r\n          }\r\n      \r\n          const options = {\r\n              method: \"POST\",\r\n              headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify(body)\r\n          }\r\n      \r\n          fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unlock\", options)\r\n          .then(response => console.log(\"Unlocked\"))\r\n\r\n          setUpdateData(!updateData)\r\n    }\r\n\r\n    async function rename(newName, oldName){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            oldName: oldName,\r\n            newName: newName\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/rename\", options)\r\n        .then(response => console.log(\"Cambiado\"))\r\n\r\n        setTransactionSuccess(true)\r\n        \r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function setErrorReportData(index){\r\n        setErrorReportD(true)\r\n        setErrorReportDIndex(index)\r\n    }\r\n\r\n    async function addUser(username, email, roles){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            username: username,\r\n            email: email,\r\n            roles: roles\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/createUser\", options)\r\n        .then(response => response.json())\r\n        .then(json =>{\r\n            if(json.success){\r\n                setTransactionSuccess(true)\r\n            }\r\n        })\r\n        setUpdateData(!updateData)\r\n        \r\n    }\r\n\r\n    async function deleteUser(id){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n\r\n        const options = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/user/\"+id, options)\r\n        .then(response => response.json())\r\n        .then(json =>{\r\n            if(json.error){\r\n                setErrorDeleteUser(true)\r\n            }else{\r\n                setTransactionSuccess(true)\r\n            }\r\n        })\r\n\r\n       setUpdateData(!updateData)\r\n\r\n    }\r\n\r\n    async function submitRoles(id, roles){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            id: id,\r\n            roles: roles\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/users/manageRoles\", options)\r\n        .then(response => response.json())\r\n        .then(json =>{\r\n            if(json.success){\r\n                setTransactionSuccess(true)\r\n            }\r\n        })\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    if(currentTab === \"Upload IsoFiles\"){\r\n        secureStorage.setItem(\"tab\", \"Upload IsoFiles\")\r\n        uploadButton = <button  type=\"button\" class=\"btn btn-info btn-lg\" style={{backgroundColor: \"#17a2b8\", width:\"180px\"}}><b>Upload</b></button>\r\n        tableContent = <DragAndDrop mode={\"upload\"} role={currentRole} user={currentUser}  uploaded={getProgress.bind(this)}/>\r\n        pageSelector = null\r\n    }if(currentTab === \"Design\" && currentRole === \"Design\"){\r\n        uploadButton = <button  type=\"button\" className=\"btn btn-info btn-lg\" style={{backgroundColor: \"lightblue\", width:\"180px\"}} onClick={() => setCurrentTab(\"Upload IsoFiles\")}><b>Upload</b></button>\r\n    }if(currentTab === \"CheckBy\"){\r\n        tableContent = <CheckInTable/>\r\n    }if(currentTab === \"My Tray\"){\r\n        tableContent = <MyTrayTable  updateData = {updateData} onChange={value=> setSelected(value)} cancelVerifyClick={cancelVerifyClick.bind(this)} sendProcessClick={sendProcessClick.bind(this)} success={success.bind(this)} sendInstrumentClick = {sendInstrumentClick.bind(this)} sendCancelProcessClick={sendCancelProcessClick.bind(this)} sendCancelInstrumentClick={sendCancelInstrumentClick.bind(this)} updateD = {updateD.bind(this)} pagination = {pagination} currentRole = {currentRole} currentUser = {currentUser} selected={selected} />\r\n    }if(currentTab === \"Recycle bin\"){\r\n        tableContent = <BinTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"On hold\"){\r\n        tableContent = <OnHoldTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"Status\"){\r\n        tableContent = <StatusDataTable onChange={value=> setSelected(value)} pagination = {pagination} role = {currentRole}/>\r\n    }if(currentTab === \"History\"){\r\n        tableContent = <HistoryDataTable pagination = {pagination}/>   \r\n    }if(currentRole === \"Process\" || currentRole === \"Instrument\" || currentRole === \"SpecialityLead\"){\r\n        procInsBtn = <ProcInsBtn onChange={value => procOrInst(value)} currentTab = {currentTab} />\r\n    }if(currentTab === \"Process\" || currentTab === \"Instrument\"){\r\n        tableContent = <ProcInstTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData} />\r\n    }if(currentTab === \"Reports\"){\r\n        tableContent = <ReportBoxBtns user={currentUser} downloadHistory={downloadHistory.bind(this)} downloadStatus={downloadStatus.bind(this)} downloadPI={downloadPI.bind(this)} downloadIssued={downloadIssued.bind(this)} setErrorReport={setErrorReport.bind(this)} setUploading={setUploading.bind(this)} downloadStatus3D={downloadStatus3D.bind(this)} downloadModelled={downloadModelled.bind(this)} setErrorReportData={setErrorReportData.bind(this)}/>\r\n    }if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n        progressBtn = <ProgressBtn onChange={value => setCurrentTab(\"Progress\")} currentTab = {currentTab}></ProgressBtn>\r\n        modelledBtn = <ModelledBtn onChange={value => setCurrentTab(\"Modelled\")} currentTab = {currentTab}></ModelledBtn>\r\n    }if(currentTab === \"Progress\"){\r\n        tableContent = <ProgressPlot></ProgressPlot>\r\n    }if(currentTab === \"Modelled\"){\r\n        tableContent = <ModelledDataTable  pagination = {pagination}></ModelledDataTable>\r\n    }if(currentRole !== \"Review\"){\r\n        myTrayBtn = <MyTrayBtn onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n    }if(currentRole === \"SpecialityLead\"){\r\n        if (currentTab === \"Users\"){\r\n            usersButton = <button  type=\"button\" className=\"btn btn-info btn-lg\" style={{backgroundColor: \"#17a2b8\", width:\"180px\"}} onClick={() => setCurrentTab(\"Users\")}><b>Users</b></button>\r\n            secureStorage.setItem(\"tab\", \"Users\")\r\n        }else{\r\n            usersButton = <button  type=\"button\" className=\"btn btn-info btn-lg\" style={{backgroundColor: \"lightblue\", width:\"180px\"}} onClick={() => setCurrentTab(\"Users\")}><b>Users</b></button>\r\n        }\r\n    }if(currentTab === \"Users\"){\r\n \r\n        tableContent = <UsersDataTable pagination = {pagination} updateData={updateData} deleteUser={deleteUser.bind(this)} submitRoles={submitRoles.bind(this)}/>\r\n        if (pagination === 8){\r\n            dataTableHeight = \"650px\"\r\n        }if(pagination === 25){\r\n            dataTableHeight = \"1500px\"\r\n        }if(pagination === 50){\r\n            dataTableHeight = \"2720px\"\r\n        }if(pagination === 100){\r\n            dataTableHeight = \"5200px\"\r\n        }\r\n    }\r\n\r\n    if(currentTab === \"My Tray\" || currentTab === \"LDE/IsoControl\"){\r\n        commentBox = <div>\r\n            <textarea placeholder=\"Comments\" class=\"comments\" cols=\"100\" rows=\"2\" required=\"\" maxlength=\"400\" name=\"comments\" value={comment} onChange={handleComment}></textarea>\r\n        </div>\r\n    }\r\n\r\n    \r\n\r\n    if(((currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Design\") || \r\n    ((currentRole === \"Stress\" || currentRole === \"StressLead\") && currentTab === \"Stress\") ||\r\n    ((currentRole === \"Supports\" || currentRole === \"SupportsLead\") && currentTab === \"Supports\") ||\r\n    ((currentRole === \"Materials\") && currentTab === \"Materials\") ||\r\n    ((currentRole === \"Issuer\") && currentTab === \"Issuer\") ||\r\n    ((currentRole === \"SpecialityLead\" && currentTab ===\"SpecialityLead\") ||\r\n    (currentTab=== \"My Tray\")) || (((currentTab === \"Recycle bin\" || currentTab === \"On hold\") && currentRole === \"DesignLead\") || \r\n    currentRole === \"SpecialityLead\" && currentTab !== \"Progress\") || (currentTab === \"Process\" && currentRole === \"Process\") ||\r\n    (currentRole === \"Instrument\" && currentTab === \"Instrument\") ||\r\n    (currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Issued\"){\r\n        actionText = <b className=\"progress__text\">Click an action for selected IsoFiles:</b>\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} returnLeadStress={returnLeadStress.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} issue={issue.bind(this)} newRev={newRev.bind(this)} request={request.bind(this)} returnIso={returnIso.bind(this)} addUser={addUser.bind(this)} onlyDownload = {false} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }else if(currentTab !== \"History\" && currentTab !== \"Upload IsoFiles\" && currentTab !== \"Recycle bin\" && currentTab !== \"Reports\" && currentTab !== \"Progress\" && currentTab !== \"Modelled\"){\r\n        actionText = <b className=\"progress__text\">Click an action for selected IsoFiles:</b>\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} returnLeadStress={returnLeadStress.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} issue={issue.bind(this)} newRev={newRev.bind(this)} request={request.bind(this)} returnIso={returnIso.bind(this)} addUser={addUser.bind(this)} onlyDownload = {true} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }\r\n    if(currentTab === \"Modelled\"){\r\n        actionText = null\r\n        actionButtons = <button className=\"btn btn-sm btn-success\" style={{marginTop:\"40px\"}} onClick={()=>downloadModelled()}>Export</button>\r\n    }\r\n\r\n    if(currentTab === \"Users\"){\r\n        actionText = null\r\n    }\r\n\r\n    if(currentRole === \"Project\"){\r\n        actionText = null\r\n        actionButtons = null\r\n    }\r\n    \r\n    return (\r\n        \r\n        <body>\r\n            \r\n            <NavBar onChange={value => setCurrentTab(value)}/>\r\n\r\n            <div className=\"isoCtrl__container\">     \r\n                <center>\r\n                    <Collapse in={loading}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\",zIndex:\"3\"}} severity=\"info\"\r\n                            >\r\n                            Processing...\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorPI}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            At least one isometric was on revision and wasn't sent to LDE/Isocontrol\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={transactionSuccess}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"success\"\r\n                            >\r\n                            Successful!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorUnclaim}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Can't unclaim an iso assigned by LOS!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorUnclaimR}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Can't unclaim a returned ISO!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorReports}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Missing columns!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorCL}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Missing clean!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={warningSelected}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"warning\"\r\n                            >\r\n                            Select at least one isometric!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={blocked}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            The isometric has been locked! Contact the administrator\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorReportD}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            The line {errorReportDIndex} of the report has an invalid type or progress!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorDeleteUser}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            This user has claimed isometrics and can't be deleted!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <h2 className=\"title__container\">\r\n                        <div className=\"roleSelector__container\">\r\n                            <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                         </div>\r\n                        <b >      \r\n                            <i className=\"iso__title\">IsoTracker</i>\r\n                        </b>\r\n                    </h2>\r\n                    <h3 className=\"iso__subtitle\">{currentTabText}</h3>\r\n                </center>\r\n                \r\n                <div>\r\n                    <div>\r\n                        <div style={{display:\"inline\"}}>\r\n                        {myTrayBtn}\r\n                            <td className=\"reportBtns__container\" style={{width:\"380px\"}}>\r\n                                \r\n                                <ReportBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n                                \r\n                            </td>\r\n                            <td>\r\n                                {uploadButton}\r\n                                {usersButton}\r\n                            </td>   \r\n                            <div className=\"stateTable__container\">\r\n                                \r\n                                <StateTable updateData={updateData} currentRole = {currentRole}/>\r\n                               \r\n                            </div>            \r\n\r\n                        </div>\r\n                    </div>\r\n                </div>              \r\n                \r\n                \r\n                <div style={{position: \"relative\", width:\"600px\"}}>\r\n                  {pageSelector}\r\n                  <BinBtn onChange={value => setCurrentTab(\"Recycle bin\")} currentTab = {currentTab}/>\r\n                  <OnHoldBtn onChange={value => setCurrentTab(\"On hold\")} currentTab = {currentTab}/>\r\n                  <IssuedBtn onChange={value => setCurrentTab(\"Issued\")} currentTab = {currentTab}/>\r\n                  <ReportsBtn onChange={value => setCurrentTab(\"Reports\")} currentTab = {currentTab}/>\r\n                  {progressBtn}\r\n                  {modelledBtn}\r\n                  {procInsBtn}\r\n                  \r\n\r\n                </div>\r\n                    \r\n                \r\n                <div style={{height: dataTableHeight}}>\r\n                    <br></br>\r\n                    <br></br> \r\n                    {tableContent}\r\n                </div>\r\n                <div className=\"bottom__container\">\r\n                    <Collapse in={commentAlert}>\r\n                        <Alert severity=\"error\"\r\n                            >\r\n                            Add a comment before sending the isos back to design!\r\n\r\n                            </Alert>\r\n                    </Collapse>\r\n                    <center className=\"actionBtns__container\">\r\n                        {actionText}\r\n                        {actionButtons}\r\n                    </center>\r\n                    <br></br>\r\n                    <center className=\"commentBox__container\">\r\n                        {commentBox}\r\n                    </center>\r\n                 \r\n                    \r\n                </div>\r\n            </div>\r\n            <center className=\"navBtns__center\">              \r\n                <NavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole}/>               \r\n            </center>\r\n            <br></br>\r\n        </body>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default IsoCtrl;\r\n","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\alert\\alert.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\loadingScreen\\loadingScreen.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\holdsPopUp\\holdsPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\loadingScreen3D\\loadingScreen3D.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\welcomeLoginF\\welcomeLoginF.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\isoCtrlF\\isoCtrlF.js",["694","695","696","697","698","699","700","701","702","703","704","705","706"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\sptracker\\sptracker.js",["707","708","709","710","711"],"import \"./sptracker.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport CSPTrackerLogo from \"../../assets/images/csptracker.svg\"\r\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown'\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\nimport CSPTrackerdDataTable from \"../../components/csptrackerDataTable/csptrackerDataTable\"\r\nimport HotTable from \"@handsontable/react\"\r\n\r\nimport SaveIcon from \"../../assets/images/save.svg\"\r\nimport AlertF from \"../../components/alert/alert\"\r\nimport CSPTrackerRequestPopUp from \"../../components/csptrackerRequestPopUp/csptrackerRequestPopUp\"\r\nimport CSPTrackerdRequestsDataTable from \"../../components/csptrackerRequestsDataTable/csptrackerRequestsDataTable\"\r\n\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Reports from \"../../assets/images/view_requests.svg\"\r\nimport Back from \"../../assets/images/back.svg\"\r\nimport CSPTrackerKeyParams from \"../../components/csptrackerKeyParams/csptrackerKeyParams\"\r\n\r\nimport { PieChart, Pie, Tooltip, Cell } from 'recharts';\r\n\r\nconst COLORS = ['#D2D2D2', '#FFCA42', '#7BD36D', '#99C6F8', '#94DCAA', '#FF3358'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    if(index === 0){\r\n        index = \"MAT\"\r\n    }else if(index === 1){\r\n        index = \"HOLD\"\r\n    }else if(index === 2){\r\n        index = \"OK-REV0\"\r\n    }else if(index === 3){\r\n        index = \"OK-REVN\"\r\n    }else if(index === 4){\r\n        index = \"EXCLUDED\"\r\n    }else if(index === 5){\r\n        index = \"DELETED\"\r\n    }\r\n  \r\n    return (\r\n      <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n          {index}\r\n      </text>\r\n    );\r\n  };\r\n\r\nconst CSPTracker = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const settings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 250,\r\n      }\r\n\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [currentTab, setCurrentTab] = useState(\"View\")\r\n    const [roles, setRoles] = useState();\r\n\r\n    const [successAlert, setSuccessAlert] = useState(false);\r\n    const [uploadDrawingSuccess, setUploadDrawingSuccess] = useState(false);\r\n    const [updateDrawingSuccess, setUpdateDrawingSuccess] = useState(false)\r\n    const [noTagError, setNoTagError] = useState(false);\r\n    const [invalidFieldError, setInvalidFieldError] = useState(false);\r\n    const [errorIndex, setErrorIndex] = useState(null);\r\n    const [warningBlankRequest, setWarningBlankRequest] = useState(false)\r\n    const [requestSuccess, setRequestSuccess] = useState(false)\r\n    const [existsRequest, setExistsRequest] = useState(false)\r\n    const [errorPid, seterrorPid] = useState(false)\r\n\r\n    const [editData, setEditData] = useState()\r\n    const [descriptionPlaneData, setDescriptionPlaneData] = useState()\r\n    const [diametersData, setDiametersData] = useState()\r\n    const [ratingData, setRatingData] = useState()\r\n    const [specData, setSpecData] = useState()\r\n    const [endPreparationData, setEndPrepartaionData] = useState()\r\n    const [boltTypesData, setBoltTypesData] = useState()\r\n    const [pidData, setPidData] = useState()\r\n\r\n    const [busy, setBusy] = useState(false)\r\n    const [editingUser, setEditingUser] = useState()\r\n\r\n    const [updateData, setUpdateData] = useState(false)    \r\n\r\n    const history = useHistory()\r\n\r\n    const [counter, setCounter] = useState([])\r\n\r\n    useEffect(()=>{\r\n        if(!secureStorage.getItem(\"user\")){\r\n            history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n        }\r\n    }, [])\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    let p1bore, p2bore, p3bore = \"\"\r\n\r\n    if(process.env.REACT_APP_MMDN === \"1\"){\r\n        p1bore = \"p1diameter_nps\"\r\n        p2bore = \"p2diameter_nps\"\r\n        p3bore = \"p3diameter_nps\"\r\n    }else{\r\n        p1bore = \"p1diameter_dn\"\r\n        p2bore = \"p2diameter_dn\"\r\n        p3bore = \"p3diameter_dn\"\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(async()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        let options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n\r\n        options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/spStatusData\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                let counter = [{name: \"Materials\", value: json.materials}, {name: \"Hold\", value: json.hold}, {name: \"OK-REV0\", value: json.ok_rev0}, {name: \"OK-REVN\", value: json.ok_revn}, {name: \"Excluded\", value: json.excluded}, {name: \"Deleted\", value: json.deleted}]\r\n                \r\n                await setCounter(counter)\r\n            })\r\n\r\n    },[updateData])\r\n\r\n    useEffect(async()=>{\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                await setEditData(json.rows)\r\n            })\r\n\r\n        if(currentTab === \"View\"){  \r\n    \r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getListsData\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                await setDescriptionPlaneData(json.descriptionPlaneData)\r\n                await setDiametersData(json.diametersData)\r\n                await setRatingData(json.ratingData)\r\n                await setSpecData(json.specData)\r\n                await setEndPrepartaionData(json.endPreparationData)\r\n                await setBoltTypesData(json.boltTypesData)\r\n                await setPidData(json.pidData)\r\n            })\r\n        }    \r\n    }, [currentTab])\r\n\r\n    function uploadSuccess(){\r\n        setUploadDrawingSuccess(true)\r\n    }\r\n\r\n    function updateSuccess(){\r\n        setUpdateDrawingSuccess(true)\r\n    }\r\n\r\n    function drawingUploadError(){\r\n    }\r\n\r\n    function errorBlankRequest(){\r\n        setWarningBlankRequest(true)\r\n    }\r\n\r\n    function successRequest(){\r\n        setRequestSuccess(true)\r\n    }\r\n\r\n    function existsErrorRequest(){\r\n        setExistsRequest(true)\r\n    }\r\n\r\n    function errorPidRequest(){\r\n        seterrorPid(true)\r\n    }\r\n\r\n    function handleOnIdle(){\r\n        saveChanges()\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n\r\n    async function handleToggle(){\r\n        if(currentTab === \"View\"){\r\n            const body = {\r\n                user: currentUser,\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/editCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                if(json.user){\r\n                    await setBusy(true)\r\n                    await setEditingUser(json.user)\r\n                }else{\r\n                    await setBusy(false)\r\n                }\r\n                await setCurrentTab(\"Edit\")\r\n            })\r\n            \r\n        }else{\r\n            const body = {\r\n                user: currentUser,\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                if(json.success){\r\n                    await saveChanges()\r\n                    await setCurrentTab(\"View\")\r\n                }\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    async function handleToggleKP(){\r\n        if(currentTab === \"View\"){\r\n            await setCurrentTab(\"CSP KeyParams\")\r\n            \r\n        }else{\r\n            //await saveChangesKP()\r\n            await setCurrentTab(\"View\")\r\n            \r\n        }\r\n    }\r\n\r\n    async function addRow(){\r\n        let rows = editData\r\n        rows.push({tag:\"\", quantity: \"\", description: \"\", description_plan_code: \"\", drawing_filename: \"\", description_iso: \"\", ident: \"\", p1diameter_dn: \"\", p1diameter_nps: \"\", p2diameter_dn: \"\", p2diameter_nps: \"\", p3diameter_dn: \"\", p3diameter_nps: \"\", rating: \"\", spec: \"\", type: \"\", end_preparation: \"\", description_drawing: \"\", face_to_face: \"\", bolt_type: \"\", ready_load: \"\", ready_e3d: \"\", comments: \"\", pid: \"\", line_id: \"\", requisition: \"\", equipnozz: \"\", utility_station: \"\"})\r\n        await setEditData(rows)\r\n        await setUpdateData(!updateData)\r\n      }\r\n\r\n    async function saveChanges(){\r\n\r\n        const body = {\r\n            rows: editData,\r\n            email: currentUser\r\n        }\r\n        let options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/tags\", options)\r\n        .then(response => response.json())\r\n        .then(async json =>{\r\n            let unique = true\r\n            if(json.none){\r\n\r\n            }else{\r\n                let tags = []\r\n                for(let i = 0; i < editData.length; i++){\r\n                    if(tags.indexOf(editData[i].tag) > -1 && editData[i].tag !== null){\r\n                        unique = false\r\n                        await setErrorIndex(\"Repeated tag at entry \" + i +\"!\")             \r\n                    }else{\r\n                        tags.push(editData[i].tag)\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if(!unique){\r\n                await setNoTagError(true)\r\n            }\r\n            options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json =>{\r\n                if(json.success){\r\n                    await setSuccessAlert(true)\r\n\r\n                }\r\n            })\r\n\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/update_ready_load\", options)\r\n            .then(response => response.json())\r\n            .then(async json =>{\r\n\r\n            }) \r\n                                \r\n        })                \r\n             \r\n    }\r\n\r\n    async function updateDataMethod(){\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function downloadReport(){\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadCSP/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"Tag\", \"Spec\", \"P1Bore\", \"P2Bore\", \"P3Bore\", \"Rating\", \"End preparation\", \"Line ID\", \"P&ID\", \"Type\", \"Drawing description\", \"Quantity\", \"Requisition\", \"Description\", \"Iso description\", \"Ident\", \"Face to face\", \"FLG Short Code\", \"Equipment + Nozzle\", \"Utility Station\", \"Request date\", \"Ready to load date\", \"Ready in E3D date\", \"Comments\", \"Ready to Load\", \"Ready in 3D\", \"Updated\"]\r\n            const apiData = JSON.parse(json)\r\n            const fileName = \"CSPTracker report\"\r\n\r\n            const fileType =\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n            const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'N1', 'O1', 'P1', 'Q1', 'R1', 'S1', 'T1', 'U1', 'V1', 'W1', 'X1', 'Y1', 'Z1', 'A2', 'B2', 'C2', 'D2', 'E2', 'F2']\r\n            const fileExtension = \".xlsx\";\r\n\r\n            let wscols = []\r\n            for(let i = 0; i < headers.length; i++){\r\n                wscols.push({width:35})\r\n            }\r\n\r\n            const ws = XLSX.utils.json_to_sheet(apiData);   \r\n            ws[\"!cols\"] = wscols\r\n            for(let i = 0; i < headers.length; i++){\r\n                ws[header_cells[i]].v = headers[i]\r\n            }\r\n            const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n            const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n            const data = new Blob([excelBuffer], { type: fileType });\r\n            FileSaver.saveAs(data, fileName + fileExtension);\r\n        })\r\n    }\r\n\r\n    document.body.style.zoom = 0.8\r\n\r\n    var dataTableHeight = \"570px\"\r\n\r\n    let editBtn, addRowBtn, saveBtn, exportBtn, requestBtn, notificationsBtn, designNotificationsBtn = null\r\n    let table = <CSPTrackerdDataTable currentRole = {currentRole} updateDataMethod = {updateDataMethod.bind(this)} updateData = {updateData} uploadDrawingSuccess = {uploadSuccess.bind(this)} updateDrawingSuccess = {updateSuccess.bind(this)} drawingUploadError={drawingUploadError.bind(this)}/>\r\n    if(currentRole === \"Materials\"){\r\n        editBtn = <label class=\"switchBtn\" style={{width:\"145px\"}}>\r\n                    <p className=\"navBar__button__text\" style={{width:\"100px\", marginTop:\"4px\"}}>Edit mode</p>\r\n                    <input type=\"checkbox\" id=\"edit\" onClick={()=>handleToggle()}/>\r\n                    <div class=\"slide round\"></div>\r\n                </label>   \r\n                   \r\n        if(currentTab === \"Edit\"){\r\n            notificationsBtn = null\r\n        }\r\n        else if(currentTab !== \"Requests\"){\r\n            notificationsBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Requests\")} style={{width:\"120px\", marginTop:\"5px\"}}><img src={Reports} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"4px\"}}></img><p className=\"navBar__button__text\">Requests</p></button>\r\n        }else{\r\n            notificationsBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"View\")} style={{backgroundColor:\"#99C6F8\", width:\"120px\", marginTop:\"5px\"}}><img src={Back} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"4px\"}}></img><p className=\"navBar__button__text\">Back</p></button>\r\n            editBtn = <label class=\"switchBtn\" style={{width:\"145px\"}}>\r\n            <p className=\"navBar__button__text\" style={{width:\"100px\", marginTop:\"4px\"}}>Edit mode</p>\r\n            <input type=\"checkbox\" id=\"edit\" disabled/>\r\n            <div class=\"slide round\"></div>\r\n        </label>\r\n        }\r\n    }\r\n\r\n    if(currentRole === \"3D Admin\"){\r\n        editBtn = <label class=\"switchBtn\" style={{width:\"155px\"}}>\r\n                    <p className=\"navBar__button__text\" style={{width:\"180px\", marginTop:\"4px\"}}>KeyParams</p>\r\n                    <input type=\"checkbox\" id=\"edit\" onClick={()=>handleToggleKP()}/>\r\n                    <div class=\"slide round\" style={{marginLeft:\"90px\"}}></div>\r\n                </label>  \r\n    }\r\n\r\n    if(currentRole === \"Design\"){\r\n        requestBtn = <CSPTrackerRequestPopUp errorBlankRequest={errorBlankRequest.bind(this)} successRequest={successRequest.bind(this)} existsErrorRequest={existsErrorRequest.bind(this)} errorPidRequest={errorPidRequest.bind(this)}/>\r\n    }\r\n\r\n\r\n\r\n    if(currentTab === \"View\"){\r\n        table = <CSPTrackerdDataTable currentRole = {currentRole} updateDataMethod = {updateDataMethod.bind(this)} updateData = {updateData} uploadDrawingSuccess = {uploadSuccess.bind(this)} updateDrawingSuccess = {updateSuccess.bind(this)} drawingUploadError={drawingUploadError.bind(this)}/>\r\n        exportBtn = <button className=\"action__btn\" name=\"export\" value=\"export\" onClick={() => downloadReport()}>Export</button>\r\n        addRowBtn = null\r\n        saveBtn = null\r\n        \r\n    }else if(currentTab === \"Edit\"){\r\n        if(!busy){\r\n            table = <HotTable\r\n            data={editData}\r\n            colHeaders = {[\"<b>TAG</b>\", \"<b>SPEC</b>\", \"<b>P1BORE</b>\", \"<b>P2BORE</b>\", \"P3BORE\", \"<b>RATING</b>\", \"<b>END PREPARATION</b>\", \"<b>LINE ID</b>\", \"<b>P&ID</b>\", \"<b>TYPE</b>\", \"<b>DRAWING DESCRIPTION</b>\", \"<b>QUANTITY</b>\", \"REQUISITION\", \"<b>DESCRIPTION</b>\", \"<b>ISO DESCRIPTION</b>\", \"<b>IDENT</b>\", \"FACE TO FACE\", \"<b>FLG SHORT CODE</b>\", \"EQUIPMENT + NOZZLE\", \"UTILITY STATION\", \"COMMENTS\"]}\r\n            rowHeaders={true}\r\n            width=\"2200\"\r\n            height=\"635\"\r\n            settings={settings} \r\n            manualColumnResize={true}\r\n            manualRowResize={true}\r\n            filters={true}\r\n            dropdownMenu= {[\r\n                'make_read_only',\r\n                '---------',\r\n                'alignment',\r\n                '---------',\r\n                'filter_by_condition',\r\n                '---------',\r\n                'filter_operators',\r\n                '---------',\r\n                'filter_by_condition2',\r\n                '---------',\r\n                'filter_by_value',\r\n                '---------',\r\n                'filter_action_bar',\r\n              ]}\r\n            columns= {[{ data: \"tag\", type:'text'}, {data: \"spec\", type:\"dropdown\", strict:\"true\", source: specData}, {data: p1bore, type:\"dropdown\", strict:\"true\", source: diametersData}, {data: p2bore, type:\"dropdown\", strict:\"true\", source: diametersData}, {data: p3bore, type:\"dropdown\", strict:\"true\", source: diametersData}, {data: \"rating\", type:\"dropdown\", strict:\"true\", source: ratingData}, {data: \"end_preparation\", type:\"dropdown\", strict:\"true\", source: endPreparationData}, {data: \"line_id\", type:\"text\"}, {data: \"pid\", type:\"dropdown\", strict:\"true\", source: pidData}, {data: \"type\", type:\"text\"}, {data: \"description_plan_code\", type:\"dropdown\", allowInvalid:true, source: descriptionPlaneData}, {data:\"quantity\", type:\"numeric\"}, { data: \"requisition\", type:'text'}, { data: \"description\", type:'text'}, {data: \"description_iso\", type:\"text\"},{data: \"ident\", type:\"text\"}, {data: \"face_to_face\", type:\"text\"}, {data: \"bolt_type\", type:\"dropdown\", strict:\"true\", source: boltTypesData}, {data:\"equipnozz\", type:\"text\"}, {data:\"utility_station\", type:\"text\"}, {data:\"comments\", type:\"text\"}]}\r\n            />\r\n          \r\n            dataTableHeight= \"700px\"\r\n            addRowBtn = <button class=\"btn btn-sm btn-success\" onClick={() => addRow()} style={{marginRight:\"5px\", fontSize:\"18px\", width:\"35px\", height:\"35px\", borderRadius:\"10px\", float:\"right\", marginTop:\"8px\"}}>+</button>\r\n    \r\n            saveBtn = <button className=\"navBar__button\" onClick={()=> saveChanges()} style={{marginTop:\"7px\"}}><img src={SaveIcon} alt=\"save\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Save</p></button>\r\n        }else{\r\n            table = <div className=\"connected__panel\"><p className=\"connected__text\">The user {editingUser} is already editing!</p></div>\r\n        }    \r\n\r\n    }else if(currentTab === \"Requests\"){\r\n        table = <CSPTrackerdRequestsDataTable updateDataMethod = {updateDataMethod.bind(this)} updateData = {updateData} />\r\n    }else if(currentTab === \"CSP KeyParams\"){\r\n        table = <CSPTrackerKeyParams success={()=> setSuccessAlert(true)}/>\r\n    }\r\n\r\n\r\n    return(\r\n        \r\n        <body>\r\n            {updateData}\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n            <div\r\n            className={`alert alert-success ${successAlert ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setSuccessAlert(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${uploadDrawingSuccess ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setUploadDrawingSuccess(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Drawing uploaded successfully!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${updateDrawingSuccess ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setUpdateDrawingSuccess(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Drawing updated successfully!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${noTagError ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setNoTagError(false)}\r\n            >\r\n                <AlertF type=\"waring\" text={errorIndex} margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${invalidFieldError ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setInvalidFieldError(false)}\r\n            >\r\n                <AlertF type=\"error\" subtext=\"At least one of the entries had an invalid field!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${requestSuccess? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setRequestSuccess(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"SP requested successfully!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${warningBlankRequest ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setWarningBlankRequest(false)}\r\n            >\r\n                <AlertF type=\"warning\" text=\"All fileds need to be filled!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${existsRequest ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setExistsRequest(false)}\r\n            >\r\n                <AlertF type=\"error\" subtext=\"An SP with that SPTag already exists!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${errorPid ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => seterrorPid(false)}\r\n            >\r\n                <AlertF type=\"error\" subtext=\"The specified P&ID is invalid!\" margin=\"0px\"/>\r\n            </div>\r\n            <div className=\"isotracker__row\">\r\n                  <div className=\"isotracker__column\">\r\n                      <img src={CSPTrackerLogo} alt=\"CSPTrackerLogo\" className=\"isoTrackerLogo__image2\" style={{height:\"85px\"}}/>\r\n                      \r\n                      <div className=\"roleSelector__containerF\">\r\n                              <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                      </div>\r\n                      \r\n                  </div>\r\n                  <PieChart width={600} height={400}>\r\n                    <Pie data={counter} dataKey=\"value\" cx=\"50%\" cy=\"60%\"  outerRadius={120} fill=\"#8884d8\" label={renderCustomizedLabel}>\r\n                    {counter.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={COLORS[index]} />\r\n                        ))}\r\n                    </Pie>\r\n                    <Tooltip/>\r\n                </PieChart>\r\n            </div>\r\n            <table className=\"isotracker__table__container\">\r\n                      <tr className=\"isotracker__table__navBar__container\" style={{height:\"65px \"}}>\r\n                          <th  className=\"isotracker__table__navBar\">\r\n                              <div style={{display:\"flex\"}}>\r\n                                {requestBtn}\r\n                                {editBtn}\r\n                                {notificationsBtn}\r\n                                {designNotificationsBtn}\r\n                                {saveBtn}   \r\n                              </div>                           \r\n                               \r\n                          </th>\r\n                      </tr>\r\n                      <tr className=\"isotracker__table__tray__and__table__container\" style={{height: dataTableHeight}}>\r\n                          <td className=\"discplines__table__table\" style={{height: dataTableHeight}} >\r\n                              <div  style={{height: dataTableHeight, width:\"2200px\"}} className=\"isotracker__table__table__container\">\r\n                                {table}\r\n                                {addRowBtn}\r\n                              </div>\r\n                          </td>\r\n                          \r\n                      </tr>\r\n                  </table>\r\n                  <center className=\"actionBtns__container\">   \r\n                    <div style={{display:\"flex\", marginTop:\"10px\"}}>\r\n                        {exportBtn}\r\n                    </div>\r\n                    \r\n                  </center>\r\n                  <br></br>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default CSPTracker;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\csptrackerDataTable\\csptrackerDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\csptrackerRequestsDataTable\\csptrackerRequestsDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\csptrackerRequestPopUp\\csptrackerRequestPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\csptrackerKeyParams\\csptrackerKeyParams.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadDrawingPopUp\\uploadDrawingPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\updateDrawingPopUp\\updateDrawingPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadBomIsocontrolPopUp\\uploadBomIsocontrolPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlFullDataTable\\isoControlFullDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlGroupLineIdDataTable\\isoControlGroupLineIdDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlModelledDataTable\\isoControlModelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlNotModelledDataTable\\isoControlNotModelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\updateBOMPopUp\\updateBOMPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\pitrequests\\pitrequests.js",["712","713"],"import NavBar from '../../components/navBar/navBar';\r\nimport React, { useState , useEffect} from 'react'\r\nimport GreenCircle from \"../../assets/images/green_circle.png\"\r\nimport BlueCircle from \"../../assets/images/blue_circle.png\"\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\nimport MenuListPIT from '../../components/menuListPit/menuListPit';\r\n\r\nimport AlertF from \"../../components/alert/alert\"\r\n\r\n//Página de home con el menú para ir a las aplicaciones de isotracker\r\n\r\nconst PITRequests = () =>{\r\n\r\n    const [content, setContent] = useState();\r\n    const [navBar, setNavBar] = useState(null);\r\n    const [circles, setCircles] = useState(null);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if(!secureStorage.getItem(\"user\")){\r\n            history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() =>{        \r\n        setNavBar(<NavBar/>)\r\n        setContent(<MenuListPIT success={() => setSuccess(true)}/>)    \r\n        setCircles(<div><img src={GreenCircle} alt=\"greenCircle\" className=\"greenCircle__image\"/>\r\n        <img src={BlueCircle} alt=\"blueCircle\" className=\"blueCircle__image\"/></div>)               \r\n\r\n        const body = {\r\n            user: secureStorage.getItem(\"user\"),\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n\r\n          \r\n    }, [])\r\n\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    document.body.style.zoom = 0.8\r\n\r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: secureStorage.getItem(\"user\"),\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n\r\n    return(\r\n        <body>\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <div style={{zIndex: 99999}}\r\n            className={`alert alert-success ${success ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setSuccess(false)}\r\n            >\r\n                <AlertF type=\"qtracker\"/>\r\n            </div>\r\n            {circles}\r\n            <div>\r\n                {navBar}\r\n                {content}\r\n            </div>\r\n        </body>\r\n    );\r\n};\r\n\r\nexport default PITRequests;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\menuListPit\\menuListPit.js",["714","715"],"import React, { useState, useEffect } from 'react';\r\nimport MenuListPITList from \"../menuListPitList/menuListPitList\"\r\n\r\n\r\n\r\n\r\nconst MenuListPIT = (props) =>{\r\n\r\n    function success(){\r\n        props.success()\r\n    }\r\n\r\n    return(\r\n        <div class=\"panel__container\">\r\n            <div className=\"panel__heading__container\">\r\n                <h4>\r\n                    <text className=\"panel__heading__text\">PITRequests</text>\r\n                </h4>\r\n            </div>\r\n\r\n            <div className=\"elements__container\">\r\n                <div className=\"menu\" style={{paddingTop:\"10px\"}}>\r\n                    <MenuListPITList success={success.bind(this)}/>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuListPIT;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\menuListPitList\\menuListPitList.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\timeTrackDataTable\\timeTrackDataTable.js",["716"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\pitRequestView\\pitRequestView.js",["717","718","719","720","721"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerViewDataTable\\qtrackerViewDataTable.js",["722"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerRPSpecPopUp\\qtrackerRPSpecPopUp.js",["723"],"import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class QtrackerRPSpecPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false,\r\n            content: null,\r\n        }\r\n    }\r\n\r\n    getAttach(fileName){\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n              \"Content-Type\": \"application/pdf\"\r\n          }\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getAttach/\"+fileName, options)\r\n        .then(res => res.blob())\r\n        .then(response => {\r\n          const file = new Blob([response], {\r\n            type: \"application/pdf\"\r\n          });\r\n          //Build a URL from the file\r\n          const fileURL = URL.createObjectURL(file);\r\n          //Open the URL on new Window\r\n          let w = window.open(fileURL);\r\n    \r\n            w.addEventListener(\"load\", function() {\r\n              setTimeout(()=> w.document.title = fileName\r\n              , 300);\r\n    \r\n    \r\n            });\r\n    \r\n            // create <a> tag dinamically\r\n            var fileLink = document.createElement('a');\r\n            fileLink.href = fileURL;\r\n    \r\n            // it forces the name of the downloaded file\r\n            fileLink.download = fileName;\r\n    \r\n            // triggers the click event\r\n            fileLink.click();\r\n    \r\n    \r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n      }\r\n\r\n    openModal() {\r\n\r\n        this.setState({\r\n            visible : true\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            visible : false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginRight:\"5px\", marginLeft:\"5px\", float:\"left\"}}>\r\n                <button class=\"btn btn-info\" style={{fontSize:\"16px\", padding:\"2px 5px 2px 5px\"}} onClick={() => this.openModal()}>Details</button>\r\n                <div>\r\n                    <Modal visible={this.state.visible} width=\"700\" height=\"400\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                    <center className=\"popUp__title\"><h3><strong>{this.props.incidence_number}</strong></h3></center>\r\n                    \r\n                    <table className=\"specs__container\">\r\n                        <tr className=\"specs__row\">                   \r\n                        <td style={{border: \"0.28px solid #D2D2D2\", width:\"150px\", verticalAlign:\"middle\", textAlign:\"center\", borderRadius:\"5px 0px 0px 0px\"}}>\r\n                            <p className=\"specs__spec__text\">ITEMS</p>\r\n                        </td>\r\n                        <td style={{border: \"0.28px solid #D2D2D2\", width:\"465px\", verticalAlign:\"middle\", borderRadius:\"0px 5px 0px 0px\"}}>\r\n                            <p className=\"specs__description__text\">{this.props.items}</p>\r\n                        </td>              \r\n                        </tr>\r\n                        <tr className=\"specs__row\">                   \r\n                        <td style={{border: \"0.28px solid #D2D2D2\", width:\"150px\", verticalAlign:\"middle\", textAlign:\"center\"}}>\r\n                            <p className=\"specs__spec__text\">SCOPE</p>\r\n                        </td>\r\n                        <td style={{border: \"0.28px solid #D2D2D2\", width:\"465px\", verticalAlign:\"middle\"}}>\r\n                            <p className=\"specs__description__text\">{this.props.scope}</p>\r\n                        </td>              \r\n                        </tr>\r\n                        <tr className=\"specs__row\">                   \r\n                        <td style={{border: \"0.28px solid #D2D2D2\", width:\"150px\", verticalAlign:\"middle\", textAlign:\"center\", borderRadius:\"5px 0px 0px 0px\"}}>\r\n                            <p className=\"specs__spec__text\">DESCRIPTION</p>\r\n                        </td>\r\n                        <td style={{border: \"0.28px solid #D2D2D2\", width:\"465px\", verticalAlign:\"middle\", borderRadius:\"0px 5px 0px 0px\"}}>\r\n                            <p className=\"specs__description__text\">{this.props.description}</p>\r\n                        </td>              \r\n                        </tr>\r\n                    </table>            \r\n                                \r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRIDSSpecPopUp\\qtrackerNRIDSSpecPopUp.js",["724"],"import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class QtrackerNRIDSSpecPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false,\r\n            content: null,\r\n        }\r\n    }\r\n\r\n    getAttach(fileName){\r\n\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n              \"Content-Type\": \"application/pdf\"\r\n          }\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getAttach/\"+fileName, options)\r\n        .then(res => res.blob())\r\n        .then(response => {\r\n          const file = new Blob([response], {\r\n            type: \"application/pdf\"\r\n          });\r\n          //Build a URL from the file\r\n          const fileURL = URL.createObjectURL(file);\r\n          //Open the URL on new Window\r\n          let w = window.open(fileURL);\r\n    \r\n            w.addEventListener(\"load\", function() {\r\n              setTimeout(()=> w.document.title = fileName\r\n              , 300);\r\n    \r\n    \r\n            });\r\n    \r\n            // create <a> tag dinamically\r\n            var fileLink = document.createElement('a');\r\n            fileLink.href = fileURL;\r\n    \r\n            // it forces the name of the downloaded file\r\n            fileLink.download = fileName;\r\n    \r\n            // triggers the click event\r\n            fileLink.click();\r\n    \r\n    \r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n      }\r\n\r\n    openModal() {\r\n\r\n        this.setState({\r\n            visible : true\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            visible : false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginRight:\"5px\", marginLeft:\"5px\", float:\"left\"}}>\r\n                <button class=\"btn btn-info\" style={{fontSize:\"16px\", padding:\"2px 5px 2px 5px\"}} onClick={() => this.openModal()}>Details</button>\r\n                <div>\r\n                    <Modal visible={this.state.visible} width=\"700\" height=\"400\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                    <center className=\"popUp__title\"><h3><strong>{this.props.incidence_number}</strong></h3></center>\r\n                    \r\n                    <table className=\"specs__container\">\r\n                        <tr className=\"specs__row\">                   \r\n                        <td style={{border: \"0.28px solid #D2D2D2\", width:\"150px\", verticalAlign:\"middle\", textAlign:\"center\", borderRadius:\"5px 0px 0px 5px\"}}>\r\n                            <p className=\"specs__spec__text\">NAME</p>\r\n                        </td>\r\n                        <td style={{border: \"0.28px solid #D2D2D2\", width:\"465px\", verticalAlign:\"middle\", borderRadius:\"0px 5px 5px 0px\"}}>\r\n                            <p className=\"specs__description__text\">{this.props.name}</p>\r\n                        </td>              \r\n                        </tr>\r\n\r\n                        {this.state.descriptionComponent} \r\n                        {this.state.attachComponent}\r\n                    </table>            \r\n                                \r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRBSpecPopUp\\qtrackerNRBSpecPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRISpecPopUp\\qtrackerNRISpecPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNVNSpecPopUp\\qtrackerNVNSpecPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNWCSpecPopUp\\qtrackerNWCSpecPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNWCPopUp\\qtrackerNWCPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRIPopUp\\qtrackerNRIPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRBPopUp\\qtrackerNRBPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNVNPopUp\\qtrackerNVNPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerRRPopUp\\qtrackerRRPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\qtrackerNRIDSPopUp\\qtrackerNRIDSPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\revisionPopUp\\revisionPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\updateMassivePopUp\\updateMassivePopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\updateMassive\\updateMassive.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\newRevPopUp\\newRevPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingNavBtns\\pipingNavBtns.js",["725"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingDataTable\\pipingDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\estimatedPipesExcel\\estimatedPipesExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingBinTable\\pipingBinTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlHoldsDataTable\\isoControlHoldsDataTable.js",["726"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingMyTrayTable\\pipingMyTrayTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\isoControlHoldsPopUp\\isoControlHoldsPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\pipingProduction\\pipingProduction.js",["727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBarProdCurve\\navBarProdCurve.js",["757","758","759","760","761"],{"ruleId":"762","replacedBy":"763"},{"ruleId":"764","replacedBy":"765"},{"ruleId":"766","severity":1,"message":"767","line":2,"column":8,"nodeType":"768","messageId":"769","endLine":2,"endColumn":15},{"ruleId":"770","severity":1,"message":"771","line":52,"column":8,"nodeType":"772","endLine":52,"endColumn":10,"suggestions":"773"},{"ruleId":"770","severity":1,"message":"774","line":87,"column":8,"nodeType":"772","endLine":87,"endColumn":10,"suggestions":"775"},{"ruleId":"762","replacedBy":"776"},{"ruleId":"764","replacedBy":"777"},{"ruleId":"778","severity":1,"message":"779","line":693,"column":458,"nodeType":"780","messageId":"781","endLine":693,"endColumn":460},{"ruleId":"778","severity":1,"message":"779","line":693,"column":610,"nodeType":"780","messageId":"781","endLine":693,"endColumn":612},{"ruleId":"770","severity":1,"message":"782","line":76,"column":15,"nodeType":"783","endLine":228,"endColumn":6},{"ruleId":"770","severity":1,"message":"784","line":228,"column":7,"nodeType":"772","endLine":228,"endColumn":16,"suggestions":"785"},{"ruleId":"770","severity":1,"message":"782","line":230,"column":15,"nodeType":"783","endLine":232,"endColumn":6},{"ruleId":"762","replacedBy":"786"},{"ruleId":"764","replacedBy":"787"},{"ruleId":"762","replacedBy":"788"},{"ruleId":"764","replacedBy":"789"},{"ruleId":"770","severity":1,"message":"782","line":141,"column":15,"nodeType":"783","endLine":205,"endColumn":6},{"ruleId":"770","severity":1,"message":"790","line":205,"column":7,"nodeType":"772","endLine":205,"endColumn":9,"suggestions":"791"},{"ruleId":"770","severity":1,"message":"782","line":207,"column":16,"nodeType":"783","endLine":253,"endColumn":6},{"ruleId":"770","severity":1,"message":"792","line":253,"column":7,"nodeType":"772","endLine":253,"endColumn":19,"suggestions":"793"},{"ruleId":"770","severity":1,"message":"792","line":304,"column":10,"nodeType":"772","endLine":304,"endColumn":12,"suggestions":"794"},{"ruleId":"770","severity":1,"message":"782","line":52,"column":15,"nodeType":"783","endLine":126,"endColumn":6},{"ruleId":"770","severity":1,"message":"795","line":126,"column":7,"nodeType":"772","endLine":126,"endColumn":9,"suggestions":"796"},{"ruleId":"770","severity":1,"message":"782","line":130,"column":15,"nodeType":"783","endLine":218,"endColumn":6},{"ruleId":"770","severity":1,"message":"797","line":218,"column":7,"nodeType":"772","endLine":218,"endColumn":126,"suggestions":"798"},{"ruleId":"762","replacedBy":"799"},{"ruleId":"764","replacedBy":"800"},{"ruleId":"801","severity":1,"message":"802","line":73,"column":31,"nodeType":"768","messageId":"803","endLine":73,"endColumn":36},{"ruleId":"801","severity":1,"message":"804","line":74,"column":31,"nodeType":"768","messageId":"803","endLine":74,"endColumn":43},{"ruleId":"801","severity":1,"message":"805","line":76,"column":31,"nodeType":"768","messageId":"803","endLine":76,"endColumn":34},{"ruleId":"806","severity":1,"message":"807","line":158,"column":31,"nodeType":"768","messageId":"808","endLine":158,"endColumn":34},{"ruleId":"806","severity":1,"message":"807","line":160,"column":31,"nodeType":"768","messageId":"808","endLine":160,"endColumn":34},{"ruleId":"806","severity":1,"message":"807","line":163,"column":39,"nodeType":"768","messageId":"808","endLine":163,"endColumn":42},{"ruleId":"801","severity":1,"message":"802","line":165,"column":33,"nodeType":"768","messageId":"803","endLine":165,"endColumn":38},{"ruleId":"801","severity":1,"message":"804","line":166,"column":33,"nodeType":"768","messageId":"803","endLine":166,"endColumn":45},{"ruleId":"766","severity":1,"message":"809","line":351,"column":11,"nodeType":"768","messageId":"769","endLine":351,"endColumn":29},{"ruleId":"770","severity":1,"message":"810","line":64,"column":7,"nodeType":"772","endLine":64,"endColumn":20,"suggestions":"811"},{"ruleId":"770","severity":1,"message":"812","line":103,"column":7,"nodeType":"772","endLine":103,"endColumn":9,"suggestions":"813"},{"ruleId":"770","severity":1,"message":"771","line":109,"column":8,"nodeType":"772","endLine":109,"endColumn":10,"suggestions":"814"},{"ruleId":"770","severity":1,"message":"810","line":64,"column":7,"nodeType":"772","endLine":64,"endColumn":20,"suggestions":"815"},{"ruleId":"770","severity":1,"message":"812","line":103,"column":7,"nodeType":"772","endLine":103,"endColumn":9,"suggestions":"816"},{"ruleId":"770","severity":1,"message":"771","line":109,"column":8,"nodeType":"772","endLine":109,"endColumn":10,"suggestions":"817"},{"ruleId":"770","severity":1,"message":"810","line":65,"column":7,"nodeType":"772","endLine":65,"endColumn":20,"suggestions":"818"},{"ruleId":"770","severity":1,"message":"812","line":104,"column":7,"nodeType":"772","endLine":104,"endColumn":9,"suggestions":"819"},{"ruleId":"770","severity":1,"message":"771","line":160,"column":8,"nodeType":"772","endLine":160,"endColumn":10,"suggestions":"820"},{"ruleId":"770","severity":1,"message":"810","line":64,"column":7,"nodeType":"772","endLine":64,"endColumn":20,"suggestions":"821"},{"ruleId":"770","severity":1,"message":"812","line":103,"column":7,"nodeType":"772","endLine":103,"endColumn":9,"suggestions":"822"},{"ruleId":"770","severity":1,"message":"771","line":109,"column":8,"nodeType":"772","endLine":109,"endColumn":10,"suggestions":"823"},{"ruleId":"770","severity":1,"message":"810","line":46,"column":7,"nodeType":"772","endLine":46,"endColumn":20,"suggestions":"824"},{"ruleId":"770","severity":1,"message":"812","line":64,"column":7,"nodeType":"772","endLine":64,"endColumn":9,"suggestions":"825"},{"ruleId":"770","severity":1,"message":"771","line":112,"column":8,"nodeType":"772","endLine":112,"endColumn":10,"suggestions":"826"},{"ruleId":"766","severity":1,"message":"827","line":74,"column":31,"nodeType":"768","messageId":"769","endLine":74,"endColumn":51},{"ruleId":"766","severity":1,"message":"828","line":75,"column":35,"nodeType":"768","messageId":"769","endLine":75,"endColumn":59},{"ruleId":"770","severity":1,"message":"812","line":112,"column":7,"nodeType":"772","endLine":112,"endColumn":20,"suggestions":"829"},{"ruleId":"770","severity":1,"message":"812","line":152,"column":7,"nodeType":"772","endLine":152,"endColumn":19,"suggestions":"830"},{"ruleId":"770","severity":1,"message":"782","line":154,"column":15,"nodeType":"783","endLine":156,"endColumn":6},{"ruleId":"770","severity":1,"message":"831","line":191,"column":8,"nodeType":"772","endLine":191,"endColumn":10,"suggestions":"832"},{"ruleId":"766","severity":1,"message":"833","line":267,"column":9,"nodeType":"768","messageId":"769","endLine":267,"endColumn":35},{"ruleId":"770","severity":1,"message":"810","line":41,"column":7,"nodeType":"772","endLine":41,"endColumn":20,"suggestions":"834"},{"ruleId":"770","severity":1,"message":"835","line":158,"column":7,"nodeType":"772","endLine":158,"endColumn":20,"suggestions":"836"},{"ruleId":"778","severity":1,"message":"837","line":1621,"column":129,"nodeType":"780","messageId":"781","endLine":1621,"endColumn":131},{"ruleId":"778","severity":1,"message":"837","line":1622,"column":38,"nodeType":"780","messageId":"781","endLine":1622,"endColumn":40},{"ruleId":"778","severity":1,"message":"837","line":1623,"column":67,"nodeType":"780","messageId":"781","endLine":1623,"endColumn":69},{"ruleId":"778","severity":1,"message":"837","line":1624,"column":64,"nodeType":"780","messageId":"781","endLine":1624,"endColumn":66},{"ruleId":"770","severity":1,"message":"771","line":121,"column":8,"nodeType":"772","endLine":121,"endColumn":10,"suggestions":"838"},{"ruleId":"770","severity":1,"message":"835","line":222,"column":7,"nodeType":"772","endLine":222,"endColumn":20,"suggestions":"839"},{"ruleId":"778","severity":1,"message":"837","line":1819,"column":129,"nodeType":"780","messageId":"781","endLine":1819,"endColumn":131},{"ruleId":"778","severity":1,"message":"837","line":1820,"column":38,"nodeType":"780","messageId":"781","endLine":1820,"endColumn":40},{"ruleId":"778","severity":1,"message":"837","line":1821,"column":67,"nodeType":"780","messageId":"781","endLine":1821,"endColumn":69},{"ruleId":"778","severity":1,"message":"837","line":1822,"column":64,"nodeType":"780","messageId":"781","endLine":1822,"endColumn":66},{"ruleId":"766","severity":1,"message":"840","line":1918,"column":9,"nodeType":"768","messageId":"769","endLine":1918,"endColumn":22},{"ruleId":"766","severity":1,"message":"841","line":1928,"column":13,"nodeType":"768","messageId":"769","endLine":1928,"endColumn":26},{"ruleId":"766","severity":1,"message":"842","line":1936,"column":13,"nodeType":"768","messageId":"769","endLine":1936,"endColumn":32},{"ruleId":"766","severity":1,"message":"843","line":1944,"column":13,"nodeType":"768","messageId":"769","endLine":1944,"endColumn":25},{"ruleId":"766","severity":1,"message":"844","line":1947,"column":13,"nodeType":"768","messageId":"769","endLine":1947,"endColumn":30},{"ruleId":"766","severity":1,"message":"845","line":1957,"column":13,"nodeType":"768","messageId":"769","endLine":1957,"endColumn":35},{"ruleId":"766","severity":1,"message":"846","line":1973,"column":13,"nodeType":"768","messageId":"769","endLine":1973,"endColumn":38},{"ruleId":"770","severity":1,"message":"771","line":124,"column":8,"nodeType":"772","endLine":124,"endColumn":10,"suggestions":"847"},{"ruleId":"770","severity":1,"message":"810","line":169,"column":7,"nodeType":"772","endLine":169,"endColumn":20,"suggestions":"848"},{"ruleId":"770","severity":1,"message":"782","line":171,"column":15,"nodeType":"783","endLine":203,"endColumn":6},{"ruleId":"770","severity":1,"message":"812","line":203,"column":7,"nodeType":"772","endLine":203,"endColumn":19,"suggestions":"849"},{"ruleId":"770","severity":1,"message":"782","line":205,"column":15,"nodeType":"783","endLine":233,"endColumn":6},{"ruleId":"770","severity":1,"message":"771","line":53,"column":8,"nodeType":"772","endLine":53,"endColumn":10,"suggestions":"850"},{"ruleId":"770","severity":1,"message":"774","line":78,"column":8,"nodeType":"772","endLine":78,"endColumn":10,"suggestions":"851"},{"ruleId":"766","severity":1,"message":"852","line":1,"column":17,"nodeType":"768","messageId":"769","endLine":1,"endColumn":25},{"ruleId":"766","severity":1,"message":"853","line":1,"column":27,"nodeType":"768","messageId":"769","endLine":1,"endColumn":36},{"ruleId":"766","severity":1,"message":"854","line":4,"column":10,"nodeType":"768","messageId":"769","endLine":4,"endColumn":14},{"ruleId":"766","severity":1,"message":"855","line":74,"column":12,"nodeType":"768","messageId":"769","endLine":74,"endColumn":19},{"ruleId":"770","severity":1,"message":"771","line":88,"column":8,"nodeType":"772","endLine":88,"endColumn":10,"suggestions":"856"},{"ruleId":"770","severity":1,"message":"857","line":129,"column":7,"nodeType":"772","endLine":129,"endColumn":20,"suggestions":"858"},{"ruleId":"770","severity":1,"message":"782","line":131,"column":15,"nodeType":"783","endLine":163,"endColumn":6},{"ruleId":"770","severity":1,"message":"812","line":163,"column":7,"nodeType":"772","endLine":163,"endColumn":19,"suggestions":"859"},{"ruleId":"766","severity":1,"message":"860","line":7,"column":8,"nodeType":"768","messageId":"769","endLine":7,"endColumn":28},{"ruleId":"766","severity":1,"message":"854","line":3,"column":10,"nodeType":"768","messageId":"769","endLine":3,"endColumn":14},{"ruleId":"766","severity":1,"message":"854","line":3,"column":10,"nodeType":"768","messageId":"769","endLine":3,"endColumn":14},{"ruleId":"766","severity":1,"message":"861","line":34,"column":156,"nodeType":"768","messageId":"769","endLine":34,"endColumn":163},{"ruleId":"766","severity":1,"message":"809","line":159,"column":11,"nodeType":"768","messageId":"769","endLine":159,"endColumn":29},{"ruleId":"766","severity":1,"message":"862","line":12,"column":10,"nodeType":"768","messageId":"769","endLine":12,"endColumn":16},{"ruleId":"766","severity":1,"message":"863","line":19,"column":8,"nodeType":"768","messageId":"769","endLine":19,"endColumn":13},{"ruleId":"770","severity":1,"message":"782","line":120,"column":15,"nodeType":"783","endLine":873,"endColumn":6},{"ruleId":"864","severity":1,"message":"865","line":290,"column":69,"nodeType":"866","messageId":"867","endLine":292,"endColumn":46},{"ruleId":"868","severity":1,"message":"869","line":290,"column":69,"nodeType":"866","messageId":"870","endLine":290,"endColumn":77},{"ruleId":"864","severity":1,"message":"871","line":294,"column":70,"nodeType":"866","messageId":"867","endLine":296,"endColumn":46},{"ruleId":"868","severity":1,"message":"869","line":294,"column":70,"nodeType":"866","messageId":"870","endLine":294,"endColumn":78},{"ruleId":"864","severity":1,"message":"872","line":298,"column":70,"nodeType":"866","messageId":"867","endLine":300,"endColumn":46},{"ruleId":"868","severity":1,"message":"869","line":298,"column":70,"nodeType":"866","messageId":"870","endLine":298,"endColumn":78},{"ruleId":"868","severity":1,"message":"869","line":425,"column":65,"nodeType":"866","messageId":"870","endLine":425,"endColumn":73},{"ruleId":"868","severity":1,"message":"869","line":429,"column":66,"nodeType":"866","messageId":"870","endLine":429,"endColumn":74},{"ruleId":"868","severity":1,"message":"869","line":432,"column":66,"nodeType":"866","messageId":"870","endLine":432,"endColumn":74},{"ruleId":"868","severity":1,"message":"869","line":482,"column":80,"nodeType":"866","messageId":"870","endLine":482,"endColumn":88},{"ruleId":"868","severity":1,"message":"869","line":486,"column":65,"nodeType":"866","messageId":"870","endLine":486,"endColumn":73},{"ruleId":"868","severity":1,"message":"869","line":487,"column":74,"nodeType":"866","messageId":"870","endLine":487,"endColumn":82},{"ruleId":"868","severity":1,"message":"869","line":496,"column":68,"nodeType":"866","messageId":"870","endLine":496,"endColumn":76},{"ruleId":"868","severity":1,"message":"869","line":506,"column":81,"nodeType":"866","messageId":"870","endLine":506,"endColumn":89},{"ruleId":"868","severity":1,"message":"869","line":695,"column":70,"nodeType":"866","messageId":"870","endLine":695,"endColumn":78},{"ruleId":"766","severity":1,"message":"873","line":733,"column":45,"nodeType":"768","messageId":"769","endLine":733,"endColumn":59},{"ruleId":"868","severity":1,"message":"869","line":736,"column":62,"nodeType":"866","messageId":"870","endLine":736,"endColumn":70},{"ruleId":"868","severity":1,"message":"869","line":744,"column":63,"nodeType":"866","messageId":"870","endLine":744,"endColumn":71},{"ruleId":"868","severity":1,"message":"869","line":757,"column":81,"nodeType":"866","messageId":"870","endLine":757,"endColumn":89},{"ruleId":"770","severity":1,"message":"874","line":873,"column":8,"nodeType":"772","endLine":873,"endColumn":25,"suggestions":"875"},{"ruleId":"868","severity":1,"message":"869","line":1037,"column":37,"nodeType":"866","messageId":"870","endLine":1037,"endColumn":45},{"ruleId":"868","severity":1,"message":"869","line":1073,"column":38,"nodeType":"866","messageId":"870","endLine":1073,"endColumn":46},{"ruleId":"868","severity":1,"message":"869","line":1102,"column":33,"nodeType":"866","messageId":"870","endLine":1102,"endColumn":41},{"ruleId":"868","severity":1,"message":"869","line":1259,"column":37,"nodeType":"866","messageId":"870","endLine":1259,"endColumn":45},{"ruleId":"868","severity":1,"message":"869","line":1294,"column":45,"nodeType":"866","messageId":"870","endLine":1294,"endColumn":53},{"ruleId":"868","severity":1,"message":"869","line":1313,"column":33,"nodeType":"866","messageId":"870","endLine":1313,"endColumn":41},{"ruleId":"801","severity":1,"message":"876","line":1452,"column":17,"nodeType":"768","messageId":"803","endLine":1452,"endColumn":23},{"ruleId":"770","severity":1,"message":"782","line":140,"column":15,"nodeType":"783","endLine":204,"endColumn":6},{"ruleId":"770","severity":1,"message":"790","line":204,"column":7,"nodeType":"772","endLine":204,"endColumn":9,"suggestions":"877"},{"ruleId":"770","severity":1,"message":"782","line":206,"column":16,"nodeType":"783","endLine":252,"endColumn":6},{"ruleId":"770","severity":1,"message":"792","line":252,"column":7,"nodeType":"772","endLine":252,"endColumn":19,"suggestions":"878"},{"ruleId":"770","severity":1,"message":"792","line":303,"column":10,"nodeType":"772","endLine":303,"endColumn":12,"suggestions":"879"},"no-native-reassign",["880"],"no-negated-in-lhs",["881"],"no-unused-vars","'IsoCtrl' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'secureStorage'. Either include them or remove the dependency array.","ArrayExpression",["882"],"React Hook useEffect has a missing dependency: 'secureStorage'. Either include it or remove the dependency array.",["883"],["880"],["881"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'progress', 'progressIso', 'props.currentRole', and 'totalStock'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotalStockTD' needs the current value of 'totalStock'.",["884"],["880"],["881"],["880"],["881"],"React Hook useEffect has missing dependencies: 'handleClickCivil', 'handleClickElectrical', 'handleClickEquipments', 'handleClickHome', 'handleClickInstrument', 'handleClickIsotracker', and 'handleClickPiping'. Either include them or remove the dependency array.",["885"],"React Hook useEffect has missing dependencies: 'deleteNotification', 'markAsRead', and 'markAsUnread'. Either include them or remove the dependency array.",["886"],["887"],"React Hook useEffect has missing dependencies: 'civilsProgress', 'civilsWeight', 'elecsProgress', 'elecsWeight', 'equisProgress', 'equisWeight', 'instsProgress', 'instsWeight', 'pipesProgress', 'pipesWeight', 'totalProgress', and 'totalWeight'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotalWeight' needs the current value of 'pipesWeight'.",["888"],"React Hook useEffect has missing dependencies: 'civilsProgress', 'civilsProgressWidth', 'civilsWeight', 'elecsProgress', 'elecsProgressWidth', 'elecsWeight', 'equisProgress', 'equisProgressWidth', 'equisWeight', 'instsProgress', 'instsProgressWidth', 'instsWeight', 'pipesProgress', 'pipesProgressWidth', and 'pipesWeight'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProgressButtons' needs the current value of 'pipesWeight'.",["889"],["880"],["881"],"no-redeclare","'holds' is already defined.","redeclared","'descriptions' is already defined.","'row' is already defined.","no-use-before-define","'row' was used before it was defined.","usedBeforeDefined","'rowSelectionFilter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'secureStorage'. Either include them or remove the dependency array.",["890"],"React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["891"],["892"],["893"],["894"],["895"],["896"],["897"],["898"],["899"],["900"],["901"],["902"],["903"],["904"],"'setNotModelledWeight' is assigned a value but never used.","'setTotalIsocontrolWeight' is assigned a value but never used.",["905"],["906"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["907"],"'isocontrolWeightsComponent' is assigned a value but never used.",["908"],"React Hook useEffect has missing dependencies: 'currentUser', 'secureStorage', and 'updateData'. Either include them or remove the dependency array. You can also do a functional update 'setUpdateData(u => ...)' if you only need 'updateData' in the 'setUpdateData' call.",["909"],"Unexpected mix of '||' and '&&'.",["910"],["911"],"'editCustomBtn' is assigned a value but never used.","'isoControlBtn' is assigned a value but never used.","'isoControlNotModBtn' is assigned a value but never used.","'uploadBOMBtn' is assigned a value but never used.","'isoControlFullBtn' is assigned a value but never used.","'isoControlEstimatedBtn' is assigned a value but never used.","'isoControllLineIdGroupBtn' is assigned a value but never used.",["912"],["913"],["914"],["915"],["916"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'saveBtn' is assigned a value but never used.",["917"],"React Hook useEffect has missing dependencies: 'currentUser', 'saveChanges', and 'secureStorage'. Either include them or remove the dependency array.",["918"],["919"],"'QtrackerNRBSpecPopUp' is defined but never used.","'prodBtn' is defined but never used.","'saveAs' is defined but never used.","'Chart' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'sumEstGraph', 'sumEst'.","FunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a return value from function.","expectedInside","Function declared in a loop contains unsafe references to variable(s) 'sumRealGraph', 'sumReal'.","Function declared in a loop contains unsafe references to variable(s) 'sumForcGraph', 'sumForc'.","'totalEstimated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'colors', 'estimatedData', 'estimatedMaterialData', 'estimatedProgressData', 'forecastData', 'materialsList', 'realData', 'realProgressData', 'realProgressWeightMatData', 'submitEstimatedForecast', and 'submitWeight'. Either include them or remove the dependency array.",["920"],"'wscols' is already defined.",["921"],["922"],["923"],"no-global-assign","no-unsafe-negation",{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},{"desc":"928","fix":"929"},{"desc":"930","fix":"931"},{"desc":"932","fix":"933"},{"desc":"934","fix":"935"},{"desc":"936","fix":"937"},{"desc":"938","fix":"939"},{"desc":"940","fix":"941"},{"desc":"942","fix":"943"},{"desc":"924","fix":"944"},{"desc":"940","fix":"945"},{"desc":"942","fix":"946"},{"desc":"924","fix":"947"},{"desc":"940","fix":"948"},{"desc":"942","fix":"949"},{"desc":"924","fix":"950"},{"desc":"940","fix":"951"},{"desc":"942","fix":"952"},{"desc":"924","fix":"953"},{"desc":"940","fix":"954"},{"desc":"942","fix":"955"},{"desc":"924","fix":"956"},{"desc":"957","fix":"958"},{"desc":"959","fix":"960"},{"desc":"961","fix":"962"},{"desc":"940","fix":"963"},{"desc":"964","fix":"965"},{"desc":"924","fix":"966"},{"desc":"964","fix":"967"},{"desc":"924","fix":"968"},{"desc":"940","fix":"969"},{"desc":"959","fix":"970"},{"desc":"924","fix":"971"},{"desc":"926","fix":"972"},{"desc":"924","fix":"973"},{"desc":"974","fix":"975"},{"desc":"959","fix":"976"},{"desc":"977","fix":"978"},{"desc":"930","fix":"979"},{"desc":"932","fix":"980"},{"desc":"934","fix":"981"},"Update the dependencies array to be: [history, secureStorage]",{"range":"982","text":"983"},"Update the dependencies array to be: [secureStorage]",{"range":"984","text":"985"},"Update the dependencies array to be: [loading, progress, progressIso, props.currentRole, totalStock]",{"range":"986","text":"987"},"Update the dependencies array to be: [handleClickCivil, handleClickElectrical, handleClickEquipments, handleClickHome, handleClickInstrument, handleClickIsotracker, handleClickPiping]",{"range":"988","text":"989"},"Update the dependencies array to be: [deleteNotification, markAsRead, markAsUnread, updateData]",{"range":"990","text":"991"},"Update the dependencies array to be: [deleteNotification, markAsRead, markAsUnread]",{"range":"992","text":"993"},"Update the dependencies array to be: [civilsProgress, civilsWeight, elecsProgress, elecsWeight, equisProgress, equisWeight, instsProgress, instsWeight, pipesProgress, pipesWeight, totalProgress, totalWeight]",{"range":"994","text":"995"},"Update the dependencies array to be: [totalProgressWidth, refresh, isoIsShown, progIsShown, pipeIsShown, equipIsShown, civIsShown, instIsShown, elecIsShown, pipesWeight, equisWeight, instsWeight, civilsWeight, elecsWeight, pipesProgress, equisProgress, civilsProgress, instsProgress, elecsProgress, pipesProgressWidth, equisProgressWidth, civilsProgressWidth, instsProgressWidth, elecsProgressWidth]",{"range":"996","text":"997"},"Update the dependencies array to be: [currentRole, currentUser, secureStorage]",{"range":"998","text":"999"},"Update the dependencies array to be: [currentUser]",{"range":"1000","text":"1001"},{"range":"1002","text":"983"},{"range":"1003","text":"999"},{"range":"1004","text":"1001"},{"range":"1005","text":"983"},{"range":"1006","text":"999"},{"range":"1007","text":"1001"},{"range":"1008","text":"983"},{"range":"1009","text":"999"},{"range":"1010","text":"1001"},{"range":"1011","text":"983"},{"range":"1012","text":"999"},{"range":"1013","text":"1001"},{"range":"1014","text":"983"},"Update the dependencies array to be: [currentRole, currentUser]",{"range":"1015","text":"1016"},"Update the dependencies array to be: [currentUser, updateData]",{"range":"1017","text":"1018"},"Update the dependencies array to be: [history]",{"range":"1019","text":"1020"},{"range":"1021","text":"999"},"Update the dependencies array to be: [currentRole, currentUser, secureStorage, updateData]",{"range":"1022","text":"1023"},{"range":"1024","text":"983"},{"range":"1025","text":"1023"},{"range":"1026","text":"983"},{"range":"1027","text":"999"},{"range":"1028","text":"1018"},{"range":"1029","text":"983"},{"range":"1030","text":"985"},{"range":"1031","text":"983"},"Update the dependencies array to be: [currentRole, currentUser, saveChanges, secureStorage]",{"range":"1032","text":"1033"},{"range":"1034","text":"1018"},"Update the dependencies array to be: [updateData, tab, estimatedMaterialData, estimatedData, forecastData, realData, estimatedProgressData, realProgressData, colors, submitEstimatedForecast, materialsList, realProgressWeightMatData, submitWeight]",{"range":"1035","text":"1036"},{"range":"1037","text":"989"},{"range":"1038","text":"991"},{"range":"1039","text":"993"},[1667,1669],"[history, secureStorage]",[2814,2816],"[secureStorage]",[12622,12631],"[loading, progress, progressIso, props.currentRole, totalStock]",[8103,8105],"[handleClickCivil, handleClickElectrical, handleClickEquipments, handleClickHome, handleClickInstrument, handleClickIsotracker, handleClickPiping]",[10765,10777],"[deleteNotification, markAsRead, markAsUnread, updateData]",[13704,13706],"[deleteNotification, markAsRead, markAsUnread]",[5785,5787],"[civilsProgress, civilsWeight, elecsProgress, elecsWeight, equisProgress, equisWeight, instsProgress, instsWeight, pipesProgress, pipesWeight, totalProgress, totalWeight]",[14898,15017],"[totalProgressWidth, refresh, isoIsShown, progIsShown, pipeIsShown, equipIsShown, civIsShown, instIsShown, elecIsShown, pipesWeight, equisWeight, instsWeight, civilsWeight, elecsWeight, pipesProgress, equisProgress, civilsProgress, instsProgress, elecsProgress, pipesProgressWidth, equisProgressWidth, civilsProgressWidth, instsProgressWidth, elecsProgressWidth]",[2664,2677],"[currentRole, currentUser, secureStorage]",[3844,3846],"[currentUser]",[4002,4004],[2773,2786],[3948,3950],[4106,4108],[2644,2657],[3817,3819],[5359,5361],[2669,2682],[3849,3851],[4007,4009],[1512,1525],[2040,2042],[3421,3423],[4949,4962],"[currentRole, currentUser]",[6179,6191],"[currentUser, updateData]",[7205,7207],"[history]",[1315,1328],[7104,7117],"[currentRole, currentUser, secureStorage, updateData]",[6038,6040],[10013,10026],[4627,4629],[5982,5995],[7225,7237],[1687,1689],[2551,2553],[2787,2789],[4179,4192],"[currentRole, currentUser, saveChanges, secureStorage]",[5363,5375],[54581,54598],"[updateData, tab, estimatedMaterialData, estimatedData, forecastData, realData, estimatedProgressData, realProgressData, colors, submitEstimatedForecast, materialsList, realProgressWeightMatData, submitWeight]",[8300,8302],[10970,10982],[13917,13919]]