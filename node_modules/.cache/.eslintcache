[{"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\index.js":"1","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\App.js":"2","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\isoCtrl\\isoCtrl.js":"4","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\home\\home.js":"5","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\welcome\\welcome.js":"6","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\register\\register.js":"7","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBtns\\reportBtns.js":"8","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\datatable\\datatable.js":"9","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\stateTable\\stateTable.js":"10","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentBox\\commentBox.js":"11","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionExtra\\actionExtra.js":"12","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionBtns\\actionBtns.js":"13","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\selectPag\\selectPag.js":"14","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressTable\\progressTable.js":"15","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\checkInTable\\checkInTable.js":"16","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBar\\navBar.js":"17","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayTable\\myTrayTable.js":"18","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayBtn\\myTrayBtn.js":"19","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binTable\\binTable.js":"20","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBtns\\navBtns.js":"21","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\statusDataTable\\statusDataTable.js":"22","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\menuList\\menuList.js":"23","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binBtn\\binBtn.js":"24","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\cancelIso\\cancelIso.js":"25","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadPopUp\\uploadPopUp.js":"26","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\chooseFile\\chooseFile.js":"27","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\dragAndDrop\\dragAndDrop.js":"28","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\loginPage\\loginPage.js":"29","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\login\\login.js":"30","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\roleDropDown\\roleDropDown.js":"31","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldTable\\onHoldTable.js":"32","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldBtn\\onHoldBtn.js":"33","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\historyDataTable\\historyDataTable.js":"34","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInsBtn\\procInsBtn.js":"35","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInstTable\\procInstTable.js":"36","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadProcInst\\uploadProcInst.js":"37","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportsBtn\\reportsBtn.js":"38","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBoxBtns\\reportBoxBtns.js":"39","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\forceClaimPopUp\\forceClaimPopUp.js":"40","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadReportPopUp\\uploadReportPopUp.js":"41","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\issuedBtn\\issuedBtn.js":"42","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\changePassword\\changePassword.js":"43","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressBtn\\progressBtn.js":"44","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlot\\progressPlot.js":"45","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledBtn\\modelledBtn.js":"46","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledDataTable\\modelledDataTable.js":"47","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\holdComment\\holdComment.js":"48","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\renamePopUp\\renamePopUp.js":"49","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentPopUp\\commentPopUp.js":"50","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\equipments\\equipments.js":"51","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\EquipmentsNavBtns\\equipmentsNavBtns.js":"52","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipEstimatedDataTable\\equipEstimatedDataTable.js":"53","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipModelledDataTable\\equipModelledDataTable.js":"54","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotEquipments\\progressPlotEquipments.js":"55","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadEquisModelledPopUp\\uploadEquisModelledPopUp.js":"56","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipTypesDataTable\\equipTypesDataTable.js":"57","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\instrumentation\\instrumentation.js":"58","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\civil\\civil.js":"59","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationEstimatedDataTable\\instrumentationEstimatedDataTable.js":"60","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationModelledDataTable\\instrumentationModelledDataTable.js":"61","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotInstrumentation\\progressPlotInstrumentation.js":"62","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationTypesDataTable\\instrumentationTypesDataTable.js":"63","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotCivils\\progressPlotCivils.js":"64","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilEstimatedDataTable\\civilEstimatedDataTable.js":"65","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilTypesDataTable\\civilTypesDataTable.js":"66","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilModelledDataTable\\civilModelledDataTable.js":"67","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadEquisEstimatedPopUp\\uploadEquisEstimatedPopUp.js":"68","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\electrical\\electrical.js":"69","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\progressCurve\\progressCurve.js":"70","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\piping\\piping.js":"71","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\navis\\navis.js":"72","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipExcel\\equipExcel.js":"73","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipExcelEdit\\equipExcelEdit.js":"74","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instExcel\\instExcel.js":"75","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instExcelEdit\\instExcelEdit.js":"76","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\usersDataTable\\usersDataTable.js":"77","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilExcelEdit\\civilExcelEdit.js":"78","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilExcel\\civilExcel.js":"79","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\deleteUserConfPopUp\\deleteUserConfPopUp.js":"80","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\manageRolesPopUp\\manageRolesPopUp.js":"81","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadPipesEstimatedPopUp\\uploadPipesEstimatedPopUp.js":"82","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadElectricalModelledPopUp\\uploadElectricalModelledPopUp.js":"83","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadElectricalEstimatedPopUp\\uploadElectricalEstimatedPopUp.js":"84","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadCivilEstimtedPopUp\\uploadCivilEstimtedPopUp.js":"85","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadCivilModelledPopUp\\uploadCivilModelledPopUp.js":"86","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadInstrumentationEstimatedPopUp\\uploadInstrumentationEstimatedPopUp.js":"87","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadInstrumentationModelledPopUp\\uploadInstrumentationModelledPopUp.js":"88","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\addUserPopUp\\addUserPopUp.js":"89","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navisTable\\navisTable.js":"90","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingExcelEdit\\pipingExcelEdit.js":"91","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingExcel\\pipingExcel.js":"92","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingEstimatedDataTable\\pipingEstimatedDataTable.js":"93","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotPiping\\progressPlotPiping.js":"94","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingTypesDataTable\\pipingTypesDataTable.js":"95","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecExcelEdit\\elecExcelEdit.js":"96","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotCurve\\progressPlotCurve.js":"97","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecExcel\\elecExcel.js":"98","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecTypesDataTable\\elecTypesDataTable.js":"99","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progresPlotElecs\\progressPlotElecs.js":"100","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\electricalModelledDataTable\\electricalModelledDataTable.js":"101","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\electricalEstimatedDataTable\\electricalEstimatedDataTable.js":"102","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\welcomeLoginF\\welcomeLoginF.js":"103","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\isoCtrlF\\isoCtrlF.js":"104","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\loadingScreen\\loadingScreen.js":"105","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\loadingScreen3D\\loadingScreen3D.js":"106","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\alert\\alert.js":"107"},{"size":756,"mtime":1620977886750,"results":"108","hashOfConfig":"109"},{"size":2479,"mtime":1628756286359,"results":"110","hashOfConfig":"109"},{"size":375,"mtime":1620977886757,"results":"111","hashOfConfig":"109"},{"size":71984,"mtime":1628580331285,"results":"112","hashOfConfig":"109"},{"size":1640,"mtime":1628758736587,"results":"113","hashOfConfig":"109"},{"size":1093,"mtime":1627026148543,"results":"114","hashOfConfig":"109"},{"size":3627,"mtime":1621337132858,"results":"115","hashOfConfig":"109"},{"size":1969,"mtime":1628685758527,"results":"116","hashOfConfig":"109"},{"size":52489,"mtime":1629187519667,"results":"117","hashOfConfig":"109"},{"size":19284,"mtime":1628753502072,"results":"118","hashOfConfig":"109"},{"size":344,"mtime":1614590522413,"results":"119","hashOfConfig":"109"},{"size":5327,"mtime":1628580532320,"results":"120","hashOfConfig":"109"},{"size":10984,"mtime":1629187025048,"results":"121","hashOfConfig":"109"},{"size":1960,"mtime":1628580532389,"results":"122","hashOfConfig":"109"},{"size":4771,"mtime":1620977886735,"results":"123","hashOfConfig":"109"},{"size":5869,"mtime":1628580330938,"results":"124","hashOfConfig":"109"},{"size":7813,"mtime":1628758451041,"results":"125","hashOfConfig":"109"},{"size":39950,"mtime":1629110133997,"results":"126","hashOfConfig":"109"},{"size":1417,"mtime":1628685713371,"results":"127","hashOfConfig":"109"},{"size":12270,"mtime":1628580330906,"results":"128","hashOfConfig":"109"},{"size":6393,"mtime":1628685670674,"results":"129","hashOfConfig":"109"},{"size":17488,"mtime":1628580331209,"results":"130","hashOfConfig":"109"},{"size":16244,"mtime":1628757690821,"results":"131","hashOfConfig":"109"},{"size":1206,"mtime":1628580532324,"results":"132","hashOfConfig":"109"},{"size":3526,"mtime":1628580532313,"results":"133","hashOfConfig":"109"},{"size":2212,"mtime":1623664277590,"results":"134","hashOfConfig":"109"},{"size":1125,"mtime":1614590522410,"results":"135","hashOfConfig":"109"},{"size":9602,"mtime":1627026147628,"results":"136","hashOfConfig":"109"},{"size":480,"mtime":1627641189143,"results":"137","hashOfConfig":"109"},{"size":3981,"mtime":1628771902416,"results":"138","hashOfConfig":"109"},{"size":3135,"mtime":1628686709384,"results":"139","hashOfConfig":"109"},{"size":12571,"mtime":1628580331103,"results":"140","hashOfConfig":"109"},{"size":1191,"mtime":1620977886735,"results":"141","hashOfConfig":"109"},{"size":11100,"mtime":1628580331001,"results":"142","hashOfConfig":"109"},{"size":1846,"mtime":1620977886735,"results":"143","hashOfConfig":"109"},{"size":14813,"mtime":1628580331111,"results":"144","hashOfConfig":"109"},{"size":9895,"mtime":1629111053742,"results":"145","hashOfConfig":"109"},{"size":1208,"mtime":1620977886735,"results":"146","hashOfConfig":"109"},{"size":4971,"mtime":1629117117768,"results":"147","hashOfConfig":"109"},{"size":6983,"mtime":1628580532335,"results":"148","hashOfConfig":"109"},{"size":3773,"mtime":1627026148377,"results":"149","hashOfConfig":"109"},{"size":1195,"mtime":1623664277542,"results":"150","hashOfConfig":"109"},{"size":8394,"mtime":1629186187483,"results":"151","hashOfConfig":"109"},{"size":1201,"mtime":1623664277576,"results":"152","hashOfConfig":"109"},{"size":1521,"mtime":1628580532369,"results":"153","hashOfConfig":"109"},{"size":1191,"mtime":1623664277544,"results":"154","hashOfConfig":"109"},{"size":5611,"mtime":1628580532357,"results":"155","hashOfConfig":"109"},{"size":1569,"mtime":1628580532338,"results":"156","hashOfConfig":"109"},{"size":1966,"mtime":1623664277581,"results":"157","hashOfConfig":"109"},{"size":1232,"mtime":1627026147625,"results":"158","hashOfConfig":"109"},{"size":12675,"mtime":1629186228852,"results":"159","hashOfConfig":"109"},{"size":6147,"mtime":1628685960426,"results":"160","hashOfConfig":"109"},{"size":7171,"mtime":1628580532332,"results":"161","hashOfConfig":"109"},{"size":6974,"mtime":1627026147835,"results":"162","hashOfConfig":"109"},{"size":1532,"mtime":1628580532367,"results":"163","hashOfConfig":"109"},{"size":4279,"mtime":1627026148294,"results":"164","hashOfConfig":"109"},{"size":5888,"mtime":1627026147808,"results":"165","hashOfConfig":"109"},{"size":12977,"mtime":1629186234056,"results":"166","hashOfConfig":"109"},{"size":12638,"mtime":1629186195205,"results":"167","hashOfConfig":"109"},{"size":7160,"mtime":1627026147918,"results":"168","hashOfConfig":"109"},{"size":6981,"mtime":1627026147878,"results":"169","hashOfConfig":"109"},{"size":1536,"mtime":1628580532373,"results":"170","hashOfConfig":"109"},{"size":5913,"mtime":1627026147893,"results":"171","hashOfConfig":"109"},{"size":1528,"mtime":1628580532366,"results":"172","hashOfConfig":"109"},{"size":7122,"mtime":1628580532316,"results":"173","hashOfConfig":"109"},{"size":5882,"mtime":1627026147553,"results":"174","hashOfConfig":"109"},{"size":6974,"mtime":1627026147538,"results":"175","hashOfConfig":"109"},{"size":4194,"mtime":1627026148307,"results":"176","hashOfConfig":"109"},{"size":12581,"mtime":1629186218522,"results":"177","hashOfConfig":"109"},{"size":3225,"mtime":1628758757051,"results":"178","hashOfConfig":"109"},{"size":12470,"mtime":1629186137844,"results":"179","hashOfConfig":"109"},{"size":2685,"mtime":1628758747552,"results":"180","hashOfConfig":"109"},{"size":8138,"mtime":1628759431206,"results":"181","hashOfConfig":"109"},{"size":3958,"mtime":1628759441552,"results":"182","hashOfConfig":"109"},{"size":8134,"mtime":1628759455631,"results":"183","hashOfConfig":"109"},{"size":3915,"mtime":1628759462172,"results":"184","hashOfConfig":"109"},{"size":15990,"mtime":1627026148378,"results":"185","hashOfConfig":"109"},{"size":3892,"mtime":1628759371508,"results":"186","hashOfConfig":"109"},{"size":8093,"mtime":1628759363573,"results":"187","hashOfConfig":"109"},{"size":1905,"mtime":1627026147654,"results":"188","hashOfConfig":"109"},{"size":15140,"mtime":1629186181557,"results":"189","hashOfConfig":"109"},{"size":4202,"mtime":1627026148376,"results":"190","hashOfConfig":"109"},{"size":4206,"mtime":1627026148295,"results":"191","hashOfConfig":"109"},{"size":4210,"mtime":1627026148308,"results":"192","hashOfConfig":"109"},{"size":4199,"mtime":1627026148267,"results":"193","hashOfConfig":"109"},{"size":4195,"mtime":1627026148238,"results":"194","hashOfConfig":"109"},{"size":4219,"mtime":1627026148308,"results":"195","hashOfConfig":"109"},{"size":4248,"mtime":1627376032138,"results":"196","hashOfConfig":"109"},{"size":11404,"mtime":1629186174844,"results":"197","hashOfConfig":"109"},{"size":7332,"mtime":1627026148073,"results":"198","hashOfConfig":"109"},{"size":3894,"mtime":1628759476400,"results":"199","hashOfConfig":"109"},{"size":3132,"mtime":1628759469960,"results":"200","hashOfConfig":"109"},{"size":6008,"mtime":1627460841591,"results":"201","hashOfConfig":"109"},{"size":1527,"mtime":1628580565964,"results":"202","hashOfConfig":"109"},{"size":5886,"mtime":1627460696389,"results":"203","hashOfConfig":"109"},{"size":3902,"mtime":1628759407811,"results":"204","hashOfConfig":"109"},{"size":5608,"mtime":1628690074585,"results":"205","hashOfConfig":"109"},{"size":8108,"mtime":1628759399749,"results":"206","hashOfConfig":"109"},{"size":5884,"mtime":1627026147705,"results":"207","hashOfConfig":"109"},{"size":1526,"mtime":1628580532362,"results":"208","hashOfConfig":"109"},{"size":6986,"mtime":1627026147705,"results":"209","hashOfConfig":"109"},{"size":7140,"mtime":1627026147720,"results":"210","hashOfConfig":"109"},{"size":5483,"mtime":1628756333111,"results":"211","hashOfConfig":"109"},{"size":80078,"mtime":1629192943555,"results":"212","hashOfConfig":"109"},{"size":797,"mtime":1628686774003,"results":"213","hashOfConfig":"109"},{"size":748,"mtime":1628580532384,"results":"214","hashOfConfig":"109"},{"size":4951,"mtime":1629192427119,"results":"215","hashOfConfig":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},"1eahr2m",{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"218"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"218"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"218"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"218"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"218"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"218"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"218"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"218"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"218"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"218"},"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\index.js",[],["444","445"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\App.js",["446","447","448"],"import './App.css';\r\nimport IsoCtrl from './pages/isoCtrl/isoCtrl';\r\nimport Welcome from './pages/welcome/welcome';\r\nimport { Switch, Route} from 'react-router-dom';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport Register from './pages/register/register';\r\nimport LoginPage from './pages/loginPage/loginPage';\r\nimport ChangePasswordPage from './pages/changePassword/changePassword';\r\nimport Equipments from './pages/equipments/equipments';\r\nimport Instrumentation from './pages/instrumentation/instrumentation';\r\nimport Civil from './pages/civil/civil';\r\nimport Electrical from './pages/electrical/electrical';\r\nimport Home from './pages/home/home'\r\nimport Piping from './pages/piping/piping';\r\nimport ProgressCurve from './pages/progressCurve/progressCurve';\r\nimport Navis from './pages/navis/navis';\r\nimport WelcomeLoginF from './pages/welcomeLoginF/welcomeLoginF';\r\nimport IsoCtrlF from './pages/isoCtrlF/isoCtrlF';\r\nrequire('dotenv').config();\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/\"} component={WelcomeLoginF}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/isotracker\"} component={IsoCtrlF}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/home\"} component={Home}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/register\"} component={Register}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/changepassword\"} component={ChangePasswordPage}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/equipments\"} component={Equipments}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/instrumentation\"} component={Instrumentation}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/civil\"} component={Civil}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/electrical\"} component={Electrical}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/piping\"} component={Piping}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/3dprogress\"} component={ProgressCurve}></Route>\r\n            <Route exact path={\"/\"+process.env.REACT_APP_PROJECT+\"/navis\"} component={Navis}></Route>\r\n        </Switch>\r\n      </Router>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\isoCtrl\\isoCtrl.js",["449","450","451","452","453"],"import DataTable from \"../../components/datatable/datatable\"\r\nimport ReportBtns from \"../../components/reportBtns/reportBtns\"\r\nimport StateTable from \"../../components/stateTable/stateTable\"\r\nimport NavBtns from \"../../components/navBtns/navBtns\"\r\nimport DragAndDrop from \"../../components/dragAndDrop/dragAndDrop\"\r\nimport \"./isoCtrl.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport ActionButtons from \"../../components/actionBtns/actionBtns\"\r\nimport SelectPag from \"../../components/selectPag/selectPag\"\r\nimport CheckInTable from \"../../components/checkInTable/checkInTable\"\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport MyTrayBtn from \"../../components/myTrayBtn/myTrayBtn\"\r\nimport MyTrayTable from \"../../components/myTrayTable/myTrayTable\"\r\nimport BinBtn from '../../components/binBtn/binBtn'\r\nimport BinTable from \"../../components/binTable/binTable\"\r\nimport OnHoldTable from \"../../components/onHoldTable/onHoldTable\"\r\nimport StatusDataTable from \"../../components/statusDataTable/statusDataTable\"\r\nimport HistoryDataTable from \"../../components/historyDataTable/historyDataTable\"\r\nimport RoleDropDown from \"../../components/roleDropDown/roleDropDown\"\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport OnHoldBtn from \"../../components/onHoldBtn/onHoldBtn\"\r\nimport ProcInsBtn from \"../../components/procInsBtn/procInsBtn\"\r\nimport ReportsBtn from \"../../components/reportsBtn/reportsBtn\"\r\nimport ProcInstTable from \"../../components/procInstTable/procInstTable\"\r\nimport JSZip from 'jszip'\r\nimport { saveAs } from 'file-saver';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport ReportBoxBtns from \"../../components/reportBoxBtns/reportBoxBtns\"\r\nimport IssuedBtn from \"../../components/issuedBtn/issuedBtn\"\r\nimport ProgressBtn from \"../../components/progressBtn/progressBtn\"\r\nimport ProgressPlot from \"../../components/progressPlot/progressPlot\"\r\nimport ModelledBtn from \"../../components/modelledBtn/modelledBtn\"\r\nimport ModelledDataTable from \"../../components/modelledDataTable/modelledDataTable\"\r\nimport UsersDataTable from \"../../components/usersDataTable/usersDataTable\"\r\n\r\n\r\nconst IsoCtrl = () => {\r\n   \r\n    document.body.style.zoom = 0.9\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const[pagination, setPagination] = useState(8) //Controla el numero de entradas por pagina de la tabla\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const [selected, setSelected] = useState([]);\r\n    const [updateData, setUpdateData] = useState();\r\n    const [comment, setComment] = useState(\" \");\r\n    const [commentAlert, setCommentAlert] = useState(false);\r\n    const [downloadZip, setDownloadzip] = useState(new JSZip());\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorUnclaim, setErrorUnclaim] = useState(false);\r\n    const [errorPI, setErrorPI] = useState(false);\r\n    const [errorCL, setErrorCL] = useState(false);\r\n    const [transactionSuccess, setTransactionSuccess] = useState(false);\r\n    const [errorReports, setErrorReports] = useState(false);\r\n    const [errorUnclaimR, setErrorUnclaimR] = useState(false);\r\n    const [warningSelected, setWarningSelected] = useState(false);\r\n    const [blocked, setBlocked] = useState(false);\r\n    const [errorReportD, setErrorReportD] = useState(false)\r\n    const [errorReportDIndex, setErrorReportDIndex] = useState(0);\r\n    const [errorDeleteUser, setErrorDeleteUser] = useState(false);\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"tab\")) //Controla la tabla y botones que se muestran\r\n    //La altura de la tabla es fija en funcion de la paginacion para evitar que los botones se muevan\r\n    var dataTableHeight = 8\r\n\r\n    if (pagination === 8){\r\n        dataTableHeight = \"550px\"\r\n    }if(pagination === 25){\r\n        dataTableHeight = \"1250px\"\r\n    }if(pagination === 50){\r\n        dataTableHeight = \"2250px\"\r\n    }if(pagination === 100){\r\n        dataTableHeight = \"4330px\"\r\n    }if(pagination === 500){\r\n        dataTableHeight = \"19300px\"\r\n    }\r\n\r\n    //Componentes de la pagina que varian en funcion del estado\r\n    var uploadButton, actionButtons, actionText, commentBox, tableContent, procInsBtn, progressBtn, modelledBtn, myTrayBtn, usersButton\r\n    var currentTabText = currentTab\r\n    if(currentTabText === \"LDE/IsoControl\"){\r\n        currentTabText = \"LOS/IsoControl\"\r\n    }\r\n    tableContent = <DataTable forceUnclaim = {forceUnclaim.bind(this)} onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} currentRole={currentRole} updateData = {updateData} unlock = {unlock.bind(this)} rename = {rename.bind(this)}/>\r\n    var pageSelector = <SelectPag onChange={value => setPagination(value)} pagination = {pagination}/>\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    \r\n    \r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            setErrorPI(false)\r\n            setErrorUnclaimR(false)\r\n            setErrorCL(false)\r\n            setUpdateData(!updateData)\r\n            setTransactionSuccess(false);\r\n            setErrorUnclaim(false)\r\n            setErrorReports(false)\r\n            setLoading(false)\r\n            setWarningSelected(false)\r\n            setBlocked(false)\r\n            setErrorReportD(false)\r\n            setErrorDeleteUser(false)\r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n        setErrorUnclaimR(false)\r\n        setErrorPI(false);\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false)\r\n        setErrorUnclaim(false)\r\n        setLoading(false)\r\n        setErrorReports(false)\r\n        setSelected([])\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n    }, [currentTab])\r\n\r\n    const getProgress = () =>{\r\n        setUpdateData(!updateData)\r\n\r\n    }\r\n\r\n    const claim = async(event) => {\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setWarningSelected(false)\r\n        setErrorPI(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if(currentTab === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claimProc\", options)\r\n                }\r\n            }else if(currentTab === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claim\", options)\r\n                }\r\n            \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n            \r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n     \r\n    }   \r\n    \r\n    const forceClaim = async(username) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : username,\r\n                    file: selected[i],\r\n                    los: currentUser\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/forceClaim\", options)\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    const unclaim = async (event) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if (currentRole === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaimProc\", options)\r\n                }\r\n            }else if(currentRole === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaim\", options)\r\n                    .then(response => response.json())\r\n                    .then(json=>{\r\n                        if(json.error === \"forced\"){\r\n                            setErrorUnclaim(true)\r\n                        }else if(json.error === \"returned\"){\r\n                            setErrorUnclaimR(true)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                    });\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n        \r\n    }\r\n\r\n    async function forceUnclaim(fileName){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n        const body ={\r\n            user : currentUser,\r\n            file: fileName,\r\n            role: currentRole\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/forceUnclaim\", options)\r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n\r\n    const verifyClick = async(event) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/verify\", options)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function cancelVerifyClick(filename){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: filename,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelVerify\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function transaction(destiny, comments){\r\n        \r\n        if(selected.length > 0){\r\n            setErrorUnclaimR(false)\r\n            setWarningSelected(false)\r\n            setErrorReports(false)\r\n            setErrorCL(false)\r\n            setErrorUnclaim(false)\r\n            setErrorPI(false);\r\n            setTransactionSuccess(false);\r\n            setLoading(true)\r\n            setErrorReportD(false)\r\n            setBlocked(false)\r\n            setErrorDeleteUser(false)\r\n            \r\n            if(destiny === \"Design\"){\r\n                if(comment.length > 1){\r\n                    setComment(\" \")\r\n                    setCommentAlert(false)\r\n                    localStorage.setItem(\"update\", true)\r\n                    for (let i = 0; i < selected.length; i++){\r\n                        const body ={\r\n                            user : currentUser,\r\n                            fileName: selected[i],\r\n                            to: destiny,\r\n                            role: secureStorage.getItem(\"role\"),\r\n                            comment: comment,\r\n                            deleted: 0,\r\n                            onhold: 0\r\n                        }\r\n                        const options = {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            body: JSON.stringify(body)\r\n                        }\r\n                        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                        .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n                        \r\n                    }\r\n                }else{\r\n                    setCommentAlert(true)\r\n                }\r\n            }else if (destiny === \"LDE/Isocontrol\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/piStatus/\"+selected[i], options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                        if(json.sit === 1 || json.sit === 4 || json.sit === 5|| json.spo === 1 || json.spo === 4 || json.spo === 5){\r\n                            localStorage.setItem(\"update\", true)\r\n                            setErrorPI(true);\r\n                            setTransactionSuccess(false);\r\n                        }else{\r\n                            setCommentAlert(false)\r\n                            localStorage.setItem(\"update\", true)\r\n                            let deleted, hold = 0\r\n                    \r\n                            const body ={\r\n                                user : currentUser,\r\n                                fileName: selected[i],\r\n                                to: destiny,\r\n                                role: secureStorage.getItem(\"role\"),\r\n                                comment: null,\r\n                                deleted: deleted,\r\n                                onhold: hold\r\n                            }\r\n                            const options = {\r\n                                method: \"POST\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                },\r\n                                body: JSON.stringify(body)\r\n                            }\r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                            .then(response => response.json())\r\n                            .then(async json=>{\r\n                                if(json.error){\r\n                                    await setErrorCL(true) \r\n                                }else if(json.blocked){\r\n                                    setBlocked(true)\r\n                                }\r\n                            })\r\n                            if(!errorCL && !blocked){\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                            \r\n                        }\r\n                    })\r\n                }\r\n                await setUpdateData(!updateData)\r\n                setLoading(false)\r\n            }else if(destiny === \"On hold\"){\r\n                setCommentAlert(false)\r\n                localStorage.setItem(\"update\", true)\r\n                let deleted, hold = 0\r\n\r\n                if(destiny === \"Recycle bin\"){\r\n                    deleted = 1\r\n                }\r\n\r\n                if(destiny === \"On hold\"){\r\n                    hold = 1\r\n                }\r\n                for (let i = 0; i < selected.length; i++){\r\n                    \r\n                    const body ={\r\n                        user : currentUser,\r\n                        fileName: selected[i],\r\n                        to: destiny,\r\n                        role: secureStorage.getItem(\"role\"),\r\n                        comment: comments,\r\n                        deleted: deleted,\r\n                        onhold: hold\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                    .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n                }\r\n            }else{\r\n                setCommentAlert(false)\r\n                localStorage.setItem(\"update\", true)\r\n                let deleted, hold = 0\r\n\r\n                if(destiny === \"Recycle bin\"){\r\n                    deleted = 1\r\n                }\r\n\r\n                if(destiny === \"On hold\"){\r\n                    hold = 1\r\n                }\r\n                for (let i = 0; i < selected.length; i++){\r\n                    \r\n                    const body ={\r\n                        user : currentUser,\r\n                        fileName: selected[i],\r\n                        to: destiny,\r\n                        role: secureStorage.getItem(\"role\"),\r\n                        comment: null,\r\n                        deleted: deleted,\r\n                        onhold: hold\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                    .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }    \r\n    }\r\n\r\n    async function returnLead(destiny){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setWarningSelected(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setErrorUnclaimR(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                setLoading(true)\r\n                const body ={\r\n                    user : currentUser,\r\n                    fileName: selected[i],\r\n                    to: destiny,\r\n                    from: currentTab\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/returnLead\", options)\r\n                .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n    \r\n    async function returnLeadStress(){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setErrorUnclaimR(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                        \r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    comments: comment\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/returnLeadStress\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    function handleComment(event){\r\n        setComment(event.target.value)\r\n    }\r\n\r\n    async function restore(){\r\n        setErrorReports(false)\r\n        setErrorUnclaimR(false)\r\n        setErrorReportD(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    fileName: selected[i],\r\n                    user: currentUser,\r\n                    role: currentRole,\r\n                    deleted: 0,\r\n                    onhold: 0\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/restore\", options)\r\n                setTransactionSuccess(true)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    function procOrInst(tab) {\r\n        if(tab === \"Process\" || tab === \"Instrument\"){\r\n            setCurrentTab(tab)\r\n        }else if (currentRole === \"Process\"){\r\n            setCurrentTab(\"Process\")\r\n        }else{\r\n            setCurrentTab(\"Instrument\")\r\n        }\r\n    }\r\n\r\n    async function sendProcessClick(fileName){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/process\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendInstrumentClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/instrument\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendCancelProcessClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body ={\r\n            file: fileName,\r\n            user: currentUser,\r\n            role: currentRole,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelProc\", options)\r\n    \r\n        await setUpdateData(!updateData)\r\n        await setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendCancelInstrumentClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setWarningSelected(false)\r\n        setLoading(true)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n        const body ={\r\n            file: fileName,\r\n            user: currentUser,\r\n            role: currentRole\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelInst\", options)\r\n    \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    function updateD(){\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function downloadFiles(){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            /*\r\n            if(selected.length === 1){\r\n                localStorage.setItem(\"update\", true)\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/pdf\"\r\n                        }\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n                    .then(res => res.blob())\r\n                        .then(response =>{\r\n                            console.log(\"Se descarga\")\r\n                            download(new Blob([response]), selected[i], \"application/pdf\")\r\n                        })\r\n                }\r\n            }else if (selected.length > 1){\r\n                localStorage.setItem(\"update\", true)\r\n                for (let i = 0; i < selected.length; i++){\r\n\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/pdf\"\r\n                        }\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n                    .then(res => res.blob())\r\n                        .then(response =>{\r\n                            setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                        })\r\n                }\r\n                const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n                downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n                    saveAs(blob,  zipname)\r\n                })\r\n                \r\n            }\r\n            await setUpdateData(!updateData)\r\n            await setDownloadzip(new JSZip())   \r\n            setLoading(false)\r\n            */\r\n            for (let i = 0; i < selected.length; i++){\r\n\r\n                const options = {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/pdf\"\r\n                    }\r\n                }\r\n                \r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getAttach/\"+selected[i], options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n                    .then(res => res.blob())\r\n                    .then( async response =>{\r\n                        setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                        for(let i = 0; i < json.length; i++){\r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+json[i], options)\r\n                            .then(res => res.blob())\r\n                            .then(response =>{\r\n                                setDownloadzip(downloadZip.file(json[i], new Blob([response]),{binary:true}))   \r\n                            })\r\n                        }\r\n                        \r\n                    })\r\n                })\r\n            \r\n\r\n                \r\n        \r\n            }\r\n            const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n            downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n                saveAs(blob,  zipname)\r\n            })  \r\n            \r\n            await setDownloadzip(new JSZip())   \r\n            //await setAttachFiles(null)\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function downloadHistory(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadHistory/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"FROM\", \"TO\", \"DATE\", \"COMMENT\", \"USER\"]\r\n            exportToExcel(JSON.parse(json), \"Comments\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadStatus(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadStatus/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            let headers = null\r\n            if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n                headers = [\"ISO_ID\", \"START_DATE\", \"CURRENT_DATE\", \"TYPE\", \"CONDITION\", \"TRAY\"]\r\n            }else{\r\n                headers = [\"ISO_ID\", \"START_DATE\", \"CURRENT_DATE\", \"CONDITION\", \"TRAY\"]\r\n            }\r\n            \r\n            exportToExcel(JSON.parse(json), \"Status\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadPI(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadPI/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"PROCESS\", \"INSTRUMENTATION\", \"UPDATED_AT\"]\r\n            exportToExcel(JSON.parse(json), \"IsoStatusSIT-SPO\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadIssued(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadIssued/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"REV0\", \"REV1\", \"REV2\", \"REV3\", \"REV4\"]\r\n            exportToExcel(JSON.parse(json), \"IsoStatusIssued\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadStatus3D(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadStatus3D/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            let output = JSON.stringify(json.log)\r\n            output = output.substring(1,output.length-1)\r\n            output = output.replaceAll(\",\", \"\\n\")\r\n            output = output.replaceAll(/['\"]+/g, \"\")\r\n\r\n\r\n            const data = new Blob([output], { type: 'txt' });\r\n            FileSaver.saveAs(data, \"fromIsoTrackerTo3d.mac\");\r\n        })\r\n    }\r\n\r\n    async function downloadModelled(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadModelled/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"TAG\", \"ISO_ID\", \"TYPE\"]\r\n            exportToExcel(JSON.parse(json), \"Modelled\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        setErrorReports(false)\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n\r\n        let wscols = []\r\n        for(let i = 0; i < headers.length; i++){\r\n            wscols.push({width:35})\r\n        }\r\n\r\n        const ws = XLSX.utils.json_to_sheet(apiData);   \r\n        ws[\"!cols\"] = wscols\r\n        for(let i = 0; i < headers.length; i++){\r\n            ws[header_cells[i]].v = headers[i]\r\n        }\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n    async function setUploading(active){\r\n        setErrorReports(false)\r\n        setErrorReportD(false)\r\n        setLoading(active)\r\n        if(!active){\r\n            setTransactionSuccess(true)\r\n        }\r\n    }\r\n\r\n    async function setErrorReport(){\r\n        setErrorReports(true)\r\n    }\r\n\r\n    async function issue(transmittal, date){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                    transmittal: transmittal,\r\n                    date: date\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/toIssue\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    async function newRev() {\r\n        setErrorReports(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/newRev\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    \r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    async function request() {\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/request\", options)\r\n                \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }\r\n\r\n    }\r\n\r\n    async function returnIso(destiny, comments){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if(comments.length < 1){\r\n                comments = comment\r\n            }\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                    from: currentTab,\r\n                    destiny: destiny,\r\n                    comments: comments\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/returnIso\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n                \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setComment(\"\")\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function success(){\r\n        setTransactionSuccess(true)\r\n    }\r\n\r\n    async function unlock(filename){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            fileName: filename\r\n          }\r\n      \r\n          const options = {\r\n              method: \"POST\",\r\n              headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify(body)\r\n          }\r\n      \r\n          fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unlock\", options)\r\n          .then(response => console.log(\"Unlocked\"))\r\n\r\n          setUpdateData(!updateData)\r\n    }\r\n\r\n    async function rename(newName, oldName){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            oldName: oldName,\r\n            newName: newName\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/rename\", options)\r\n        .then(response => console.log(\"Cambiado\"))\r\n\r\n        setTransactionSuccess(true)\r\n        \r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function setErrorReportData(index){\r\n        setErrorReportD(true)\r\n        setErrorReportDIndex(index)\r\n    }\r\n\r\n    async function addUser(username, email, roles){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            username: username,\r\n            email: email,\r\n            roles: roles\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/createUser\", options)\r\n        .then(response => response.json())\r\n        .then(json =>{\r\n            if(json.success){\r\n                setTransactionSuccess(true)\r\n            }\r\n        })\r\n        setUpdateData(!updateData)\r\n        \r\n    }\r\n\r\n    async function deleteUser(id){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n\r\n        const options = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/user/\"+id, options)\r\n        .then(response => response.json())\r\n        .then(json =>{\r\n            if(json.error){\r\n                setErrorDeleteUser(true)\r\n            }else{\r\n                setTransactionSuccess(true)\r\n            }\r\n        })\r\n\r\n       setUpdateData(!updateData)\r\n\r\n    }\r\n\r\n    async function submitRoles(id, roles){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            id: id,\r\n            roles: roles\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/users/manageRoles\", options)\r\n        .then(response => response.json())\r\n        .then(json =>{\r\n            if(json.success){\r\n                setTransactionSuccess(true)\r\n            }\r\n        })\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    if(currentTab === \"Upload IsoFiles\"){\r\n        secureStorage.setItem(\"tab\", \"Upload IsoFiles\")\r\n        uploadButton = <button  type=\"button\" class=\"btn btn-info btn-lg\" style={{backgroundColor: \"#17a2b8\", width:\"180px\"}}><b>Upload</b></button>\r\n        tableContent = <DragAndDrop mode={\"upload\"} role={currentRole} user={currentUser}  uploaded={getProgress.bind(this)}/>\r\n        pageSelector = null\r\n    }if(currentTab === \"Design\" && currentRole === \"Design\"){\r\n        uploadButton = <button  type=\"button\" className=\"btn btn-info btn-lg\" style={{backgroundColor: \"lightblue\", width:\"180px\"}} onClick={() => setCurrentTab(\"Upload IsoFiles\")}><b>Upload</b></button>\r\n    }if(currentTab === \"CheckBy\"){\r\n        tableContent = <CheckInTable/>\r\n    }if(currentTab === \"My Tray\"){\r\n        tableContent = <MyTrayTable  updateData = {updateData} onChange={value=> setSelected(value)} cancelVerifyClick={cancelVerifyClick.bind(this)} sendProcessClick={sendProcessClick.bind(this)} success={success.bind(this)} sendInstrumentClick = {sendInstrumentClick.bind(this)} sendCancelProcessClick={sendCancelProcessClick.bind(this)} sendCancelInstrumentClick={sendCancelInstrumentClick.bind(this)} updateD = {updateD.bind(this)} pagination = {pagination} currentRole = {currentRole} currentUser = {currentUser} selected={selected} />\r\n    }if(currentTab === \"Recycle bin\"){\r\n        tableContent = <BinTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"On hold\"){\r\n        tableContent = <OnHoldTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"Status\"){\r\n        tableContent = <StatusDataTable onChange={value=> setSelected(value)} pagination = {pagination} role = {currentRole}/>\r\n    }if(currentTab === \"History\"){\r\n        tableContent = <HistoryDataTable pagination = {pagination}/>   \r\n    }if(currentRole === \"Process\" || currentRole === \"Instrument\" || currentRole === \"SpecialityLead\"){\r\n        procInsBtn = <ProcInsBtn onChange={value => procOrInst(value)} currentTab = {currentTab} />\r\n    }if(currentTab === \"Process\" || currentTab === \"Instrument\"){\r\n        tableContent = <ProcInstTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData} />\r\n    }if(currentTab === \"Reports\"){\r\n        tableContent = <ReportBoxBtns user={currentUser} downloadHistory={downloadHistory.bind(this)} downloadStatus={downloadStatus.bind(this)} downloadPI={downloadPI.bind(this)} downloadIssued={downloadIssued.bind(this)} setErrorReport={setErrorReport.bind(this)} setUploading={setUploading.bind(this)} downloadStatus3D={downloadStatus3D.bind(this)} downloadModelled={downloadModelled.bind(this)} setErrorReportData={setErrorReportData.bind(this)}/>\r\n    }if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n        progressBtn = <ProgressBtn onChange={value => setCurrentTab(\"Progress\")} currentTab = {currentTab}></ProgressBtn>\r\n        modelledBtn = <ModelledBtn onChange={value => setCurrentTab(\"Modelled\")} currentTab = {currentTab}></ModelledBtn>\r\n    }if(currentTab === \"Progress\"){\r\n        tableContent = <ProgressPlot></ProgressPlot>\r\n    }if(currentTab === \"Modelled\"){\r\n        tableContent = <ModelledDataTable  pagination = {pagination}></ModelledDataTable>\r\n    }if(currentRole !== \"Review\"){\r\n        myTrayBtn = <MyTrayBtn onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n    }if(currentRole === \"SpecialityLead\"){\r\n        if (currentTab === \"Users\"){\r\n            usersButton = <button  type=\"button\" className=\"btn btn-info btn-lg\" style={{backgroundColor: \"#17a2b8\", width:\"180px\"}} onClick={() => setCurrentTab(\"Users\")}><b>Users</b></button>\r\n            secureStorage.setItem(\"tab\", \"Users\")\r\n        }else{\r\n            usersButton = <button  type=\"button\" className=\"btn btn-info btn-lg\" style={{backgroundColor: \"lightblue\", width:\"180px\"}} onClick={() => setCurrentTab(\"Users\")}><b>Users</b></button>\r\n        }\r\n    }if(currentTab === \"Users\"){\r\n \r\n        tableContent = <UsersDataTable pagination = {pagination} updateData={updateData} deleteUser={deleteUser.bind(this)} submitRoles={submitRoles.bind(this)}/>\r\n        if (pagination === 8){\r\n            dataTableHeight = \"650px\"\r\n        }if(pagination === 25){\r\n            dataTableHeight = \"1500px\"\r\n        }if(pagination === 50){\r\n            dataTableHeight = \"2720px\"\r\n        }if(pagination === 100){\r\n            dataTableHeight = \"5200px\"\r\n        }\r\n    }\r\n\r\n    if(currentTab === \"My Tray\" || currentTab === \"LDE/IsoControl\"){\r\n        commentBox = <div>\r\n            <textarea placeholder=\"Comments\" class=\"comments\" cols=\"100\" rows=\"2\" required=\"\" maxlength=\"400\" name=\"comments\" value={comment} onChange={handleComment}></textarea>\r\n        </div>\r\n    }\r\n\r\n    \r\n\r\n    if(((currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Design\") || \r\n    ((currentRole === \"Stress\" || currentRole === \"StressLead\") && currentTab === \"Stress\") ||\r\n    ((currentRole === \"Supports\" || currentRole === \"SupportsLead\") && currentTab === \"Supports\") ||\r\n    ((currentRole === \"Materials\") && currentTab === \"Materials\") ||\r\n    ((currentRole === \"Issuer\") && currentTab === \"Issuer\") ||\r\n    ((currentRole === \"SpecialityLead\" && currentTab ===\"SpecialityLead\") ||\r\n    (currentTab=== \"My Tray\")) || (((currentTab === \"Recycle bin\" || currentTab === \"On hold\") && currentRole === \"DesignLead\") || \r\n    currentRole === \"SpecialityLead\" && currentTab !== \"Progress\") || (currentTab === \"Process\" && currentRole === \"Process\") ||\r\n    (currentRole === \"Instrument\" && currentTab === \"Instrument\") ||\r\n    (currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Issued\"){\r\n        actionText = <b className=\"progress__text\">Click an action for selected IsoFiles:</b>\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} returnLeadStress={returnLeadStress.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} issue={issue.bind(this)} newRev={newRev.bind(this)} request={request.bind(this)} returnIso={returnIso.bind(this)} addUser={addUser.bind(this)} onlyDownload = {false} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }else if(currentTab !== \"History\" && currentTab !== \"Upload IsoFiles\" && currentTab !== \"Recycle bin\" && currentTab !== \"Reports\" && currentTab !== \"Progress\" && currentTab !== \"Modelled\"){\r\n        actionText = <b className=\"progress__text\">Click an action for selected IsoFiles:</b>\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} returnLeadStress={returnLeadStress.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} issue={issue.bind(this)} newRev={newRev.bind(this)} request={request.bind(this)} returnIso={returnIso.bind(this)} addUser={addUser.bind(this)} onlyDownload = {true} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }\r\n    if(currentTab === \"Modelled\"){\r\n        actionText = null\r\n        actionButtons = <button className=\"btn btn-sm btn-success\" style={{marginTop:\"40px\"}} onClick={()=>downloadModelled()}>Export</button>\r\n    }\r\n\r\n    if(currentTab === \"Users\"){\r\n        actionText = null\r\n    }\r\n\r\n    if(currentRole === \"Project\"){\r\n        actionText = null\r\n        actionButtons = null\r\n    }\r\n    \r\n    return (\r\n        \r\n        <body>\r\n            \r\n            <NavBar onChange={value => setCurrentTab(value)}/>\r\n\r\n            <div className=\"isoCtrl__container\">     \r\n                <center>\r\n                    <Collapse in={loading}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\",zIndex:\"3\"}} severity=\"info\"\r\n                            >\r\n                            Processing...\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorPI}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            At least one isometric was on revision and wasn't sent to LDE/Isocontrol\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={transactionSuccess}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"success\"\r\n                            >\r\n                            Successful!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorUnclaim}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Can't unclaim an iso assigned by LOS!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorUnclaimR}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Can't unclaim a returned ISO!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorReports}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Missing columns!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorCL}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Missing clean!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={warningSelected}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"warning\"\r\n                            >\r\n                            Select at least one isometric!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={blocked}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            The isometric has been locked! Contact the administrator\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorReportD}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            The line {errorReportDIndex} of the report has an invalid type or progress!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorDeleteUser}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            This user has claimed isometrics and can't be deleted!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <h2 className=\"title__container\">\r\n                        <div className=\"roleSelector__container\">\r\n                            <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                         </div>\r\n                        <b >      \r\n                            <i className=\"iso__title\">IsoTracker</i>\r\n                        </b>\r\n                    </h2>\r\n                    <h3 className=\"iso__subtitle\">{currentTabText}</h3>\r\n                </center>\r\n                \r\n                <div>\r\n                    <div>\r\n                        <div style={{display:\"inline\"}}>\r\n                        {myTrayBtn}\r\n                            <td className=\"reportBtns__container\" style={{width:\"380px\"}}>\r\n                                \r\n                                <ReportBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n                                \r\n                            </td>\r\n                            <td>\r\n                                {uploadButton}\r\n                                {usersButton}\r\n                            </td>   \r\n                            <div className=\"stateTable__container\">\r\n                                \r\n                                <StateTable updateData={updateData} currentRole = {currentRole}/>\r\n                               \r\n                            </div>            \r\n\r\n                        </div>\r\n                    </div>\r\n                </div>              \r\n                \r\n                \r\n                <div style={{position: \"relative\", width:\"600px\"}}>\r\n                  {pageSelector}\r\n                  <BinBtn onChange={value => setCurrentTab(\"Recycle bin\")} currentTab = {currentTab}/>\r\n                  <OnHoldBtn onChange={value => setCurrentTab(\"On hold\")} currentTab = {currentTab}/>\r\n                  <IssuedBtn onChange={value => setCurrentTab(\"Issued\")} currentTab = {currentTab}/>\r\n                  <ReportsBtn onChange={value => setCurrentTab(\"Reports\")} currentTab = {currentTab}/>\r\n                  {progressBtn}\r\n                  {modelledBtn}\r\n                  {procInsBtn}\r\n                  \r\n\r\n                </div>\r\n                    \r\n                \r\n                <div style={{height: dataTableHeight}}>\r\n                    <br></br>\r\n                    <br></br> \r\n                    {tableContent}\r\n                </div>\r\n                <div className=\"bottom__container\">\r\n                    <Collapse in={commentAlert}>\r\n                        <Alert severity=\"error\"\r\n                            >\r\n                            Add a comment before sending the isos back to design!\r\n\r\n                            </Alert>\r\n                    </Collapse>\r\n                    <center className=\"actionBtns__container\">\r\n                        {actionText}\r\n                        {actionButtons}\r\n                    </center>\r\n                    <br></br>\r\n                    <center className=\"commentBox__container\">\r\n                        {commentBox}\r\n                    </center>\r\n                 \r\n                    \r\n                </div>\r\n            </div>\r\n            <center className=\"navBtns__center\">              \r\n                <NavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole}/>               \r\n            </center>\r\n            <br></br>\r\n        </body>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default IsoCtrl;\r\n","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\home\\home.js",["454"],"import NavBar from '../../components/navBar/navBar';\r\nimport MenuList from '../../components/menuList/menuList';\r\nimport React, { useState , useEffect} from 'react'\r\nimport './home.css'\r\nimport LoadingScreen3D from '../../components/loadingScreen3D/loadingScreen3D';\r\nimport GreenCircle from \"../../assets/images/green_circle.png\"\r\nimport BlueCircle from \"../../assets/images/blue_circle.png\"\r\nimport FullTrackerLogo from \"../../assets/images/3dtracker.png\"\r\n\r\n//Página de home con el menú para ir a las aplicaciones de isotracker\r\n\r\nconst Home = () =>{\r\n\r\n    const [content, setContent] = useState();\r\n    const [navBar, setNavBar] = useState(null);\r\n    const [circles, setCircles] = useState(null);\r\n\r\n    useEffect(() =>{\r\n\r\n        setContent(<LoadingScreen3D progress={\"25\"}/>)\r\n        setTimeout(() => {\r\n            setContent(<LoadingScreen3D progress={\"75\"}/>)\r\n        }, 1000)\r\n        setTimeout(() => {\r\n            setContent(<LoadingScreen3D progress={\"100\"}/>)\r\n        }, 2000)\r\n        setTimeout(() => {\r\n            setNavBar(<NavBar/>)\r\n            setContent(<MenuList/>)    \r\n            setCircles(<div><img src={GreenCircle} alt=\"greenCircle\" className=\"greenCircle__image\"/>\r\n            <img src={BlueCircle} alt=\"blueCircle\" className=\"blueCircle__image\"/></div>)        \r\n        }, 2300);\r\n\r\n          \r\n    }, [])\r\n\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    document.body.style.zoom = 0.8\r\n    return(\r\n        <body>\r\n            {circles}\r\n            <div>\r\n                {navBar}\r\n                {content}\r\n            </div>\r\n        </body>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\welcome\\welcome.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\register\\register.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBtns\\reportBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\datatable\\datatable.js",["455","456","457"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\stateTable\\stateTable.js",["458","459","460"],"//Tabla de estado de IsoTracker\r\n\r\nimport \"./stateTable.css\"\r\nimport React, { useState , useEffect} from 'react'\r\n\r\nconst StateTable = props =>{\r\n\r\n    const [designR0, setDesignR0] = useState(0)\r\n    const [designR1, setDesignR1] = useState(0)\r\n    const [designR2, setDesignR2] = useState(0)\r\n    const [designHold, setDesignHold] = useState(0)\r\n    const [designDeleted, setDesignDeleted] = useState(0)\r\n    const [designStock, setDesignStock] = useState(0)\r\n    const [stressR0, setStressR0] = useState(0)\r\n    const [stressR1, setStressR1] = useState(0)\r\n    const [stressR2, setStressR2] = useState(0)\r\n    const [stressHold, setStressHold] = useState(0)\r\n    const [stressDeleted, setStressDeleted] = useState(0)\r\n    const [stressStock, setStressStock] = useState(0)\r\n    const [supportsR0, setSupportsR0] = useState(0)\r\n    const [supportsR1, setSupportsR1] = useState(0)\r\n    const [supportsR2, setSupportsR2] = useState(0)\r\n    const [supportsHold, setSupportsHold] = useState(0)\r\n    const [supportsDeleted, setSupportsDeleted] = useState(0)\r\n    const [supportsStock, setSupportsStock] = useState(0)\r\n    const [materialsR0, setMaterialsR0] = useState(0)\r\n    const [materialsR1, setMaterialsR1] = useState(0)\r\n    const [materialsR2, setMaterialsR2] = useState(0)\r\n    const [materialsHold, setMaterialsHold] = useState(0)\r\n    const [materialsDeleted, setMaterialsDeleted] = useState(0)\r\n    const [materialsStock, setMaterialsStock] = useState(0)\r\n    const [issuerR0, setIssuerR0] = useState(0)\r\n    const [issuerR1, setIssuerR1] = useState(0)\r\n    const [issuerR2, setIssuerR2] = useState(0)\r\n    const [issuerHold, setIssuerHold] = useState(0)\r\n    const [issuerDeleted, setIssuerDeleted] = useState(0)\r\n    const [issuerStock, setIssuerStock] = useState(0)\r\n    const [toIssueR0, setToIssueR0] = useState(0)\r\n    const [toIssueR1, setToIssueR1] = useState(0)\r\n    const [toIssueR2, setToIssueR2] = useState(0)\r\n    const [toIssueHold, setToIssueHold] = useState(0)\r\n    const [toIssueDeleted, setToIssueDeleted] = useState(0)\r\n    const [toIssueStock, setToIssueStock] = useState(0)\r\n    const [issuedR0, setIssuedR0] = useState(0)\r\n    const [issuedR1, setIssuedR1] = useState(0)\r\n    const [issuedR2, setIssuedR2] = useState(0)\r\n    const [issuedDeleted, setIssuedDeleted] = useState(0)\r\n    const [issuedStock, setIssuedStock] = useState(0)\r\n    const [totalR0, setTotalR0] = useState(0)\r\n    const [totalR1, setTotalR1] = useState(0)\r\n    const [totalR2, setTotalR2] = useState(0)\r\n    const [totalHold, setTotalHold] = useState(0)\r\n    const [totalDeleted, setTotalDeleted] = useState(0)\r\n    const [totalStock, setTotalStock] = useState(0)\r\n    const [model, setModel] = useState(0)\r\n\r\n    const [progress, setProgress] = useState(0)\r\n    const [progressIso, setProgressIso] = useState(0)\r\n    \r\n\r\n    const [realProgressTD, setRealProgressTD] = useState()\r\n    const [realProgressIsoTD, setRealProgressIsoTD] = useState()\r\n    const [realProgressTDValue, setRealProgressTDValue] = useState()\r\n    const [realProgressIsoTDValue, setRealProgressIsoTDValue] = useState()\r\n\r\n    const[progressHeader, setProgressHeader] = useState()\r\n    const[progressTD, setProgressTD] = useState()\r\n    const[totalHeader, setTotalHeader] = useState()\r\n    const [totalStockTD, setTotalStockTD] = useState()\r\n\r\n    const [pISOHeaderTD, setpISOHeaderTD] = useState()\r\n    const [pISOValueTD, setpISOValueTD] = useState()\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(async ()=>{\r\n        if(loading){\r\n            if(process.env.REACT_APP_PROGRESS === \"0\"){\r\n                fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/updateStatus\")\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    setDesignR0(json[\"designR0\"])\r\n                    setDesignR1(json[\"designR1\"])\r\n                    setDesignR2(json[\"designR2\"])\r\n                    setDesignHold(json[\"designHold\"])\r\n                    setDesignDeleted(json[\"designDeleted\"])\r\n                    setDesignStock(json[\"designStock\"])\r\n                    setStressR0(json[\"stressR0\"])\r\n                    setStressR1(json[\"stressR1\"])\r\n                    setStressR2(json[\"stressR2\"])\r\n                    setStressHold(json[\"stressHold\"])\r\n                    setStressDeleted(json[\"stressDeleted\"])\r\n                    setStressStock(json[\"stressStock\"])\r\n                    setSupportsR0(json[\"supportsR0\"])\r\n                    setSupportsR1(json[\"supportsR1\"])\r\n                    setSupportsR2(json[\"supportsR2\"])\r\n                    setSupportsHold(json[\"supportsHold\"])\r\n                    setSupportsDeleted(json[\"supportsDeleted\"])\r\n                    setSupportsStock(json[\"supportsStock\"])\r\n                    setMaterialsR0(json[\"materialsR0\"])\r\n                    setMaterialsR1(json[\"materialsR1\"])\r\n                    setMaterialsR2(json[\"materialsR2\"])\r\n                    setMaterialsHold(json[\"materialsHold\"])\r\n                    setMaterialsDeleted(json[\"materialsDeleted\"])\r\n                    setMaterialsStock(json[\"materialsStock\"])\r\n                    setIssuerR0(json[\"issuerR0\"])\r\n                    setIssuerR1(json[\"issuerR1\"])\r\n                    setIssuerR2(json[\"issuerR2\"])\r\n                    setIssuerHold(json[\"issuerHold\"])\r\n                    setIssuerDeleted(json[\"issuerDeleted\"])\r\n                    setIssuerStock(json[\"issuerStock\"])\r\n                    setToIssueR0(json[\"toIssueR0\"])\r\n                    setToIssueR1(json[\"toIssueR1\"])\r\n                    setToIssueR2(json[\"toIssueR2\"])\r\n                    setToIssueHold(json[\"toIssueHold\"])\r\n                    setToIssueDeleted(json[\"toIssueDeleted\"])\r\n                    setToIssueStock(json[\"toIssueStock\"])\r\n                    setIssuedR0(json[\"issuedR0\"])\r\n                    setIssuedR1(json[\"issuedR1\"])\r\n                    setIssuedR2(json[\"issuedR2\"])\r\n                    setIssuedDeleted(json[\"issuedDeleted\"])\r\n                    setIssuedStock(json[\"issuedStock\"])\r\n                    setTotalR0(json[\"totalR0\"])\r\n                    setTotalR1(json[\"totalR1\"])\r\n                    setTotalR2(json[\"totalR2\"])\r\n                    setTotalHold(json[\"totalHold\"])\r\n                    setTotalDeleted(json[\"totalDeleted\"])\r\n                    setTotalStock(json[\"totalStock\"])\r\n                    \r\n                    setTotalHeader(<td  className=\"statusTable__header\" style={{backgroundColor:\"blue\", borderRadius:\"0 1em 0 0\"}}>Total</td>)\r\n                    setTotalStockTD(<td className=\"statusTable__state__stock\" style={{fontWeight:\"bold\", color:\"black\", borderRadius:\"0 0 1em 0\"}}>{totalStock}</td>)\r\n\r\n                    setLoading(false)\r\n                }) \r\n            }else{\r\n                fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/updateStatus\")\r\n                    .then(response => response.json())\r\n                    .then(json => {\r\n                        setDesignR0(json[\"designR0\"])\r\n                    setDesignR1(json[\"designR1\"])\r\n                    setDesignR2(json[\"designR2\"])\r\n                    setDesignHold(json[\"designHold\"])\r\n                    setDesignDeleted(json[\"designDeleted\"])\r\n                    setDesignStock(json[\"designStock\"])\r\n                    setStressR0(json[\"stressR0\"])\r\n                    setStressR1(json[\"stressR1\"])\r\n                    setStressR2(json[\"stressR2\"])\r\n                    setStressHold(json[\"stressHold\"])\r\n                    setStressDeleted(json[\"stressDeleted\"])\r\n                    setStressStock(json[\"stressStock\"])\r\n                    setSupportsR0(json[\"supportsR0\"])\r\n                    setSupportsR1(json[\"supportsR1\"])\r\n                    setSupportsR2(json[\"supportsR2\"])\r\n                    setSupportsHold(json[\"supportsHold\"])\r\n                    setSupportsDeleted(json[\"supportsDeleted\"])\r\n                    setSupportsStock(json[\"supportsStock\"])\r\n                    setMaterialsR0(json[\"materialsR0\"])\r\n                    setMaterialsR1(json[\"materialsR1\"])\r\n                    setMaterialsR2(json[\"materialsR2\"])\r\n                    setMaterialsHold(json[\"materialsHold\"])\r\n                    setMaterialsDeleted(json[\"materialsDeleted\"])\r\n                    setMaterialsStock(json[\"materialsStock\"])\r\n                    setIssuerR0(json[\"issuerR0\"])\r\n                    setIssuerR1(json[\"issuerR1\"])\r\n                    setIssuerR2(json[\"issuerR2\"])\r\n                    setIssuerHold(json[\"issuerHold\"])\r\n                    setIssuerDeleted(json[\"issuerDeleted\"])\r\n                    setIssuerStock(json[\"issuerStock\"])\r\n                    setToIssueR0(json[\"toIssueR0\"])\r\n                    setToIssueR1(json[\"toIssueR1\"])\r\n                    setToIssueR2(json[\"toIssueR2\"])\r\n                    setToIssueHold(json[\"toIssueHold\"])\r\n                    setToIssueDeleted(json[\"toIssueDeleted\"])\r\n                    setToIssueStock(json[\"toIssueStock\"])\r\n                    setIssuedR0(json[\"issuedR0\"])\r\n                    setIssuedR1(json[\"issuedR1\"])\r\n                    setIssuedR2(json[\"issuedR2\"])\r\n                    setIssuedDeleted(json[\"issuedDeleted\"])\r\n                    setIssuedStock(json[\"issuedStock\"])\r\n                    setTotalR0(json[\"totalR0\"])\r\n                    setTotalR1(json[\"totalR1\"])\r\n                    setTotalR2(json[\"totalR2\"])\r\n                    setTotalHold(json[\"totalHold\"])\r\n                    setTotalDeleted(json[\"totalDeleted\"])\r\n                    setTotalStock(json[\"totalStock\"])\r\n                    setModel(json[\"modelCount\"])\r\n                    }) \r\n                    const options = {\r\n                        method: \"GET\",\r\n                    }\r\n                    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/currentProgressISO\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                         await setProgressIso([json.progressISO, json.realprogressISO])\r\n                    })\r\n                    \r\n                    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/currentProgress\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                         await setProgress([json.progress, json.realprogress])\r\n                    })\r\n                    if(props.currentRole === \"SpecialityLead\"){\r\n                        await setRealProgressTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"#0070ed\"}}>R.P.</td>)\r\n                        await setRealProgressIsoTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"#0070ed\", borderRadius:\"0 1em 0 0\"}}>R.P. ISO</td>)\r\n                        await setRealProgressTDValue(<td rowSpan=\"6\" className=\"statusTable__state\">{progress[1]}%</td>)\r\n                        await setRealProgressIsoTDValue(<td rowSpan=\"6\" className=\"statusTable__state\" style={{borderRadius:\"0 0 1em 0\"}}>{progressIso[1]}%</td>)\r\n                        await setpISOHeaderTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"#0070ed\"}}>P.ISO</td>)\r\n                        await setpISOValueTD(<td rowSpan=\"6\" className=\"statusTable__state\">{progressIso[0]}%</td>)\r\n                    }else{\r\n                        await setRealProgressTD(null)\r\n                        await setRealProgressIsoTD(null)\r\n                        await setRealProgressTDValue(null)\r\n                        await setRealProgressIsoTDValue(null)\r\n                        await setpISOHeaderTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"#0070ed\", borderRadius:\"0 1em 0 0\"}}>P.ISO</td>)\r\n                        await setpISOValueTD(<td rowSpan=\"6\" className=\"statusTable__state\" style={{borderRadius:\"0 0 1em 0\", borderCollapse:\"collapse\"}}>{progressIso[0]}%</td>)\r\n                    }\r\n                    await setProgressHeader(<td  className=\"statusTable__header\" style={{backgroundColor:\"#0070ed\"}}>P.</td>)\r\n                    await setProgressTD(<td rowSpan=\"6\" className=\"statusTable__state\">{progress[0]}%</td> )\r\n                    await setTotalHeader(<td  className=\"statusTable__header\">Total</td>)\r\n                    await setTotalStockTD(<td className=\"statusTable__state__stock\" style={{fontWeight:\"bold\", color:\"black\"}}>{totalStock}</td>)\r\n            }\r\n\r\n            \r\n            await setLoading(false)\r\n        }\r\n        \r\n        \r\n    },[loading])\r\n\r\n    useEffect(async ()=>{\r\n        await setLoading(true)\r\n    }, [props.updateData, props.currentRole])\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <td className=\"statusTable__td\">\r\n            <table className=\"statusTable__table\">\r\n                <tbody className=\"statusTable__body\">\r\n                    <tr>\r\n                        <td  className=\"statusTable__header\" style={{backgroundColor: \"purple\", borderRadius:\"1em 0 0 0\"}}>M:{model}</td>\r\n                        <td  className=\"statusTable__header\" >Design</td>\r\n                        <td  className=\"statusTable__header\" >Stress</td>\r\n                        <td  className=\"statusTable__header\" >Supports</td>\r\n                        <td  className=\"statusTable__header\" >Materials</td>\r\n                        <td  className=\"statusTable__header\" >Issuer</td>\r\n                        <td  className=\"statusTable__header\" >To issue</td>\r\n                        <td  className=\"statusTable__header\" >Issued</td>\r\n                        {totalHeader}\r\n                        {progressHeader}\r\n                        {pISOHeaderTD}\r\n                        {realProgressTD}\r\n                        {realProgressIsoTD}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"white\", color:\"black\", fontWeight:\"bold\"}}>R0</td>\r\n                        <td className=\"statusTable__state\">{designR0}</td>\r\n                        <td className=\"statusTable__state\">{stressR0}</td>\r\n                        <td className=\"statusTable__state\">{supportsR0}</td>\r\n                        <td className=\"statusTable__state\">{materialsR0}</td>\r\n                        <td className=\"statusTable__state\">{issuerR0}</td>\r\n                        <td className=\"statusTable__state\">{toIssueR0}</td>\r\n                        <td className=\"statusTable__state\">{issuedR0}</td>   \r\n                        <td className=\"statusTable__state\">{totalR0}</td>  \r\n                        {progressTD} \r\n                        {pISOValueTD}  \r\n                        {realProgressTDValue}\r\n                        {realProgressIsoTDValue} \r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"#d1ebf7\", color:\"black\", fontWeight:\"bold\"}}>R1</td>\r\n                        <td className=\"statusTable__state_R1\">{designR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{stressR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{supportsR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{materialsR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{issuerR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{toIssueR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{issuedR1}</td>   \r\n                        <td className=\"statusTable__state_R1\">{totalR1}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"white\", color:\"black\", fontWeight:\"bold\"}}>R2</td>\r\n                        <td className=\"statusTable__state_R2\">{designR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{stressR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{supportsR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{materialsR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{issuerR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{toIssueR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{issuedR2}</td>   \r\n                        <td className=\"statusTable__state_R2\">{totalR2}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"#ff3358\", color:\"black\", fontWeight:\"bold\"}}>On hold</td>\r\n                        <td className=\"statusTable__state__hold\">{designHold}</td>\r\n                        <td className=\"statusTable__state__hold\">{stressHold}</td>\r\n                        <td className=\"statusTable__state__hold\">{supportsHold}</td>\r\n                        <td className=\"statusTable__state__hold\">{materialsHold}</td>\r\n                        <td className=\"statusTable__state__hold\">{issuerHold}</td>\r\n                        <td className=\"statusTable__state__hold\">{toIssueHold}</td>\r\n                        <td className=\"statusTable__state__hold\">-</td>   \r\n                        <td className=\"statusTable__state__hold\">{totalHold}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"#C0C0C0\", color:\"black\", fontWeight:\"bold\"}}>Deleted</td>\r\n                        <td className=\"statusTable__state__deleted\">{designDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{stressDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{supportsDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{materialsDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{issuerDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{toIssueDeleted}</td>\r\n                        <td className=\"statusTable__state__deleted\">{issuedDeleted}</td>   \r\n                        <td className=\"statusTable__state__deleted\">{totalDeleted}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"#94dcaa\", borderRadius:\"0 0 0 1em\", color:\"black\", fontWeight:\"bold\", border: \"0px solid black\"}}>Stock</td>\r\n                        <td className=\"statusTable__state__stock\">{designStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{stressStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{supportsStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{materialsStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{issuerStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{toIssueStock}</td>\r\n                        <td className=\"statusTable__state__stock\">{issuedStock}</td>   \r\n                        {totalStockTD}\r\n                  </tr>\r\n                </tbody>\r\n            </table>\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default StateTable;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentBox\\commentBox.js",[],["461","462"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionExtra\\actionExtra.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionBtns\\actionBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\selectPag\\selectPag.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressTable\\progressTable.js",[],["463","464"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\checkInTable\\checkInTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBar\\navBar.js",["465","466","467","468","469","470","471","472"],"//Cabecera de IsoTracker con diferentes desplegables y botones\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TechnipLogo from \"../../assets/images/tpenr_logo.svg\"\r\nimport HomeLogo from \"../../assets/images/home.png\"\r\nimport Icapp from \"../../assets/images/client.png\"\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport './navBar.css';\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst SecureStorage = require(\"secure-web-storage\");\r\nvar SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\nvar secureStorage = new SecureStorage(localStorage, {\r\n    hash: function hash(key) {\r\n        key = CryptoJS.SHA256(key, SECRET_KEY);\r\n\r\n        return key.toString();\r\n    },\r\n    encrypt: function encrypt(data) {\r\n        data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n\r\n        data = data.toString();\r\n\r\n        return data;\r\n    },\r\n    decrypt: function decrypt(data) {\r\n        data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n\r\n        data = data.toString(CryptoJS.enc.Utf8);\r\n\r\n        return data;\r\n    }\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nconst NavBar = (props) =>{\r\n    const classes = useStyles();\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n    const history = useHistory();\r\n    const[username, setUsername] = React.useState(\"\");\r\n    const[progressButtons, setProgressButtons] = React.useState(null);\r\n    let menubtn = null\r\n    \r\n    const handleClickUser = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseUser = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    const handleClickIsotracker = () => {\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/isotracker\");\r\n    };\r\n\r\n    const handleLogOut = () => {\r\n        localStorage.clear();\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n    };\r\n\r\n    const handleChangePassword = () =>{\r\n        setAnchorElUser(null);\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/changepassword\");\r\n    }\r\n\r\n    const handleClickEquipments = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/equipments\");\r\n    }\r\n\r\n    const handleClickInstrument = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/instrumentation\");\r\n    }\r\n    const handleClickCivil = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/civil\");\r\n    }\r\n    const handleClickElectrical = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/electrical\");\r\n    }\r\n    const handleClickPiping = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/piping\");\r\n    }\r\n    const handleClickProject = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n    }\r\n    const handleClickHome = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/home\");\r\n    }\r\n\r\n    useEffect(async() =>{\r\n        const bodyUsername = {\r\n            email: secureStorage.getItem(\"user\")\r\n          }\r\n        const optionsUsername = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(bodyUsername)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/findByEmail\", optionsUsername)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            setUsername(json.name);\r\n        })\r\n\r\n        if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n            setProgressButtons(<div style={{ marginLeft: \"20%\"}}>\r\n                <Button class=\"btn nohover\" onClick={handleClickHome} style={{marginRight:\"50px\"}}>\r\n            <i className=\"dropdown__text\">Home </i>\r\n        </Button><Button class=\"btn nohover\" onClick={handleClickPiping} style={{marginRight:\"50px\"}}>\r\n            <i className=\"dropdown__text\">Piping </i>\r\n        </Button><Button class=\"btn nohover\" onClick={handleClickInstrument} style={{marginRight:\"50px\"}}>\r\n            <i className=\"dropdown__text\">Instrumentation </i>\r\n        </Button>\r\n        <Button class=\"btn nohover\" onClick={handleClickEquipments} style={{marginRight:\"50px\"}}>\r\n            <i className=\"dropdown__text\">Equipment </i>\r\n        </Button>\r\n        <Button class=\"btn nohover\" onClick={handleClickCivil} style={{marginRight:\"50px\"}}>\r\n            <i className=\"dropdown__text\">Civil </i>\r\n        </Button>\r\n        <Button class=\"btn nohover\" onClick={handleClickElectrical} style={{marginRight:\"50px\"}}>\r\n            <i className=\"dropdown__text\">Electrical </i>\r\n        </Button>\r\n        <Button class=\"btn nohover\" onClick={handleClickIsotracker} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\" >IsoTracker </i>\r\n                    </Button></div>)\r\n        \r\n\r\n        }\r\n    },[])\r\n\r\n    let projectBtn = null\r\n    if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n        projectBtn = <Button class=\"btn nohover\" disabled style={{marginLeft:\"11%\"}}>\r\n                        <i className=\"dropdown__text__projectname\" >{process.env.REACT_APP_APP_NAMEPROJ} </i>\r\n                    </Button>\r\n    }else{\r\n        projectBtn = <Button  class=\"btn nohover\" disabled style={{marginLeft:\"89%\", marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text__projectname\" >{process.env.REACT_APP_APP_NAMEPROJ} </i>\r\n                    </Button>\r\n    }\r\n    return(\r\n        <div className={classes.root}>\r\n            <div style={{display:\"flex\"}}>\r\n            <AppBar position=\"fixed\" className=\"navBar__container\" style={{height:\"62px\", borderBottomColor: \"rgb(211, 224, 233)\", borderLeftColor: \"rgb(211, 224, 233)\", bordeRightColor: \"rgb(211, 224, 233)\", borderTopColor: \"rgb(211, 224, 233)\", backgroundColor: \"#383838\"}}>\r\n            \r\n                <Toolbar>\r\n                    \r\n                    {progressButtons}\r\n                    \r\n                    \r\n                  \r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" class=\"btn nohover\" onClick={handleClickUser}>\r\n                    <i className=\"dropdown__text\">{username}&nbsp;🠗</i>\r\n                    </Button>\r\n                    \r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorElUser}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        open={Boolean(anchorElUser)}\r\n                        onClose={handleCloseUser}\r\n                        PaperProps={{\r\n                            style: {\r\n                            left: '50%',\r\n                            transform: 'translateX(+70%)',\r\n                            }\r\n                        }}\r\n                    >\r\n                    <MenuItem style={{fontFamily:\"Quicksand\", fontSize:\"13.33px\"}} onClick={handleChangePassword}>Change password</MenuItem>\r\n                    <MenuItem style={{fontFamily:\"Quicksand\", fontSize:\"13.33px\"}} onClick={handleLogOut}><b>Logout</b></MenuItem>\r\n                    </Menu>\r\n \r\n                    {projectBtn}\r\n                    \r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayTable\\myTrayTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayBtn\\myTrayBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binTable\\binTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBtns\\navBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\statusDataTable\\statusDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\menuList\\menuList.js",["473","474","475","476"],"//Lista que muestra las diferentes aplicaciones de IsoTracker y su progreso\r\n\r\nimport './menuList.css'\r\nimport FileIcon from \"../../assets/images/file-icon.png\"\r\nimport ChartColorIcon from \"../../assets/images/chart-color-icon.png\"\r\nimport PipeIcon from \"../../assets/images/pipe-icon.png\"\r\nimport EquiIcon from \"../../assets/images/equi-icon.png\"\r\nimport StruIcon from \"../../assets/images/stru-icon.png\"\r\nimport ElecIcon from \"../../assets/images/elec-icon.png\"\r\nimport InstIcon from \"../../assets/images/inst-icon.png\"\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst MenuList = () =>{\r\n\r\n    //Existe un estado para cada opción del menu\r\n    const [isoIsShown, setIsoIsShown] = useState(false);\r\n    const [progIsShown, setProgIsShown] = useState(false);\r\n    const [pipeIsShown, setPipeIsShown] = useState(false);\r\n    const [equipIsShown, setEquipIsShown] = useState(false);\r\n    const [civIsShown, setCivIsShown] = useState(false);\r\n    const [instIsShown, setInstIsShown] = useState(false);\r\n    const [elecIsShown, setElecIsShown] = useState(false);\r\n\r\n    const [pipesWeight, setPipesWeight] = useState()\r\n    const [pipesProgress, setPipesProgress] = useState()\r\n    const [pipesProgressWidth, setPipesProgressWidth] = useState()\r\n\r\n    const [equisWeight, setEquisWeight] = useState()\r\n    const [equisProgress, setEquisProgress] = useState()\r\n    const [equisProgressWidth, setEquisProgressWidth] = useState()\r\n\r\n    const [civilsWeight, setCivilsWeight] = useState()\r\n    const [civilsProgress, setCivilsProgress] = useState()\r\n    const [civilsProgressWidth, setCivilsProgressWidth] = useState()\r\n\r\n    const [instsWeight, setInstsWeight] = useState()\r\n    const [instsProgress, setInstsProgress] = useState()\r\n    const [instsProgressWidth, setInstsProgressWidth] = useState()\r\n\r\n    const [elecsWeight, setElecsWeight] = useState()\r\n    const [elecsProgress, setElecsProgress] = useState()\r\n    const [elecsProgressWidth, setElecsProgressWidth] = useState()\r\n\r\n    const [totalWeight, setTotalWeight] = useState()\r\n    const [totalProgress, setTotalProgress] = useState()\r\n    const [totalProgressWidth, setTotalProgressWidth] = useState()\r\n\r\n    const [progressButtons, setProgressButtons] = useState()\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n\r\n    useEffect(async ()=>{\r\n\r\n            if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n            const options = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            }\r\n\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/currentProgress\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await setPipesWeight(json.weight)\r\n                    await setPipesProgress(json.progress)\r\n                    await setPipesProgressWidth(json.progress + \"%\")\r\n                }\r\n                )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })   \r\n\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/weight\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await setEquisWeight(json.weight)\r\n                    await setEquisProgress(json.progress)\r\n                    await setEquisProgressWidth(json.progress+\"%\")\r\n                }\r\n                )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                }) \r\n                \r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/civils/weight\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await setCivilsWeight(json.weight)\r\n                    await setCivilsProgress(json.progress)\r\n                    await setCivilsProgressWidth(json.progress + \"%\")\r\n                }\r\n                )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                }) \r\n                \r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/instrumentation/weight\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await setInstsWeight(json.weight)\r\n                    await setInstsProgress(json.progress)\r\n                    await setInstsProgressWidth(json.progress + \"%\")\r\n                }\r\n                )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })   \r\n\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/electrical/weight\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await setElecsWeight(json.weight)\r\n                    await setElecsProgress(json.progress)\r\n                    await setElecsProgressWidth(json.progress + \"%\")\r\n                }\r\n                )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })   \r\n                await setTotalWeight(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)\r\n                await setTotalProgress(((pipesWeight/totalWeight) * pipesProgress + (equisWeight/totalWeight) * equisProgress + (civilsWeight/totalWeight) * civilsProgress + (instsWeight/totalWeight) * instsProgress + (elecsWeight/totalWeight) * elecsProgress).toFixed(2))\r\n                await setTotalProgressWidth(totalProgress+\"%\")\r\n            }\r\n        \r\n    },[])   \r\n\r\n    //((pipesWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * pipesProgress + (equisWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * equisProgress + (civilsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * civilsProgress + (instsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * instsProgress + (elecsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * elecsProgress).toFixed(2)\r\n\r\n    useEffect(async() =>{\r\n        if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n            setProgressButtons(<div>\r\n                <div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/3dprogress\"} style={{textDecoration: \"none\"}}>\r\n                    <h4  className=\"panel__icon__container\" onMouseEnter={() => setProgIsShown(true)} onMouseLeave={() => setProgIsShown(false)}><img src={ChartColorIcon} alt=\"chart\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;3D Progress (Weight: {pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight} | 100%)</h4>\r\n                </a>\r\n                <div class=\"progress\" style={{height: \"30px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: ((pipesWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * pipesProgress + (equisWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * equisProgress + (civilsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * civilsProgress + (instsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * instsProgress + (elecsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) * elecsProgress).toFixed(2)+\"%\", backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{(pipesProgress*(pipesWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) + equisProgress*(equisWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) + instsProgress*(instsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) + civilsProgress*(civilsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)) + elecsProgress*(elecsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight))).toFixed(2)}%</strong>                                         \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/piping\"} style={{textDecoration: \"none\"}}>\r\n                    <h4 className=\"panel__icon__container\" onMouseEnter={() => setPipeIsShown(true)} onMouseLeave={() => setPipeIsShown(false)}><img src={PipeIcon} alt=\"pipe\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;Piping (Weight: {pipesWeight} | {(pipesWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)*100).toFixed(2)}%)</h4>        \r\n                </a>\r\n                <div class=\"progress\" style={{height: \"25px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: pipesProgressWidth, backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{pipesProgress}%</strong>                                       \r\n                    </div>\r\n                </div>          \r\n            </div>\r\n        </div>\r\n        <div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/equipments\"}style={{textDecoration: \"none\"}}>\r\n                    <h4 className=\"panel__icon__container\" onMouseEnter={() => setEquipIsShown(true)} onMouseLeave={() => setEquipIsShown(false)}><img src={EquiIcon} alt=\"equi\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;Equipment (Weight: {equisWeight} | {(equisWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)*100).toFixed(2)}%)</h4>                   \r\n                </a>\r\n                <div class=\"progress\" style={{height: \"25px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: equisProgressWidth, backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{equisProgress}%</strong>                                         \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/civil\"}style={{textDecoration: \"none\"}}>\r\n                    <h4  className=\"panel__icon__container\" onMouseEnter={() => setCivIsShown(true)} onMouseLeave={() => setCivIsShown(false)}><img src={StruIcon} alt=\"stru\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;Civil (Weight: {civilsWeight} | {(civilsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)*100).toFixed(2)}%)</h4> \r\n                </a>\r\n                <div class=\"progress\" style={{height: \"25px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: civilsProgressWidth, backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{civilsProgress}%</strong>                                        \r\n                    </div>\r\n                </div>         \r\n            </div>\r\n        </div>\r\n        <div className=\"panel__content__container\">\r\n            <div >\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/instrumentation\"}style={{textDecoration: \"none\"}} className=\"panel__content__link\">\r\n                    <h4 className=\"panel__icon__container\" onMouseEnter={() => setInstIsShown(true)} onMouseLeave={() => setInstIsShown(false)}><img src={InstIcon} alt= \"inst\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;Instrumentation (Weight: {instsWeight} | {(instsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)*100).toFixed(2)}%)</h4>         \r\n                </a>\r\n                <div class=\"progress\" style={{height: \"25px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: instsProgressWidth, backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{instsProgress}%</strong>                                         \r\n                    </div>\r\n                </div>   \r\n            </div>\r\n        </div>\r\n        <div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/electrical\"} style={{textDecoration: \"none\"}} className=\"panel__content__link\">\r\n                    <h4 className=\"panel__icon__container\" onMouseEnter={() => setElecIsShown(true)} onMouseLeave={() => setElecIsShown(false)}><img src={ElecIcon} alt=\"inst\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;Electrical (Weight: {elecsWeight} | {(elecsWeight/(pipesWeight + equisWeight + instsWeight + civilsWeight + elecsWeight)*100).toFixed(2)}%)</h4>\r\n                </a>\r\n                <div class=\"progress\" style={{height: \"25px\"}}>\r\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{color: \"black\", fontSize: \"15px\", width: elecsProgressWidth, backgroundColor: \"#94dcaa\",textAlign: \"center\"}}>\r\n                        <span class=\"sr-only\"></span><strong>{elecsProgress}%</strong>                                         \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>   </div>)\r\n        }else{\r\n            setProgressButtons(<div className=\"panel__content__container\">\r\n            <div>\r\n                <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/isotracker\"} style={{textDecoration: \"none\"}}>\r\n                    <h4 className=\"panel__icon__container\" onMouseEnter={() => setIsoIsShown(true)} onMouseLeave={() => setIsoIsShown(false)} ><img src={FileIcon} alt=\"file\" className=\"panel__icon\"/>&nbsp;&nbsp;&nbsp;IsoTracker</h4>\r\n                    <div className=\"progress__bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                        <span class=\"sr-only\"></span><strong>Open</strong>\r\n                    </div>\r\n                </a> \r\n            </div>\r\n        </div>)\r\n        }\r\n    },[totalProgressWidth, refresh, isoIsShown, progIsShown, pipeIsShown, equipIsShown, civIsShown, instIsShown, elecIsShown])\r\n\r\n    if(!refresh){\r\n        setRefresh(true)\r\n    }\r\n    \r\n\r\n    return(\r\n        <div class=\"panel__container\">\r\n            <div className=\"panel__heading__container\">\r\n                <h4>\r\n                    <text className=\"panel__heading__text\"><strong style={{fontWeight:\"700\"}}>3D</strong>Tracker</text>\r\n                </h4>\r\n            </div>\r\n\r\n            <div className=\"elements__container\">\r\n                <div className=\"menu\">\r\n                    <div className=\"panel__content__container__title\">\r\n                    <a href={\"/\"+process.env.REACT_APP_PROJECT+\"/isotracker\"} style={{textDecoration: \"none\"}}>\r\n                        <h4 className=\"click__text\">Click here to open</h4>\r\n                        <h4 className=\"iso__title__menu\">ISO<text style={{fontWeight:\"100\"}}>Tracker</text></h4>\r\n                        </a>\r\n                    </div>\r\n                        \r\n                    <h4 className=\"disciplines__text\">You can also click any of the items below to check disciplines.</h4>\r\n\r\n                    {progressButtons}\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuList;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binBtn\\binBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\cancelIso\\cancelIso.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadPopUp\\uploadPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\chooseFile\\chooseFile.js",[],["477","478"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\dragAndDrop\\dragAndDrop.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\loginPage\\loginPage.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\login\\login.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\roleDropDown\\roleDropDown.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldTable\\onHoldTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldBtn\\onHoldBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\historyDataTable\\historyDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInsBtn\\procInsBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInstTable\\procInstTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadProcInst\\uploadProcInst.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportsBtn\\reportsBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBoxBtns\\reportBoxBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\forceClaimPopUp\\forceClaimPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadReportPopUp\\uploadReportPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\issuedBtn\\issuedBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\changePassword\\changePassword.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressBtn\\progressBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlot\\progressPlot.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledBtn\\modelledBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledDataTable\\modelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\holdComment\\holdComment.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\renamePopUp\\renamePopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentPopUp\\commentPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\equipments\\equipments.js",["479","480","481","482","483"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\EquipmentsNavBtns\\equipmentsNavBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipEstimatedDataTable\\equipEstimatedDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipModelledDataTable\\equipModelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotEquipments\\progressPlotEquipments.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadEquisModelledPopUp\\uploadEquisModelledPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipTypesDataTable\\equipTypesDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\instrumentation\\instrumentation.js",["484","485","486","487","488"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\civil\\civil.js",["489","490","491","492","493"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationEstimatedDataTable\\instrumentationEstimatedDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationModelledDataTable\\instrumentationModelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotInstrumentation\\progressPlotInstrumentation.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instrumentationTypesDataTable\\instrumentationTypesDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotCivils\\progressPlotCivils.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilEstimatedDataTable\\civilEstimatedDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilTypesDataTable\\civilTypesDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilModelledDataTable\\civilModelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadEquisEstimatedPopUp\\uploadEquisEstimatedPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\electrical\\electrical.js",["494","495","496","497","498"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\progressCurve\\progressCurve.js",["499"],"import \"./progressCurve.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport ProgressPlotCurve from \"../../components/progressPlotCurve/progressPlotCurve\"\r\n\r\nconst Civil = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    const [currentRole, setCurrentRole] = useState();\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    var dataTableHeight = \"550px\"\r\n\r\n\r\n    document.body.style.zoom = 0.8\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"civ_tab\"))\r\n    if(currentTab === \"\" || currentTab === null){\r\n        setCurrentTab(\"Estimated\")\r\n    }\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n    var table = null\r\n\r\n    table = <ProgressPlotCurve/>\r\n\r\n\r\n\r\n    return(\r\n        \r\n        <body>\r\n            \r\n            <NavBar/>\r\n            <div className=\"equipments__container\">  \r\n                <center>\r\n                    <h2 className=\"title__container\">\r\n\r\n                        <b >      \r\n                            <i className=\"iso__title\">Progress curve</i>\r\n                        </b>\r\n                    </h2>\r\n                    <h3 className=\"iso__subtitle\">3D Progress</h3>\r\n                </center>\r\n\r\n\r\n                <div style={{height: dataTableHeight}}>\r\n                    <br></br>\r\n                    <br></br> \r\n                    <br></br> \r\n                    {table}\r\n                </div>         \r\n            </div>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default Civil;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\piping\\piping.js",["500","501","502","503","504"],"import \"./piping.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown'\r\nimport EquipmentsNavBtns from \"../../components/EquipmentsNavBtns/equipmentsNavBtns\"\r\nimport SelectPag from \"../../components/selectPag/selectPag\"\r\nimport PipingEstimatedDataTable from \"../../components/pipingEstimatedDataTable/pipingEstimatedDataTable\"\r\nimport ModelledDataTable from \"../../components/modelledDataTable/modelledDataTable\"\r\nimport ProgressPlotPiping from \"../../components/progressPlotPiping/progressPlotPiping\"\r\nimport PipingTypesDataTable from \"../../components/pipingTypesDataTable/pipingTypesDataTable\"\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport PipingExcel from \"../../components/pipingExcel/pipingExcel\"\r\nimport PipingExcelEdit from \"../../components/pipingExcelEdit/pipingExcelEdit\"\r\nimport IsoTrackerLogo from \"../../assets/images/3dtracker.png\"\r\nimport ExportIcon from \"../../assets/images/downloadicon.png\"\r\nimport EditIcon from \"../../assets/images/edit.png\"\r\nimport AlertF from \"../../components/alert/alert\"\r\n\r\nconst Piping = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const[pagination, setPagination] = useState(10)\r\n    const[weight, setWeight] = useState();\r\n    const[progress, setProgress] = useState();\r\n    const[admin, setAdmin] = useState(false);\r\n    const[successAlert, setSuccessAlert] = useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/currentProgress\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setWeight(json.weight)\r\n                setProgress(json.progress)\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[]);\r\n\r\n    function success(){\r\n        setSuccessAlert(true)\r\n        setTimeout(function () {\r\n            setSuccessAlert(false)\r\n        }, 1000);\r\n    }\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n\r\n    var dataTableHeight = \"490px\"\r\n    let navBtnsMargin = \"600px\"\r\n\r\n    if (pagination === 10){\r\n        dataTableHeight = \"490px\"\r\n        navBtnsMargin = \"600px\"\r\n    }if(pagination === 25){\r\n        dataTableHeight = \"1050px\"\r\n        navBtnsMargin = \"1200px\"\r\n    }if(pagination === 50){\r\n        dataTableHeight = \"2000px\"\r\n        navBtnsMargin = \"2150px\"\r\n    }if(pagination === 100){\r\n        dataTableHeight = \"3900px\"\r\n        navBtnsMargin = \"4000px\"\r\n    }if(pagination === 500){\r\n        dataTableHeight = \"19000px\"\r\n        navBtnsMargin = \"19000px\"\r\n    }\r\n\r\n    document.body.style.zoom = 0.8\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"piping_tab\"))\r\n    if(currentTab === \"\" || currentTab === null){\r\n        setCurrentTab(\"Estimated\")\r\n    }\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n    var table = null\r\n\r\n    var pageSelector = <SelectPag onChange={value => setPagination(value)} pagination = {pagination}/>\r\n    let downloadBtn = null\r\n    let adminBtn = null\r\n    let marginProgress = null\r\n\r\n    if(currentTab === \"Estimated\"){\r\n        table = <PipingEstimatedDataTable pagination = {pagination}/>\r\n    }else if(currentTab === \"Modelled\"){\r\n        downloadBtn = <button className=\"navBar__button\" onClick={()=>downloadModelled()} style={{marginLeft:\"230px\", width:\"115px\"}}><img src={ExportIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Export</p></button>\r\n    \r\n        table = <ModelledDataTable pagination = {pagination}/>\r\n    }else if(currentTab === \"Progress\"){\r\n        table = <ProgressPlotPiping/>\r\n        pageSelector = null\r\n        navBtnsMargin = \"600px\"\r\n    }else if(currentTab === \"Types\"){\r\n        table = <PipingTypesDataTable pagination = {pagination}/>\r\n    }else if(currentTab === \"Key parameters\"){\r\n        table = <PipingExcel success={success.bind(this)}/>\r\n        pageSelector = null\r\n        navBtnsMargin = \"700px\"\r\n    }else if(currentTab === \"Edit\"){\r\n        table = <PipingExcelEdit success={success.bind(this)}/>\r\n        pageSelector = null\r\n    }\r\n\r\n    \r\n    if(currentTab === \"Edit\" || currentTab === \"Key parameters\"){\r\n        dataTableHeight = \"600px\"\r\n    }\r\n    \r\n    if(currentRole === \"Project\"){\r\n        if(currentTab === \"Estimated\" || currentTab === \"Edit\"){\r\n            if(currentTab === \"Edit\"){\r\n                adminBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Edit\")} style={{backgroundColor:\"#99C6F8\", marginLeft:\"230px\"}}><img src={EditIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Edit</p></button>\r\n            }else{\r\n                adminBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Edit\")} style={{marginLeft:\"230px\"}}><img src={EditIcon} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Edit</p></button>\r\n            }        }else{\r\n            adminBtn = null\r\n        }\r\n    }\r\n        \r\n    if(adminBtn || downloadBtn){\r\n        marginProgress = \"55%\"\r\n    }else{\r\n        marginProgress = \"66%\"\r\n    }\r\n\r\n    async function downloadModelled(){\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadModelled/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"TAG\", \"ISO_ID\", \"TYPE\"]\r\n            exportToExcel(JSON.parse(json), \"Piping modelled\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n\r\n        let wscols = []\r\n        for(let i = 0; i < headers.length; i++){\r\n            wscols.push({width:35})\r\n        }\r\n\r\n        const ws = XLSX.utils.json_to_sheet(apiData);   \r\n        ws[\"!cols\"] = wscols\r\n        for(let i = 0; i < headers.length; i++){\r\n            ws[header_cells[i]].v = headers[i]\r\n        }\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        \r\n        <body>\r\n            \r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n            <div\r\n            className={`alert alert-success ${successAlert ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setSuccessAlert(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div style={{position:\"absolute\", marginTop:\"180px\", marginLeft:\"48%\"}}>\r\n                <i className=\"discipline__title\" style={{fontStyle:\"normal\"}}>Piping</i>\r\n            </div>\r\n                <div className=\"isotracker__row\">\r\n                  <div className=\"isotracker__column\">\r\n                      <img src={IsoTrackerLogo} alt=\"isoTrackerLogo\" className=\"isoTrackerLogo__image2\"/>\r\n                      \r\n                      <div className=\"roleSelector__containerF\">\r\n                              <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                      </div>\r\n                      \r\n                  </div>\r\n\r\n                  <div className=\"isotracker__column\">\r\n                  \r\n                  <table className=\"equipTable__table\" style={{marginTop:\"270px\", width:\"35%\", marginLeft:\"59%\"}}>\r\n                        <tbody className=\"equipable__body\">\r\n                            <tr>    \r\n                                <td  className=\"equipTable__header\" style={{backgroundColor:\"#338DF1\", borderRadius:\"1em 0 0 0\"}}>Estimated weight</td>\r\n                                <td className=\"equipTable__header\" style={{backgroundColor:\"#338DF1\", borderRadius:\"0 1em 0 0\"}}>Total progress</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"equipTable__state\" style={{borderRadius:\"0 0 0 1em\"}}>{weight}</td>\r\n                                <td className=\"equipTable__state\" style={{borderRadius:\"0 0 1em 0\"}}>{progress}%</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                  </div>               \r\n                  \r\n                  \r\n              </div>\r\n              <table className=\"isotracker__table__container\">\r\n                      <tr className=\"isotracker__table__navBar__container\">\r\n                          <th  colspan=\"2\" className=\"isotracker__table__navBar\">\r\n                            {adminBtn}\r\n                            {downloadBtn}\r\n                          {pageSelector}\r\n                          </th>\r\n                      </tr>\r\n                      <tr className=\"isotracker__table__tray__and__table__container\" style={{height: dataTableHeight}}>\r\n                          <td className=\"disciplines__table__trays\">\r\n                              <div className=\"trays__container\">\r\n                                  <p className=\"isotracker__table__trays__group\">Options</p>\r\n                                  <center className=\"equimentsNavBtns__center\">              \r\n                                    <EquipmentsNavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole} discipline = \"Equipment\"/>               \r\n                                    </center>\r\n                              </div>\r\n                          </td>\r\n                          <td className=\"discplines__table__table\" style={{height: dataTableHeight}} >\r\n                              <div  style={{height: dataTableHeight}} className=\"isotracker__table__table__container\">\r\n                                  {table}\r\n                              </div>\r\n                          </td>\r\n                          \r\n                      </tr>\r\n                  </table>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default Piping;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\navis\\navis.js",["505"],"import React, { useState , useEffect} from 'react'\r\nimport NavisTable from '../../components/navisTable/navisTable';\r\nimport \"./navis.css\"\r\n\r\nconst Navis = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    const [currentRole, setCurrentRole] = useState();\r\n    \r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n\r\n\r\n    document.body.style.zoom = 0.8\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"civ_tab\"))\r\n    if(currentTab === \"\" || currentTab === null){\r\n        setCurrentTab(\"Estimated\")\r\n    }\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n    var table = null\r\n\r\n\r\n    table = <NavisTable/>\r\n\r\n    \r\n\r\n    return(\r\n        \r\n        <body>\r\n            <div className=\"navis__container\">  \r\n                <div>\r\n                    <br></br>\r\n                    <br></br> \r\n\r\n                    <br></br> \r\n                    {table}\r\n                </div>         \r\n            </div>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default Navis;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipExcel\\equipExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipExcelEdit\\equipExcelEdit.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instExcel\\instExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\instExcelEdit\\instExcelEdit.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\usersDataTable\\usersDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilExcelEdit\\civilExcelEdit.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\civilExcel\\civilExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\deleteUserConfPopUp\\deleteUserConfPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\manageRolesPopUp\\manageRolesPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadPipesEstimatedPopUp\\uploadPipesEstimatedPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadElectricalModelledPopUp\\uploadElectricalModelledPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadElectricalEstimatedPopUp\\uploadElectricalEstimatedPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadCivilEstimtedPopUp\\uploadCivilEstimtedPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadCivilModelledPopUp\\uploadCivilModelledPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadInstrumentationEstimatedPopUp\\uploadInstrumentationEstimatedPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadInstrumentationModelledPopUp\\uploadInstrumentationModelledPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\addUserPopUp\\addUserPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navisTable\\navisTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingExcelEdit\\pipingExcelEdit.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingExcel\\pipingExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingEstimatedDataTable\\pipingEstimatedDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotPiping\\progressPlotPiping.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\pipingTypesDataTable\\pipingTypesDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecExcelEdit\\elecExcelEdit.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotCurve\\progressPlotCurve.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecExcel\\elecExcel.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\elecTypesDataTable\\elecTypesDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progresPlotElecs\\progressPlotElecs.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\electricalModelledDataTable\\electricalModelledDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\electricalEstimatedDataTable\\electricalEstimatedDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\welcomeLoginF\\welcomeLoginF.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\isoCtrlF\\isoCtrlF.js",["506","507","508","509","510","511","512","513","514","515","516"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\loadingScreen\\loadingScreen.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\loadingScreen3D\\loadingScreen3D.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\alert\\alert.js",["517","518","519","520","521","522"],"import React, { Component } from 'react';\r\nimport SuccessIcon from \"../../assets/images/CheckCircle.png\"\r\nimport ErrorIcon from \"../../assets/images/WarningCircle.png\"\r\nimport WarningIcon from \"../../assets/images/Warning.png\"\r\nimport \"./alert.css\"\r\n\r\nexport default class Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: props.type,\r\n            text: props.text,\r\n            alert: null,\r\n            subtext: props.subtext,\r\n            popUp: props.popUp,\r\n            change: props.change\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        let alertComponent = null\r\n        if(this.state.type === \"success\"){\r\n            if(this.state.change){\r\n                alertComponent = <div className=\"alert__success\">\r\n                                    \r\n                <img src={SuccessIcon} className=\"alert__icon\"></img>\r\n                <div className=\"text__alert__container\">\r\n                    <text className=\"alert__title\">Excellent!</text>\r\n                    <text className=\"alert__text\" style={{marginLeft:\"0px\"}}>{this.props.text}</text>\r\n                </div>\r\n            \r\n            </div>\r\n            }else{\r\n                alertComponent = <div className=\"alert__success\">\r\n                                    \r\n                                    <img src={SuccessIcon} className=\"alert__icon\"></img>\r\n                                    <div className=\"text__alert__container\">\r\n                                        <text className=\"alert__title\">Excellent!</text>\r\n                                        <text className=\"alert__text\" style={{marginLeft:this.props.margin}}>{this.props.text}</text>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n            }\r\n            this.setState({alert: alertComponent})\r\n        }else if(this.state.type === \"error\"){\r\n            if(this.state.change){\r\n                alertComponent = <div className=\"alert__error\">\r\n                                    \r\n                <img src={ErrorIcon} className=\"alert__icon\"></img>\r\n                <div className=\"text__alert__container\">\r\n                    <text className=\"alert__title\">Oops!</text>\r\n                    <text className=\"alert__error__text\" style={{marginLeft:\"0px\"}}>Something has failed:</text>\r\n                    <text className=\"alert__subtext\" style={{marginLeft:this.props.margin}}>{this.props.subtext}</text>\r\n                </div>\r\n            \r\n            </div>\r\n            }else{\r\n                alertComponent = <div className=\"alert__error\">\r\n                                    \r\n                                    <img src={ErrorIcon} className=\"alert__icon\"></img>\r\n                                    <div className=\"text__alert__container\">\r\n                                        <text className=\"alert__title\">Oops!</text>\r\n                                        <text className=\"alert__error__text\">Something has failed:</text>\r\n                                        <text className=\"alert__subtext\" style={{marginLeft:this.props.margin}}>{this.props.subtext}</text>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n            }\r\n            this.setState({alert: alertComponent})\r\n        }else{\r\n            if(this.state.popUp){\r\n                alertComponent = <div className=\"alert__warning\" style={{marginTop:\"-200px\"}}>\r\n                                    \r\n                                    <img src={WarningIcon} className=\"alert__icon\"></img>\r\n                                    <div className=\"text__alert__container\">\r\n                                        <text className=\"alert__title\">Warning</text>\r\n                                        <text className=\"alert__text\" >{this.props.text}</text>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n            }else{\r\n                alertComponent = <div className=\"alert__warning\">\r\n                                    \r\n                                    <img src={WarningIcon} className=\"alert__icon\"></img>\r\n                                    <div className=\"text__alert__container\">\r\n                                        <text className=\"alert__title\">Warning</text>\r\n                                        <text className=\"alert__text\" style={{marginLeft:this.props.margin}}>{this.props.text}</text>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n            }\r\n            this.setState({alert: alertComponent})  \r\n\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"alert__container__fade\">\r\n                {this.state.alert}\r\n            </div>           \r\n        );\r\n    }\r\n}",{"ruleId":"523","replacedBy":"524"},{"ruleId":"525","replacedBy":"526"},{"ruleId":"527","severity":1,"message":"528","line":2,"column":8,"nodeType":"529","messageId":"530","endLine":2,"endColumn":15},{"ruleId":"527","severity":1,"message":"531","line":3,"column":8,"nodeType":"529","messageId":"530","endLine":3,"endColumn":15},{"ruleId":"527","severity":1,"message":"532","line":7,"column":8,"nodeType":"529","messageId":"530","endLine":7,"endColumn":17},{"ruleId":"533","severity":1,"message":"534","line":158,"column":7,"nodeType":"535","endLine":158,"endColumn":20,"suggestions":"536"},{"ruleId":"537","severity":1,"message":"538","line":1621,"column":129,"nodeType":"539","messageId":"540","endLine":1621,"endColumn":131},{"ruleId":"537","severity":1,"message":"538","line":1622,"column":38,"nodeType":"539","messageId":"540","endLine":1622,"endColumn":40},{"ruleId":"537","severity":1,"message":"538","line":1623,"column":67,"nodeType":"539","messageId":"540","endLine":1623,"endColumn":69},{"ruleId":"537","severity":1,"message":"538","line":1624,"column":64,"nodeType":"539","messageId":"540","endLine":1624,"endColumn":66},{"ruleId":"527","severity":1,"message":"541","line":8,"column":8,"nodeType":"529","messageId":"530","endLine":8,"endColumn":23},{"ruleId":"542","severity":1,"message":"543","line":165,"column":116,"nodeType":"544","endLine":165,"endColumn":148},{"ruleId":"537","severity":1,"message":"545","line":614,"column":458,"nodeType":"539","messageId":"540","endLine":614,"endColumn":460},{"ruleId":"537","severity":1,"message":"545","line":614,"column":610,"nodeType":"539","messageId":"540","endLine":614,"endColumn":612},{"ruleId":"533","severity":1,"message":"546","line":76,"column":15,"nodeType":"547","endLine":228,"endColumn":6},{"ruleId":"533","severity":1,"message":"548","line":228,"column":7,"nodeType":"535","endLine":228,"endColumn":16,"suggestions":"549"},{"ruleId":"533","severity":1,"message":"546","line":230,"column":15,"nodeType":"547","endLine":232,"endColumn":6},{"ruleId":"523","replacedBy":"550"},{"ruleId":"525","replacedBy":"551"},{"ruleId":"523","replacedBy":"552"},{"ruleId":"525","replacedBy":"553"},{"ruleId":"527","severity":1,"message":"554","line":7,"column":8,"nodeType":"529","messageId":"530","endLine":7,"endColumn":18},{"ruleId":"527","severity":1,"message":"555","line":9,"column":8,"nodeType":"529","messageId":"530","endLine":9,"endColumn":19},{"ruleId":"527","severity":1,"message":"556","line":10,"column":8,"nodeType":"529","messageId":"530","endLine":10,"endColumn":16},{"ruleId":"527","severity":1,"message":"557","line":11,"column":8,"nodeType":"529","messageId":"530","endLine":11,"endColumn":13},{"ruleId":"527","severity":1,"message":"558","line":62,"column":9,"nodeType":"529","messageId":"530","endLine":62,"endColumn":16},{"ruleId":"527","severity":1,"message":"559","line":102,"column":11,"nodeType":"529","messageId":"530","endLine":102,"endColumn":29},{"ruleId":"533","severity":1,"message":"546","line":109,"column":15,"nodeType":"547","endLine":150,"endColumn":6},{"ruleId":"533","severity":1,"message":"560","line":150,"column":7,"nodeType":"535","endLine":150,"endColumn":9,"suggestions":"561"},{"ruleId":"533","severity":1,"message":"546","line":52,"column":15,"nodeType":"547","endLine":126,"endColumn":6},{"ruleId":"533","severity":1,"message":"562","line":126,"column":7,"nodeType":"535","endLine":126,"endColumn":9,"suggestions":"563"},{"ruleId":"533","severity":1,"message":"546","line":130,"column":15,"nodeType":"547","endLine":218,"endColumn":6},{"ruleId":"533","severity":1,"message":"564","line":218,"column":7,"nodeType":"535","endLine":218,"endColumn":126,"suggestions":"565"},{"ruleId":"523","replacedBy":"566"},{"ruleId":"525","replacedBy":"567"},{"ruleId":"527","severity":1,"message":"568","line":30,"column":11,"nodeType":"529","messageId":"530","endLine":30,"endColumn":16},{"ruleId":"527","severity":1,"message":"569","line":30,"column":18,"nodeType":"529","messageId":"530","endLine":30,"endColumn":26},{"ruleId":"533","severity":1,"message":"570","line":63,"column":7,"nodeType":"535","endLine":63,"endColumn":20,"suggestions":"571"},{"ruleId":"527","severity":1,"message":"572","line":171,"column":9,"nodeType":"529","messageId":"530","endLine":171,"endColumn":22},{"ruleId":"527","severity":1,"message":"573","line":196,"column":9,"nodeType":"529","messageId":"530","endLine":196,"endColumn":23},{"ruleId":"527","severity":1,"message":"568","line":30,"column":11,"nodeType":"529","messageId":"530","endLine":30,"endColumn":16},{"ruleId":"527","severity":1,"message":"569","line":30,"column":18,"nodeType":"529","messageId":"530","endLine":30,"endColumn":26},{"ruleId":"533","severity":1,"message":"570","line":64,"column":7,"nodeType":"535","endLine":64,"endColumn":20,"suggestions":"574"},{"ruleId":"527","severity":1,"message":"572","line":172,"column":9,"nodeType":"529","messageId":"530","endLine":172,"endColumn":22},{"ruleId":"527","severity":1,"message":"573","line":197,"column":9,"nodeType":"529","messageId":"530","endLine":197,"endColumn":23},{"ruleId":"527","severity":1,"message":"568","line":31,"column":11,"nodeType":"529","messageId":"530","endLine":31,"endColumn":16},{"ruleId":"527","severity":1,"message":"569","line":31,"column":18,"nodeType":"529","messageId":"530","endLine":31,"endColumn":26},{"ruleId":"533","severity":1,"message":"570","line":65,"column":7,"nodeType":"535","endLine":65,"endColumn":20,"suggestions":"575"},{"ruleId":"527","severity":1,"message":"572","line":173,"column":9,"nodeType":"529","messageId":"530","endLine":173,"endColumn":22},{"ruleId":"527","severity":1,"message":"573","line":198,"column":9,"nodeType":"529","messageId":"530","endLine":198,"endColumn":23},{"ruleId":"527","severity":1,"message":"568","line":30,"column":11,"nodeType":"529","messageId":"530","endLine":30,"endColumn":16},{"ruleId":"527","severity":1,"message":"569","line":30,"column":18,"nodeType":"529","messageId":"530","endLine":30,"endColumn":26},{"ruleId":"533","severity":1,"message":"570","line":64,"column":7,"nodeType":"535","endLine":64,"endColumn":20,"suggestions":"576"},{"ruleId":"527","severity":1,"message":"572","line":172,"column":9,"nodeType":"529","messageId":"530","endLine":172,"endColumn":22},{"ruleId":"527","severity":1,"message":"573","line":197,"column":9,"nodeType":"529","messageId":"530","endLine":197,"endColumn":23},{"ruleId":"533","severity":1,"message":"570","line":43,"column":7,"nodeType":"535","endLine":43,"endColumn":20,"suggestions":"577"},{"ruleId":"527","severity":1,"message":"568","line":30,"column":11,"nodeType":"529","messageId":"530","endLine":30,"endColumn":16},{"ruleId":"527","severity":1,"message":"569","line":30,"column":18,"nodeType":"529","messageId":"530","endLine":30,"endColumn":26},{"ruleId":"533","severity":1,"message":"570","line":63,"column":7,"nodeType":"535","endLine":63,"endColumn":20,"suggestions":"578"},{"ruleId":"527","severity":1,"message":"572","line":168,"column":9,"nodeType":"529","messageId":"530","endLine":168,"endColumn":22},{"ruleId":"527","severity":1,"message":"573","line":193,"column":9,"nodeType":"529","messageId":"530","endLine":193,"endColumn":23},{"ruleId":"533","severity":1,"message":"570","line":41,"column":7,"nodeType":"535","endLine":41,"endColumn":20,"suggestions":"579"},{"ruleId":"527","severity":1,"message":"580","line":14,"column":8,"nodeType":"529","messageId":"530","endLine":14,"endColumn":14},{"ruleId":"527","severity":1,"message":"581","line":60,"column":12,"nodeType":"529","messageId":"530","endLine":60,"endColumn":24},{"ruleId":"527","severity":1,"message":"582","line":72,"column":12,"nodeType":"529","messageId":"530","endLine":72,"endColumn":29},{"ruleId":"533","severity":1,"message":"534","line":196,"column":7,"nodeType":"535","endLine":196,"endColumn":20,"suggestions":"583"},{"ruleId":"527","severity":1,"message":"584","line":1609,"column":9,"nodeType":"529","messageId":"530","endLine":1609,"endColumn":19},{"ruleId":"527","severity":1,"message":"585","line":1646,"column":9,"nodeType":"529","messageId":"530","endLine":1646,"endColumn":19},{"ruleId":"537","severity":1,"message":"538","line":1659,"column":129,"nodeType":"539","messageId":"540","endLine":1659,"endColumn":131},{"ruleId":"537","severity":1,"message":"538","line":1660,"column":38,"nodeType":"539","messageId":"540","endLine":1660,"endColumn":40},{"ruleId":"537","severity":1,"message":"538","line":1661,"column":67,"nodeType":"539","messageId":"540","endLine":1661,"endColumn":69},{"ruleId":"537","severity":1,"message":"538","line":1662,"column":64,"nodeType":"539","messageId":"540","endLine":1662,"endColumn":66},{"ruleId":"527","severity":1,"message":"586","line":1679,"column":9,"nodeType":"529","messageId":"530","endLine":1679,"endColumn":19},{"ruleId":"587","severity":1,"message":"588","line":27,"column":17,"nodeType":"589","endLine":27,"endColumn":64},{"ruleId":"587","severity":1,"message":"588","line":37,"column":37,"nodeType":"589","endLine":37,"endColumn":84},{"ruleId":"587","severity":1,"message":"588","line":50,"column":17,"nodeType":"589","endLine":50,"endColumn":62},{"ruleId":"587","severity":1,"message":"588","line":61,"column":37,"nodeType":"589","endLine":61,"endColumn":82},{"ruleId":"587","severity":1,"message":"588","line":75,"column":37,"nodeType":"589","endLine":75,"endColumn":84},{"ruleId":"587","severity":1,"message":"588","line":85,"column":37,"nodeType":"589","endLine":85,"endColumn":84},"no-native-reassign",["590"],"no-negated-in-lhs",["591"],"no-unused-vars","'IsoCtrl' is defined but never used.","Identifier","unusedVar","'Welcome' is defined but never used.","'LoginPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'secureStorage', and 'updateData'. Either include them or remove the dependency array. You can also do a functional update 'setUpdateData(u => ...)' if you only need 'updateData' in the 'setUpdateData' call.","ArrayExpression",["592"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'FullTrackerLogo' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Unexpected mix of '&&' and '||'.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'progress', 'progressIso', 'props.currentRole', and 'totalStock'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotalStockTD' needs the current value of 'totalStock'.",["593"],["590"],["591"],["590"],["591"],"'Typography' is defined but never used.","'TechnipLogo' is defined but never used.","'HomeLogo' is defined but never used.","'Icapp' is defined but never used.","'menubtn' is assigned a value but never used.","'handleClickProject' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleClickCivil', 'handleClickElectrical', 'handleClickEquipments', 'handleClickHome', 'handleClickInstrument', 'handleClickIsotracker', and 'handleClickPiping'. Either include them or remove the dependency array.",["594"],"React Hook useEffect has missing dependencies: 'civilsProgress', 'civilsWeight', 'elecsProgress', 'elecsWeight', 'equisProgress', 'equisWeight', 'instsProgress', 'instsWeight', 'pipesProgress', 'pipesWeight', 'totalProgress', and 'totalWeight'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotalWeight' needs the current value of 'pipesWeight'.",["595"],"React Hook useEffect has missing dependencies: 'civilsProgress', 'civilsProgressWidth', 'civilsWeight', 'elecsProgress', 'elecsProgressWidth', 'elecsWeight', 'equisProgress', 'equisProgressWidth', 'equisWeight', 'instsProgress', 'instsProgressWidth', 'instsWeight', 'pipesProgress', 'pipesProgressWidth', and 'pipesWeight'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProgressButtons' needs the current value of 'pipesWeight'.",["596"],["590"],["591"],"'admin' is assigned a value but never used.","'setAdmin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'secureStorage'. Either include them or remove the dependency array.",["597"],"'navBtnsMargin' is assigned a value but never used.","'marginProgress' is assigned a value but never used.",["598"],["599"],["600"],["601"],["602"],["603"],"'BinBtn' is defined but never used.","'commentAlert' is assigned a value but never used.","'errorReportDIndex' is assigned a value but never used.",["604"],"'procInsBtn' is assigned a value but never used.","'commentBox' is assigned a value but never used.","'actionText' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"615","fix":"617"},{"desc":"615","fix":"618"},{"desc":"615","fix":"619"},{"desc":"615","fix":"620"},{"desc":"615","fix":"621"},{"desc":"615","fix":"622"},{"desc":"605","fix":"623"},"Update the dependencies array to be: [currentRole, currentUser, secureStorage, updateData]",{"range":"624","text":"625"},"Update the dependencies array to be: [loading, progress, progressIso, props.currentRole, totalStock]",{"range":"626","text":"627"},"Update the dependencies array to be: [handleClickCivil, handleClickElectrical, handleClickEquipments, handleClickHome, handleClickInstrument, handleClickIsotracker, handleClickPiping]",{"range":"628","text":"629"},"Update the dependencies array to be: [civilsProgress, civilsWeight, elecsProgress, elecsWeight, equisProgress, equisWeight, instsProgress, instsWeight, pipesProgress, pipesWeight, totalProgress, totalWeight]",{"range":"630","text":"631"},"Update the dependencies array to be: [totalProgressWidth, refresh, isoIsShown, progIsShown, pipeIsShown, equipIsShown, civIsShown, instIsShown, elecIsShown, pipesWeight, equisWeight, instsWeight, civilsWeight, elecsWeight, pipesProgress, equisProgress, civilsProgress, instsProgress, elecsProgress, pipesProgressWidth, equisProgressWidth, civilsProgressWidth, instsProgressWidth, elecsProgressWidth]",{"range":"632","text":"633"},"Update the dependencies array to be: [currentRole, currentUser, secureStorage]",{"range":"634","text":"635"},{"range":"636","text":"635"},{"range":"637","text":"635"},{"range":"638","text":"635"},{"range":"639","text":"635"},{"range":"640","text":"635"},{"range":"641","text":"635"},{"range":"642","text":"625"},[7104,7117],"[currentRole, currentUser, secureStorage, updateData]",[12622,12631],"[loading, progress, progressIso, props.currentRole, totalStock]",[5245,5247],"[handleClickCivil, handleClickElectrical, handleClickEquipments, handleClickHome, handleClickInstrument, handleClickIsotracker, handleClickPiping]",[5788,5790],"[civilsProgress, civilsWeight, elecsProgress, elecsWeight, equisProgress, equisWeight, instsProgress, instsWeight, pipesProgress, pipesWeight, totalProgress, totalWeight]",[14901,15020],"[totalProgressWidth, refresh, isoIsShown, progIsShown, pipeIsShown, equipIsShown, civIsShown, instIsShown, elecIsShown, pipesWeight, equisWeight, instsWeight, civilsWeight, elecsWeight, pipesProgress, equisProgress, civilsProgress, instsProgress, elecsProgress, pipesProgressWidth, equisProgressWidth, civilsProgressWidth, instsProgressWidth, elecsProgressWidth]",[2706,2719],"[currentRole, currentUser, secureStorage]",[2821,2834],[2692,2705],[2717,2730],[1398,1411],[2683,2696],[1315,1328],[8609,8622]]