{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\renamePopUp\\\\renamePopUp.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-awesome-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RenamePopUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  openModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  rename() {\n    const newName = document.getElementById(\"comments\").value;\n    const oldName = this.props.filename;\n    const body = {\n      oldName: oldName,\n      newName: newName\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/rename\", options).then(response => console.log(\"Cambiado\"));\n    this.closeModal();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: \"5px\",\n        marginLeft: \"5px\",\n        float: \"right\",\n        display: \"inline-block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-sm\",\n        style: {\n          backgroundColor: \"red\",\n          fontSize: \"12px\",\n          borderColor: \"red\",\n          padding: \"2px 5px 2px 5px\",\n          marginRight: \"5px\",\n          float: \"left\"\n        },\n        onClick: () => this.openModal(),\n        children: \"LOCKED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          visible: this.state.visible,\n          width: \"550\",\n          height: \"220\",\n          effect: \"fadeInUp\",\n          onClickAway: () => this.closeModal(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"comments\",\n              placeholder: \"Comments\",\n              class: \"comments\",\n              cols: \"51\",\n              rows: \"6\",\n              required: \"\",\n              maxlength: \"400\",\n              name: \"comments\",\n              style: {\n                margin: \"10px 10px 10px 10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-success\",\n            style: {\n              fontSize: \"15px\"\n            },\n            onClick: () => this.rename(),\n            children: \"Rename\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/renamePopUp/renamePopUp.js"],"names":["React","Component","Modal","RenamePopUp","constructor","props","state","visible","openModal","setState","closeModal","rename","newName","document","getElementById","value","oldName","filename","body","options","method","headers","JSON","stringify","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","console","log","render","marginRight","marginLeft","float","display","backgroundColor","fontSize","borderColor","padding","marginTop","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\n\r\nexport default class RenamePopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            visible : true\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            visible : false\r\n        });\r\n    }\r\n\r\n    rename(){\r\n        const newName = document.getElementById(\"comments\").value\r\n        const oldName = this.props.filename\r\n\r\n        const body = {\r\n            oldName: oldName,\r\n            newName: newName\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/rename\", options)\r\n        .then(response => console.log(\"Cambiado\"))\r\n\r\n        this.closeModal()\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div style={{marginRight:\"5px\", marginLeft:\"5px\", float:\"right\", display:\"inline-block\"}}>\r\n                <button class=\"btn btn-sm\" style={{backgroundColor:\"red\", fontSize:\"12px\", borderColor:\"red\", padding:\"2px 5px 2px 5px\", marginRight:\"5px\", float:\"left\"}} onClick={() => this.openModal()}>LOCKED</button>\r\n                <div>\r\n                    <Modal visible={this.state.visible} width=\"550\" height=\"220\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                        <div style={{marginTop:\"10px\"}}>   \r\n                            <textarea id=\"comments\" placeholder=\"Comments\" class=\"comments\" cols=\"51\" rows=\"6\" required=\"\" maxlength=\"400\" name=\"comments\" style={{margin: \"10px 10px 10px 10px\"}}></textarea>\r\n                        </div>\r\n                                \r\n                            <button class=\"btn btn-sm btn-success\" style={{fontSize:\"15px\"}} onClick={()=>this.rename()}>Rename</button>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}