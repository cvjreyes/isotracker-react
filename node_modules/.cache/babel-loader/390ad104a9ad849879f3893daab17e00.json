{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ssaez1\\\\technip-repositories\\\\isotracker\\\\isotracker-react\\\\src\\\\components\\\\navBar\\\\navBar.js\",\n    _s = $RefreshSig$();\n\n//Cabecera de IsoTracker con diferentes desplegables y botones\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './navBar.css';\nimport { useHistory } from \"react-router\";\nimport Trash from \"../../assets/images/Trash.png\";\nimport Bell from \"../../assets/images/bell.svg\";\nimport BellActive from \"../../assets/images/bell_active.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  label: {},\n  label2: {}\n}));\n\nconst NavBar = props => {\n  _s();\n\n  const classes = useStyles();\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const history = useHistory();\n  const [username, setUsername] = React.useState(\"\");\n  const [progressButtons, setProgressButtons] = React.useState(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const ref = useRef();\n  const [notifications, setNotifications] = useState(false);\n  const [updateData, setUpdateData] = useState(false);\n  const [bellImage, setBellImage] = useState();\n  const [emptyNotifications, setEmptyNotifications] = useState();\n\n  const handleClickUser = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseUser = () => {\n    setAnchorElUser(null);\n  };\n\n  const handleClickIsotracker = () => {\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/isotracker\");\n  };\n\n  const handleLogOut = () => {\n    localStorage.clear();\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/\");\n  };\n\n  const handleChangePassword = () => {\n    setAnchorElUser(null);\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/changepassword\");\n  };\n\n  const handleClickEquipments = () => {\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/equipments\");\n  };\n\n  const handleClickInstrument = () => {\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/instrumentation\");\n  };\n\n  const handleClickCivil = () => {\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/civil\");\n  };\n\n  const handleClickElectrical = () => {\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/electrical\");\n  };\n\n  const handleClickPiping = () => {\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/piping\");\n  };\n\n  const handleClickHome = () => {\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/home\");\n  };\n\n  const handleClickSP = () => {\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/csptracker\");\n  };\n\n  const handleClickPIT = () => {\n    history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/pitrequests\");\n  };\n\n  useEffect(() => {\n    const checkIfClickedOutside = e => {\n      // If the menu is open and the clicked target is not within the menu,\n      // then close the menu\n      if (isMenuOpen && ref.current && !ref.current.contains(e.target)) {\n        setIsMenuOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\n    return () => {\n      // Cleanup the event listener\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\n    };\n  }, [isMenuOpen]);\n  useEffect(async () => {\n    const bodyUsername = {\n      email: secureStorage.getItem(\"user\")\n    };\n    const optionsUsername = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(bodyUsername)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/findByEmail\", optionsUsername).then(response => response.json()).then(json => {\n      setUsername(json.name);\n    });\n\n    if (process.env.REACT_APP_PROGRESS === \"1\") {\n      if (process.env.REACT_APP_SP === \"1\") {\n        setProgressButtons( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"3%\",\n            float: \"left\",\n            zoom: 0.8\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickHome,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Home \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickPiping,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Piping \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickInstrument,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Instrumentation \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickEquipments,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Equipment \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickCivil,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Civil \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickElectrical,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Electrical \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickIsotracker,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"IsoTracker \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 36\n        }, this));\n      } else {\n        setProgressButtons( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"3%\",\n            float: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickHome,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Home \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickPiping,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Piping \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickInstrument,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Instrumentation \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickEquipments,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Equipment \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickCivil,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Civil \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickElectrical,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"Electrical \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            onClick: handleClickIsotracker,\n            style: {\n              marginRight: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: \"IsoTracker \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 36\n        }, this));\n      }\n    }\n  }, []);\n  useEffect(async () => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/notifications/\" + secureStorage.getItem(\"user\"), options).then(response => response.json()).then(async json => {\n      let notif = [];\n      let alert = false;\n\n      if (json.rows[0]) {\n        for (let i = 0; i < json.rows.length; i++) {\n          if (json.rows[i].read === 0) {\n            alert = true;\n            notif.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notification__text\",\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: json.rows[i].text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"markAsReadNotification__button\",\n                style: {\n                  marginLeft: \"170px\"\n                },\n                onClick: () => markAsRead(json.rows[i].id),\n                children: \"Mark as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"deleteNotification__button\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Trash,\n                  alt: \"trash\",\n                  className: \"notificationTrash__icon\",\n                  onClick: () => deleteNotification(json.rows[i].id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 84\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 36\n            }, this));\n          } else {\n            notif.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notification__text\",\n                children: json.rows[i].text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"markAsReadNotification__button\",\n                style: {\n                  marginLeft: \"157px\"\n                },\n                onClick: () => markAsUnread(json.rows[i].id),\n                children: \"Mark as unread\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"deleteNotification__button\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Trash,\n                  alt: \"trash\",\n                  className: \"notificationTrash__icon\",\n                  onClick: () => deleteNotification(json.rows[i].id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 84\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 36\n            }, this));\n          }\n        }\n\n        await setEmptyNotifications(null);\n      } else {\n        await setEmptyNotifications( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emptyNotifications__container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"emptyNotifications__text\",\n            children: \"No new notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 45\n        }, this));\n      }\n\n      if (alert) {\n        await setBellImage( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: BellActive,\n          alt: \"bellActive\",\n          className: \"notificationBell__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 36\n        }, this));\n      } else {\n        await setBellImage( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Bell,\n          alt: \"bell\",\n          className: \"notificationBell__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 36\n        }, this));\n      }\n\n      await setNotifications(notif);\n    });\n  }, [updateData]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/notifications/\" + secureStorage.getItem(\"user\"), options).then(response => response.json()).then(async json => {\n        let notif = [];\n        let alert = false;\n\n        if (json.rows[0]) {\n          for (let i = 0; i < json.rows.length; i++) {\n            if (json.rows[i].read === 0) {\n              alert = true;\n              notif.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification__container\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"notification__text\",\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: json.rows[i].text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"markAsReadNotification__button\",\n                  style: {\n                    marginLeft: \"170px\"\n                  },\n                  onClick: () => markAsRead(json.rows[i].id),\n                  children: \"Mark as read\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"deleteNotification__button\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Trash,\n                    alt: \"trash\",\n                    className: \"notificationTrash__icon\",\n                    onClick: () => deleteNotification(json.rows[i].id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 88\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 40\n              }, this));\n            } else {\n              notif.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification__container\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"notification__text\",\n                  children: json.rows[i].text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"markAsReadNotification__button\",\n                  style: {\n                    marginLeft: \"157px\"\n                  },\n                  onClick: () => markAsUnread(json.rows[i].id),\n                  children: \"Mark as unread\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"deleteNotification__button\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Trash,\n                    alt: \"trash\",\n                    className: \"notificationTrash__icon\",\n                    onClick: () => deleteNotification(json.rows[i].id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 88\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 40\n              }, this));\n            }\n          }\n\n          await setEmptyNotifications(null);\n        } else {\n          setEmptyNotifications( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emptyNotifications__container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"emptyNotifications__text\",\n              children: \"No new notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 43\n          }, this));\n        }\n\n        if (alert) {\n          setBellImage( /*#__PURE__*/_jsxDEV(\"img\", {\n            src: BellActive,\n            alt: \"bellActive\",\n            className: \"notificationBell__icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 34\n          }, this));\n        } else {\n          setBellImage( /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Bell,\n            alt: \"bell\",\n            className: \"notificationBell__icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 34\n          }, this));\n        }\n\n        await setNotifications(notif);\n      });\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  let projectBtn,\n      pitButton,\n      spbutton,\n      pitButtonProgress,\n      rightButtons = null;\n\n  if (process.env.REACT_APP_PROGRESS === \"1\") {\n    if (process.env.REACT_APP_SP === \"1\") {\n      if (process.env.REACT_APP_PIT === \"1\") {\n        projectBtn = /*#__PURE__*/_jsxDEV(Button, {\n          class: \"btn nohover\",\n          disabled: true,\n          style: {\n            marginRight: \"20px\",\n            float: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"dropdown__text__projectname\",\n            children: process.env.REACT_APP_APP_NAMEPROJ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 26\n        }, this);\n        rightButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"30%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              float: \"right\",\n              marginLeft: \"20px\",\n              marginTop: \"4px\",\n              border: \"none\",\n              background: \"none\"\n            },\n            onClick: () => setIsMenuOpen(!isMenuOpen),\n            children: bellImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            style: {\n              float: \"right\",\n              marginTop: \"4px\"\n            },\n            classes: {\n              label: classes.label\n            },\n            onClick: handleClickUser,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: [username, \"\\xA0\\uD83E\\uDC17\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications__container\",\n            style: {\n              marginLeft: \"17%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notificationPanel__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notificationHeader__text\",\n                children: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"markAllAsRead__button\",\n                onClick: () => markAllAsRead(),\n                children: \"Mark all as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 25\n            }, this), notifications, emptyNotifications]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 21\n          }, this), projectBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 28\n        }, this);\n      } else {\n        projectBtn = /*#__PURE__*/_jsxDEV(Button, {\n          class: \"btn nohover\",\n          disabled: true,\n          style: {\n            marginRight: \"20px\",\n            float: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"dropdown__text__projectname\",\n            children: process.env.REACT_APP_APP_NAMEPROJ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 30\n        }, this);\n        rightButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"40%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              float: \"right\",\n              marginLeft: \"20px\",\n              marginTop: \"4px\",\n              border: \"none\",\n              background: \"none\"\n            },\n            onClick: () => setIsMenuOpen(!isMenuOpen),\n            children: bellImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            style: {\n              float: \"right\",\n              marginTop: \"4px\"\n            },\n            classes: {\n              label: classes.label\n            },\n            onClick: handleClickUser,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: [username, \"\\xA0\\uD83E\\uDC17\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications__container\",\n            style: {\n              marginLeft: \"26%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notificationPanel__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notificationHeader__text\",\n                children: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"markAllAsRead__button\",\n                onClick: () => markAllAsRead(),\n                children: \"Mark all as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 25\n            }, this), notifications, emptyNotifications]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 21\n          }, this), projectBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 28\n        }, this);\n      }\n    } else {\n      if (process.env.REACT_APP_PIT === \"1\") {\n        projectBtn = /*#__PURE__*/_jsxDEV(Button, {\n          class: \"btn nohover\",\n          disabled: true,\n          style: {\n            float: \"right\",\n            marginRight: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"dropdown__text__projectname\",\n            children: process.env.REACT_APP_APP_NAMEPROJ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 30\n        }, this);\n        rightButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"40%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              float: \"right\",\n              marginLeft: \"20px\",\n              marginTop: \"4px\",\n              border: \"none\",\n              background: \"none\"\n            },\n            onClick: () => setIsMenuOpen(!isMenuOpen),\n            children: bellImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            style: {\n              float: \"right\",\n              marginTop: \"4px\"\n            },\n            classes: {\n              label: classes.label\n            },\n            onClick: handleClickUser,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: [username, \"\\xA0\\uD83E\\uDC17\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications__container\",\n            style: {\n              marginLeft: \"27%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notificationPanel__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notificationHeader__text\",\n                children: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"markAllAsRead__button\",\n                onClick: () => markAllAsRead(),\n                children: \"Mark all as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 25\n            }, this), notifications, emptyNotifications]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 21\n          }, this), projectBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 31\n        }, this);\n      } else {\n        projectBtn = /*#__PURE__*/_jsxDEV(Button, {\n          class: \"btn nohover\",\n          disabled: true,\n          style: {\n            float: \"right\",\n            marginRight: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"dropdown__text__projectname\",\n            children: process.env.REACT_APP_APP_NAMEPROJ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 30\n        }, this);\n        rightButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"48%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              float: \"right\",\n              marginLeft: \"20px\",\n              marginTop: \"4px\",\n              border: \"none\",\n              background: \"none\"\n            },\n            onClick: () => setIsMenuOpen(!isMenuOpen),\n            children: bellImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            style: {\n              float: \"right\",\n              marginTop: \"4px\"\n            },\n            classes: {\n              label: classes.label\n            },\n            onClick: handleClickUser,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: [username, \"\\xA0\\uD83E\\uDC17\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications__container\",\n            style: {\n              marginLeft: \"34%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notificationPanel__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notificationHeader__text\",\n                children: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"markAllAsRead__button\",\n                onClick: () => markAllAsRead(),\n                children: \"Mark all as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 25\n            }, this), notifications, emptyNotifications]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 21\n          }, this), projectBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 31\n        }, this);\n      }\n    }\n  } else {\n    if (process.env.REACT_APP_SP === \"1\") {\n      if (process.env.REACT_APP_PIT === \"1\") {\n        projectBtn = /*#__PURE__*/_jsxDEV(Button, {\n          classes: {\n            label: classes.label2\n          },\n          class: \"btn nohover\",\n          disabled: true,\n          style: {\n            float: \"right\",\n            marginRight: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"dropdown__text__projectname\",\n            children: process.env.REACT_APP_APP_NAMEPROJ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 26\n        }, this);\n        rightButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"76%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              float: \"right\",\n              marginLeft: \"20px\",\n              marginTop: \"4px\",\n              border: \"none\",\n              background: \"none\"\n            },\n            onClick: () => setIsMenuOpen(!isMenuOpen),\n            children: bellImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            style: {\n              float: \"right\",\n              marginTop: \"4px\"\n            },\n            classes: {\n              label: classes.label\n            },\n            onClick: handleClickUser,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: [username, \"\\xA0\\uD83E\\uDC17\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications__container\",\n            style: {\n              marginLeft: \"62%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notificationPanel__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notificationHeader__text\",\n                children: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"markAllAsRead__button\",\n                onClick: () => markAllAsRead(),\n                children: \"Mark all as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 21\n            }, this), notifications, emptyNotifications]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 17\n          }, this), projectBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 23\n        }, this);\n      } else {\n        projectBtn = /*#__PURE__*/_jsxDEV(Button, {\n          classes: {\n            label: classes.label2\n          },\n          class: \"btn nohover\",\n          disabled: true,\n          style: {\n            float: \"right\",\n            marginRight: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"dropdown__text__projectname\",\n            children: process.env.REACT_APP_APP_NAMEPROJ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 30\n        }, this);\n        rightButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"82%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              float: \"right\",\n              marginLeft: \"20px\",\n              marginTop: \"4px\",\n              border: \"none\",\n              background: \"none\"\n            },\n            onClick: () => setIsMenuOpen(!isMenuOpen),\n            children: bellImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            style: {\n              float: \"right\",\n              marginTop: \"4px\"\n            },\n            classes: {\n              label: classes.label\n            },\n            onClick: handleClickUser,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: [username, \"\\xA0\\uD83E\\uDC17\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications__container\",\n            style: {\n              marginLeft: \"68%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notificationPanel__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notificationHeader__text\",\n                children: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"markAllAsRead__button\",\n                onClick: () => markAllAsRead(),\n                children: \"Mark all as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 25\n            }, this), notifications, emptyNotifications]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 21\n          }, this), projectBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 27\n        }, this);\n      }\n    } else {\n      if (process.env.REACT_APP_PIT === \"1\") {\n        projectBtn = /*#__PURE__*/_jsxDEV(Button, {\n          classes: {\n            label: classes.label2\n          },\n          class: \"btn nohover\",\n          disabled: true,\n          style: {\n            float: \"right\",\n            marginRight: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"dropdown__text__projectname\",\n            children: process.env.REACT_APP_APP_NAMEPROJ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 30\n        }, this);\n        rightButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"82%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              float: \"right\",\n              marginLeft: \"20px\",\n              marginTop: \"4px\",\n              border: \"none\",\n              background: \"none\"\n            },\n            onClick: () => setIsMenuOpen(!isMenuOpen),\n            children: bellImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            style: {\n              float: \"right\",\n              marginTop: \"4px\"\n            },\n            classes: {\n              label: classes.label\n            },\n            onClick: handleClickUser,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: [username, \"\\xA0\\uD83E\\uDC17\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications__container\",\n            style: {\n              marginLeft: \"68%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notificationPanel__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notificationHeader__text\",\n                children: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"markAllAsRead__button\",\n                onClick: () => markAllAsRead(),\n                children: \"Mark all as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 25\n            }, this), notifications, emptyNotifications]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 21\n          }, this), projectBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 31\n        }, this);\n      } else {\n        projectBtn = /*#__PURE__*/_jsxDEV(Button, {\n          classes: {\n            label: classes.label2\n          },\n          class: \"btn nohover\",\n          disabled: true,\n          style: {\n            float: \"right\",\n            marginRight: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"dropdown__text__projectname\",\n            children: process.env.REACT_APP_APP_NAMEPROJ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 30\n        }, this);\n        rightButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"90%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              float: \"right\",\n              marginLeft: \"20px\",\n              marginTop: \"4px\",\n              border: \"none\",\n              background: \"none\"\n            },\n            onClick: () => setIsMenuOpen(!isMenuOpen),\n            children: bellImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            class: \"btn nohover\",\n            style: {\n              float: \"right\",\n              marginTop: \"4px\"\n            },\n            classes: {\n              label: classes.label\n            },\n            onClick: handleClickUser,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"dropdown__text\",\n              children: [username, \"\\xA0\\uD83E\\uDC17\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 17\n          }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications__container\",\n            style: {\n              marginLeft: \"75%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notificationPanel__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notificationHeader__text\",\n                children: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"markAllAsRead__button\",\n                onClick: () => markAllAsRead(),\n                children: \"Mark all as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 25\n            }, this), notifications, emptyNotifications]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 21\n          }, this), projectBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 31\n        }, this);\n      }\n    }\n  }\n\n  let isotrackerBtnNoProgress = null;\n\n  if (process.env.REACT_APP_SP === \"1\") {\n    if (process.env.REACT_APP_PROGRESS === \"1\") {\n      spbutton = /*#__PURE__*/_jsxDEV(Button, {\n        class: \"btn nohover\",\n        onClick: handleClickSP,\n        style: {\n          marginRight: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown__text\",\n          children: \"SPTracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 24\n      }, this);\n    } else {\n      spbutton = /*#__PURE__*/_jsxDEV(Button, {\n        class: \"btn nohover\",\n        onClick: handleClickSP,\n        style: {\n          marginLeft: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown__text\",\n          children: \"SPTracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 24\n      }, this);\n      isotrackerBtnNoProgress = /*#__PURE__*/_jsxDEV(Button, {\n        class: \"btn nohover\",\n        onClick: handleClickIsotracker,\n        style: {\n          marginLeft: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown__text\",\n          children: \"IsoTracker \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 39\n      }, this);\n    }\n  }\n\n  if (process.env.REACT_APP_PIT === \"1\") {\n    if (process.env.REACT_APP_PROGRESS === \"1\") {\n      pitButtonProgress = /*#__PURE__*/_jsxDEV(Button, {\n        class: \"btn nohover\",\n        onClick: handleClickPIT,\n        style: {\n          marginRight: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown__text\",\n          children: \"PITRequests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 33\n      }, this);\n    } else {\n      pitButton = /*#__PURE__*/_jsxDEV(Button, {\n        class: \"btn nohover\",\n        onClick: handleClickPIT,\n        style: {\n          marginLeft: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown__text\",\n          children: \"PITRequests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 25\n      }, this);\n      isotrackerBtnNoProgress = /*#__PURE__*/_jsxDEV(Button, {\n        class: \"btn nohover\",\n        onClick: handleClickIsotracker,\n        style: {\n          marginLeft: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown__text\",\n          children: \"IsoTracker \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 39\n      }, this);\n    }\n  }\n\n  if (process.env.REACT_APP_PROGRESS === \"0\" && process.env.REACT_APP_SP === \"0\" && process.env.REACT_APP_PIT === \"0\") {\n    isotrackerBtnNoProgress = /*#__PURE__*/_jsxDEV(Button, {\n      class: \"btn nohover\",\n      onClick: handleClickIsotracker,\n      style: {\n        marginLeft: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"dropdown__text\",\n        children: \"IsoTracker \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 35\n    }, this);\n  }\n\n  function markAllAsRead() {\n    const body = {\n      email: secureStorage.getItem(\"user\")\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/markAllNotificationsAsRead\", options).then(response => response.json()).then(json => {\n      if (json.success) {\n        setUpdateData(!updateData);\n      }\n    });\n  }\n\n  function markAsRead(id) {\n    const body = {\n      id: id\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/markNotificationAsRead\", options).then(response => response.json()).then(json => {\n      if (json.success) {\n        setUpdateData(!updateData);\n      }\n    });\n  }\n\n  function markAsUnread(id) {\n    const body = {\n      id: id\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/markNotificationAsUnread\", options).then(response => response.json()).then(json => {\n      if (json.success) {\n        setUpdateData(!updateData);\n      }\n    });\n  }\n\n  function deleteNotification(id) {\n    const body = {\n      id: id\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/deleteNotification\", options).then(response => response.json()).then(json => {\n      if (json.success) {\n        setUpdateData(!updateData);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"fixed\",\n          className: \"navBar__container\",\n          style: {\n            height: \"62px\",\n            borderBottomColor: \"rgb(211, 224, 233)\",\n            borderLeftColor: \"rgb(211, 224, 233)\",\n            bordeRightColor: \"rgb(211, 224, 233)\",\n            borderTopColor: \"rgb(211, 224, 233)\",\n            backgroundColor: \"#383838\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [progressButtons, isotrackerBtnNoProgress, pitButtonProgress, pitButton, spbutton, /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"simple-menu\",\n              anchorEl: anchorElUser,\n              getContentAnchorEl: null,\n              anchorOrigin: {\n                vertical: \"bottom\",\n                horizontal: \"center\"\n              },\n              transformOrigin: {\n                vertical: \"top\",\n                horizontal: \"center\"\n              },\n              open: Boolean(anchorElUser),\n              onClose: handleCloseUser,\n              PaperProps: {\n                style: {\n                  left: '50%',\n                  transform: 'translateX(+200%)'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                style: {\n                  fontFamily: \"Quicksand\",\n                  fontSize: \"13.33px\"\n                },\n                onClick: handleChangePassword,\n                children: \"Change password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                style: {\n                  fontFamily: \"Quicksand\",\n                  fontSize: \"13.33px\"\n                },\n                onClick: handleLogOut,\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Logout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 107\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 21\n            }, this), rightButtons]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 660,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBar, \"bUsxfD5PpK+PR56aeedEcmv8t+s=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["C:/Users/ssaez1/technip-repositories/isotracker/isotracker-react/src/components/navBar/navBar.js"],"names":["React","useEffect","useRef","useState","makeStyles","AppBar","Toolbar","Button","Menu","MenuItem","useHistory","Trash","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","label","label2","NavBar","props","classes","anchorElUser","setAnchorElUser","history","username","setUsername","progressButtons","setProgressButtons","isMenuOpen","setIsMenuOpen","ref","notifications","setNotifications","updateData","setUpdateData","bellImage","setBellImage","emptyNotifications","setEmptyNotifications","handleClickUser","event","currentTarget","handleCloseUser","handleClickIsotracker","push","process","env","REACT_APP_PROJECT","handleLogOut","clear","handleChangePassword","handleClickEquipments","handleClickInstrument","handleClickCivil","handleClickElectrical","handleClickPiping","handleClickHome","handleClickSP","handleClickPIT","checkIfClickedOutside","e","current","contains","target","document","addEventListener","removeEventListener","bodyUsername","email","getItem","optionsUsername","method","headers","body","JSON","stringify","fetch","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","name","REACT_APP_PROGRESS","REACT_APP_SP","marginLeft","float","zoom","options","notif","alert","rows","i","length","read","fontWeight","text","markAsRead","id","deleteNotification","markAsUnread","BellActive","Bell","interval","setInterval","clearInterval","projectBtn","pitButton","spbutton","pitButtonProgress","rightButtons","REACT_APP_PIT","REACT_APP_APP_NAMEPROJ","width","marginTop","border","background","markAllAsRead","isotrackerBtnNoProgress","success","height","borderBottomColor","borderLeftColor","bordeRightColor","borderTopColor","backgroundColor","vertical","horizontal","Boolean","style","left","transform","fontFamily","fontSize"],"mappings":"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","sourcesContent":["//Cabecera de IsoTracker con diferentes desplegables y botones\r\n\r\nimport React, { useEffect ,useRef, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport './navBar.css';\r\nimport {useHistory} from \"react-router\";\r\nimport Trash from \"../../assets/images/Trash.png\"\r\nimport Bell from \"../../assets/images/bell.svg\"\r\nimport BellActive from \"../../assets/images/bell_active.svg\"\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst SecureStorage = require(\"secure-web-storage\");\r\nvar SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\nvar secureStorage = new SecureStorage(localStorage, {\r\n    hash: function hash(key) {\r\n        key = CryptoJS.SHA256(key, SECRET_KEY);\r\n\r\n        return key.toString();\r\n    },\r\n    encrypt: function encrypt(data) {\r\n        data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n\r\n        data = data.toString();\r\n\r\n        return data;\r\n    },\r\n    decrypt: function decrypt(data) {\r\n        data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n\r\n        data = data.toString(CryptoJS.enc.Utf8);\r\n\r\n        return data;\r\n    }\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    label: {\r\n      },\r\n      label2: {\r\n      },\r\n  }));\r\n\r\n\r\nconst NavBar = (props) =>{\r\n    const classes = useStyles();\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n    const history = useHistory();\r\n    const [username, setUsername] = React.useState(\"\");\r\n    const [progressButtons, setProgressButtons] = React.useState(null);\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n    const ref = useRef()\r\n    const [notifications, setNotifications] = useState(false)\r\n    const [updateData, setUpdateData] = useState(false)\r\n    const [bellImage, setBellImage] = useState()\r\n    const [emptyNotifications, setEmptyNotifications] = useState()\r\n\r\n    const handleClickUser = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseUser = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    const handleClickIsotracker = () => {\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/isotracker\");\r\n    };\r\n\r\n    const handleLogOut = () => {\r\n        localStorage.clear();\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n    };\r\n\r\n    const handleChangePassword = () =>{\r\n        setAnchorElUser(null);\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/changepassword\");\r\n    }\r\n\r\n    const handleClickEquipments = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/equipments\");\r\n    }\r\n\r\n    const handleClickInstrument = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/instrumentation\");\r\n    }\r\n    const handleClickCivil = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/civil\");\r\n    }\r\n    const handleClickElectrical = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/electrical\");\r\n    }\r\n    const handleClickPiping = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/piping\");\r\n    }\r\n    const handleClickHome = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/home\");\r\n    }\r\n    const handleClickSP = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/csptracker\");\r\n    }\r\n    const handleClickPIT = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/pitrequests\");\r\n    }\r\n     \r\n\r\n    useEffect(() => {\r\n        const checkIfClickedOutside = e => {\r\n          // If the menu is open and the clicked target is not within the menu,\r\n          // then close the menu\r\n          if (isMenuOpen && ref.current && !ref.current.contains(e.target)) {\r\n              \r\n            setIsMenuOpen(false)\r\n          }\r\n        }\r\n\r\n    \r\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\r\n    \r\n        return () => {\r\n          // Cleanup the event listener\r\n          document.removeEventListener(\"mousedown\", checkIfClickedOutside)\r\n        }\r\n      }, [isMenuOpen])\r\n\r\n    useEffect(async() =>{\r\n        const bodyUsername = {\r\n            email: secureStorage.getItem(\"user\")\r\n          }\r\n        const optionsUsername = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(bodyUsername)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/findByEmail\", optionsUsername)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            setUsername(json.name);\r\n        })\r\n\r\n        if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n            if(process.env.REACT_APP_SP === \"1\"){\r\n                setProgressButtons(<div style={{ marginLeft: \"3%\", float:\"left\", zoom: 0.8}}>\r\n                    <Button class=\"btn nohover\" onClick={handleClickHome} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Home </i>\r\n                    </Button><Button class=\"btn nohover\" onClick={handleClickPiping} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Piping </i>\r\n                    </Button><Button class=\"btn nohover\" onClick={handleClickInstrument} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Instrumentation </i>\r\n                    </Button>\r\n                    <Button class=\"btn nohover\" onClick={handleClickEquipments} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Equipment </i>\r\n                    </Button>\r\n                    <Button class=\"btn nohover\" onClick={handleClickCivil} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Civil </i>\r\n                    </Button>\r\n                    <Button class=\"btn nohover\" onClick={handleClickElectrical} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Electrical </i>\r\n                    </Button>\r\n                    <Button class=\"btn nohover\" onClick={handleClickIsotracker} style={{marginRight:\"50px\"}}>\r\n                                    <i className=\"dropdown__text\" >IsoTracker </i>\r\n                    </Button></div>)\r\n            }else{\r\n                setProgressButtons(<div style={{ marginLeft: \"3%\", float:\"left\" }}>\r\n                    <Button class=\"btn nohover\" onClick={handleClickHome} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Home </i>\r\n                    </Button><Button class=\"btn nohover\" onClick={handleClickPiping} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Piping </i>\r\n                    </Button><Button class=\"btn nohover\" onClick={handleClickInstrument} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Instrumentation </i>\r\n                    </Button>\r\n                    <Button class=\"btn nohover\" onClick={handleClickEquipments} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Equipment </i>\r\n                    </Button>\r\n                    <Button class=\"btn nohover\" onClick={handleClickCivil} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Civil </i>\r\n                    </Button>\r\n                    <Button class=\"btn nohover\" onClick={handleClickElectrical} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\">Electrical </i>\r\n                    </Button>\r\n                    <Button class=\"btn nohover\" onClick={handleClickIsotracker} style={{marginRight:\"50px\"}}>\r\n                        <i className=\"dropdown__text\" >IsoTracker </i>\r\n                    </Button></div>)\r\n            }\r\n\r\n        }\r\n      \r\n    },[])\r\n\r\n    useEffect (async ()=>{\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/notifications/\"+ secureStorage.getItem(\"user\"), options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            let notif = []\r\n            let alert = false\r\n            if(json.rows[0]){\r\n                for(let i = 0; i < json.rows.length; i++){           \r\n                    if(json.rows[i].read === 0){\r\n                        alert = true\r\n                        notif.push(<div className=\"notification__container\" >\r\n                                    <p className=\"notification__text\" style={{fontWeight:\"bold\"}}>{json.rows[i].text}</p>\r\n                                    <button className=\"markAsReadNotification__button\" style={{marginLeft:\"170px\"}} onClick={()=> markAsRead(json.rows[i].id)}>Mark as read</button>\r\n                                    <button className=\"deleteNotification__button\"><img src={Trash} alt=\"trash\" className=\"notificationTrash__icon\" onClick={()=> deleteNotification(json.rows[i].id)}></img></button>\r\n                                </div>)\r\n                    }else{\r\n                        notif.push(<div className=\"notification__container\" >\r\n                                    <p className=\"notification__text\">{json.rows[i].text}</p>\r\n                                    <button className=\"markAsReadNotification__button\" style={{marginLeft:\"157px\"}} onClick={()=> markAsUnread(json.rows[i].id)}>Mark as unread</button>\r\n                                    <button className=\"deleteNotification__button\"><img src={Trash} alt=\"trash\" className=\"notificationTrash__icon\" onClick={()=> deleteNotification(json.rows[i].id)}></img></button>\r\n                                </div>)\r\n                    }\r\n                    \r\n                }\r\n                await setEmptyNotifications(null)\r\n            }else{\r\n                await setEmptyNotifications(<div className=\"emptyNotifications__container\">\r\n                    <p className=\"emptyNotifications__text\">No new notifications</p>\r\n                </div>)\r\n            }\r\n\r\n            if(alert){\r\n                await setBellImage(<img src={BellActive} alt=\"bellActive\" className=\"notificationBell__icon\"></img>)\r\n            }else{\r\n                await setBellImage(<img src={Bell} alt=\"bell\" className=\"notificationBell__icon\"></img>)\r\n            }\r\n            await setNotifications(notif)\r\n        })\r\n    },[updateData])\r\n\r\n    \r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const options = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            }\r\n    \r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/notifications/\"+ secureStorage.getItem(\"user\"), options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                let notif = []\r\n                let alert = false\r\n                if(json.rows[0]){\r\n                    for(let i = 0; i < json.rows.length; i++){           \r\n                        if(json.rows[i].read === 0){\r\n                            alert = true\r\n                            notif.push(<div className=\"notification__container\" >\r\n                                        <p className=\"notification__text\" style={{fontWeight:\"bold\"}}>{json.rows[i].text}</p>\r\n                                        <button className=\"markAsReadNotification__button\" style={{marginLeft:\"170px\"}} onClick={()=> markAsRead(json.rows[i].id)}>Mark as read</button>\r\n                                        <button className=\"deleteNotification__button\"><img src={Trash} alt=\"trash\" className=\"notificationTrash__icon\" onClick={()=> deleteNotification(json.rows[i].id)}></img></button>\r\n                                    </div>)\r\n                        }else{\r\n                            notif.push(<div className=\"notification__container\" >\r\n                                        <p className=\"notification__text\">{json.rows[i].text}</p>\r\n                                        <button className=\"markAsReadNotification__button\" style={{marginLeft:\"157px\"}} onClick={()=> markAsUnread(json.rows[i].id)}>Mark as unread</button>\r\n                                        <button className=\"deleteNotification__button\"><img src={Trash} alt=\"trash\" className=\"notificationTrash__icon\" onClick={()=> deleteNotification(json.rows[i].id)}></img></button>\r\n                                    </div>)\r\n                        }\r\n                        \r\n                    }\r\n                    await setEmptyNotifications(null)\r\n                }else{\r\n                    setEmptyNotifications(<div className=\"emptyNotifications__container\">\r\n                        <p className=\"emptyNotifications__text\">No new notifications</p>\r\n                    </div>)\r\n                }\r\n    \r\n                if(alert){\r\n                    setBellImage(<img src={BellActive} alt=\"bellActive\" className=\"notificationBell__icon\"></img>)\r\n                }else{\r\n                    setBellImage(<img src={Bell} alt=\"bell\" className=\"notificationBell__icon\"></img>)\r\n                }\r\n                await setNotifications(notif)\r\n            })\r\n        }, 10000);\r\n        return () => clearInterval(interval);\r\n      }, []);\r\n      \r\n\r\n    let projectBtn, pitButton, spbutton, pitButtonProgress, rightButtons = null\r\n    if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n        if(process.env.REACT_APP_SP === \"1\"){\r\n            if(process.env.REACT_APP_PIT === \"1\"){\r\n            projectBtn = <Button class=\"btn nohover\" disabled style={{marginRight:\"20px\", float:\"right\"}}>\r\n            <i className=\"dropdown__text__projectname\" >{process.env.REACT_APP_APP_NAMEPROJ}</i>\r\n        </Button>\r\n            rightButtons = <div style={{width:\"30%\"}}>\r\n                    \r\n                            \r\n                <button style={{float:\"right\", marginLeft:\"20px\", marginTop:\"4px\", border:\"none\", background:\"none\"}} onClick={()=>setIsMenuOpen(!isMenuOpen)}>{bellImage}</button>\r\n                <Button class=\"btn nohover\" style={{float: \"right\", marginTop:\"4px\"}} classes={{label: classes.label}} onClick={handleClickUser}>\r\n                <i className=\"dropdown__text\">{username}&nbsp;🠗</i>\r\n                </Button>\r\n                \r\n\r\n                {isMenuOpen && (\r\n                    <div className=\"notifications__container\" style={{marginLeft: \"17%\"}}>\r\n                        <div className=\"notificationPanel__header\">\r\n                            <p className=\"notificationHeader__text\">Notifications</p>\r\n                            <button className=\"markAllAsRead__button\" onClick={()=> markAllAsRead()}>Mark all as read</button>            \r\n                        </div>\r\n                        {notifications}\r\n                        {emptyNotifications}\r\n                    </div>\r\n                )}\r\n                \r\n                {projectBtn}\r\n            </div>\r\n            }else{\r\n                projectBtn = <Button class=\"btn nohover\" disabled style={{marginRight:\"20px\", float:\"right\"}}>\r\n            <i className=\"dropdown__text__projectname\" >{process.env.REACT_APP_APP_NAMEPROJ}</i>\r\n        </Button>\r\n            rightButtons = <div style={{width:\"40%\"}}>\r\n                    \r\n                            \r\n                <button style={{float:\"right\", marginLeft:\"20px\", marginTop:\"4px\", border:\"none\", background:\"none\"}} onClick={()=>setIsMenuOpen(!isMenuOpen)}>{bellImage}</button>\r\n                <Button class=\"btn nohover\" style={{float: \"right\", marginTop:\"4px\"}} classes={{label: classes.label}} onClick={handleClickUser}>\r\n                <i className=\"dropdown__text\">{username}&nbsp;🠗</i>\r\n                </Button>\r\n                \r\n\r\n                {isMenuOpen && (\r\n                    <div className=\"notifications__container\" style={{marginLeft: \"26%\"}}>\r\n                        <div className=\"notificationPanel__header\">\r\n                            <p className=\"notificationHeader__text\">Notifications</p>\r\n                            <button className=\"markAllAsRead__button\" onClick={()=> markAllAsRead()}>Mark all as read</button>            \r\n                        </div>\r\n                        {notifications}\r\n                        {emptyNotifications}\r\n                    </div>\r\n                )}\r\n                \r\n                {projectBtn}\r\n            </div>\r\n            }\r\n        }else{\r\n            if(process.env.REACT_APP_PIT === \"1\"){\r\n                projectBtn = <Button class=\"btn nohover\" disabled style={{float:\"right\", marginRight:\"20px\"}}>\r\n                <i className=\"dropdown__text__projectname\" >{process.env.REACT_APP_APP_NAMEPROJ}</i>\r\n            </Button>\r\n                rightButtons= <div style={{width:\"40%\"}}>\r\n                        \r\n                            \r\n                <button style={{float:\"right\", marginLeft:\"20px\", marginTop:\"4px\", border:\"none\", background:\"none\"}} onClick={()=>setIsMenuOpen(!isMenuOpen)}>{bellImage}</button>\r\n                <Button class=\"btn nohover\" style={{float: \"right\", marginTop:\"4px\"}} classes={{label: classes.label}} onClick={handleClickUser}>\r\n                <i className=\"dropdown__text\">{username}&nbsp;🠗</i>\r\n                </Button>\r\n                \r\n\r\n                {isMenuOpen && (\r\n                    <div className=\"notifications__container\" style={{marginLeft: \"27%\"}}>\r\n                        <div className=\"notificationPanel__header\">\r\n                            <p className=\"notificationHeader__text\">Notifications</p>\r\n                            <button className=\"markAllAsRead__button\" onClick={()=> markAllAsRead()}>Mark all as read</button>            \r\n                        </div>\r\n                        {notifications}\r\n                        {emptyNotifications}\r\n                    </div>\r\n                )}\r\n                \r\n                {projectBtn}\r\n            </div>\r\n            }else{\r\n                projectBtn = <Button class=\"btn nohover\" disabled style={{float:\"right\", marginRight:\"20px\"}}>\r\n                <i className=\"dropdown__text__projectname\" >{process.env.REACT_APP_APP_NAMEPROJ}</i>\r\n            </Button>\r\n                rightButtons= <div style={{width:\"48%\"}}>\r\n                        \r\n                            \r\n                <button style={{float:\"right\", marginLeft:\"20px\", marginTop:\"4px\", border:\"none\", background:\"none\"}} onClick={()=>setIsMenuOpen(!isMenuOpen)}>{bellImage}</button>\r\n                <Button class=\"btn nohover\" style={{float: \"right\", marginTop:\"4px\"}} classes={{label: classes.label}} onClick={handleClickUser}>\r\n                <i className=\"dropdown__text\">{username}&nbsp;🠗</i>\r\n                </Button>\r\n                \r\n\r\n                {isMenuOpen && (\r\n                    <div className=\"notifications__container\" style={{marginLeft: \"34%\"}}>\r\n                        <div className=\"notificationPanel__header\">\r\n                            <p className=\"notificationHeader__text\">Notifications</p>\r\n                            <button className=\"markAllAsRead__button\" onClick={()=> markAllAsRead()}>Mark all as read</button>            \r\n                        </div>\r\n                        {notifications}\r\n                        {emptyNotifications}\r\n                    </div>\r\n                )}\r\n                \r\n                {projectBtn}\r\n            </div>\r\n            }\r\n        }\r\n        \r\n        \r\n    }else{\r\n        if(process.env.REACT_APP_SP === \"1\"){\r\n            if(process.env.REACT_APP_PIT === \"1\"){\r\n            projectBtn = <Button classes={{label: classes.label2}} class=\"btn nohover\" disabled style={{float:\"right\", marginRight:\"20px\"}}>\r\n            <i className=\"dropdown__text__projectname\" >{process.env.REACT_APP_APP_NAMEPROJ}</i>\r\n        </Button>\r\n        rightButtons= <div style={{width:\"76%\"}}>\r\n                    \r\n                        \r\n            <button style={{float:\"right\", marginLeft:\"20px\", marginTop:\"4px\", border:\"none\", background:\"none\"}} onClick={()=>setIsMenuOpen(!isMenuOpen)}>{bellImage}</button>\r\n            <Button class=\"btn nohover\" style={{float: \"right\", marginTop:\"4px\"}} classes={{label: classes.label}} onClick={handleClickUser}>\r\n            <i className=\"dropdown__text\">{username}&nbsp;🠗</i>\r\n            </Button>\r\n            \r\n\r\n            {isMenuOpen && (\r\n                <div className=\"notifications__container\" style={{marginLeft: \"62%\"}}>\r\n                    <div className=\"notificationPanel__header\">\r\n                        <p className=\"notificationHeader__text\">Notifications</p>\r\n                        <button className=\"markAllAsRead__button\" onClick={()=> markAllAsRead()}>Mark all as read</button>            \r\n                    </div>\r\n                    {notifications}\r\n                    {emptyNotifications}\r\n                </div>\r\n            )}\r\n            \r\n            {projectBtn}\r\n        </div>\r\n            }else{\r\n                projectBtn = <Button classes={{label: classes.label2}} class=\"btn nohover\" disabled style={{float:\"right\", marginRight:\"20px\"}}>\r\n                <i className=\"dropdown__text__projectname\" >{process.env.REACT_APP_APP_NAMEPROJ}</i>\r\n            </Button>\r\n            rightButtons= <div style={{width:\"82%\"}}>\r\n                        \r\n                            \r\n                <button style={{float:\"right\", marginLeft:\"20px\", marginTop:\"4px\", border:\"none\", background:\"none\"}} onClick={()=>setIsMenuOpen(!isMenuOpen)}>{bellImage}</button>\r\n                <Button class=\"btn nohover\" style={{float: \"right\", marginTop:\"4px\"}} classes={{label: classes.label}} onClick={handleClickUser}>\r\n                <i className=\"dropdown__text\">{username}&nbsp;🠗</i>\r\n                </Button>\r\n                \r\n    \r\n                {isMenuOpen && (\r\n                    <div className=\"notifications__container\" style={{marginLeft: \"68%\"}}>\r\n                        <div className=\"notificationPanel__header\">\r\n                            <p className=\"notificationHeader__text\">Notifications</p>\r\n                            <button className=\"markAllAsRead__button\" onClick={()=> markAllAsRead()}>Mark all as read</button>            \r\n                        </div>\r\n                        {notifications}\r\n                        {emptyNotifications}\r\n                    </div>\r\n                )}\r\n                \r\n                {projectBtn}\r\n                </div>\r\n            }\r\n        \r\n        }else{\r\n            if(process.env.REACT_APP_PIT === \"1\"){\r\n                projectBtn = <Button classes={{label: classes.label2}} class=\"btn nohover\" disabled style={{float:\"right\", marginRight:\"20px\"}}>\r\n                <i className=\"dropdown__text__projectname\" >{process.env.REACT_APP_APP_NAMEPROJ}</i>\r\n                </Button>\r\n                \r\n                \r\n                rightButtons= <div style={{width:\"82%\"}}>\r\n                            \r\n                                \r\n                <button style={{float:\"right\", marginLeft:\"20px\", marginTop:\"4px\", border:\"none\", background:\"none\"}} onClick={()=>setIsMenuOpen(!isMenuOpen)}>{bellImage}</button>\r\n                <Button class=\"btn nohover\" style={{float: \"right\", marginTop:\"4px\"}} classes={{label: classes.label}} onClick={handleClickUser}>\r\n                <i className=\"dropdown__text\">{username}&nbsp;🠗</i>\r\n                </Button>\r\n                \r\n\r\n                {isMenuOpen && (\r\n                    <div className=\"notifications__container\" style={{marginLeft: \"68%\"}}>\r\n                        <div className=\"notificationPanel__header\">\r\n                            <p className=\"notificationHeader__text\">Notifications</p>\r\n                            <button className=\"markAllAsRead__button\" onClick={()=> markAllAsRead()}>Mark all as read</button>            \r\n                        </div>\r\n                        {notifications}\r\n                        {emptyNotifications}\r\n                    </div>\r\n                )}\r\n                \r\n                {projectBtn}\r\n            </div>\r\n            }else{\r\n                projectBtn = <Button classes={{label: classes.label2}} class=\"btn nohover\" disabled style={{float:\"right\", marginRight:\"20px\"}}>\r\n                <i className=\"dropdown__text__projectname\" >{process.env.REACT_APP_APP_NAMEPROJ}</i>\r\n                </Button>\r\n                \r\n                \r\n                rightButtons= <div style={{width:\"90%\"}}>\r\n                            \r\n                                \r\n                <button style={{float:\"right\", marginLeft:\"20px\", marginTop:\"4px\", border:\"none\", background:\"none\"}} onClick={()=>setIsMenuOpen(!isMenuOpen)}>{bellImage}</button>\r\n                <Button class=\"btn nohover\" style={{float: \"right\", marginTop:\"4px\"}} classes={{label: classes.label}} onClick={handleClickUser}>\r\n                <i className=\"dropdown__text\">{username}&nbsp;🠗</i>\r\n                </Button>\r\n                \r\n\r\n                {isMenuOpen && (\r\n                    <div className=\"notifications__container\" style={{marginLeft: \"75%\"}}>\r\n                        <div className=\"notificationPanel__header\">\r\n                            <p className=\"notificationHeader__text\">Notifications</p>\r\n                            <button className=\"markAllAsRead__button\" onClick={()=> markAllAsRead()}>Mark all as read</button>            \r\n                        </div>\r\n                        {notifications}\r\n                        {emptyNotifications}\r\n                    </div>\r\n                )}\r\n                \r\n                {projectBtn}\r\n            </div>\r\n            }\r\n        }\r\n\r\n    }\r\n    let isotrackerBtnNoProgress = null\r\n    if(process.env.REACT_APP_SP === \"1\"){\r\n        if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n            spbutton = <Button class=\"btn nohover\" onClick={handleClickSP} style={{marginRight:\"50px\"}}>\r\n            <i className=\"dropdown__text\" >SPTracker</i>\r\n            </Button>\r\n        }else{\r\n            spbutton = <Button class=\"btn nohover\" onClick={handleClickSP} style={{marginLeft:\"50px\"}}>\r\n            <i className=\"dropdown__text\" >SPTracker</i>\r\n            </Button>\r\n            isotrackerBtnNoProgress = <Button class=\"btn nohover\" onClick={handleClickIsotracker} style={{marginLeft:\"50px\"}}>\r\n                        <i className=\"dropdown__text\" >IsoTracker </i>\r\n            </Button>\r\n        }    \r\n    }\r\n\r\n    if(process.env.REACT_APP_PIT === \"1\"){\r\n        if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n            pitButtonProgress = <Button class=\"btn nohover\" onClick={handleClickPIT} style={{marginRight:\"50px\"}}>\r\n            <i className=\"dropdown__text\" >PITRequests</i>\r\n            </Button>\r\n        }else{\r\n            pitButton = <Button class=\"btn nohover\" onClick={handleClickPIT} style={{marginLeft:\"50px\"}}>\r\n            <i className=\"dropdown__text\" >PITRequests</i>\r\n            </Button>\r\n            isotrackerBtnNoProgress = <Button class=\"btn nohover\" onClick={handleClickIsotracker} style={{marginLeft:\"50px\"}}>\r\n                        <i className=\"dropdown__text\" >IsoTracker </i>\r\n            </Button>\r\n        }    \r\n    }    \r\n\r\n    if(process.env.REACT_APP_PROGRESS === \"0\" && process.env.REACT_APP_SP === \"0\" && process.env.REACT_APP_PIT === \"0\"){\r\n        isotrackerBtnNoProgress = <Button class=\"btn nohover\" onClick={handleClickIsotracker} style={{marginLeft:\"50px\"}}>\r\n        <i className=\"dropdown__text\" >IsoTracker </i>\r\n        </Button>\r\n    }\r\n\r\n    function markAllAsRead(){\r\n        const body = {\r\n            email: secureStorage.getItem(\"user\")\r\n          }\r\n          const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          }\r\n          fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/markAllNotificationsAsRead\", options)\r\n          .then(response => response.json())\r\n          .then(json =>{\r\n              if(json.success){\r\n                setUpdateData(!updateData)\r\n              }\r\n          })\r\n   \r\n    }\r\n\r\n    function markAsRead(id){\r\n        const body = {\r\n            id: id\r\n          }\r\n          const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          }\r\n          fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/markNotificationAsRead\", options)\r\n          .then(response => response.json())\r\n          .then(json =>{\r\n              if(json.success){\r\n                setUpdateData(!updateData)\r\n              }\r\n          })\r\n   \r\n    }\r\n\r\n    function markAsUnread(id){\r\n        const body = {\r\n            id: id\r\n          }\r\n          const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          }\r\n          fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/markNotificationAsUnread\", options)\r\n          .then(response => response.json())\r\n          .then(json =>{\r\n              if(json.success){\r\n                setUpdateData(!updateData)\r\n              }\r\n          })\r\n   \r\n    }\r\n\r\n    function deleteNotification(id){\r\n        const body = {\r\n            id: id\r\n          }\r\n          const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n          }\r\n          fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/deleteNotification\", options)\r\n          .then(response => response.json())\r\n          .then(json =>{\r\n              if(json.success){\r\n                setUpdateData(!updateData)\r\n              }\r\n          })\r\n    }\r\n\r\n\r\n    \r\n    return(\r\n        <div ref={ref}>\r\n        <div className={classes.root}>\r\n            <div>\r\n            <AppBar position=\"fixed\" className=\"navBar__container\" style={{height:\"62px\", borderBottomColor: \"rgb(211, 224, 233)\", borderLeftColor: \"rgb(211, 224, 233)\", bordeRightColor: \"rgb(211, 224, 233)\", borderTopColor: \"rgb(211, 224, 233)\", backgroundColor: \"#383838\"}}>\r\n            \r\n                <Toolbar>\r\n                    \r\n                    {progressButtons}   \r\n                    {isotrackerBtnNoProgress}        \r\n                    {pitButtonProgress}\r\n                    {pitButton}\r\n                    \r\n                    {spbutton}\r\n\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorElUser}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        open={Boolean(anchorElUser)}\r\n                        onClose={handleCloseUser}\r\n                        PaperProps={{\r\n                            style: {\r\n                            left: '50%',\r\n                            transform: 'translateX(+200%)',\r\n                            }\r\n                        }}\r\n                    >\r\n                    <MenuItem style={{fontFamily:\"Quicksand\", fontSize:\"13.33px\"}} onClick={handleChangePassword}>Change password</MenuItem>\r\n                    <MenuItem style={{fontFamily:\"Quicksand\", fontSize:\"13.33px\"}} onClick={handleLogOut}><b>Logout</b></MenuItem>\r\n                    </Menu>\r\n                    {rightButtons}\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}