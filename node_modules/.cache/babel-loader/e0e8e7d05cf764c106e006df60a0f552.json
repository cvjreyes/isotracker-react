{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\forceClaimPopUp\\\\forceClaimPopUp.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-awesome-modal';\nimport \"./forceClaimPopUp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\nexport default class UploadPopUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      users: null\n    };\n    this.id = props.id;\n  }\n\n  async openModal() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://localhost:5000/api/users/\" + secureStorage.getItem(\"tab\"), options).then(response => response.json()).then(json => {\n      this.setState({\n        users: json.usernames\n      });\n    });\n    this.setState({\n      visible: true\n    });\n\n    for (let i = 0; i < this.state.usernames; i++) {\n      document.userSelect.s = new Option(this.state.usernames[i]);\n    }\n  }\n\n  closeModal() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        float: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"Force claim\",\n        className: \"btn btn-sm btn-warning\",\n        style: {\n          marginRight: \"5px\",\n          marginLeft: \"5px\",\n          width: \"110px\",\n          float: \"left\"\n        },\n        onClick: () => this.openModal(),\n        children: \"Force unclaim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), \"                \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          visible: this.state.visible,\n          width: \"650\",\n          height: \"300\",\n          effect: \"fadeInUp\",\n          onClickAway: () => this.closeModal(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popUp__container\",\n            children: /*#__PURE__*/_jsxDEV(\"center\", {\n              className: \"popUp__title\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Select a user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"userSelect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 227\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/forceClaimPopUp/forceClaimPopUp.js"],"names":["React","Component","Modal","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","UploadPopUp","constructor","props","state","visible","users","id","openModal","options","method","headers","fetch","getItem","then","response","json","setState","usernames","i","document","userSelect","s","Option","closeModal","render","float","marginRight","marginLeft","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,uBAAP;;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AACI,MAAMC,aAAa,GAAGD,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAIE,UAAU,GAAG,iBAAjB;AAEA,IAAIC,aAAa,GAAG,IAAIF,aAAJ,CAAkBG,YAAlB,EAAgC;AAChDC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,GAAd,EAAmB;AACrBA,IAAAA,GAAG,GAAGP,QAAQ,CAACQ,MAAT,CAAgBD,GAAhB,EAAqBJ,UAArB,CAAN;AAEA,WAAOI,GAAG,CAACE,QAAJ,EAAP;AACH,GAL+C;AAMhDC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC5BA,IAAAA,IAAI,GAAGX,QAAQ,CAACY,GAAT,CAAaF,OAAb,CAAqBC,IAArB,EAA2BR,UAA3B,CAAP;AAEAQ,IAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,EAAP;AAEA,WAAOE,IAAP;AACH,GAZ+C;AAahDE,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBF,IAAjB,EAAuB;AAC5BA,IAAAA,IAAI,GAAGX,QAAQ,CAACY,GAAT,CAAaC,OAAb,CAAqBF,IAArB,EAA2BR,UAA3B,CAAP;AAEAQ,IAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,CAAcT,QAAQ,CAACc,GAAT,CAAaC,IAA3B,CAAP;AAEA,WAAOJ,IAAP;AACH;AAnB+C,CAAhC,CAApB;AAsBJ,eAAe,MAAMK,WAAN,SAA0BlB,SAA1B,CAAoC;AAC/CmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG,KADD;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIA,SAAKC,EAAL,GAAUJ,KAAK,CAACI,EAAhB;AACH;;AAEc,QAATC,SAAS,GAAG;AACd,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFG,KAAhB;AAMA,UAAMC,KAAK,CAAC,qCAAmCvB,aAAa,CAACwB,OAAd,CAAsB,KAAtB,CAApC,EAAkEJ,OAAlE,CAAL,CACLK,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAE,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVX,QAAAA,KAAK,EAAEU,IAAI,CAACE;AADF,OAAd;AAGH,KANK,CAAN;AAOA,SAAKD,QAAL,CAAc;AACVZ,MAAAA,OAAO,EAAG;AADA,KAAd;;AAIA,SAAI,IAAIc,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKf,KAAL,CAAWc,SAA9B,EAAyCC,CAAC,EAA1C,EAA6C;AACzCC,MAAAA,QAAQ,CAACC,UAAT,CAAoBC,CAApB,GAAwB,IAAIC,MAAJ,CAAW,KAAKnB,KAAL,CAAWc,SAAX,CAAqBC,CAArB,CAAX,CAAxB;AACH;AACJ;;AAEDK,EAAAA,UAAU,GAAG;AACT,SAAKP,QAAL,CAAc;AACVZ,MAAAA,OAAO,EAAG;AADA,KAAd;AAGH;;AAEDoB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAS,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAhB;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAC,aAAd;AAA4B,QAAA,SAAS,EAAC,wBAAtC;AAA+D,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAC,KAAb;AAAoBC,UAAAA,UAAU,EAAC,KAA/B;AAAsCC,UAAAA,KAAK,EAAC,OAA5C;AAAqDH,UAAAA,KAAK,EAAE;AAA5D,SAAtE;AAA2I,QAAA,OAAO,EAAE,MAAM,KAAKlB,SAAL,EAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,mCACsN;AAAA,+BAC9M,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,OAA3B;AAAoC,UAAA,KAAK,EAAC,KAA1C;AAAgD,UAAA,MAAM,EAAC,KAAvD;AAA6D,UAAA,MAAM,EAAC,UAApE;AAA+E,UAAA,WAAW,EAAE,MAAM,KAAKmB,UAAL,EAAlG;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAA,qCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,mCACI;AAAQ,cAAA,EAAE,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAD8M;AAAA;AAAA;AAAA;AAAA,cADtN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAxD8C","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport \"./forceClaimPopUp.css\"\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nexport default class UploadPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false,\r\n            users: null\r\n        }\r\n        this.id = props.id;\r\n    }\r\n\r\n    async openModal() {  \r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        await fetch(\"http://localhost:5000/api/users/\"+secureStorage.getItem(\"tab\"), options)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            this.setState({\r\n                users: json.usernames\r\n            })\r\n        })    \r\n        this.setState({\r\n            visible : true,\r\n        });\r\n\r\n        for(let i = 0; i < this.state.usernames; i++){\r\n            document.userSelect.s = new Option(this.state.usernames[i])\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            visible : false,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section style={{float:\"left\"}}>\r\n                <button value=\"Force claim\" className=\"btn btn-sm btn-warning\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\", float: \"left\"}} onClick={() => this.openModal()}>Force unclaim</button>                <div>\r\n                    <Modal visible={this.state.visible} width=\"650\" height=\"300\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                        <div className=\"popUp__container\" >\r\n                            <center className=\"popUp__title\"><h1>Select a user</h1></center>          \r\n                        </div>\r\n                        <center>\r\n                            <select id=\"userSelect\">\r\n\r\n                            </select>\r\n                        </center>\r\n                    </Modal>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}