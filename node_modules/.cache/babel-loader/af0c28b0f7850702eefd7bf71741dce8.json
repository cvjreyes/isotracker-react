{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\CSPTrackerDesignRequestsDataTable\\\\CSPTrackerDesignRequestsDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\n\nclass CSPTrackerdDesignRequestsDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: []\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }, this),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id.props.children);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }); //this.setState({ selectedRows: selectedRows });\n\n      this.props.onChange(ids);\n    };\n  }\n\n  async markAsRead(sptag) {\n    const body = {\n      sptag: sptag,\n      user: secureStorage.getItem(\"user\")\n    };\n    const options = {\n      method: \"POst\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/designMarkAsRead\", options).then(response => response.json()).then(json => {\n      this.props.updateDataMethod();\n    });\n  }\n\n  async markAsUnread(sptag) {\n    const body = {\n      sptag: sptag,\n      user: secureStorage.getItem(\"user\")\n    };\n    const options = {\n      method: \"POst\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/designMarkAsUnread\", options).then(response => response.json()).then(json => {\n      this.props.updateDataMethod();\n    });\n  }\n\n  async deleteNotification(sptag) {\n    const body = {\n      sptag: sptag,\n      user: secureStorage.getItem(\"user\")\n    };\n    const options = {\n      method: \"POst\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/deleteDesignNotification\", options).then(response => response.json()).then(json => {\n      this.props.updateDataMethod();\n    });\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptrackerDesignRequests/\" + secureStorage.getItem(\"user\"), options).then(response => response.json()).then(async json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          key: i,\n          tag: json.rows[i].tag,\n          pid: json.rows[i].pid,\n          sptag: json.rows[i].sptag\n        };\n\n        if (json.rows[i].read === 0) {\n          row.actions = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request__buttons__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"read__button btn-info\",\n              onClick: () => this.markAsRead(json.rows[i].sptag),\n              children: \"Mark as read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete__button btn-danger\",\n              onClick: () => this.deleteNotification(json.rows[i].sptag),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 39\n          }, this);\n          row[\"color\"] = \"#ddd\";\n        } else if (json.rows[i].read === 1) {\n          row.actions = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request__buttons__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"unread__button btn-info\",\n              onClick: () => this.markAsUnread(json.rows[i].sptag),\n              children: \"Mark as unread\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete__button btn-danger\",\n              onClick: () => this.deleteNotification(json.rows[i].sptag),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 39\n          }, this);\n          row[\"color\"] = \"#www\";\n        }\n\n        if (json.rows[i].state === 1) {\n          row.state = \"ACCEPTED\";\n        } else {\n          row.state = \"REJECTED\";\n        }\n\n        rows.push(row);\n      }\n\n      await this.setState({\n        data: rows\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptrackerDesignRequests/\" + secureStorage.getItem(\"user\"), options).then(response => response.json()).then(async json => {\n        var rows = [];\n        var row = null;\n\n        for (let i = 0; i < json.rows.length; i++) {\n          row = {\n            key: i,\n            tag: json.rows[i].tag,\n            pid: json.rows[i].pid,\n            sptag: json.rows[i].sptag\n          };\n\n          if (json.rows[i].read === 0) {\n            row.actions = /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"request__buttons__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"read__button btn-info\",\n                onClick: () => this.markAsRead(json.rows[i].sptag),\n                children: \"Mark as read\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete__button btn-danger\",\n                onClick: () => this.deleteNotification(json.rows[i].sptag),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 39\n            }, this);\n            row[\"color\"] = \"#ddd\";\n          } else if (json.rows[i].read === 1) {\n            row.actions = /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"request__buttons__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"unread__button btn-info\",\n                onClick: () => this.markAsUnread(json.rows[i].sptag),\n                children: \"Mark as unread\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete__button btn-danger\",\n                onClick: () => this.deleteNotification(json.rows[i].sptag),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 39\n            }, this);\n            row[\"color\"] = \"#www\";\n          }\n\n          if (json.rows[i].state === 1) {\n            row.state = \"ACCEPTED\";\n          } else {\n            row.state = \"REJECTED\";\n          }\n\n          rows.push(row);\n          console.log(row);\n        }\n\n        await this.setState({\n          data: rows\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"TAG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'tag',\n      key: 'tag',\n      ...this.getColumnSearchProps('tag'),\n      sorter: {\n        compare: (a, b) => a.tag.localeCompare(b.tag)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"P&ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'pid',\n      key: 'pid',\n      ...this.getColumnSearchProps('pid'),\n      sorter: {\n        compare: (a, b) => a.pid.localeCompare(b.pid)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"SP TAG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'sptag',\n      key: 'sptag',\n      ...this.getColumnSearchProps('sptag'),\n      sorter: {\n        compare: (a, b) => a.sptag - b.sptag\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"STATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'state',\n      key: 'state',\n      ...this.getColumnSearchProps('state'),\n      sorter: {\n        compare: (a, b) => a.state - b.state\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"ACTIONS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'actions',\n      key: 'actions',\n      ...this.getColumnSearchProps('actions'),\n      sorter: {\n        compare: (a, b) => a.actions.localeCompare(b.actions)\n      },\n      width: \"800px\"\n    }];\n    var totalElements = null;\n\n    if (this.state.data.length === 0) {\n      totalElements = null;\n    } else {\n      totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"estimatedDataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.data,\n          pagination: {\n            pageSize: this.props.pagination\n          },\n          size: \"small\",\n          rowClassName: record => record.color.replace('#', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CSPTrackerdDesignRequestsDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/CSPTrackerDesignRequestsDataTable/CSPTrackerDesignRequestsDataTable.js"],"names":["React","Table","Input","Button","Space","SearchOutlined","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","CSPTrackerdDesignRequestsDataTable","Component","state","searchText","searchedColumn","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","onSelectChange","selectedRowKeys","ids","i","length","push","id","children","onChange","markAsRead","sptag","body","user","getItem","options","method","headers","JSON","stringify","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","updateDataMethod","markAsUnread","deleteNotification","componentDidMount","rows","row","tag","pid","read","actions","catch","error","console","log","componentDidUpdate","prevProps","prevState","columns","title","sorter","compare","a","b","localeCompare","totalElements","position","bottom","left","pageSize","pagination","replace"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass CSPTrackerdDesignRequestsDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: []\r\n  };\r\n\r\n  async markAsRead(sptag){\r\n    const body = {\r\n      sptag: sptag,\r\n      user: secureStorage.getItem(\"user\")\r\n    }\r\n    const options = {\r\n      method: \"POst\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/designMarkAsRead\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n      this.props.updateDataMethod()\r\n    })\r\n\r\n  }\r\n\r\n  async markAsUnread(sptag){\r\n    const body = {\r\n      sptag: sptag,\r\n      user: secureStorage.getItem(\"user\")\r\n    }\r\n    const options = {\r\n      method: \"POst\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/designMarkAsUnread\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n      this.props.updateDataMethod()\r\n    })\r\n  }\r\n\r\n  async deleteNotification(sptag){\r\n    const body = {\r\n      sptag: sptag,\r\n      user: secureStorage.getItem(\"user\")\r\n    }\r\n    const options = {\r\n      method: \"POst\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/deleteDesignNotification\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n      this.props.updateDataMethod()\r\n    })\r\n  }\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptrackerDesignRequests/\"+ secureStorage.getItem(\"user\"), options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                var rows = []\r\n                var row = null\r\n                for(let i = 0; i < json.rows.length; i++){\r\n                    row = {key:i, tag: json.rows[i].tag, pid: json.rows[i].pid, sptag: json.rows[i].sptag}\r\n                    if(json.rows[i].read === 0){\r\n                        row.actions = <div className=\"request__buttons__container\">\r\n                            <button className=\"read__button btn-info\" onClick={()=>this.markAsRead(json.rows[i].sptag)}>Mark as read</button>\r\n                            <button className=\"delete__button btn-danger\" onClick={()=>this.deleteNotification(json.rows[i].sptag)}>X</button>\r\n                        </div>\r\n                        row[\"color\"] = \"#ddd\"\r\n                    }else if(json.rows[i].read === 1){\r\n                        row.actions = <div className=\"request__buttons__container\">\r\n                          <button className=\"unread__button btn-info\" onClick={()=>this.markAsUnread(json.rows[i].sptag)}>Mark as unread</button>\r\n                          <button className=\"delete__button btn-danger\" onClick={()=>this.deleteNotification(json.rows[i].sptag)}>X</button>\r\n                        </div>\r\n                        row[\"color\"] = \"#www\"\r\n                    }\r\n\r\n                    if(json.rows[i].state === 1){\r\n                        row.state = \"ACCEPTED\"\r\n                    }else{\r\n                        row.state = \"REJECTED\"\r\n                    }\r\n                    rows.push(row)\r\n                }\r\n                await this.setState({data: rows})\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })   \r\n            \r\n\r\n  }\r\n\r\n\r\n  async componentDidUpdate(prevProps, prevState){\r\n\r\n    \r\n    if(prevProps !== this.props){\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptrackerDesignRequests/\"+ secureStorage.getItem(\"user\"), options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                var rows = []\r\n                var row = null\r\n                for(let i = 0; i < json.rows.length; i++){\r\n                    row = {key:i, tag: json.rows[i].tag, pid: json.rows[i].pid, sptag: json.rows[i].sptag}\r\n                    if(json.rows[i].read === 0){\r\n                        row.actions = <div className=\"request__buttons__container\">\r\n                            <button className=\"read__button btn-info\" onClick={()=>this.markAsRead(json.rows[i].sptag)}>Mark as read</button>\r\n                            <button className=\"delete__button btn-danger\" onClick={()=>this.deleteNotification(json.rows[i].sptag)}>X</button>\r\n                        </div>\r\n                        row[\"color\"] = \"#ddd\"\r\n                    }else if(json.rows[i].read === 1){\r\n                        row.actions = <div className=\"request__buttons__container\">\r\n                          <button className=\"unread__button btn-info\" onClick={()=>this.markAsUnread(json.rows[i].sptag)}>Mark as unread</button>\r\n                          <button className=\"delete__button btn-danger\" onClick={()=>this.deleteNotification(json.rows[i].sptag)}>X</button>\r\n                        </div>\r\n                        row[\"color\"] = \"#www\"\r\n                    }\r\n\r\n                    if(json.rows[i].state === 1){\r\n                        row.state = \"ACCEPTED\"\r\n                    }else{\r\n                        row.state = \"REJECTED\"\r\n                    }\r\n\r\n                    rows.push(row)\r\n                    console.log(row)\r\n                }\r\n                await this.setState({data: rows})\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })   \r\n                    \r\n        }\r\n\r\n  }\r\n  \r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n\r\n\r\n      \r\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n          \r\n\r\n\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">TAG</center>,\r\n        dataIndex: 'tag',\r\n        key: 'tag',\r\n        ...this.getColumnSearchProps('tag'),\r\n        sorter:{\r\n          compare: (a, b) => a.tag.localeCompare(b.tag),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">P&ID</center>,\r\n        dataIndex: 'pid',\r\n        key: 'pid',\r\n        ...this.getColumnSearchProps('pid'),\r\n        sorter:{\r\n          compare: (a, b) => a.pid.localeCompare(b.pid),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">SP TAG</div>,\r\n        dataIndex: 'sptag',\r\n        key: 'sptag',\r\n        ...this.getColumnSearchProps('sptag'),\r\n        sorter: {\r\n            compare: (a, b) => a.sptag - b.sptag,\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">STATE</div>,\r\n        dataIndex: 'state',\r\n        key: 'state',\r\n        ...this.getColumnSearchProps('state'),\r\n        sorter: {\r\n            compare: (a, b) => a.state - b.state,\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">ACTIONS</center>,\r\n        dataIndex: 'actions',\r\n        key: 'actions',\r\n        ...this.getColumnSearchProps('actions'),\r\n        sorter:{\r\n          compare: (a, b) => a.actions.localeCompare(b.actions),\r\n        },\r\n        width: \"800px\"\r\n      },\r\n    ]\r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"estimatedDataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} columns={columns} dataSource={this.state.data} pagination={{ pageSize: this.props.pagination  }} size=\"small\"\r\n         rowClassName= {(record) => record.color.replace('#', '')}/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CSPTrackerdDesignRequestsDataTable;"]},"metadata":{},"sourceType":"module"}