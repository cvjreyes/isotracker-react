{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _assertThisInitialized from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _createForOfIteratorHelper from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*!\r\n * Chart.js v3.7.1\r\n * https://www.chartjs.org\r\n * (c) 2022 Chart.js Contributors\r\n * Released under the MIT License\r\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as _getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n\n      if (this._request) {\n        return;\n      }\n\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n\n        _this._request = null;\n\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          _this2._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          _this2._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      this._lastDate = date;\n\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      var items = anims.items;\n      var i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n\n  return Animator;\n}();\n\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n\n    var c1 = c0.valid && _color(to || transparent);\n\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n\n      if (!this._active) {\n        this._target[prop] = to;\n\n        this._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n\n  return Animation;\n}();\n\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\n\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        var resolved = {};\n\n        var _iterator = _createForOfIteratorHelper(animationOptions),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      var animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      var animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n\n  return Animations;\n}();\n\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  var options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  var t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  var i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\n\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n      min = _scale$getUserBounds.min,\n      max = _scale$getUserBounds.max,\n      minDefined = _scale$getUserBounds.minDefined,\n      maxDefined = _scale$getUserBounds.maxDefined;\n\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator2 = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n      meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n      vScale = meta.vScale,\n      datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var index = item[iAxis],\n        value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  var _iterator3 = _createForOfIteratorHelper(items),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\n\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\n\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\n\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n\n      this._dataCheck();\n\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n\n      this._dataCheck();\n\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      this._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n          data = this._data;\n      var iScale = meta.iScale,\n          _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n          _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n          xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n          _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n          yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n\n      var otherScale = this._getOtherScale(scale);\n\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n\n      var _getUserBounds = getUserBounds(otherScale),\n          otherMin = _getUserBounds.min,\n          otherMax = _getUserBounds.max;\n\n      var i, parsed;\n\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n\n        if (element.hidden) {\n          continue;\n        }\n\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n\n      var context = function context() {\n        return _this3.getContext(index, active);\n      };\n\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      var options;\n\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n\n      var animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n\n      var _iterator4 = _createForOfIteratorHelper(this._syncList),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 3),\n              method = _step4$value[0],\n              arg1 = _step4$value[1],\n              arg2 = _step4$value[2];\n\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n\n      if (count) {\n        this.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n\n      var move = function move(arr) {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n\n      this.parse(start, count);\n\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n            method = _args2[0],\n            arg1 = _args2[1],\n            arg2 = _args2[2];\n\n        this[method](arg1, arg2);\n      }\n\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n\n      var newCount = arguments.length - 2;\n\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n\n  return DatasetController;\n}();\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  var _borderProps = borderProps(properties),\n      start = _borderProps.start,\n      end = _borderProps.end,\n      reverse = _borderProps.reverse,\n      top = _borderProps.top,\n      bottom = _borderProps.bottom;\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n\n  var _super = _createSuper(BarController);\n\n  function BarController() {\n    _classCallCheck(this, BarController);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n          _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n          xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n          _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n          yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n\n      var custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n          vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n\n      var ruler = this._getRuler();\n\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n\n        if (item.index === last) {\n          break;\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n          vScale = _this$_cachedMeta.vScale,\n          _stacked = _this$_cachedMeta._stacked,\n          _this$options = this.options,\n          baseValue = _this$options.base,\n          minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n\n        head = base + size;\n      }\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n\n  return BarController;\n}(DatasetController);\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n\n  var _super2 = _createSuper(BubbleController);\n\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n          iScale = _this$_cachedMeta2.iScale,\n          vScale = _this$_cachedMeta2.vScale;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        this.updateElement(point, i, properties, mode);\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      var radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n\n  return BubbleController;\n}(DatasetController);\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\n\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n\n  var _super3 = _createSuper(DoughnutController);\n\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n\n    _classCallCheck(this, DoughnutController);\n\n    _this4 = _super3.call(this, chart, datasetIndex);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n              key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n\n        var i, ilen;\n\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n\n          var rotation = controller._getRotation();\n\n          var circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n      var chartWeight = this._getRingWeight(this.index);\n\n      var _this$_getRotationExt = this._getRotationExtents(),\n          circumference = _this$_getRotationExt.circumference,\n          rotation = _this$_getRotationExt.rotation;\n\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n          ratioX = _getRatioAndOffset.ratioX,\n          ratioY = _getRatioAndOffset.ratioY,\n          offsetX = _getRatioAndOffset.offsetX,\n          offsetY = _getRatioAndOffset.offsetY;\n\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n\n      var circumference = this._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n\n      var startAngle = this._getRotation();\n\n      var i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n\n  return DoughnutController;\n}(DatasetController);\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n\n  var _super4 = _createSuper(LineController);\n\n  function LineController() {\n    _classCallCheck(this, LineController);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n          _meta$data = meta.data,\n          points = _meta$data === void 0 ? [] : _meta$data,\n          _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi.start,\n          count = _getStartAndCountOfVi.count;\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n          iScale = _this$_cachedMeta3.iScale,\n          vScale = _this$_cachedMeta3.vScale,\n          _stacked = _this$_cachedMeta3._stacked,\n          _dataset = _this$_cachedMeta3._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n          spanGaps = _this$options2.spanGaps,\n          segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n\n  return LineController;\n}(DatasetController);\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n        _parsed = meta._parsed;\n    var axis = iScale.axis;\n\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n        min = _iScale$getUserBounds.min,\n        max = _iScale$getUserBounds.max,\n        minDefined = _iScale$getUserBounds.minDefined,\n        maxDefined = _iScale$getUserBounds.maxDefined;\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n      yScale = meta.yScale,\n      _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n\n  var _super5 = _createSuper(PolarAreaController);\n\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n\n    _classCallCheck(this, PolarAreaController);\n\n    _this5 = _super5.call(this, chart, datasetIndex);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var dataset = this.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this6 = this;\n\n      var dataset = this.getDataset();\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(dataset.data[index]) && _this6.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n\n  return PolarAreaController;\n}(DatasetController);\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n\n  var _super6 = _createSuper(PieController);\n\n  function PieController() {\n    _classCallCheck(this, PieController);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return PieController;\n}(DoughnutController);\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n\n  var _super7 = _createSuper(RadarController);\n\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var dataset = this.getDataset();\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n\n  return RadarController;\n}(DatasetController);\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nvar ScatterController = /*#__PURE__*/function (_LineController) {\n  _inherits(ScatterController, _LineController);\n\n  var _super8 = _createSuper(ScatterController);\n\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n\n    return _super8.apply(this, arguments);\n  }\n\n  return ScatterController;\n}(LineController);\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n\n    this.options = options || {};\n  }\n\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n\n  return DateAdapter;\n}();\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var index, data, element;\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i];\n    index = _metasets$i.index;\n    data = _metasets$i.data;\n\n    for (var j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n      data = metaset.data,\n      _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i2 = metasets[i],\n        index = _metasets$i2.index,\n        data = _metasets$i2.data;\n\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n        lo = _binarySearch.lo,\n        hi = _binarySearch.hi;\n\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n        startAngle = _element$getProps.startAngle,\n        endAngle = _element$getProps.endAngle;\n\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    }),\n        angle = _getAngleFromPoint.angle;\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    var center = element.getCenterPoint(useFinalPosition);\n\n    var pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  var position = getRelativePosition(e, chart);\n  var items = [];\n  var axis = options.axis;\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateAllVisibleItems(chart, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      var elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {\n        axis: 'x',\n        intersect: options.intersect\n      }, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {\n        axis: 'y',\n        intersect: options.intersect\n      }, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  var stacks = {};\n\n  var _iterator5 = _createForOfIteratorHelper(layouts),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n          pos = wrap.pos,\n          stackWeight = wrap.stackWeight;\n\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n      hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n      box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n        same = _updateDims.same,\n        other = _updateDims.other;\n\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n      y = chartArea.y;\n\n  var _iterator6 = _createForOfIteratorHelper(boxes),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n\n        var _width = stack.size || box.width;\n\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\n\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n\n  return BasePlatform;\n}();\n\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n\n  var _super9 = _createSuper(BasicPlatform);\n\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n\n  return BasicPlatform;\n}(BasePlatform);\n\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\n\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n\n  var _getRelativePosition$ = getRelativePosition$1(event, chart),\n      x = _getRelativePosition$.x,\n      y = _getRelativePosition$.y;\n\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator7 = _createForOfIteratorHelper(nodeList),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var node = _step7.value;\n\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n\n    var _iterator8 = _createForOfIteratorHelper(entries),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n\n    var _iterator9 = _createForOfIteratorHelper(entries),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n\n  var _super10 = _createSuper(DomPlatform);\n\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n\n    return _super10.apply(this, arguments);\n  }\n\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n\n      return !!(container && container.isConnected);\n    }\n  }]);\n\n  return DomPlatform;\n}(BasePlatform);\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this7 = this;\n\n      var anims = this.$animations;\n\n      if (!final || !anims) {\n        return this;\n      }\n\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this7[prop];\n      });\n      return ret;\n    }\n  }]);\n\n  return Element;\n}();\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\n\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n\n  var tickLength = scale._tickSize();\n\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  var factors = _factorize(evenMajorSpacing);\n\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\n\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\n\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n      left = scale.left,\n      bottom = scale.bottom,\n      right = scale.right,\n      chart = scale.chart;\n  var chartArea = chart.chartArea,\n      scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\n\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n\n  var _super11 = _createSuper(Scale);\n\n  function Scale(cfg) {\n    var _this8;\n\n    _classCallCheck(this, Scale);\n\n    _this8 = _super11.call(this);\n    _this8.id = cfg.id;\n    _this8.type = cfg.type;\n    _this8.options = undefined;\n    _this8.ctx = cfg.ctx;\n    _this8.chart = cfg.chart;\n    _this8.top = undefined;\n    _this8.bottom = undefined;\n    _this8.left = undefined;\n    _this8.right = undefined;\n    _this8.width = undefined;\n    _this8.height = undefined;\n    _this8._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this8.maxWidth = undefined;\n    _this8.maxHeight = undefined;\n    _this8.paddingTop = undefined;\n    _this8.paddingBottom = undefined;\n    _this8.paddingLeft = undefined;\n    _this8.paddingRight = undefined;\n    _this8.axis = undefined;\n    _this8.labelRotation = undefined;\n    _this8.min = undefined;\n    _this8.max = undefined;\n    _this8._range = undefined;\n    _this8.ticks = [];\n    _this8._gridLineItems = null;\n    _this8._labelItems = null;\n    _this8._labelSizes = null;\n    _this8._length = 0;\n    _this8._maxLength = 0;\n    _this8._longestTextCache = {};\n    _this8._startPixel = undefined;\n    _this8._endPixel = undefined;\n    _this8._reversePixels = false;\n    _this8._userMax = undefined;\n    _this8._userMin = undefined;\n    _this8._suggestedMax = undefined;\n    _this8._suggestedMin = undefined;\n    _this8._ticksLength = 0;\n    _this8._borderValue = 0;\n    _this8._cache = {};\n    _this8._dataLimitsCached = false;\n    _this8.$context = undefined;\n    return _this8;\n  }\n\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n          _userMax = this._userMax,\n          _suggestedMin = this._suggestedMin,\n          _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n          min = _this$getUserBounds.min,\n          max = _this$getUserBounds.max,\n          minDefined = _this$getUserBounds.minDefined,\n          maxDefined = _this$getUserBounds.maxDefined;\n\n      var range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options3 = this.options,\n          beginAtZero = _this$options3.beginAtZero,\n          grace = _this$options3.grace,\n          tickOpts = _this$options3.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n      }\n\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = this.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n          _this$options4 = this.options,\n          tickOpts = _this$options4.ticks,\n          titleOpts = _this$options4.title,\n          gridOpts = _this$options4.grid;\n\n      var display = this._isVisible();\n\n      var isHorizontal = this.isHorizontal();\n\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n              first = _this$_getLabelSizes.first,\n              last = _this$_getLabelSizes.last,\n              widest = _this$_getLabelSizes.widest,\n              highest = _this$_getLabelSizes.highest;\n\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      this._handleMargins();\n\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options5 = this.options,\n          _this$options5$ticks = _this$options5.ticks,\n          align = _this$options5$ticks.align,\n          padding = _this$options5$ticks.padding,\n          position = _this$options5.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options6 = this.options,\n          axis = _this$options6.axis,\n          position = _this$options6.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n          caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n          max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n\n      var labelSizes = this._getLabelSizes();\n\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n          position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(this.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n          optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n          crossAlign = optionTicks.crossAlign,\n          padding = optionTicks.padding,\n          mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        var backdrop = void 0;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n          }\n\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options7 = this.options,\n          position = _this$options7.position,\n          ticks = _this$options7.ticks;\n      var rotation = -toRadians(this.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      var align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options8 = this.options,\n          position = _this$options8.position,\n          _this$options8$ticks = _this$options8.ticks,\n          crossAlign = _this$options8$ticks.crossAlign,\n          mirror = _this$options8$ticks.mirror,\n          padding = _this$options8$ticks.padding;\n\n      var labelSizes = this._getLabelSizes();\n\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n\n      var chart = this.chart;\n      var position = this.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n          backgroundColor = this.options.backgroundColor,\n          left = this.left,\n          top = this.top,\n          width = this.width,\n          height = this.height;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n      var i, ilen;\n\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n          ctx = this.ctx,\n          grid = this.options.grid;\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      var ctx = this.ctx;\n\n      var area = this._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n      var i, ilen;\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n          _this$options9 = this.options,\n          position = _this$options9.position,\n          title = _this$options9.title,\n          reverse = _this$options9.reverse;\n\n      if (!title.display) {\n        return;\n      }\n\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      var _titleArgs = titleArgs(this, offset, position, align),\n          titleX = _titleArgs.titleX,\n          titleY = _titleArgs.titleY,\n          maxWidth = _titleArgs.maxWidth,\n          rotation = _titleArgs.rotation;\n\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this9 = this;\n\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this9.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this9.drawBackground();\n\n          _this9.drawGrid(chartArea);\n\n          _this9.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          _this9.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this9.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n\n  return Scale;\n}(Element);\n\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n\n  return TypedRegistry;\n}();\n\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this10 = this;\n\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this10._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === _this10.plugins && arg.id) {\n          _this10._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this10._getRegistryForType(item);\n\n            _this10._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n  }]);\n\n  return Registry;\n}();\n\nvar registry = new Registry();\n\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n\n    this._init = [];\n  }\n\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n\n        this._notify(this._init, chart, 'install');\n      }\n\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n      var result = this._notify(descriptors, chart, hook, args);\n\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n\n        this._notify(this._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n\n      var _iterator10 = _createForOfIteratorHelper(descriptors),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var descriptor = _step10.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      var descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n\n  return PluginService;\n}();\n\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  var local = config.plugins || [];\n\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nvar keyCache = new Map();\nvar keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n\n      var cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n          type = this.type;\n\n      var cache = this._cachedScopes(mainScope, resetCache);\n\n      var cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n          type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver.resolver,\n          subPrefixes = _getResolver.subPrefixes;\n\n      var options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      var _iterator11 = _createForOfIteratorHelper(names),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var prop = _step11.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver2.resolver;\n\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n\n  return Config;\n}();\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\n\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n      isScriptable = _descriptors2.isScriptable,\n      isIndexable = _descriptors2.isIndexable;\n\n  var _iterator12 = _createForOfIteratorHelper(names),\n      _step12;\n\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var prop = _step12.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n\n  return false;\n}\n\nvar version = \"3.7.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nvar instances = {};\n\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n\n  for (var _i2 = 0, _keys = keys; _i2 < _keys.length; _i2++) {\n    var key = _keys[_i2];\n    var intKey = +key;\n\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this11 = this;\n\n    _classCallCheck(this, Chart);\n\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this11.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options10 = this.options,\n          aspectRatio = _this$options10.aspectRatio,\n          maintainAspectRatio = _this$options10.maintainAspectRatio,\n          width = this.width,\n          height = this.height,\n          _aspectRatio = this._aspectRatio;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this12 = this;\n\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this12.ctx,\n            chart: _this12\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this12, scale, scale.options);\n        layouts.addBox(_this12, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this13 = this;\n\n      var metasets = this._metasets,\n          datasets = this.data.datasets;\n\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this13._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n\n      this._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n\n          meta = this.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n              datasetElementType = _defaults$datasets$ty.datasetElementType,\n              dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      this._updateMetasets();\n\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this14 = this;\n\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this14.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n\n      this._updateScales();\n\n      this._checkEventBindings();\n\n      this._updateHiddenIndices();\n\n      this._plugins.invalidate();\n\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n            controller = _this$getDatasetMeta.controller;\n\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n      this._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      this._updateDatasets(mode);\n\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n\n      this._layers.sort(compare2Level('z', '_idx'));\n\n      var _active = this._active,\n          _lastEvent = this._lastEvent;\n\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this15 = this;\n\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this15, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n\n      var _iterator13 = _createForOfIteratorHelper(changes),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var _step13$value = _step13.value,\n              method = _step13$value.method,\n              start = _step13$value.start,\n              count = _step13$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n\n      var changeSet = makeSet(0);\n\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this16 = this;\n\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this16$_layers;\n\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        (_this16$_layers = _this16._layers).push.apply(_this16$_layers, _toConsumableArray(box._layers()));\n      }, this);\n\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n\n      for (var _i3 = 0, _ilen = this.data.datasets.length; _i3 < _ilen; ++_i3) {\n        this._updateDataset(_i3, isFunction(mode) ? mode({\n          datasetIndex: _i3\n        }) : mode);\n      }\n\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n            width = _this$_resizeBeforeDr.width,\n            height = _this$_resizeBeforeDr.height;\n\n        this._resize(width, height);\n\n        this._resizeBeforeDraw = null;\n      }\n\n      this.clear();\n\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var layers = this._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var metasets = this.getSortedVisibleDatasetMetas();\n\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n\n      meta.controller.draw();\n\n      if (useClip) {\n        unclipArea(ctx);\n      }\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n          ctx = this.ctx;\n\n      this._stop();\n\n      this.config.clearCache();\n\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this17 = this;\n\n      var listeners = this._listeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this17, type, listener);\n        listeners[type] = listener;\n      };\n\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        _this17._eventHandler(e);\n      };\n\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this18 = this;\n\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this18, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      var listener = function listener(width, height) {\n        if (_this18.canvas) {\n          _this18.resize(width, height);\n        }\n      };\n\n      var detached;\n\n      var attached = function attached() {\n        _remove('attach', attached);\n\n        _this18.attached = true;\n\n        _this18.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = function detached() {\n        _this18.attached = false;\n\n        _remove('resize', listener);\n\n        _this18._stop();\n\n        _this18._resize(0, 0);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this19 = this;\n\n      each(this._listeners, function (listener, type) {\n        _this19.platform.removeEventListener(_this19, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this19.platform.removeEventListener(_this19, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this20 = this;\n\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref2) {\n        var datasetIndex = _ref2.datasetIndex,\n            index = _ref2.index;\n\n        var meta = _this20.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this21 = this;\n\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n      };\n\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this21.options.events).includes(e.native.type);\n      };\n\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        this.render();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n          lastActive = _this$_active === void 0 ? [] : _this$_active,\n          options = this.options;\n      var useFinalPosition = replay;\n\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n      var isClick = _isClickEvent(e);\n\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        this._active = active;\n\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }]);\n\n  return Chart;\n}();\n\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\n\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      x = element.x,\n      y = element.y,\n      outerRadius = element.outerRadius,\n      innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  var x = element.x,\n      y = element.y,\n      start = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n      outerStart = _parseBorderRadius$.outerStart,\n      outerEnd = _parseBorderRadius$.outerEnd,\n      innerStart = _parseBorderRadius$.innerStart,\n      innerEnd = _parseBorderRadius$.innerEnd;\n\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference;\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n      y = element.y,\n      startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  var options = element.options;\n  var borderWidth = options.borderWidth,\n      borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n\n  var _super12 = _createSuper(ArcElement);\n\n  function ArcElement(cfg) {\n    var _this22;\n\n    _classCallCheck(this, ArcElement);\n\n    _this22 = _super12.call(this);\n    _this22.options = undefined;\n    _this22.circumference = undefined;\n    _this22.startAngle = undefined;\n    _this22.endAngle = undefined;\n    _this22.innerRadius = undefined;\n    _this22.outerRadius = undefined;\n    _this22.pixelMargin = 0;\n    _this22.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this22), cfg);\n    }\n\n    return _this22;\n  }\n\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      }),\n          angle = _getAngleFromPoint2.angle,\n          distance = _getAngleFromPoint2.distance;\n\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          startAngle = _this$getProps2.startAngle,\n          endAngle = _this$getProps2.endAngle,\n          innerRadius = _this$getProps2.innerRadius,\n          outerRadius = _this$getProps2.outerRadius,\n          circumference = _this$getProps2.circumference;\n\n      var rAdjust = this.options.spacing / 2;\n\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y,\n          startAngle = _this$getProps3.startAngle,\n          endAngle = _this$getProps3.endAngle,\n          innerRadius = _this$getProps3.innerRadius,\n          outerRadius = _this$getProps3.outerRadius;\n\n      var _this$options11 = this.options,\n          offset = _this$options11.offset,\n          spacing = _this$options11.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n          circumference = this.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      var radiusOffset = 0;\n\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, this, radiusOffset, spacing);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n  }]);\n\n  return ArcElement;\n}(Element);\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n      paramsStart = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n      segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n      options = line.options;\n\n  var _pathVars = pathVars(points, segment, params),\n      count = _pathVars.count,\n      start = _pathVars.start,\n      loop = _pathVars.loop,\n      ilen = _pathVars.ilen;\n\n  var lineMethod = getLineMethod(options);\n\n  var _ref3 = params || {},\n      _ref3$move = _ref3.move,\n      move = _ref3$move === void 0 ? true : _ref3$move,\n      reverse = _ref3.reverse;\n\n  var i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n\n  var _pathVars2 = pathVars(points, segment, params),\n      count = _pathVars2.count,\n      start = _pathVars2.start,\n      ilen = _pathVars2.ilen;\n\n  var _ref4 = params || {},\n      _ref4$move = _ref4.move,\n      move = _ref4$move === void 0 ? true : _ref4$move,\n      reverse = _ref4.reverse;\n\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n      options = line.options;\n\n  var segmentMethod = _getSegmentMethod(line);\n\n  var _iterator14 = _createForOfIteratorHelper(segments),\n      _step14;\n\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var segment = _step14.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n}\n\nvar usePath2D = typeof Path2D === 'function';\n\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n\n  var _super13 = _createSuper(LineElement);\n\n  function LineElement(cfg) {\n    var _this23;\n\n    _classCallCheck(this, LineElement);\n\n    _this23 = _super13.call(this);\n    _this23.animated = true;\n    _this23.options = undefined;\n    _this23._chart = undefined;\n    _this23._loop = undefined;\n    _this23._fullLoop = undefined;\n    _this23._path = undefined;\n    _this23._points = undefined;\n    _this23._segments = undefined;\n    _this23._decimated = false;\n    _this23._pointsUpdated = false;\n    _this23._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this23), cfg);\n    }\n\n    return _this23;\n  }\n\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      var result = [];\n\n      var _interpolate = _getInterpolationMethod(options);\n\n      var i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n            start = _segments$i.start,\n            end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n\n      var segmentMethod = _getSegmentMethod(this);\n\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n\n      var _iterator15 = _createForOfIteratorHelper(segments),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var segment = _step15.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n\n      if (points.length && options.borderWidth) {\n        ctx.save();\n\n        _draw(ctx, this, start, count);\n\n        ctx.restore();\n      }\n\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n\n  return LineElement;\n}(Element);\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n      value = _el$getProps[axis];\n\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n\n  var _super14 = _createSuper(PointElement);\n\n  function PointElement(cfg) {\n    var _this24;\n\n    _classCallCheck(this, PointElement);\n\n    _this24 = _super14.call(this);\n    _this24.options = undefined;\n    _this24.parsed = undefined;\n    _this24.skip = undefined;\n    _this24.stop = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this24), cfg);\n    }\n\n    return _this24;\n  }\n\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps4.x,\n          y = _this$getProps4.y;\n\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps5.x,\n          y = _this$getProps5.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n\n  return PointElement;\n}(Element);\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n      x = _bar$getProps.x,\n      y = _bar$getProps.y,\n      base = _bar$getProps.base,\n      width = _bar$getProps.width,\n      height = _bar$getProps.height;\n\n  var left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n      enableBorderRadius = _bar$getProps2.enableBorderRadius;\n\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n\n  var _super15 = _createSuper(BarElement);\n\n  function BarElement(cfg) {\n    var _this25;\n\n    _classCallCheck(this, BarElement);\n\n    _this25 = _super15.call(this);\n    _this25.options = undefined;\n    _this25.horizontal = undefined;\n    _this25.base = undefined;\n    _this25.width = undefined;\n    _this25.height = undefined;\n    _this25.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this25), cfg);\n    }\n\n    return _this25;\n  }\n\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n          _this$options12 = this.options,\n          borderColor = _this$options12.borderColor,\n          backgroundColor = _this$options12.backgroundColor;\n\n      var _boundingRects = boundingRects(this),\n          inner = _boundingRects.inner,\n          outer = _boundingRects.outer;\n\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n          x = _this$getProps6.x,\n          y = _this$getProps6.y,\n          base = _this$getProps6.base,\n          horizontal = _this$getProps6.horizontal;\n\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n\n  return BarElement;\n}(Element);\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n        pointAx = _data$a.x,\n        pointAy = _data$a.y;\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n      min = _iScale$getUserBounds2.min,\n      max = _iScale$getUserBounds2.max,\n      minDefined = _iScale$getUserBounds2.minDefined,\n      maxDefined = _iScale$getUserBounds2.maxDefined;\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n          indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      var xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n          start = _getStartAndCountOfVi2.start,\n          count = _getStartAndCountOfVi2.count;\n\n      var threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      var decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  var target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n      scale = _source$scale === void 0 ? {} : _source$scale,\n      fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n\n  return simpleArc;\n}();\n\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n      fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var target = [];\n  var start = options.reverse ? scale.max : scale.min;\n  var end = options.reverse ? scale.min : scale.max;\n  var i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction pointsFromSegments(boundary, line) {\n  var _ref5 = boundary || {},\n      _ref5$x = _ref5.x,\n      x = _ref5$x === void 0 ? null : _ref5$x,\n      _ref5$y = _ref5.y,\n      y = _ref5$y === void 0 ? null : _ref5$y;\n\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref6) {\n    var start = _ref6.start,\n        end = _ref6.end;\n    end = findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  var scale = source.scale,\n      index = source.index,\n      line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n        first = _findPoint.first,\n        last = _findPoint.last,\n        point = _findPoint.point;\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push.apply(points, postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\n\nfunction getTarget(source) {\n  var chart = source.chart,\n      fill = source.fill,\n      line = source.line;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  var boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  var segments = target.segments,\n      points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n\n  var _iterator16 = _createForOfIteratorHelper(segments),\n      _step16;\n\n  try {\n    for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n      var segment = _step16.value;\n      var start = segment.start,\n          end = segment.end;\n      var firstPoint = points[start];\n      var lastPoint = points[findSegmentEnd(start, end, points)];\n\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator16.e(err);\n  } finally {\n    _iterator16.f();\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  var start = first[property];\n  var end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n\n  var _iterator17 = _createForOfIteratorHelper(segments),\n      _step17;\n\n  try {\n    for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n      var segment = _step17.value;\n      var start = segment.start,\n          end = segment.end;\n      end = findSegmentEnd(start, end, points);\n      var bounds = getBounds(property, points[start], points[end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n\n      var targetSegments = _boundSegments(target, bounds);\n\n      var _iterator18 = _createForOfIteratorHelper(targetSegments),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var tgt = _step18.value;\n          var subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n          var fillSources = _boundSegment(segment, points, subBounds);\n\n          var _iterator19 = _createForOfIteratorHelper(fillSources),\n              _step19;\n\n          try {\n            for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n              var fillSource = _step19.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator19.e(err);\n          } finally {\n            _iterator19.f();\n          }\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n  } catch (err) {\n    _iterator17.e(err);\n  } finally {\n    _iterator17.f();\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n      top = _scale$chart$chartAre.top,\n      bottom = _scale$chart$chartAre.bottom;\n\n  var _ref7 = bounds || {},\n      property = _ref7.property,\n      start = _ref7.start,\n      end = _ref7.end;\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      property = cfg.property,\n      color = cfg.color,\n      scale = cfg.scale;\n\n  var segments = _segments(line, target, property);\n\n  var _iterator20 = _createForOfIteratorHelper(segments),\n      _step20;\n\n  try {\n    for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n      var _step20$value = _step20.value,\n          src = _step20$value.source,\n          tgt = _step20$value.target,\n          start = _step20$value.start,\n          end = _step20$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n          backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator20.e(err);\n  } finally {\n    _iterator20.f();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      above = cfg.above,\n      below = cfg.below,\n      area = cfg.area,\n      scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  var target = getTarget(source);\n  var line = source.line,\n      scale = source.scale,\n      axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n\n  var _ref8 = fillOption || {},\n      _ref8$above = _ref8.above,\n      above = _ref8$above === void 0 ? color : _ref8$above,\n      _ref8$below = _ref8.below,\n      below = _ref8$below === void 0 ? color : _ref8$below;\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    var metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n      boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n      _labelOpts$boxWidth = labelOpts.boxWidth,\n      boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\n\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n\n  var _super16 = _createSuper(Legend);\n\n  function Legend(config) {\n    var _this26;\n\n    _classCallCheck(this, Legend);\n\n    _this26 = _super16.call(this);\n    _this26._added = false;\n    _this26.legendHitBoxes = [];\n    _this26._hoveredItem = null;\n    _this26.doughnutMode = false;\n    _this26.chart = config.chart;\n    _this26.options = config.options;\n    _this26.ctx = config.ctx;\n    _this26.legendItems = undefined;\n    _this26.columnSizes = undefined;\n    _this26.lineWidths = undefined;\n    _this26.maxHeight = undefined;\n    _this26.maxWidth = undefined;\n    _this26.top = undefined;\n    _this26.bottom = undefined;\n    _this26.left = undefined;\n    _this26.right = undefined;\n    _this26.height = undefined;\n    _this26.width = undefined;\n    _this26._margins = undefined;\n    _this26.position = undefined;\n    _this26.weight = undefined;\n    _this26.fullSize = undefined;\n    return _this26;\n  }\n\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this27 = this;\n\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this27.chart.data);\n        });\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this27.chart.data);\n        });\n      }\n\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n          ctx = this.ctx;\n\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n\n      var titleHeight = this._computeTitleHeight();\n\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize.boxWidth,\n          itemHeight = _getBoxSize.itemHeight;\n\n      var width, height;\n      ctx.font = labelFont.string;\n\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n          maxWidth = this.maxWidth,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n          maxHeight = this.maxHeight,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n\n      var titleHeight = this._computeTitleHeight();\n\n      var hitboxes = this.legendHitBoxes,\n          _this$options13 = this.options,\n          align = _this$options13.align,\n          padding = _this$options13.labels.padding,\n          rtl = _this$options13.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n      if (this.isHorizontal()) {\n        var row = 0;\n\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n        var _iterator21 = _createForOfIteratorHelper(hitboxes),\n            _step21;\n\n        try {\n          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n            var hitbox = _step21.value;\n\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator21.e(err);\n        } finally {\n          _iterator21.f();\n        }\n      } else {\n        var col = 0;\n\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n        var _iterator22 = _createForOfIteratorHelper(hitboxes),\n            _step22;\n\n        try {\n          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n            var _hitbox = _step22.value;\n\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator22.e(err);\n        } finally {\n          _iterator22.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n\n        this._draw();\n\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this28 = this;\n\n      var opts = this.options,\n          columnSizes = this.columnSizes,\n          lineWidths = this.lineWidths,\n          ctx = this.ctx;\n      var align = opts.align,\n          labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n          padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize2.boxWidth,\n          boxHeight = _getBoxSize2.boxHeight,\n          itemHeight = _getBoxSize2.itemHeight;\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n\n      var isHorizontal = this.isHorizontal();\n\n      var titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this28.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this28.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this28.left + padding, _this28.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this28.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this28.top + titleHeight + padding, _this28.bottom - columnSizes[cursor.line].height);\n        }\n\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this28.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n\n      var x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n\n        this._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n\n  return Legend;\n}(Element);\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n            usePointStyle = _chart$legend$options.usePointStyle,\n            pointStyle = _chart$legend$options.pointStyle,\n            textAlign = _chart$legend$options.textAlign,\n            color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\n\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n\n  var _super17 = _createSuper(Title);\n\n  function Title(config) {\n    var _this29;\n\n    _classCallCheck(this, Title);\n\n    _this29 = _super17.call(this);\n    _this29.chart = config.chart;\n    _this29.options = config.options;\n    _this29.ctx = config.ctx;\n    _this29._padding = undefined;\n    _this29.top = undefined;\n    _this29.bottom = undefined;\n    _this29.left = undefined;\n    _this29.right = undefined;\n    _this29.width = undefined;\n    _this29.height = undefined;\n    _this29.position = undefined;\n    _this29.weight = undefined;\n    _this29.fullSize = undefined;\n    return _this29;\n  }\n\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n          left = this.left,\n          bottom = this.bottom,\n          right = this.right,\n          options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n\n      var _this$_drawArgs = this._drawArgs(offset),\n          titleX = _this$_drawArgs.titleX,\n          titleY = _this$_drawArgs.titleY,\n          maxWidth = _this$_drawArgs.maxWidth,\n          rotation = _this$_drawArgs.rotation;\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n\n  return Title;\n}(Element);\n\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n      datasetIndex = item.datasetIndex,\n      index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n      label = _controller$getLabelA.label,\n      value = _controller$getLabelA.value;\n\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n      footer = tooltip.footer,\n      title = tooltip.title;\n  var boxWidth = options.boxWidth,\n      boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n      height = size.height;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n      width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n      width = size.width;\n  var chartWidth = chart.width,\n      _chart$chartArea = chart.chartArea,\n      left = _chart$chartArea.left,\n      right = _chart$chartArea.right;\n  var xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  var x = size.x,\n      width = size.width;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n      height = size.height;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n      caretPadding = options.caretPadding,\n      cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n      yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n      topLeft = _toTRBLCorners.topLeft,\n      topRight = _toTRBLCorners.topRight,\n      bottomLeft = _toTRBLCorners.bottomLeft,\n      bottomRight = _toTRBLCorners.bottomRight;\n\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n\n  var _super18 = _createSuper(Tooltip);\n\n  function Tooltip(config) {\n    var _this30;\n\n    _classCallCheck(this, Tooltip);\n\n    _this30 = _super18.call(this);\n    _this30.opacity = 0;\n    _this30._active = [];\n    _this30._eventPosition = undefined;\n    _this30._size = undefined;\n    _this30._cachedAnimations = undefined;\n    _this30._tooltipItems = [];\n    _this30.$animations = undefined;\n    _this30.$context = undefined;\n    _this30.chart = config.chart || config._chart;\n    _this30._chart = _this30.chart;\n    _this30.options = config.options;\n    _this30.dataPoints = undefined;\n    _this30.title = undefined;\n    _this30.beforeBody = undefined;\n    _this30.body = undefined;\n    _this30.afterBody = undefined;\n    _this30.footer = undefined;\n    _this30.xAlign = undefined;\n    _this30.yAlign = undefined;\n    _this30.x = undefined;\n    _this30.y = undefined;\n    _this30.height = undefined;\n    _this30.width = undefined;\n    _this30.caretX = undefined;\n    _this30.caretY = undefined;\n    _this30.labelColors = undefined;\n    _this30.labelPointStyles = undefined;\n    _this30.labelTextColors = undefined;\n    return _this30;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      var title = callbacks.title.apply(this, [context]);\n      var afterTitle = callbacks.afterTitle.apply(this, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this31 = this;\n\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(_this31, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(_this31, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(_this31, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      var footer = callbacks.footer.apply(this, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this32 = this;\n\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(_this32, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(_this32, context));\n        labelTextColors.push(scoped.labelTextColor.call(_this32, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n          cornerRadius = options.cornerRadius;\n\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n          topLeft = _toTRBLCorners2.topLeft,\n          topRight = _toTRBLCorners2.topRight,\n          bottomLeft = _toTRBLCorners2.bottomLeft,\n          bottomRight = _toTRBLCorners2.bottomRight;\n\n      var ptX = tooltipPoint.x,\n          ptY = tooltipPoint.y;\n      var width = size.width,\n          height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth,\n          boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n          bodyAlign = options.bodyAlign,\n          displayColors = options.displayColors,\n          boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth,\n          boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var x = pt.x,\n          y = pt.y;\n      var width = tooltipSize.width,\n          height = tooltipSize.height;\n\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n          topLeft = _toTRBLCorners3.topLeft,\n          topRight = _toTRBLCorners3.topRight,\n          bottomLeft = _toTRBLCorners3.bottomLeft,\n          bottomRight = _toTRBLCorners3.bottomRight;\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      this._updateAnimationTarget(options);\n\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this33 = this;\n\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref9) {\n        var datasetIndex = _ref9.datasetIndex,\n            index = _ref9.index;\n\n        var meta = _this33.chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n\n      var positionChanged = this._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n      var positionChanged = this._positionChanged(active, e);\n\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        this._active = active;\n\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n          caretY = this.caretY,\n          options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n\n  return Tooltip;\n}(Element);\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    var args = {\n      tooltip: tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        var label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        var value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\n\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n\n  var _super19 = _createSuper(CategoryScale);\n\n  function CategoryScale(cfg) {\n    var _this34;\n\n    _classCallCheck(this, CategoryScale);\n\n    _this34 = _super19.call(this, cfg);\n    _this34._startValue = undefined;\n    _this34._valueRange = 0;\n    _this34._addedLabels = [];\n    return _this34;\n  }\n\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n\n      if (added.length) {\n        var labels = this.getLabels();\n\n        var _iterator23 = _createForOfIteratorHelper(added),\n            _step23;\n\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var _step23$value = _step23.value,\n                index = _step23$value.index,\n                label = _step23$value.label;\n\n            if (labels[index] === label) {\n              labels.splice(index, 1);\n            }\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n\n        this._addedLabels = [];\n      }\n\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n          minDefined = _this$getUserBounds2.minDefined,\n          maxDefined = _this$getUserBounds2.maxDefined;\n\n      var _this$getMinMax = this.getMinMax(true),\n          min = _this$getMinMax.min,\n          max = _this$getMinMax.max;\n\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var labels = this.getLabels();\n\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n\n  return CategoryScale;\n}(Scale);\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n      step = generationOptions.step,\n      min = generationOptions.min,\n      max = generationOptions.max,\n      precision = generationOptions.precision,\n      count = generationOptions.count,\n      maxTicks = generationOptions.maxTicks,\n      maxDigits = generationOptions.maxDigits,\n      includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n      rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref10) {\n  var horizontal = _ref10.horizontal,\n      minRotation = _ref10.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n\n  var _super20 = _createSuper(LinearScaleBase);\n\n  function LinearScaleBase(cfg) {\n    var _this35;\n\n    _classCallCheck(this, LinearScaleBase);\n\n    _this35 = _super20.call(this, cfg);\n    _this35.start = undefined;\n    _this35.end = undefined;\n    _this35._startValue = undefined;\n    _this35._endValue = undefined;\n    _this35._valueRange = 0;\n    return _this35;\n  }\n\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n\n      var _this$getUserBounds3 = this.getUserBounds(),\n          minDefined = _this$getUserBounds3.minDefined,\n          maxDefined = _this$getUserBounds3.maxDefined;\n\n      var min = this.min,\n          max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        var offset = 1;\n\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n\n        setMax(max + offset);\n\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n          stepSize = tickOpts.stepSize;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n\n  return LinearScaleBase;\n}(Scale);\n\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n\n  var _super21 = _createSuper(LinearScale);\n\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    return _super21.apply(this, arguments);\n  }\n\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n          min = _this$getMinMax2.min,\n          max = _this$getMinMax2.max;\n\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      var tickFont = this._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n\n  return LinearScale;\n}(LinearScaleBase);\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n\n  var _super22 = _createSuper(LogarithmicScale);\n\n  function LogarithmicScale(cfg) {\n    var _this36;\n\n    _classCallCheck(this, LogarithmicScale);\n\n    _this36 = _super22.call(this, cfg);\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n          min = _this$getMinMax3.min,\n          max = _this$getMinMax3.max;\n\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n          minDefined = _this$getUserBounds4.minDefined,\n          maxDefined = _this$getUserBounds4.maxDefined;\n\n      var min = this.min;\n      var max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n\n  return LogarithmicScale;\n}(Scale);\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n      pointLabels = scale.options.pointLabels;\n\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n        x = _scale$_pointLabelIte.x,\n        y = _scale$_pointLabelIte.y,\n        textAlign = _scale$_pointLabelIte.textAlign,\n        left = _scale$_pointLabelIte.left,\n        top = _scale$_pointLabelIte.top,\n        right = _scale$_pointLabelIte.right,\n        bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n\n    if (!isNullOrUndef(backdropColor)) {\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n      lineWidth = gridLineOpts.lineWidth;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\n\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n\n  var _super23 = _createSuper(RadialLinearScale);\n\n  function RadialLinearScale(cfg) {\n    var _this37;\n\n    _classCallCheck(this, RadialLinearScale);\n\n    _this37 = _super23.call(this, cfg);\n    _this37.xCenter = undefined;\n    _this37.yCenter = undefined;\n    _this37.drawingArea = undefined;\n    _this37._pointLabels = [];\n    _this37._pointLabelItems = [];\n    return _this37;\n  }\n\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n          min = _this$getMinMax4.min,\n          max = _this$getMinMax4.max;\n\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this38 = this;\n\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this38.options.pointLabels.callback, [value, index], _this38);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this38.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n          left = _this$_pointLabelItem.left,\n          top = _this$_pointLabelItem.top,\n          right = _this$_pointLabelItem.right,\n          bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options14 = this.options,\n          backgroundColor = _this$options14.backgroundColor,\n          circular = _this$options14.grid.circular;\n\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this39 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n          grid = opts.grid;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this39.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(_this39.getContext(index - 1));\n            drawRadiusLine(_this39, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n              lineWidth = optsAtIndex.lineWidth;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this40 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        var optsAtIndex = tickOpts.setContext(_this40.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this40.getDistanceFromCenterForValue(_this40.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n\n  return RadialLinearScale;\n}(LinearScaleBase);\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n      parser = _scale$_parseOpts.parser,\n      round = _scale$_parseOpts.round,\n      isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n        lo = _lookup2.lo,\n        hi = _lookup2.hi;\n\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n\n  var _super24 = _createSuper(TimeScale);\n\n  function TimeScale(props) {\n    var _this41;\n\n    _classCallCheck(this, TimeScale);\n\n    _this41 = _super24.call(this, props);\n    _this41._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this41._unit = 'day';\n    _this41._majorUnit = undefined;\n    _this41._offsets = {};\n    _this41._normalized = false;\n    _this41._parseOpts = undefined;\n    return _this41;\n  }\n\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n\n      var _this$getUserBounds5 = this.getUserBounds(),\n          min = _this$getUserBounds5.min,\n          max = _this$getUserBounds5.max,\n          minDefined = _this$getUserBounds5.minDefined,\n          maxDefined = _this$getUserBounds5.maxDefined;\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n\n      var min = this.min;\n      var max = this.max;\n\n      var ticks = _filterBetween(timestamps, min, max);\n\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var start = 0;\n      var end = 0;\n      var first, last;\n\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n\n      var label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n      var size = this._getLabelSize(exampleLabel);\n\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var labels = this.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n\n  return TimeScale;\n}(Scale);\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n\n  var _super25 = _createSuper(TimeSeriesScale);\n\n  function TimeSeriesScale(props) {\n    var _this42;\n\n    _classCallCheck(this, TimeSeriesScale);\n\n    _this42 = _super25.call(this, props);\n    _this42._table = [];\n    _this42._minPos = undefined;\n    _this42._tableRange = undefined;\n    return _this42;\n  }\n\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n          max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n\n  return TimeSeriesScale;\n}(TimeScale);\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","isNumber","w","_limitValue","x","_lookupByKey","y","getRelativePosition$1","z","_isPointInArea","A","_rlookupByKey","B","getAngleFromPoint","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","_isDomSupported","L","log10","M","_factorize","N","finiteOrDefault","O","callback","Q","_addGrace","R","toDegrees","S","_measureText","U","_int16Range","V","_alignPixel","W","clipArea","X","renderText","Y","unclipArea","Z","toFont","$","_toLeftRightCenter","a0","_alignStartEnd","a1","overrides","a2","merge","a3","_capitalize","a4","descriptors","a5","isFunction","a6","_attachContext","a7","_createResolver","a8","_descriptors","a9","mergeIf","aa","uid","ab","debounce","ac","retinaScale","ad","clearCanvas","ae","setsEqual","af","_elementsEqual","ag","_isClickEvent","ah","_isBetween","ai","_readValueToProps","aj","_updateBezierControlPoints","ak","_computeSegments","al","_boundSegments","am","_steppedInterpolation","an","_bezierInterpolation","ao","_pointInLine","ap","_steppedLineTo","aq","_bezierCurveTo","ar","drawPoint","as","addRoundedRectPath","at","toTRBL","au","toTRBLCorners","av","_boundSegment","aw","_normalizeAngle","ax","getRtlAdapter","ay","overrideTextDirection","az","_textX","aA","restoreTextDirection","aB","noop","aC","distanceBetweenPoints","aD","_setMinAndMaxByKey","aE","niceNum","aF","almostWhole","aG","almostEquals","aH","_decimalPlaces","aI","_longestText","aJ","_filterBetween","aK","_lookup","Animator","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","call","window","_update","_refresh","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","active","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","_animateOptions","value","update","size","assign","add","anim","wait","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","clip","getMaxOverflow","elements","area","chartArea","drawActiveElementsOnTop","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","_dataChanges","arguments","_sync","newCount","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","reset","getBasePixel","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","getPixelForDecimal","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","canvas","listener","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","addEventListener","removeListener","removeEventListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","create","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getPlugin","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","resolver","subPrefixes","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","_getActiveElements","onHover","getElementsAtEventForMode","invalidatePlugins","enumerable","defineProperties","unregister","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","destroy","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","interpolate","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","lineLoop","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\r\n * Chart.js v3.7.1\r\n * https://www.chartjs.org\r\n * (c) 2022 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\r\nexport { d as defaults } from './chunks/helpers.segment.js';\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      initial: anims.initial,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    if (this._request) {\r\n      return;\r\n    }\r\n    this._running = true;\r\n    this._request = requestAnimFrame.call(window, () => {\r\n      this._update();\r\n      this._request = null;\r\n      if (this._running) {\r\n        this._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    let remaining = 0;\r\n    this._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        this._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        this._notify(chart, anims, date, 'complete');\r\n        anims.initial = false;\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    this._lastDate = date;\r\n    if (remaining === 0) {\r\n      this._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        initial: true,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    if (this._active) {\r\n      this._notify(false);\r\n      const currentValue = this._target[this._prop];\r\n      const elapsed = date - this._start;\r\n      const remain = this._duration - elapsed;\r\n      this._start = date;\r\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      this._total += elapsed;\r\n      this._loop = !!cfg.loop;\r\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      this._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    if (this._active) {\r\n      this.tick(Date.now());\r\n      this._active = false;\r\n      this._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const elapsed = date - this._start;\r\n    const duration = this._duration;\r\n    const prop = this._prop;\r\n    const from = this._from;\r\n    const loop = this._loop;\r\n    const to = this._to;\r\n    let factor;\r\n    this._active = from !== to && (loop || (elapsed < duration));\r\n    if (!this._active) {\r\n      this._target[prop] = to;\r\n      this._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      this._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\r\n    this._target[prop] = this._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l,\r\n    disabled: value === false\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options = {}) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction getLastIndexInStack(stack, vScale, positive, type) {\r\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\r\n    const value = stack[meta.index];\r\n    if ((positive && value > 0) || (!positive && value < 0)) {\r\n      return meta.index;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\r\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return createContext(parent,\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return createContext(parent, {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  const datasetIndex = meta.controller.index;\r\n  const axis = meta.vScale && meta.vScale.axis;\r\n  if (!axis) {\r\n    return;\r\n  }\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[axis][datasetIndex];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\r\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.$context = undefined;\r\n    this._syncList = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    this.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    if (this.index !== datasetIndex) {\r\n      clearStacks(this._cachedMeta);\r\n    }\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = this.getScaleForId(xid);\r\n    meta.yScale = this.getScaleForId(yid);\r\n    meta.rScale = this.getScaleForId(rid);\r\n    meta.iScale = this.getScaleForId(iid);\r\n    meta.vScale = this.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const dataset = this.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    const _data = this._data;\r\n    if (isObject(data)) {\r\n      this._data = convertObjectDataToArray(data);\r\n    } else if (_data !== data) {\r\n      if (_data) {\r\n        unlistenArrayEvents(_data, this);\r\n        const meta = this._cachedMeta;\r\n        clearStacks(meta);\r\n        meta._parsed = [];\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, this);\r\n      }\r\n      this._syncList = [];\r\n      this._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const meta = this._cachedMeta;\r\n    this._dataCheck();\r\n    if (this.datasetElementType) {\r\n      meta.dataset = new this.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    let stackChanged = false;\r\n    this._dataCheck();\r\n    const oldStacked = meta._stacked;\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    this._resyncElements(resetNewElements);\r\n    if (stackChanged || oldStacked !== meta._stacked) {\r\n      updateStacks(this, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(this._type);\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\r\n    this.options = config.createResolver(scopes, this.getContext());\r\n    this._parsing = this.options.parsing;\r\n    this._cachedDataOpts = {};\r\n  }\r\n  parse(start, count) {\r\n    const {_cachedMeta: meta, _data: data} = this;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n      parsed = data;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = this.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = this.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = this.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(this, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const meta = this._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = this._getOtherScale(scale);\r\n    const stack = createStack(canStack, meta, this.chart);\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, parsed;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      const otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      this.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        this.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const ctx = this._ctx;\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = this._drawStart || 0;\r\n    const count = this._drawCount || (elements.length - start);\r\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.hidden) {\r\n        continue;\r\n      }\r\n      if (element.active && drawActiveElementsOnTop) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const dataset = this.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < this._cachedMeta.data.length) {\r\n      const element = this._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(this.getContext(), index, element));\r\n      context.parsed = this.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n      context.index = context.dataIndex = index;\r\n    } else {\r\n      context = this.$context ||\r\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\r\n      context.dataset = dataset;\r\n      context.index = context.datasetIndex = this.index;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const active = mode === 'active';\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = this.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => this.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const chart = this.chart;\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = this.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\r\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const data = this._data;\r\n    const elements = this._cachedMeta.data;\r\n    for (const [method, arg1, arg2] of this._syncList) {\r\n      this[method](arg1, arg2);\r\n    }\r\n    this._syncList = [];\r\n    const numMeta = elements.length;\r\n    const numData = data.length;\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      this.parse(0, count);\r\n    }\r\n    if (numData > numMeta) {\r\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      this._removeElements(numData, numMeta - numData);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new this.dataElementType();\r\n    }\r\n    if (this._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    this.parse(start, count);\r\n    if (resetNewElements) {\r\n      this.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _sync(args) {\r\n    if (this._parsing) {\r\n      this._syncList.push(args);\r\n    } else {\r\n      const [method, arg1, arg2] = args;\r\n      this[method](arg1, arg2);\r\n    }\r\n    this.chart._dataChanges.push([this.index, ...args]);\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\r\n  }\r\n  _onDataPop() {\r\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\r\n  }\r\n  _onDataShift() {\r\n    this._sync(['_removeElements', 0, 1]);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    if (count) {\r\n      this._sync(['_removeElements', start, count]);\r\n    }\r\n    const newCount = arguments.length - 2;\r\n    if (newCount) {\r\n      this._sync(['_insertElements', start, newCount]);\r\n    }\r\n  }\r\n  _onDataUnshift() {\r\n    this._sync(['_insertElements', 0, arguments.length]);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nfunction getAllScaleValues(scale, type) {\r\n  if (!scale._cache.$bar) {\r\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\r\n    let values = [];\r\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\r\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(meta) {\r\n  const scale = meta.iScale;\r\n  const values = getAllScaleValues(scale, meta.type);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    if (curr === 32767 || curr === -32768) {\r\n      return;\r\n    }\r\n    if (defined(prev)) {\r\n      min = Math.min(min, Math.abs(curr - prev) || min);\r\n    }\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  prev = undefined;\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nfunction barSign(size, vScale, actualBase) {\r\n  if (size !== 0) {\r\n    return sign(size);\r\n  }\r\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\r\n}\r\nfunction borderProps(properties) {\r\n  let reverse, start, end, top, bottom;\r\n  if (properties.horizontal) {\r\n    reverse = properties.base > properties.x;\r\n    start = 'left';\r\n    end = 'right';\r\n  } else {\r\n    reverse = properties.base < properties.y;\r\n    start = 'bottom';\r\n    end = 'top';\r\n  }\r\n  if (reverse) {\r\n    top = 'end';\r\n    bottom = 'start';\r\n  } else {\r\n    top = 'start';\r\n    bottom = 'end';\r\n  }\r\n  return {start, end, reverse, top, bottom};\r\n}\r\nfunction setBorderSkipped(properties, options, stack, index) {\r\n  let edge = options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    properties.borderSkipped = res;\r\n    return;\r\n  }\r\n  const {start, end, reverse, top, bottom} = borderProps(properties);\r\n  if (edge === 'middle' && stack) {\r\n    properties.enableBorderRadius = true;\r\n    if ((stack._top || 0) === index) {\r\n      edge = top;\r\n    } else if ((stack._bottom || 0) === index) {\r\n      edge = bottom;\r\n    } else {\r\n      res[parseEdge(bottom, start, end, reverse)] = true;\r\n      edge = top;\r\n    }\r\n  }\r\n  res[parseEdge(edge, start, end, reverse)] = true;\r\n  properties.borderSkipped = res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\r\n  properties.inflateAmount = inflateAmount === 'auto'\r\n    ? ratio === 1 ? 0.33 : 0\r\n    : inflateAmount;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = this._cachedMeta;\r\n    meta.stack = this.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {index, _cachedMeta: {vScale}} = this;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = this._getRuler();\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = this.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\r\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\r\n      const stack = (parsed._stacks || {})[vScale.axis];\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\r\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\r\n      }\r\n      const options = properties.options || bars[i].options;\r\n      setBorderSkipped(properties, options, stack, index);\r\n      setInflateAmount(properties, options, ruler.ratio);\r\n      this.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\r\n    const stacked = iScale.options.stacked;\r\n    const ilen = metasets.length;\r\n    const stacks = [];\r\n    let i, item;\r\n    for (i = 0; i < ilen; ++i) {\r\n      item = metasets[i];\r\n      if (!item.controller.options.grouped) {\r\n        continue;\r\n      }\r\n      if (typeof dataIndex !== 'undefined') {\r\n        const val = item.controller.getParsed(dataIndex)[\r\n          item.controller._cachedMeta.vScale.axis\r\n        ];\r\n        if (isNullOrUndef(val) || isNaN(val)) {\r\n          continue;\r\n        }\r\n      }\r\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\r\n        stacks.push(item.stack);\r\n      }\r\n      if (item.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name, dataIndex) {\r\n    const stacks = this._getStacks(datasetIndex, dataIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(meta);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: this._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\r\n    const actualBase = baseValue || 0;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (Math.abs(size) < minBarLength) {\r\n      size = barSign(size, vScale, actualBase) * minBarLength;\r\n      if (value === actualBase) {\r\n        base -= size / 2;\r\n      }\r\n      head = base + size;\r\n    }\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\r\n      base += halfGrid;\r\n      size -= halfGrid;\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const scale = ruler.scale;\r\n    const options = this.options;\r\n    const skipNull = options.skipNull;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    for (; i < ilen; ++i) {\r\n      if (this.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(this._ctx);\r\n      }\r\n    }\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const parsed = super.parseArrayData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const parsed = super.parseObjectData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const data = this._cachedMeta.data;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const points = this._cachedMeta.data;\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && this.getParsed(i);\r\n      const properties = {};\r\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\r\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\r\n      if (includeOptions) {\r\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n    } else {\r\n      let getter = (i) => +data[i];\r\n      if (isObject(data[start])) {\r\n        const {key = 'value'} = this._parsing;\r\n        getter = (i) => +resolveObjectKey(data[i], key);\r\n      }\r\n      let i, ilen;\r\n      for (i = start, ilen = start + count; i < ilen; ++i) {\r\n        meta._parsed[i] = getter(i);\r\n      }\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        const controller = this.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const chart = this.chart;\r\n    const {chartArea} = chart;\r\n    const meta = this._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\r\n    const chartWeight = this._getRingWeight(this.index);\r\n    const {circumference, rotation} = this._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(this.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\r\n    this.offsetX = offsetX * outerRadius;\r\n    this.offsetY = offsetY * outerRadius;\r\n    meta.total = this.calculateTotal();\r\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\r\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const circumference = this._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\r\n      return 0;\r\n    }\r\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : this.innerRadius;\r\n    const outerRadius = animateScale ? 0 : this.outerRadius;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    let startAngle = this._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += this._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = this._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + this.offsetX,\r\n        y: centerY + this.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\r\n      }\r\n      startAngle += circumference;\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    let max = 0;\r\n    const chart = this.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  spacing: 0,\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.descriptors = {\r\n  _scriptable: (name) => name !== 'spacing',\r\n  _indexable: (name) => name !== 'spacing',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._chart = this.chart;\r\n    line._datasetIndex = this.index;\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    const options = this.resolveDatasetElementOptions(mode);\r\n    if (!this.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = this.options.segment;\r\n    this.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count = pointCount;\r\n  if (meta._sorted) {\r\n    const {iScale, _parsed} = meta;\r\n    const axis = iScale.axis;\r\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n    if (minDefined) {\r\n      start = _limitValue(Math.min(\r\n        _lookupByKey(_parsed, iScale.axis, min).lo,\r\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\r\n      0, pointCount - 1);\r\n    }\r\n    if (maxDefined) {\r\n      count = _limitValue(Math.max(\r\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\r\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\r\n      start, pointCount) - start;\r\n    } else {\r\n      count = pointCount - start;\r\n    }\r\n  }\r\n  return {start, count};\r\n}\r\nfunction scaleRangesChanged(meta) {\r\n  const {xScale, yScale, _scaleRanges} = meta;\r\n  const newRanges = {\r\n    xmin: xScale.min,\r\n    xmax: xScale.max,\r\n    ymin: yScale.min,\r\n    ymax: yScale.max\r\n  };\r\n  if (!_scaleRanges) {\r\n    meta._scaleRanges = newRanges;\r\n    return true;\r\n  }\r\n  const changed = _scaleRanges.xmin !== xScale.min\r\n\t\t|| _scaleRanges.xmax !== xScale.max\r\n\t\t|| _scaleRanges.ymin !== yScale.min\r\n\t\t|| _scaleRanges.ymax !== yScale.max;\r\n  Object.assign(_scaleRanges, newRanges);\r\n  return changed;\r\n}\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _updateRadius() {\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    this.outerRadius = outerRadius - (radiusLength * this.index);\r\n    this.innerRadius = this.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const dataset = this.getDataset();\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = this._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / this.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += this._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\r\n      };\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const dataset = this.getDataset();\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const vScale = this._cachedMeta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      if (!this.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      this.updateElement(line, undefined, properties, mode);\r\n    }\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const dataset = this.getDataset();\r\n    const scale = this._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass ScatterController extends LineController {\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction getRelativePosition(e, chart) {\r\n  if ('native' in e) {\r\n    return {\r\n      x: e.x,\r\n      y: e.y\r\n    };\r\n  }\r\n  return getRelativePosition$1(e, chart);\r\n}\r\nfunction evaluateAllVisibleItems(chart, handler) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  let index, data, element;\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    ({index, data} = metasets[i]);\r\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\r\n      element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\r\n  const items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\r\n  let items = [];\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\r\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\r\n    if (_angleBetween(angle, startAngle, endAngle)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\r\n  let items = [];\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\r\n    if (intersect && !inRange) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\r\n    if (!pointInArea && !inRange) {\r\n      return;\r\n    }\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return [];\r\n  }\r\n  return axis === 'r' && !intersect\r\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\r\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\r\n}\r\nfunction getAxisItems(chart, e, options, useFinalPosition) {\r\n  const position = getRelativePosition(e, chart);\r\n  const items = [];\r\n  const axis = options.axis;\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      intersectsItem = true;\r\n    }\r\n  });\r\n  if (options.intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getIntersectItems(chart, position, axis, useFinalPosition);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box, pos, stack, stackWeight;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight,\r\n      stack: stack && (pos + stack),\r\n      stackWeight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction buildStacks(layouts) {\r\n  const stacks = {};\r\n  for (const wrap of layouts) {\r\n    const {stack, pos, stackWeight} = wrap;\r\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\r\n      continue;\r\n    }\r\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\r\n    _stack.count++;\r\n    _stack.weight += stackWeight;\r\n  }\r\n  return stacks;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  const stacks = buildStacks(layouts);\r\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    const {fullSize} = layout.box;\r\n    const stack = stacks[layout.stack];\r\n    const factor = stack && layout.stackWeight / stack.weight;\r\n    if (layout.horizontal) {\r\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\r\n      layout.height = hBoxMaxHeight;\r\n    } else {\r\n      layout.width = vBoxMaxWidth;\r\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\r\n    }\r\n  }\r\n  return stacks;\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout, stacks) {\r\n  const {pos, box} = layout;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (!isObject(pos)) {\r\n    if (layout.size) {\r\n      chartArea[pos] -= layout.size;\r\n    }\r\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\r\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\r\n    layout.size = stack.size / stack.count;\r\n    chartArea[pos] += layout.size;\r\n  }\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params, stacks) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\r\n}\r\nfunction setBoxDims(box, left, top, width, height) {\r\n  box.top = top;\r\n  box.left = left;\r\n  box.right = left + width;\r\n  box.bottom = top + height;\r\n  box.width = width;\r\n  box.height = height;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params, stacks) {\r\n  const userPadding = params.padding;\r\n  let {x, y} = chartArea;\r\n  for (const layout of boxes) {\r\n    const box = layout.box;\r\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\r\n    const weight = (layout.stackWeight / stack.weight) || 1;\r\n    if (layout.horizontal) {\r\n      const width = chartArea.w * weight;\r\n      const height = stack.size || box.height;\r\n      if (defined(stack.start)) {\r\n        y = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\r\n      } else {\r\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\r\n      }\r\n      stack.start = y;\r\n      stack.placed += width;\r\n      y = box.bottom;\r\n    } else {\r\n      const height = chartArea.h * weight;\r\n      const width = stack.size || box.width;\r\n      if (defined(stack.start)) {\r\n        x = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\r\n      } else {\r\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\r\n      }\r\n      stack.start = x;\r\n      stack.placed += height;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  autoPadding: true,\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = Math.max(width - padding.width, 0);\r\n    const availableHeight = Math.max(height - padding.height, 0);\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\r\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\r\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\r\n    });\r\n  }\r\n};\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n  updateConfig(config) {\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n  updateConfig(config) {\r\n    config.options.animation = false;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition$1(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction nodeListContains(nodeList, canvas) {\r\n  for (const node of nodeList) {\r\n    if (node === canvas || node.contains(canvas)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && container.isConnected);\r\n  }\r\n}\r\n\r\nfunction _detectPlatform(canvas) {\r\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n    return BasicPlatform;\r\n  }\r\n  return DomPlatform;\r\n}\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return this;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderWidth: 1\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n    showLabelBackdrop: false,\r\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n    backdropPadding: 2,\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\ndefaults.describe('scale.ticks', {\r\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\r\n  _indexable: (name) => name !== 'backdropPadding',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return createContext(parent, {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return createContext(parent, {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right, chart} = scale;\r\n  const {chartArea, scales} = chart;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  const height = bottom - top;\r\n  const width = right - left;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\r\n    } else if (position === 'center') {\r\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\r\n    } else {\r\n      titleY = offsetFromEdge(scale, position, offset);\r\n    }\r\n    maxWidth = right - left;\r\n  } else {\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\r\n    } else if (position === 'center') {\r\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\r\n    } else {\r\n      titleX = offsetFromEdge(scale, position, offset);\r\n    }\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    this.options = options.setContext(this.getContext());\r\n    this.axis = options.axis;\r\n    this._userMin = this.parse(options.min);\r\n    this._userMax = this.parse(options.max);\r\n    this._suggestedMin = this.parse(options.suggestedMin);\r\n    this._suggestedMax = this.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(this, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    min = maxDefined && min > max ? max : min;\r\n    max = minDefined && min > max ? min : max;\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    return {\r\n      left: this.paddingLeft || 0,\r\n      top: this.paddingTop || 0,\r\n      right: this.paddingRight || 0,\r\n      bottom: this.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    this.beforeUpdate();\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    this.ticks = null;\r\n    this._labelSizes = null;\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this.beforeSetDimensions();\r\n    this.setDimensions();\r\n    this.afterSetDimensions();\r\n    this._maxLength = this.isHorizontal()\r\n      ? this.width + margins.left + margins.right\r\n      : this.height + margins.top + margins.bottom;\r\n    if (!this._dataLimitsCached) {\r\n      this.beforeDataLimits();\r\n      this.determineDataLimits();\r\n      this.afterDataLimits();\r\n      this._range = _addGrace(this, grace, beginAtZero);\r\n      this._dataLimitsCached = true;\r\n    }\r\n    this.beforeBuildTicks();\r\n    this.ticks = this.buildTicks() || [];\r\n    this.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < this.ticks.length;\r\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\r\n    this.configure();\r\n    this.beforeCalculateLabelRotation();\r\n    this.calculateLabelRotation();\r\n    this.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      this.ticks = autoSkip(this, this.ticks);\r\n      this._labelSizes = null;\r\n    }\r\n    if (samplingEnabled) {\r\n      this._convertTicksToLabels(this.ticks);\r\n    }\r\n    this.beforeFit();\r\n    this.fit();\r\n    this.afterFit();\r\n    this.afterUpdate();\r\n  }\r\n  configure() {\r\n    let reversePixels = this.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (this.isHorizontal()) {\r\n      startPixel = this.left;\r\n      endPixel = this.right;\r\n    } else {\r\n      startPixel = this.top;\r\n      endPixel = this.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    this._startPixel = startPixel;\r\n    this._endPixel = endPixel;\r\n    this._reversePixels = reversePixels;\r\n    this._length = endPixel - startPixel;\r\n    this._alignToPixels = this.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = 0;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = 0;\r\n      this.bottom = this.height;\r\n    }\r\n    this.paddingLeft = 0;\r\n    this.paddingTop = 0;\r\n    this.paddingRight = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    this.chart.notifyPlugins(name, this.getContext());\r\n    callback(this.options[name], [this]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const tickOpts = this.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const options = this.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = this.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\r\n      this.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\r\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\r\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    this.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\r\n    const display = this._isVisible();\r\n    const isHorizontal = this.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = this.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = this.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && this.ticks.length) {\r\n        const {first, last, widest, highest} = this._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(this.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        this._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    this._handleMargins();\r\n    if (isHorizontal) {\r\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\r\n      this.height = minSize.height;\r\n    } else {\r\n      this.width = minSize.width;\r\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const {ticks: {align, padding}, position} = this.options;\r\n    const isRotated = this.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\r\n    if (this.isHorizontal()) {\r\n      const offsetLeft = this.getPixelForTick(0) - this.left;\r\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\r\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      this.paddingTop = paddingTop + padding;\r\n      this.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    if (this._margins) {\r\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\r\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\r\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\r\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    this.beforeTickToLabelConversion();\r\n    this.generateTickLabels(ticks);\r\n    let i, ilen;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n    this.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    let labelSizes = this._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = this.options.ticks.sampleSize;\r\n      let ticks = this.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest),\r\n      widths,\r\n      heights,\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    if (this._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = this._startPixel + decimal * this._length;\r\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const ticks = this.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\r\n    }\r\n    return this.$context ||\r\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\r\n  }\r\n  _tickSize() {\r\n    const optionTicks = this.options.ticks;\r\n    const rot = toRadians(this.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = this._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return this.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const axis = this.axis;\r\n    const chart = this.chart;\r\n    const options = this.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(this.bottom);\r\n      ty1 = this.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(this.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = this.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(this.right);\r\n      tx1 = this.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(this.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = this.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\r\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\r\n    for (i = 0; i < ticksLength; i += step) {\r\n      const optsAtIndex = grid.setContext(this.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = grid.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(this, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    this._ticksLength = ticksLength;\r\n    this._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const axis = this.axis;\r\n    const options = this.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = this.bottom - hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = this.top + hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\r\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = this._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      let backdrop;\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n        const height = labelSizes.heights[i];\r\n        const width = labelSizes.widths[i];\r\n        let top = y + textOffset - labelPadding.top;\r\n        let left = x - labelPadding.left;\r\n        switch (textBaseline) {\r\n        case 'middle':\r\n          top -= height / 2;\r\n          break;\r\n        case 'bottom':\r\n          top -= height;\r\n          break;\r\n        }\r\n        switch (textAlign) {\r\n        case 'center':\r\n          left -= width / 2;\r\n          break;\r\n        case 'right':\r\n          left -= width;\r\n          break;\r\n        }\r\n        backdrop = {\r\n          left,\r\n          top,\r\n          width: width + labelPadding.width,\r\n          height: height + labelPadding.height,\r\n          color: optsAtIndex.backdropColor,\r\n        };\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign,\r\n        textBaseline,\r\n        translation: [x, y],\r\n        backdrop,\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const {position, ticks} = this.options;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\r\n    const labelSizes = this._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        x = this.right + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += (widest / 2);\r\n        } else {\r\n          textAlign = 'right';\r\n          x += widest;\r\n        }\r\n      } else {\r\n        x = this.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = this.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        x = this.left + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x -= widest;\r\n        }\r\n      } else {\r\n        x = this.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = this.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    if (this.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = this.chart;\r\n    const position = this.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const grid = this.options.grid;\r\n    if (!this._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = this.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(this.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const grid = this.options.grid;\r\n    const ctx = this.ctx;\r\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  drawBorder() {\r\n    const {chart, ctx, options: {grid}} = this;\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    if (!axisWidth) {\r\n      return;\r\n    }\r\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\r\n    const borderValue = this._borderValue;\r\n    let x1, x2, y1, y2;\r\n    if (this.isHorizontal()) {\r\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\r\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\r\n      y1 = y2 = borderValue;\r\n    } else {\r\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\r\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\r\n      x1 = x2 = borderValue;\r\n    }\r\n    ctx.save();\r\n    ctx.lineWidth = borderOpts.borderWidth;\r\n    ctx.strokeStyle = borderOpts.borderColor;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n  drawLabels(chartArea) {\r\n    const optionTicks = this.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = this.ctx;\r\n    const area = this._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      if (item.backdrop) {\r\n        ctx.fillStyle = item.backdrop.color;\r\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\r\n      }\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    if (!this._isVisible()) {\r\n      return;\r\n    }\r\n    this.drawBackground();\r\n    this.drawGrid(chartArea);\r\n    this.drawBorder();\r\n    this.drawTitle();\r\n    this.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const opts = this.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\r\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw: (chartArea) => {\r\n          this.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw: (chartArea) => {\r\n        this.drawBackground();\r\n        this.drawGrid(chartArea);\r\n        this.drawTitle();\r\n      }\r\n    }, {\r\n      z: gz + 1,\r\n      draw: () => {\r\n        this.drawBorder();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw: (chartArea) => {\r\n        this.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const metas = this.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = this.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n  _maxDigits() {\r\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\r\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = this.register(proto);\r\n    }\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (this.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || this._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\r\n        this._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || this._getRegistryForType(item);\r\n          this._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args, filter) {\r\n    if (hook === 'beforeInit') {\r\n      this._init = this._createDescriptors(chart, true);\r\n      this._notify(this._init, chart, 'install');\r\n    }\r\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\r\n    const result = this._notify(descriptors, chart, hook, args);\r\n    if (hook === 'afterDestroy') {\r\n      this._notify(descriptors, chart, 'stop');\r\n      this._notify(this._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n    }\r\n  }\r\n  return plugins;\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, plugins, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (let i = 0; i < plugins.length; i++) {\r\n    const plugin = plugins[i];\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, plugin, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, plugin, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    if (!isObject(scaleConf)) {\r\n      return console.error(`Invalid scale configuration for scale: ${id}`);\r\n    }\r\n    if (scaleConf._proxy) {\r\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\r\n    }\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get platform() {\r\n    return this._config.platform;\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = Array.from(scopes);\r\n    if (array.length === 0) {\r\n      array.push(Object.create(null));\r\n    }\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nconst hasFunction = value => isObject(value)\r\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    const scriptable = isScriptable(prop);\r\n    const indexable = isIndexable(prop);\r\n    const value = (indexable || scriptable) && proxy[prop];\r\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\r\n      || (indexable && isArray(value))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.7.1\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction getCanvas(item) {\r\n  if (_isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nfunction moveNumericKeys(obj, start, move) {\r\n  const keys = Object.keys(obj);\r\n  for (const key of keys) {\r\n    const intKey = +key;\r\n    if (intKey >= start) {\r\n      const value = obj[key];\r\n      delete obj[key];\r\n      if (move > 0 || intKey > start) {\r\n        obj[intKey + move] = value;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\r\n  if (!inChartArea || e.type === 'mouseout') {\r\n    return null;\r\n  }\r\n  if (isClick) {\r\n    return lastEvent;\r\n  }\r\n  return e;\r\n}\r\nclass Chart {\r\n  constructor(item, userConfig) {\r\n    const config = this.config = new Config(userConfig);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\r\n    this.platform.updateConfig(config);\r\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._responsiveListeners = undefined;\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\r\n    this._dataChanges = [];\r\n    instances[this.id] = this;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(this, 'complete', onAnimationsComplete);\r\n    animator.listen(this, 'progress', onAnimationProgress);\r\n    this._initialize();\r\n    if (this.attached) {\r\n      this.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    this.notifyPlugins('beforeInit');\r\n    if (this.options.responsive) {\r\n      this.resize();\r\n    } else {\r\n      retinaScale(this, this.options.devicePixelRatio);\r\n    }\r\n    this.bindEvents();\r\n    this.notifyPlugins('afterInit');\r\n    return this;\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const options = this.options;\r\n    const canvas = this.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\r\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\r\n    const mode = this.width ? 'resize' : 'attach';\r\n    this.width = newSize.width;\r\n    this.height = newSize.height;\r\n    this._aspectRatio = this.aspectRatio;\r\n    if (!retinaScale(this, newRatio, true)) {\r\n      return;\r\n    }\r\n    this.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [this, newSize], this);\r\n    if (this.attached) {\r\n      if (this._doResize(mode)) {\r\n        this.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const options = this.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = this.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: this.ctx,\r\n          chart: this\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(this, scale, scale.options);\r\n      layouts.addBox(this, scale);\r\n    });\r\n  }\r\n  _updateMetasets() {\r\n    const metasets = this._metasets;\r\n    const numData = this.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    metasets.sort((a, b) => a.index - b.index);\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        this._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const {_metasets: metasets, data: {datasets}} = this;\r\n    if (metasets.length > datasets.length) {\r\n      delete this._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        this._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const newControllers = [];\r\n    const datasets = this.data.datasets;\r\n    let i, ilen;\r\n    this._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = this.getDatasetMeta(i);\r\n      const type = dataset.type || this.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        this._destroyDatasetMeta(i);\r\n        meta = this.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\r\n      meta.order = dataset.order || 0;\r\n      meta.index = i;\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = this.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(this, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    this._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    each(this.data.datasets, (dataset, datasetIndex) => {\r\n      this.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, this);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const config = this.config;\r\n    config.update();\r\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    const animsDisabled = this._animationsDisabled = !options.animation;\r\n    this._updateScales();\r\n    this._checkEventBindings();\r\n    this._updateHiddenIndices();\r\n    this._plugins.invalidate();\r\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = this.buildOrUpdateControllers();\r\n    this.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = this.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\r\n    this._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    this._updateDatasets(mode);\r\n    this.notifyPlugins('afterUpdate', {mode});\r\n    this._layers.sort(compare2Level('z', '_idx'));\r\n    const {_active, _lastEvent} = this;\r\n    if (_lastEvent) {\r\n      this._eventHandler(_lastEvent, true);\r\n    } else if (_active.length) {\r\n      this._updateHoverStyles(_active, _active, true);\r\n    }\r\n    this.render();\r\n  }\r\n  _updateScales() {\r\n    each(this.scales, (scale) => {\r\n      layouts.removeBox(this, scale);\r\n    });\r\n    this.ensureScalesHaveIDs();\r\n    this.buildOrUpdateScales();\r\n  }\r\n  _checkEventBindings() {\r\n    const options = this.options;\r\n    const existingEvents = new Set(Object.keys(this._listeners));\r\n    const newEvents = new Set(options.events);\r\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\r\n      this.unbindEvents();\r\n      this.bindEvents();\r\n    }\r\n  }\r\n  _updateHiddenIndices() {\r\n    const {_hiddenIndices} = this;\r\n    const changes = this._getUniformDataChanges() || [];\r\n    for (const {method, start, count} of changes) {\r\n      const move = method === '_removeElements' ? -count : count;\r\n      moveNumericKeys(_hiddenIndices, start, move);\r\n    }\r\n  }\r\n  _getUniformDataChanges() {\r\n    const _dataChanges = this._dataChanges;\r\n    if (!_dataChanges || !_dataChanges.length) {\r\n      return;\r\n    }\r\n    this._dataChanges = [];\r\n    const datasetCount = this.data.datasets.length;\r\n    const makeSet = (idx) => new Set(\r\n      _dataChanges\r\n        .filter(c => c[0] === idx)\r\n        .map((c, i) => i + ',' + c.splice(1).join(','))\r\n    );\r\n    const changeSet = makeSet(0);\r\n    for (let i = 1; i < datasetCount; i++) {\r\n      if (!setsEqual(changeSet, makeSet(i))) {\r\n        return;\r\n      }\r\n    }\r\n    return Array.from(changeSet)\r\n      .map(c => c.split(','))\r\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\r\n  }\r\n  _updateLayout(minPadding) {\r\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(this, this.width, this.height, minPadding);\r\n    const area = this.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    this._layers = [];\r\n    each(this.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      this._layers.push(...box._layers());\r\n    }, this);\r\n    this._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    this.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this.getDatasetMeta(i).controller.configure();\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const meta = this.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(this)) {\r\n      if (this.attached && !animator.running(this)) {\r\n        animator.start(this);\r\n      }\r\n    } else {\r\n      this.draw();\r\n      onAnimationsComplete({chart: this});\r\n    }\r\n  }\r\n  draw() {\r\n    let i;\r\n    if (this._resizeBeforeDraw) {\r\n      const {width, height} = this._resizeBeforeDraw;\r\n      this._resize(width, height);\r\n      this._resizeBeforeDraw = null;\r\n    }\r\n    this.clear();\r\n    if (this.width <= 0 || this.height <= 0) {\r\n      return;\r\n    }\r\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = this._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const metasets = this._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = this.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      this._drawDataset(metasets[i]);\r\n    }\r\n    this.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const ctx = this.ctx;\r\n    const clip = meta._clip;\r\n    const useClip = !clip.disabled;\r\n    const area = this.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (useClip) {\r\n      clipArea(ctx, {\r\n        left: clip.left === false ? 0 : area.left - clip.left,\r\n        right: clip.right === false ? this.width : area.right + clip.right,\r\n        top: clip.top === false ? 0 : area.top - clip.top,\r\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\r\n      });\r\n    }\r\n    meta.controller.draw();\r\n    if (useClip) {\r\n      unclipArea(ctx);\r\n    }\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    const metasets = this._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n      metasets.push(meta);\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateVisibility(datasetIndex, dataIndex, visible) {\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    if (defined(dataIndex)) {\r\n      meta.data[dataIndex].hidden = !visible;\r\n      this.update();\r\n    } else {\r\n      this.setDatasetVisibility(datasetIndex, visible);\r\n      anims.update(meta, {visible});\r\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n    }\r\n  }\r\n  hide(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, false);\r\n  }\r\n  show(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const meta = this._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n    }\r\n    delete this._metasets[datasetIndex];\r\n  }\r\n  _stop() {\r\n    let i, ilen;\r\n    this.stop();\r\n    animator.remove(this);\r\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._destroyDatasetMeta(i);\r\n    }\r\n  }\r\n  destroy() {\r\n    this.notifyPlugins('beforeDestroy');\r\n    const {canvas, ctx} = this;\r\n    this._stop();\r\n    this.config.clearCache();\r\n    if (canvas) {\r\n      this.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      this.platform.releaseContext(ctx);\r\n      this.canvas = null;\r\n      this.ctx = null;\r\n    }\r\n    this.notifyPlugins('destroy');\r\n    delete instances[this.id];\r\n    this.notifyPlugins('afterDestroy');\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    this.bindUserEvents();\r\n    if (this.options.responsive) {\r\n      this.bindResponsiveEvents();\r\n    } else {\r\n      this.attached = true;\r\n    }\r\n  }\r\n  bindUserEvents() {\r\n    const listeners = this._listeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const listener = (e, x, y) => {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      this._eventHandler(e);\r\n    };\r\n    each(this.options.events, (type) => _add(type, listener));\r\n  }\r\n  bindResponsiveEvents() {\r\n    if (!this._responsiveListeners) {\r\n      this._responsiveListeners = {};\r\n    }\r\n    const listeners = this._responsiveListeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(this, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    const listener = (width, height) => {\r\n      if (this.canvas) {\r\n        this.resize(width, height);\r\n      }\r\n    };\r\n    let detached;\r\n    const attached = () => {\r\n      _remove('attach', attached);\r\n      this.attached = true;\r\n      this.resize();\r\n      _add('resize', listener);\r\n      _add('detach', detached);\r\n    };\r\n    detached = () => {\r\n      this.attached = false;\r\n      _remove('resize', listener);\r\n      this._stop();\r\n      this._resize(0, 0);\r\n      _add('attach', attached);\r\n    };\r\n    if (platform.isAttached(this.canvas)) {\r\n      attached();\r\n    } else {\r\n      detached();\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    each(this._listeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._listeners = {};\r\n    each(this._responsiveListeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._responsiveListeners = undefined;\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const lastActive = this._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      this._active = active;\r\n      this._lastEvent = null;\r\n      this._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const hoverOptions = this.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const args = {\r\n      event: e,\r\n      replay,\r\n      cancelable: true,\r\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\r\n    };\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\r\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n    const changed = this._handleEvent(e, replay, args.inChartArea);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterEvent', args, eventFilter);\r\n    if (changed || args.changed) {\r\n      this.render();\r\n    }\r\n    return this;\r\n  }\r\n  _handleEvent(e, replay, inChartArea) {\r\n    const {_active: lastActive = [], options} = this;\r\n    const useFinalPosition = replay;\r\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\r\n    const isClick = _isClickEvent(e);\r\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\r\n    if (inChartArea) {\r\n      this._lastEvent = null;\r\n      callback(options.onHover, [e, active, this], this);\r\n      if (isClick) {\r\n        callback(options.onClick, [e, active, this], this);\r\n      }\r\n    }\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    this._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const hoverOptions = this.options.hover;\r\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction clipArc(ctx, element, endAngle) {\r\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\nfunction rThetaToXY(r, theta, x, y) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\nfunction pathArc(ctx, element, offset, spacing, end) {\r\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\r\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\r\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\r\n  let spacingOffset = 0;\r\n  const alpha = end - start;\r\n  if (spacing) {\r\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\r\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\r\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\r\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\r\n    spacingOffset = (alpha - adjustedAngle) / 2;\r\n  }\r\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\r\n  const angleOffset = (alpha - beta) / 2;\r\n  const startAngle = start + angleOffset + spacingOffset;\r\n  const endAngle = end - angleOffset - spacingOffset;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\r\n  if (outerEnd > 0) {\r\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n  }\r\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n  ctx.lineTo(p4.x, p4.y);\r\n  if (innerEnd > 0) {\r\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n  }\r\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\r\n  if (innerStart > 0) {\r\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n  }\r\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n  ctx.lineTo(p8.x, p8.y);\r\n  if (outerStart > 0) {\r\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n  }\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element, offset, spacing) {\r\n  const {fullCircles, startAngle, circumference} = element;\r\n  let endAngle = element.endAngle;\r\n  if (fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\r\n    for (let i = 0; i < fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n    if (!isNaN(circumference)) {\r\n      endAngle = startAngle + circumference % TAU;\r\n      if (circumference % TAU === 0) {\r\n        endAngle += TAU;\r\n      }\r\n    }\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle);\r\n  ctx.fill();\r\n  return endAngle;\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    clipArc(ctx, element, startAngle + TAU);\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\r\n  const {options} = element;\r\n  const {borderWidth, borderJoinStyle} = options;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = borderWidth * 2;\r\n    ctx.lineJoin = borderJoinStyle || 'round';\r\n  } else {\r\n    ctx.lineWidth = borderWidth;\r\n    ctx.lineJoin = borderJoinStyle || 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element, endAngle);\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle);\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const rAdjust = this.options.spacing / 2;\r\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\r\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference',\r\n    ], useFinalPosition);\r\n    const {offset, spacing} = this.options;\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const {options, circumference} = this;\r\n    const offset = (options.offset || 0) / 2;\r\n    const spacing = (options.spacing || 0) / 2;\r\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\r\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    let radiusOffset = 0;\r\n    if (offset) {\r\n      radiusOffset = offset / 2;\r\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\r\n      if (this.circumference >= PI) {\r\n        radiusOffset = offset;\r\n      }\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\r\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderJoinStyle: undefined,\r\n  borderRadius: 0,\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  spacing: 0,\r\n  angle: undefined,\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && !line.options.segment) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._chart = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    this._datasetIndex = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea, indexAxis) {\r\n    const options = this.options;\r\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\r\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\r\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\r\n      this._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    this._points = points;\r\n    delete this._segments;\r\n    delete this._path;\r\n    this._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const options = this.options;\r\n    const value = point[property];\r\n    const points = this.points;\r\n    const segments = _boundSegments(this, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const segments = this.segments;\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    let loop = this._loop;\r\n    start = start || 0;\r\n    count = count || (this.points.length - start);\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const options = this.options || {};\r\n    const points = this.points || [];\r\n    if (points.length && options.borderWidth) {\r\n      ctx.save();\r\n      draw(ctx, this, start, count);\r\n      ctx.restore();\r\n    }\r\n    if (this.animated) {\r\n      this._pointsUpdated = false;\r\n      this._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx, area) {\r\n    const options = this.options;\r\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, this.x, this.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : _limitValue(value, min, max);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = bar.borderSkipped;\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = bar.borderSkipped;\r\n  const enableBorder = enableBorderRadius || isObject(value);\r\n  return {\r\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\r\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nfunction inflateRect(rect, amount, refRect = {}) {\r\n  const x = rect.x !== refRect.x ? -amount : 0;\r\n  const y = rect.y !== refRect.y ? -amount : 0;\r\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\r\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\r\n  return {\r\n    x: rect.x + x,\r\n    y: rect.y + y,\r\n    w: rect.w + w,\r\n    h: rect.h + h,\r\n    radius: rect.radius\r\n  };\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.inflateAmount = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\r\n      ctx.clip();\r\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\r\n      ctx.fillStyle = borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  inflateAmount: 'auto',\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n  const decimated = [];\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[endIndex];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {value: data});\r\n  }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count;\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n  return {start, count};\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (meta.type !== 'line') {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      const threshold = options.threshold || 4 * availableWidth;\r\n      if (count <= threshold) {\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\nfunction decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    if (fill[0] === '-' || fill[0] === '+') {\r\n      target = index + target;\r\n    }\r\n    if (target === index || target < 0 || target >= count) {\r\n      return false;\r\n    }\r\n    return target;\r\n  }\r\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  let target = null;\r\n  let horizontal;\r\n  if (fill === 'start') {\r\n    target = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    target = scale.top;\r\n  } else if (isObject(fill)) {\r\n    target = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    target = scale.getBasePixel();\r\n  }\r\n  if (isNumberFinite(target)) {\r\n    horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? target : null,\r\n      y: horizontal ? null : target\r\n    };\r\n  }\r\n  return null;\r\n}\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const target = [];\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const end = options.reverse ? scale.min : scale.max;\r\n  let i, center, value;\r\n  if (fill === 'start') {\r\n    value = start;\r\n  } else if (fill === 'end') {\r\n    value = end;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  if (options.grid.circular) {\r\n    center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction findSegmentEnd(start, end, points) {\r\n  for (;end > start; end--) {\r\n    const point = points[end];\r\n    if (!isNaN(point.x) && !isNaN(point.y)) {\r\n      break;\r\n    }\r\n  }\r\n  return end;\r\n}\r\nfunction pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach(({start, end}) => {\r\n    end = findSegmentEnd(start, end, linePoints);\r\n    const first = linePoints[start];\r\n    const last = linePoints[end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction buildStackLine(source) {\r\n  const {scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(scale, index);\r\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nfunction getLinesBelow(scale, index) {\r\n  const below = [];\r\n  const metas = scale.getMatchingVisibleMetas('line');\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (!meta.hidden) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (_isBetween(pointValue, firstValue, lastValue)) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\nfunction getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return buildStackLine(source);\r\n  }\r\n  if (fill === 'shape') {\r\n    return true;\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return createBoundaryLine(boundary, line);\r\n}\r\nfunction createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _clip(ctx, target, clipY) {\r\n  const {segments, points} = target;\r\n  let first = true;\r\n  let lineLoop = false;\r\n  ctx.beginPath();\r\n  for (const segment of segments) {\r\n    const {start, end} = segment;\r\n    const firstPoint = points[start];\r\n    const lastPoint = points[findSegmentEnd(start, end, points)];\r\n    if (first) {\r\n      ctx.moveTo(firstPoint.x, firstPoint.y);\r\n      first = false;\r\n    } else {\r\n      ctx.lineTo(firstPoint.x, clipY);\r\n      ctx.lineTo(firstPoint.x, firstPoint.y);\r\n    }\r\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\r\n    if (lineLoop) {\r\n      ctx.closePath();\r\n    } else {\r\n      ctx.lineTo(lastPoint.x, clipY);\r\n    }\r\n  }\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (const segment of segments) {\r\n    let {start, end} = segment;\r\n    end = findSegmentEnd(start, end, points);\r\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[start],\r\n        end: points[end]\r\n      });\r\n      continue;\r\n    }\r\n    const targetSegments = _boundSegments(target, bounds);\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\nfunction _fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    const notShape = target !== true;\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    let loop;\r\n    if (notShape) {\r\n      if (lineLoop) {\r\n        ctx.closePath();\r\n      } else {\r\n        interpolatedLineTo(ctx, target, end, property);\r\n      }\r\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n      loop = lineLoop && targetLoop;\r\n      if (!loop) {\r\n        interpolatedLineTo(ctx, target, start, property);\r\n      }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    _clip(ctx, target, area.top);\r\n    _fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    _clip(ctx, target, area.bottom);\r\n  }\r\n  _fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nfunction drawfill(ctx, source, area) {\r\n  const target = getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\nvar plugin_filler = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n  beforeDraw(chart, _args, options) {\r\n    const draw = options.drawTime === 'beforeDraw';\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (!source) {\r\n        continue;\r\n      }\r\n      source.line.updateControlPoints(area, source.axis);\r\n      if (draw) {\r\n        drawfill(chart.ctx, source, area);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    if (options.drawTime !== 'beforeDatasetsDraw') {\r\n      return;\r\n    }\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (source) {\r\n        drawfill(chart.ctx, source, chart.chartArea);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n    drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins;\r\n    this.setDimensions();\r\n    this.buildLabels();\r\n    this.fit();\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = this._margins.left;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = this._margins.top;\r\n      this.bottom = this.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const labelOpts = this.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\r\n    }\r\n    if (this.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    this.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const {options, ctx} = this;\r\n    if (!options.display) {\r\n      this.width = this.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (this.isHorizontal()) {\r\n      width = this.maxWidth;\r\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = this.maxHeight;\r\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\r\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const lineWidths = this.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const columnSizes = this.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let col = 0;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    if (!this.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\r\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n        }\r\n        hitbox.top += this.top + titleHeight + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += this.left + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    if (this.options.display) {\r\n      const ctx = this.ctx;\r\n      clipArea(ctx, this);\r\n      this._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    this.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxWidth * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPoint(ctx, drawOptions, centerX, centerY);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n        ctx.beginPath();\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\r\n      });\r\n    };\r\n    const isHorizontal = this.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\r\n        y: this.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: this.left + padding,\r\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(this.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\r\n      ctx.fillStyle = legendItem.fontColor || fontColor;\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + halfFontSize + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(this.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > this.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > this.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(this.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const opts = this.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const ctx = this.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = this.left;\r\n    let maxWidth = this.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...this.lineWidths);\r\n      y = this.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\r\n    } else {\r\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    let i, hitBox, lh;\r\n    if (_isBetween(x, this.left, this.right)\r\n      && _isBetween(y, this.top, this.bottom)) {\r\n      lh = this.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\r\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\r\n          return this.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const opts = this.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove') {\r\n      const previous = this._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, this], this);\r\n      }\r\n      this._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, this], this);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, this], this);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: 0,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const opts = this.options;\r\n    this.left = 0;\r\n    this.top = 0;\r\n    if (!opts.display) {\r\n      this.width = this.height = this.right = this.bottom = 0;\r\n      return;\r\n    }\r\n    this.width = this.right = maxWidth;\r\n    this.height = this.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    this._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\r\n    if (this.isHorizontal()) {\r\n      this.height = textSize;\r\n    } else {\r\n      this.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + this._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst map = new WeakMap();\r\nvar plugin_subtitle = {\r\n  id: 'subtitle',\r\n  start(chart, _args, options) {\r\n    const title = new Title({\r\n      ctx: chart.ctx,\r\n      options,\r\n      chart\r\n    });\r\n    layouts.configure(chart, title, options);\r\n    layouts.addBox(chart, title);\r\n    map.set(chart, title);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, map.get(chart));\r\n    map.delete(chart);\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = map.get(chart);\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'normal',\r\n    },\r\n    fullSize: true,\r\n    padding: 0,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 1500\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip.chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\r\n  } else if (xAlign === 'right') {\r\n    x += Math.max(topRight, bottomRight) + caretSize;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return createContext(parent, {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.chart = config.chart || config._chart;\r\n    this._chart = this.chart;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const cached = this._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = this.chart;\r\n    const options = this.options.setContext(this.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(this.chart, opts);\r\n    if (opts._cacheable) {\r\n      this._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    return this.$context ||\r\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\r\n    const title = callbacks.title.apply(this, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const active = this._active;\r\n    const data = this.chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(this, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\r\n    });\r\n    this.labelColors = labelColors;\r\n    this.labelPointStyles = labelPointStyles;\r\n    this.labelTextColors = labelTextColors;\r\n    this.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const options = this.options.setContext(this.getContext());\r\n    const active = this._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (this.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(this, active, this._eventPosition);\r\n      tooltipItems = this._createItems(options);\r\n      this.title = this.getTitle(tooltipItems, options);\r\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\r\n      this.body = this.getBody(tooltipItems, options);\r\n      this.afterBody = this.getAfterBody(tooltipItems, options);\r\n      this.footer = this.getFooter(tooltipItems, options);\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\r\n      this.xAlign = alignment.xAlign;\r\n      this.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    this._tooltipItems = tooltipItems;\r\n    this.$context = undefined;\r\n    if (properties) {\r\n      this._resolveAnimations().update(this, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {caretSize, cornerRadius} = options;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const title = this.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const labelColors = this.labelColors[i];\r\n    const labelPointStyle = this.labelPointStyles[i];\r\n    const {boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(this, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.lineWidth = labelColors.borderWidth || 1;\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.setLineDash(labelColors.borderDash || []);\r\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\r\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n    ctx.fillStyle = this.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const {body} = this;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(this.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = this.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(this.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const footer = this.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + topLeft, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - topRight, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - bottomRight);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + bottomLeft, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + topLeft);\r\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const chart = this.chart;\r\n    const anims = this.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, this._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        this.xAlign = alignment.xAlign;\r\n        this.yAlign = alignment.yAlign;\r\n        this.width = size.width;\r\n        this.height = size.height;\r\n        this.caretX = position.x;\r\n        this.caretY = position.y;\r\n        this._resolveAnimations().update(this, point);\r\n      }\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options.setContext(this.getContext());\r\n    let opacity = this.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    this._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n    const pt = {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      this.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      this.drawTitle(pt, ctx, options);\r\n      this.drawBody(pt, ctx, options);\r\n      this.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const lastActive = this._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = this._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      this._active = active;\r\n      this._eventPosition = eventPosition;\r\n      this._ignoreReplayEvents = true;\r\n      this.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay, inChartArea = true) {\r\n    if (replay && this._ignoreReplayEvents) {\r\n      return false;\r\n    }\r\n    this._ignoreReplayEvents = false;\r\n    const options = this.options;\r\n    const lastActive = this._active || [];\r\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\r\n    const positionChanged = this._positionChanged(active, e);\r\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      this._active = active;\r\n      if (options.enabled || options.external) {\r\n        this._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        this.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, replay, inChartArea) {\r\n    const options = this.options;\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n    if (options.reverse) {\r\n      active.reverse();\r\n    }\r\n    return active;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    const args = {\r\n      tooltip\r\n    };\r\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (tooltip) {\r\n      tooltip.draw(chart.ctx);\r\n    }\r\n    chart.notifyPlugins('afterTooltipDraw', args);\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    boxPadding: 0,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor,\r\n          borderWidth: options.borderWidth,\r\n          borderDash: options.borderDash,\r\n          borderDashOffset: options.borderDashOffset,\r\n          borderRadius: 0,\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: plugin_filler,\r\nLegend: plugin_legend,\r\nSubTitle: plugin_subtitle,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index, addedLabels) => {\r\n  if (typeof raw === 'string') {\r\n    index = labels.push(raw) - 1;\r\n    addedLabels.unshift({index, label: raw});\r\n  } else if (isNaN(raw)) {\r\n    index = null;\r\n  }\r\n  return index;\r\n};\r\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index, addedLabels);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n    this._addedLabels = [];\r\n  }\r\n  init(scaleOptions) {\r\n    const added = this._addedLabels;\r\n    if (added.length) {\r\n      const labels = this.getLabels();\r\n      for (const {index, label} of added) {\r\n        if (labels[index] === label) {\r\n          labels.splice(index, 1);\r\n        }\r\n      }\r\n      this._addedLabels = [];\r\n    }\r\n    super.init(scaleOptions);\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this.getMinMax(true);\r\n    if (this.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = this.getLabels().length - 1;\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const offset = this.options.offset;\r\n    const ticks = [];\r\n    let labels = this.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    this._startValue = this.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const labels = this.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    super.configure();\r\n    if (!this.isHorizontal()) {\r\n      this._reversePixels = !this._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    if (typeof value !== 'number') {\r\n      value = this.parse(value);\r\n    }\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  if (bounds === 'ticks') {\r\n    niceMin = Math.floor(rmin / spacing) * spacing;\r\n    niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  } else {\r\n    niceMin = rmin;\r\n    niceMax = rmax;\r\n  }\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  const decimalPlaces = Math.max(\r\n    _decimalPlaces(spacing),\r\n    _decimalPlaces(niceMin)\r\n  );\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    if (includeBounds && niceMin !== min) {\r\n      ticks.push({value: min});\r\n      if (niceMin < min) {\r\n        j++;\r\n      }\r\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\r\n        j++;\r\n      }\r\n    } else if (niceMin < min) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined && includeBounds && niceMax !== max) {\r\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else if (!maxDefined || niceMax === max) {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\r\n  const rad = toRadians(minRotation);\r\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\r\n  const length = 0.75 * minSpacing * ('' + value).length;\r\n  return Math.min(minSpacing / ratio, length);\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {beginAtZero} = this.options;\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      let offset = 1;\r\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\r\n        offset = Math.abs(max * 0.05);\r\n      }\r\n      setMax(max + offset);\r\n      if (!beginAtZero) {\r\n        setMin(min - offset);\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const tickOpts = this.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\r\n      if (maxTicks > 1000) {\r\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\r\n        maxTicks = 1000;\r\n      }\r\n    } else {\r\n      maxTicks = this.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = this.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      bounds: opts.bounds,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n      maxDigits: this._maxDigits(),\r\n      horizontal: this.isHorizontal(),\r\n      minRotation: tickOpts.minRotation || 0,\r\n      includeBounds: tickOpts.includeBounds !== false\r\n    };\r\n    const dataRange = this._range || this;\r\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const ticks = this.ticks;\r\n    let start = this.min;\r\n    let end = this.max;\r\n    super.configure();\r\n    if (this.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    this._startValue = start;\r\n    this._endValue = end;\r\n    this._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? min : 0;\r\n    this.max = isNumberFinite(max) ? max : 1;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const horizontal = this.isHorizontal();\r\n    const length = horizontal ? this.width : this.height;\r\n    const minRotation = toRadians(this.options.ticks.minRotation);\r\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\r\n    const tickFont = this._resolveTickFontOptions(0);\r\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (this.options.beginAtZero) {\r\n      this._zero = true;\r\n    }\r\n    this.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let min = this.min;\r\n    let max = this.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const generationOptions = {\r\n      min: this._userMin,\r\n      max: this._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, this);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined\r\n      ? '0'\r\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n  configure() {\r\n    const start = this.min;\r\n    super.configure();\r\n    this._startValue = log10(start);\r\n    this._valueRange = log10(this.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    if (value === undefined || value === 0) {\r\n      value = this.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return this.getPixelForDecimal(value === this.min\r\n      ? 0\r\n      : (log10(value) - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const decimal = this.getDecimalForPixel(pixel);\r\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, font, label) {\r\n  label = isArray(label) ? label : [label];\r\n  return {\r\n    w: _longestText(ctx, font.string, label),\r\n    h: label.length * font.lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const orig = {\r\n    l: scale.left + scale._padding.left,\r\n    r: scale.right - scale._padding.right,\r\n    t: scale.top + scale._padding.top,\r\n    b: scale.bottom - scale._padding.bottom\r\n  };\r\n  const limits = Object.assign({}, orig);\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const pointLabelOpts = scale.options.pointLabels;\r\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\r\n    padding[i] = opts.padding;\r\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\r\n    const plFont = toFont(opts.font);\r\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\r\n    const angle = Math.round(toDegrees(angleRadians));\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\r\n  }\r\n  scale.setCenterPoint(\r\n    orig.l - limits.l,\r\n    limits.r - orig.r,\r\n    orig.t - limits.t,\r\n    limits.b - orig.b\r\n  );\r\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\r\n}\r\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\r\n  const sin = Math.abs(Math.sin(angle));\r\n  const cos = Math.abs(Math.cos(angle));\r\n  let x = 0;\r\n  let y = 0;\r\n  if (hLimits.start < orig.l) {\r\n    x = (orig.l - hLimits.start) / sin;\r\n    limits.l = Math.min(limits.l, orig.l - x);\r\n  } else if (hLimits.end > orig.r) {\r\n    x = (hLimits.end - orig.r) / sin;\r\n    limits.r = Math.max(limits.r, orig.r + x);\r\n  }\r\n  if (vLimits.start < orig.t) {\r\n    y = (orig.t - vLimits.start) / cos;\r\n    limits.t = Math.min(limits.t, orig.t - y);\r\n  } else if (vLimits.end > orig.b) {\r\n    y = (vLimits.end - orig.b) / cos;\r\n    limits.b = Math.max(limits.b, orig.b + y);\r\n  }\r\n}\r\nfunction buildPointLabelItems(scale, labelSizes, padding) {\r\n  const items = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const opts = scale.options;\r\n  const extra = getTickBackdropHeight(opts) / 2;\r\n  const outerDistance = scale.drawingArea;\r\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\r\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\r\n    const size = labelSizes[i];\r\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\r\n    items.push({\r\n      x: pointLabelPosition.x,\r\n      y,\r\n      textAlign,\r\n      left,\r\n      top: y,\r\n      right: left + size.w,\r\n      bottom: y + size.h\r\n    });\r\n  }\r\n  return items;\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction leftForTextAlign(x, w, align) {\r\n  if (align === 'right') {\r\n    x -= w;\r\n  } else if (align === 'center') {\r\n    x -= (w / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction yForAngle(y, h, angle) {\r\n  if (angle === 90 || angle === 270) {\r\n    y -= (h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    y -= h;\r\n  }\r\n  return y;\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction createPointLabelContext(parent, index, label) {\r\n  return createContext(parent, {\r\n    label,\r\n    index,\r\n    type: 'pointLabel'\r\n  });\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\r\n    const w = this.width = this.maxWidth - padding.width;\r\n    const h = this.height = this.maxHeight - padding.height;\r\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\r\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\r\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(false);\r\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\r\n    this._pointLabels = this.getLabels()\r\n      .map((value, index) => {\r\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\r\n        return label || label === 0 ? label : '';\r\n      })\r\n      .filter((v, i) => this.chart.getDataVisibility(i));\r\n  }\r\n  fit() {\r\n    const opts = this.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(this);\r\n    } else {\r\n      this.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\r\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\r\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = this.drawingArea / (this.max - this.min);\r\n    if (this.options.reverse) {\r\n      return (this.max - value) * scalingFactor;\r\n    }\r\n    return (value - this.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\r\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\r\n  }\r\n  getPointLabelContext(index) {\r\n    const pointLabels = this._pointLabels || [];\r\n    if (index >= 0 && index < pointLabels.length) {\r\n      const pointLabel = pointLabels[index];\r\n      return createPointLabelContext(this.getContext(), index, pointLabel);\r\n    }\r\n  }\r\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\r\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const {backgroundColor, grid: {circular}} = this.options;\r\n    if (backgroundColor) {\r\n      const ctx = this.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = this._pointLabels.length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(this, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      this.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = this.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\r\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = labelCount - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\r\n        position = this.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.xCenter, this.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawBorder() {}\r\n  drawLabels() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = this.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(this.xCenter, this.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    this.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        ctx.font = tickFont.string;\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5,\r\n    centerPointLabels: false\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const {parser, round, isoWeekday} = scale._parseOpts;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n    this._parseOpts = undefined;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    this._parseOpts = {\r\n      parser: time.parser,\r\n      round: time.round,\r\n      isoWeekday: time.isoWeekday\r\n    };\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const options = this.options;\r\n    const adapter = this._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(this._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(this.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    this.min = Math.min(min, max - 1);\r\n    this.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      this.min = this._userMin || timestamps[0];\r\n      this.max = this._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\r\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\r\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\r\n      : determineMajorUnit(this._unit);\r\n    this.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\r\n  }\r\n  initOffsets(timestamps) {\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (this.options.offset && timestamps.length) {\r\n      first = this.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const adapter = this._adapter;\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const adapter = this._adapter;\r\n    const timeOpts = this.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const options = this.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = this._unit;\r\n    const majorUnit = this._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForValue(value);\r\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return this.min + pos * (this.max - this.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const ticksOpts = this.options.ticks;\r\n    const tickLabelWidth = this.ctx.measureText(label).width;\r\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = this._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const timeOpts = this.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\r\n    const size = this._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    let timestamps = this._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    if (this._normalized && metas.length) {\r\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\r\n    }\r\n    return (this._cache.data = this.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const timestamps = this._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = this.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(this, labels[i]));\r\n    }\r\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let lo = 0;\r\n  let hi = table.length - 1;\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    if (val >= table[lo].pos && val <= table[hi].pos) {\r\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\r\n    }\r\n    ({pos: prevSource, time: prevTarget} = table[lo]);\r\n    ({pos: nextSource, time: nextTarget} = table[hi]);\r\n  } else {\r\n    if (val >= table[lo].time && val <= table[hi].time) {\r\n      ({lo, hi} = _lookupByKey(table, 'time', val));\r\n    }\r\n    ({time: prevSource, pos: prevTarget} = table[lo]);\r\n    ({time: nextSource, pos: nextTarget} = table[hi]);\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._minPos = undefined;\r\n    this._tableRange = undefined;\r\n  }\r\n  initOffsets() {\r\n    const timestamps = this._getTimestampsForTable();\r\n    const table = this._table = this.buildLookupTable(timestamps);\r\n    this._minPos = interpolate(table, this.min);\r\n    this._tableRange = interpolate(table, this.max) - this._minPos;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const {min, max} = this;\r\n    const items = [];\r\n    const table = [];\r\n    let i, ilen, prev, curr, next;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr >= min && curr <= max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    if (items.length < 2) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      next = items[i + 1];\r\n      prev = items[i - 1];\r\n      curr = items[i];\r\n      if (Math.round((next + prev) / 2) !== curr) {\r\n        table.push({time: curr, pos: i / (ilen - 1)});\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n  _getTimestampsForTable() {\r\n    let timestamps = this._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = this.getDataTimestamps();\r\n    const label = this.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = this.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = this._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getDecimalForValue(value) {\r\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nconst registerables = [\r\n  controllers,\r\n  elements,\r\n  plugins,\r\n  scales,\r\n];\r\n\r\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\r\n"]},"metadata":{},"sourceType":"module"}