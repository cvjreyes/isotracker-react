{"ast":null,"code":"var COLUMN_ORDER_PREFIX = 'sort';\n/**\n * Get CSS classes which should be added to particular column header.\n *\n * @param {object} columnStatesManager Instance of column state manager.\n * @param {number} column Visual column index.\n * @param {boolean} showSortIndicator Indicates if indicator should be shown for the particular column.\n * @returns {Array} Array of CSS classes.\n */\n\nexport function getClassesToAdd(columnStatesManager, column, showSortIndicator) {\n  var cssClasses = [];\n\n  if (showSortIndicator === false) {\n    return cssClasses;\n  }\n\n  if (columnStatesManager.isColumnSorted(column) && columnStatesManager.getNumberOfSortedColumns() > 1) {\n    cssClasses.push(\"\".concat(COLUMN_ORDER_PREFIX, \"-\").concat(columnStatesManager.getIndexOfColumnInSortQueue(column) + 1));\n  }\n\n  return cssClasses;\n}\n/**\n * Get CSS classes which should be removed from column header.\n *\n * @param {HTMLElement} htmlElement An element to process.\n * @returns {Array} Array of CSS classes.\n */\n\nexport function getClassesToRemove(htmlElement) {\n  var cssClasses = htmlElement.className.split(' ');\n  var sortSequenceRegExp = new RegExp(\"^\".concat(COLUMN_ORDER_PREFIX, \"-[0-9]{1,2}$\"));\n  return cssClasses.filter(function (cssClass) {\n    return sortSequenceRegExp.test(cssClass);\n  });\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/multiColumnSorting/domHelpers.mjs"],"names":["COLUMN_ORDER_PREFIX","getClassesToAdd","columnStatesManager","column","showSortIndicator","cssClasses","isColumnSorted","getNumberOfSortedColumns","push","concat","getIndexOfColumnInSortQueue","getClassesToRemove","htmlElement","className","split","sortSequenceRegExp","RegExp","filter","cssClass","test"],"mappings":"AAKA,IAAIA,mBAAmB,GAAG,MAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,eAAT,CAAyBC,mBAAzB,EAA8CC,MAA9C,EAAsDC,iBAAtD,EAAyE;AAC9E,MAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAID,iBAAiB,KAAK,KAA1B,EAAiC;AAC/B,WAAOC,UAAP;AACD;;AAED,MAAIH,mBAAmB,CAACI,cAApB,CAAmCH,MAAnC,KAA8CD,mBAAmB,CAACK,wBAApB,KAAiD,CAAnG,EAAsG;AACpGF,IAAAA,UAAU,CAACG,IAAX,CAAgB,GAAGC,MAAH,CAAUT,mBAAV,EAA+B,GAA/B,EAAoCS,MAApC,CAA2CP,mBAAmB,CAACQ,2BAApB,CAAgDP,MAAhD,IAA0D,CAArG,CAAhB;AACD;;AAED,SAAOE,UAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASM,kBAAT,CAA4BC,WAA5B,EAAyC;AAC9C,MAAIP,UAAU,GAAGO,WAAW,CAACC,SAAZ,CAAsBC,KAAtB,CAA4B,GAA5B,CAAjB;AACA,MAAIC,kBAAkB,GAAG,IAAIC,MAAJ,CAAW,IAAIP,MAAJ,CAAWT,mBAAX,EAAgC,cAAhC,CAAX,CAAzB;AACA,SAAOK,UAAU,CAACY,MAAX,CAAkB,UAAUC,QAAV,EAAoB;AAC3C,WAAOH,kBAAkB,CAACI,IAAnB,CAAwBD,QAAxB,CAAP;AACD,GAFM,CAAP;AAGD","sourcesContent":["import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nvar COLUMN_ORDER_PREFIX = 'sort';\n/**\n * Get CSS classes which should be added to particular column header.\n *\n * @param {object} columnStatesManager Instance of column state manager.\n * @param {number} column Visual column index.\n * @param {boolean} showSortIndicator Indicates if indicator should be shown for the particular column.\n * @returns {Array} Array of CSS classes.\n */\n\nexport function getClassesToAdd(columnStatesManager, column, showSortIndicator) {\n  var cssClasses = [];\n\n  if (showSortIndicator === false) {\n    return cssClasses;\n  }\n\n  if (columnStatesManager.isColumnSorted(column) && columnStatesManager.getNumberOfSortedColumns() > 1) {\n    cssClasses.push(\"\".concat(COLUMN_ORDER_PREFIX, \"-\").concat(columnStatesManager.getIndexOfColumnInSortQueue(column) + 1));\n  }\n\n  return cssClasses;\n}\n/**\n * Get CSS classes which should be removed from column header.\n *\n * @param {HTMLElement} htmlElement An element to process.\n * @returns {Array} Array of CSS classes.\n */\n\nexport function getClassesToRemove(htmlElement) {\n  var cssClasses = htmlElement.className.split(' ');\n  var sortSequenceRegExp = new RegExp(\"^\".concat(COLUMN_ORDER_PREFIX, \"-[0-9]{1,2}$\"));\n  return cssClasses.filter(function (cssClass) {\n    return sortSequenceRegExp.test(cssClass);\n  });\n}"]},"metadata":{},"sourceType":"module"}