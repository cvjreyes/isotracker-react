{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\dragAndDrop\\\\dragAndDrop.js\";\n//Drag and drop para subir isometricas\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Upload, message, Button } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport reqwest from 'reqwest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DragAndDrop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileList: [],\n      uploading: false\n    };\n  }\n\n  render() {\n    const {\n      Dragger\n    } = Upload;\n\n    const handleUpload = () => {\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://localhost:5000/register\", options).then(response => response.json()).then(json => {\n        window.location.reload(false);\n      }).catch(error => {\n        window.location.reload(false);\n        setError(true);\n      });\n    };\n\n    const props = {\n      name: 'file',\n      multiple: true,\n      action: 'http://localhost:5000/upload',\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      beforeUpload: file => {\n        this.setState(state => ({\n          fileList: [...state.fileList, file]\n        }));\n        return false;\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleUpload,\n        disabled: this.state.fileList.length === 0,\n        loading: this.state.uploading,\n        style: {\n          marginTop: 16\n        },\n        children: this.state.uploading ? 'Uploading' : 'Start Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dragger, { ...props,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-drag-icon\",\n          children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-text\",\n          children: \"Click or drag the isometrics to this area to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-hint\",\n          children: \"You can drop single or multiple isometrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), \",\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default DragAndDrop;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/dragAndDrop/dragAndDrop.js"],"names":["React","Upload","message","Button","InboxOutlined","reqwest","DragAndDrop","Component","state","fileList","uploading","render","Dragger","handleUpload","options","method","body","JSON","stringify","fetch","then","response","json","window","location","reload","catch","error","setError","props","name","multiple","action","onRemove","file","setState","index","indexOf","newFileList","slice","splice","beforeUpload","length","marginTop"],"mappings":"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","sourcesContent":["//Drag and drop para subir isometricas\r\n\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Upload, message , Button} from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\nclass DragAndDrop extends React.Component{\r\n\r\n  state = {\r\n    fileList: [],\r\n    uploading: false,\r\n  };\r\n\r\nrender (){\r\n    \r\nconst { Dragger } = Upload;\r\n\r\nconst handleUpload = () =>{\r\n  const options = {\r\n    method: \"POST\",\r\n    body: JSON.stringify(body)\r\n}\r\nfetch(\"http://localhost:5000/register\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n            window.location.reload(false);                \r\n        }\r\n    )\r\n    .catch(error => {\r\n        window.location.reload(false);\r\n        setError(true);\r\n    })\r\n}\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: 'http://localhost:5000/upload',\r\n  onRemove: file => {\r\n    this.setState(state => {\r\n      const index = state.fileList.indexOf(file);\r\n      const newFileList = state.fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      return {\r\n        fileList: newFileList,\r\n      };\r\n    });\r\n  },\r\n  beforeUpload: file => {\r\n    this.setState(state => ({\r\n       fileList: [...state.fileList, file],\r\n    }));\r\n    return false;\r\n    },\r\n  };\r\n\r\n    return(\r\n        <div>\r\n          <Button\r\n          type=\"primary\"\r\n          onClick={handleUpload}\r\n          disabled={this.state.fileList.length === 0}\r\n          loading={this.state.uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {this.state.uploading ? 'Uploading' : 'Start Upload'}\r\n        </Button>\r\n            <Dragger {...props}>\r\n              \r\n                <p className=\"ant-upload-drag-icon\">\r\n                  <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Click or drag the isometrics to this area to upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                  You can drop single or multiple isometrics\r\n                </p>\r\n            </Dragger>,\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default DragAndDrop;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}