{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar _templateObject;\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport Endpoints from \"./endpoints.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nexport var PLUGIN_KEY = 'columnSummary';\nexport var PLUGIN_PRIORITY = 220;\n/**\r\n * @plugin ColumnSummary\r\n *\r\n * @description\r\n * Allows making pre-defined calculations on the cell values and display the results within Handsontable.\r\n * [See the demo for more information](https://handsontable.com/docs/demo-summary-calculations.html).\r\n *\r\n * @example\r\n * const container = document.getElementById('example');\r\n * const hot = new Handsontable(container, {\r\n *   data: getData(),\r\n *   colHeaders: true,\r\n *   rowHeaders: true,\r\n *   columnSummary: [\r\n *     {\r\n *       destinationRow: 4,\r\n *       destinationColumn: 1,\r\n *       type: 'min'\r\n *     },\r\n *     {\r\n *       destinationRow: 0,\r\n *       destinationColumn: 3,\r\n *       reversedRowCoords: true,\r\n *       type: 'max'\r\n *     },\r\n *     {\r\n *       destinationRow: 4,\r\n *       destinationColumn: 5,\r\n *       type: 'sum',\r\n *       forceNumeric: true\r\n *     }\r\n *   ]\r\n * });\r\n */\n\nexport var ColumnSummary = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ColumnSummary, _BasePlugin);\n\n  var _super = _createSuper(ColumnSummary);\n\n  function ColumnSummary(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, ColumnSummary);\n\n    _this = _super.call(this, hotInstance);\n    /**\r\n     * The Endpoints class instance. Used to make all endpoint-related operations.\r\n     *\r\n     * @private\r\n     * @type {null|Endpoints}\r\n     */\n\n    _this.endpoints = null;\n    return _this;\n  }\n  /**\r\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\r\n   * hook and if it returns `true` than the {@link ColumnSummary#enablePlugin} method is called.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  _createClass(ColumnSummary, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\r\n     * Enables the plugin functionality for this Handsontable instance.\r\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.settings = this.hot.getSettings()[PLUGIN_KEY];\n      this.endpoints = new Endpoints(this, this.settings);\n      this.addHook('afterInit', function () {\n        return _this2.onAfterInit.apply(_this2, arguments);\n      });\n      this.addHook('afterChange', function () {\n        return _this2.onAfterChange.apply(_this2, arguments);\n      });\n      this.addHook('beforeCreateRow', function (index, amount, source) {\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_row', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('beforeCreateCol', function (index, amount, source) {\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_col', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('beforeRemoveRow', function () {\n        var _this2$endpoints;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return (_this2$endpoints = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints, ['remove_row'].concat(args));\n      });\n      this.addHook('beforeRemoveCol', function () {\n        var _this2$endpoints2;\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return (_this2$endpoints2 = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints2, ['remove_col'].concat(args));\n      });\n      this.addHook('afterCreateRow', function (index, amount, source) {\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_row', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('afterCreateCol', function (index, amount, source) {\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_col', index, amount, null, source);\n      }); // eslint-disable-line max-len\n\n      this.addHook('afterRemoveRow', function () {\n        var _this2$endpoints3;\n\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        return (_this2$endpoints3 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints3, ['remove_row'].concat(args));\n      });\n      this.addHook('afterRemoveCol', function () {\n        var _this2$endpoints4;\n\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return (_this2$endpoints4 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints4, ['remove_col'].concat(args));\n      });\n      this.addHook('afterRowMove', function () {\n        return _this2.onAfterRowMove.apply(_this2, arguments);\n      });\n\n      _get(_getPrototypeOf(ColumnSummary.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\r\n     * Disables the plugin functionality for this Handsontable instance.\r\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.endpoints = null;\n      this.settings = null;\n      this.currentEndpoint = null;\n    }\n    /**\r\n     * Calculates math for a single endpoint.\r\n     *\r\n     * @private\r\n     * @param {object} endpoint Contains information about the endpoint.\r\n     */\n\n  }, {\n    key: \"calculate\",\n    value: function calculate(endpoint) {\n      switch (endpoint.type.toLowerCase()) {\n        case 'sum':\n          endpoint.result = this.calculateSum(endpoint);\n          break;\n\n        case 'min':\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n          break;\n\n        case 'max':\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n          break;\n\n        case 'count':\n          endpoint.result = this.countEntries(endpoint);\n          break;\n\n        case 'average':\n          endpoint.result = this.calculateAverage(endpoint);\n          break;\n\n        case 'custom':\n          endpoint.result = endpoint.customFunction.call(this, endpoint);\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\r\n     * Calculates sum of the values contained in ranges provided in the plugin config.\r\n     *\r\n     * @private\r\n     * @param {object} endpoint Contains the endpoint information.\r\n     * @returns {number} Sum for the selected range.\r\n     */\n\n  }, {\n    key: \"calculateSum\",\n    value: function calculateSum(endpoint) {\n      var _this3 = this;\n\n      var sum = 0;\n      objectEach(endpoint.ranges, function (range) {\n        sum += _this3.getPartialSum(range, endpoint.sourceColumn);\n      });\n      return sum;\n    }\n    /**\r\n     * Returns partial sum of values from a single row range.\r\n     *\r\n     * @private\r\n     * @param {Array} rowRange Range for the sum.\r\n     * @param {number} col Column index.\r\n     * @returns {number} The partial sum.\r\n     */\n\n  }, {\n    key: \"getPartialSum\",\n    value: function getPartialSum(rowRange, col) {\n      var sum = 0;\n      var i = rowRange[1] || rowRange[0];\n      var cellValue = null;\n      var biggestDecimalPlacesCount = 0;\n\n      do {\n        cellValue = this.getCellValue(i, col) || 0;\n        var decimalPlaces = (\"\".concat(cellValue).split('.')[1] || []).length || 1;\n\n        if (decimalPlaces > biggestDecimalPlacesCount) {\n          biggestDecimalPlacesCount = decimalPlaces;\n        }\n\n        sum += cellValue || 0;\n        i -= 1;\n      } while (i >= rowRange[0]); // Workaround for e.g. 802.2 + 1.1 = 803.3000000000001\n\n\n      return Math.round(sum * Math.pow(10, biggestDecimalPlacesCount)) / Math.pow(10, biggestDecimalPlacesCount);\n    }\n    /**\r\n     * Calculates the minimal value for the selected ranges.\r\n     *\r\n     * @private\r\n     * @param {object} endpoint Contains the endpoint information.\r\n     * @param {string} type `'min'` or `'max'`.\r\n     * @returns {number} Min or Max value.\r\n     */\n\n  }, {\n    key: \"calculateMinMax\",\n    value: function calculateMinMax(endpoint, type) {\n      var _this4 = this;\n\n      var result = null;\n      objectEach(endpoint.ranges, function (range) {\n        var partialResult = _this4.getPartialMinMax(range, endpoint.sourceColumn, type);\n\n        if (result === null && partialResult !== null) {\n          result = partialResult;\n        }\n\n        if (partialResult !== null) {\n          switch (type) {\n            case 'min':\n              result = Math.min(result, partialResult);\n              break;\n\n            case 'max':\n              result = Math.max(result, partialResult);\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n      return result === null ? 'Not enough data' : result;\n    }\n    /**\r\n     * Returns a local minimum of the provided sub-range.\r\n     *\r\n     * @private\r\n     * @param {Array} rowRange Range for the calculation.\r\n     * @param {number} col Column index.\r\n     * @param {string} type `'min'` or `'max'`.\r\n     * @returns {number} Min or max value.\r\n     */\n\n  }, {\n    key: \"getPartialMinMax\",\n    value: function getPartialMinMax(rowRange, col, type) {\n      var result = null;\n      var i = rowRange[1] || rowRange[0];\n      var cellValue;\n\n      do {\n        cellValue = this.getCellValue(i, col) || null;\n\n        if (result === null) {\n          result = cellValue;\n        } else if (cellValue !== null) {\n          switch (type) {\n            case 'min':\n              result = Math.min(result, cellValue);\n              break;\n\n            case 'max':\n              result = Math.max(result, cellValue);\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        i -= 1;\n      } while (i >= rowRange[0]);\n\n      return result;\n    }\n    /**\r\n     * Counts empty cells in the provided row range.\r\n     *\r\n     * @private\r\n     * @param {Array} rowRange Row range for the calculation.\r\n     * @param {number} col Column index.\r\n     * @returns {number} Empty cells count.\r\n     */\n\n  }, {\n    key: \"countEmpty\",\n    value: function countEmpty(rowRange, col) {\n      var cellValue;\n      var counter = 0;\n      var i = rowRange[1] || rowRange[0];\n\n      do {\n        cellValue = this.getCellValue(i, col);\n\n        if (!cellValue) {\n          counter += 1;\n        }\n\n        i -= 1;\n      } while (i >= rowRange[0]);\n\n      return counter;\n    }\n    /**\r\n     * Counts non-empty cells in the provided row range.\r\n     *\r\n     * @private\r\n     * @param {object} endpoint Contains the endpoint information.\r\n     * @returns {number} Entry count.\r\n     */\n\n  }, {\n    key: \"countEntries\",\n    value: function countEntries(endpoint) {\n      var _this5 = this;\n\n      var result = 0;\n      var ranges = endpoint.ranges;\n      objectEach(ranges, function (range) {\n        var partial = range[1] === void 0 ? 1 : range[1] - range[0] + 1;\n\n        var emptyCount = _this5.countEmpty(range, endpoint.sourceColumn);\n\n        result += partial;\n        result -= emptyCount;\n      });\n      return result;\n    }\n    /**\r\n     * Calculates the average value from the cells in the range.\r\n     *\r\n     * @private\r\n     * @param {object} endpoint Contains the endpoint information.\r\n     * @returns {number} Avarage value.\r\n     */\n\n  }, {\n    key: \"calculateAverage\",\n    value: function calculateAverage(endpoint) {\n      var sum = this.calculateSum(endpoint);\n      var entriesCount = this.countEntries(endpoint);\n      return sum / entriesCount;\n    }\n    /**\r\n     * Returns a cell value, taking into consideration a basic validation.\r\n     *\r\n     * @private\r\n     * @param {number} row Row index.\r\n     * @param {number} col Column index.\r\n     * @returns {string} The cell value.\r\n     */\n\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue(row, col) {\n      var visualRowIndex = this.hot.toVisualRow(row);\n      var visualColumnIndex = this.hot.toVisualColumn(col);\n      var cellValue = this.hot.getSourceDataAtCell(row, col);\n      var cellClassName = '';\n\n      if (visualRowIndex !== null && visualColumnIndex !== null) {\n        cellClassName = this.hot.getCellMeta(visualRowIndex, visualColumnIndex).className || '';\n      }\n\n      if (cellClassName.indexOf('columnSummaryResult') > -1) {\n        return null;\n      }\n\n      if (this.endpoints.currentEndpoint.forceNumeric) {\n        if (typeof cellValue === 'string') {\n          cellValue = cellValue.replace(/,/, '.');\n        }\n\n        cellValue = parseFloat(cellValue);\n      }\n\n      if (isNaN(cellValue)) {\n        if (!this.endpoints.currentEndpoint.suppressDataTypeErrors) {\n          throw new Error(toSingleLine(_templateObject || (_templateObject = _taggedTemplateLiteral([\"ColumnSummary plugin: cell at (\", \", \", \") is not in a \\n          numeric format. Cannot do the calculation.\"], [\"ColumnSummary plugin: cell at (\", \", \", \") is not in a\\\\x20\\n          numeric format. Cannot do the calculation.\"])), row, col));\n        }\n      }\n\n      return cellValue;\n    }\n    /**\r\n     * `afterInit` hook callback.\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.endpoints.endpoints = this.endpoints.parseSettings();\n      this.endpoints.refreshAllEndpoints(true);\n    }\n    /**\r\n     * `afterChange` hook callback.\r\n     *\r\n     * @private\r\n     * @param {Array} changes 2D array containing information about each of the edited cells.\r\n     * @param {string} source The string that identifies source of changes.\r\n     */\n\n  }, {\n    key: \"onAfterChange\",\n    value: function onAfterChange(changes, source) {\n      if (changes && source !== 'ColumnSummary.reset' && source !== 'ColumnSummary.set' && source !== 'loadData') {\n        this.endpoints.refreshChangedEndpoints(changes);\n      }\n    }\n    /**\r\n     * `beforeRowMove` hook callback.\r\n     *\r\n     * @private\r\n     * @param {Array} rows Array of visual row indexes to be moved.\r\n     * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements will be placed after the moving action.\r\n     * To check the visualization of the final index, please take a look at [documentation](/docs/demo-moving.html).\r\n     */\n\n  }, {\n    key: \"onAfterRowMove\",\n    value: function onAfterRowMove(rows, finalIndex) {\n      this.endpoints.resetSetupBeforeStructureAlteration('move_row', rows[0], rows.length, rows, this.pluginName);\n      this.endpoints.resetSetupAfterStructureAlteration('move_row', finalIndex, rows.length, rows, this.pluginName);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return ColumnSummary;\n}(BasePlugin);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/columnSummary/columnSummary.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_templateObject","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","call","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","objectEach","Endpoints","toSingleLine","PLUGIN_KEY","PLUGIN_PRIORITY","ColumnSummary","_BasePlugin","_super","hotInstance","_this","endpoints","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","settings","addHook","onAfterInit","onAfterChange","index","amount","source","resetSetupBeforeStructureAlteration","_this2$endpoints","_len","args","Array","_key","concat","_this2$endpoints2","_len2","_key2","resetSetupAfterStructureAlteration","_this2$endpoints3","_len3","_key3","_this2$endpoints4","_len4","_key4","onAfterRowMove","disablePlugin","currentEndpoint","calculate","endpoint","type","toLowerCase","calculateSum","calculateMinMax","countEntries","calculateAverage","customFunction","_this3","sum","ranges","range","getPartialSum","sourceColumn","rowRange","col","cellValue","biggestDecimalPlacesCount","getCellValue","decimalPlaces","split","Math","round","pow","_this4","partialResult","getPartialMinMax","min","max","countEmpty","counter","_this5","partial","emptyCount","entriesCount","row","visualRowIndex","toVisualRow","visualColumnIndex","toVisualColumn","getSourceDataAtCell","cellClassName","getCellMeta","className","indexOf","forceNumeric","replace","parseFloat","isNaN","suppressDataTypeErrors","Error","parseSettings","refreshAllEndpoints","changes","refreshChangedEndpoints","rows","finalIndex","pluginName"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\r\n\r\nimport \"core-js/modules/es.object.set-prototype-of.js\";\r\nimport \"core-js/modules/es.object.get-prototype-of.js\";\r\nimport \"core-js/modules/es.reflect.construct.js\";\r\nimport \"core-js/modules/es.reflect.get.js\";\r\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\r\nimport \"core-js/modules/es.array.slice.js\";\r\nimport \"core-js/modules/es.object.freeze.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.symbol.iterator.js\";\r\nimport \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\n\r\nvar _templateObject;\r\n\r\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\r\n\r\nimport \"core-js/modules/es.array.concat.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.split.js\";\r\nimport \"core-js/modules/es.array.index-of.js\";\r\nimport \"core-js/modules/es.string.replace.js\";\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\r\n\r\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\r\n\r\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\r\n\r\nimport { BasePlugin } from \"../base/index.mjs\";\r\nimport { objectEach } from \"../../helpers/object.mjs\";\r\nimport Endpoints from \"./endpoints.mjs\";\r\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\r\nexport var PLUGIN_KEY = 'columnSummary';\r\nexport var PLUGIN_PRIORITY = 220;\r\n/**\r\n * @plugin ColumnSummary\r\n *\r\n * @description\r\n * Allows making pre-defined calculations on the cell values and display the results within Handsontable.\r\n * [See the demo for more information](https://handsontable.com/docs/demo-summary-calculations.html).\r\n *\r\n * @example\r\n * const container = document.getElementById('example');\r\n * const hot = new Handsontable(container, {\r\n *   data: getData(),\r\n *   colHeaders: true,\r\n *   rowHeaders: true,\r\n *   columnSummary: [\r\n *     {\r\n *       destinationRow: 4,\r\n *       destinationColumn: 1,\r\n *       type: 'min'\r\n *     },\r\n *     {\r\n *       destinationRow: 0,\r\n *       destinationColumn: 3,\r\n *       reversedRowCoords: true,\r\n *       type: 'max'\r\n *     },\r\n *     {\r\n *       destinationRow: 4,\r\n *       destinationColumn: 5,\r\n *       type: 'sum',\r\n *       forceNumeric: true\r\n *     }\r\n *   ]\r\n * });\r\n */\r\n\r\nexport var ColumnSummary = /*#__PURE__*/function (_BasePlugin) {\r\n  _inherits(ColumnSummary, _BasePlugin);\r\n\r\n  var _super = _createSuper(ColumnSummary);\r\n\r\n  function ColumnSummary(hotInstance) {\r\n    var _this;\r\n\r\n    _classCallCheck(this, ColumnSummary);\r\n\r\n    _this = _super.call(this, hotInstance);\r\n    /**\r\n     * The Endpoints class instance. Used to make all endpoint-related operations.\r\n     *\r\n     * @private\r\n     * @type {null|Endpoints}\r\n     */\r\n\r\n    _this.endpoints = null;\r\n    return _this;\r\n  }\r\n  /**\r\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\r\n   * hook and if it returns `true` than the {@link ColumnSummary#enablePlugin} method is called.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n\r\n\r\n  _createClass(ColumnSummary, [{\r\n    key: \"isEnabled\",\r\n    value: function isEnabled() {\r\n      return !!this.hot.getSettings()[PLUGIN_KEY];\r\n    }\r\n    /**\r\n     * Enables the plugin functionality for this Handsontable instance.\r\n     */\r\n\r\n  }, {\r\n    key: \"enablePlugin\",\r\n    value: function enablePlugin() {\r\n      var _this2 = this;\r\n\r\n      if (this.enabled) {\r\n        return;\r\n      }\r\n\r\n      this.settings = this.hot.getSettings()[PLUGIN_KEY];\r\n      this.endpoints = new Endpoints(this, this.settings);\r\n      this.addHook('afterInit', function () {\r\n        return _this2.onAfterInit.apply(_this2, arguments);\r\n      });\r\n      this.addHook('afterChange', function () {\r\n        return _this2.onAfterChange.apply(_this2, arguments);\r\n      });\r\n      this.addHook('beforeCreateRow', function (index, amount, source) {\r\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_row', index, amount, null, source);\r\n      }); // eslint-disable-line max-len\r\n\r\n      this.addHook('beforeCreateCol', function (index, amount, source) {\r\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_col', index, amount, null, source);\r\n      }); // eslint-disable-line max-len\r\n\r\n      this.addHook('beforeRemoveRow', function () {\r\n        var _this2$endpoints;\r\n\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n\r\n        return (_this2$endpoints = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints, ['remove_row'].concat(args));\r\n      });\r\n      this.addHook('beforeRemoveCol', function () {\r\n        var _this2$endpoints2;\r\n\r\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n          args[_key2] = arguments[_key2];\r\n        }\r\n\r\n        return (_this2$endpoints2 = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints2, ['remove_col'].concat(args));\r\n      });\r\n      this.addHook('afterCreateRow', function (index, amount, source) {\r\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_row', index, amount, null, source);\r\n      }); // eslint-disable-line max-len\r\n\r\n      this.addHook('afterCreateCol', function (index, amount, source) {\r\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_col', index, amount, null, source);\r\n      }); // eslint-disable-line max-len\r\n\r\n      this.addHook('afterRemoveRow', function () {\r\n        var _this2$endpoints3;\r\n\r\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n          args[_key3] = arguments[_key3];\r\n        }\r\n\r\n        return (_this2$endpoints3 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints3, ['remove_row'].concat(args));\r\n      });\r\n      this.addHook('afterRemoveCol', function () {\r\n        var _this2$endpoints4;\r\n\r\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\r\n          args[_key4] = arguments[_key4];\r\n        }\r\n\r\n        return (_this2$endpoints4 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints4, ['remove_col'].concat(args));\r\n      });\r\n      this.addHook('afterRowMove', function () {\r\n        return _this2.onAfterRowMove.apply(_this2, arguments);\r\n      });\r\n\r\n      _get(_getPrototypeOf(ColumnSummary.prototype), \"enablePlugin\", this).call(this);\r\n    }\r\n    /**\r\n     * Disables the plugin functionality for this Handsontable instance.\r\n     */\r\n\r\n  }, {\r\n    key: \"disablePlugin\",\r\n    value: function disablePlugin() {\r\n      this.endpoints = null;\r\n      this.settings = null;\r\n      this.currentEndpoint = null;\r\n    }\r\n    /**\r\n     * Calculates math for a single endpoint.\r\n     *\r\n     * @private\r\n     * @param {object} endpoint Contains information about the endpoint.\r\n     */\r\n\r\n  }, {\r\n    key: \"calculate\",\r\n    value: function calculate(endpoint) {\r\n      switch (endpoint.type.toLowerCase()) {\r\n        case 'sum':\r\n          endpoint.result = this.calculateSum(endpoint);\r\n          break;\r\n\r\n        case 'min':\r\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\r\n          break;\r\n\r\n        case 'max':\r\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\r\n          break;\r\n\r\n        case 'count':\r\n          endpoint.result = this.countEntries(endpoint);\r\n          break;\r\n\r\n        case 'average':\r\n          endpoint.result = this.calculateAverage(endpoint);\r\n          break;\r\n\r\n        case 'custom':\r\n          endpoint.result = endpoint.customFunction.call(this, endpoint);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    /**\r\n     * Calculates sum of the values contained in ranges provided in the plugin config.\r\n     *\r\n     * @private\r\n     * @param {object} endpoint Contains the endpoint information.\r\n     * @returns {number} Sum for the selected range.\r\n     */\r\n\r\n  }, {\r\n    key: \"calculateSum\",\r\n    value: function calculateSum(endpoint) {\r\n      var _this3 = this;\r\n\r\n      var sum = 0;\r\n      objectEach(endpoint.ranges, function (range) {\r\n        sum += _this3.getPartialSum(range, endpoint.sourceColumn);\r\n      });\r\n      return sum;\r\n    }\r\n    /**\r\n     * Returns partial sum of values from a single row range.\r\n     *\r\n     * @private\r\n     * @param {Array} rowRange Range for the sum.\r\n     * @param {number} col Column index.\r\n     * @returns {number} The partial sum.\r\n     */\r\n\r\n  }, {\r\n    key: \"getPartialSum\",\r\n    value: function getPartialSum(rowRange, col) {\r\n      var sum = 0;\r\n      var i = rowRange[1] || rowRange[0];\r\n      var cellValue = null;\r\n      var biggestDecimalPlacesCount = 0;\r\n\r\n      do {\r\n        cellValue = this.getCellValue(i, col) || 0;\r\n        var decimalPlaces = (\"\".concat(cellValue).split('.')[1] || []).length || 1;\r\n\r\n        if (decimalPlaces > biggestDecimalPlacesCount) {\r\n          biggestDecimalPlacesCount = decimalPlaces;\r\n        }\r\n\r\n        sum += cellValue || 0;\r\n        i -= 1;\r\n      } while (i >= rowRange[0]); // Workaround for e.g. 802.2 + 1.1 = 803.3000000000001\r\n\r\n\r\n      return Math.round(sum * Math.pow(10, biggestDecimalPlacesCount)) / Math.pow(10, biggestDecimalPlacesCount);\r\n    }\r\n    /**\r\n     * Calculates the minimal value for the selected ranges.\r\n     *\r\n     * @private\r\n     * @param {object} endpoint Contains the endpoint information.\r\n     * @param {string} type `'min'` or `'max'`.\r\n     * @returns {number} Min or Max value.\r\n     */\r\n\r\n  }, {\r\n    key: \"calculateMinMax\",\r\n    value: function calculateMinMax(endpoint, type) {\r\n      var _this4 = this;\r\n\r\n      var result = null;\r\n      objectEach(endpoint.ranges, function (range) {\r\n        var partialResult = _this4.getPartialMinMax(range, endpoint.sourceColumn, type);\r\n\r\n        if (result === null && partialResult !== null) {\r\n          result = partialResult;\r\n        }\r\n\r\n        if (partialResult !== null) {\r\n          switch (type) {\r\n            case 'min':\r\n              result = Math.min(result, partialResult);\r\n              break;\r\n\r\n            case 'max':\r\n              result = Math.max(result, partialResult);\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      });\r\n      return result === null ? 'Not enough data' : result;\r\n    }\r\n    /**\r\n     * Returns a local minimum of the provided sub-range.\r\n     *\r\n     * @private\r\n     * @param {Array} rowRange Range for the calculation.\r\n     * @param {number} col Column index.\r\n     * @param {string} type `'min'` or `'max'`.\r\n     * @returns {number} Min or max value.\r\n     */\r\n\r\n  }, {\r\n    key: \"getPartialMinMax\",\r\n    value: function getPartialMinMax(rowRange, col, type) {\r\n      var result = null;\r\n      var i = rowRange[1] || rowRange[0];\r\n      var cellValue;\r\n\r\n      do {\r\n        cellValue = this.getCellValue(i, col) || null;\r\n\r\n        if (result === null) {\r\n          result = cellValue;\r\n        } else if (cellValue !== null) {\r\n          switch (type) {\r\n            case 'min':\r\n              result = Math.min(result, cellValue);\r\n              break;\r\n\r\n            case 'max':\r\n              result = Math.max(result, cellValue);\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        i -= 1;\r\n      } while (i >= rowRange[0]);\r\n\r\n      return result;\r\n    }\r\n    /**\r\n     * Counts empty cells in the provided row range.\r\n     *\r\n     * @private\r\n     * @param {Array} rowRange Row range for the calculation.\r\n     * @param {number} col Column index.\r\n     * @returns {number} Empty cells count.\r\n     */\r\n\r\n  }, {\r\n    key: \"countEmpty\",\r\n    value: function countEmpty(rowRange, col) {\r\n      var cellValue;\r\n      var counter = 0;\r\n      var i = rowRange[1] || rowRange[0];\r\n\r\n      do {\r\n        cellValue = this.getCellValue(i, col);\r\n\r\n        if (!cellValue) {\r\n          counter += 1;\r\n        }\r\n\r\n        i -= 1;\r\n      } while (i >= rowRange[0]);\r\n\r\n      return counter;\r\n    }\r\n    /**\r\n     * Counts non-empty cells in the provided row range.\r\n     *\r\n     * @private\r\n     * @param {object} endpoint Contains the endpoint information.\r\n     * @returns {number} Entry count.\r\n     */\r\n\r\n  }, {\r\n    key: \"countEntries\",\r\n    value: function countEntries(endpoint) {\r\n      var _this5 = this;\r\n\r\n      var result = 0;\r\n      var ranges = endpoint.ranges;\r\n      objectEach(ranges, function (range) {\r\n        var partial = range[1] === void 0 ? 1 : range[1] - range[0] + 1;\r\n\r\n        var emptyCount = _this5.countEmpty(range, endpoint.sourceColumn);\r\n\r\n        result += partial;\r\n        result -= emptyCount;\r\n      });\r\n      return result;\r\n    }\r\n    /**\r\n     * Calculates the average value from the cells in the range.\r\n     *\r\n     * @private\r\n     * @param {object} endpoint Contains the endpoint information.\r\n     * @returns {number} Avarage value.\r\n     */\r\n\r\n  }, {\r\n    key: \"calculateAverage\",\r\n    value: function calculateAverage(endpoint) {\r\n      var sum = this.calculateSum(endpoint);\r\n      var entriesCount = this.countEntries(endpoint);\r\n      return sum / entriesCount;\r\n    }\r\n    /**\r\n     * Returns a cell value, taking into consideration a basic validation.\r\n     *\r\n     * @private\r\n     * @param {number} row Row index.\r\n     * @param {number} col Column index.\r\n     * @returns {string} The cell value.\r\n     */\r\n\r\n  }, {\r\n    key: \"getCellValue\",\r\n    value: function getCellValue(row, col) {\r\n      var visualRowIndex = this.hot.toVisualRow(row);\r\n      var visualColumnIndex = this.hot.toVisualColumn(col);\r\n      var cellValue = this.hot.getSourceDataAtCell(row, col);\r\n      var cellClassName = '';\r\n\r\n      if (visualRowIndex !== null && visualColumnIndex !== null) {\r\n        cellClassName = this.hot.getCellMeta(visualRowIndex, visualColumnIndex).className || '';\r\n      }\r\n\r\n      if (cellClassName.indexOf('columnSummaryResult') > -1) {\r\n        return null;\r\n      }\r\n\r\n      if (this.endpoints.currentEndpoint.forceNumeric) {\r\n        if (typeof cellValue === 'string') {\r\n          cellValue = cellValue.replace(/,/, '.');\r\n        }\r\n\r\n        cellValue = parseFloat(cellValue);\r\n      }\r\n\r\n      if (isNaN(cellValue)) {\r\n        if (!this.endpoints.currentEndpoint.suppressDataTypeErrors) {\r\n          throw new Error(toSingleLine(_templateObject || (_templateObject = _taggedTemplateLiteral([\"ColumnSummary plugin: cell at (\", \", \", \") is not in a \\n          numeric format. Cannot do the calculation.\"], [\"ColumnSummary plugin: cell at (\", \", \", \") is not in a\\\\x20\\n          numeric format. Cannot do the calculation.\"])), row, col));\r\n        }\r\n      }\r\n\r\n      return cellValue;\r\n    }\r\n    /**\r\n     * `afterInit` hook callback.\r\n     *\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: \"onAfterInit\",\r\n    value: function onAfterInit() {\r\n      this.endpoints.endpoints = this.endpoints.parseSettings();\r\n      this.endpoints.refreshAllEndpoints(true);\r\n    }\r\n    /**\r\n     * `afterChange` hook callback.\r\n     *\r\n     * @private\r\n     * @param {Array} changes 2D array containing information about each of the edited cells.\r\n     * @param {string} source The string that identifies source of changes.\r\n     */\r\n\r\n  }, {\r\n    key: \"onAfterChange\",\r\n    value: function onAfterChange(changes, source) {\r\n      if (changes && source !== 'ColumnSummary.reset' && source !== 'ColumnSummary.set' && source !== 'loadData') {\r\n        this.endpoints.refreshChangedEndpoints(changes);\r\n      }\r\n    }\r\n    /**\r\n     * `beforeRowMove` hook callback.\r\n     *\r\n     * @private\r\n     * @param {Array} rows Array of visual row indexes to be moved.\r\n     * @param {number} finalIndex Visual row index, being a start index for the moved rows. Points to where the elements will be placed after the moving action.\r\n     * To check the visualization of the final index, please take a look at [documentation](/docs/demo-moving.html).\r\n     */\r\n\r\n  }, {\r\n    key: \"onAfterRowMove\",\r\n    value: function onAfterRowMove(rows, finalIndex) {\r\n      this.endpoints.resetSetupBeforeStructureAlteration('move_row', rows[0], rows.length, rows, this.pluginName);\r\n      this.endpoints.resetSetupAfterStructureAlteration('move_row', finalIndex, rows.length, rows, this.pluginName);\r\n    }\r\n  }], [{\r\n    key: \"PLUGIN_KEY\",\r\n    get: function get() {\r\n      return PLUGIN_KEY;\r\n    }\r\n  }, {\r\n    key: \"PLUGIN_PRIORITY\",\r\n    get: function get() {\r\n      return PLUGIN_PRIORITY;\r\n    }\r\n  }]);\r\n\r\n  return ColumnSummary;\r\n}(BasePlugin);"]},"metadata":{},"sourceType":"module"}