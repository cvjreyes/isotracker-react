{"ast":null,"code":"/**\n * @param {Core} Handsontable The Handsontable instance.\n */\nexport default function jQueryWrapper(Handsontable) {\n  // eslint-disable-next-line\n  var jQuery = typeof window === 'undefined' ? false : window.jQuery;\n\n  if (!jQuery) {\n    return;\n  }\n\n  jQuery.fn.handsontable = function (action) {\n    var $this = this.first(); // Use only first element from list\n\n    var instance = $this.data('handsontable'); // Init case\n\n    if (typeof action !== 'string') {\n      var userSettings = action || {};\n\n      if (instance) {\n        instance.updateSettings(userSettings);\n      } else {\n        instance = new Handsontable.Core($this[0], userSettings);\n        $this.data('handsontable', instance);\n        instance.init();\n      }\n\n      return $this;\n    }\n\n    var output; // Action case\n\n    if (instance) {\n      if (typeof instance[action] !== 'undefined') {\n        var _instance$action;\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        output = (_instance$action = instance[action]).call.apply(_instance$action, [instance].concat(args));\n\n        if (action === 'destroy') {\n          $this.removeData();\n        }\n      } else {\n        throw new Error(\"Handsontable do not provide action: \".concat(action));\n      }\n    }\n\n    return output;\n  };\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/helpers/wrappers/jquery.mjs"],"names":["jQueryWrapper","Handsontable","jQuery","window","fn","handsontable","action","$this","first","instance","data","userSettings","updateSettings","Core","init","output","_instance$action","_len","arguments","length","args","Array","_key","call","apply","concat","removeData","Error"],"mappings":"AAEA;AACA;AACA;AACA,eAAe,SAASA,aAAT,CAAuBC,YAAvB,EAAqC;AAClD;AACA,MAAIC,MAAM,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,KAAhC,GAAwCA,MAAM,CAACD,MAA5D;;AAEA,MAAI,CAACA,MAAL,EAAa;AACX;AACD;;AAEDA,EAAAA,MAAM,CAACE,EAAP,CAAUC,YAAV,GAAyB,UAAUC,MAAV,EAAkB;AACzC,QAAIC,KAAK,GAAG,KAAKC,KAAL,EAAZ,CADyC,CACf;;AAE1B,QAAIC,QAAQ,GAAGF,KAAK,CAACG,IAAN,CAAW,cAAX,CAAf,CAHyC,CAGE;;AAE3C,QAAI,OAAOJ,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,UAAIK,YAAY,GAAGL,MAAM,IAAI,EAA7B;;AAEA,UAAIG,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACG,cAAT,CAAwBD,YAAxB;AACD,OAFD,MAEO;AACLF,QAAAA,QAAQ,GAAG,IAAIR,YAAY,CAACY,IAAjB,CAAsBN,KAAK,CAAC,CAAD,CAA3B,EAAgCI,YAAhC,CAAX;AACAJ,QAAAA,KAAK,CAACG,IAAN,CAAW,cAAX,EAA2BD,QAA3B;AACAA,QAAAA,QAAQ,CAACK,IAAT;AACD;;AAED,aAAOP,KAAP;AACD;;AAED,QAAIQ,MAAJ,CAnByC,CAmB7B;;AAEZ,QAAIN,QAAJ,EAAc;AACZ,UAAI,OAAOA,QAAQ,CAACH,MAAD,CAAf,KAA4B,WAAhC,EAA6C;AAC3C,YAAIU,gBAAJ;;AAEA,aAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;AAC1GF,UAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAEDP,QAAAA,MAAM,GAAG,CAACC,gBAAgB,GAAGP,QAAQ,CAACH,MAAD,CAA5B,EAAsCiB,IAAtC,CAA2CC,KAA3C,CAAiDR,gBAAjD,EAAmE,CAACP,QAAD,EAAWgB,MAAX,CAAkBL,IAAlB,CAAnE,CAAT;;AAEA,YAAId,MAAM,KAAK,SAAf,EAA0B;AACxBC,UAAAA,KAAK,CAACmB,UAAN;AACD;AACF,OAZD,MAYO;AACL,cAAM,IAAIC,KAAJ,CAAU,uCAAuCF,MAAvC,CAA8CnB,MAA9C,CAAV,CAAN;AACD;AACF;;AAED,WAAOS,MAAP;AACD,GAxCD;AAyCD","sourcesContent":["import \"core-js/modules/es.array.concat.js\";\n\n/**\n * @param {Core} Handsontable The Handsontable instance.\n */\nexport default function jQueryWrapper(Handsontable) {\n  // eslint-disable-next-line\n  var jQuery = typeof window === 'undefined' ? false : window.jQuery;\n\n  if (!jQuery) {\n    return;\n  }\n\n  jQuery.fn.handsontable = function (action) {\n    var $this = this.first(); // Use only first element from list\n\n    var instance = $this.data('handsontable'); // Init case\n\n    if (typeof action !== 'string') {\n      var userSettings = action || {};\n\n      if (instance) {\n        instance.updateSettings(userSettings);\n      } else {\n        instance = new Handsontable.Core($this[0], userSettings);\n        $this.data('handsontable', instance);\n        instance.init();\n      }\n\n      return $this;\n    }\n\n    var output; // Action case\n\n    if (instance) {\n      if (typeof instance[action] !== 'undefined') {\n        var _instance$action;\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        output = (_instance$action = instance[action]).call.apply(_instance$action, [instance].concat(args));\n\n        if (action === 'destroy') {\n          $this.removeData();\n        }\n      } else {\n        throw new Error(\"Handsontable do not provide action: \".concat(action));\n      }\n    }\n\n    return output;\n  };\n}"]},"metadata":{},"sourceType":"module"}