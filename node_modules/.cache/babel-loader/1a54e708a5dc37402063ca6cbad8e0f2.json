{"ast":null,"code":"import * as C from \"../../../i18n/constants.mjs\";\nimport { checkSelectionBorders, markSelected } from \"../utils.mjs\";\n/**\n * @param {CustomBorders} customBordersPlugin The plugin instance.\n * @returns {object}\n */\n\nexport default function right(customBordersPlugin) {\n  return {\n    key: 'borders:right',\n    name: function name() {\n      var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS_RIGHT);\n      var hasBorder = checkSelectionBorders(this, 'right');\n\n      if (hasBorder) {\n        label = markSelected(label);\n      }\n\n      return label;\n    },\n    callback: function callback(key, selected) {\n      var hasBorder = checkSelectionBorders(this, 'right');\n      customBordersPlugin.prepareBorder(selected, 'right', hasBorder);\n    }\n  };\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/customBorders/contextMenuItem/right.mjs"],"names":["C","checkSelectionBorders","markSelected","right","customBordersPlugin","key","name","label","getTranslatedPhrase","CONTEXTMENU_ITEMS_BORDERS_RIGHT","hasBorder","callback","selected","prepareBorder"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,6BAAnB;AACA,SAASC,qBAAT,EAAgCC,YAAhC,QAAoD,cAApD;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,KAAT,CAAeC,mBAAf,EAAoC;AACjD,SAAO;AACLC,IAAAA,GAAG,EAAE,eADA;AAELC,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,UAAIC,KAAK,GAAG,KAAKC,mBAAL,CAAyBR,CAAC,CAACS,+BAA3B,CAAZ;AACA,UAAIC,SAAS,GAAGT,qBAAqB,CAAC,IAAD,EAAO,OAAP,CAArC;;AAEA,UAAIS,SAAJ,EAAe;AACbH,QAAAA,KAAK,GAAGL,YAAY,CAACK,KAAD,CAApB;AACD;;AAED,aAAOA,KAAP;AACD,KAXI;AAYLI,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBN,GAAlB,EAAuBO,QAAvB,EAAiC;AACzC,UAAIF,SAAS,GAAGT,qBAAqB,CAAC,IAAD,EAAO,OAAP,CAArC;AACAG,MAAAA,mBAAmB,CAACS,aAApB,CAAkCD,QAAlC,EAA4C,OAA5C,EAAqDF,SAArD;AACD;AAfI,GAAP;AAiBD","sourcesContent":["import * as C from \"../../../i18n/constants.mjs\";\nimport { checkSelectionBorders, markSelected } from \"../utils.mjs\";\n/**\n * @param {CustomBorders} customBordersPlugin The plugin instance.\n * @returns {object}\n */\n\nexport default function right(customBordersPlugin) {\n  return {\n    key: 'borders:right',\n    name: function name() {\n      var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS_RIGHT);\n      var hasBorder = checkSelectionBorders(this, 'right');\n\n      if (hasBorder) {\n        label = markSelected(label);\n      }\n\n      return label;\n    },\n    callback: function callback(key, selected) {\n      var hasBorder = checkSelectionBorders(this, 'right');\n      customBordersPlugin.prepareBorder(selected, 'right', hasBorder);\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}