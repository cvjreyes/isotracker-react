{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\n\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n\n  _classApplyDescriptorSet(receiver, descriptor, value);\n\n  return value;\n}\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport hideRowItem from \"./contextMenuItem/hideRow.mjs\";\nimport showRowItem from \"./contextMenuItem/showRow.mjs\";\nimport { HidingMap } from \"../../translations/index.mjs\";\nHooks.getSingleton().register('beforeHideRows');\nHooks.getSingleton().register('afterHideRows');\nHooks.getSingleton().register('beforeUnhideRows');\nHooks.getSingleton().register('afterUnhideRows');\nexport var PLUGIN_KEY = 'hiddenRows';\nexport var PLUGIN_PRIORITY = 320;\n/**\n * @plugin HiddenRows\n *\n * @description\n * Plugin allows to hide certain rows. The hiding is achieved by rendering the rows with height set as 0px.\n * The plugin not modifies the source data and do not participate in data transformation (the shape of data returned\n * by `getData*` methods stays intact).\n *\n * Possible plugin settings:\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\n *  * `rows` as `Array`\n *  * `indicators` as `Boolean` (default `false`).\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   hiddenRows: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     rows: [1, 2, 5]\n *   }\n * });\n *\n * // access to hiddenRows plugin instance\n * const hiddenRowsPlugin = hot.getPlugin('hiddenRows');\n *\n * // show single row\n * hiddenRowsPlugin.showRow(1);\n *\n * // show multiple rows\n * hiddenRowsPlugin.showRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.showRows([1, 2, 9]);\n *\n * // hide single row\n * hiddenRowsPlugin.hideRow(1);\n *\n * // hide multiple rows\n * hiddenRowsPlugin.hideRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.hideRows([1, 2, 9]);\n *\n * // rerender the table to see all changes\n * hot.render();\n * ```\n */\n\nvar _settings = /*#__PURE__*/new WeakMap();\n\nvar _hiddenRowsMap = /*#__PURE__*/new WeakMap();\n\nexport var HiddenRows = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(HiddenRows, _BasePlugin);\n\n  var _super = _createSuper(HiddenRows);\n\n  function HiddenRows() {\n    var _this;\n\n    _classCallCheck(this, HiddenRows);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _settings.set(_assertThisInitialized(_this), {\n      writable: true,\n      value: {}\n    });\n\n    _hiddenRowsMap.set(_assertThisInitialized(_this), {\n      writable: true,\n      value: null\n    });\n\n    return _this;\n  }\n\n  _createClass(HiddenRows, [{\n    key: \"isEnabled\",\n    value:\n    /**\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n     * hook and if it returns `true` than the {@link HiddenRows#enablePlugin} method is called.\n     *\n     * @returns {boolean}\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (isObject(pluginSettings)) {\n        _classPrivateFieldSet(this, _settings, pluginSettings);\n\n        if (isUndefined(pluginSettings.copyPasteEnabled)) {\n          pluginSettings.copyPasteEnabled = true;\n        }\n      }\n\n      _classPrivateFieldSet(this, _hiddenRowsMap, new HidingMap());\n\n      _classPrivateFieldGet(this, _hiddenRowsMap).addLocalHook('init', function () {\n        return _this2.onMapInit();\n      });\n\n      this.hot.rowIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _hiddenRowsMap));\n      this.addHook('afterContextMenuDefaultOptions', function () {\n        return _this2.onAfterContextMenuDefaultOptions.apply(_this2, arguments);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.onModifyRowHeight(height, row);\n      });\n      this.addHook('afterGetRowHeader', function () {\n        return _this2.onAfterGetRowHeader.apply(_this2, arguments);\n      });\n      this.addHook('modifyCopyableRange', function (ranges) {\n        return _this2.onModifyCopyableRange(ranges);\n      });\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n\n      _classPrivateFieldSet(this, _settings, {});\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"disablePlugin\", this).call(this);\n\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the rows provided in the array.\n     *\n     * @param {number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"showRows\",\n    value: function showRows(rows) {\n      var _this3 = this;\n\n      var currentHideConfig = this.getHiddenRows();\n      var isValidConfig = this.isValidConfig(rows);\n      var destinationHideConfig = currentHideConfig;\n\n      var hidingMapValues = _classPrivateFieldGet(this, _hiddenRowsMap).getValues().slice();\n\n      var isAnyRowShowed = rows.length > 0;\n\n      if (isValidConfig && isAnyRowShowed) {\n        var physicalRows = rows.map(function (visualRow) {\n          return _this3.hot.toPhysicalRow(visualRow);\n        }); // Preparing new values for hiding map.\n\n        arrayEach(physicalRows, function (physicalRow) {\n          hidingMapValues[physicalRow] = false;\n        }); // Preparing new hiding config.\n\n        destinationHideConfig = arrayReduce(hidingMapValues, function (hiddenIndexes, isHidden, physicalIndex) {\n          if (isHidden) {\n            hiddenIndexes.push(_this3.hot.toVisualRow(physicalIndex));\n          }\n\n          return hiddenIndexes;\n        }, []);\n      }\n\n      var continueHiding = this.hot.runHooks('beforeUnhideRows', currentHideConfig, destinationHideConfig, isValidConfig && isAnyRowShowed);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (isValidConfig && isAnyRowShowed) {\n        _classPrivateFieldGet(this, _hiddenRowsMap).setValues(hidingMapValues);\n      }\n\n      this.hot.runHooks('afterUnhideRows', currentHideConfig, destinationHideConfig, isValidConfig && isAnyRowShowed, isValidConfig && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows the row provided as row index (counting from 0).\n     *\n     * @param {...number} row Visual row index.\n     */\n\n  }, {\n    key: \"showRow\",\n    value: function showRow() {\n      for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        row[_key2] = arguments[_key2];\n      }\n\n      this.showRows(row);\n    }\n    /**\n     * Hides the rows provided in the array.\n     *\n     * @param {number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"hideRows\",\n    value: function hideRows(rows) {\n      var _this4 = this;\n\n      var currentHideConfig = this.getHiddenRows();\n      var isConfigValid = this.isValidConfig(rows);\n      var destinationHideConfig = currentHideConfig;\n\n      if (isConfigValid) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(rows)));\n      }\n\n      var continueHiding = this.hot.runHooks('beforeHideRows', currentHideConfig, destinationHideConfig, isConfigValid);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (isConfigValid) {\n        this.hot.batchExecution(function () {\n          arrayEach(rows, function (visualRow) {\n            _classPrivateFieldGet(_this4, _hiddenRowsMap).setValueAtIndex(_this4.hot.toPhysicalRow(visualRow), true);\n          });\n        }, true);\n      }\n\n      this.hot.runHooks('afterHideRows', currentHideConfig, destinationHideConfig, isConfigValid, isConfigValid && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides the row provided as row index (counting from 0).\n     *\n     * @param {...number} row Visual row index.\n     */\n\n  }, {\n    key: \"hideRow\",\n    value: function hideRow() {\n      for (var _len3 = arguments.length, row = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        row[_key3] = arguments[_key3];\n      }\n\n      this.hideRows(row);\n    }\n    /**\n     * Returns an array of visual indexes of hidden rows.\n     *\n     * @returns {number[]}\n     */\n\n  }, {\n    key: \"getHiddenRows\",\n    value: function getHiddenRows() {\n      var _this5 = this;\n\n      return arrayMap(_classPrivateFieldGet(this, _hiddenRowsMap).getHiddenIndexes(), function (physicalRowIndex) {\n        return _this5.hot.toVisualRow(physicalRowIndex);\n      });\n    }\n    /**\n     * Checks if the provided row is hidden.\n     *\n     * @param {number} row Visual row index.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(row) {\n      return _classPrivateFieldGet(this, _hiddenRowsMap).getValueAtIndex(this.hot.toPhysicalRow(row)) || false;\n    }\n    /**\n     * Checks whether all of the provided row indexes are within the bounds of the table.\n     *\n     * @param {Array} hiddenRows List of hidden visual row indexes.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isValidConfig\",\n    value: function isValidConfig(hiddenRows) {\n      var nrOfRows = this.hot.countRows();\n\n      if (Array.isArray(hiddenRows) && hiddenRows.length > 0) {\n        return hiddenRows.every(function (visualRow) {\n          return Number.isInteger(visualRow) && visualRow >= 0 && visualRow < nrOfRows;\n        });\n      }\n\n      return false;\n    }\n    /**\n     * Resets all rendered cells meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipRowOnPaste = false;\n        }\n      });\n    }\n    /**\n     * Adds the additional row height for the hidden row indicators.\n     *\n     * @private\n     * @param {number|undefined} height Row height.\n     * @param {number} row Visual row index.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"onModifyRowHeight\",\n    value: function onModifyRowHeight(height, row) {\n      // Hook is triggered internally only for the visible rows. Conditional will be handled for the API\n      // calls of the `getRowHeight` function on not visible indexes.\n      if (this.isHidden(row)) {\n        return 0;\n      }\n\n      return height;\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} cellProperties Object containing the cell properties.\n     */\n\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, column, cellProperties) {\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled === false && this.isHidden(row)) {\n        // Cell property handled by the `Autofill` and the `CopyPaste` plugins.\n        cellProperties.skipRowOnPaste = true;\n      }\n\n      if (this.isHidden(row - 1)) {\n        cellProperties.className = cellProperties.className || '';\n\n        if (cellProperties.className.indexOf('afterHiddenRow') === -1) {\n          cellProperties.className += ' afterHiddenRow';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n\n        if (classArr.length > 0) {\n          var containAfterHiddenRow = classArr.indexOf('afterHiddenRow');\n\n          if (containAfterHiddenRow > -1) {\n            classArr.splice(containAfterHiddenRow, 1);\n          }\n\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @private\n     * @param {Array} ranges An array of objects defining copyable cells.\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this; // Ranges shouldn't be modified when `copyPasteEnabled` option is set to `true` (by default).\n\n\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled) {\n        return ranges;\n      }\n\n      var newRanges = [];\n\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startRow, range.endRow, function (visualRow) {\n          if (_this6.isHidden(visualRow)) {\n            if (!isHidden) {\n              pushRange(rangeStart, visualRow - 1, range.startCol, range.endCol);\n            }\n\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = visualRow;\n            }\n\n            if (visualRow === range.endRow) {\n              pushRange(rangeStart, visualRow, range.startCol, range.endCol);\n            }\n\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {HTMLElement} TH Header's TH element.\n     */\n\n  }, {\n    key: \"onAfterGetRowHeader\",\n    value: function onAfterGetRowHeader(row, TH) {\n      if (!_classPrivateFieldGet(this, _settings).indicators || row < 0) {\n        return;\n      }\n\n      var classList = [];\n\n      if (row >= 1 && this.isHidden(row - 1)) {\n        classList.push('afterHiddenRow');\n      }\n\n      if (row < this.hot.countRows() - 1 && this.isHidden(row + 1)) {\n        classList.push('beforeHiddenRow');\n      }\n\n      addClass(TH, classList);\n    }\n    /**\n     * Add Show-hide rows to context menu.\n     *\n     * @private\n     * @param {object} options An array of objects containing information about the pre-defined Context Menu items.\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideRowItem(this), showRowItem(this));\n    }\n    /**\n     * On map initialized hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMapInit\",\n    value: function onMapInit() {\n      if (Array.isArray(_classPrivateFieldGet(this, _settings).rows)) {\n        this.hideRows(_classPrivateFieldGet(this, _settings).rows);\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _classPrivateFieldSet(this, _settings, null);\n\n      _classPrivateFieldSet(this, _hiddenRowsMap, null);\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n    /**\n     * Cached settings from Handsontable settings.\n     *\n     * @private\n     * @type {object}\n     */\n\n  }]);\n\n  return HiddenRows;\n}(BasePlugin);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/hiddenRows/hiddenRows.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","call","value","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_classPrivateFieldGet","privateMap","_classExtractFieldDescriptor","_classApplyDescriptorGet","_classPrivateFieldSet","_classApplyDescriptorSet","action","has","set","BasePlugin","addClass","rangeEach","arrayEach","arrayMap","arrayReduce","isObject","isUndefined","SEPARATOR","Hooks","hideRowItem","showRowItem","HidingMap","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","_settings","WeakMap","_hiddenRowsMap","HiddenRows","_BasePlugin","_super","_this","_len","args","Array","_key","concat","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","pluginSettings","copyPasteEnabled","addLocalHook","onMapInit","rowIndexMapper","registerMap","pluginName","addHook","onAfterContextMenuDefaultOptions","row","col","cellProperties","onAfterGetCellMeta","height","onModifyRowHeight","onAfterGetRowHeader","ranges","onModifyCopyableRange","updatePlugin","disablePlugin","unregisterMap","resetCellsMeta","showRows","rows","_this3","currentHideConfig","getHiddenRows","isValidConfig","destinationHideConfig","hidingMapValues","getValues","slice","isAnyRowShowed","physicalRows","map","visualRow","toPhysicalRow","physicalRow","hiddenIndexes","isHidden","physicalIndex","push","toVisualRow","continueHiding","runHooks","setValues","showRow","_len2","_key2","hideRows","_this4","isConfigValid","from","Set","batchExecution","setValueAtIndex","hideRow","_len3","_key3","_this5","getHiddenIndexes","physicalRowIndex","getValueAtIndex","hiddenRows","nrOfRows","countRows","isArray","every","Number","isInteger","getCellsMeta","meta","skipRowOnPaste","column","className","indexOf","classArr","split","containAfterHiddenRow","splice","join","_this6","newRanges","pushRange","startRow","endRow","startCol","endCol","range","rangeStart","TH","indicators","classList","options","items","name","destroy"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\n\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport hideRowItem from \"./contextMenuItem/hideRow.mjs\";\nimport showRowItem from \"./contextMenuItem/showRow.mjs\";\nimport { HidingMap } from \"../../translations/index.mjs\";\nHooks.getSingleton().register('beforeHideRows');\nHooks.getSingleton().register('afterHideRows');\nHooks.getSingleton().register('beforeUnhideRows');\nHooks.getSingleton().register('afterUnhideRows');\nexport var PLUGIN_KEY = 'hiddenRows';\nexport var PLUGIN_PRIORITY = 320;\n/**\n * @plugin HiddenRows\n *\n * @description\n * Plugin allows to hide certain rows. The hiding is achieved by rendering the rows with height set as 0px.\n * The plugin not modifies the source data and do not participate in data transformation (the shape of data returned\n * by `getData*` methods stays intact).\n *\n * Possible plugin settings:\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\n *  * `rows` as `Array`\n *  * `indicators` as `Boolean` (default `false`).\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   hiddenRows: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     rows: [1, 2, 5]\n *   }\n * });\n *\n * // access to hiddenRows plugin instance\n * const hiddenRowsPlugin = hot.getPlugin('hiddenRows');\n *\n * // show single row\n * hiddenRowsPlugin.showRow(1);\n *\n * // show multiple rows\n * hiddenRowsPlugin.showRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.showRows([1, 2, 9]);\n *\n * // hide single row\n * hiddenRowsPlugin.hideRow(1);\n *\n * // hide multiple rows\n * hiddenRowsPlugin.hideRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.hideRows([1, 2, 9]);\n *\n * // rerender the table to see all changes\n * hot.render();\n * ```\n */\n\nvar _settings = /*#__PURE__*/new WeakMap();\n\nvar _hiddenRowsMap = /*#__PURE__*/new WeakMap();\n\nexport var HiddenRows = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(HiddenRows, _BasePlugin);\n\n  var _super = _createSuper(HiddenRows);\n\n  function HiddenRows() {\n    var _this;\n\n    _classCallCheck(this, HiddenRows);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _settings.set(_assertThisInitialized(_this), {\n      writable: true,\n      value: {}\n    });\n\n    _hiddenRowsMap.set(_assertThisInitialized(_this), {\n      writable: true,\n      value: null\n    });\n\n    return _this;\n  }\n\n  _createClass(HiddenRows, [{\n    key: \"isEnabled\",\n    value:\n    /**\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n     * hook and if it returns `true` than the {@link HiddenRows#enablePlugin} method is called.\n     *\n     * @returns {boolean}\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (isObject(pluginSettings)) {\n        _classPrivateFieldSet(this, _settings, pluginSettings);\n\n        if (isUndefined(pluginSettings.copyPasteEnabled)) {\n          pluginSettings.copyPasteEnabled = true;\n        }\n      }\n\n      _classPrivateFieldSet(this, _hiddenRowsMap, new HidingMap());\n\n      _classPrivateFieldGet(this, _hiddenRowsMap).addLocalHook('init', function () {\n        return _this2.onMapInit();\n      });\n\n      this.hot.rowIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _hiddenRowsMap));\n      this.addHook('afterContextMenuDefaultOptions', function () {\n        return _this2.onAfterContextMenuDefaultOptions.apply(_this2, arguments);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.onModifyRowHeight(height, row);\n      });\n      this.addHook('afterGetRowHeader', function () {\n        return _this2.onAfterGetRowHeader.apply(_this2, arguments);\n      });\n      this.addHook('modifyCopyableRange', function (ranges) {\n        return _this2.onModifyCopyableRange(ranges);\n      });\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hot.rowIndexMapper.unregisterMap(this.pluginName);\n\n      _classPrivateFieldSet(this, _settings, {});\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"disablePlugin\", this).call(this);\n\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the rows provided in the array.\n     *\n     * @param {number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"showRows\",\n    value: function showRows(rows) {\n      var _this3 = this;\n\n      var currentHideConfig = this.getHiddenRows();\n      var isValidConfig = this.isValidConfig(rows);\n      var destinationHideConfig = currentHideConfig;\n\n      var hidingMapValues = _classPrivateFieldGet(this, _hiddenRowsMap).getValues().slice();\n\n      var isAnyRowShowed = rows.length > 0;\n\n      if (isValidConfig && isAnyRowShowed) {\n        var physicalRows = rows.map(function (visualRow) {\n          return _this3.hot.toPhysicalRow(visualRow);\n        }); // Preparing new values for hiding map.\n\n        arrayEach(physicalRows, function (physicalRow) {\n          hidingMapValues[physicalRow] = false;\n        }); // Preparing new hiding config.\n\n        destinationHideConfig = arrayReduce(hidingMapValues, function (hiddenIndexes, isHidden, physicalIndex) {\n          if (isHidden) {\n            hiddenIndexes.push(_this3.hot.toVisualRow(physicalIndex));\n          }\n\n          return hiddenIndexes;\n        }, []);\n      }\n\n      var continueHiding = this.hot.runHooks('beforeUnhideRows', currentHideConfig, destinationHideConfig, isValidConfig && isAnyRowShowed);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (isValidConfig && isAnyRowShowed) {\n        _classPrivateFieldGet(this, _hiddenRowsMap).setValues(hidingMapValues);\n      }\n\n      this.hot.runHooks('afterUnhideRows', currentHideConfig, destinationHideConfig, isValidConfig && isAnyRowShowed, isValidConfig && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows the row provided as row index (counting from 0).\n     *\n     * @param {...number} row Visual row index.\n     */\n\n  }, {\n    key: \"showRow\",\n    value: function showRow() {\n      for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        row[_key2] = arguments[_key2];\n      }\n\n      this.showRows(row);\n    }\n    /**\n     * Hides the rows provided in the array.\n     *\n     * @param {number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"hideRows\",\n    value: function hideRows(rows) {\n      var _this4 = this;\n\n      var currentHideConfig = this.getHiddenRows();\n      var isConfigValid = this.isValidConfig(rows);\n      var destinationHideConfig = currentHideConfig;\n\n      if (isConfigValid) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(rows)));\n      }\n\n      var continueHiding = this.hot.runHooks('beforeHideRows', currentHideConfig, destinationHideConfig, isConfigValid);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (isConfigValid) {\n        this.hot.batchExecution(function () {\n          arrayEach(rows, function (visualRow) {\n            _classPrivateFieldGet(_this4, _hiddenRowsMap).setValueAtIndex(_this4.hot.toPhysicalRow(visualRow), true);\n          });\n        }, true);\n      }\n\n      this.hot.runHooks('afterHideRows', currentHideConfig, destinationHideConfig, isConfigValid, isConfigValid && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides the row provided as row index (counting from 0).\n     *\n     * @param {...number} row Visual row index.\n     */\n\n  }, {\n    key: \"hideRow\",\n    value: function hideRow() {\n      for (var _len3 = arguments.length, row = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        row[_key3] = arguments[_key3];\n      }\n\n      this.hideRows(row);\n    }\n    /**\n     * Returns an array of visual indexes of hidden rows.\n     *\n     * @returns {number[]}\n     */\n\n  }, {\n    key: \"getHiddenRows\",\n    value: function getHiddenRows() {\n      var _this5 = this;\n\n      return arrayMap(_classPrivateFieldGet(this, _hiddenRowsMap).getHiddenIndexes(), function (physicalRowIndex) {\n        return _this5.hot.toVisualRow(physicalRowIndex);\n      });\n    }\n    /**\n     * Checks if the provided row is hidden.\n     *\n     * @param {number} row Visual row index.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(row) {\n      return _classPrivateFieldGet(this, _hiddenRowsMap).getValueAtIndex(this.hot.toPhysicalRow(row)) || false;\n    }\n    /**\n     * Checks whether all of the provided row indexes are within the bounds of the table.\n     *\n     * @param {Array} hiddenRows List of hidden visual row indexes.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isValidConfig\",\n    value: function isValidConfig(hiddenRows) {\n      var nrOfRows = this.hot.countRows();\n\n      if (Array.isArray(hiddenRows) && hiddenRows.length > 0) {\n        return hiddenRows.every(function (visualRow) {\n          return Number.isInteger(visualRow) && visualRow >= 0 && visualRow < nrOfRows;\n        });\n      }\n\n      return false;\n    }\n    /**\n     * Resets all rendered cells meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipRowOnPaste = false;\n        }\n      });\n    }\n    /**\n     * Adds the additional row height for the hidden row indicators.\n     *\n     * @private\n     * @param {number|undefined} height Row height.\n     * @param {number} row Visual row index.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"onModifyRowHeight\",\n    value: function onModifyRowHeight(height, row) {\n      // Hook is triggered internally only for the visible rows. Conditional will be handled for the API\n      // calls of the `getRowHeight` function on not visible indexes.\n      if (this.isHidden(row)) {\n        return 0;\n      }\n\n      return height;\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} cellProperties Object containing the cell properties.\n     */\n\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, column, cellProperties) {\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled === false && this.isHidden(row)) {\n        // Cell property handled by the `Autofill` and the `CopyPaste` plugins.\n        cellProperties.skipRowOnPaste = true;\n      }\n\n      if (this.isHidden(row - 1)) {\n        cellProperties.className = cellProperties.className || '';\n\n        if (cellProperties.className.indexOf('afterHiddenRow') === -1) {\n          cellProperties.className += ' afterHiddenRow';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n\n        if (classArr.length > 0) {\n          var containAfterHiddenRow = classArr.indexOf('afterHiddenRow');\n\n          if (containAfterHiddenRow > -1) {\n            classArr.splice(containAfterHiddenRow, 1);\n          }\n\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @private\n     * @param {Array} ranges An array of objects defining copyable cells.\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this;\n\n      // Ranges shouldn't be modified when `copyPasteEnabled` option is set to `true` (by default).\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled) {\n        return ranges;\n      }\n\n      var newRanges = [];\n\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startRow, range.endRow, function (visualRow) {\n          if (_this6.isHidden(visualRow)) {\n            if (!isHidden) {\n              pushRange(rangeStart, visualRow - 1, range.startCol, range.endCol);\n            }\n\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = visualRow;\n            }\n\n            if (visualRow === range.endRow) {\n              pushRange(rangeStart, visualRow, range.startCol, range.endCol);\n            }\n\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {HTMLElement} TH Header's TH element.\n     */\n\n  }, {\n    key: \"onAfterGetRowHeader\",\n    value: function onAfterGetRowHeader(row, TH) {\n      if (!_classPrivateFieldGet(this, _settings).indicators || row < 0) {\n        return;\n      }\n\n      var classList = [];\n\n      if (row >= 1 && this.isHidden(row - 1)) {\n        classList.push('afterHiddenRow');\n      }\n\n      if (row < this.hot.countRows() - 1 && this.isHidden(row + 1)) {\n        classList.push('beforeHiddenRow');\n      }\n\n      addClass(TH, classList);\n    }\n    /**\n     * Add Show-hide rows to context menu.\n     *\n     * @private\n     * @param {object} options An array of objects containing information about the pre-defined Context Menu items.\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideRowItem(this), showRowItem(this));\n    }\n    /**\n     * On map initialized hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMapInit\",\n    value: function onMapInit() {\n      if (Array.isArray(_classPrivateFieldGet(this, _settings).rows)) {\n        this.hideRows(_classPrivateFieldGet(this, _settings).rows);\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _classPrivateFieldSet(this, _settings, null);\n\n      _classPrivateFieldSet(this, _hiddenRowsMap, null);\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n    /**\n     * Cached settings from Handsontable settings.\n     *\n     * @private\n     * @type {object}\n     */\n\n  }]);\n\n  return HiddenRows;\n}(BasePlugin);"]},"metadata":{},"sourceType":"module"}