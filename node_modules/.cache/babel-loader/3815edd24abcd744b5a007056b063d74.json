{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\dragAndDrop\\\\dragAndDrop.js\";\n//Drag and drop para subir isometricas\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DragAndDrop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileList: [],\n      uploading: false\n    };\n  }\n\n  render() {\n    const {\n      Dragger\n    } = Upload;\n    var fileList = [];\n    const props = {\n      name: 'file',\n      multiple: true,\n      action: 'http://localhost:5000/upload',\n\n      onChange(info) {\n        const {\n          status\n        } = info.file;\n\n        if (status !== 'uploading') {\n          console.log(info.file, info.fileList);\n        }\n\n        if (status === 'done') {\n          message.success(`${info.file.name} file uploaded successfully.`);\n        } else if (status === 'error') {\n          message.error(`${info.file.name} file upload failed.`);\n        }\n      },\n\n      beforeUpload: file => {\n        this.setState(state => ({\n          fileList: [...state.fileList, file]\n        }));\n        return false;\n      },\n      fileList\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.handleUpload,\n        disabled: fileList.length === 0,\n        loading: this.state.uploading,\n        style: {\n          marginTop: 16\n        },\n        children: uploading ? 'Uploading' : 'Start Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dragger, { ...props,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-drag-icon\",\n          children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-text\",\n          children: \"Click or drag the isometrics to this area to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-hint\",\n          children: \"You can drop single or multiple isometrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), \",\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default DragAndDrop;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/dragAndDrop/dragAndDrop.js"],"names":["React","Upload","message","InboxOutlined","DragAndDrop","Component","state","fileList","uploading","render","Dragger","props","name","multiple","action","onChange","info","status","file","console","log","success","error","beforeUpload","setState","handleUpload","length","marginTop"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,SAASC,aAAT,QAA8B,mBAA9B;;;AAGA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAAyC;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAE/B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KAF+B;AAAA;;AAOzCC,EAAAA,MAAM,GAAG;AAET,UAAM;AAAEC,MAAAA;AAAF,QAAcT,MAApB;AAEA,QAAIM,QAAQ,GAAG,EAAf;AAEA,UAAMI,KAAK,GAAG;AACZC,MAAAA,IAAI,EAAE,MADM;AAEZC,MAAAA,QAAQ,EAAE,IAFE;AAGZC,MAAAA,MAAM,EAAE,8BAHI;;AAIZC,MAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,cAAM;AAAEC,UAAAA;AAAF,YAAaD,IAAI,CAACE,IAAxB;;AACA,YAAID,MAAM,KAAK,WAAf,EAA4B;AAC1BE,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB,EAAuBF,IAAI,CAACT,QAA5B;AACD;;AACD,YAAIU,MAAM,KAAK,MAAf,EAAuB;AACrBf,UAAAA,OAAO,CAACmB,OAAR,CAAiB,GAAEL,IAAI,CAACE,IAAL,CAAUN,IAAK,8BAAlC;AACD,SAFD,MAEO,IAAIK,MAAM,KAAK,OAAf,EAAwB;AAC7Bf,UAAAA,OAAO,CAACoB,KAAR,CAAe,GAAEN,IAAI,CAACE,IAAL,CAAUN,IAAK,sBAAhC;AACD;AACF,OAdW;;AAeZW,MAAAA,YAAY,EAAEL,IAAI,IAAI;AACpB,aAAKM,QAAL,CAAclB,KAAK,KAAK;AACtBC,UAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAV,EAAoBW,IAApB;AADY,SAAL,CAAnB;AAGA,eAAO,KAAP;AACC,OApBS;AAqBVX,MAAAA;AArBU,KAAd;AAwBI,wBACI;AAAA,8BACE,QAAC,MAAD;AACA,QAAA,IAAI,EAAC,SADL;AAEA,QAAA,OAAO,EAAE,KAAKkB,YAFd;AAGA,QAAA,QAAQ,EAAElB,QAAQ,CAACmB,MAAT,KAAoB,CAH9B;AAIA,QAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWE,SAJpB;AAKA,QAAA,KAAK,EAAE;AAAEmB,UAAAA,SAAS,EAAE;AAAb,SALP;AAAA,kBAOCnB,SAAS,GAAG,WAAH,GAAiB;AAP3B;AAAA;AAAA;AAAA;AAAA,cADF,eAUI,QAAC,OAAD,OAAaG,KAAb;AAAA,gCAEI;AAAG,UAAA,SAAS,EAAC,sBAAb;AAAA,iCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBC;;AA5DoC;;AA+DzC,eAAeP,WAAf","sourcesContent":["//Drag and drop para subir isometricas\r\n\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Upload, message } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\n\r\nclass DragAndDrop extends React.Component{\r\n\r\n  state = {\r\n    fileList: [],\r\n    uploading: false,\r\n  };\r\n\r\nrender (){\r\n\r\nconst { Dragger } = Upload;\r\n\r\nvar fileList = [];\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: 'http://localhost:5000/upload',\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n  beforeUpload: file => {\r\n    this.setState(state => ({\r\n      fileList: [...state.fileList, file],\r\n    }));\r\n    return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n    return(\r\n        <div>\r\n          <Button\r\n          type=\"primary\"\r\n          onClick={this.handleUpload}\r\n          disabled={fileList.length === 0}\r\n          loading={this.state.uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? 'Uploading' : 'Start Upload'}\r\n        </Button>\r\n            <Dragger {...props}>\r\n              \r\n                <p className=\"ant-upload-drag-icon\">\r\n                  <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Click or drag the isometrics to this area to upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                  You can drop single or multiple isometrics\r\n                </p>\r\n            </Dragger>,\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default DragAndDrop;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}