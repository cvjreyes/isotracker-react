{"ast":null,"code":"'use strict';\n\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\n\nvar anObject = require('../internals/an-object');\n\nvar toLength = require('../internals/to-length');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar advanceStringIndex = require('../internals/advance-string-index');\n\nvar regExpExec = require('../internals/regexp-exec-abstract'); // @@match logic\n\n\nfixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\n  return [// `String.prototype.match` method\n  // https://tc39.es/ecma262/#sec-string.prototype.match\n  function match(regexp) {\n    var O = requireObjectCoercible(this);\n    var matcher = regexp == undefined ? undefined : regexp[MATCH];\n    return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n  }, // `RegExp.prototype[@@match]` method\n  // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n  function (regexp) {\n    var res = maybeCallNative(nativeMatch, regexp, this);\n    if (res.done) return res.value;\n    var rx = anObject(regexp);\n    var S = String(this);\n    if (!rx.global) return regExpExec(rx, S);\n    var fullUnicode = rx.unicode;\n    rx.lastIndex = 0;\n    var A = [];\n    var n = 0;\n    var result;\n\n    while ((result = regExpExec(rx, S)) !== null) {\n      var matchStr = String(result[0]);\n      A[n] = matchStr;\n      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      n++;\n    }\n\n    return n === 0 ? null : A;\n  }];\n});","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/core-js/modules/es.string.match.js"],"names":["fixRegExpWellKnownSymbolLogic","require","anObject","toLength","requireObjectCoercible","advanceStringIndex","regExpExec","MATCH","nativeMatch","maybeCallNative","match","regexp","O","matcher","undefined","call","RegExp","String","res","done","value","rx","S","global","fullUnicode","unicode","lastIndex","A","n","result","matchStr"],"mappings":"AAAA;;AACA,IAAIA,6BAA6B,GAAGC,OAAO,CAAC,iDAAD,CAA3C;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,uCAAD,CAApC;;AACA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,mCAAD,CAAhC;;AACA,IAAIK,UAAU,GAAGL,OAAO,CAAC,mCAAD,CAAxB,C,CAEA;;;AACAD,6BAA6B,CAAC,OAAD,EAAU,CAAV,EAAa,UAAUO,KAAV,EAAiBC,WAAjB,EAA8BC,eAA9B,EAA+C;AACvF,SAAO,CACL;AACA;AACA,WAASC,KAAT,CAAeC,MAAf,EAAuB;AACrB,QAAIC,CAAC,GAAGR,sBAAsB,CAAC,IAAD,CAA9B;AACA,QAAIS,OAAO,GAAGF,MAAM,IAAIG,SAAV,GAAsBA,SAAtB,GAAkCH,MAAM,CAACJ,KAAD,CAAtD;AACA,WAAOM,OAAO,KAAKC,SAAZ,GAAwBD,OAAO,CAACE,IAAR,CAAaJ,MAAb,EAAqBC,CAArB,CAAxB,GAAkD,IAAII,MAAJ,CAAWL,MAAX,EAAmBJ,KAAnB,EAA0BU,MAAM,CAACL,CAAD,CAAhC,CAAzD;AACD,GAPI,EAQL;AACA;AACA,YAAUD,MAAV,EAAkB;AAChB,QAAIO,GAAG,GAAGT,eAAe,CAACD,WAAD,EAAcG,MAAd,EAAsB,IAAtB,CAAzB;AACA,QAAIO,GAAG,CAACC,IAAR,EAAc,OAAOD,GAAG,CAACE,KAAX;AAEd,QAAIC,EAAE,GAAGnB,QAAQ,CAACS,MAAD,CAAjB;AACA,QAAIW,CAAC,GAAGL,MAAM,CAAC,IAAD,CAAd;AAEA,QAAI,CAACI,EAAE,CAACE,MAAR,EAAgB,OAAOjB,UAAU,CAACe,EAAD,EAAKC,CAAL,CAAjB;AAEhB,QAAIE,WAAW,GAAGH,EAAE,CAACI,OAArB;AACAJ,IAAAA,EAAE,CAACK,SAAH,GAAe,CAAf;AACA,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,MAAJ;;AACA,WAAO,CAACA,MAAM,GAAGvB,UAAU,CAACe,EAAD,EAAKC,CAAL,CAApB,MAAiC,IAAxC,EAA8C;AAC5C,UAAIQ,QAAQ,GAAGb,MAAM,CAACY,MAAM,CAAC,CAAD,CAAP,CAArB;AACAF,MAAAA,CAAC,CAACC,CAAD,CAAD,GAAOE,QAAP;AACA,UAAIA,QAAQ,KAAK,EAAjB,EAAqBT,EAAE,CAACK,SAAH,GAAerB,kBAAkB,CAACiB,CAAD,EAAInB,QAAQ,CAACkB,EAAE,CAACK,SAAJ,CAAZ,EAA4BF,WAA5B,CAAjC;AACrBI,MAAAA,CAAC;AACF;;AACD,WAAOA,CAAC,KAAK,CAAN,GAAU,IAAV,GAAiBD,CAAxB;AACD,GA/BI,CAAP;AAiCD,CAlC4B,CAA7B","sourcesContent":["'use strict';\r\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\r\nvar anObject = require('../internals/an-object');\r\nvar toLength = require('../internals/to-length');\r\nvar requireObjectCoercible = require('../internals/require-object-coercible');\r\nvar advanceStringIndex = require('../internals/advance-string-index');\r\nvar regExpExec = require('../internals/regexp-exec-abstract');\r\n\r\n// @@match logic\r\nfixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\r\n  return [\r\n    // `String.prototype.match` method\r\n    // https://tc39.es/ecma262/#sec-string.prototype.match\r\n    function match(regexp) {\r\n      var O = requireObjectCoercible(this);\r\n      var matcher = regexp == undefined ? undefined : regexp[MATCH];\r\n      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\r\n    },\r\n    // `RegExp.prototype[@@match]` method\r\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\r\n    function (regexp) {\r\n      var res = maybeCallNative(nativeMatch, regexp, this);\r\n      if (res.done) return res.value;\r\n\r\n      var rx = anObject(regexp);\r\n      var S = String(this);\r\n\r\n      if (!rx.global) return regExpExec(rx, S);\r\n\r\n      var fullUnicode = rx.unicode;\r\n      rx.lastIndex = 0;\r\n      var A = [];\r\n      var n = 0;\r\n      var result;\r\n      while ((result = regExpExec(rx, S)) !== null) {\r\n        var matchStr = String(result[0]);\r\n        A[n] = matchStr;\r\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\r\n        n++;\r\n      }\r\n      return n === 0 ? null : A;\r\n    }\r\n  ];\r\n});\r\n"]},"metadata":{},"sourceType":"script"}