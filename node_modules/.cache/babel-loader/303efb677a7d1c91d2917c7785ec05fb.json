{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\dragAndDrop\\\\dragAndDrop.js\";\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Layout = ({\n  input,\n  previews,\n  submitButton,\n  dropzoneProps,\n  files,\n  extra: {\n    maxFiles\n  }\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [submitButton, /*#__PURE__*/_jsxDEV(\"div\", { ...dropzoneProps,\n      children: [previews, files.length < maxFiles && input]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Layout;\n\nclass DragAndDrop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileList: [],\n      success: false,\n      error: false,\n      uploaded: false,\n      errorAlerts: []\n    };\n\n    this.handleSubmit = (files, allFiles) => {\n      this.setState({\n        success: false,\n        uploaded: false,\n        error: false,\n        errorAlerts: [],\n        counter: 0\n      });\n      allFiles.forEach(file => {\n        const formData = new FormData();\n        formData.append('file', file);\n        this.uploadFile(formData);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Dropzone, {\n      LayoutComponent: Layout,\n      onSubmit: this.handleSubmit,\n      inputContent: \"Drop Files (Custom Layout)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DragAndDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/dragAndDrop/dragAndDrop.js"],"names":["Dropzone","React","Layout","input","previews","submitButton","dropzoneProps","files","extra","maxFiles","length","DragAndDrop","Component","state","fileList","success","error","uploaded","errorAlerts","handleSubmit","allFiles","setState","counter","forEach","file","formData","FormData","append","uploadFile","render"],"mappings":";AAAA,OAAO,yCAAP;AACA,OAAOA,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,YAAnB;AAAiCC,EAAAA,aAAjC;AAAgDC,EAAAA,KAAhD;AAAuDC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAA9D,CAAD,KAAkF;AAC/F,sBACE;AAAA,eAEGJ,YAFH,eAGE,oBAASC,aAAT;AAAA,iBAECF,QAFD,EAGCG,KAAK,CAACG,MAAN,GAAeD,QAAf,IAA2BN,KAH5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAMD,M;;AAiBN,MAAMS,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAAyC;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAE/B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,KAAK,EAAE,KAHD;AAINC,MAAAA,QAAQ,EAAE,KAJJ;AAKNC,MAAAA,WAAW,EAAE;AALP,KAF+B;;AAAA,SAUvCC,YAVuC,GAUxB,CAACZ,KAAD,EAAQa,QAAR,KAAqB;AAClC,WAAKC,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAE,KADG;AAEZE,QAAAA,QAAQ,EAAE,KAFE;AAGZD,QAAAA,KAAK,EAAE,KAHK;AAIZE,QAAAA,WAAW,EAAE,EAJD;AAKZI,QAAAA,OAAO,EAAE;AALG,OAAd;AAQAF,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,IAAI,IAAI;AAEvB,cAAMC,QAAQ,GAAI,IAAIC,QAAJ,EAAlB;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACA,aAAKI,UAAL,CAAgBH,QAAhB;AAED,OAND;AAOD,KA1BsC;AAAA;;AA4BvCI,EAAAA,MAAM,GAAE;AACN,wBACE,QAAC,QAAD;AACE,MAAA,eAAe,EAAE3B,MADnB;AAEE,MAAA,QAAQ,EAAE,KAAKiB,YAFjB;AAGE,MAAA,YAAY,EAAC;AAHf;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AApCsC;;AAuCzC,eAAeR,WAAf","sourcesContent":["import 'react-dropzone-uploader/dist/styles.css'\r\nimport Dropzone from 'react-dropzone-uploader'\r\nimport React from 'react'\r\n\r\nconst Layout = ({ input, previews, submitButton, dropzoneProps, files, extra: { maxFiles } }) => {\r\n  return (\r\n    <div>\r\n      \r\n      {submitButton}\r\n      <div {...dropzoneProps}>\r\n      \r\n      {previews}\r\n      {files.length < maxFiles && input}\r\n        \r\n      </div>\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nclass DragAndDrop extends React.Component{\r\n\r\n  state = {\r\n    fileList: [],\r\n    success: false,\r\n    error: false,\r\n    uploaded: false,\r\n    errorAlerts: [],\r\n  };\r\n\r\n  handleSubmit = (files, allFiles) => {\r\n    this.setState({\r\n      success: false,\r\n      uploaded: false,\r\n      error: false,\r\n      errorAlerts: [],\r\n      counter: 0\r\n    })\r\n\r\n    allFiles.forEach(file => {\r\n\r\n      const formData  = new FormData();\r\n      formData.append('file', file);\r\n      this.uploadFile(formData);\r\n\r\n    });    \r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <Dropzone\r\n        LayoutComponent={Layout}\r\n        onSubmit={this.handleSubmit}\r\n        inputContent=\"Drop Files (Custom Layout)\"\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default DragAndDrop;"]},"metadata":{},"sourceType":"module"}