{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\isoCtrlF\\\\isoCtrlF.js\",\n    _s = $RefreshSig$();\n\nimport DataTable from \"../../components/datatable/datatable\";\nimport ReportBtns from \"../../components/reportBtns/reportBtns\";\nimport StateTable from \"../../components/stateTable/stateTable\";\nimport NavBtns from \"../../components/navBtns/navBtns\";\nimport DragAndDrop from \"../../components/dragAndDrop/dragAndDrop\";\nimport \"./isoCtrlF.css\";\nimport React, { useState, useEffect } from 'react';\nimport ActionButtons from \"../../components/actionBtns/actionBtns\";\nimport SelectPag from \"../../components/selectPag/selectPag\";\nimport CheckInTable from \"../../components/checkInTable/checkInTable\";\nimport NavBar from '../../components/navBar/navBar';\nimport MyTrayBtn from \"../../components/myTrayBtn/myTrayBtn\";\nimport MyTrayTable from \"../../components/myTrayTable/myTrayTable\";\nimport BinTable from \"../../components/binTable/binTable\";\nimport OnHoldTable from \"../../components/onHoldTable/onHoldTable\";\nimport StatusDataTable from \"../../components/statusDataTable/statusDataTable\";\nimport HistoryDataTable from \"../../components/historyDataTable/historyDataTable\";\nimport RoleDropDown from \"../../components/roleDropDown/roleDropDown\";\nimport Alert from '@material-ui/lab/Alert';\nimport Collapse from '@material-ui/core/Collapse';\nimport ProcInstTable from \"../../components/procInstTable/procInstTable\";\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport ReportBoxBtns from \"../../components/reportBoxBtns/reportBoxBtns\";\nimport ProgressBtn from \"../../components/progressBtn/progressBtn\";\nimport ProgressPlot from \"../../components/progressPlot/progressPlot\";\nimport ModelledBtn from \"../../components/modelledBtn/modelledBtn\";\nimport ModelledDataTable from \"../../components/modelledDataTable/modelledDataTable\";\nimport UsersDataTable from \"../../components/usersDataTable/usersDataTable\";\nimport IsoTrackerLogo from \"../../assets/images/IsoTracker.svg\";\nimport Trash from \"../../assets/images/Trash.png\";\nimport Hold from \"../../assets/images/Prohibit.png\";\nimport Issued from \"../../assets/images/FolderOpen.png\";\nimport Reports from \"../../assets/images/Notepad.png\";\nimport Modelled from \"../../assets/images/Cube.png\";\nimport ProcInst from \"../../assets/images/MagnifyingGlass.png\";\nimport Progress from \"../../assets/images/ChartBar.png\";\nimport UploadIcon from \"../../assets/images/upload.png\";\nimport UsersIcon from \"../../assets/images/user.png\";\nimport LoadingScreen from \"../../components/loadingScreen/loadingScreen\";\nimport AlertF from \"../../components/alert/alert\";\nimport IsoControlModelledDataTable from \"../../components/isoControlModelledDataTable/isoControlModelledDataTable\";\nimport IsoControlNotModelledDataTable from \"../../components/isoControlNotModelledDataTable/isoControlNotModelledDataTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IsoCtrlF = () => {\n  _s();\n\n  document.body.style.zoom = 0.8;\n  document.title = process.env.REACT_APP_APP_NAMEPROJ;\n  const [pagination, setPagination] = useState(10); //Controla el numero de entradas por pagina de la tabla\n\n  const [currentRole, setCurrentRole] = useState();\n  const [roles, setRoles] = useState();\n  const [selected, setSelected] = useState([]);\n  const [updateData, setUpdateData] = useState();\n  const [comment, setComment] = useState(\" \");\n  const [downloadZip, setDownloadzip] = useState(new JSZip());\n  const [loading, setLoading] = useState(false);\n  const [errorUnclaim, setErrorUnclaim] = useState(false);\n  const [errorPI, setErrorPI] = useState(false);\n  const [errorCL, setErrorCL] = useState(false);\n  const [transactionSuccess, setTransactionSuccess] = useState(false);\n  const [errorReports, setErrorReports] = useState(false);\n  const [errorUnclaimR, setErrorUnclaimR] = useState(false);\n  const [warningSelected, setWarningSelected] = useState(false);\n  const [blocked, setBlocked] = useState(false);\n  const [errorReportD, setErrorReportD] = useState(false);\n  const [errorDeleteUser, setErrorDeleteUser] = useState(false);\n  const [content, setContent] = useState();\n  const [navBar, setNavBar] = useState(null);\n  const [modelledWeight, setModelledWeight] = useState(null);\n  const [notModelledWeight, setNotModelledWeight] = useState(null);\n  const [totalIsocontrolWeight, setTotalIsocontrolWeight] = useState(null);\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"tab\"));\n  var dataTableHeight = \"500px\";\n\n  if (pagination === 10) {\n    dataTableHeight = \"520px\";\n  }\n\n  if (pagination === 25) {\n    dataTableHeight = \"1050px\";\n  }\n\n  if (pagination === 50) {\n    dataTableHeight = \"1970px\";\n  }\n\n  if (pagination === 100) {\n    dataTableHeight = \"3860px\";\n  }\n\n  if (pagination === 500) {\n    dataTableHeight = \"19000px\";\n  } //Componentes de la pagina que varian en funcion del estado\n\n\n  var uploadButton, actionButtons, tableContent, progressBtn, modelledBtn, myTrayBtn, usersButton;\n  var currentTabText = currentTab;\n\n  if (currentTabText === \"LDE/IsoControl\") {\n    currentTabText = \"LOS/IsoControl\";\n  }\n\n  tableContent = /*#__PURE__*/_jsxDEV(DataTable, {\n    forceUnclaim: forceUnclaim.bind(this),\n    onChange: value => setSelected(value),\n    selected: selected,\n    pagination: pagination,\n    currentTab: currentTab,\n    currentRole: currentRole,\n    updateData: updateData,\n    unlock: unlock.bind(this),\n    rename: rename.bind(this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 20\n  }, this);\n\n  var pageSelector = /*#__PURE__*/_jsxDEV(SelectPag, {\n    onChange: value => setPagination(value),\n    pagination: pagination\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 24\n  }, this);\n\n  var currentUser = secureStorage.getItem('user');\n  useEffect(() => {\n    if (process.env.REACT_APP_PROGRESS === \"0\") {\n      setContent( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(LoadingScreen, {\n          progress: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 24\n      }, this));\n      setTimeout(() => {\n        setContent( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(LoadingScreen, {\n            progress: \"75\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 28\n        }, this));\n      }, 1000);\n      setTimeout(() => {\n        setContent( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(LoadingScreen, {\n            progress: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 28\n        }, this));\n      }, 2000);\n      setTimeout(() => {\n        setNavBar( /*#__PURE__*/_jsxDEV(NavBar, {\n          onChange: value => setCurrentTab(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 27\n        }, this));\n        setContent(null);\n      }, 2300);\n    } else {\n      setNavBar( /*#__PURE__*/_jsxDEV(NavBar, {\n        onChange: value => setCurrentTab(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }, this));\n      setContent(null);\n    }\n  }, []);\n  useEffect(() => {\n    const body = {\n      user: currentUser\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/roles/user\", options).then(response => response.json()).then(json => {\n      setRoles(json.roles);\n\n      if (secureStorage.getItem('role') !== null) {\n        setCurrentRole(secureStorage.getItem('role'));\n      } else {\n        secureStorage.setItem('role', json.roles[0]);\n        setCurrentRole(secureStorage.getItem('role'));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    setErrorPI(false);\n    setErrorUnclaimR(false);\n    setErrorCL(false);\n    setUpdateData(!updateData);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setErrorReports(false);\n    setLoading(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n  }, [currentRole]);\n  useEffect(() => {\n    setErrorUnclaimR(false);\n    setErrorPI(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setLoading(false);\n    setErrorReports(false);\n    setSelected([]);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n  }, [currentTab]);\n\n  const setIsoModelledWeight = weight => {\n    setModelledWeight(weight);\n  };\n\n  const setIsoNotModelledWeight = weight => {\n    setModelledWeight(weight);\n  };\n\n  useEffect(() => {\n    setTotalIsocontrolWeight(modelledWeight + notModelledWeight);\n  }, [modelledWeight, notModelledWeight]);\n\n  const successAlert = () => {\n    setTransactionSuccess(true);\n    setTimeout(function () {\n      setTransactionSuccess(false);\n    }, 3000);\n  };\n\n  const getProgress = () => {\n    setUpdateData(!updateData);\n  };\n\n  const claim = async event => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setWarningSelected(false);\n    setErrorPI(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      if (currentTab === \"Process\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/claimProc\", options);\n        }\n      } else if (currentTab === \"Instrument\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/claimInst\", options);\n        }\n      } else {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/claim\", options);\n        }\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  };\n\n  const forceClaim = async username => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: username,\n          file: selected[i],\n          los: currentUser\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/forceClaim\", options);\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    }\n  };\n\n  const unclaim = async event => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      if (currentRole === \"Process\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/unclaimProc\", options);\n        }\n      } else if (currentRole === \"Instrument\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/unclaimInst\", options);\n        }\n      } else {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/unclaim\", options).then(response => response.json()).then(json => {\n            if (json.error === \"forced\") {\n              setErrorUnclaim(true);\n            } else if (json.error === \"returned\") {\n              setErrorUnclaimR(true);\n            }\n          }).catch(err => {});\n        }\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  };\n\n  async function forceUnclaim(fileName) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setLoading(true);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/forceUnclaim\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n    setSelected([]);\n  }\n\n  const verifyClick = async event => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/verify\", options);\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  };\n\n  async function cancelVerifyClick(filename) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setLoading(true);\n    setWarningSelected(false);\n    setErrorReportD(false);\n    setBlocked(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: filename,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/cancelVerify\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n    setSelected([]);\n  }\n\n  async function transaction(destiny, comments) {\n    if (selected.length > 0) {\n      setErrorUnclaimR(false);\n      setWarningSelected(false);\n      setErrorReports(false);\n      setErrorCL(false);\n      setErrorUnclaim(false);\n      setErrorPI(false);\n      setTransactionSuccess(false);\n      setLoading(true);\n      setErrorReportD(false);\n      setBlocked(false);\n      setErrorDeleteUser(false);\n\n      if (destiny === \"Design\") {\n        if (comment.length > 1) {\n          setComment(\" \");\n          localStorage.setItem(\"update\", true);\n\n          for (let i = 0; i < selected.length; i++) {\n            const body = {\n              user: currentUser,\n              fileName: selected[i],\n              to: destiny,\n              role: secureStorage.getItem(\"role\"),\n              comment: comment,\n              deleted: 0,\n              onhold: 0\n            };\n            const options = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(body)\n            };\n            await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/transaction\", options).then(response => response.json()).then(json => {\n              if (json.blocked) {\n                setBlocked(true);\n              } else {\n                successAlert();\n              }\n            });\n          }\n        } else {}\n      } else if (destiny === \"LDE/Isocontrol\") {\n        for (let i = 0; i < selected.length; i++) {\n          const options = {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/piStatus/\" + selected[i], options).then(response => response.json()).then(async json => {\n            if (json.sit === 1 || json.sit === 4 || json.sit === 5 || json.spo === 1 || json.spo === 4 || json.spo === 5) {\n              localStorage.setItem(\"update\", true);\n              setErrorPI(true);\n              setTransactionSuccess(false);\n            } else {\n              localStorage.setItem(\"update\", true);\n              let deleted,\n                  hold = 0;\n              const body = {\n                user: currentUser,\n                fileName: selected[i],\n                to: destiny,\n                role: secureStorage.getItem(\"role\"),\n                comment: null,\n                deleted: deleted,\n                onhold: hold\n              };\n              const options = {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              };\n              await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/transaction\", options).then(response => response.json()).then(async json => {\n                if (json.error) {\n                  await setErrorCL(true);\n                } else if (json.blocked) {\n                  setBlocked(true);\n                }\n              });\n\n              if (!errorCL && !blocked) {\n                successAlert();\n              }\n            }\n          });\n        }\n\n        await setUpdateData(!updateData);\n        setLoading(false);\n      } else if (destiny === \"On hold\") {\n        localStorage.setItem(\"update\", true);\n        let deleted,\n            hold = 0;\n\n        if (destiny === \"Recycle bin\") {\n          deleted = 1;\n        }\n\n        if (destiny === \"On hold\") {\n          hold = 1;\n        }\n\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            fileName: selected[i],\n            to: destiny,\n            role: secureStorage.getItem(\"role\"),\n            comment: comments,\n            deleted: deleted,\n            onhold: hold\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/transaction\", options).then(response => response.json()).then(json => {\n            if (json.blocked) {\n              setBlocked(true);\n            } else {\n              successAlert();\n            }\n          });\n        }\n      } else {\n        localStorage.setItem(\"update\", true);\n        let deleted,\n            hold = 0;\n\n        if (destiny === \"Recycle bin\") {\n          deleted = 1;\n        }\n\n        if (destiny === \"On hold\") {\n          hold = 1;\n        }\n\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            fileName: selected[i],\n            to: destiny,\n            role: secureStorage.getItem(\"role\"),\n            comment: null,\n            deleted: deleted,\n            onhold: hold\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/transaction\", options).then(response => response.json()).then(json => {\n            if (json.blocked) {\n              setBlocked(true);\n            } else {\n              successAlert();\n            }\n          });\n        }\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  async function returnLead(destiny) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setWarningSelected(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setErrorUnclaimR(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        setLoading(true);\n        const body = {\n          user: currentUser,\n          fileName: selected[i],\n          to: destiny,\n          from: currentTab\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/returnLead\", options).then(response => response.json()).then(json => {\n          if (json.blocked) {\n            setBlocked(true);\n          } else {\n            successAlert();\n          }\n        });\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  async function returnLeadStress() {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setErrorUnclaimR(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          comments: comment\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/returnLeadStress\", options).then(response => response.json()).then(json => {\n          if (json.blocked) {\n            setBlocked(true);\n          } else {\n            successAlert();\n          }\n        });\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  async function restore() {\n    setErrorReports(false);\n    setErrorUnclaimR(false);\n    setErrorReportD(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          fileName: selected[i],\n          user: currentUser,\n          role: currentRole,\n          deleted: 0,\n          onhold: 0\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/restore\", options);\n        successAlert();\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  async function sendProcessClick(fileName) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setLoading(true);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/process\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n    setSelected([]);\n  }\n\n  async function sendInstrumentClick(fileName) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorUnclaimR(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setLoading(true);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/instrument\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n    setSelected([]);\n  }\n\n  async function sendCancelProcessClick(fileName) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorUnclaimR(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setLoading(true);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      file: fileName,\n      user: currentUser,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/cancelProc\", options);\n    await setUpdateData(!updateData);\n    await setLoading(false);\n    setSelected([]);\n  }\n\n  async function sendCancelInstrumentClick(fileName) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorUnclaimR(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setWarningSelected(false);\n    setLoading(true);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      file: fileName,\n      user: currentUser,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/cancelInst\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n    setSelected([]);\n  }\n\n  function updateD() {\n    setUpdateData(!updateData);\n  }\n\n  async function downloadFiles() {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const options = {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/pdf\"\n          }\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getAttach/\" + selected[i], options).then(response => response.json()).then(async json => {\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/download/\" + selected[i], options).then(res => res.blob()).then(async response => {\n            setDownloadzip(downloadZip.file(selected[i], new Blob([response]), {\n              binary: true\n            }));\n\n            for (let i = 0; i < json.length; i++) {\n              await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/download/\" + json[i], options).then(res => res.blob()).then(response => {\n                setDownloadzip(downloadZip.file(json[i], new Blob([response]), {\n                  binary: true\n                }));\n              });\n            }\n          });\n        });\n      }\n\n      const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1));\n      downloadZip.generateAsync({\n        type: \"blob\"\n      }).then(function (blob) {\n        // 1) generate the zip file\n        saveAs(blob, zipname);\n      });\n      await setDownloadzip(new JSZip()); //await setAttachFiles(null)\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  async function downloadHistory() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadHistory/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"FROM\", \"TO\", \"DATE\", \"COMMENT\", \"USER\"];\n      exportToExcel(JSON.parse(json), \"Comments\", headers);\n    });\n  }\n\n  async function downloadStatus() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadStatus/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"START_DATE\", \"CURRENT_DATE\", \"CONDITION\", \"TRAY\"];\n      exportToExcel(JSON.parse(json), \"Status\", headers);\n    });\n  }\n\n  async function downloadPI() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadPI/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"PROCESS\", \"INSTRUMENTATION\", \"UPDATED_AT\"];\n      exportToExcel(JSON.parse(json), \"IsoStatusSIT-SPO\", headers);\n    });\n  }\n\n  async function downloadIssued() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadIssued/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"REV0\", \"REV1\", \"REV2\", \"REV3\", \"REV4\"];\n      exportToExcel(JSON.parse(json), \"IsoStatusIssued\", headers);\n    });\n  }\n\n  async function downloadStatus3D() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadStatus3D/\").then(response => response.json()).then(json => {\n      let output = JSON.stringify(json.log);\n      output = output.substring(1, output.length - 1);\n      output = output.replaceAll(\",\", \"\\n\");\n      output = output.replaceAll(/['\"]+/g, \"\");\n      const data = new Blob([output], {\n        type: 'txt'\n      });\n      FileSaver.saveAs(data, \"fromIsoTrackerTo3d.mac\");\n    });\n  }\n\n  async function downloadModelled() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadModelled/\").then(response => response.json()).then(json => {\n      const headers = [\"TAG\", \"ISO_ID\", \"TYPE\"];\n      exportToExcel(JSON.parse(json), \"Modelled\", headers);\n    });\n  }\n\n  async function downloadUsers() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadUsers\").then(response => response.json()).then(json => {\n      console.log(json);\n      const headers = [\"USERNAME\", \"EMAIL\", \"ROLE\"];\n      exportToExcel(json, \"Users\", headers);\n    });\n  }\n\n  const exportToExcel = (apiData, fileName, headers) => {\n    setErrorReports(false);\n    const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1'];\n    const fileExtension = \".xlsx\";\n    let wscols = [];\n\n    for (let i = 0; i < headers.length; i++) {\n      wscols.push({\n        width: 35\n      });\n    }\n\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    ws[\"!cols\"] = wscols;\n\n    for (let i = 0; i < headers.length; i++) {\n      ws[header_cells[i]].v = headers[i];\n    }\n\n    const wb = {\n      Sheets: {\n        data: ws\n      },\n      SheetNames: [\"data\"]\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  async function setUploading(active) {\n    setErrorReports(false);\n    setErrorReportD(false);\n    setLoading(active);\n\n    if (!active) {\n      successAlert();\n    }\n  }\n\n  async function setErrorReport() {\n    setErrorReports(true);\n  }\n\n  async function issue(transmittal, date) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole,\n          transmittal: transmittal,\n          date: date\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/toIssue\", options).then(response => response.json()).then(json => {\n          if (json.blocked) {\n            setBlocked(true);\n          } else {\n            successAlert();\n          }\n        });\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    }\n  }\n\n  async function newRev() {\n    setErrorReports(false);\n    setErrorUnclaimR(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setErrorReportD(false);\n    setBlocked(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/newRev\", options).then(response => response.json()).then(json => {\n          if (json.blocked) {\n            setBlocked(true);\n          } else {\n            successAlert();\n          }\n        });\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    }\n  }\n\n  async function request() {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/request\", options);\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    }\n  }\n\n  async function returnIso(destiny, comments) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setErrorReportD(false);\n    setBlocked(false);\n    setErrorDeleteUser(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      if (comments.length < 1) {\n        comments = comment;\n      }\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole,\n          from: currentTab,\n          destiny: destiny,\n          comments: comments\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/returnIso\", options).then(response => response.json()).then(json => {\n          if (json.blocked) {\n            setBlocked(true);\n          } else {\n            successAlert();\n          }\n        });\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      setComment(\"\");\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  async function success() {\n    successAlert();\n  }\n\n  async function unlock(filename) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    setErrorReportD(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      fileName: filename\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/unlock\", options).then(response => console.log(\"Unlocked\"));\n    setUpdateData(!updateData);\n  }\n\n  async function rename(newName, oldName) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setErrorReportD(false);\n    setBlocked(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      oldName: oldName,\n      newName: newName\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/rename\", options).then(response => console.log(\"Cambiado\"));\n    successAlert();\n    setUpdateData(!updateData);\n  }\n\n  async function setErrorReportData(index) {\n    setErrorReportD(true);\n  }\n\n  async function addUser(username, email, roles) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setErrorReportD(false);\n    setBlocked(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      username: username,\n      email: email,\n      roles: roles\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/createUser\", options).then(response => response.json()).then(json => {\n      if (json.success) {\n        successAlert();\n      }\n    });\n    setUpdateData(!updateData);\n  }\n\n  async function deleteUser(id) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setErrorReportD(false);\n    setBlocked(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/user/\" + id, options).then(response => response.json()).then(json => {\n      if (json.error) {\n        setErrorDeleteUser(true);\n      } else {\n        successAlert();\n      }\n    });\n    setUpdateData(!updateData);\n  }\n\n  async function submitRoles(id, roles) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setErrorReportD(false);\n    setBlocked(false);\n    setErrorDeleteUser(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      id: id,\n      roles: roles\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/users/manageRoles\", options).then(response => response.json()).then(json => {\n      if (json.success) {\n        successAlert();\n      }\n    });\n    setUpdateData(!updateData);\n  }\n\n  if (currentTab === \"Upload IsoFiles\") {\n    secureStorage.setItem(\"tab\", \"Upload IsoFiles\");\n    tableContent = /*#__PURE__*/_jsxDEV(DragAndDrop, {\n      mode: \"upload\",\n      role: currentRole,\n      user: currentUser,\n      uploaded: getProgress.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1557,\n      columnNumber: 24\n    }, this);\n    pageSelector = null;\n  }\n\n  if (currentTab === \"CheckBy\") {\n    tableContent = /*#__PURE__*/_jsxDEV(CheckInTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1560,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"My Tray\") {\n    tableContent = /*#__PURE__*/_jsxDEV(MyTrayTable, {\n      updateData: updateData,\n      onChange: value => setSelected(value),\n      cancelVerifyClick: cancelVerifyClick.bind(this),\n      sendProcessClick: sendProcessClick.bind(this),\n      success: success.bind(this),\n      sendInstrumentClick: sendInstrumentClick.bind(this),\n      sendCancelProcessClick: sendCancelProcessClick.bind(this),\n      sendCancelInstrumentClick: sendCancelInstrumentClick.bind(this),\n      updateD: updateD.bind(this),\n      pagination: pagination,\n      currentRole: currentRole,\n      currentUser: currentUser,\n      selected: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1562,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Recycle bin\") {\n    tableContent = /*#__PURE__*/_jsxDEV(BinTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1564,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"On hold\") {\n    tableContent = /*#__PURE__*/_jsxDEV(OnHoldTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1566,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Status\") {\n    tableContent = /*#__PURE__*/_jsxDEV(StatusDataTable, {\n      onChange: value => setSelected(value),\n      pagination: pagination,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1568,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"History\") {\n    tableContent = /*#__PURE__*/_jsxDEV(HistoryDataTable, {\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1570,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Process\" || currentTab === \"Instrument\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ProcInstTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1572,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Reports\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ReportBoxBtns, {\n      user: currentUser,\n      downloadHistory: downloadHistory.bind(this),\n      downloadStatus: downloadStatus.bind(this),\n      downloadPI: downloadPI.bind(this),\n      downloadIssued: downloadIssued.bind(this),\n      setErrorReport: setErrorReport.bind(this),\n      setUploading: setUploading.bind(this),\n      downloadStatus3D: downloadStatus3D.bind(this),\n      downloadModelled: downloadModelled.bind(this),\n      downloadUsers: downloadUsers.bind(this),\n      setErrorReportData: setErrorReportData.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1574,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (process.env.REACT_APP_PROGRESS === \"1\") {\n    progressBtn = /*#__PURE__*/_jsxDEV(ProgressBtn, {\n      onChange: value => setCurrentTab(\"Progress\"),\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1576,\n      columnNumber: 23\n    }, this);\n    modelledBtn = /*#__PURE__*/_jsxDEV(ModelledBtn, {\n      onChange: value => setCurrentTab(\"Modelled\"),\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1577,\n      columnNumber: 23\n    }, this);\n  }\n\n  if (currentTab === \"Progress\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ProgressPlot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1579,\n      columnNumber: 24\n    }, this);\n    dataTableHeight = \"500px\";\n  }\n\n  if (currentTab === \"Modelled\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ModelledDataTable, {\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1582,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentRole !== \"Review\") {\n    myTrayBtn = /*#__PURE__*/_jsxDEV(MyTrayBtn, {\n      onChange: value => setCurrentTab(value),\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1584,\n      columnNumber: 21\n    }, this);\n  }\n\n  if (currentRole === \"SpecialityLead\") {\n    if (currentTab === \"Users\") {\n      usersButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Users\"),\n        style: {\n          width: \"100px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: UsersIcon,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1587,\n          columnNumber: 123\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1587,\n          columnNumber: 214\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 27\n      }, this);\n      secureStorage.setItem(\"tab\", \"Users\");\n    } else {\n      usersButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Users\"),\n        style: {\n          width: \"100px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: UsersIcon,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1590,\n          columnNumber: 123\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1590,\n          columnNumber: 214\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1590,\n        columnNumber: 27\n      }, this);\n    }\n  }\n\n  if (currentTab === \"Users\") {\n    tableContent = /*#__PURE__*/_jsxDEV(UsersDataTable, {\n      pagination: pagination,\n      updateData: updateData,\n      deleteUser: deleteUser.bind(this),\n      submitRoles: submitRoles.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1594,\n      columnNumber: 24\n    }, this);\n\n    if (pagination === 10) {\n      dataTableHeight = \"500px\";\n    }\n\n    if (pagination === 25) {\n      dataTableHeight = \"1120px\";\n    }\n\n    if (pagination === 50) {\n      dataTableHeight = \"2150px\";\n    }\n\n    if (pagination === 100) {\n      dataTableHeight = \"4200px\";\n    }\n  }\n\n  if ((currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Design\" || (currentRole === \"Stress\" || currentRole === \"StressLead\") && currentTab === \"Stress\" || (currentRole === \"Supports\" || currentRole === \"SupportsLead\") && currentTab === \"Supports\" || currentRole === \"Materials\" && currentTab === \"Materials\" || currentRole === \"Issuer\" && currentTab === \"Issuer\" || currentRole === \"SpecialityLead\" && currentTab === \"SpecialityLead\" || currentTab === \"My Tray\" || (currentTab === \"Recycle bin\" || currentTab === \"On hold\") && currentRole === \"DesignLead\" || currentRole === \"SpecialityLead\" && currentTab !== \"Progress\" || currentTab === \"Process\" && currentRole === \"Process\" || currentRole === \"Instrument\" && currentTab === \"Instrument\" || (currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Issued\") {\n    actionButtons = /*#__PURE__*/_jsxDEV(ActionButtons, {\n      claimClick: claim.bind(this),\n      verifyClick: verifyClick.bind(this),\n      unclaimClick: unclaim.bind(this),\n      transaction: transaction.bind(this),\n      restoreClick: restore.bind(this),\n      returnLead: returnLead.bind(this),\n      returnLeadStress: returnLeadStress.bind(this),\n      downloadFiles: downloadFiles.bind(this),\n      forceClaim: forceClaim.bind(this),\n      issue: issue.bind(this),\n      newRev: newRev.bind(this),\n      request: request.bind(this),\n      returnIso: returnIso.bind(this),\n      addUser: addUser.bind(this),\n      onlyDownload: false,\n      currentTab: currentTab,\n      user: currentUser,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1620,\n      columnNumber: 25\n    }, this);\n  } else if (currentTab !== \"History\" && currentTab !== \"Upload IsoFiles\" && currentTab !== \"Recycle bin\" && currentTab !== \"Reports\" && currentTab !== \"Progress\" && currentTab !== \"Modelled\") {\n    actionButtons = /*#__PURE__*/_jsxDEV(ActionButtons, {\n      claimClick: claim.bind(this),\n      verifyClick: verifyClick.bind(this),\n      unclaimClick: unclaim.bind(this),\n      transaction: transaction.bind(this),\n      restoreClick: restore.bind(this),\n      returnLead: returnLead.bind(this),\n      returnLeadStress: returnLeadStress.bind(this),\n      downloadFiles: downloadFiles.bind(this),\n      forceClaim: forceClaim.bind(this),\n      issue: issue.bind(this),\n      newRev: newRev.bind(this),\n      request: request.bind(this),\n      returnIso: returnIso.bind(this),\n      addUser: addUser.bind(this),\n      onlyDownload: true,\n      currentTab: currentTab,\n      user: currentUser,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1622,\n      columnNumber: 25\n    }, this);\n  }\n\n  if (currentTab === \"Modelled\") {\n    actionButtons = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"action__btn\",\n      onClick: () => downloadModelled(),\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1625,\n      columnNumber: 25\n    }, this);\n  }\n\n  if (currentRole === \"Project\") {\n    actionButtons = null;\n  }\n\n  let recycleBinBtn,\n      onHoldBtn,\n      issuedBtn,\n      reportsBtn,\n      processBtn,\n      instrumentationBtn = null;\n\n  if (currentTab === \"Recycle bin\") {\n    recycleBinBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"Recycle bin\"),\n      style: {\n        backgroundColor: \"#99C6F8\",\n        marginLeft: \"232px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Trash,\n        alt: \"trash\",\n        className: \"navBar__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1636,\n        columnNumber: 159\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Trash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1636,\n        columnNumber: 219\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1636,\n      columnNumber: 25\n    }, this);\n  } else {\n    recycleBinBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"Recycle bin\"),\n      style: {\n        marginLeft: \"232px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Trash,\n        alt: \"trash\",\n        className: \"navBar__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1638,\n        columnNumber: 132\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Trash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1638,\n        columnNumber: 192\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1638,\n      columnNumber: 25\n    }, this);\n  }\n\n  if (currentTab === \"On hold\") {\n    onHoldBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"On hold\"),\n      style: {\n        backgroundColor: \"#99C6F8\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Hold,\n        alt: \"hold\",\n        className: \"navBar__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1642,\n        columnNumber: 131\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Hold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1642,\n        columnNumber: 189\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1642,\n      columnNumber: 21\n    }, this);\n  } else {\n    onHoldBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"On hold\"),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Hold,\n        alt: \"hold\",\n        className: \"navBar__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1645,\n        columnNumber: 95\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Hold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1645,\n        columnNumber: 153\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1645,\n      columnNumber: 21\n    }, this);\n  }\n\n  if (currentTab === \"Issued\") {\n    issuedBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"Issued\"),\n      style: {\n        backgroundColor: \"#99C6F8\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Issued,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1649,\n        columnNumber: 130\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Issued\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1649,\n        columnNumber: 218\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1649,\n      columnNumber: 21\n    }, this);\n  } else {\n    issuedBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"Issued\"),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Issued,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1652,\n        columnNumber: 94\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Issued\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1652,\n        columnNumber: 182\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1652,\n      columnNumber: 21\n    }, this);\n  }\n\n  if (currentTab === \"Reports\") {\n    reportsBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"Reports\"),\n      style: {\n        backgroundColor: \"#99C6F8\",\n        width: \"120px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Reports,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1656,\n        columnNumber: 147\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1656,\n        columnNumber: 236\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1656,\n      columnNumber: 22\n    }, this);\n    pageSelector = null;\n  } else {\n    reportsBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"Reports\"),\n      style: {\n        width: \"120px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Reports,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1659,\n        columnNumber: 120\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1659,\n        columnNumber: 209\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1659,\n      columnNumber: 22\n    }, this);\n  }\n\n  if (currentTab === \"Progress\") {\n    progressBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"Progress\"),\n      style: {\n        backgroundColor: \"#99C6F8\",\n        width: \"120px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Progress,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1663,\n        columnNumber: 149\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1663,\n        columnNumber: 239\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1663,\n      columnNumber: 23\n    }, this);\n    pageSelector = null;\n  } else if (process.env.REACT_APP_PROGRESS === \"1\") {\n    progressBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"Progress\"),\n      style: {\n        width: \"120px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Progress,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1666,\n        columnNumber: 122\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1666,\n        columnNumber: 212\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1666,\n      columnNumber: 23\n    }, this);\n  }\n\n  if (currentTab === \"Modelled\") {\n    modelledBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"Modelled\"),\n      style: {\n        backgroundColor: \"#99C6F8\",\n        width: \"120px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Modelled,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1670,\n        columnNumber: 149\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Modelled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1670,\n        columnNumber: 239\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1670,\n      columnNumber: 23\n    }, this);\n  } else if (process.env.REACT_APP_PROGRESS === \"1\") {\n    modelledBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navBar__button\",\n      onClick: () => setCurrentTab(\"Modelled\"),\n      style: {\n        width: \"120px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Modelled,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1673,\n        columnNumber: 122\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        children: \"Modelled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1673,\n        columnNumber: 212\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1673,\n      columnNumber: 23\n    }, this);\n  }\n\n  if (currentRole === \"Process\") {\n    if (currentTab === \"Process\") {\n      processBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Process\"),\n        style: {\n          backgroundColor: \"#99C6F8\",\n          width: \"120px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ProcInst,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1677,\n          columnNumber: 151\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1677,\n          columnNumber: 241\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1677,\n        columnNumber: 26\n      }, this);\n    } else {\n      processBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Process\"),\n        style: {\n          width: \"120px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ProcInst,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1680,\n          columnNumber: 124\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1680,\n          columnNumber: 214\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1680,\n        columnNumber: 26\n      }, this);\n    }\n  } else if (currentRole === \"Instrument\") {\n    if (currentTab === \"Instrument\") {\n      instrumentationBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Instrument\"),\n        style: {\n          backgroundColor: \"#99C6F8\",\n          width: \"170px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ProcInst,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1684,\n          columnNumber: 162\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Instrumentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1684,\n          columnNumber: 252\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1684,\n        columnNumber: 34\n      }, this);\n    } else {\n      instrumentationBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Instrument\"),\n        style: {\n          width: \"170px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ProcInst,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1687,\n          columnNumber: 135\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Instrumentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1687,\n          columnNumber: 225\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1687,\n        columnNumber: 34\n      }, this);\n    }\n  } else if (currentRole === \"SpecialityLead\") {\n    if (currentTab === \"Process\") {\n      processBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Process\"),\n        style: {\n          backgroundColor: \"#99C6F8\",\n          width: \"120px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ProcInst,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1691,\n          columnNumber: 151\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1691,\n          columnNumber: 241\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1691,\n        columnNumber: 26\n      }, this);\n    } else {\n      processBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Process\"),\n        style: {\n          width: \"120px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ProcInst,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1694,\n          columnNumber: 124\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1694,\n          columnNumber: 214\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1694,\n        columnNumber: 26\n      }, this);\n    }\n\n    if (currentTab === \"Instrument\") {\n      instrumentationBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Instrument\"),\n        style: {\n          backgroundColor: \"#99C6F8\",\n          width: \"170px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ProcInst,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1697,\n          columnNumber: 162\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Instrumentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1697,\n          columnNumber: 252\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1697,\n        columnNumber: 34\n      }, this);\n    } else {\n      instrumentationBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Instrument\"),\n        style: {\n          width: \"170px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ProcInst,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1700,\n          columnNumber: 135\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Instrumentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1700,\n          columnNumber: 225\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1700,\n        columnNumber: 34\n      }, this);\n    }\n  } else {\n    processBtn = null;\n    instrumentationBtn = null;\n  }\n\n  let isoControlBtn = null;\n\n  if (currentTab === \"IsoControl\") {\n    secureStorage.setItem(\"tab\", \"IsoControl\");\n    isoControlBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      style: {\n        backgroundColor: \"#99C6F8\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      children: \"Modelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1709,\n      columnNumber: 25\n    }, this);\n    tableContent = /*#__PURE__*/_jsxDEV(IsoControlModelledDataTable, {\n      set: true,\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1710,\n      columnNumber: 24\n    }, this);\n    actionButtons = null;\n  } else {\n    isoControlBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      onClick: () => {\n        setCurrentTab(\"IsoControl\");\n      },\n      children: \"Modelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1713,\n      columnNumber: 25\n    }, this);\n  }\n\n  let isoControlNotModBtn = null;\n\n  if (currentTab === \"IsoControlNotMod\") {\n    secureStorage.setItem(\"tab\", \"IsoControlNotMod\");\n    isoControlNotModBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      style: {\n        backgroundColor: \"#99C6F8\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      children: \"Not modelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1720,\n      columnNumber: 31\n    }, this);\n    tableContent = /*#__PURE__*/_jsxDEV(IsoControlNotModelledDataTable, {\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1721,\n      columnNumber: 24\n    }, this);\n    actionButtons = null;\n  } else {\n    isoControlNotModBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      onClick: () => {\n        setCurrentTab(\"IsoControlNotMod\");\n      },\n      children: \"Not modelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1724,\n      columnNumber: 31\n    }, this);\n  }\n\n  if (currentRole === \"Design\") {\n    if (currentTab === \"Upload IsoFiles\") {\n      uploadButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Upload IsoFiles\"),\n        style: {\n          backgroundColor: \"#99C6F8\",\n          width: \"120px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: UploadIcon,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1732,\n          columnNumber: 161\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1732,\n          columnNumber: 253\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1732,\n        columnNumber: 28\n      }, this);\n    } else {\n      uploadButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Upload IsoFiles\"),\n        style: {\n          width: \"120px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: UploadIcon,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"0px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1734,\n          columnNumber: 134\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1734,\n          columnNumber: 226\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1734,\n        columnNumber: 28\n      }, this);\n    }\n  } else {\n    uploadButton = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [content, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(Collapse, {\n          in: loading,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"info\",\n            children: \"Processing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1749,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1748,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-success ${errorPI ? 'alert-shown' : 'alert-hidden'}`,\n          onTransitionEnd: () => setErrorPI(false),\n          children: /*#__PURE__*/_jsxDEV(AlertF, {\n            type: \"error\",\n            subtext: \"At least one isometric was on revision and wasn't sent to LDE/Isocontrol\",\n            margin: \"-5px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1758,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1754,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-success ${transactionSuccess ? 'alert-shown' : 'alert-hidden'}`,\n          onTransitionEnd: () => setTransactionSuccess(false),\n          children: /*#__PURE__*/_jsxDEV(AlertF, {\n            type: \"success\",\n            margin: \"-30px\",\n            text: \"The action has been completed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1765,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1761,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-success ${errorUnclaim ? 'alert-shown' : 'alert-hidden'}`,\n          onTransitionEnd: () => setErrorUnclaim(false),\n          children: /*#__PURE__*/_jsxDEV(AlertF, {\n            type: \"error\",\n            subtext: \"Can't unclaim an iso forced by LOS\",\n            margin: \"-105px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1771,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-success ${errorUnclaimR ? 'alert-shown' : 'alert-hidden'}`,\n          onTransitionEnd: () => setErrorUnclaimR(false),\n          children: /*#__PURE__*/_jsxDEV(AlertF, {\n            type: \"error\",\n            subtext: \"Can't unclaim a returned ISO!\",\n            margin: \"-118px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1777,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1773,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-success ${errorReports ? 'alert-shown' : 'alert-hidden'}`,\n          onTransitionEnd: () => setErrorReports(false),\n          children: /*#__PURE__*/_jsxDEV(AlertF, {\n            type: \"error\",\n            subtext: \"Missing columns!\",\n            margin: \"-155px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1784,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1780,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-success ${errorCL ? 'alert-shown' : 'alert-hidden'}`,\n          onTransitionEnd: () => setErrorCL(false),\n          children: /*#__PURE__*/_jsxDEV(AlertF, {\n            type: \"error\",\n            subtext: \"Missing clean!\",\n            margin: \"-150px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1791,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1787,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-success ${warningSelected ? 'alert-shown' : 'alert-hidden'}`,\n          onTransitionEnd: () => setWarningSelected(false),\n          children: /*#__PURE__*/_jsxDEV(AlertF, {\n            type: \"warning\",\n            text: \"Select at least one isometric!\",\n            margin: \"-40px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1797,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1793,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-success ${blocked ? 'alert-shown' : 'alert-hidden'}`,\n          onTransitionEnd: () => setBlocked(false),\n          children: /*#__PURE__*/_jsxDEV(AlertF, {\n            type: \"error\",\n            subtext: \"The isometric has been locked! Contact the administrator.\",\n            margin: \"-45px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1803,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1799,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-success ${errorReportD ? 'alert-shown' : 'alert-hidden'}`,\n          onTransitionEnd: () => setErrorReportD(false),\n          children: /*#__PURE__*/_jsxDEV(AlertF, {\n            type: \"error\",\n            subtext: \"There is a line of the report has an invalid type or progress!\",\n            margin: \"-35px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1809,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1805,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-success ${errorDeleteUser ? 'alert-shown' : 'alert-hidden'}`,\n          onTransitionEnd: () => setErrorDeleteUser(false),\n          children: /*#__PURE__*/_jsxDEV(AlertF, {\n            type: \"error\",\n            subtext: \"This user has claimed isometrics and can't be deleted!\",\n            margin: \"-40px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1815,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1811,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1747,\n        columnNumber: 15\n      }, this), navBar, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isotracker__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"isotracker__column\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: IsoTrackerLogo,\n            alt: \"isoTrackerLogo\",\n            className: \"isoTrackerLogo__image2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1821,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roleSelector__containerF\",\n            children: /*#__PURE__*/_jsxDEV(RoleDropDown, {\n              style: {\n                paddingLeft: \"2px\"\n              },\n              onChange: value => setCurrentRole(value),\n              roles: roles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1824,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1823,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1820,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stateTable__containerF\",\n            children: /*#__PURE__*/_jsxDEV(StateTable, {\n              updateData: updateData,\n              currentRole: currentRole\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1830,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1828,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1827,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1819,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"isotracker__table__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"isotracker__table__navBar__container\",\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colspan: \"2\",\n            className: \"isotracker__table__navBar\",\n            children: [recycleBinBtn, onHoldBtn, issuedBtn, reportsBtn, progressBtn, modelledBtn, processBtn, instrumentationBtn, usersButton, uploadButton, pageSelector]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1838,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1837,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"isotracker__table__tray__and__table__container\",\n          style: {\n            height: dataTableHeight\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"isotracker__table__trays\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trays__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"isotracker__table__trays__group\",\n                children: \"IsoControl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1855,\n                columnNumber: 37\n              }, this), isoControlBtn, isoControlNotModBtn, /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"isotracker__table__trays__group\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1858,\n                columnNumber: 35\n              }, this), myTrayBtn, /*#__PURE__*/_jsxDEV(ReportBtns, {\n                onChange: value => setCurrentTab(value),\n                currentTab: currentTab\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1861,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"isotracker__table__trays__group\",\n                children: \"Trays\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1862,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(NavBtns, {\n                onChange: value => setCurrentTab(value),\n                currentTab: currentTab,\n                currentRole: currentRole\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1863,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1854,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1853,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"isotracker__table__table\",\n            style: {\n              height: dataTableHeight\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: dataTableHeight\n              },\n              className: \"isotracker__table__table__container\",\n              children: tableContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1867,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1866,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1852,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1836,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"actionBtns__container\",\n        children: actionButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1874,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1879,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1746,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1743,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IsoCtrlF, \"5uoGO6SGZd1ZrGXb+6Gnnx1/2lw=\");\n\n_c = IsoCtrlF;\nexport default IsoCtrlF;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsoCtrlF\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/isoCtrlF/isoCtrlF.js"],"names":["DataTable","ReportBtns","StateTable","NavBtns","DragAndDrop","React","useState","useEffect","ActionButtons","SelectPag","CheckInTable","NavBar","MyTrayBtn","MyTrayTable","BinTable","OnHoldTable","StatusDataTable","HistoryDataTable","RoleDropDown","Alert","Collapse","ProcInstTable","JSZip","saveAs","FileSaver","XLSX","ReportBoxBtns","ProgressBtn","ProgressPlot","ModelledBtn","ModelledDataTable","UsersDataTable","Trash","Hold","Issued","Reports","Modelled","ProcInst","Progress","UploadIcon","UsersIcon","LoadingScreen","AlertF","IsoControlModelledDataTable","IsoControlNotModelledDataTable","IsoCtrlF","document","body","style","zoom","title","process","env","REACT_APP_APP_NAMEPROJ","pagination","setPagination","currentRole","setCurrentRole","roles","setRoles","selected","setSelected","updateData","setUpdateData","comment","setComment","downloadZip","setDownloadzip","loading","setLoading","errorUnclaim","setErrorUnclaim","errorPI","setErrorPI","errorCL","setErrorCL","transactionSuccess","setTransactionSuccess","errorReports","setErrorReports","errorUnclaimR","setErrorUnclaimR","warningSelected","setWarningSelected","blocked","setBlocked","errorReportD","setErrorReportD","errorDeleteUser","setErrorDeleteUser","content","setContent","navBar","setNavBar","modelledWeight","setModelledWeight","notModelledWeight","setNotModelledWeight","totalIsocontrolWeight","setTotalIsocontrolWeight","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","currentTab","setCurrentTab","getItem","dataTableHeight","uploadButton","actionButtons","tableContent","progressBtn","modelledBtn","myTrayBtn","usersButton","currentTabText","forceUnclaim","bind","value","unlock","rename","pageSelector","currentUser","REACT_APP_PROGRESS","setTimeout","user","options","method","headers","JSON","stringify","fetch","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","setItem","catch","error","console","log","setIsoModelledWeight","weight","setIsoNotModelledWeight","successAlert","getProgress","claim","event","length","i","file","role","forceClaim","username","los","unclaim","err","fileName","verifyClick","cancelVerifyClick","filename","transaction","destiny","comments","to","deleted","onhold","sit","spo","hold","returnLead","from","returnLeadStress","restore","sendProcessClick","sendInstrumentClick","sendCancelProcessClick","sendCancelInstrumentClick","updateD","downloadFiles","res","blob","Blob","binary","zipname","String","Date","toLocaleString","replace","split","slice","generateAsync","type","downloadHistory","exportToExcel","parse","downloadStatus","downloadPI","downloadIssued","downloadStatus3D","output","substring","replaceAll","downloadModelled","downloadUsers","apiData","fileType","header_cells","fileExtension","wscols","push","width","ws","utils","json_to_sheet","v","wb","Sheets","SheetNames","excelBuffer","write","bookType","setUploading","active","setErrorReport","issue","transmittal","date","newRev","request","returnIso","success","newName","oldName","setErrorReportData","index","addUser","email","deleteUser","id","submitRoles","marginRight","recycleBinBtn","onHoldBtn","issuedBtn","reportsBtn","processBtn","instrumentationBtn","backgroundColor","marginLeft","isoControlBtn","color","fontWeight","isoControlNotModBtn","fontSize","position","left","top","transform","zIndex","IsoTrackerLogo","paddingLeft","height"],"mappings":"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","sourcesContent":["import DataTable from \"../../components/datatable/datatable\"\r\nimport ReportBtns from \"../../components/reportBtns/reportBtns\"\r\nimport StateTable from \"../../components/stateTable/stateTable\"\r\nimport NavBtns from \"../../components/navBtns/navBtns\"\r\nimport DragAndDrop from \"../../components/dragAndDrop/dragAndDrop\"\r\nimport \"./isoCtrlF.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport ActionButtons from \"../../components/actionBtns/actionBtns\"\r\nimport SelectPag from \"../../components/selectPag/selectPag\"\r\nimport CheckInTable from \"../../components/checkInTable/checkInTable\"\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport MyTrayBtn from \"../../components/myTrayBtn/myTrayBtn\"\r\nimport MyTrayTable from \"../../components/myTrayTable/myTrayTable\"\r\nimport BinTable from \"../../components/binTable/binTable\"\r\nimport OnHoldTable from \"../../components/onHoldTable/onHoldTable\"\r\nimport StatusDataTable from \"../../components/statusDataTable/statusDataTable\"\r\nimport HistoryDataTable from \"../../components/historyDataTable/historyDataTable\"\r\nimport RoleDropDown from \"../../components/roleDropDown/roleDropDown\"\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport ProcInstTable from \"../../components/procInstTable/procInstTable\"\r\nimport JSZip from 'jszip'\r\nimport { saveAs } from 'file-saver';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport ReportBoxBtns from \"../../components/reportBoxBtns/reportBoxBtns\"\r\nimport ProgressBtn from \"../../components/progressBtn/progressBtn\"\r\nimport ProgressPlot from \"../../components/progressPlot/progressPlot\"\r\nimport ModelledBtn from \"../../components/modelledBtn/modelledBtn\"\r\nimport ModelledDataTable from \"../../components/modelledDataTable/modelledDataTable\"\r\nimport UsersDataTable from \"../../components/usersDataTable/usersDataTable\"\r\n\r\nimport IsoTrackerLogo from \"../../assets/images/IsoTracker.svg\"\r\nimport Trash from \"../../assets/images/Trash.png\"\r\nimport Hold from \"../../assets/images/Prohibit.png\"\r\nimport Issued from \"../../assets/images/FolderOpen.png\"\r\nimport Reports from \"../../assets/images/Notepad.png\"\r\nimport Modelled from \"../../assets/images/Cube.png\"\r\nimport ProcInst from \"../../assets/images/MagnifyingGlass.png\"\r\nimport Progress from \"../../assets/images/ChartBar.png\"\r\nimport UploadIcon from \"../../assets/images/upload.png\"\r\nimport UsersIcon from \"../../assets/images/user.png\"\r\nimport LoadingScreen from \"../../components/loadingScreen/loadingScreen\"\r\n\r\nimport AlertF from \"../../components/alert/alert\"\r\nimport IsoControlModelledDataTable from \"../../components/isoControlModelledDataTable/isoControlModelledDataTable\"\r\nimport IsoControlNotModelledDataTable from \"../../components/isoControlNotModelledDataTable/isoControlNotModelledDataTable\"\r\n\r\nconst IsoCtrlF = () => {\r\n   \r\n    document.body.style.zoom = 0.8\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const[pagination, setPagination] = useState(10) //Controla el numero de entradas por pagina de la tabla\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const [selected, setSelected] = useState([]);\r\n    const [updateData, setUpdateData] = useState();\r\n    const [comment, setComment] = useState(\" \");\r\n    const [downloadZip, setDownloadzip] = useState(new JSZip());\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorUnclaim, setErrorUnclaim] = useState(false);\r\n    const [errorPI, setErrorPI] = useState(false);\r\n    const [errorCL, setErrorCL] = useState(false);\r\n    const [transactionSuccess, setTransactionSuccess] = useState(false);\r\n    const [errorReports, setErrorReports] = useState(false);\r\n    const [errorUnclaimR, setErrorUnclaimR] = useState(false);\r\n    const [warningSelected, setWarningSelected] = useState(false);\r\n    const [blocked, setBlocked] = useState(false);\r\n    const [errorReportD, setErrorReportD] = useState(false)\r\n    const [errorDeleteUser, setErrorDeleteUser] = useState(false);\r\n    const [content, setContent] = useState();\r\n    const [navBar, setNavBar] = useState(null)\r\n\r\n    const [modelledWeight, setModelledWeight] = useState(null)\r\n    const [notModelledWeight, setNotModelledWeight] = useState(null)\r\n    const [totalIsocontrolWeight, setTotalIsocontrolWeight] = useState(null)\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"tab\")) \r\n\r\n    var dataTableHeight = \"500px\"\r\n\r\n    if (pagination === 10){\r\n        dataTableHeight = \"520px\"\r\n    }if(pagination === 25){\r\n        dataTableHeight = \"1050px\"\r\n    }if(pagination === 50){\r\n        dataTableHeight = \"1970px\"\r\n    }if(pagination === 100){\r\n        dataTableHeight = \"3860px\"\r\n    }if(pagination === 500){\r\n        dataTableHeight = \"19000px\"\r\n    }\r\n\r\n    //Componentes de la pagina que varian en funcion del estado\r\n    var uploadButton, actionButtons, tableContent, progressBtn, modelledBtn, myTrayBtn, usersButton\r\n    var currentTabText = currentTab\r\n    if(currentTabText === \"LDE/IsoControl\"){\r\n        currentTabText = \"LOS/IsoControl\"\r\n    }\r\n    tableContent = <DataTable forceUnclaim = {forceUnclaim.bind(this)} onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} currentRole={currentRole} updateData = {updateData} unlock = {unlock.bind(this)} rename = {rename.bind(this)}/>\r\n    var pageSelector = <SelectPag onChange={value => setPagination(value)} pagination = {pagination}/>\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    useEffect(() =>{\r\n\r\n        if(process.env.REACT_APP_PROGRESS === \"0\"){\r\n\r\n            setContent(<div className=\"content\">\r\n            <LoadingScreen progress={\"25\"}/>\r\n            </div>)\r\n            setTimeout(() => {\r\n                setContent(<div className=\"content\">\r\n                <LoadingScreen progress={\"75\"}/>\r\n                </div>)\r\n            }, 1000)\r\n            setTimeout(() => {\r\n                setContent(<div className=\"content\">\r\n                <LoadingScreen progress={\"100\"}/>\r\n                </div>)\r\n            }, 2000)\r\n            setTimeout(() => {\r\n                setNavBar(<NavBar onChange={value => setCurrentTab(value)}/>)\r\n                setContent(null)            \r\n            }, 2300);\r\n        }else{\r\n            setNavBar(<NavBar onChange={value => setCurrentTab(value)}/>)\r\n            setContent(null)   \r\n        }\r\n          \r\n    }, [])\r\n    \r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            setErrorPI(false)\r\n            setErrorUnclaimR(false)\r\n            setErrorCL(false)\r\n            setUpdateData(!updateData)\r\n            setTransactionSuccess(false);\r\n            setErrorUnclaim(false)\r\n            setErrorReports(false)\r\n            setLoading(false)\r\n            setWarningSelected(false)\r\n            setBlocked(false)\r\n            setErrorReportD(false)\r\n            setErrorDeleteUser(false)\r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n        setErrorUnclaimR(false)\r\n        setErrorPI(false);\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false)\r\n        setErrorUnclaim(false)\r\n        setLoading(false)\r\n        setErrorReports(false)\r\n        setSelected([])\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n    }, [currentTab])\r\n\r\n    const setIsoModelledWeight = (weight) =>{\r\n        setModelledWeight(weight)\r\n    }\r\n\r\n    const setIsoNotModelledWeight = (weight) =>{\r\n        setModelledWeight(weight)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setTotalIsocontrolWeight(modelledWeight + notModelledWeight)\r\n        \r\n    }, [modelledWeight, notModelledWeight])\r\n\r\n    const successAlert = () =>{\r\n        setTransactionSuccess(true)\r\n        setTimeout(function () {\r\n            setTransactionSuccess(false)\r\n        }, 3000);     \r\n    }\r\n\r\n    const getProgress = () =>{\r\n        setUpdateData(!updateData)\r\n\r\n    }\r\n\r\n    const claim = async(event) => {\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setWarningSelected(false)\r\n        setErrorPI(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if(currentTab === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claimProc\", options)\r\n                }\r\n            }else if(currentTab === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claim\", options)\r\n                }\r\n            \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n            \r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n     \r\n    }   \r\n    \r\n    const forceClaim = async(username) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : username,\r\n                    file: selected[i],\r\n                    los: currentUser\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/forceClaim\", options)\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    const unclaim = async (event) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if (currentRole === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaimProc\", options)\r\n                }\r\n            }else if(currentRole === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaim\", options)\r\n                    .then(response => response.json())\r\n                    .then(json=>{\r\n                        if(json.error === \"forced\"){\r\n                            setErrorUnclaim(true)\r\n                        }else if(json.error === \"returned\"){\r\n                            setErrorUnclaimR(true)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                    });\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n        \r\n    }\r\n\r\n    async function forceUnclaim(fileName){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n        const body ={\r\n            user : currentUser,\r\n            file: fileName,\r\n            role: currentRole\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/forceUnclaim\", options)\r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n\r\n    const verifyClick = async(event) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/verify\", options)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function cancelVerifyClick(filename){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: filename,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelVerify\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function transaction(destiny, comments){\r\n        \r\n        if(selected.length > 0){\r\n            setErrorUnclaimR(false)\r\n            setWarningSelected(false)\r\n            setErrorReports(false)\r\n            setErrorCL(false)\r\n            setErrorUnclaim(false)\r\n            setErrorPI(false);\r\n            setTransactionSuccess(false);\r\n            setLoading(true)\r\n            setErrorReportD(false)\r\n            setBlocked(false)\r\n            setErrorDeleteUser(false)\r\n            \r\n            if(destiny === \"Design\"){\r\n                if(comment.length > 1){\r\n                    setComment(\" \")\r\n                    localStorage.setItem(\"update\", true)\r\n                    for (let i = 0; i < selected.length; i++){\r\n                        const body ={\r\n                            user : currentUser,\r\n                            fileName: selected[i],\r\n                            to: destiny,\r\n                            role: secureStorage.getItem(\"role\"),\r\n                            comment: comment,\r\n                            deleted: 0,\r\n                            onhold: 0\r\n                        }\r\n                        const options = {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            body: JSON.stringify(body)\r\n                        }\r\n                        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                        .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                successAlert()\r\n                            }\r\n                        })\r\n                        \r\n                    }\r\n                }else{\r\n                }\r\n            }else if (destiny === \"LDE/Isocontrol\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/piStatus/\"+selected[i], options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                        if(json.sit === 1 || json.sit === 4 || json.sit === 5|| json.spo === 1 || json.spo === 4 || json.spo === 5){\r\n                            localStorage.setItem(\"update\", true)\r\n                            setErrorPI(true);\r\n                            setTransactionSuccess(false);\r\n                        }else{\r\n                            localStorage.setItem(\"update\", true)\r\n                            let deleted, hold = 0\r\n                    \r\n                            const body ={\r\n                                user : currentUser,\r\n                                fileName: selected[i],\r\n                                to: destiny,\r\n                                role: secureStorage.getItem(\"role\"),\r\n                                comment: null,\r\n                                deleted: deleted,\r\n                                onhold: hold\r\n                            }\r\n                            const options = {\r\n                                method: \"POST\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                },\r\n                                body: JSON.stringify(body)\r\n                            }\r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                            .then(response => response.json())\r\n                            .then(async json=>{\r\n                                if(json.error){\r\n                                    await setErrorCL(true) \r\n                                }else if(json.blocked){\r\n                                    setBlocked(true)\r\n                                }\r\n                            })\r\n                            if(!errorCL && !blocked){\r\n                                successAlert()\r\n                            }\r\n                            \r\n                        }\r\n                    })\r\n                }\r\n                await setUpdateData(!updateData)\r\n                setLoading(false)\r\n            }else if(destiny === \"On hold\"){\r\n                localStorage.setItem(\"update\", true)\r\n                let deleted, hold = 0\r\n\r\n                if(destiny === \"Recycle bin\"){\r\n                    deleted = 1\r\n                }\r\n\r\n                if(destiny === \"On hold\"){\r\n                    hold = 1\r\n                }\r\n                for (let i = 0; i < selected.length; i++){\r\n                    \r\n                    const body ={\r\n                        user : currentUser,\r\n                        fileName: selected[i],\r\n                        to: destiny,\r\n                        role: secureStorage.getItem(\"role\"),\r\n                        comment: comments,\r\n                        deleted: deleted,\r\n                        onhold: hold\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                    .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                successAlert()\r\n                            }\r\n                        })\r\n                }\r\n            }else{\r\n                localStorage.setItem(\"update\", true)\r\n                let deleted, hold = 0\r\n\r\n                if(destiny === \"Recycle bin\"){\r\n                    deleted = 1\r\n                }\r\n\r\n                if(destiny === \"On hold\"){\r\n                    hold = 1\r\n                }\r\n                for (let i = 0; i < selected.length; i++){\r\n                    \r\n                    const body ={\r\n                        user : currentUser,\r\n                        fileName: selected[i],\r\n                        to: destiny,\r\n                        role: secureStorage.getItem(\"role\"),\r\n                        comment: null,\r\n                        deleted: deleted,\r\n                        onhold: hold\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                    .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                successAlert()\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }    \r\n    }\r\n\r\n    async function returnLead(destiny){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setWarningSelected(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setErrorUnclaimR(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                setLoading(true)\r\n                const body ={\r\n                    user : currentUser,\r\n                    fileName: selected[i],\r\n                    to: destiny,\r\n                    from: currentTab\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/returnLead\", options)\r\n                .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                successAlert()\r\n                            }\r\n                        })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n    \r\n    async function returnLeadStress(){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setErrorUnclaimR(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                        \r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    comments: comment\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/returnLeadStress\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        successAlert()\r\n                    }\r\n                })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function restore(){\r\n        setErrorReports(false)\r\n        setErrorUnclaimR(false)\r\n        setErrorReportD(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    fileName: selected[i],\r\n                    user: currentUser,\r\n                    role: currentRole,\r\n                    deleted: 0,\r\n                    onhold: 0\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/restore\", options)\r\n                successAlert()\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function sendProcessClick(fileName){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/process\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendInstrumentClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/instrument\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendCancelProcessClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body ={\r\n            file: fileName,\r\n            user: currentUser,\r\n            role: currentRole,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelProc\", options)\r\n    \r\n        await setUpdateData(!updateData)\r\n        await setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendCancelInstrumentClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setWarningSelected(false)\r\n        setLoading(true)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n        const body ={\r\n            file: fileName,\r\n            user: currentUser,\r\n            role: currentRole\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelInst\", options)\r\n    \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    function updateD(){\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function downloadFiles(){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n\r\n                const options = {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/pdf\"\r\n                    }\r\n                }\r\n                \r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getAttach/\"+selected[i], options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n                    .then(res => res.blob())\r\n                    .then( async response =>{\r\n                        setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                        for(let i = 0; i < json.length; i++){\r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+json[i], options)\r\n                            .then(res => res.blob())\r\n                            .then(response =>{\r\n                                setDownloadzip(downloadZip.file(json[i], new Blob([response]),{binary:true}))   \r\n                            })\r\n                        }\r\n                        \r\n                    })\r\n                })\r\n            \r\n\r\n                \r\n        \r\n            }\r\n            const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n            downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n                saveAs(blob,  zipname)\r\n            })  \r\n            \r\n            await setDownloadzip(new JSZip())   \r\n            //await setAttachFiles(null)\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function downloadHistory(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadHistory/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"FROM\", \"TO\", \"DATE\", \"COMMENT\", \"USER\"]\r\n            exportToExcel(JSON.parse(json), \"Comments\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadStatus(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadStatus/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"START_DATE\", \"CURRENT_DATE\", \"CONDITION\", \"TRAY\"]\r\n            exportToExcel(JSON.parse(json), \"Status\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadPI(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadPI/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"PROCESS\", \"INSTRUMENTATION\", \"UPDATED_AT\"]\r\n            exportToExcel(JSON.parse(json), \"IsoStatusSIT-SPO\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadIssued(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadIssued/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"REV0\", \"REV1\", \"REV2\", \"REV3\", \"REV4\"]\r\n            exportToExcel(JSON.parse(json), \"IsoStatusIssued\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadStatus3D(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadStatus3D/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            let output = JSON.stringify(json.log)\r\n            output = output.substring(1,output.length-1)\r\n            output = output.replaceAll(\",\", \"\\n\")\r\n            output = output.replaceAll(/['\"]+/g, \"\")\r\n\r\n\r\n            const data = new Blob([output], { type: 'txt' });\r\n            FileSaver.saveAs(data, \"fromIsoTrackerTo3d.mac\");\r\n        })\r\n    }\r\n\r\n    async function downloadModelled(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadModelled/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"TAG\", \"ISO_ID\", \"TYPE\"]\r\n            exportToExcel(JSON.parse(json), \"Modelled\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadUsers(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadUsers\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            console.log(json)\r\n            const headers = [\"USERNAME\", \"EMAIL\", \"ROLE\"]\r\n            exportToExcel(json, \"Users\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        setErrorReports(false)\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n\r\n        let wscols = []\r\n        for(let i = 0; i < headers.length; i++){\r\n            wscols.push({width:35})\r\n        }\r\n\r\n        const ws = XLSX.utils.json_to_sheet(apiData);   \r\n        ws[\"!cols\"] = wscols\r\n        for(let i = 0; i < headers.length; i++){\r\n            ws[header_cells[i]].v = headers[i]\r\n        }\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n    async function setUploading(active){\r\n        setErrorReports(false)\r\n        setErrorReportD(false)\r\n        setLoading(active)\r\n        if(!active){\r\n            successAlert()\r\n        }\r\n    }\r\n\r\n    async function setErrorReport(){\r\n        setErrorReports(true)\r\n    }\r\n\r\n    async function issue(transmittal, date){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                    transmittal: transmittal,\r\n                    date: date\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/toIssue\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        successAlert()\r\n                    }\r\n                })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    async function newRev() {\r\n        setErrorReports(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/newRev\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    \r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        successAlert()\r\n                    }\r\n                })\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    async function request() {\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/request\", options)\r\n                \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }\r\n\r\n    }\r\n\r\n    async function returnIso(destiny, comments){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if(comments.length < 1){\r\n                comments = comment\r\n            }\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                    from: currentTab,\r\n                    destiny: destiny,\r\n                    comments: comments\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/returnIso\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        successAlert()\r\n                    }\r\n                })\r\n                \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setComment(\"\")\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function success(){\r\n        successAlert()\r\n    }\r\n\r\n    async function unlock(filename){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        setErrorReportD(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            fileName: filename\r\n          }\r\n      \r\n          const options = {\r\n              method: \"POST\",\r\n              headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify(body)\r\n          }\r\n      \r\n          fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unlock\", options)\r\n          .then(response => console.log(\"Unlocked\"))\r\n\r\n          setUpdateData(!updateData)\r\n    }\r\n\r\n    async function rename(newName, oldName){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            oldName: oldName,\r\n            newName: newName\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/rename\", options)\r\n        .then(response => console.log(\"Cambiado\"))\r\n\r\n        successAlert()\r\n        \r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function setErrorReportData(index){\r\n        setErrorReportD(true)\r\n    }\r\n\r\n    async function addUser(username, email, roles){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            username: username,\r\n            email: email,\r\n            roles: roles\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/createUser\", options)\r\n        .then(response => response.json())\r\n        .then(json =>{\r\n            if(json.success){\r\n                successAlert()\r\n            }\r\n        })\r\n        setUpdateData(!updateData)\r\n        \r\n    }\r\n\r\n    async function deleteUser(id){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n\r\n        const options = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/user/\"+id, options)\r\n        .then(response => response.json())\r\n        .then(json =>{\r\n            if(json.error){\r\n                setErrorDeleteUser(true)\r\n            }else{\r\n                successAlert()\r\n            }\r\n        })\r\n\r\n       setUpdateData(!updateData)\r\n\r\n    }\r\n\r\n    async function submitRoles(id, roles){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setErrorReportD(false)\r\n        setBlocked(false)\r\n        setErrorDeleteUser(false)\r\n        \r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            id: id,\r\n            roles: roles\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/users/manageRoles\", options)\r\n        .then(response => response.json())\r\n        .then(json =>{\r\n            if(json.success){\r\n                successAlert()\r\n            }\r\n        })\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    if(currentTab === \"Upload IsoFiles\"){\r\n        secureStorage.setItem(\"tab\", \"Upload IsoFiles\")\r\n        tableContent = <DragAndDrop mode={\"upload\"} role={currentRole} user={currentUser}  uploaded={getProgress.bind(this)}/>\r\n        pageSelector = null\r\n    }if(currentTab === \"CheckBy\"){\r\n        tableContent = <CheckInTable/>\r\n    }if(currentTab === \"My Tray\"){\r\n        tableContent = <MyTrayTable  updateData = {updateData} onChange={value=> setSelected(value)} cancelVerifyClick={cancelVerifyClick.bind(this)} sendProcessClick={sendProcessClick.bind(this)} success={success.bind(this)} sendInstrumentClick = {sendInstrumentClick.bind(this)} sendCancelProcessClick={sendCancelProcessClick.bind(this)} sendCancelInstrumentClick={sendCancelInstrumentClick.bind(this)} updateD = {updateD.bind(this)} pagination = {pagination} currentRole = {currentRole} currentUser = {currentUser} selected={selected} />\r\n    }if(currentTab === \"Recycle bin\"){\r\n        tableContent = <BinTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"On hold\"){\r\n        tableContent = <OnHoldTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"Status\"){\r\n        tableContent = <StatusDataTable onChange={value=> setSelected(value)} pagination = {pagination} role = {currentRole}/>\r\n    }if(currentTab === \"History\"){\r\n        tableContent = <HistoryDataTable pagination = {pagination}/>   \r\n    }if(currentTab === \"Process\" || currentTab === \"Instrument\"){\r\n        tableContent = <ProcInstTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData} />\r\n    }if(currentTab === \"Reports\"){\r\n        tableContent = <ReportBoxBtns user={currentUser} downloadHistory={downloadHistory.bind(this)} downloadStatus={downloadStatus.bind(this)} downloadPI={downloadPI.bind(this)} downloadIssued={downloadIssued.bind(this)} setErrorReport={setErrorReport.bind(this)} setUploading={setUploading.bind(this)} downloadStatus3D={downloadStatus3D.bind(this)} downloadModelled={downloadModelled.bind(this)} downloadUsers={downloadUsers.bind(this)} setErrorReportData={setErrorReportData.bind(this)}/>\r\n    }if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n        progressBtn = <ProgressBtn onChange={value => setCurrentTab(\"Progress\")} currentTab = {currentTab}></ProgressBtn>\r\n        modelledBtn = <ModelledBtn onChange={value => setCurrentTab(\"Modelled\")} currentTab = {currentTab}></ModelledBtn>\r\n    }if(currentTab === \"Progress\"){\r\n        tableContent = <ProgressPlot></ProgressPlot>\r\n        dataTableHeight = \"500px\"\r\n    }if(currentTab === \"Modelled\"){\r\n        tableContent = <ModelledDataTable  pagination = {pagination}></ModelledDataTable>\r\n    }if(currentRole !== \"Review\"){\r\n        myTrayBtn = <MyTrayBtn onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n    }if(currentRole === \"SpecialityLead\"){\r\n        if (currentTab === \"Users\"){\r\n            usersButton = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Users\")} style={{width:\"100px\"}}><img src={UsersIcon} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Users</p></button>\r\n            secureStorage.setItem(\"tab\", \"Users\")\r\n        }else{\r\n            usersButton = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Users\")} style={{width:\"100px\"}}><img src={UsersIcon} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Users</p></button>\r\n        }\r\n    }if(currentTab === \"Users\"){\r\n \r\n        tableContent = <UsersDataTable pagination = {pagination} updateData={updateData} deleteUser={deleteUser.bind(this)} submitRoles={submitRoles.bind(this)}/>\r\n        if (pagination === 10){\r\n            dataTableHeight = \"500px\"\r\n        }if(pagination === 25){\r\n            dataTableHeight = \"1120px\"\r\n        }if(pagination === 50){\r\n            dataTableHeight = \"2150px\"\r\n        }if(pagination === 100){\r\n            dataTableHeight = \"4200px\"\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    if(((currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Design\") || \r\n    ((currentRole === \"Stress\" || currentRole === \"StressLead\") && currentTab === \"Stress\") ||\r\n    ((currentRole === \"Supports\" || currentRole === \"SupportsLead\") && currentTab === \"Supports\") ||\r\n    ((currentRole === \"Materials\") && currentTab === \"Materials\") ||\r\n    ((currentRole === \"Issuer\") && currentTab === \"Issuer\") ||\r\n    ((currentRole === \"SpecialityLead\" && currentTab ===\"SpecialityLead\") ||\r\n    (currentTab=== \"My Tray\")) || (((currentTab === \"Recycle bin\" || currentTab === \"On hold\") && currentRole === \"DesignLead\") || \r\n    currentRole === \"SpecialityLead\" && currentTab !== \"Progress\") || (currentTab === \"Process\" && currentRole === \"Process\") ||\r\n    (currentRole === \"Instrument\" && currentTab === \"Instrument\") ||\r\n    (currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Issued\"){\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} returnLeadStress={returnLeadStress.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} issue={issue.bind(this)} newRev={newRev.bind(this)} request={request.bind(this)} returnIso={returnIso.bind(this)} addUser={addUser.bind(this)} onlyDownload = {false} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }else if(currentTab !== \"History\" && currentTab !== \"Upload IsoFiles\" && currentTab !== \"Recycle bin\" && currentTab !== \"Reports\" && currentTab !== \"Progress\" && currentTab !== \"Modelled\"){\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} returnLeadStress={returnLeadStress.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} issue={issue.bind(this)} newRev={newRev.bind(this)} request={request.bind(this)} returnIso={returnIso.bind(this)} addUser={addUser.bind(this)} onlyDownload = {true} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }\r\n    if(currentTab === \"Modelled\"){\r\n        actionButtons = <button className=\"action__btn\" onClick={()=>downloadModelled()}>Export</button>\r\n    }\r\n\r\n\r\n    if(currentRole === \"Project\"){\r\n        actionButtons = null\r\n    }\r\n\r\n    let recycleBinBtn, onHoldBtn, issuedBtn, reportsBtn, processBtn, instrumentationBtn = null\r\n\r\n    if(currentTab === \"Recycle bin\"){\r\n        recycleBinBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Recycle bin\")} style={{backgroundColor:\"#99C6F8\", marginLeft:\"232px\"}}><img src={Trash} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Trash</p></button>\r\n    }else{\r\n        recycleBinBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Recycle bin\")} style={{marginLeft:\"232px\"}}><img src={Trash} alt=\"trash\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Trash</p></button>\r\n    }\r\n\r\n    if(currentTab === \"On hold\"){\r\n        onHoldBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"On hold\")} style={{backgroundColor:\"#99C6F8\"}}><img src={Hold} alt=\"hold\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Hold</p></button>\r\n\r\n    }else{\r\n        onHoldBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"On hold\")}><img src={Hold} alt=\"hold\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Hold</p></button>\r\n    }\r\n\r\n    if(currentTab === \"Issued\"){\r\n        issuedBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Issued\")} style={{backgroundColor:\"#99C6F8\"}}><img src={Issued} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Issued</p></button>\r\n\r\n    }else{\r\n        issuedBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Issued\")}><img src={Issued} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\" >Issued</p></button>\r\n    }\r\n\r\n    if(currentTab === \"Reports\"){\r\n        reportsBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Reports\")} style={{backgroundColor:\"#99C6F8\", width:\"120px\"}}><img src={Reports} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Reports</p></button>\r\n        pageSelector = null\r\n    }else{\r\n        reportsBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Reports\")} style={{width:\"120px\"}}><img src={Reports} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Reports</p></button>\r\n    }\r\n\r\n    if(currentTab === \"Progress\"){\r\n        progressBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Progress\")} style={{backgroundColor:\"#99C6F8\", width:\"120px\"}}><img src={Progress} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Progress</p></button>\r\n        pageSelector = null\r\n    }else if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n        progressBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Progress\")} style={{width:\"120px\"}}><img src={Progress} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Progress</p></button>\r\n    }\r\n\r\n    if(currentTab === \"Modelled\"){\r\n        modelledBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Modelled\")} style={{backgroundColor:\"#99C6F8\", width:\"120px\"}}><img src={Modelled} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Modelled</p></button>\r\n\r\n    }else if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n        modelledBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Modelled\")} style={{width:\"120px\"}}><img src={Modelled} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Modelled</p></button>\r\n    }\r\n    if(currentRole === \"Process\"){\r\n        if(currentTab === \"Process\"){\r\n            processBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Process\")} style={{backgroundColor:\"#99C6F8\", width:\"120px\"}}><img src={ProcInst} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Process</p></button>\r\n    \r\n        }else{\r\n            processBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Process\")} style={{width:\"120px\"}}><img src={ProcInst} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Process</p></button>\r\n        }\r\n    }else if(currentRole === \"Instrument\"){\r\n        if(currentTab === \"Instrument\"){\r\n            instrumentationBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Instrument\")} style={{backgroundColor:\"#99C6F8\", width:\"170px\"}}><img src={ProcInst} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Instrumentation</p></button>\r\n    \r\n        }else{\r\n            instrumentationBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Instrument\")} style={{width:\"170px\"}}><img src={ProcInst} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Instrumentation</p></button>\r\n        }\r\n    }else if(currentRole === \"SpecialityLead\"){\r\n        if(currentTab === \"Process\"){\r\n            processBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Process\")} style={{backgroundColor:\"#99C6F8\", width:\"120px\"}}><img src={ProcInst} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Process</p></button>\r\n    \r\n        }else{\r\n            processBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Process\")} style={{width:\"120px\"}}><img src={ProcInst} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Process</p></button>\r\n        }\r\n        if(currentTab === \"Instrument\"){\r\n            instrumentationBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Instrument\")} style={{backgroundColor:\"#99C6F8\", width:\"170px\"}}><img src={ProcInst} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Instrumentation</p></button>\r\n    \r\n        }else{\r\n            instrumentationBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Instrument\")} style={{width:\"170px\"}}><img src={ProcInst} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Instrumentation</p></button>\r\n        }\r\n    }else{\r\n        processBtn = null\r\n        instrumentationBtn = null\r\n    }\r\n    let isoControlBtn = null\r\n    if(currentTab === \"IsoControl\"){\r\n        secureStorage.setItem(\"tab\", \"IsoControl\")\r\n        isoControlBtn = <button type=\"button\" className=\"nav__button text-left\" style={{backgroundColor:\"#99C6F8\", color:\"black\", fontWeight:\"bold\"}} >Modelled</button>\r\n        tableContent = <IsoControlModelledDataTable set pagination={pagination}/>\r\n        actionButtons = null\r\n    }else{\r\n        isoControlBtn = <button type=\"button\" className=\"nav__button text-left\"  onClick={() => {setCurrentTab(\"IsoControl\")}}>Modelled</button>\r\n        \r\n    }\r\n\r\n    let isoControlNotModBtn = null\r\n    if(currentTab === \"IsoControlNotMod\"){\r\n        secureStorage.setItem(\"tab\", \"IsoControlNotMod\")\r\n        isoControlNotModBtn = <button type=\"button\" className=\"nav__button text-left\" style={{backgroundColor:\"#99C6F8\", color:\"black\", fontWeight:\"bold\"}} >Not modelled</button>\r\n        tableContent = <IsoControlNotModelledDataTable pagination={pagination}/>\r\n        actionButtons = null\r\n    }else{\r\n        isoControlNotModBtn = <button type=\"button\" className=\"nav__button text-left\"  onClick={() => {setCurrentTab(\"IsoControlNotMod\")}}>Not modelled</button>\r\n        \r\n    }\r\n\r\n    \r\n\r\n    if(currentRole === \"Design\"){\r\n        if(currentTab === \"Upload IsoFiles\"){\r\n            uploadButton = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Upload IsoFiles\")} style={{backgroundColor:\"#99C6F8\", width:\"120px\"}}><img src={UploadIcon} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Upload</p></button>\r\n        }else{\r\n            uploadButton = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Upload IsoFiles\")} style={{width:\"120px\"}}><img src={UploadIcon} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"navBar__button__text\">Upload</p></button>\r\n        }\r\n    }else{\r\n        uploadButton = null\r\n    }\r\n\r\n\r\n    \r\n    return (       \r\n        <body>\r\n            {content}\r\n            \r\n            <div>\r\n              <center>\r\n                      <Collapse in={loading}>\r\n                          <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\",zIndex:\"3\"}} severity=\"info\"\r\n                              >\r\n                              Processing...\r\n                          </Alert>\r\n                      </Collapse>\r\n                      <div\r\n                        className={`alert alert-success ${errorPI ? 'alert-shown' : 'alert-hidden'}`}\r\n                        onTransitionEnd={() => setErrorPI(false)}\r\n                        >\r\n                            <AlertF type=\"error\" subtext=\"At least one isometric was on revision and wasn't sent to LDE/Isocontrol\" margin=\"-5px\"/>                            \r\n                      </div>\r\n \r\n                      <div\r\n                        className={`alert alert-success ${transactionSuccess ? 'alert-shown' : 'alert-hidden'}`}\r\n                        onTransitionEnd={() => setTransactionSuccess(false)}\r\n                        >\r\n                          <AlertF type=\"success\" margin=\"-30px\" text=\"The action has been completed.\"/>\r\n                      </div>\r\n                      <div\r\n                        className={`alert alert-success ${errorUnclaim ? 'alert-shown' : 'alert-hidden'}`}\r\n                        onTransitionEnd={() => setErrorUnclaim(false)}\r\n                        >\r\n                        <AlertF type=\"error\" subtext=\"Can't unclaim an iso forced by LOS\" margin=\"-105px\"/>                            \r\n                      </div>\r\n                      <div\r\n                        className={`alert alert-success ${errorUnclaimR ? 'alert-shown' : 'alert-hidden'}`}\r\n                        onTransitionEnd={() => setErrorUnclaimR(false)}\r\n                        >\r\n                        <AlertF type=\"error\" subtext=\"Can't unclaim a returned ISO!\" margin=\"-118px\"/>   \r\n                      </div>\r\n\r\n                      <div\r\n                        className={`alert alert-success ${errorReports ? 'alert-shown' : 'alert-hidden'}`}\r\n                        onTransitionEnd={() => setErrorReports(false)}\r\n                        >\r\n                         <AlertF type=\"error\" subtext=\"Missing columns!\" margin=\"-155px\"/>   \r\n                      </div>\r\n  \r\n                      <div\r\n                        className={`alert alert-success ${errorCL ? 'alert-shown' : 'alert-hidden'}`}\r\n                        onTransitionEnd={() => setErrorCL(false)}\r\n                        >\r\n                        <AlertF type=\"error\" subtext=\"Missing clean!\" margin=\"-150px\"/>  \r\n                      </div>\r\n                      <div\r\n                        className={`alert alert-success ${warningSelected ? 'alert-shown' : 'alert-hidden'}`}\r\n                        onTransitionEnd={() => setWarningSelected(false)}\r\n                        >\r\n                          <AlertF type=\"warning\" text=\"Select at least one isometric!\" margin=\"-40px\"/>   \r\n                      </div>\r\n                      <div\r\n                        className={`alert alert-success ${blocked ? 'alert-shown' : 'alert-hidden'}`}\r\n                        onTransitionEnd={() => setBlocked(false)}\r\n                        >\r\n                         <AlertF type=\"error\" subtext=\"The isometric has been locked! Contact the administrator.\" margin=\"-45px\"/>          \r\n                      </div>\r\n                      <div\r\n                        className={`alert alert-success ${errorReportD ? 'alert-shown' : 'alert-hidden'}`}\r\n                        onTransitionEnd={() => setErrorReportD(false)}\r\n                        >\r\n                          <AlertF type=\"error\" subtext=\"There is a line of the report has an invalid type or progress!\" margin=\"-35px\"/>          \r\n                      </div>\r\n                      <div\r\n                        className={`alert alert-success ${errorDeleteUser ? 'alert-shown' : 'alert-hidden'}`}\r\n                        onTransitionEnd={() => setErrorDeleteUser(false)}\r\n                        >\r\n                          <AlertF type=\"error\" subtext=\"This user has claimed isometrics and can't be deleted!\" margin=\"-40px\"/>          \r\n                      </div>\r\n                  </center>\r\n              {navBar}\r\n              <div className=\"isotracker__row\">\r\n                  <div className=\"isotracker__column\">\r\n                      <img src={IsoTrackerLogo} alt=\"isoTrackerLogo\" className=\"isoTrackerLogo__image2\"/>\r\n                      \r\n                      <div className=\"roleSelector__containerF\">\r\n                              <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"column1\">\r\n                      <div className=\"stateTable__containerF\">\r\n                                  \r\n                          <StateTable updateData={updateData} currentRole = {currentRole}/>\r\n                                 \r\n                      </div>  \r\n                  </div>\r\n                  \r\n              </div>\r\n              <table className=\"isotracker__table__container\">\r\n                      <tr className=\"isotracker__table__navBar__container\">\r\n                          <th  colspan=\"2\" className=\"isotracker__table__navBar\">\r\n                              {recycleBinBtn}\r\n                              {onHoldBtn}\r\n                              {issuedBtn}\r\n                              {reportsBtn}\r\n                              {progressBtn}\r\n                              {modelledBtn}\r\n                              {processBtn}\r\n                              {instrumentationBtn}\r\n                              {usersButton}\r\n                              {uploadButton}\r\n                              {pageSelector}\r\n                          </th>\r\n                      </tr>\r\n                      <tr className=\"isotracker__table__tray__and__table__container\" style={{height: dataTableHeight}}>\r\n                          <td className=\"isotracker__table__trays\">\r\n                              <div className=\"trays__container\">\r\n                                    <p className=\"isotracker__table__trays__group\">IsoControl</p>\r\n                                  {isoControlBtn}\r\n                                  {isoControlNotModBtn}\r\n                                  <p className=\"isotracker__table__trays__group\">Home</p>\r\n                                  \r\n                                  {myTrayBtn}\r\n                                  <ReportBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n                                  <p className=\"isotracker__table__trays__group\">Trays</p>\r\n                                  <NavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole}/>        \r\n                              </div>\r\n                          </td>\r\n                          <td className=\"isotracker__table__table\" style={{height: dataTableHeight}} >\r\n                              <div style={{height: dataTableHeight}} className=\"isotracker__table__table__container\">\r\n                                  {tableContent}\r\n                              </div>\r\n                          </td>\r\n                      </tr>\r\n                  </table>\r\n                     \r\n                    <center className=\"actionBtns__container\">   \r\n                       \r\n                      {actionButtons}\r\n                    </center>\r\n                  \r\n                  <br></br>\r\n                  </div>\r\n        </body> \r\n        \r\n    );\r\n};\r\n\r\nexport default IsoCtrlF;\r\n"]},"metadata":{},"sourceType":"module"}