{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\pipingProduction\\\\pipingProduction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport IdleTimer from 'react-idle-timer';\nimport { useHistory } from \"react-router\";\nimport BackIcon from \"../../assets/images/back.svg\";\nimport Reports from \"../../assets/images/Notepad.png\";\nimport Graph from \"../../assets/images/ChartBar.png\";\nimport AlertF from \"../../components/alert/alert\";\nimport Alert from '@material-ui/lab/Alert';\nimport Collapse from '@material-ui/core/Collapse';\nimport { saveAs } from 'file-saver';\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx-js-style\";\nimport SaveIcon2 from \"../../assets/images/SaveIcon2.svg\";\nimport './pipingProduction.css';\nimport SaveIcon from \"../../assets/images/save.svg\";\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport NavBarProdCurve from '../../components/navBarProdCurve/navBarProdCurve';\nimport ProductionUserTabs from \"../../components/productionUserTabs/productionUserTabs\";\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PITRequests = () => {\n  _s();\n\n  const history = useHistory();\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const [tab, setTab] = useState(\"prod\");\n  const [tabBtns, setTabBtns] = useState(null);\n  const [usersType, setUsersType] = useState(\"iso\");\n  const [usersData, setUsersData] = useState(null);\n  const [userEffTitle, setUserEffTitle] = useState( /*#__PURE__*/_jsxDEV(\"h4\", {\n    style: {\n      fontSize: \"22px\",\n      fontWeight: \"bold\",\n      color: \"gray\",\n      marginTop: \"30px\",\n      marginLeft: \"690px\"\n    },\n    children: \"USER ISOMETRICS EFFICIENCY\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 54\n  }, this));\n  const [updateData, setUpdateData] = useState(false);\n  const [updateRows, setUpdateRows] = useState(false);\n  const [tables, setTables] = useState([]);\n  const [materials, setMaterials] = useState([]);\n  const [materialsList, setMaterialsList] = useState([]);\n  const [materialsIDList, setMaterialsIDList] = useState([]);\n  const [piping, setPiping] = useState([]);\n  const [management, setManagement] = useState([]);\n  const [estimatedData, setEstimatedData] = useState({});\n  const [forecastData, setForecastData] = useState({});\n  const [realData, setRealData] = useState({});\n  const [estimatedProgressData, setEstimatedProgressData] = useState({});\n  const [realProgressData, setRealProgressData] = useState({});\n  const [estimatedMaterialData, setEstimatedMaterialData] = useState({});\n  const [overallTable, setOverallTable] = useState();\n  const [estimatedWeightData, setEstimatedWeightData] = useState({});\n  const [forecastWeightData, setForecastWeightData] = useState({});\n  const [realWeightData, setRealWeightData] = useState({});\n  const [estimatedProgressWeightData, setEstimatedProgressWeightData] = useState({});\n  const [realProgressWeightData, setRealProgressWeightData] = useState({});\n  const [realWeightMatData, setRealWeightMatData] = useState({});\n  const [realProgressWeightMatData, setRealProgressWeightMatData] = useState({});\n  const [success, setSuccess] = useState(false);\n  const [spanAlert, setSpanAlert] = useState(false);\n  const [pipingAlert, setPipingAlert] = useState(false);\n  const [materialsAlert, setMaterialsAlert] = useState(false);\n  const [weeksYDiff, setWeeksYDiff] = useState();\n  const [lineChart, setLineChart] = useState();\n  const [loading, setLoading] = useState(false);\n  const [estimatedOverall, setEstimatedOverall] = useState([]);\n  const [realOverall, setRealOverall] = useState([]);\n  const [estimatedProgressOverall, setEstimatedProgressOverall] = useState([]);\n  const [realProgressOverall, setRealProgressOverall] = useState([]);\n  const colors = [\"#4169E1\", \"#B0E0E6\", \"#00BFFF\", \"#008000\", \"#7CFC00\", \"#98FB98\", \"#FF8C00\", \"#FFD700\", \"#FF0000\", \"#FF1493\", \"#FF69B4\", \"#FFC0CB\", \"#708090\", \"#A9A9A9\", \"#DCDCDC\", \"#20B2AA\", \"#00CED1\", \"#AFEEEE\"];\n  document.body.style.zoom = 1;\n\n  function handleOnIdle() {\n    const body = {\n      user: secureStorage.getItem(\"user\")\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {});\n    secureStorage.clear();\n    history.push(\"/\" + process.env.REACT_APP_PROJECT);\n  }\n\n  useEffect(async () => {\n    const table_class = [\"mat1-table\", \"mat2-table\", \"mat3-table\", \"mat4-table\", \"mat5-table\", \"mat6-table\"];\n    const weight_table_class = [\"wmat1-table\", \"wmat2-table\", \"wmat3-table\", \"wmat4-table\", \"wmat5-table\", \"wmat6-table\"];\n    await setLoading(true);\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getMaterialsPipingClass\", options).then(response => response.json()).then(async json => {\n      const materials = json.materials;\n      let piping = [];\n\n      for (let i = 0; i < materials.length; i++) {\n        piping.push({\n          \"id\": materials[i].piping_id,\n          \"PipingClass\": materials[i].piping,\n          \"Material\": materials[i].material\n        });\n      }\n\n      await setPiping(piping);\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getProjectSpan\", options).then(response => response.json()).then(async json => {\n      const span = json.span;\n\n      if (span.length > 0) {\n        await setManagement({\n          \"Starting date\": span[0].starting_date.toString().substring(8, 10) + \"/\" + span[0].starting_date.toString().substring(5, 7) + \"/\" + span[0].starting_date.toString().substring(0, 4),\n          \"Finishing date\": span[0].finishing_date.toString().substring(8, 10) + \"/\" + span[0].finishing_date.toString().substring(5, 7) + \"/\" + span[0].finishing_date.toString().substring(0, 4)\n        });\n      } else {\n        await setManagement({\n          \"Starting date\": \"\",\n          \"Finishing date\": \"\"\n        });\n      }\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getEstimatedByMaterial\", options).then(response => response.json()).then(async json => {\n      let est = estimatedMaterialData;\n\n      for (let i = 0; i < json.estimated.length; i++) {\n        est[json.estimated[i].id] = json.estimated[i].estimated;\n      }\n\n      await setEstimatedMaterialData(est);\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getMaterials\", options).then(response => response.json()).then(async json => {\n      const materials = json.materials;\n      let mat = [];\n      let matList = [];\n      let matIDList = [];\n\n      for (let i = 0; i < materials.length; i++) {\n        mat.push({\n          \"id\": materials[i].id,\n          \"Material\": materials[i].name\n        });\n        matList.push(materials[i].name);\n        matIDList.push(materials[i].id);\n      }\n\n      await setMaterialsIDList(matIDList);\n      await setMaterials(mat);\n      await setMaterialsList(matList);\n\n      if (tab === \"prod\") {\n        setTabBtns( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"140px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reporting__tab__button\",\n            style: {\n              backgroundColor: \"#338DF1\"\n            },\n            children: \"P\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reporting__tab__button\",\n            style: {\n              marginTop: \"10px\"\n            },\n            onClick: async () => await setTab(\"weight\"),\n            children: \"W\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reporting__tab__button\",\n            style: {\n              marginTop: \"10px\"\n            },\n            onClick: async () => await setTab(\"users\"),\n            children: \"U\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 32\n        }, this));\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getIssuedByMatWeek\", options).then(response => response.json()).then(async json => {\n          const issued = json.issued;\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getEstimatedMatWeek\", options).then(response => response.json()).then(async json => {\n            const estimated = json.estimated;\n            await setWeeksYDiff(estimated[0].weekY - 1);\n            const weekYdiff = estimated[0].weekY - 1;\n\n            if (estimated.length > 0) {\n              fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getForecastMatWeek\", options).then(response => response.json()).then(async json => {\n                const forecast = json.forecast;\n                let tables = [];\n                let material = estimated[0].material_id;\n                const settings = {\n                  licenseKey: 'non-commercial-and-evaluation',\n                  colWidths: 40,\n                  rowHeaderWidth: 190 //... other options\n\n                };\n                let weeks = [];\n                let graphData = [];\n                let est = {};\n                let sumEst = {};\n                let sumReal = {};\n                let sumForc = {};\n                let sumEstGraph = [];\n                let sumRealGraph = [];\n                let sumForcGraph = [];\n                let countEst = 0;\n                let countReal = 0;\n                let countForc = 0;\n                let forc = {};\n                let col = [];\n                let sumEstCells = [];\n\n                for (let i = 0; i < estimated.length; i++) {\n                  if (estimated[i].material_id === material) {\n                    weeks.push(estimated[i].week.toString());\n                    est[estimated[i].week.toString()] = estimated[i].estimated;\n                    forc[forecast[i].week.toString()] = forecast[i].estimated;\n                    countForc += forecast[i].estimated;\n                    countEst += estimated[i].estimated;\n                    sumEst[estimated[i].week.toString()] = countEst;\n\n                    if (issued[material]) {\n                      if (issued[material][estimated[i].week]) {\n                        countReal += issued[material][estimated[i].week];\n                      }\n                    }\n\n                    sumReal[estimated[i].week.toString()] = countReal;\n                    sumForc[estimated[i].week.toString()] = countForc;\n                    col.push({\n                      data: estimated[i].week.toString(),\n                      type: \"numeric\"\n                    });\n                    sumEstCells.push({\n                      row: 1,\n                      col: i,\n                      readOnly: true\n                    });\n                    sumEstCells.push({\n                      row: 3,\n                      col: i,\n                      readOnly: true\n                    });\n                    sumEstCells.push({\n                      row: 4,\n                      col: i,\n                      readOnly: true\n                    });\n                  } else {\n                    let estData = estimatedData;\n                    estData[material] = est;\n                    await setEstimatedData(estData);\n                    let forcData = forecastData;\n                    forcData[material] = forc;\n                    await setForecastData(forcData);\n                    let rData = realData;\n                    rData[material] = issued[material];\n                    await setRealData(rData);\n                    let sumEstData = estimatedProgressData;\n                    sumEstData[material] = sumEst;\n                    await setEstimatedProgressData(sumEstData);\n                    let sumRealData = realProgressData;\n                    sumRealData[material] = sumReal;\n                    await setRealProgressData(sumRealData);\n                    let totalEst = estimatedMaterialData[estimated[i - 1].material_id];\n\n                    if (!totalEst) {\n                      totalEst = 0;\n                    }\n\n                    let diff = countEst - totalEst;\n                    let warning = null;\n\n                    if (totalEst < countEst) {\n                      warning = /*#__PURE__*/_jsxDEV(\"text\", {\n                        className: \"warning__text\",\n                        children: [\"*Estimated exceeded by \", diff, \"!\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 63\n                      }, this);\n                    }\n\n                    if (!totalEst) {\n                      totalEst = \"(0 estimated)\";\n                    } else {\n                      totalEst = \"(\" + totalEst.toString() + \" estimated)\";\n                    }\n\n                    let t_class = table_class[matIDList.indexOf(material)];\n                    await tables.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                      id: \"hot-app\",\n                      style: {\n                        borderBottom: \"1px solid lightgray\",\n                        width: \"1750px\",\n                        paddingBottom: \"30px\",\n                        marginTop: \"20px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: \"flex\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                          className: \"materials__title\",\n                          children: [estimated[i - 1].name.toUpperCase(), \" Isometrics \", /*#__PURE__*/_jsxDEV(\"text\", {\n                            style: {\n                              fontSize: \"17px\"\n                            },\n                            children: totalEst\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 288,\n                            columnNumber: 298\n                          }, this), \" \", warning]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 288,\n                          columnNumber: 216\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"save__button\",\n                          onClick: () => submitEstimatedForecast(estimated[i - 1].material_id),\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: SaveIcon,\n                            alt: \"save\",\n                            className: \"save__icon\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 288,\n                            columnNumber: 464\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 288,\n                          columnNumber: 364\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 186\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          marginTop: \"10px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(HotTable, {\n                          data: [est, issued[material], forc, sumEst, sumReal],\n                          colHeaders: weeks,\n                          rowHeaders: [\"Estimated\", \"Real\", \"Forecast\", \"Estimated progress\", \"Real progress\"],\n                          width: \"1750\",\n                          height: \"160\",\n                          settings: settings,\n                          manualColumnResize: true,\n                          manualRowResize: true,\n                          columns: col,\n                          filters: true,\n                          cell: sumEstCells,\n                          className: t_class\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 289,\n                          columnNumber: 81\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 67\n                    }, this));\n                    Object.keys(sumEst).map(function (key, index) {\n                      sumEstGraph.push(sumEst[key]);\n                    });\n                    Object.keys(sumReal).map(function (key, index) {\n                      sumRealGraph.push(sumReal[key]);\n                    });\n                    Object.keys(sumForc).map(function (key, index) {\n                      sumForcGraph.push(sumForc[key]);\n                    });\n                    let color_index = matIDList.indexOf(material) * 3;\n                    graphData.push({\n                      label: 'Estimated ' + estimated[i - 1].name,\n                      fill: false,\n                      lineTension: 0.2,\n                      backgroundColor: colors[color_index],\n                      borderColor: colors[color_index],\n                      borderWidth: 1,\n                      data: sumEstGraph\n                    });\n                    graphData.push({\n                      label: 'Forecast ' + estimated[i - 1].name,\n                      fill: false,\n                      lineTension: 0.2,\n                      backgroundColor: colors[color_index + 2],\n                      borderColor: colors[color_index + 2],\n                      borderWidth: 1,\n                      data: sumForcGraph\n                    });\n                    graphData.push({\n                      label: 'Real ' + estimated[i - 1].name,\n                      fill: false,\n                      lineTension: 0.2,\n                      backgroundColor: colors[color_index + 1],\n                      borderColor: colors[color_index + 1],\n                      borderWidth: 1,\n                      data: sumRealGraph\n                    });\n                    weeks = [estimated[i].week.toString()];\n                    est = {};\n                    forc = {};\n                    sumEst = {};\n                    sumReal = {};\n                    sumForc = {};\n                    sumEstGraph = [];\n                    sumRealGraph = [];\n                    sumForcGraph = [];\n                    est[estimated[i].week.toString()] = estimated[i].estimated;\n                    forc[forecast[i].week.toString()] = forecast[i].estimated;\n\n                    if (issued[estimated[i].material_id]) {\n                      if (issued[estimated[i].material_id][\"1\"]) {\n                        countReal = issued[estimated[i].material_id][estimated[i].week];\n                      } else {\n                        countReal = 0;\n                      }\n                    } else {\n                      countReal = 0;\n                    }\n\n                    sumReal[estimated[i].week.toString()] = countReal;\n\n                    if (estimated[i].estimated) {\n                      countEst = estimated[i].estimated;\n                    } else {\n                      countEst = 0;\n                    }\n\n                    if (forecast[i].estimated) {\n                      countForc = forecast[i].estimated;\n                    } else {\n                      countForc = 0;\n                    }\n\n                    sumForc[forecast[i].week.toString()] = countForc;\n                    sumEst[estimated[i].week.toString()] = countEst;\n                    col = [{\n                      data: estimated[i].week.toString(),\n                      type: \"numeric\"\n                    }];\n                    material = estimated[i].material_id;\n                  }\n                }\n\n                let estData = estimatedData;\n                estData[material] = est;\n                await setEstimatedData(estData);\n                let forcData = forecastData;\n                forcData[material] = forc;\n                await setForecastData(forcData);\n                let rData = realData;\n                rData[material] = issued[material];\n                await setRealData(rData);\n                let sumEstData = estimatedProgressData;\n                sumEstData[material] = sumEst;\n                await setEstimatedProgressData(sumEstData);\n                let sumRealData = realProgressData;\n                sumRealData[material] = sumReal;\n                await setRealProgressData(sumRealData);\n                let totalEst = estimatedMaterialData[material];\n\n                if (!totalEst) {\n                  totalEst = 0;\n                }\n\n                let diff = countEst - totalEst;\n                let warning = null;\n\n                if (totalEst < countEst) {\n                  warning = /*#__PURE__*/_jsxDEV(\"text\", {\n                    className: \"warning__text\",\n                    children: [\"*Estimated exceeded by \", diff, \"!\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 55\n                  }, this);\n                }\n\n                if (!totalEst) {\n                  totalEst = \"(0 estimated)\";\n                } else {\n                  totalEst = \"(\" + totalEst.toString() + \" estimated)\";\n                }\n\n                let t_class = table_class[matIDList.indexOf(material)];\n                await tables.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"hot-app\",\n                  style: {\n                    width: \"1750px\",\n                    paddingBottom: \"30px\",\n                    marginTop: \"20px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                      className: \"materials__title\",\n                      children: [estimated[estimated.length - 1].name.toUpperCase(), \" Isometrics \", /*#__PURE__*/_jsxDEV(\"text\", {\n                        style: {\n                          fontSize: \"17px\"\n                        },\n                        children: totalEst\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 269\n                      }, this), \" \", warning]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 172\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"save__button\",\n                      onClick: () => submitEstimatedForecast(material),\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: SaveIcon,\n                        alt: \"save\",\n                        className: \"save__icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 417\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 335\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 142\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: \"10px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(HotTable, {\n                      data: [est, issued[material], forc, sumEst, sumReal],\n                      colHeaders: weeks,\n                      rowHeaders: [\"Estimated\", \"Real\", \"Forecast\", \"Estimated progress\", \"Real progress\"],\n                      width: \"1750\",\n                      height: \"160\",\n                      settings: settings,\n                      manualColumnResize: true,\n                      manualRowResize: true,\n                      columns: col,\n                      filters: true,\n                      cell: sumEstCells,\n                      className: t_class\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 73\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 59\n                }, this));\n                await setTables([]);\n                await setTables(tables);\n                Object.keys(sumEst).map(function (key, index) {\n                  sumEstGraph.push(sumEst[key]);\n                });\n                Object.keys(sumReal).map(function (key, index) {\n                  sumRealGraph.push(sumReal[key]);\n                });\n                Object.keys(sumForc).map(function (key, index) {\n                  sumForcGraph.push(sumForc[key]);\n                });\n                let color_index = matIDList.indexOf(material) * 3;\n                graphData.push({\n                  label: 'Estimated ' + estimated[estimated.length - 1].name,\n                  fill: false,\n                  lineTension: 0.2,\n                  backgroundColor: colors[color_index],\n                  borderColor: colors[color_index],\n                  borderWidth: 1,\n                  data: sumEstGraph\n                });\n                graphData.push({\n                  label: 'Forecast ' + estimated[estimated.length - 1].name,\n                  fill: false,\n                  lineTension: 0.2,\n                  backgroundColor: colors[color_index + 2],\n                  borderColor: colors[color_index + 2],\n                  borderWidth: 1,\n                  data: sumForcGraph\n                });\n                graphData.push({\n                  label: 'Real ' + estimated[estimated.length - 1].name,\n                  fill: false,\n                  lineTension: 0.2,\n                  backgroundColor: colors[color_index + 1],\n                  borderColor: colors[color_index + 1],\n                  borderWidth: 1,\n                  data: sumRealGraph\n                });\n                let overallTable = [];\n                let totalEstimated = 0;\n                let estimatedOverall = {};\n                let esimatedOverallSum = {};\n                let estimatedOverallCount = 0;\n                let estimatedOverallGraph = [];\n                let realOverall = {};\n                let realOverallSum = {};\n                let realOverallCount = 0;\n                let realOverallGraph = [];\n                Object.keys(estimatedMaterialData).map(function (key, index) {\n                  totalEstimated += estimatedMaterialData[key];\n                });\n                Object.keys(issued).map(function (key, index) {\n                  Object.keys(issued[key]).map(function (k, index) {\n                    if (realOverall[k]) {\n                      realOverall[k] += issued[key][k];\n                    } else {\n                      realOverall[k] = issued[key][k];\n                    }\n                  });\n                });\n                Object.keys(estimated).map(function (key, index) {\n                  if (estimatedOverall[estimated[key].week]) {\n                    estimatedOverall[estimated[key].week] += estimated[key].estimated;\n                  } else {\n                    estimatedOverall[estimated[key].week] = estimated[key].estimated;\n                  }\n                });\n                let labels = [];\n                let overallCells = [];\n                console.log(estimatedOverall);\n                await Object.keys(estimatedOverall).map(function (key, index) {\n                  if (realOverall[key]) {\n                    realOverallCount += realOverall[key];\n                  }\n\n                  realOverallSum[key] = realOverallCount;\n                  estimatedOverallCount += estimatedOverall[key];\n                  esimatedOverallSum[key] = estimatedOverallCount;\n                  estimatedOverallGraph.push(estimatedOverallCount);\n                  realOverallGraph.push(realOverallCount);\n                  overallCells.push({\n                    row: 2,\n                    col: index,\n                    className: \"overallCell__estSum\"\n                  });\n                  overallCells.push({\n                    row: 3,\n                    col: index,\n                    className: \"overallCell__realSum\"\n                  });\n                  labels.push(\"w\" + key.toString() + \" / w\" + (parseInt(key) + weekYdiff));\n                });\n                graphData.push({\n                  label: 'Estimated Overall',\n                  fill: false,\n                  lineTension: 0.2,\n                  backgroundColor: 'rgb(147,112,219)',\n                  borderColor: 'rgb(147,112,219)',\n                  borderWidth: 1,\n                  data: estimatedOverallGraph\n                });\n                graphData.push({\n                  label: 'Real Overall',\n                  fill: false,\n                  lineTension: 0.2,\n                  backgroundColor: 'rgb(255,80,80)',\n                  borderColor: 'rgb(255,80,80)',\n                  borderWidth: 1,\n                  data: realOverallGraph\n                });\n                warning = null;\n\n                if (totalEstimated < estimatedOverallCount) {\n                  warning = /*#__PURE__*/_jsxDEV(\"text\", {\n                    className: \"warning__text\",\n                    children: [\"*Estimated exceeded by \", estimatedOverallCount - totalEstimated, \"!\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 55\n                  }, this);\n                }\n\n                await overallTable.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"hot-app\",\n                  style: {\n                    borderBottom: \"1px solid lightgray\",\n                    borderTop: \"1px solid lightgray\",\n                    width: \"1750px\",\n                    paddingBottom: \"30px\",\n                    paddingTop: \"30px\",\n                    marginTop: \"20px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                    className: \"materials__title\",\n                    children: [\"OVERALL Isometrics \", /*#__PURE__*/_jsxDEV(\"text\", {\n                      style: {\n                        fontSize: \"17px\"\n                      },\n                      children: [\"(\", totalEstimated, \" estimated)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 561,\n                      columnNumber: 290\n                    }, this), \" \", warning]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 236\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: \"10px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(HotTable, {\n                      data: [estimatedOverall, realOverall, esimatedOverallSum, realOverallSum],\n                      colHeaders: weeks,\n                      rowHeaders: [\"Estimated\", \"Real\", \"Estimated progress\", \"Real progress\"],\n                      width: \"1750\",\n                      height: \"138\",\n                      settings: settings,\n                      manualColumnResize: true,\n                      manualRowResize: true,\n                      columns: col,\n                      filters: true,\n                      readOnly: true,\n                      className: \"overall-table\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 73\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 65\n                }, this));\n                await setEstimatedOverall(estimatedOverall);\n                await setRealOverall(realOverall);\n                await setEstimatedProgressOverall(esimatedOverallSum);\n                await setRealProgressOverall(realOverallSum);\n                await setOverallTable();\n                await setOverallTable(overallTable);\n                await setLineChart( /*#__PURE__*/_jsxDEV(Line, {\n                  data: {\n                    labels: labels,\n                    datasets: graphData\n                  },\n                  options: {\n                    hover: {\n                      mode: 'new mode'\n                    },\n                    plugins: {\n                      title: {\n                        display: true,\n                        text: \"PRODUCTION CURVES\",\n                        font: {\n                          size: \"22px\",\n                          family: \"Quicksand\"\n                        }\n                      },\n                      legend: {\n                        display: true,\n                        position: \"left\",\n                        labels: {\n                          filter: function (legendItem, chartData) {\n                            chartData.datasets[legendItem.datasetIndex].hidden = true;\n                            return true;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 60\n                }, this));\n              });\n            }\n          });\n        });\n      } else if (tab === \"weight\") {\n        setTabBtns( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"140px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reporting__tab__button\",\n            onClick: () => setTab(\"prod\"),\n            children: \"P\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reporting__tab__button\",\n            style: {\n              marginTop: \"10px\",\n              backgroundColor: \"#338DF1\"\n            },\n            children: \"W\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reporting__tab__button\",\n            style: {\n              marginTop: \"10px\"\n            },\n            onClick: async () => await setTab(\"users\"),\n            children: \"U\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 32\n        }, this));\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getIssuedWeightByMatWeek\", options).then(response => response.json()).then(async json => {\n          const issued = json.issued;\n          await setRealWeightMatData(issued);\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getEstimatedForecastWeight\", options).then(response => response.json()).then(async json => {\n            const estimated = json.estimated;\n\n            if (estimated.length > 0) {\n              let tables = [];\n              const weightSettings = {\n                licenseKey: 'non-commercial-and-evaluation',\n                colWidths: 55,\n                rowHeaderWidth: 190 //... other options\n\n              };\n              let weeks = [];\n              let graphData = [];\n              let est = {};\n              let forc = {};\n              let sumEst = {};\n              let sumForc = {};\n              let countEst = 0;\n              let countForc = 0;\n              let col = [];\n              let sumEstCells = [];\n              let realOverallCount = 0;\n              let realOverallSum = {};\n              let realOverallGraph = [];\n              let realOverall = {};\n\n              for (let i = 0; i < estimated.length; i++) {\n                weeks.push(estimated[i].week.toString());\n                est[estimated[i].week] = estimated[i].estimated;\n                forc[estimated[i].week] = estimated[i].forecast;\n                countEst += estimated[i].estimated;\n                countForc += estimated[i].forecast;\n                sumEst[estimated[i].week] = countEst;\n                sumForc[estimated[i].week] = countForc;\n                col.push({\n                  data: estimated[i].week.toString(),\n                  type: \"numeric\"\n                });\n              }\n\n              Object.keys(issued).map(async function (key, index) {\n                let countReal = 0;\n                let sumReal = {};\n                let sumRealGraph = [];\n                Object.keys(est).map(async function (w, index) {\n                  if (issued[key][w]) {\n                    countReal += issued[key][w];\n                    sumReal[w] = countReal;\n                  } else {\n                    sumReal[w] = countReal;\n                  }\n\n                  if (realOverall[w]) {\n                    realOverall[w] += issued[key][w];\n                  } else {\n                    realOverall[w] = issued[key][w];\n                  }\n                });\n                let t_class = weight_table_class[matIDList.indexOf(parseInt(key))];\n                await tables.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"hot-app\",\n                  style: {\n                    borderBottom: \"1px solid lightgray\",\n                    width: \"1750px\",\n                    paddingBottom: \"30px\",\n                    marginTop: \"20px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                    className: \"materials__title\",\n                    children: [materialsList[matIDList.indexOf(parseInt(key))].toUpperCase(), \" Weight (kg)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 182\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: \"10px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(HotTable, {\n                      data: [issued[key], sumReal],\n                      colHeaders: weeks,\n                      rowHeaders: [\"Real\", \"Real progress\"],\n                      width: \"1750\",\n                      height: \"95\",\n                      settings: weightSettings,\n                      manualColumnResize: true,\n                      manualRowResize: true,\n                      columns: col,\n                      filters: true,\n                      readOnly: true,\n                      cell: sumEstCells,\n                      className: t_class\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 694,\n                      columnNumber: 81\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 63\n                }, this));\n                Object.keys(sumReal).map(function (key, index) {\n                  sumRealGraph.push(sumReal[key]);\n                });\n                let color_index = matIDList.indexOf(parseInt(key)) * 3;\n                graphData.push({\n                  label: 'Real ' + materialsList[matIDList.indexOf(parseInt(key))],\n                  fill: false,\n                  lineTension: 0.2,\n                  backgroundColor: colors[color_index + 1],\n                  borderColor: colors[color_index + 1],\n                  borderWidth: 1,\n                  data: sumRealGraph\n                });\n                let realProgressWeight = realProgressWeightMatData;\n                realProgressWeight[key] = sumReal;\n                await setRealProgressWeightMatData(realProgressWeight);\n              });\n              await setTables([]);\n              await setTables(tables);\n              let overallTable = [];\n              let totalEstimated = 0;\n              let estimatedOverall = {};\n              let esimatedOverallSum = {};\n              let estimatedOverallCount = 0;\n              let estimatedOverallGraph = [];\n              let forecastOverall = {};\n              let forecastOverallSum = {};\n              let forecastOverallCount = 0;\n              let forecastOverallGraph = [];\n\n              for (let i = 0; i < estimated.length; i++) {\n                totalEstimated += estimated[i][\"estimated\"];\n              }\n\n              ;\n              Object.keys(est).map(function (key, index) {\n                if (estimatedOverall[key]) {\n                  estimatedOverall[key] += est[key];\n                } else {\n                  estimatedOverall[key] = est[key];\n                }\n              });\n              Object.keys(forc).map(function (key, index) {\n                if (forecastOverall[key]) {\n                  forecastOverall[key] += forc[key];\n                } else {\n                  forecastOverall[key] = forc[key];\n                }\n              });\n              await setEstimatedWeightData(estimatedOverall);\n              await setForecastWeightData(forecastOverall);\n              let labels = [];\n              let overallCells = [];\n              await Object.keys(estimatedOverall).map(function (key, index) {\n                if (realOverall[key]) {\n                  realOverallCount += realOverall[key];\n                }\n\n                realOverallSum[key] = realOverallCount;\n                estimatedOverallCount += estimatedOverall[key];\n                esimatedOverallSum[key] = estimatedOverallCount;\n                estimatedOverallGraph.push(estimatedOverallCount);\n                realOverallGraph.push(realOverallCount);\n                forecastOverallCount += forecastOverall[key];\n                forecastOverallSum[key] = forecastOverallCount;\n                forecastOverallGraph.push(forecastOverallCount);\n                overallCells.push({\n                  row: 1,\n                  col: index,\n                  readOnly: true\n                });\n                overallCells.push({\n                  row: 3,\n                  col: index,\n                  className: \"overallCell__estSum\",\n                  readOnly: true\n                });\n                overallCells.push({\n                  row: 4,\n                  col: index,\n                  className: \"overallCell__realSum\",\n                  readOnly: true\n                });\n                labels.push(\"w\" + key.toString() + \" / w\" + (parseInt(key) + weeksYDiff));\n              });\n              graphData.push({\n                label: 'Estimated Overall',\n                fill: false,\n                lineTension: 0.2,\n                backgroundColor: 'rgb(147,112,219)',\n                borderColor: 'rgb(147,112,219)',\n                borderWidth: 1,\n                data: estimatedOverallGraph\n              });\n              graphData.push({\n                label: 'Forecast Overall',\n                fill: false,\n                lineTension: 0.2,\n                backgroundColor: 'rgb(60,179,113)',\n                borderColor: 'rgb(60,179,113)',\n                borderWidth: 1,\n                data: forecastOverallGraph\n              });\n              graphData.push({\n                label: 'Real Overall',\n                fill: false,\n                lineTension: 0.2,\n                backgroundColor: 'rgb(255,80,80)',\n                borderColor: 'rgb(255,80,80)',\n                borderWidth: 1,\n                data: realOverallGraph\n              });\n              await overallTable.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"hot-app\",\n                style: {\n                  borderBottom: \"1px solid lightgray\",\n                  borderTop: \"1px solid lightgray\",\n                  width: \"1750px\",\n                  paddingBottom: \"30px\",\n                  paddingTop: \"30px\",\n                  marginTop: \"20px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                    className: \"materials__title\",\n                    children: [\"OVERALL Weight (kg) \", /*#__PURE__*/_jsxDEV(\"text\", {\n                      style: {\n                        fontSize: \"17px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 825,\n                      columnNumber: 321\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 266\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"save__button\",\n                    onClick: () => submitWeight(estimatedOverall, forecastOverall),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SaveIcon,\n                      alt: \"save\",\n                      className: \"save__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 825,\n                      columnNumber: 463\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 367\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 825,\n                  columnNumber: 236\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: \"10px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(HotTable, {\n                    data: [estimatedOverall, realOverall, forecastOverall, esimatedOverallSum, realOverallSum],\n                    colHeaders: weeks,\n                    rowHeaders: [\"Estimated\", \"Real\", \"Forecast\", \"Estimated progress\", \"Real progress\"],\n                    width: \"1750\",\n                    height: \"165\",\n                    settings: weightSettings,\n                    manualColumnResize: true,\n                    manualRowResize: true,\n                    columns: col,\n                    filters: true,\n                    className: \"overallWeight-table\",\n                    cell: overallCells\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 826,\n                    columnNumber: 73\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 826,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 825,\n                columnNumber: 65\n              }, this));\n              await setEstimatedWeightData(estimatedOverall);\n              await setRealWeightData(realOverall);\n              await setForecastWeightData(forecastOverall);\n              await setEstimatedProgressWeightData(esimatedOverallSum);\n              await setRealProgressWeightData(realOverallSum);\n              await setOverallTable();\n              await setOverallTable(overallTable);\n              await setLineChart( /*#__PURE__*/_jsxDEV(Line, {\n                data: {\n                  labels: labels,\n                  datasets: graphData\n                },\n                options: {\n                  hover: {\n                    mode: 'new mode'\n                  },\n                  plugins: {\n                    title: {\n                      display: true,\n                      text: \"WEIGHT CURVES\",\n                      font: {\n                        size: \"22px\",\n                        family: \"Quicksand\"\n                      }\n                    },\n                    legend: {\n                      display: true,\n                      position: \"left\",\n                      labels: {\n                        filter: function (legendItem, chartData) {\n                          chartData.datasets[legendItem.datasetIndex].hidden = true;\n                          return true;\n                        }\n                      }\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 60\n              }, this));\n            }\n          });\n        });\n      } else if (tab === \"users\") {\n        if (usersType === \"iso\") {\n          await setUserEffTitle( /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontSize: \"22px\",\n              fontWeight: \"bold\",\n              color: \"gray\",\n              marginTop: \"30px\",\n              marginLeft: \"690px\"\n            },\n            children: \"USER ISOMETRICS EFFICIENCY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 47\n          }, this));\n          await setTabBtns( /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"90px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reporting__tab__button\",\n              onClick: () => setTab(\"prod\"),\n              children: \"P\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reporting__tab__button\",\n              style: {\n                marginTop: \"10px\"\n              },\n              onClick: async () => await setTab(\"weight\"),\n              children: \"W\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reporting__tab__button\",\n              style: {\n                marginTop: \"10px\",\n                backgroundColor: \"#338DF1\"\n              },\n              children: \"U\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reporting__tab__button\",\n              style: {\n                marginTop: \"10px\",\n                backgroundColor: \"#338DF1\"\n              },\n              children: \"I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reporting__tab__button\",\n              style: {\n                marginTop: \"10px\"\n              },\n              onClick: async () => await setUsersType(\"weight\"),\n              children: \"W\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 42\n          }, this));\n        } else if (usersType === \"weight\") {\n          await setUserEffTitle( /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontSize: \"22px\",\n              fontWeight: \"bold\",\n              color: \"gray\",\n              marginTop: \"30px\",\n              marginLeft: \"700px\"\n            },\n            children: \"USER WEIGHT EFFICIENCY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 47\n          }, this));\n          await setTabBtns( /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"90px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reporting__tab__button\",\n              onClick: () => setTab(\"prod\"),\n              children: \"P\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reporting__tab__button\",\n              style: {\n                marginTop: \"10px\"\n              },\n              onClick: async () => await setTab(\"weight\"),\n              children: \"W\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reporting__tab__button\",\n              style: {\n                marginTop: \"10px\",\n                backgroundColor: \"#338DF1\"\n              },\n              children: \"U\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reporting__tab__button\",\n              style: {\n                marginTop: \"10px\"\n              },\n              onClick: async () => await setUsersType(\"iso\"),\n              children: \"I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reporting__tab__button\",\n              style: {\n                marginTop: \"10px\",\n                backgroundColor: \"#338DF1\"\n              },\n              children: \"W\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 42\n          }, this));\n        }\n\n        await setTables([]);\n        await setLineChart(null);\n        await setOverallTable([]);\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getEstimatedForecastWeight\", options).then(response => response.json()).then(async json => {\n          const estimated = json.estimated;\n          const usersSettings = {\n            licenseKey: 'non-commercial-and-evaluation',\n            colWidths: 40,\n            rowHeaderWidth: 190 //... other options\n\n          };\n          let weeks = [];\n          let col = [];\n\n          if (estimated.length > 0) {\n            for (let i = 0; i < estimated.length; i++) {\n              weeks.push(estimated[i].week.toString());\n              col.push({\n                data: estimated[i].week.toString(),\n                type: \"numeric\"\n              });\n            }\n\n            if (usersType === \"iso\") {\n              await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/trayCount\", options).then(response => response.json()).then(async json => {\n                const trayCount = json.isoCount;\n                await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getIsosByUserWeekDesign\", options).then(response => response.json()).then(async json => {\n                  const design_isos = json.design_isos;\n                  await setUsersData(design_isos);\n                  console.log(design_isos);\n                  await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getIsosByUserWeek\", options).then(response => response.json()).then(async json => {\n                    const user_isos = json.user_isos;\n                    let design = [];\n                    let designLead = [];\n                    let stress = [];\n                    let stressLead = [];\n                    let supports = [];\n                    let supportsLead = [];\n                    let materials = [];\n                    let issuer = [];\n\n                    if (design_isos) {\n                      console.log(design_isos);\n                      Object.keys(design_isos).map(async function (user, index) {\n                        await design.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"hot-app\",\n                          style: {\n                            borderBottom: \"1px solid lightgray\",\n                            width: \"1750px\",\n                            paddingBottom: \"10px\",\n                            marginTop: \"10px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: \"flex\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"materials__title\",\n                              children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                                style: {\n                                  fontSize: \"17px\"\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 956,\n                                columnNumber: 275\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 956,\n                              columnNumber: 220\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 956,\n                            columnNumber: 190\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              marginTop: \"10px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(HotTable, {\n                              data: [design_isos[user][\"assigned\"], design_isos[user][\"sent\"], design_isos[user][\"returned\"], design_isos[user][\"remaining\"]],\n                              colHeaders: weeks,\n                              rowHeaders: [\"Assigned\", \"Sent\", \"Returned\", \"Remaining\"],\n                              width: \"1750\",\n                              height: \"145\",\n                              settings: usersSettings,\n                              manualColumnResize: true,\n                              manualRowResize: true,\n                              columns: col,\n                              filters: true,\n                              className: \"users-table\",\n                              readOnly: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 957,\n                              columnNumber: 85\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 957,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 956,\n                          columnNumber: 71\n                        }, this));\n                      });\n                    }\n\n                    if (user_isos[\"DesignLead\"]) {\n                      Object.keys(user_isos[\"DesignLead\"]).map(async function (user, index) {\n                        await designLead.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"hot-app\",\n                          style: {\n                            borderBottom: \"1px solid lightgray\",\n                            width: \"1750px\",\n                            paddingBottom: \"10px\",\n                            marginTop: \"10px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: \"flex\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"materials__title\",\n                              children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                                style: {\n                                  fontSize: \"17px\"\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 976,\n                                columnNumber: 279\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 976,\n                              columnNumber: 224\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 976,\n                            columnNumber: 194\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              marginTop: \"10px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(HotTable, {\n                              data: [user_isos[\"DesignLead\"][user][\"claimed\"], user_isos[\"DesignLead\"][user][\"sent\"], user_isos[\"DesignLead\"][user][\"returned\"], user_isos[\"DesignLead\"][user][\"remaining\"]],\n                              colHeaders: weeks,\n                              rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                              width: \"1750\",\n                              height: \"145\",\n                              settings: usersSettings,\n                              manualColumnResize: true,\n                              manualRowResize: true,\n                              columns: col,\n                              filters: true,\n                              className: \"users-table\",\n                              readOnly: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 977,\n                              columnNumber: 85\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 977,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 976,\n                          columnNumber: 75\n                        }, this));\n                      });\n                    }\n\n                    if (user_isos[\"Stress\"]) {\n                      Object.keys(user_isos[\"Stress\"]).map(async function (user, index) {\n                        await stress.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"hot-app\",\n                          style: {\n                            borderBottom: \"1px solid lightgray\",\n                            width: \"1750px\",\n                            paddingBottom: \"10px\",\n                            marginTop: \"10px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: \"flex\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"materials__title\",\n                              children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                                style: {\n                                  fontSize: \"17px\"\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 996,\n                                columnNumber: 275\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 996,\n                              columnNumber: 220\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 996,\n                            columnNumber: 190\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              marginTop: \"10px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(HotTable, {\n                              data: [user_isos[\"Stress\"][user][\"claimed\"], user_isos[\"Stress\"][user][\"sent\"], user_isos[\"Stress\"][user][\"returned\"], user_isos[\"Stress\"][user][\"remaining\"]],\n                              colHeaders: weeks,\n                              rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                              width: \"1750\",\n                              height: \"145\",\n                              settings: usersSettings,\n                              manualColumnResize: true,\n                              manualRowResize: true,\n                              columns: col,\n                              filters: true,\n                              className: \"users-table\",\n                              readOnly: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 997,\n                              columnNumber: 85\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 997,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 996,\n                          columnNumber: 71\n                        }, this));\n                      });\n                    }\n\n                    if (user_isos[\"StressLead\"]) {\n                      Object.keys(user_isos[\"StressLead\"]).map(async function (user, index) {\n                        await stressLead.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"hot-app\",\n                          style: {\n                            borderBottom: \"1px solid lightgray\",\n                            width: \"1750px\",\n                            paddingBottom: \"10px\",\n                            marginTop: \"10px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: \"flex\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"materials__title\",\n                              children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                                style: {\n                                  fontSize: \"17px\"\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1016,\n                                columnNumber: 279\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1016,\n                              columnNumber: 224\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1016,\n                            columnNumber: 194\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              marginTop: \"10px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(HotTable, {\n                              data: [user_isos[\"StressLead\"][user][\"claimed\"], user_isos[\"StressLead\"][user][\"sent\"], user_isos[\"StressLead\"][user][\"returned\"], user_isos[\"StressLead\"][user][\"remaining\"]],\n                              colHeaders: weeks,\n                              rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                              width: \"1750\",\n                              height: \"145\",\n                              settings: usersSettings,\n                              manualColumnResize: true,\n                              manualRowResize: true,\n                              columns: col,\n                              filters: true,\n                              className: \"users-table\",\n                              readOnly: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1017,\n                              columnNumber: 85\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1017,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1016,\n                          columnNumber: 75\n                        }, this));\n                      });\n                    }\n\n                    if (user_isos[\"Supports\"]) {\n                      Object.keys(user_isos[\"Supports\"]).map(async function (user, index) {\n                        await supports.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"hot-app\",\n                          style: {\n                            borderBottom: \"1px solid lightgray\",\n                            width: \"1750px\",\n                            paddingBottom: \"10px\",\n                            marginTop: \"10px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: \"flex\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"materials__title\",\n                              children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                                style: {\n                                  fontSize: \"17px\"\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1036,\n                                columnNumber: 277\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1036,\n                              columnNumber: 222\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1036,\n                            columnNumber: 192\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              marginTop: \"10px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(HotTable, {\n                              data: [user_isos[\"Supports\"][user][\"claimed\"], user_isos[\"Supports\"][user][\"sent\"], user_isos[\"Supports\"][user][\"returned\"], user_isos[\"Supports\"][user][\"remaining\"]],\n                              colHeaders: weeks,\n                              rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                              width: \"1750\",\n                              height: \"145\",\n                              settings: usersSettings,\n                              manualColumnResize: true,\n                              manualRowResize: true,\n                              columns: col,\n                              filters: true,\n                              className: \"users-table\",\n                              readOnly: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1037,\n                              columnNumber: 85\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1037,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1036,\n                          columnNumber: 73\n                        }, this));\n                      });\n                    }\n\n                    if (user_isos[\"SupportsLead\"]) {\n                      Object.keys(user_isos[\"SupportsLead\"]).map(async function (user, index) {\n                        await supportsLead.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"hot-app\",\n                          style: {\n                            borderBottom: \"1px solid lightgray\",\n                            width: \"1750px\",\n                            paddingBottom: \"10px\",\n                            marginTop: \"10px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: \"flex\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"materials__title\",\n                              children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                                style: {\n                                  fontSize: \"17px\"\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1056,\n                                columnNumber: 281\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1056,\n                              columnNumber: 226\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1056,\n                            columnNumber: 196\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              marginTop: \"10px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(HotTable, {\n                              data: [user_isos[\"SupportsLead\"][user][\"claimed\"], user_isos[\"SupportsLead\"][user][\"sent\"], user_isos[\"SupportsLead\"][user][\"returned\"], user_isos[\"SupportsLead\"][user][\"remaining\"]],\n                              colHeaders: weeks,\n                              rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                              width: \"1750\",\n                              height: \"145\",\n                              settings: usersSettings,\n                              manualColumnResize: true,\n                              manualRowResize: true,\n                              columns: col,\n                              filters: true,\n                              className: \"users-table\",\n                              readOnly: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1057,\n                              columnNumber: 85\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1057,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1056,\n                          columnNumber: 77\n                        }, this));\n                      });\n                    }\n\n                    if (user_isos[\"Materials\"]) {\n                      Object.keys(user_isos[\"Materials\"]).map(async function (user, index) {\n                        await materials.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"hot-app\",\n                          style: {\n                            borderBottom: \"1px solid lightgray\",\n                            width: \"1750px\",\n                            paddingBottom: \"10px\",\n                            marginTop: \"10px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: \"flex\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"materials__title\",\n                              children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                                style: {\n                                  fontSize: \"17px\"\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1076,\n                                columnNumber: 278\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1076,\n                              columnNumber: 223\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1076,\n                            columnNumber: 193\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              marginTop: \"10px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(HotTable, {\n                              data: [user_isos[\"Materials\"][user][\"claimed\"], user_isos[\"Materials\"][user][\"sent\"], user_isos[\"Materials\"][user][\"returned\"], user_isos[\"Materials\"][user][\"remaining\"]],\n                              colHeaders: weeks,\n                              rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                              width: \"1750\",\n                              height: \"145\",\n                              settings: usersSettings,\n                              manualColumnResize: true,\n                              manualRowResize: true,\n                              columns: col,\n                              filters: true,\n                              className: \"users-table\",\n                              readOnly: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1077,\n                              columnNumber: 85\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1077,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1076,\n                          columnNumber: 74\n                        }, this));\n                      });\n                    }\n\n                    if (user_isos[\"Issuer\"]) {\n                      Object.keys(user_isos[\"Issuer\"]).map(async function (user, index) {\n                        await issuer.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"hot-app\",\n                          style: {\n                            borderBottom: \"1px solid lightgray\",\n                            width: \"1750px\",\n                            paddingBottom: \"10px\",\n                            marginTop: \"10px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: \"flex\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"materials__title\",\n                              children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                                style: {\n                                  fontSize: \"17px\"\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1096,\n                                columnNumber: 275\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1096,\n                              columnNumber: 220\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1096,\n                            columnNumber: 190\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              marginTop: \"10px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(HotTable, {\n                              data: [user_isos[\"Issuer\"][user][\"claimed\"], user_isos[\"Issuer\"][user][\"sent\"], user_isos[\"Issuer\"][user][\"returned\"], user_isos[\"Issuer\"][user][\"remaining\"]],\n                              colHeaders: weeks,\n                              rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                              width: \"1750\",\n                              height: \"145\",\n                              settings: usersSettings,\n                              manualColumnResize: true,\n                              manualRowResize: true,\n                              columns: col,\n                              filters: true,\n                              className: \"users-table\",\n                              readOnly: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1097,\n                              columnNumber: 85\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1097,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1096,\n                          columnNumber: 71\n                        }, this));\n                      });\n                    }\n\n                    await setTables( /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(ProductionUserTabs, {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          label: \"Design\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user__productivity__tables__container\",\n                            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"isoCount__text\",\n                              children: [\"Unclaimed isos: \", trayCount[0].Design]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1118,\n                              columnNumber: 61\n                            }, this), design]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1117,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1116,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          label: \"DesignLead\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user__productivity__tables__container\",\n                            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"isoCount__text\",\n                              children: [\"Unclaimed isos: \", trayCount[0].DesignLead]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1124,\n                              columnNumber: 61\n                            }, this), designLead]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1123,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1122,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          label: \"Stress\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user__productivity__tables__container\",\n                            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"isoCount__text\",\n                              children: [\"Unclaimed isos: \", trayCount[0].Stress]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1130,\n                              columnNumber: 61\n                            }, this), stress]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1129,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1128,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          label: \"StressLead\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user__productivity__tables__container\",\n                            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"isoCount__text\",\n                              children: [\"Unclaimed isos: \", trayCount[0].StressLead]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1136,\n                              columnNumber: 61\n                            }, this), stressLead]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1135,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1134,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          label: \"Supports\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user__productivity__tables__container\",\n                            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"isoCount__text\",\n                              children: [\"Unclaimed isos: \", trayCount[0].Supports]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1142,\n                              columnNumber: 58\n                            }, this), supports]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1141,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1140,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          label: \"SupportsLead\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user__productivity__tables__container\",\n                            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"isoCount__text\",\n                              children: [\"Unclaimed isos: \", trayCount[0].SupportsLead]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1148,\n                              columnNumber: 61\n                            }, this), supportsLead]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1147,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1146,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          label: \"Materials\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user__productivity__tables__container\",\n                            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"isoCount__text\",\n                              children: [\"Unclaimed isos: \", trayCount[0].Materials]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1154,\n                              columnNumber: 61\n                            }, this), materials]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1153,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1152,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          label: \"Issuer\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user__productivity__tables__container\",\n                            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                              className: \"isoCount__text\",\n                              children: [\"Unclaimed isos: \", trayCount[0].Issuer]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1160,\n                              columnNumber: 61\n                            }, this), issuer]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1159,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1158,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1115,\n                        columnNumber: 66\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1115,\n                      columnNumber: 61\n                    }, this));\n                  });\n                });\n              });\n            } else if (usersType === \"weight\") {\n              await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getWeightByUserWeekDesign\", options).then(response => response.json()).then(async json => {\n                const design_isos = json.design_isos;\n                console.log(design_isos);\n                let design = [];\n                let designLead = [];\n                let stress = [];\n                let stressLead = [];\n                let supports = [];\n                let supportsLead = [];\n                let materials = [];\n                let issuer = [];\n                await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getWeightByUserWeek\", options).then(response => response.json()).then(async json => {\n                  let user_isos = json.user_isos;\n\n                  if (design_isos) {\n                    Object.keys(design_isos).map(async function (user, index) {\n                      await design.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"hot-app\",\n                        style: {\n                          borderBottom: \"1px solid lightgray\",\n                          width: \"1750px\",\n                          paddingBottom: \"10px\",\n                          marginTop: \"10px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: \"flex\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"text\", {\n                            className: \"materials__title\",\n                            children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                              style: {\n                                fontSize: \"17px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1191,\n                              columnNumber: 271\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1191,\n                            columnNumber: 216\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1191,\n                          columnNumber: 186\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            marginTop: \"10px\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(HotTable, {\n                            data: [design_isos[user][\"assigned\"], design_isos[user][\"sent\"], design_isos[user][\"returned\"], design_isos[user][\"remaining\"]],\n                            colHeaders: weeks,\n                            rowHeaders: [\"Assigned\", \"Sent\", \"Returned\", \"Remaining\"],\n                            width: \"1750\",\n                            height: \"145\",\n                            settings: usersSettings,\n                            manualColumnResize: true,\n                            manualRowResize: true,\n                            columns: col,\n                            filters: true,\n                            className: \"users-table\",\n                            readOnly: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1192,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1192,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1191,\n                        columnNumber: 67\n                      }, this));\n                    });\n                  }\n\n                  if (user_isos[\"DesignLead\"]) {\n                    Object.keys(user_isos[\"DesignLead\"]).map(async function (user, index) {\n                      await designLead.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"hot-app\",\n                        style: {\n                          borderBottom: \"1px solid lightgray\",\n                          width: \"1750px\",\n                          paddingBottom: \"10px\",\n                          marginTop: \"10px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: \"flex\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"text\", {\n                            className: \"materials__title\",\n                            children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                              style: {\n                                fontSize: \"17px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1211,\n                              columnNumber: 275\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1211,\n                            columnNumber: 220\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1211,\n                          columnNumber: 190\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            marginTop: \"10px\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(HotTable, {\n                            data: [user_isos[\"DesignLead\"][user][\"claimed\"], user_isos[\"DesignLead\"][user][\"sent\"], user_isos[\"DesignLead\"][user][\"returned\"], user_isos[\"DesignLead\"][user][\"remaining\"]],\n                            colHeaders: weeks,\n                            rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                            width: \"1750\",\n                            height: \"145\",\n                            settings: usersSettings,\n                            manualColumnResize: true,\n                            manualRowResize: true,\n                            columns: col,\n                            filters: true,\n                            className: \"users-table\",\n                            readOnly: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1212,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1212,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1211,\n                        columnNumber: 71\n                      }, this));\n                    });\n                  }\n\n                  if (user_isos[\"Stress\"]) {\n                    Object.keys(user_isos[\"Stress\"]).map(async function (user, index) {\n                      await stress.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"hot-app\",\n                        style: {\n                          borderBottom: \"1px solid lightgray\",\n                          width: \"1750px\",\n                          paddingBottom: \"10px\",\n                          marginTop: \"10px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: \"flex\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"text\", {\n                            className: \"materials__title\",\n                            children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                              style: {\n                                fontSize: \"17px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1231,\n                              columnNumber: 271\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1231,\n                            columnNumber: 216\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1231,\n                          columnNumber: 186\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            marginTop: \"10px\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(HotTable, {\n                            data: [user_isos[\"Stress\"][user][\"claimed\"], user_isos[\"Stress\"][user][\"sent\"], user_isos[\"Stress\"][user][\"returned\"], user_isos[\"Stress\"][user][\"remaining\"]],\n                            colHeaders: weeks,\n                            rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                            width: \"1750\",\n                            height: \"145\",\n                            settings: usersSettings,\n                            manualColumnResize: true,\n                            manualRowResize: true,\n                            columns: col,\n                            filters: true,\n                            className: \"users-table\",\n                            readOnly: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1232,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1232,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1231,\n                        columnNumber: 67\n                      }, this));\n                    });\n                  }\n\n                  if (user_isos[\"StressLead\"]) {\n                    Object.keys(user_isos[\"StressLead\"]).map(async function (user, index) {\n                      await stressLead.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"hot-app\",\n                        style: {\n                          borderBottom: \"1px solid lightgray\",\n                          width: \"1750px\",\n                          paddingBottom: \"10px\",\n                          marginTop: \"10px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: \"flex\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"text\", {\n                            className: \"materials__title\",\n                            children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                              style: {\n                                fontSize: \"17px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1251,\n                              columnNumber: 275\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1251,\n                            columnNumber: 220\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1251,\n                          columnNumber: 190\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            marginTop: \"10px\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(HotTable, {\n                            data: [user_isos[\"StressLead\"][user][\"claimed\"], user_isos[\"StressLead\"][user][\"sent\"], user_isos[\"StressLead\"][user][\"returned\"], user_isos[\"StressLead\"][user][\"remaining\"]],\n                            colHeaders: weeks,\n                            rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                            width: \"1750\",\n                            height: \"145\",\n                            settings: usersSettings,\n                            manualColumnResize: true,\n                            manualRowResize: true,\n                            columns: col,\n                            filters: true,\n                            className: \"users-table\",\n                            readOnly: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1252,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1252,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1251,\n                        columnNumber: 71\n                      }, this));\n                    });\n                  }\n\n                  if (user_isos[\"Supports\"]) {\n                    Object.keys(user_isos[\"Supports\"]).map(async function (user, index) {\n                      await supports.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"hot-app\",\n                        style: {\n                          borderBottom: \"1px solid lightgray\",\n                          width: \"1750px\",\n                          paddingBottom: \"10px\",\n                          marginTop: \"10px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: \"flex\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"text\", {\n                            className: \"materials__title\",\n                            children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                              style: {\n                                fontSize: \"17px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1271,\n                              columnNumber: 273\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1271,\n                            columnNumber: 218\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1271,\n                          columnNumber: 188\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            marginTop: \"10px\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(HotTable, {\n                            data: [user_isos[\"Supports\"][user][\"claimed\"], user_isos[\"Supports\"][user][\"sent\"], user_isos[\"Supports\"][user][\"returned\"], user_isos[\"Supports\"][user][\"remaining\"]],\n                            colHeaders: weeks,\n                            rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                            width: \"1750\",\n                            height: \"145\",\n                            settings: usersSettings,\n                            manualColumnResize: true,\n                            manualRowResize: true,\n                            columns: col,\n                            filters: true,\n                            className: \"users-table\",\n                            readOnly: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1272,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1272,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1271,\n                        columnNumber: 69\n                      }, this));\n                    });\n                  }\n\n                  if (user_isos[\"SupportsLead\"]) {\n                    Object.keys(user_isos[\"SupportsLead\"]).map(async function (user, index) {\n                      await supportsLead.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"hot-app\",\n                        style: {\n                          borderBottom: \"1px solid lightgray\",\n                          width: \"1750px\",\n                          paddingBottom: \"10px\",\n                          marginTop: \"10px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: \"flex\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"text\", {\n                            className: \"materials__title\",\n                            children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                              style: {\n                                fontSize: \"17px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1291,\n                              columnNumber: 277\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1291,\n                            columnNumber: 222\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1291,\n                          columnNumber: 192\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            marginTop: \"10px\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(HotTable, {\n                            data: [user_isos[\"SupportsLead\"][user][\"claimed\"], user_isos[\"SupportsLead\"][user][\"sent\"], user_isos[\"SupportsLead\"][user][\"returned\"], user_isos[\"SupportsLead\"][user][\"remaining\"]],\n                            colHeaders: weeks,\n                            rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                            width: \"1750\",\n                            height: \"145\",\n                            settings: usersSettings,\n                            manualColumnResize: true,\n                            manualRowResize: true,\n                            columns: col,\n                            filters: true,\n                            className: \"users-table\",\n                            readOnly: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1292,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1292,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1291,\n                        columnNumber: 73\n                      }, this));\n                    });\n                  }\n\n                  if (user_isos[\"Materials\"]) {\n                    Object.keys(user_isos[\"Materials\"]).map(async function (user, index) {\n                      await materials.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"hot-app\",\n                        style: {\n                          borderBottom: \"1px solid lightgray\",\n                          width: \"1750px\",\n                          paddingBottom: \"10px\",\n                          marginTop: \"10px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: \"flex\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"text\", {\n                            className: \"materials__title\",\n                            children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                              style: {\n                                fontSize: \"17px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1311,\n                              columnNumber: 274\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1311,\n                            columnNumber: 219\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1311,\n                          columnNumber: 189\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            marginTop: \"10px\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(HotTable, {\n                            data: [user_isos[\"Materials\"][user][\"claimed\"], user_isos[\"Materials\"][user][\"sent\"], user_isos[\"Materials\"][user][\"returned\"], user_isos[\"Materials\"][user][\"remaining\"]],\n                            colHeaders: weeks,\n                            rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                            width: \"1750\",\n                            height: \"145\",\n                            settings: usersSettings,\n                            manualColumnResize: true,\n                            manualRowResize: true,\n                            columns: col,\n                            filters: true,\n                            className: \"users-table\",\n                            readOnly: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1312,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1312,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1311,\n                        columnNumber: 70\n                      }, this));\n                    });\n                  }\n\n                  if (user_isos[\"Issuer\"]) {\n                    Object.keys(user_isos[\"Issuer\"]).map(async function (user, index) {\n                      await issuer.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                        id: \"hot-app\",\n                        style: {\n                          borderBottom: \"1px solid lightgray\",\n                          width: \"1750px\",\n                          paddingBottom: \"10px\",\n                          marginTop: \"10px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: \"flex\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"text\", {\n                            className: \"materials__title\",\n                            children: [user.toUpperCase(), /*#__PURE__*/_jsxDEV(\"text\", {\n                              style: {\n                                fontSize: \"17px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1331,\n                              columnNumber: 271\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1331,\n                            columnNumber: 216\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1331,\n                          columnNumber: 186\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            marginTop: \"10px\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(HotTable, {\n                            data: [user_isos[\"Issuer\"][user][\"claimed\"], user_isos[\"Issuer\"][user][\"sent\"], user_isos[\"Issuer\"][user][\"returned\"], user_isos[\"Issuer\"][user][\"remaining\"]],\n                            colHeaders: weeks,\n                            rowHeaders: [\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"],\n                            width: \"1750\",\n                            height: \"145\",\n                            settings: usersSettings,\n                            manualColumnResize: true,\n                            manualRowResize: true,\n                            columns: col,\n                            filters: true,\n                            className: \"users-table\",\n                            readOnly: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1332,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1332,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1331,\n                        columnNumber: 67\n                      }, this));\n                    });\n                  }\n\n                  await setTables( /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(ProductionUserTabs, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        label: \"Design\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user__productivity__tables__container\",\n                          children: design\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1352,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1351,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        label: \"DesignLead\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user__productivity__tables__container\",\n                          children: designLead\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1357,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1356,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        label: \"Stress\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user__productivity__tables__container\",\n                          children: stress\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1362,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1361,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        label: \"StressLead\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user__productivity__tables__container\",\n                          children: stressLead\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1367,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1366,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        label: \"Supports\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user__productivity__tables__container\",\n                          children: supports\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1372,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1371,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        label: \"SupportsLead\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user__productivity__tables__container\",\n                          children: supportsLead\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1377,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1376,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        label: \"Materials\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user__productivity__tables__container\",\n                          children: materials\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1382,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1381,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        label: \"Issuer\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"user__productivity__tables__container\",\n                          children: issuer\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1387,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1386,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1350,\n                      columnNumber: 62\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1350,\n                    columnNumber: 57\n                  }, this));\n                });\n              });\n            }\n          }\n        });\n      }\n    });\n    await setLoading(false);\n  }, [updateData, tab, usersType]);\n\n  async function printDocument() {\n    const input = document.getElementById('graph');\n\n    if (tab === \"prod\") {\n      html2canvas(input, {\n        scrollY: -window.scrollY\n      }).then(canvas => {\n        const imgData = canvas.toDataURL('image/png');\n        const pdf = new jsPDF('l', 'mm', [340, 177]);\n        pdf.addImage(imgData, 'JPEG', 5, 5); // pdf.output('dataurlnewwindow');\n\n        pdf.save(\"Production.pdf\");\n      });\n    } else if (tab === \"weight\") {\n      html2canvas(input, {\n        scrollY: -window.scrollY\n      }).then(canvas => {\n        const imgData = canvas.toDataURL('image/png');\n        const pdf = new jsPDF('l', 'mm', [340, 177]);\n        pdf.addImage(imgData, 'JPEG', 5, 5); // pdf.output('dataurlnewwindow');\n\n        pdf.save(\"Weight.pdf\");\n      });\n    }\n  }\n\n  async function addRowMaterials() {\n    let m = materials;\n    m.push({\n      \"id\": \"\",\n      \"Material\": \"\"\n    });\n    await setMaterials(m);\n    await setUpdateRows(!updateRows);\n  }\n\n  async function addRowPiping() {\n    let p = piping;\n    p.push({\n      \"id\": \"\",\n      \"Material\": \"\"\n    });\n    await setPiping(p);\n    await setUpdateRows(!updateRows);\n  }\n\n  async function submitChangesMaterials() {\n    const body = {\n      materials: materials\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitMaterials\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setMaterialsAlert(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function submitChangesPiping() {\n    const body = {\n      piping: piping\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitPipingClass\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setPipingAlert(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function submitManagement() {\n    const body = {\n      span: management\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitProjectSpan\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setSpanAlert(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function submitEstimatedForecast(material_id) {\n    const body = {\n      material_id: material_id,\n      estimated: estimatedData[material_id],\n      forecast: forecastData[material_id]\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitEstimatedForecast\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setSuccess(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function submitWeight(estimatedOverall, forecastOverall) {\n    const body = {\n      estimated: estimatedOverall,\n      forecast: forecastOverall\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitEstimatedForecastWeight\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setSuccess(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function exportPiping() {\n    if (tab === \"prod\") {\n      let weeks = {\n        0: \"WEEK\"\n      };\n      let estAll = estimatedOverall;\n      let realAll = realOverall;\n      let estProgressAll = estimatedProgressOverall;\n      let realProgressAll = realProgressOverall;\n      Object.keys(estAll).map(function (key, index) {\n        weeks[key] = \"W\" + key;\n\n        if (!estAll[key]) {\n          estAll[key] = \" \";\n        }\n\n        if (!realAll[key]) {\n          realAll[key] = \" \";\n        }\n      });\n      estAll[0] = \"Estimated\";\n      realAll[0] = \"Real\";\n      estProgressAll[0] = \"Estimated Progress\";\n      realProgressAll[0] = \"Real Progress\";\n      weeks[0] = \"Week\";\n      let apiData = [{}, {\n        0: \"Piping production curves\"\n      }, {}, {}, {\n        0: \"OVERALL Isometrics\"\n      }, weeks, estAll, realAll, estProgressAll, realProgressAll];\n\n      for (let i = 0; i < materials.length; i++) {\n        apiData.push({});\n        apiData.push({});\n        apiData.push({\n          0: materials[i].Material\n        });\n        let est = estimatedData[materialsIDList[i]];\n        let real = realData[materialsIDList[i]];\n        let forecast = forecastData[materialsIDList[i]];\n        let sumEst = estimatedProgressData[materialsIDList[i]];\n        let sumReal = realProgressData[materialsIDList[i]];\n\n        if (!est) {\n          est = {};\n        }\n\n        if (!real) {\n          real = {};\n        }\n\n        if (!forecast) {\n          forecast = {};\n        }\n\n        Object.keys(est).map(function (key, index) {\n          if (!est[key]) {\n            est[key] = \" \";\n          }\n\n          if (!real[key]) {\n            real[key] = \" \";\n          }\n\n          if (!forecast[key]) {\n            forecast[key] = \" \";\n          }\n        });\n        est[0] = \"Estimated\";\n        real[0] = \"Real\";\n        forecast[0] = \"Forecast\";\n        sumEst[0] = \"Estimated progress\";\n        sumReal[0] = \"Real progress\";\n        apiData.push(weeks);\n        apiData.push(est);\n        apiData.push(real);\n        apiData.push(forecast);\n        apiData.push(sumEst);\n        apiData.push(sumReal);\n      }\n\n      const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n      let ws = XLSX.utils.json_to_sheet(apiData, {\n        skipHeader: 1\n      });\n      Object.keys(ws).map(function (i, index) {\n        if (typeof ws[i] != \"string\") {\n          if (index === 0) {\n            ws[i].s = {\n              font: {\n                name: \"arial\",\n                weight: \"bold\",\n                sz: 15,\n                color: {\n                  rgb: \"4169E1\"\n                }\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\",\n                wrapText: '3'\n              }\n            };\n          } else if (colors[materialsList.indexOf(ws[i].v) * 3]) {\n            let fill = colors[materialsList.indexOf(ws[i].v) * 3].replace('#', '');\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: fill\n                }\n              }\n            };\n          } else if (ws[i].v === \"OVERALL Isometrics\") {\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: \"9370DB\"\n                }\n              }\n            };\n          } else if (ws[i].v.toString().includes(\"W\")) {\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: \"C0C0C0\"\n                }\n              }\n            };\n          } else {\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: \"DCDCDC\"\n                }\n              }\n            };\n          }\n        }\n      });\n      var wscols = [{\n        wch: 30\n      } // \"characters\"\n      ];\n      ws['!cols'] = wscols;\n      const wb = {\n        Sheets: {\n          Production: ws\n        },\n        SheetNames: [\"Production\"]\n      };\n      const excelBuffer = XLSX.write(wb, {\n        bookType: \"xlsx\",\n        type: \"array\"\n      });\n      const data = new Blob([excelBuffer], {\n        type: fileType\n      });\n      FileSaver.saveAs(data, \"Production.xlsx\");\n    } else if (tab === \"weight\") {\n      let weeks = {\n        0: \"WEEK\"\n      };\n      let estAll = estimatedWeightData;\n      let forcAll = forecastWeightData;\n      let realAll = realWeightData;\n      let estProgressAll = estimatedProgressWeightData;\n      let realProgressAll = realProgressWeightData;\n      Object.keys(estAll).map(function (key, index) {\n        weeks[key] = \"W\" + key;\n\n        if (!estAll[key]) {\n          estAll[key] = \" \";\n        }\n\n        if (!realAll[key]) {\n          realAll[key] = \" \";\n        }\n\n        if (!forcAll[key]) {\n          forcAll[key] = \" \";\n        }\n      });\n      estAll[0] = \"Estimated\";\n      forcAll[0] = \"Forecast\";\n      realAll[0] = \"Real\";\n      estProgressAll[0] = \"Estimated Progress\";\n      realProgressAll[0] = \"Real Progress\";\n      weeks[0] = \"Week\";\n      let apiData = [{}, {\n        0: \"Piping weight curves\"\n      }, {}, {}, {\n        0: \"OVERALL Weight\"\n      }, weeks, estAll, realAll, forcAll, estProgressAll, realProgressAll];\n\n      for (let i = 0; i < materials.length; i++) {\n        if (realProgressWeightMatData[materialsIDList[i]]) {\n          apiData.push({});\n          apiData.push({});\n          apiData.push({\n            0: materials[i].Material\n          });\n          let real = realWeightMatData[materialsIDList[i]];\n          let sumReal = realProgressWeightMatData[materialsIDList[i]];\n\n          if (!real) {\n            real = {};\n          }\n\n          Object.keys(estAll).map(function (key, index) {\n            if (!real[key]) {\n              real[key] = \" \";\n            }\n          });\n          real[0] = \"Real\";\n          sumReal[0] = \"Real progress\";\n          apiData.push(weeks);\n          apiData.push(real);\n          apiData.push(sumReal);\n        }\n      }\n\n      const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n      let ws = XLSX.utils.json_to_sheet(apiData, {\n        skipHeader: 1\n      });\n      Object.keys(ws).map(function (i, index) {\n        if (typeof ws[i] != \"string\") {\n          if (index === 0) {\n            ws[i].s = {\n              font: {\n                name: \"arial\",\n                weight: \"bold\",\n                sz: 15,\n                color: {\n                  rgb: \"4169E1\"\n                }\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\",\n                wrapText: '3'\n              }\n            };\n          } else if (colors[materialsList.indexOf(ws[i].v) * 3]) {\n            let fill = colors[materialsList.indexOf(ws[i].v) * 3].replace('#', '');\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: fill\n                }\n              }\n            };\n          } else if (ws[i].v === \"OVERALL Weight\") {\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: \"9370DB\"\n                }\n              }\n            };\n          } else if (ws[i].v.toString().includes(\"W\")) {\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: \"C0C0C0\"\n                }\n              }\n            };\n          } else {\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: \"DCDCDC\"\n                }\n              }\n            };\n          }\n        }\n      });\n      var wscols = [{\n        wch: 30\n      } // \"characters\"\n      ];\n      ws['!cols'] = wscols;\n      const wb = {\n        Sheets: {\n          Production: ws\n        },\n        SheetNames: [\"Production\"]\n      };\n      const excelBuffer = XLSX.write(wb, {\n        bookType: \"xlsx\",\n        type: \"array\"\n      });\n      const data = new Blob([excelBuffer], {\n        type: fileType\n      });\n      FileSaver.saveAs(data, \"Weights.xlsx\");\n    } else if (tab === \"users\") {\n      let apiData = [];\n      let type = \"\";\n\n      if (usersType === \"iso\") {\n        apiData = [{}, {\n          0: \"User efficiency\"\n        }];\n        type = \"User efficiency\";\n      } else if (usersType === \"weight\") {\n        apiData = [{}, {\n          0: \"User efficiency\"\n        }];\n        type = \"User efficiency\";\n      }\n\n      Object.keys(usersData).map(function (user, index) {\n        apiData.push({});\n        apiData.push({});\n        apiData.push({\n          0: user\n        });\n        let assigned = {},\n            sent = {},\n            returned = {},\n            remaining = {},\n            weeks = {\n          0: \"WEEK\"\n        };\n        assigned[0] = \"Assigned\";\n        sent[0] = \"Sent\";\n        returned[0] = \"Returned\";\n        remaining[0] = \"Remaining\";\n        Object.keys(usersData[user][\"remaining\"]).map(function (key, index) {\n          weeks[key] = \"W\" + key;\n\n          if (usersData[user][\"assigned\"]) {\n            if (usersData[user][\"assigned\"][key]) {\n              assigned[key] = usersData[user][\"assigned\"][key];\n            } else {\n              assigned[key] = \"\";\n            }\n          } else {\n            assigned[key] = \"\";\n          }\n\n          if (usersData[user][\"sent\"]) {\n            if (usersData[user][\"sent\"][key]) {\n              sent[key] = usersData[user][\"sent\"][key];\n            } else {\n              sent[key] = \"\";\n            }\n          } else {\n            sent[key] = \"\";\n          }\n\n          if (usersData[user][\"returned\"]) {\n            if (usersData[user][\"returned\"][key]) {\n              returned[key] = usersData[user][\"returned\"][key];\n            } else {\n              returned[key] = \"\";\n            }\n          } else {\n            returned[key] = \"\";\n          }\n\n          if (usersData[user][\"remaining\"]) {\n            if (usersData[user][\"remaining\"][key]) {\n              remaining[key] = usersData[user][\"remaining\"][key];\n            } else {\n              remaining[key] = 0;\n            }\n          } else {\n            remaining[key] = \"\";\n          }\n        });\n        apiData.push(weeks);\n        apiData.push(assigned);\n        apiData.push(sent);\n        apiData.push(returned);\n        apiData.push(remaining);\n      });\n      const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n      let ws = XLSX.utils.json_to_sheet(apiData, {\n        skipHeader: 1\n      });\n      Object.keys(ws).map(function (i, index) {\n        if (typeof ws[i] != \"string\") {\n          if (index === 0) {\n            ws[i].s = {\n              font: {\n                name: \"arial\",\n                weight: \"bold\",\n                sz: 12,\n                color: {\n                  rgb: \"4169E1\"\n                }\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\",\n                wrapText: '3'\n              }\n            };\n          } else if (ws[i].v === type) {\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: \"9370DB\"\n                }\n              }\n            };\n          } else if (ws[i].v.toString().includes(\"W\")) {\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\",\n                horizontal: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: \"C0C0C0\"\n                }\n              }\n            };\n          } else {\n            ws[i].s = {\n              font: {\n                name: \"arial\"\n              },\n              alignment: {\n                vertical: \"center\"\n              },\n              border: {\n                right: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                left: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                bottom: {\n                  style: \"thin\",\n                  color: \"000000\"\n                },\n                top: {\n                  style: \"thin\",\n                  color: \"000000\"\n                }\n              },\n              fill: {\n                fgColor: {\n                  rgb: \"DCDCDC\"\n                }\n              }\n            };\n          }\n        }\n      });\n      var wscols = [{\n        wch: 30\n      } // \"characters\"\n      ];\n      ws['!cols'] = wscols;\n      const wb = {\n        Sheets: {\n          Production: ws\n        },\n        SheetNames: [\"Production\"]\n      };\n      const excelBuffer = XLSX.write(wb, {\n        bookType: \"xlsx\",\n        type: \"array\"\n      });\n      const data = new Blob([excelBuffer], {\n        type: fileType\n      });\n      let name = \"\";\n\n      if (usersType === \"iso\") {\n        name = \"Users efficiency.xlsx\";\n      } else if (usersType === \"weight\") {\n        name = \"Users efficiency.xlsx\";\n      }\n\n      FileSaver.saveAs(data, name);\n    }\n  }\n\n  const matSettings = {\n    licenseKey: 'non-commercial-and-evaluation',\n    colWidths: 430 //... other options\n\n  };\n  const pipingSettings = {\n    licenseKey: 'non-commercial-and-evaluation',\n    colWidths: 215 //... other options\n\n  };\n  const spanSettings = {\n    licenseKey: 'non-commercial-and-evaluation',\n    colWidths: 215 //... other options\n\n  };\n\n  if (tab === \"users\") {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      style: {\n        overflow: \"hidden\",\n        height: \"100vh\"\n      },\n      children: [updateData, updateRows, /*#__PURE__*/_jsxDEV(IdleTimer, {\n        timeout: 1000 * 60 * 15,\n        onIdle: handleOnIdle,\n        debounce: 250\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavBarProdCurve, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-success ${spanAlert ? 'alert-shown' : 'alert-hidden'}`,\n        onTransitionEnd: () => setSpanAlert(false),\n        children: /*#__PURE__*/_jsxDEV(AlertF, {\n          type: \"success\",\n          text: \"Project week span saved!\",\n          margin: \"0px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2229,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-success ${pipingAlert ? 'alert-shown' : 'alert-hidden'}`,\n        onTransitionEnd: () => setPipingAlert(false),\n        children: /*#__PURE__*/_jsxDEV(AlertF, {\n          type: \"success\",\n          text: \"Piping classes saved!\",\n          margin: \"0px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2232,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-success ${materialsAlert ? 'alert-shown' : 'alert-hidden'}`,\n        onTransitionEnd: () => setMaterialsAlert(false),\n        children: /*#__PURE__*/_jsxDEV(AlertF, {\n          type: \"success\",\n          text: \"Materials saved!\",\n          margin: \"0px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2235,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-success ${success ? 'alert-shown' : 'alert-hidden'}`,\n        onTransitionEnd: () => setSuccess(false),\n        children: /*#__PURE__*/_jsxDEV(AlertF, {\n          type: \"success\",\n          text: \"Changes saved!\",\n          margin: \"0px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2238,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: loading,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          style: {\n            fontSize: \"16px\",\n            position: \"fixed\",\n            left: \"50%\",\n            top: \"10%\",\n            transform: \"translate(-50%, -50%)\",\n            zIndex: \"0\"\n          },\n          severity: \"info\",\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2241,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pdf\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [tabBtns, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"users__tables__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: userEffTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2250,\n              columnNumber: 29\n            }, this), tables]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"30px\",\n              marginLeft: \"1630px\",\n              position: \"absolute\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back__button\",\n              onClick: () => history.push('/' + process.env.REACT_APP_PROJECT + '/piping'),\n              style: {\n                width: \"110px\",\n                marginTop: \"80px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: BackIcon,\n                alt: \"hold\",\n                className: \"navBar__icon\",\n                style: {\n                  marginRight: \"0px\",\n                  height: \"30px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2256,\n                columnNumber: 177\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"back__button__text\",\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2256,\n                columnNumber: 283\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back__button\",\n              onClick: () => exportPiping(),\n              style: {\n                width: \"110px\",\n                marginLeft: \"10px\",\n                marginTop: \"80px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Reports,\n                alt: \"report\",\n                className: \"navBar__icon\",\n                style: {\n                  marginRight: \"0px\",\n                  height: \"30px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2257,\n                columnNumber: 154\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"back__button__text\",\n                children: \"Export\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2257,\n                columnNumber: 261\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2257,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2255,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2247,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2219,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      style: {\n        overflow: \"hidden\",\n        height: \"100vh\"\n      },\n      children: [updateData, updateRows, /*#__PURE__*/_jsxDEV(IdleTimer, {\n        timeout: 1000 * 60 * 15,\n        onIdle: handleOnIdle,\n        debounce: 250\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavBarProdCurve, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-success ${spanAlert ? 'alert-shown' : 'alert-hidden'}`,\n        onTransitionEnd: () => setSpanAlert(false),\n        children: /*#__PURE__*/_jsxDEV(AlertF, {\n          type: \"success\",\n          text: \"Project week span saved!\",\n          margin: \"0px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2277,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-success ${pipingAlert ? 'alert-shown' : 'alert-hidden'}`,\n        onTransitionEnd: () => setPipingAlert(false),\n        children: /*#__PURE__*/_jsxDEV(AlertF, {\n          type: \"success\",\n          text: \"Piping classes saved!\",\n          margin: \"0px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2280,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-success ${materialsAlert ? 'alert-shown' : 'alert-hidden'}`,\n        onTransitionEnd: () => setMaterialsAlert(false),\n        children: /*#__PURE__*/_jsxDEV(AlertF, {\n          type: \"success\",\n          text: \"Materials saved!\",\n          margin: \"0px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2283,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-success ${success ? 'alert-shown' : 'alert-hidden'}`,\n        onTransitionEnd: () => setSuccess(false),\n        children: /*#__PURE__*/_jsxDEV(AlertF, {\n          type: \"success\",\n          text: \"Changes saved!\",\n          margin: \"0px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2286,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: loading,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          style: {\n            fontSize: \"16px\",\n            position: \"fixed\",\n            left: \"50%\",\n            top: \"10%\",\n            transform: \"translate(-50%, -50%)\",\n            zIndex: \"0\"\n          },\n          severity: \"info\",\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2289,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pdf\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top__container\",\n          children: [tabBtns, /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"graph\",\n            className: \"graph__container\",\n            children: lineChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2297,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"materials__pc__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: \"30px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back__button\",\n                onClick: () => history.push('/' + process.env.REACT_APP_PROJECT + '/piping'),\n                style: {\n                  width: \"110px\",\n                  marginTop: \"80px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: BackIcon,\n                  alt: \"hold\",\n                  className: \"navBar__icon\",\n                  style: {\n                    marginRight: \"0px\",\n                    height: \"30px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2304,\n                  columnNumber: 177\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"back__button__text\",\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2304,\n                  columnNumber: 283\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2304,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back__button\",\n                onClick: () => printDocument(),\n                style: {\n                  width: \"110px\",\n                  marginLeft: \"10px\",\n                  marginTop: \"80px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Graph,\n                  alt: \"report\",\n                  className: \"navBar__icon\",\n                  style: {\n                    marginRight: \"0px\",\n                    height: \"30px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2305,\n                  columnNumber: 155\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"back__button__text\",\n                  children: \"Graph\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2305,\n                  columnNumber: 260\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2305,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back__button\",\n                onClick: () => exportPiping(),\n                style: {\n                  width: \"110px\",\n                  marginLeft: \"10px\",\n                  marginTop: \"80px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Reports,\n                  alt: \"report\",\n                  className: \"navBar__icon\",\n                  style: {\n                    marginRight: \"0px\",\n                    height: \"30px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2306,\n                  columnNumber: 154\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"back__button__text\",\n                  children: \"Export\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2306,\n                  columnNumber: 261\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2306,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2303,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"materials__title\",\n                children: \"Project Management\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2309,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save__button\",\n                onClick: () => submitManagement(),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: SaveIcon,\n                  alt: \"save\",\n                  className: \"save__icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2310,\n                  columnNumber: 96\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2310,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2308,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: \"20px\",\n                marginTop: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(HotTable, {\n                data: management,\n                colHeaders: [\"<b>Starting date</b>\", \"<b>Finishing date</b>\"],\n                width: \"500\",\n                height: \"60\",\n                settings: spanSettings,\n                manualColumnResize: true,\n                manualRowResize: true,\n                columns: [{\n                  data: \"Starting date\",\n                  type: \"date\"\n                }, {\n                  data: \"Finishing date\",\n                  type: \"date\"\n                }],\n                className: \"project__management\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2313,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2312,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"hot-app\",\n              style: {\n                marginBottom: \"20px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(HotTable, {\n                data: materials,\n                colHeaders: [\"<b>Materials</b>\"],\n                width: \"450\",\n                height: \"130\",\n                settings: matSettings,\n                manualColumnResize: true,\n                manualRowResize: true,\n                columns: [{\n                  data: \"Material\"\n                }],\n                className: \"materials__management\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2326,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2325,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => addRowMaterials(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"12px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#338DF1\",\n                marginLeft: \"165px\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2338,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"projects__button__save\",\n              onClick: () => submitChangesMaterials(),\n              style: {\n                width: \"175px\",\n                marginLeft: \"-1620px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: SaveIcon2,\n                alt: \"hold\",\n                className: \"navBar__icon__save\",\n                style: {\n                  marginRight: \"-20px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2339,\n                columnNumber: 162\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"projects__button__text\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2339,\n                columnNumber: 261\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2339,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"hot-app\",\n              style: {\n                marginBottom: \"20px\",\n                marginTop: \"40px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(HotTable, {\n                data: piping,\n                colHeaders: [\"<b>Piping class</b>\", \"<b>Material</b>\"],\n                width: \"500\",\n                height: \"130\",\n                settings: pipingSettings,\n                manualColumnResize: true,\n                manualRowResize: true,\n                columns: [{\n                  data: \"PipingClass\"\n                }, {\n                  data: \"Material\",\n                  type: \"dropdown\",\n                  strict: \"true\",\n                  source: materialsList\n                }],\n                className: \"pipingclass__management\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2341,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2340,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => addRowPiping(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"12px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#338DF1\",\n                marginLeft: \"165px\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2353,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => submitChangesPiping(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"12px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#7BD36D\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2354,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2302,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2295,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"materials__tables__container\",\n          children: [overallTable, tables]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2358,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2267,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(PITRequests, \"M5RQIxcp6+ZKYkjbHhU8vHdQnME=\", false, function () {\n  return [useHistory];\n});\n\n_c = PITRequests;\nexport default PITRequests;\n\nvar _c;\n\n$RefreshReg$(_c, \"PITRequests\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/pipingProduction/pipingProduction.js"],"names":["React","useState","useEffect","HotTable","IdleTimer","useHistory","Reports","Graph","AlertF","Alert","Collapse","saveAs","FileSaver","XLSX","Line","Chart","NavBarProdCurve","ProductionUserTabs","html2canvas","jsPDF","PITRequests","history","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","tab","setTab","tabBtns","setTabBtns","usersType","setUsersType","usersData","setUsersData","userEffTitle","setUserEffTitle","fontSize","fontWeight","color","marginTop","marginLeft","updateData","setUpdateData","updateRows","setUpdateRows","tables","setTables","materials","setMaterials","materialsList","setMaterialsList","materialsIDList","setMaterialsIDList","piping","setPiping","management","setManagement","estimatedData","setEstimatedData","forecastData","setForecastData","realData","setRealData","estimatedProgressData","setEstimatedProgressData","realProgressData","setRealProgressData","estimatedMaterialData","setEstimatedMaterialData","overallTable","setOverallTable","estimatedWeightData","setEstimatedWeightData","forecastWeightData","setForecastWeightData","realWeightData","setRealWeightData","estimatedProgressWeightData","setEstimatedProgressWeightData","realProgressWeightData","setRealProgressWeightData","realWeightMatData","setRealWeightMatData","realProgressWeightMatData","setRealProgressWeightMatData","success","setSuccess","spanAlert","setSpanAlert","pipingAlert","setPipingAlert","materialsAlert","setMaterialsAlert","weeksYDiff","setWeeksYDiff","lineChart","setLineChart","loading","setLoading","estimatedOverall","setEstimatedOverall","realOverall","setRealOverall","estimatedProgressOverall","setEstimatedProgressOverall","realProgressOverall","setRealProgressOverall","colors","document","body","style","zoom","handleOnIdle","user","getItem","options","method","headers","JSON","stringify","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","clear","push","REACT_APP_PROJECT","table_class","weight_table_class","i","length","piping_id","material","span","starting_date","substring","finishing_date","est","estimated","id","mat","matList","matIDList","name","width","backgroundColor","issued","weekY","weekYdiff","forecast","material_id","settings","licenseKey","colWidths","rowHeaderWidth","weeks","graphData","sumEst","sumReal","sumForc","sumEstGraph","sumRealGraph","sumForcGraph","countEst","countReal","countForc","forc","col","sumEstCells","week","type","row","readOnly","estData","forcData","rData","sumEstData","sumRealData","totalEst","diff","warning","t_class","indexOf","borderBottom","paddingBottom","display","toUpperCase","submitEstimatedForecast","SaveIcon","Object","keys","map","index","color_index","label","fill","lineTension","borderColor","borderWidth","totalEstimated","esimatedOverallSum","estimatedOverallCount","estimatedOverallGraph","realOverallSum","realOverallCount","realOverallGraph","k","labels","overallCells","console","log","className","parseInt","borderTop","paddingTop","datasets","hover","mode","plugins","title","text","font","size","family","legend","position","filter","legendItem","chartData","datasetIndex","hidden","weightSettings","w","realProgressWeight","forecastOverall","forecastOverallSum","forecastOverallCount","forecastOverallGraph","submitWeight","usersSettings","trayCount","isoCount","design_isos","user_isos","design","designLead","stress","stressLead","supports","supportsLead","issuer","Design","DesignLead","Stress","StressLead","Supports","SupportsLead","Materials","Issuer","printDocument","input","getElementById","scrollY","window","canvas","imgData","toDataURL","pdf","addImage","save","addRowMaterials","m","addRowPiping","p","submitChangesMaterials","submitChangesPiping","submitManagement","exportPiping","estAll","realAll","estProgressAll","realProgressAll","apiData","Material","real","fileType","ws","utils","json_to_sheet","skipHeader","s","weight","sz","rgb","alignment","vertical","horizontal","wrapText","v","replace","border","right","left","bottom","top","fgColor","includes","wscols","wch","wb","Sheets","Production","SheetNames","excelBuffer","write","bookType","Blob","forcAll","assigned","sent","returned","remaining","matSettings","pipingSettings","spanSettings","overflow","height","transform","zIndex","marginBottom","BackIcon","marginRight","borderRadius","SaveIcon2","strict","source"],"mappings":"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","sourcesContent":["\r\nimport React, { useState , useEffect} from 'react'\r\nimport { HotTable } from '@handsontable/react';\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\nimport BackIcon from \"../../assets/images/back.svg\"\r\nimport Reports from \"../../assets/images/Notepad.png\"\r\nimport Graph from \"../../assets/images/ChartBar.png\"\r\nimport AlertF from \"../../components/alert/alert\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport { saveAs } from 'file-saver';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx-js-style\";\r\nimport SaveIcon2 from \"../../assets/images/SaveIcon2.svg\"\r\nimport './pipingProduction.css'\r\nimport SaveIcon from \"../../assets/images/save.svg\"\r\nimport { Line } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport NavBarProdCurve from '../../components/navBarProdCurve/navBarProdCurve';\r\nimport ProductionUserTabs from \"../../components/productionUserTabs/productionUserTabs\";\r\n\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst PITRequests = () =>{\r\n\r\n    const history = useHistory();\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const [tab, setTab] = useState(\"prod\")\r\n    const [tabBtns, setTabBtns] = useState(null)\r\n    const [usersType, setUsersType] = useState(\"iso\")\r\n    const [usersData, setUsersData] = useState(null)\r\n    const [userEffTitle, setUserEffTitle] = useState(<h4 style={{fontSize:\"22px\", fontWeight:\"bold\", color:\"gray\", marginTop:\"30px\", marginLeft:\"690px\"}}>USER ISOMETRICS EFFICIENCY</h4>)\r\n\r\n    const [updateData, setUpdateData] = useState(false)\r\n    const [updateRows, setUpdateRows] = useState(false)\r\n    const [tables, setTables] = useState([])\r\n    const [materials, setMaterials] = useState([])\r\n    const [materialsList, setMaterialsList] = useState([])\r\n    const [materialsIDList, setMaterialsIDList] = useState([])\r\n    const [piping, setPiping] = useState([])\r\n    const [management, setManagement] = useState([])\r\n\r\n    const [estimatedData, setEstimatedData] = useState({})\r\n    const [forecastData, setForecastData] = useState({})\r\n    const [realData, setRealData] = useState({})\r\n    const [estimatedProgressData, setEstimatedProgressData] = useState({})\r\n    const [realProgressData, setRealProgressData] = useState({})\r\n    const [estimatedMaterialData, setEstimatedMaterialData] = useState({})\r\n    const [overallTable, setOverallTable] = useState()\r\n\r\n    const[estimatedWeightData, setEstimatedWeightData] = useState({})\r\n    const[forecastWeightData, setForecastWeightData] = useState({})\r\n    const[realWeightData, setRealWeightData] = useState({})\r\n    const[estimatedProgressWeightData, setEstimatedProgressWeightData] = useState({})\r\n    const[realProgressWeightData, setRealProgressWeightData] = useState({})\r\n\r\n    const[realWeightMatData, setRealWeightMatData] = useState({})\r\n    const[realProgressWeightMatData, setRealProgressWeightMatData] = useState({})\r\n\r\n    const [success, setSuccess] = useState(false)\r\n    const [spanAlert, setSpanAlert] = useState(false)\r\n    const [pipingAlert, setPipingAlert] = useState(false)\r\n    const [materialsAlert, setMaterialsAlert] = useState(false)\r\n\r\n    const [weeksYDiff, setWeeksYDiff] = useState()\r\n\r\n    const [lineChart, setLineChart] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [estimatedOverall, setEstimatedOverall] = useState([])\r\n    const [realOverall, setRealOverall] = useState([])\r\n    const [estimatedProgressOverall, setEstimatedProgressOverall] = useState([])\r\n    const [realProgressOverall, setRealProgressOverall] = useState([])\r\n    const colors = [\"#4169E1\", \"#B0E0E6\", \"#00BFFF\", \"#008000\", \"#7CFC00\", \"#98FB98\", \"#FF8C00\", \"#FFD700\", \"#FF0000\", \"#FF1493\", \"#FF69B4\", \"#FFC0CB\", \"#708090\", \"#A9A9A9\", \"#DCDCDC\", \"#20B2AA\", \"#00CED1\", \"#AFEEEE\"]\r\n\r\n    document.body.style.zoom = 1\r\n\r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: secureStorage.getItem(\"user\"),\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n\r\n    useEffect(async() =>{        \r\n        const table_class = [\"mat1-table\", \"mat2-table\", \"mat3-table\", \"mat4-table\", \"mat5-table\", \"mat6-table\"]\r\n        const weight_table_class = [\"wmat1-table\", \"wmat2-table\", \"wmat3-table\", \"wmat4-table\", \"wmat5-table\", \"wmat6-table\"]\r\n        \r\n        await setLoading(true)\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getMaterialsPipingClass\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                const materials = json.materials                        \r\n                let piping = []\r\n                for(let i = 0; i < materials.length; i++){\r\n                    piping.push({\"id\": materials[i].piping_id, \"PipingClass\": materials[i].piping, \"Material\": materials[i].material})\r\n                }\r\n                \r\n                await setPiping(piping)\r\n        })\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getProjectSpan\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                const span = json.span\r\n                if(span.length > 0){\r\n                    await setManagement({\"Starting date\": span[0].starting_date.toString().substring(8,10) + \"/\" + span[0].starting_date.toString().substring(5,7) + \"/\" + span[0].starting_date.toString().substring(0,4), \"Finishing date\": span[0].finishing_date.toString().substring(8,10) + \"/\" + span[0].finishing_date.toString().substring(5,7) + \"/\" + span[0].finishing_date.toString().substring(0,4)})\r\n                }else{\r\n                    await setManagement({\"Starting date\": \"\", \"Finishing date\": \"\"})\r\n                }\r\n                \r\n            })\r\n\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getEstimatedByMaterial\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                let est = estimatedMaterialData\r\n                for(let i = 0; i < json.estimated.length; i++){\r\n                    est[json.estimated[i].id] = json.estimated[i].estimated\r\n                }\r\n                await setEstimatedMaterialData(est)\r\n            })\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getMaterials\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                const materials = json.materials\r\n                let mat = []\r\n                let matList = []\r\n                let matIDList = []\r\n                for(let i = 0; i < materials.length; i++){\r\n                    mat.push({\"id\": materials[i].id, \"Material\": materials[i].name})\r\n                    matList.push(materials[i].name)\r\n                    matIDList.push(materials[i].id)\r\n                }\r\n                await setMaterialsIDList(matIDList)\r\n                await setMaterials(mat)\r\n                await setMaterialsList(matList)\r\n\r\n                if(tab === \"prod\"){\r\n                    setTabBtns(<div style={{width: \"140px\"}}>\r\n                        <button className=\"reporting__tab__button\" style={{backgroundColor:\"#338DF1\"}}>P</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\"}} onClick={async() => await setTab(\"weight\")}>W</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\"}} onClick={async() => await setTab(\"users\")}>U</button>\r\n                    </div>)\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getIssuedByMatWeek\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json => {\r\n                        const issued = json.issued\r\n                        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getEstimatedMatWeek\", options)\r\n                            .then(response => response.json())\r\n                            .then(async json => {\r\n\r\n                                const estimated = json.estimated\r\n                                await setWeeksYDiff(estimated[0].weekY - 1)\r\n                                const weekYdiff = estimated[0].weekY - 1\r\n                                if(estimated.length > 0){\r\n                                fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getForecastMatWeek\", options)\r\n                                    .then(response => response.json())\r\n                                    .then(async json => {\r\n                                        const forecast = json.forecast\r\n                                        let tables = []\r\n                                        let material = estimated[0].material_id\r\n                                        const settings = {\r\n                                            licenseKey: 'non-commercial-and-evaluation',\r\n                                            colWidths: 40,\r\n                                            rowHeaderWidth: 190\r\n                                            //... other options\r\n                                        }\r\n\r\n                                        let weeks = []                                        \r\n                                        let graphData = []\r\n                                        let est = {}\r\n                                        let sumEst = {}\r\n                                        let sumReal = {}\r\n                                        let sumForc = {}\r\n                                        let sumEstGraph = []\r\n                                        let sumRealGraph = []\r\n                                        let sumForcGraph = []\r\n                                        let countEst = 0\r\n                                        let countReal = 0\r\n                                        let countForc = 0\r\n                                        let forc = {}\r\n                                        let col = []\r\n                                        let sumEstCells = []\r\n\r\n                                        for(let i = 0; i < estimated.length; i++){\r\n                                            if(estimated[i].material_id === material){\r\n                                                weeks.push(estimated[i].week.toString())\r\n                                                est[estimated[i].week.toString()] = estimated[i].estimated\r\n                                                forc[forecast[i].week.toString()] = forecast[i].estimated\r\n                                                countForc += forecast[i].estimated\r\n                                                countEst += estimated[i].estimated\r\n                                                sumEst[estimated[i].week.toString()] = countEst\r\n                                                if(issued[material]){\r\n                                                    if(issued[material][estimated[i].week]){\r\n                                                        countReal += issued[material][estimated[i].week]\r\n                                                    }\r\n                                                }\r\n                                                sumReal[estimated[i].week.toString()] = countReal\r\n                                                sumForc[estimated[i].week.toString()] = countForc\r\n                                                col.push({ data: estimated[i].week.toString(), type: \"numeric\"})\r\n                                                sumEstCells.push({row: 1, col: i, readOnly:true})\r\n                                                sumEstCells.push({row: 3, col: i, readOnly:true})\r\n                                                sumEstCells.push({row: 4, col: i, readOnly:true})\r\n                                            }else{\r\n                                                let estData = estimatedData\r\n                                                estData[material] = est\r\n                                                await setEstimatedData(estData)\r\n                                                let forcData = forecastData\r\n                                                forcData[material] = forc\r\n                                                await setForecastData(forcData)\r\n                                                let rData = realData\r\n                                                rData[material] = issued[material]\r\n                                                await setRealData(rData)\r\n                                                let sumEstData = estimatedProgressData\r\n                                                sumEstData[material] = sumEst\r\n                                                await setEstimatedProgressData(sumEstData)\r\n                                                let sumRealData = realProgressData\r\n                                                sumRealData[material] = sumReal\r\n                                                await setRealProgressData(sumRealData)\r\n                                                let totalEst = estimatedMaterialData[estimated[i-1].material_id]\r\n                                                if(!totalEst){\r\n                                                    totalEst = 0\r\n                                                }\r\n                                                let diff = countEst - totalEst\r\n                                                let warning = null\r\n                                                if(totalEst < countEst){\r\n                                                    warning = <text className=\"warning__text\">*Estimated exceeded by {diff}!</text>\r\n                                                }\r\n                                                if(!totalEst){\r\n                                                    totalEst = \"(0 estimated)\"\r\n                                                }else{\r\n                                                    totalEst = \"(\" + totalEst.toString() + \" estimated)\"\r\n                                                }\r\n\r\n                                                let t_class = table_class[matIDList.indexOf(material)]\r\n                                                await tables.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"30px\", marginTop:\"20px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{estimated[i-1].name.toUpperCase()} Isometrics <text style={{fontSize:\"17px\"}}>{totalEst}</text> {warning}</text><button className=\"save__button\" onClick={()=> submitEstimatedForecast(estimated[i-1].material_id)}><img src={SaveIcon} alt=\"save\" className=\"save__icon\"></img></button></div>\r\n                                                <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                data={[est, issued[material], forc, sumEst, sumReal]}\r\n                                                colHeaders={weeks}\r\n                                                rowHeaders={[\"Estimated\", \"Real\", \"Forecast\", \"Estimated progress\", \"Real progress\"]}\r\n                                                width=\"1750\"\r\n                                                height=\"160\"\r\n                                                settings={settings} \r\n                                                manualColumnResize={true}\r\n                                                manualRowResize={true}\r\n                                                columns= {col}\r\n                                                filters={true}\r\n                                                cell = {sumEstCells}\r\n                                                className={t_class}\r\n                                            /></div></div>)\r\n\r\n                                            Object.keys(sumEst).map(function(key, index) {\r\n                                                sumEstGraph.push(sumEst[key])\r\n                                            });\r\n\r\n                                            Object.keys(sumReal).map(function(key, index) {\r\n                                                sumRealGraph.push(sumReal[key])\r\n                                            });\r\n\r\n                                            Object.keys(sumForc).map(function(key, index) {\r\n                                                sumForcGraph.push(sumForc[key])\r\n                                            });\r\n\r\n                                            let color_index = ((matIDList.indexOf(material)) * 3)\r\n                                            \r\n                                            graphData.push({\r\n                                                label: 'Estimated ' + estimated[i-1].name,\r\n                                                fill: false,\r\n                                                lineTension: 0.2,\r\n                                                backgroundColor: colors[color_index],\r\n                                                borderColor: colors[color_index],\r\n                                                borderWidth: 1,\r\n                                                data: sumEstGraph\r\n                                            })\r\n\r\n                                            graphData.push({\r\n                                                label: 'Forecast ' + estimated[i-1].name,\r\n                                                fill: false,\r\n                                                lineTension: 0.2,\r\n                                                backgroundColor: colors[color_index + 2],\r\n                                                borderColor: colors[color_index + 2],\r\n                                                borderWidth: 1,\r\n                                                data: sumForcGraph\r\n                                            })\r\n\r\n                                            graphData.push({\r\n                                                label: 'Real ' + estimated[i-1].name,\r\n                                                fill: false,\r\n                                                lineTension: 0.2,\r\n                                                backgroundColor: colors[color_index + 1],\r\n                                                borderColor: colors[color_index + 1],\r\n                                                borderWidth: 1,\r\n                                                data: sumRealGraph\r\n                                            })\r\n                \r\n                                            weeks = [estimated[i].week.toString()]\r\n                                            est = {}\r\n                                            forc = {}\r\n                                            sumEst = {}\r\n                                            sumReal = {}\r\n                                            sumForc = {}\r\n                                            sumEstGraph = []\r\n                                            sumRealGraph = []\r\n                                            sumForcGraph = []\r\n                                            est[estimated[i].week.toString()] = estimated[i].estimated\r\n                                            forc[forecast[i].week.toString()] = forecast[i].estimated\r\n                                            if(issued[estimated[i].material_id]){\r\n                                                if(issued[estimated[i].material_id][\"1\"]){\r\n                                                    countReal = issued[estimated[i].material_id][estimated[i].week]\r\n                                                }else{\r\n                                                    countReal = 0\r\n                                                }\r\n                                            }else{\r\n                                                countReal = 0\r\n                                            }\r\n                                            sumReal[estimated[i].week.toString()] = countReal\r\n\r\n                                            if(estimated[i].estimated){\r\n                                                countEst = estimated[i].estimated\r\n                                            }else{\r\n                                                countEst = 0\r\n                                            }\r\n\r\n                                            if(forecast[i].estimated){\r\n                                                countForc = forecast[i].estimated\r\n                                            }else{\r\n                                                countForc = 0\r\n                                            }\r\n                                            sumForc[forecast[i].week.toString()] = countForc\r\n                                            sumEst[estimated[i].week.toString()] = countEst\r\n                                            \r\n                                            col = [{ data: estimated[i].week.toString(), type: \"numeric\"}]\r\n                                            material = estimated[i].material_id\r\n                                            }\r\n                                        }\r\n                                        let estData = estimatedData\r\n                                        estData[material] = est\r\n                                        await setEstimatedData(estData)\r\n                                        let forcData = forecastData\r\n                                        forcData[material] = forc\r\n                                        await setForecastData(forcData)\r\n                                        let rData = realData\r\n                                        rData[material] = issued[material]\r\n                                        await setRealData(rData)\r\n                                        let sumEstData = estimatedProgressData\r\n                                        sumEstData[material] = sumEst\r\n                                        await setEstimatedProgressData(sumEstData)\r\n                                        let sumRealData = realProgressData\r\n                                        sumRealData[material] = sumReal\r\n                                        await setRealProgressData(sumRealData)\r\n                                        let totalEst = estimatedMaterialData[material]\r\n                                        if(!totalEst){\r\n                                            totalEst = 0\r\n                                        }\r\n                                        let diff = countEst - totalEst\r\n                                        let warning = null\r\n                                        if(totalEst < countEst){\r\n                                            warning = <text className=\"warning__text\">*Estimated exceeded by {diff}!</text>\r\n                                        }\r\n                                        if(!totalEst){\r\n                                            totalEst = \"(0 estimated)\"\r\n                                        }else{\r\n                                            totalEst = \"(\" + totalEst.toString() + \" estimated)\"\r\n                                        }\r\n\r\n                                        let t_class = table_class[matIDList.indexOf(material)]\r\n\r\n                                        await tables.push(<div id=\"hot-app\" style={{width:\"1750px\", paddingBottom:\"30px\", marginTop:\"20px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{estimated[estimated.length-1].name.toUpperCase()} Isometrics <text style={{fontSize:\"17px\"}}>{totalEst}</text> {warning}</text><button className=\"save__button\" onClick={()=> submitEstimatedForecast(material)}><img src={SaveIcon} alt=\"save\" className=\"save__icon\"></img></button></div>\r\n                                        <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                data={[est, issued[material], forc, sumEst, sumReal]}\r\n                                                colHeaders={weeks}\r\n                                                rowHeaders={[\"Estimated\", \"Real\", \"Forecast\", \"Estimated progress\", \"Real progress\"]}\r\n                                                width=\"1750\"\r\n                                                height=\"160\"\r\n                                                settings={settings} \r\n                                                manualColumnResize={true}\r\n                                                manualRowResize={true}\r\n                                                columns= {col}\r\n                                                filters={true}\r\n                                                cell = {sumEstCells}\r\n                                                className={t_class}\r\n                                            /></div></div>)\r\n\r\n                                        await setTables([])\r\n                                        await setTables(tables)\r\n\r\n                                        Object.keys(sumEst).map(function(key, index) {\r\n                                            sumEstGraph.push(sumEst[key])\r\n                                        });\r\n\r\n                                        Object.keys(sumReal).map(function(key, index) {\r\n                                            sumRealGraph.push(sumReal[key])\r\n                                        });\r\n                                        Object.keys(sumForc).map(function(key, index) {\r\n                                            sumForcGraph.push(sumForc[key])\r\n                                        });\r\n\r\n                                        let color_index = (matIDList.indexOf(material)) * 3\r\n                                        \r\n                                        graphData.push({\r\n                                            label: 'Estimated ' + estimated[estimated.length-1].name,\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: colors[color_index],\r\n                                            borderColor: colors[color_index],\r\n                                            borderWidth: 1,\r\n                                            data: sumEstGraph\r\n                                        })\r\n\r\n                                        graphData.push({\r\n                                            label: 'Forecast ' + estimated[estimated.length-1].name,\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: colors[color_index + 2],\r\n                                            borderColor: colors[color_index + 2],\r\n                                            borderWidth: 1,\r\n                                            data: sumForcGraph\r\n                                        })\r\n\r\n                                        graphData.push({\r\n                                            label: 'Real ' + estimated[estimated.length-1].name,\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: colors[color_index + 1],\r\n                                            borderColor: colors[color_index + 1],\r\n                                            borderWidth: 1,\r\n                                            data: sumRealGraph\r\n                                        })\r\n\r\n                                    \r\n                                        let overallTable = []\r\n                                        let totalEstimated = 0\r\n\r\n                                        let estimatedOverall = {}\r\n                                        let esimatedOverallSum = {}\r\n                                        let estimatedOverallCount = 0\r\n                                        let estimatedOverallGraph = []\r\n\r\n                                        let realOverall = {}\r\n                                        let realOverallSum = {}\r\n                                        let realOverallCount = 0\r\n                                        let realOverallGraph = []\r\n\r\n                                        Object.keys(estimatedMaterialData).map(function(key, index) {\r\n                                            totalEstimated += estimatedMaterialData[key]\r\n                                        });\r\n\r\n                                        Object.keys(issued).map(function(key, index) {\r\n                                            Object.keys(issued[key]).map(function(k, index) {\r\n                                                if(realOverall[k]){\r\n                                                    realOverall[k] += issued[key][k]\r\n                                                }else{\r\n                                                    realOverall[k] = issued[key][k]\r\n                                                }\r\n                                            })\r\n                                        });\r\n\r\n                                        Object.keys(estimated).map(function(key, index) {\r\n                                            if(estimatedOverall[estimated[key].week]){\r\n                                                estimatedOverall[estimated[key].week] += estimated[key].estimated\r\n                                            }else{\r\n                                                estimatedOverall[estimated[key].week] = estimated[key].estimated\r\n                                            }\r\n                                        });\r\n\r\n                                        let labels = []\r\n                                        let overallCells = []\r\n                                        console.log(estimatedOverall)\r\n                                        await Object.keys(estimatedOverall).map(function(key, index) {\r\n                                            if(realOverall[key]){\r\n                                                realOverallCount += realOverall[key]\r\n                                            }\r\n                                            realOverallSum[key] = realOverallCount\r\n                                            estimatedOverallCount += estimatedOverall[key]\r\n                                            esimatedOverallSum[key] = estimatedOverallCount\r\n                                            estimatedOverallGraph.push(estimatedOverallCount)\r\n                                            realOverallGraph.push(realOverallCount)\r\n\r\n                                            overallCells.push({row: 2, col: index, className: \"overallCell__estSum\"})\r\n                                            overallCells.push({row: 3, col: index, className: \"overallCell__realSum\"})\r\n\r\n                                            labels.push(\"w\" + key.toString() + \" / w\" + (parseInt(key) + weekYdiff))\r\n                                        });\r\n\r\n                                        graphData.push({\r\n                                            label: 'Estimated Overall',\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: 'rgb(147,112,219)',\r\n                                            borderColor: 'rgb(147,112,219)',\r\n                                            borderWidth: 1,\r\n                                            data: estimatedOverallGraph\r\n                                        })\r\n\r\n                                        graphData.push({\r\n                                            label: 'Real Overall',\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: 'rgb(255,80,80)',\r\n                                            borderColor: 'rgb(255,80,80)',\r\n                                            borderWidth: 1,\r\n                                            data: realOverallGraph\r\n                                        })\r\n\r\n                                        warning = null\r\n                                        if(totalEstimated < estimatedOverallCount){\r\n                                            warning = <text className=\"warning__text\">*Estimated exceeded by {estimatedOverallCount-totalEstimated}!</text>\r\n                                        }\r\n                                        await overallTable.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", borderTop:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"30px\", paddingTop:\"30px\", marginTop:\"20px\"}}><text className=\"materials__title\">OVERALL Isometrics <text style={{fontSize:\"17px\"}}>({totalEstimated} estimated)</text> {warning}</text>\r\n                                        <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                data={[estimatedOverall, realOverall, esimatedOverallSum, realOverallSum]}\r\n                                                colHeaders={weeks}\r\n                                                rowHeaders={[\"Estimated\", \"Real\", \"Estimated progress\", \"Real progress\"]}\r\n                                                width=\"1750\"\r\n                                                height=\"138\"\r\n                                                settings={settings} \r\n                                                manualColumnResize={true}\r\n                                                manualRowResize={true}\r\n                                                columns= {col}\r\n                                                filters={true}\r\n                                                readOnly= {true}\r\n                                                className='overall-table'\r\n                                                \r\n                                            /></div></div>)\r\n\r\n                                        await setEstimatedOverall(estimatedOverall)\r\n                                        await setRealOverall(realOverall)\r\n                                        await setEstimatedProgressOverall(esimatedOverallSum)\r\n                                        await setRealProgressOverall(realOverallSum)\r\n                                        await setOverallTable()\r\n                                        await setOverallTable(overallTable)\r\n                                        await setLineChart(<Line\r\n                                            data={{\r\n                                                labels: labels,\r\n                                                datasets: graphData\r\n                                            }}\r\n                                            options={{\r\n                                                hover: {\r\n                                                    mode: 'new mode'\r\n                                                },\r\n                                                plugins: {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        text: \"PRODUCTION CURVES\",\r\n                                                        font: {size: \"22px\", family:\"Quicksand\"}\r\n                                                    },\r\n                                                    legend: {\r\n                                                        display: true,\r\n                                                        position: \"left\",\r\n                                                        labels: {\r\n                                                            filter: function (legendItem, chartData) {\r\n                                                                    chartData.datasets[legendItem.datasetIndex].hidden = true\r\n                                                                return true\r\n                                                            },\r\n                                                        },\r\n                                                    },\r\n                                                    \r\n                                                },\r\n                                                \r\n                                                \r\n                                            }}\r\n                                        />)\r\n\r\n                                    })\r\n                                }\r\n                            })\r\n                    })  \r\n                }else if(tab === \"weight\"){\r\n                    setTabBtns(<div style={{width: \"140px\"}}>\r\n                        <button className=\"reporting__tab__button\" onClick={() => setTab(\"prod\")}>P</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\",backgroundColor:\"#338DF1\"}}>W</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\"}} onClick={async() => await setTab(\"users\")}>U</button>\r\n                    </div>)\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getIssuedWeightByMatWeek\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json => {\r\n                        const issued = json.issued\r\n                        await setRealWeightMatData(issued)\r\n                        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getEstimatedForecastWeight\", options)\r\n                            .then(response => response.json())\r\n                            .then(async json => {\r\n\r\n                                const estimated = json.estimated\r\n                                if(estimated.length > 0){  \r\n                                        let tables = []\r\n                                        const weightSettings = {\r\n                                            licenseKey: 'non-commercial-and-evaluation',\r\n                                            colWidths: 55,\r\n                                            rowHeaderWidth: 190\r\n                                            //... other options\r\n                                        }\r\n\r\n                                        let weeks = []\r\n                                        let graphData = []\r\n                                        let est = {}\r\n                                        let forc = {}\r\n                                        let sumEst = {}\r\n                                        \r\n                                        let sumForc = {}\r\n                                        let countEst = 0\r\n                                        let countForc = 0\r\n                                        let col = []\r\n                                        let sumEstCells = []\r\n\r\n                                        let realOverallCount = 0\r\n                                        let realOverallSum = {}\r\n                                        let realOverallGraph = []\r\n                                        let realOverall = {}\r\n\r\n                                        for(let i = 0; i < estimated.length; i++){\r\n                                            weeks.push(estimated[i].week.toString())\r\n                                            est[estimated[i].week] = estimated[i].estimated\r\n                                            forc[estimated[i].week] = estimated[i].forecast\r\n                                            countEst += estimated[i].estimated\r\n                                            countForc += estimated[i].forecast\r\n                                            sumEst[estimated[i].week] = countEst\r\n                                            sumForc[estimated[i].week] = countForc\r\n\r\n                                            col.push({ data: estimated[i].week.toString(), type: \"numeric\"})\r\n                                        }\r\n                                        Object.keys(issued).map(async function(key, index) {\r\n                                            let countReal = 0\r\n                                            let sumReal = {}\r\n                                            let sumRealGraph = []\r\n                                            Object.keys(est).map(async function(w, index) {\r\n                                                if(issued[key][w]){\r\n                                                    countReal += issued[key][w]\r\n                                                    sumReal[w] = countReal\r\n                                                }else{\r\n                                                    sumReal[w] = countReal\r\n                                                }\r\n                                                if(realOverall[w]){\r\n                                                    realOverall[w] += issued[key][w]\r\n                                                }else{\r\n                                                    realOverall[w] = issued[key][w]\r\n                                                }\r\n                                                \r\n                                            })\r\n\r\n                                            let t_class = weight_table_class[matIDList.indexOf(parseInt(key))]\r\n                                            await tables.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"30px\", marginTop:\"20px\"}}><text className=\"materials__title\">{materialsList[matIDList.indexOf(parseInt(key))].toUpperCase()} Weight (kg)</text>\r\n                                                <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                data={[issued[key], sumReal]}\r\n                                                colHeaders={weeks}\r\n                                                rowHeaders={[\"Real\", \"Real progress\"]}\r\n                                                width=\"1750\"\r\n                                                height=\"95\"\r\n                                                settings={weightSettings} \r\n                                                manualColumnResize={true}\r\n                                                manualRowResize={true}\r\n                                                columns= {col}\r\n                                                filters={true}\r\n                                                readOnly= {true}\r\n                                                cell = {sumEstCells}\r\n                                                className={t_class}\r\n                                            /></div></div>)\r\n                                                \r\n                                            Object.keys(sumReal).map(function(key, index) {\r\n                                                sumRealGraph.push(sumReal[key])\r\n                                            });\r\n\r\n                                            let color_index = ((matIDList.indexOf(parseInt(key))) * 3)\r\n\r\n                                            graphData.push({\r\n                                                label: 'Real ' + materialsList[matIDList.indexOf(parseInt(key))],\r\n                                                fill: false,\r\n                                                lineTension: 0.2,\r\n                                                backgroundColor: colors[color_index + 1],\r\n                                                borderColor: colors[color_index + 1],\r\n                                                borderWidth: 1,\r\n                                                data: sumRealGraph\r\n                                            })\r\n\r\n                                            let realProgressWeight = realProgressWeightMatData\r\n                                            realProgressWeight[key] = sumReal\r\n                                            await setRealProgressWeightMatData(realProgressWeight)\r\n                                        })\r\n                                        \r\n                                        await setTables([])\r\n                                        await setTables(tables)\r\n                                      \r\n                                        let overallTable = []\r\n                                        let totalEstimated = 0\r\n\r\n                                        let estimatedOverall = {}\r\n                                        let esimatedOverallSum = {}\r\n                                        let estimatedOverallCount = 0\r\n                                        let estimatedOverallGraph = []\r\n\r\n                                        let forecastOverall = {}\r\n                                        let forecastOverallSum = {}\r\n                                        let forecastOverallCount = 0\r\n                                        let forecastOverallGraph = []\r\n\r\n                                        for(let i = 0; i < estimated.length; i++){\r\n                                            totalEstimated += estimated[i][\"estimated\"]\r\n                                        };\r\n                                        \r\n                                        Object.keys(est).map(function(key, index) {\r\n                                            if(estimatedOverall[key]){\r\n                                                estimatedOverall[key] += est[key]\r\n                                            }else{\r\n                                                estimatedOverall[key] = est[key]\r\n                                            }\r\n                                        });\r\n\r\n                                        Object.keys(forc).map(function(key, index) {\r\n                                            if(forecastOverall[key]){\r\n                                                forecastOverall[key] += forc[key]\r\n                                            }else{\r\n                                                forecastOverall[key] = forc[key]\r\n                                            }\r\n                                        });\r\n\r\n                                        await setEstimatedWeightData(estimatedOverall)\r\n                                        await setForecastWeightData(forecastOverall)\r\n\r\n                                        let labels = []\r\n                                        let overallCells = []\r\n                                        await Object.keys(estimatedOverall).map(function(key, index) {\r\n                                            if(realOverall[key]){\r\n                                                realOverallCount += realOverall[key]\r\n                                            }\r\n                                            realOverallSum[key] = realOverallCount\r\n                                            estimatedOverallCount += estimatedOverall[key]\r\n                                            esimatedOverallSum[key] = estimatedOverallCount\r\n                                            estimatedOverallGraph.push(estimatedOverallCount)\r\n                                            realOverallGraph.push(realOverallCount)\r\n\r\n                                            forecastOverallCount += forecastOverall[key]\r\n                                            forecastOverallSum[key] = forecastOverallCount\r\n                                            forecastOverallGraph.push(forecastOverallCount)\r\n\r\n                                            overallCells.push({row: 1, col: index, readOnly: true})\r\n                                            overallCells.push({row: 3, col: index, className: \"overallCell__estSum\", readOnly: true})\r\n                                            overallCells.push({row: 4, col: index, className: \"overallCell__realSum\", readOnly: true})\r\n\r\n\r\n                                            labels.push(\"w\" + key.toString() + \" / w\" + (parseInt(key) + weeksYDiff))\r\n                                        });\r\n\r\n                                        \r\n                                        graphData.push({\r\n                                            label: 'Estimated Overall',\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: 'rgb(147,112,219)',\r\n                                            borderColor: 'rgb(147,112,219)',\r\n                                            borderWidth: 1,\r\n                                            data: estimatedOverallGraph\r\n                                        })\r\n\r\n                                        graphData.push({\r\n                                            label: 'Forecast Overall',\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: 'rgb(60,179,113)',\r\n                                            borderColor: 'rgb(60,179,113)',\r\n                                            borderWidth: 1,\r\n                                            data: forecastOverallGraph\r\n                                        })\r\n\r\n                                        graphData.push({\r\n                                            label: 'Real Overall',\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: 'rgb(255,80,80)',\r\n                                            borderColor: 'rgb(255,80,80)',\r\n                                            borderWidth: 1,\r\n                                            data: realOverallGraph\r\n                                        })\r\n\r\n                                        await overallTable.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", borderTop:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"30px\", paddingTop:\"30px\", marginTop:\"20px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">OVERALL Weight (kg) <text style={{fontSize:\"17px\"}}></text></text><button className=\"save__button\" onClick={()=> submitWeight(estimatedOverall, forecastOverall)}><img src={SaveIcon} alt=\"save\" className=\"save__icon\"></img></button></div>\r\n                                        <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                data={[estimatedOverall, realOverall, forecastOverall, esimatedOverallSum, realOverallSum]}\r\n                                                colHeaders={weeks}\r\n                                                rowHeaders={[\"Estimated\", \"Real\", \"Forecast\", \"Estimated progress\", \"Real progress\"]}\r\n                                                width=\"1750\"\r\n                                                height=\"165\"\r\n                                                settings={weightSettings} \r\n                                                manualColumnResize={true}\r\n                                                manualRowResize={true}\r\n                                                columns= {col}\r\n                                                filters={true}\r\n                                                className='overallWeight-table'\r\n                                                cell={overallCells}\r\n                                                \r\n                                            /></div></div>)\r\n                                            \r\n                                        await setEstimatedWeightData(estimatedOverall)\r\n                                        await setRealWeightData(realOverall)\r\n                                        await setForecastWeightData(forecastOverall)\r\n                                        await setEstimatedProgressWeightData(esimatedOverallSum)\r\n                                        await setRealProgressWeightData(realOverallSum)\r\n                                        await setOverallTable()\r\n                                        await setOverallTable(overallTable)\r\n                                        await setLineChart(<Line\r\n                                            data={{\r\n                                                labels: labels,\r\n                                                datasets: graphData\r\n                                            }}\r\n                                            options={{\r\n                                                hover: {\r\n                                                    mode: 'new mode'\r\n                                                },\r\n                                                plugins: {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        text: \"WEIGHT CURVES\",\r\n                                                        font: {size: \"22px\", family:\"Quicksand\"},\r\n                                                    \r\n                                                    },\r\n                                                    legend: {\r\n                                                        display: true,\r\n                                                        position: \"left\",\r\n                                                        labels: {\r\n                                                            filter: function (legendItem, chartData) {\r\n                                                                    chartData.datasets[legendItem.datasetIndex].hidden = true\r\n                                                                return true\r\n                                                            },\r\n                                                        },\r\n                                                    },\r\n                                                    \r\n                                                },\r\n                                                \r\n                                                \r\n                                            }}\r\n                                        />)\r\n\r\n                                    \r\n                                }\r\n                            })\r\n                    })  \r\n                }else if(tab === \"users\"){\r\n                    if(usersType === \"iso\"){\r\n                        await setUserEffTitle(<h4 style={{fontSize:\"22px\", fontWeight:\"bold\", color:\"gray\", marginTop:\"30px\", marginLeft:\"690px\"}}>USER ISOMETRICS EFFICIENCY</h4>)\r\n                        await setTabBtns(<div style={{width: \"90px\"}}>\r\n                        <button className=\"reporting__tab__button\" onClick={() => setTab(\"prod\")}>P</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\"}} onClick={async() => await setTab(\"weight\")}>W</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\", backgroundColor:\"#338DF1\"}}>U</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\", backgroundColor:\"#338DF1\"}}>I</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\"}} onClick={async() => await setUsersType(\"weight\")}>W</button>\r\n                        </div>)\r\n                    }else if(usersType === \"weight\"){\r\n                        await setUserEffTitle(<h4 style={{fontSize:\"22px\", fontWeight:\"bold\", color:\"gray\", marginTop:\"30px\", marginLeft:\"700px\"}}>USER WEIGHT EFFICIENCY</h4>)\r\n                        await setTabBtns(<div style={{width: \"90px\"}}>\r\n                        <button className=\"reporting__tab__button\" onClick={() => setTab(\"prod\")}>P</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\"}} onClick={async() => await setTab(\"weight\")}>W</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\", backgroundColor:\"#338DF1\"}}>U</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\"}} onClick={async() => await setUsersType(\"iso\")}>I</button>\r\n                        <button className=\"reporting__tab__button\" style={{marginTop:\"10px\", backgroundColor:\"#338DF1\"}}>W</button>\r\n                        </div>)\r\n                    }\r\n                   \r\n\r\n                    await setTables([])\r\n                    await setLineChart(null)\r\n                    await setOverallTable([])\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getEstimatedForecastWeight\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json => {\r\n                        const estimated = json.estimated\r\n                        const usersSettings = {\r\n                            licenseKey: 'non-commercial-and-evaluation',\r\n                            colWidths: 40,\r\n                            rowHeaderWidth: 190\r\n                            //... other options\r\n                        }\r\n                        let weeks = []\r\n                        let col = []\r\n                        if(estimated.length > 0){\r\n                            for(let i = 0; i < estimated.length; i++){\r\n                                weeks.push(estimated[i].week.toString())\r\n                                col.push({ data: estimated[i].week.toString(), type: \"numeric\"})\r\n                            }\r\n                            if(usersType === \"iso\"){\r\n                                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/trayCount\", options)\r\n                                .then(response => response.json())\r\n                                .then(async json => {\r\n                                    const trayCount = json.isoCount\r\n\r\n                                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getIsosByUserWeekDesign\", options)\r\n                                    .then(response => response.json())\r\n                                    .then(async json => {\r\n                                        const design_isos = json.design_isos\r\n                                        await setUsersData(design_isos)\r\n                                        console.log(design_isos)\r\n                                        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getIsosByUserWeek\", options)\r\n                                        .then(response => response.json())\r\n                                        .then(async json => {\r\n                                            const user_isos = json.user_isos\r\n                                            let design = []\r\n                                            let designLead = []\r\n                                            let stress = []\r\n                                            let stressLead = []\r\n                                            let supports = []\r\n                                            let supportsLead = []\r\n                                            let materials = []\r\n                                            let issuer = []\r\n\r\n                                            if(design_isos){\r\n                                                console.log(design_isos)\r\n                                                Object.keys(design_isos).map(async function(user, index) {\r\n                                                    await design.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                    <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                            data={[design_isos[user][\"assigned\"], design_isos[user][\"sent\"], design_isos[user][\"returned\"], design_isos[user][\"remaining\"]]}\r\n                                                            colHeaders={weeks}\r\n                                                            rowHeaders={[\"Assigned\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                            width=\"1750\"\r\n                                                            height=\"145\"\r\n                                                            settings={usersSettings} \r\n                                                            manualColumnResize={true}\r\n                                                            manualRowResize={true}\r\n                                                            columns= {col}\r\n                                                            filters={true}\r\n                                                            className='users-table'\r\n                                                            readOnly={true}\r\n                                                            \r\n                                                    /></div></div>)\r\n                                                });\r\n                                            }\r\n                                            if(user_isos[\"DesignLead\"]){\r\n                                                Object.keys(user_isos[\"DesignLead\"]).map(async function(user, index) {\r\n                                                    await designLead.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                    <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                            data={[user_isos[\"DesignLead\"][user][\"claimed\"], user_isos[\"DesignLead\"][user][\"sent\"], user_isos[\"DesignLead\"][user][\"returned\"], user_isos[\"DesignLead\"][user][\"remaining\"]]}\r\n                                                            colHeaders={weeks}\r\n                                                            rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                            width=\"1750\"\r\n                                                            height=\"145\"\r\n                                                            settings={usersSettings} \r\n                                                            manualColumnResize={true}\r\n                                                            manualRowResize={true}\r\n                                                            columns= {col}\r\n                                                            filters={true}\r\n                                                            className='users-table'\r\n                                                            readOnly={true}\r\n                                                            \r\n                                                    /></div></div>)\r\n                                                });\r\n                                            }\r\n                                            if(user_isos[\"Stress\"]){\r\n                                                Object.keys(user_isos[\"Stress\"]).map(async function(user, index) {\r\n                                                    await stress.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                    <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                            data={[user_isos[\"Stress\"][user][\"claimed\"], user_isos[\"Stress\"][user][\"sent\"], user_isos[\"Stress\"][user][\"returned\"], user_isos[\"Stress\"][user][\"remaining\"]]}\r\n                                                            colHeaders={weeks}\r\n                                                            rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                            width=\"1750\"\r\n                                                            height=\"145\"\r\n                                                            settings={usersSettings} \r\n                                                            manualColumnResize={true}\r\n                                                            manualRowResize={true}\r\n                                                            columns= {col}\r\n                                                            filters={true}\r\n                                                            className='users-table'\r\n                                                            readOnly={true}\r\n                                                            \r\n                                                    /></div></div>)\r\n                                                });\r\n                                            }\r\n                                            if(user_isos[\"StressLead\"]){\r\n                                                Object.keys(user_isos[\"StressLead\"]).map(async function(user, index) {\r\n                                                    await stressLead.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                    <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                            data={[user_isos[\"StressLead\"][user][\"claimed\"], user_isos[\"StressLead\"][user][\"sent\"], user_isos[\"StressLead\"][user][\"returned\"], user_isos[\"StressLead\"][user][\"remaining\"]]}\r\n                                                            colHeaders={weeks}\r\n                                                            rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                            width=\"1750\"\r\n                                                            height=\"145\"\r\n                                                            settings={usersSettings} \r\n                                                            manualColumnResize={true}\r\n                                                            manualRowResize={true}\r\n                                                            columns= {col}\r\n                                                            filters={true}\r\n                                                            className='users-table'\r\n                                                            readOnly={true}\r\n                                                            \r\n                                                    /></div></div>)\r\n                                                });\r\n                                            }\r\n                                            if(user_isos[\"Supports\"]){\r\n                                                Object.keys(user_isos[\"Supports\"]).map(async function(user, index) {\r\n                                                    await supports.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                    <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                            data={[user_isos[\"Supports\"][user][\"claimed\"], user_isos[\"Supports\"][user][\"sent\"], user_isos[\"Supports\"][user][\"returned\"], user_isos[\"Supports\"][user][\"remaining\"]]}\r\n                                                            colHeaders={weeks}\r\n                                                            rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                            width=\"1750\"\r\n                                                            height=\"145\"\r\n                                                            settings={usersSettings} \r\n                                                            manualColumnResize={true}\r\n                                                            manualRowResize={true}\r\n                                                            columns= {col}\r\n                                                            filters={true}\r\n                                                            className='users-table'\r\n                                                            readOnly={true}\r\n                                                            \r\n                                                    /></div></div>)\r\n                                                });\r\n                                            }\r\n                                            if(user_isos[\"SupportsLead\"]){\r\n                                                Object.keys(user_isos[\"SupportsLead\"]).map(async function(user, index) {\r\n                                                    await supportsLead.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                    <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                            data={[user_isos[\"SupportsLead\"][user][\"claimed\"], user_isos[\"SupportsLead\"][user][\"sent\"], user_isos[\"SupportsLead\"][user][\"returned\"], user_isos[\"SupportsLead\"][user][\"remaining\"]]}\r\n                                                            colHeaders={weeks}\r\n                                                            rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                            width=\"1750\"\r\n                                                            height=\"145\"\r\n                                                            settings={usersSettings} \r\n                                                            manualColumnResize={true}\r\n                                                            manualRowResize={true}\r\n                                                            columns= {col}\r\n                                                            filters={true}\r\n                                                            className='users-table'\r\n                                                            readOnly={true}\r\n                                                            \r\n                                                    /></div></div>)\r\n                                                });\r\n                                            }\r\n                                            if(user_isos[\"Materials\"]){\r\n                                                Object.keys(user_isos[\"Materials\"]).map(async function(user, index) {\r\n                                                    await materials.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                    <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                            data={[user_isos[\"Materials\"][user][\"claimed\"], user_isos[\"Materials\"][user][\"sent\"], user_isos[\"Materials\"][user][\"returned\"], user_isos[\"Materials\"][user][\"remaining\"]]}\r\n                                                            colHeaders={weeks}\r\n                                                            rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                            width=\"1750\"\r\n                                                            height=\"145\"\r\n                                                            settings={usersSettings} \r\n                                                            manualColumnResize={true}\r\n                                                            manualRowResize={true}\r\n                                                            columns= {col}\r\n                                                            filters={true}\r\n                                                            className='users-table'\r\n                                                            readOnly={true}\r\n                                                            \r\n                                                    /></div></div>)\r\n                                                });\r\n                                            }\r\n                                            if(user_isos[\"Issuer\"]){\r\n                                                Object.keys(user_isos[\"Issuer\"]).map(async function(user, index) {\r\n                                                    await issuer.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                    <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                            data={[user_isos[\"Issuer\"][user][\"claimed\"], user_isos[\"Issuer\"][user][\"sent\"], user_isos[\"Issuer\"][user][\"returned\"], user_isos[\"Issuer\"][user][\"remaining\"]]}\r\n                                                            colHeaders={weeks}\r\n                                                            rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                            width=\"1750\"\r\n                                                            height=\"145\"\r\n                                                            settings={usersSettings} \r\n                                                            manualColumnResize={true}\r\n                                                            manualRowResize={true}\r\n                                                            columns= {col}\r\n                                                            filters={true}\r\n                                                            className='users-table'\r\n                                                            readOnly={true}\r\n                                                            \r\n                                                    /></div></div>)\r\n                                                });\r\n                                            }\r\n\r\n                                            await setTables(<div><ProductionUserTabs>\r\n                                                    <div label=\"Design\">\r\n                                                        <div className=\"user__productivity__tables__container\">\r\n                                                            <text className=\"isoCount__text\">Unclaimed isos: {trayCount[0].Design}</text>\r\n                                                            {design}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div label=\"DesignLead\">\r\n                                                        <div className=\"user__productivity__tables__container\">\r\n                                                            <text className=\"isoCount__text\">Unclaimed isos: {trayCount[0].DesignLead}</text>\r\n                                                            {designLead}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div label=\"Stress\">\r\n                                                        <div className=\"user__productivity__tables__container\">\r\n                                                            <text className=\"isoCount__text\">Unclaimed isos: {trayCount[0].Stress}</text>\r\n                                                            {stress}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div label=\"StressLead\">\r\n                                                        <div className=\"user__productivity__tables__container\">\r\n                                                            <text className=\"isoCount__text\">Unclaimed isos: {trayCount[0].StressLead}</text>\r\n                                                            {stressLead}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div label=\"Supports\">\r\n                                                        <div className=\"user__productivity__tables__container\">\r\n                                                         <text className=\"isoCount__text\">Unclaimed isos: {trayCount[0].Supports}</text>\r\n                                                            {supports}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div label=\"SupportsLead\">\r\n                                                        <div className=\"user__productivity__tables__container\">\r\n                                                            <text className=\"isoCount__text\">Unclaimed isos: {trayCount[0].SupportsLead}</text>\r\n                                                            {supportsLead}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div label=\"Materials\">\r\n                                                        <div className=\"user__productivity__tables__container\">\r\n                                                            <text className=\"isoCount__text\">Unclaimed isos: {trayCount[0].Materials}</text>\r\n                                                            {materials}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div label=\"Issuer\">\r\n                                                        <div className=\"user__productivity__tables__container\">\r\n                                                            <text className=\"isoCount__text\">Unclaimed isos: {trayCount[0].Issuer}</text>\r\n                                                            {issuer}\r\n                                                        </div>\r\n                                                    </div>\r\n                                            </ProductionUserTabs></div>)\r\n                                            \r\n                                        })\r\n                                    })\r\n                                })\r\n                                \r\n                            }else if(usersType === \"weight\"){\r\n                                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getWeightByUserWeekDesign\", options)\r\n                                .then(response => response.json())\r\n                                .then(async json => {\r\n                                    const design_isos = json.design_isos\r\n                                    console.log(design_isos)\r\n                                    let design = []\r\n                                    let designLead = []\r\n                                    let stress = []\r\n                                    let stressLead = []\r\n                                    let supports = []\r\n                                    let supportsLead = []\r\n                                    let materials = []\r\n                                    let issuer = []\r\n                                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getWeightByUserWeek\", options)\r\n                                    .then(response => response.json())\r\n                                    .then(async json => {\r\n                                        let user_isos = json.user_isos\r\n                                        if(design_isos){\r\n                                            Object.keys(design_isos).map(async function(user, index) {\r\n\r\n                                                await design.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                        data={[design_isos[user][\"assigned\"], design_isos[user][\"sent\"], design_isos[user][\"returned\"], design_isos[user][\"remaining\"]]}\r\n                                                        colHeaders={weeks}\r\n                                                        rowHeaders={[\"Assigned\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                        width=\"1750\"\r\n                                                        height=\"145\"\r\n                                                        settings={usersSettings} \r\n                                                        manualColumnResize={true}\r\n                                                        manualRowResize={true}\r\n                                                        columns= {col}\r\n                                                        filters={true}\r\n                                                        className='users-table'\r\n                                                        readOnly={true}\r\n                                                        \r\n                                                /></div></div>)\r\n                                            });\r\n                                        }\r\n                                        if(user_isos[\"DesignLead\"]){\r\n                                            Object.keys(user_isos[\"DesignLead\"]).map(async function(user, index) {\r\n                                                await designLead.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                        data={[user_isos[\"DesignLead\"][user][\"claimed\"], user_isos[\"DesignLead\"][user][\"sent\"], user_isos[\"DesignLead\"][user][\"returned\"], user_isos[\"DesignLead\"][user][\"remaining\"]]}\r\n                                                        colHeaders={weeks}\r\n                                                        rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                        width=\"1750\"\r\n                                                        height=\"145\"\r\n                                                        settings={usersSettings} \r\n                                                        manualColumnResize={true}\r\n                                                        manualRowResize={true}\r\n                                                        columns= {col}\r\n                                                        filters={true}\r\n                                                        className='users-table'\r\n                                                        readOnly={true}\r\n                                                        \r\n                                                /></div></div>)\r\n                                            });\r\n                                        }\r\n                                        if(user_isos[\"Stress\"]){\r\n                                            Object.keys(user_isos[\"Stress\"]).map(async function(user, index) {\r\n                                                await stress.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                        data={[user_isos[\"Stress\"][user][\"claimed\"], user_isos[\"Stress\"][user][\"sent\"], user_isos[\"Stress\"][user][\"returned\"], user_isos[\"Stress\"][user][\"remaining\"]]}\r\n                                                        colHeaders={weeks}\r\n                                                        rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                        width=\"1750\"\r\n                                                        height=\"145\"\r\n                                                        settings={usersSettings} \r\n                                                        manualColumnResize={true}\r\n                                                        manualRowResize={true}\r\n                                                        columns= {col}\r\n                                                        filters={true}\r\n                                                        className='users-table'\r\n                                                        readOnly={true}\r\n                                                        \r\n                                                /></div></div>)\r\n                                            });\r\n                                        }\r\n                                        if(user_isos[\"StressLead\"]){\r\n                                            Object.keys(user_isos[\"StressLead\"]).map(async function(user, index) {\r\n                                                await stressLead.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                        data={[user_isos[\"StressLead\"][user][\"claimed\"], user_isos[\"StressLead\"][user][\"sent\"], user_isos[\"StressLead\"][user][\"returned\"], user_isos[\"StressLead\"][user][\"remaining\"]]}\r\n                                                        colHeaders={weeks}\r\n                                                        rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                        width=\"1750\"\r\n                                                        height=\"145\"\r\n                                                        settings={usersSettings} \r\n                                                        manualColumnResize={true}\r\n                                                        manualRowResize={true}\r\n                                                        columns= {col}\r\n                                                        filters={true}\r\n                                                        className='users-table'\r\n                                                        readOnly={true}\r\n                                                        \r\n                                                /></div></div>)\r\n                                            });\r\n                                        }\r\n                                        if(user_isos[\"Supports\"]){\r\n                                            Object.keys(user_isos[\"Supports\"]).map(async function(user, index) {\r\n                                                await supports.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                        data={[user_isos[\"Supports\"][user][\"claimed\"], user_isos[\"Supports\"][user][\"sent\"], user_isos[\"Supports\"][user][\"returned\"], user_isos[\"Supports\"][user][\"remaining\"]]}\r\n                                                        colHeaders={weeks}\r\n                                                        rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                        width=\"1750\"\r\n                                                        height=\"145\"\r\n                                                        settings={usersSettings} \r\n                                                        manualColumnResize={true}\r\n                                                        manualRowResize={true}\r\n                                                        columns= {col}\r\n                                                        filters={true}\r\n                                                        className='users-table'\r\n                                                        readOnly={true}\r\n                                                        \r\n                                                /></div></div>)\r\n                                            });\r\n                                        }\r\n                                        if(user_isos[\"SupportsLead\"]){\r\n                                            Object.keys(user_isos[\"SupportsLead\"]).map(async function(user, index) {\r\n                                                await supportsLead.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                        data={[user_isos[\"SupportsLead\"][user][\"claimed\"], user_isos[\"SupportsLead\"][user][\"sent\"], user_isos[\"SupportsLead\"][user][\"returned\"], user_isos[\"SupportsLead\"][user][\"remaining\"]]}\r\n                                                        colHeaders={weeks}\r\n                                                        rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                        width=\"1750\"\r\n                                                        height=\"145\"\r\n                                                        settings={usersSettings} \r\n                                                        manualColumnResize={true}\r\n                                                        manualRowResize={true}\r\n                                                        columns= {col}\r\n                                                        filters={true}\r\n                                                        className='users-table'\r\n                                                        readOnly={true}\r\n                                                        \r\n                                                /></div></div>)\r\n                                            });\r\n                                        }\r\n                                        if(user_isos[\"Materials\"]){\r\n                                            Object.keys(user_isos[\"Materials\"]).map(async function(user, index) {\r\n                                                await materials.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                        data={[user_isos[\"Materials\"][user][\"claimed\"], user_isos[\"Materials\"][user][\"sent\"], user_isos[\"Materials\"][user][\"returned\"], user_isos[\"Materials\"][user][\"remaining\"]]}\r\n                                                        colHeaders={weeks}\r\n                                                        rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                        width=\"1750\"\r\n                                                        height=\"145\"\r\n                                                        settings={usersSettings} \r\n                                                        manualColumnResize={true}\r\n                                                        manualRowResize={true}\r\n                                                        columns= {col}\r\n                                                        filters={true}\r\n                                                        className='users-table'\r\n                                                        readOnly={true}\r\n                                                        \r\n                                                /></div></div>)\r\n                                            });\r\n                                        }\r\n                                        if(user_isos[\"Issuer\"]){\r\n                                            Object.keys(user_isos[\"Issuer\"]).map(async function(user, index) {\r\n                                                await issuer.push(<div id=\"hot-app\" style={{borderBottom:\"1px solid lightgray\", width:\"1750px\", paddingBottom:\"10px\", marginTop:\"10px\"}}><div style={{display:\"flex\"}}><text className=\"materials__title\">{user.toUpperCase()}<text style={{fontSize:\"17px\"}}></text></text></div>\r\n                                                <div style={{marginTop:\"10px\"}}><HotTable\r\n                                                        data={[user_isos[\"Issuer\"][user][\"claimed\"], user_isos[\"Issuer\"][user][\"sent\"], user_isos[\"Issuer\"][user][\"returned\"], user_isos[\"Issuer\"][user][\"remaining\"]]}\r\n                                                        colHeaders={weeks}\r\n                                                        rowHeaders={[\"Claimed\", \"Sent\", \"Returned\", \"Remaining\"]}\r\n                                                        width=\"1750\"\r\n                                                        height=\"145\"\r\n                                                        settings={usersSettings} \r\n                                                        manualColumnResize={true}\r\n                                                        manualRowResize={true}\r\n                                                        columns= {col}\r\n                                                        filters={true}\r\n                                                        className='users-table'\r\n                                                        readOnly={true}\r\n                                                        \r\n                                                /></div></div>)\r\n                                            });\r\n                                        }\r\n\r\n                                        await setTables(<div><ProductionUserTabs>\r\n                                            <div label=\"Design\">\r\n                                                <div className=\"user__productivity__tables__container\">\r\n                                                    {design}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div label=\"DesignLead\">\r\n                                                <div className=\"user__productivity__tables__container\">\r\n                                                    {designLead}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div label=\"Stress\">\r\n                                                <div className=\"user__productivity__tables__container\">\r\n                                                    {stress}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div label=\"StressLead\">\r\n                                                <div className=\"user__productivity__tables__container\">\r\n                                                    {stressLead}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div label=\"Supports\">\r\n                                                <div className=\"user__productivity__tables__container\">\r\n                                                    {supports}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div label=\"SupportsLead\">\r\n                                                <div className=\"user__productivity__tables__container\">\r\n                                                    {supportsLead}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div label=\"Materials\">\r\n                                                <div className=\"user__productivity__tables__container\">\r\n                                                    {materials}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div label=\"Issuer\">\r\n                                                <div className=\"user__productivity__tables__container\">\r\n                                                    {issuer}\r\n                                                </div>\r\n                                            </div>\r\n                                    </ProductionUserTabs></div>)\r\n                                        \r\n                                    })\r\n                                })\r\n                            }\r\n                            \r\n                        }\r\n                        \r\n                    })\r\n                    \r\n                }\r\n\r\n            })\r\n            await setLoading(false)\r\n    }, [updateData, tab, usersType])\r\n\r\n    async function printDocument() {\r\n        const input = document.getElementById('graph');\r\n        if(tab === \"prod\"){\r\n            html2canvas(input, {scrollY: -window.scrollY})\r\n            .then((canvas) => {\r\n              const imgData = canvas.toDataURL('image/png');\r\n              const pdf = new jsPDF('l', 'mm', [340, 177]);\r\n              pdf.addImage(imgData, 'JPEG', 5, 5);\r\n              // pdf.output('dataurlnewwindow');\r\n              pdf.save(\"Production.pdf\");\r\n            })\r\n          ;\r\n        }else if(tab === \"weight\"){\r\n            html2canvas(input, {scrollY: -window.scrollY})\r\n            .then((canvas) => {\r\n              const imgData = canvas.toDataURL('image/png');\r\n              const pdf = new jsPDF('l', 'mm', [340, 177]);\r\n              pdf.addImage(imgData, 'JPEG', 5, 5);\r\n              // pdf.output('dataurlnewwindow');\r\n              pdf.save(\"Weight.pdf\");\r\n            })\r\n          ;\r\n        }\r\n        \r\n      }\r\n\r\n    async function addRowMaterials(){\r\n        let m = materials\r\n        m.push({\"id\": \"\", \"Material\": \"\"})\r\n        await setMaterials(m)\r\n        await setUpdateRows(!updateRows)\r\n    }\r\n\r\n    async function addRowPiping(){\r\n        let p = piping\r\n        p.push({\"id\": \"\", \"Material\": \"\"})\r\n        await setPiping(p)\r\n        await setUpdateRows(!updateRows)\r\n    }\r\n\r\n    async function submitChangesMaterials(){\r\n        const body ={\r\n            materials : materials\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitMaterials\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setMaterialsAlert(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function submitChangesPiping(){\r\n        const body ={\r\n            piping : piping\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitPipingClass\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setPipingAlert(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function submitManagement(){\r\n        const body ={\r\n            span : management\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitProjectSpan\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setSpanAlert(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function submitEstimatedForecast(material_id){\r\n        const body ={\r\n            material_id : material_id,\r\n            estimated: estimatedData[material_id],\r\n            forecast: forecastData[material_id]\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitEstimatedForecast\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setSuccess(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })        \r\n    }\r\n\r\n    async function submitWeight(estimatedOverall, forecastOverall){\r\n        const body ={\r\n            estimated: estimatedOverall,\r\n            forecast: forecastOverall\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitEstimatedForecastWeight\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setSuccess(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })        \r\n    }\r\n\r\n    async function exportPiping(){\r\n\r\n        if(tab === \"prod\"){\r\n            let weeks = {0: \"WEEK\"}\r\n            let estAll = estimatedOverall\r\n            let realAll = realOverall\r\n            let estProgressAll = estimatedProgressOverall\r\n            let realProgressAll = realProgressOverall\r\n    \r\n            Object.keys(estAll).map(function(key, index) {\r\n                weeks[key] = \"W\" + key\r\n                if(!estAll[key]){\r\n                    estAll[key] = \" \"\r\n                }\r\n                if(!realAll[key]){\r\n                    realAll[key] = \" \"\r\n                }\r\n            });\r\n    \r\n            estAll[0] = \"Estimated\"\r\n            realAll[0] = \"Real\"\r\n            estProgressAll[0] = \"Estimated Progress\"\r\n            realProgressAll[0] = \"Real Progress\"\r\n            weeks[0] = \"Week\"\r\n    \r\n            let apiData = [{},{0:\"Piping production curves\"}, {}, {}, {0: \"OVERALL Isometrics\"}, weeks, estAll, realAll, estProgressAll, realProgressAll]\r\n    \r\n            for(let i = 0; i < materials.length; i++){\r\n                apiData.push({})\r\n                apiData.push({})\r\n                apiData.push({0:materials[i].Material}) \r\n    \r\n                let est = estimatedData[materialsIDList[i]]\r\n                let real = realData[materialsIDList[i]]\r\n                let forecast = forecastData[materialsIDList[i]]\r\n                let sumEst = estimatedProgressData[materialsIDList[i]]\r\n                let sumReal = realProgressData[materialsIDList[i]]\r\n                if(!est){\r\n                    est = {}\r\n                }if(!real){\r\n                    real = {}\r\n                }if(!forecast){\r\n                    forecast = {}\r\n                }\r\n    \r\n                Object.keys(est).map(function(key, index) {\r\n                    if(!est[key]){\r\n                        est[key] = \" \"\r\n                    }\r\n                    if(!real[key]){\r\n                        real[key] = \" \"\r\n                    }\r\n                    if(!forecast[key]){\r\n                        forecast[key] = \" \"\r\n                    }\r\n                });\r\n                \r\n                est[0] = \"Estimated\"\r\n                real[0] = \"Real\"\r\n                forecast[0] = \"Forecast\"\r\n                sumEst[0] = \"Estimated progress\"\r\n                sumReal[0] = \"Real progress\"\r\n    \r\n                apiData.push(weeks)\r\n                apiData.push(est)\r\n                apiData.push(real)\r\n                apiData.push(forecast)\r\n                apiData.push(sumEst)\r\n                apiData.push(sumReal)\r\n            }\r\n    \r\n            const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n            let ws = XLSX.utils.json_to_sheet(apiData, {skipHeader: 1}); \r\n           \r\n            Object.keys(ws).map(function(i, index) {\r\n               \r\n                if (typeof(ws[i]) != \"string\"){\r\n                    if(index === 0){\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                                weight: \"bold\",\r\n                                sz: 15,\r\n                                color: {rgb: \"4169E1\"}\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                                wrapText: '3',\r\n                            },\r\n                        }  ;\r\n                    }else if(colors[materialsList.indexOf(ws[i].v) * 3]){\r\n                        let fill = colors[materialsList.indexOf(ws[i].v) * 3].replace('#','')\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: fill} }  \r\n                        }  ;\r\n                    }else if(ws[i].v === \"OVERALL Isometrics\"){\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: \"9370DB\"} }  \r\n                        }  ;\r\n                    }else if(ws[i].v.toString().includes(\"W\")){\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: \"C0C0C0\"} }  \r\n                        }  ;\r\n                    }else{\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                                \r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: \"DCDCDC\"} }  \r\n                        }  ;\r\n                    }\r\n    \r\n                }\r\n            })\r\n            \r\n            var wscols = [\r\n                {wch: 30}, // \"characters\"\r\n            ];\r\n    \r\n            ws['!cols'] = wscols\r\n    \r\n            const wb = { Sheets: { Production: ws }, SheetNames: [\"Production\"] };\r\n            const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n            const data = new Blob([excelBuffer], { type: fileType });\r\n            FileSaver.saveAs(data, \"Production.xlsx\");\r\n        }else if(tab === \"weight\"){\r\n            let weeks = {0: \"WEEK\"}\r\n            let estAll = estimatedWeightData\r\n            let forcAll = forecastWeightData\r\n            let realAll = realWeightData\r\n            let estProgressAll = estimatedProgressWeightData\r\n            let realProgressAll = realProgressWeightData\r\n    \r\n            Object.keys(estAll).map(function(key, index) {\r\n                weeks[key] = \"W\" + key\r\n                if(!estAll[key]){\r\n                    estAll[key] = \" \"\r\n                }\r\n                if(!realAll[key]){\r\n                    realAll[key] = \" \"\r\n                }\r\n                if(!forcAll[key]){\r\n                    forcAll[key] = \" \"\r\n                }\r\n            });\r\n    \r\n            estAll[0] = \"Estimated\"\r\n            forcAll[0] = \"Forecast\"\r\n            realAll[0] = \"Real\"\r\n            estProgressAll[0] = \"Estimated Progress\"\r\n            realProgressAll[0] = \"Real Progress\"\r\n            weeks[0] = \"Week\"\r\n\r\n            let apiData = [{},{0:\"Piping weight curves\"}, {}, {}, {0: \"OVERALL Weight\"}, weeks, estAll, realAll, forcAll, estProgressAll, realProgressAll]\r\n\r\n            for(let i = 0; i < materials.length; i++){\r\n                \r\n                if(realProgressWeightMatData[materialsIDList[i]]){\r\n\r\n                    apiData.push({})\r\n                    apiData.push({})\r\n                    apiData.push({0:materials[i].Material}) \r\n                    let real = realWeightMatData[materialsIDList[i]]\r\n                    let sumReal = realProgressWeightMatData[materialsIDList[i]]\r\n                    if(!real){\r\n                        real = {}\r\n                    }\r\n        \r\n                    Object.keys(estAll).map(function(key, index) {\r\n                        if(!real[key]){\r\n                            real[key] = \" \"\r\n                        }\r\n                    });\r\n                    \r\n                    real[0] = \"Real\"\r\n                    sumReal[0] = \"Real progress\"\r\n        \r\n                    apiData.push(weeks)\r\n                    apiData.push(real)\r\n                    apiData.push(sumReal)\r\n                }\r\n                \r\n            }\r\n\r\n            const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n            let ws = XLSX.utils.json_to_sheet(apiData, {skipHeader: 1}); \r\n           \r\n            Object.keys(ws).map(function(i, index) {\r\n               \r\n                if (typeof(ws[i]) != \"string\"){\r\n                    if(index === 0){\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                                weight: \"bold\",\r\n                                sz: 15,\r\n                                color: {rgb: \"4169E1\"}\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                                wrapText: '3',\r\n                            },\r\n                        }  ;\r\n                    }else if(colors[materialsList.indexOf(ws[i].v) * 3]){\r\n                        let fill = colors[materialsList.indexOf(ws[i].v) * 3].replace('#','')\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: fill} }  \r\n                        }  ;\r\n                    }else if(ws[i].v === \"OVERALL Weight\"){\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: \"9370DB\"} }  \r\n                        }  ;\r\n                    }else if(ws[i].v.toString().includes(\"W\")){\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: \"C0C0C0\"} }  \r\n                        }  ;\r\n                    }else{\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                                \r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: \"DCDCDC\"} }  \r\n                        }  ;\r\n                    }\r\n    \r\n                }\r\n            })\r\n            \r\n            var wscols = [\r\n                {wch: 30}, // \"characters\"\r\n            ];\r\n    \r\n            ws['!cols'] = wscols\r\n    \r\n            const wb = { Sheets: { Production: ws }, SheetNames: [\"Production\"] };\r\n            const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n            const data = new Blob([excelBuffer], { type: fileType });\r\n            FileSaver.saveAs(data, \"Weights.xlsx\");\r\n        }else if(tab === \"users\"){\r\n            let apiData = []\r\n            let type = \"\"\r\n            if(usersType === \"iso\"){\r\n                apiData = [{},{0:\"User efficiency\"}]\r\n                type = \"User efficiency\"\r\n            }else if(usersType === \"weight\"){\r\n                apiData = [{},{0:\"User efficiency\"}]\r\n                type = \"User efficiency\"\r\n\r\n            }\r\n\r\n            Object.keys(usersData).map(function(user, index) {\r\n                apiData.push({})\r\n                apiData.push({})\r\n                apiData.push({0:user})\r\n\r\n                let assigned = {}, sent = {}, returned = {}, remaining = {}, weeks = {0: \"WEEK\"}\r\n                \r\n                assigned[0] = \"Assigned\"\r\n                sent[0] = \"Sent\"\r\n                returned[0] = \"Returned\"\r\n                remaining[0] = \"Remaining\"\r\n                Object.keys(usersData[user][\"remaining\"]).map(function(key, index) {\r\n                    weeks[key] = \"W\" + key\r\n                    if(usersData[user][\"assigned\"]){\r\n                        if(usersData[user][\"assigned\"][key]){\r\n                            assigned[key] = usersData[user][\"assigned\"][key]\r\n                        }else{\r\n                            assigned[key] = \"\"\r\n                        }\r\n                    }else{\r\n                        assigned[key] = \"\"\r\n                    }\r\n\r\n                    if(usersData[user][\"sent\"]){\r\n                        if(usersData[user][\"sent\"][key]){\r\n                            sent[key] = usersData[user][\"sent\"][key]\r\n                        }else{\r\n                            sent[key] = \"\"\r\n                        }\r\n                    }else{\r\n                        sent[key] = \"\"\r\n                    }\r\n\r\n                    if(usersData[user][\"returned\"]){\r\n                        if(usersData[user][\"returned\"][key]){\r\n                            returned[key] = usersData[user][\"returned\"][key]\r\n                        }else{\r\n                            returned[key] = \"\"\r\n                        }\r\n                    }else{\r\n                        returned[key] = \"\"\r\n                    }\r\n\r\n                    if(usersData[user][\"remaining\"]){\r\n                        if(usersData[user][\"remaining\"][key]){\r\n                            remaining[key] = usersData[user][\"remaining\"][key]\r\n                        }else{\r\n                            remaining[key] = 0\r\n                        }\r\n                    }else{\r\n                        remaining[key] = \"\"\r\n                    }\r\n\r\n                });\r\n                apiData.push(weeks)\r\n                apiData.push(assigned)\r\n                apiData.push(sent)\r\n                apiData.push(returned)\r\n                apiData.push(remaining)\r\n                \r\n            });\r\n            const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n            let ws = XLSX.utils.json_to_sheet(apiData, {skipHeader: 1}); \r\n\r\n            Object.keys(ws).map(function(i, index) {\r\n               \r\n                if (typeof(ws[i]) != \"string\"){\r\n                    if(index === 0){\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                                weight: \"bold\",\r\n                                sz: 12,\r\n                                color: {rgb: \"4169E1\"}\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                                wrapText: '3',\r\n                            },\r\n                        }  ;\r\n                    }else if(ws[i].v === type){\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: \"9370DB\"} }  \r\n                        }  ;\r\n                    }else if(ws[i].v.toString().includes(\"W\")){\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                                horizontal: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: \"C0C0C0\"} }  \r\n                        }  ;\r\n                    }else{\r\n                        ws[i].s = { \r\n                            font: {\r\n                                name: \"arial\",\r\n                                \r\n                            },\r\n                            alignment: {\r\n                                vertical: \"center\",\r\n                            },\r\n                            border: {\r\n                                right: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                left: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                bottom: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                                top: {\r\n                                    style: \"thin\",\r\n                                    color: \"000000\"\r\n                                },\r\n                            },\r\n                            fill: { fgColor: { rgb: \"DCDCDC\"} }  \r\n                        }  ;\r\n                    }\r\n    \r\n                }\r\n            })\r\n\r\n\r\n            var wscols = [\r\n                {wch: 30}, // \"characters\"\r\n            ];\r\n    \r\n            ws['!cols'] = wscols\r\n    \r\n            const wb = { Sheets: { Production: ws }, SheetNames: [\"Production\"] };\r\n            const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n            const data = new Blob([excelBuffer], { type: fileType });\r\n            let name = \"\"\r\n            if(usersType === \"iso\"){\r\n                name = \"Users efficiency.xlsx\"\r\n            }else if(usersType === \"weight\"){\r\n                name = \"Users efficiency.xlsx\"\r\n            }\r\n            FileSaver.saveAs(data, name);\r\n        }\r\n        \r\n    }\r\n    \r\n    const matSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 430,\r\n        //... other options\r\n    }\r\n\r\n    const pipingSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 215,\r\n        //... other options\r\n    }\r\n\r\n    const spanSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 215,\r\n        //... other options\r\n    }\r\n    if(tab === \"users\"){\r\n        return(\r\n            <body style={{overflow:\"hidden\", height:\"100vh\"}}>\r\n                {updateData}\r\n                {updateRows}\r\n                <IdleTimer\r\n                    timeout={1000 * 60 * 15}\r\n                    onIdle={handleOnIdle}\r\n                    debounce={250}\r\n                />\r\n                <NavBarProdCurve/>\r\n                <div className={`alert alert-success ${spanAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setSpanAlert(false)}>\r\n                    <AlertF type=\"success\" text=\"Project week span saved!\" margin=\"0px\"/>\r\n                </div>\r\n                <div className={`alert alert-success ${pipingAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setPipingAlert(false)}>\r\n                    <AlertF type=\"success\" text=\"Piping classes saved!\" margin=\"0px\"/>\r\n                </div>\r\n                <div className={`alert alert-success ${materialsAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setMaterialsAlert(false)}>\r\n                    <AlertF type=\"success\" text=\"Materials saved!\" margin=\"0px\"/>\r\n                </div>\r\n                <div className={`alert alert-success ${success ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setSuccess(false)}>\r\n                    <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n                </div>\r\n                <Collapse in={loading}>\r\n                    <Alert style={{fontSize:\"16px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\",zIndex:\"0\"}} severity=\"info\"\r\n                        >\r\n                        Processing...\r\n                    </Alert>\r\n                </Collapse>\r\n                <div id=\"pdf\">\r\n                    <div style={{display:\"flex\"}}>\r\n                        {tabBtns}\r\n                        <div className=\"users__tables__container\">\r\n                            <div>\r\n                                {userEffTitle}\r\n                            </div>\r\n                            {tables}\r\n                        </div>\r\n                        <div style={{marginBottom:\"30px\", marginLeft:\"1630px\", position:\"absolute\"}}>\r\n                            <button className=\"back__button\" onClick={()=>history.push('/'+process.env.REACT_APP_PROJECT+'/piping')} style={{width:\"110px\", marginTop: \"80px\"}}><img src={BackIcon} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\", height: \"30px\"}}></img><p className=\"back__button__text\">Back</p></button>\r\n                            <button className=\"back__button\" onClick={()=> exportPiping()} style={{width:\"110px\", marginLeft:\"10px\", marginTop: \"80px\"}}><img src={Reports} alt=\"report\" className=\"navBar__icon\" style={{marginRight:\"0px\", height: \"30px\"}}></img><p className=\"back__button__text\">Export</p></button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </body>\r\n        )\r\n    }else{\r\n        return(\r\n\r\n            <body style={{overflow:\"hidden\", height:\"100vh\"}}>\r\n                {updateData}\r\n                {updateRows}\r\n                <IdleTimer\r\n                    timeout={1000 * 60 * 15}\r\n                    onIdle={handleOnIdle}\r\n                    debounce={250}\r\n                />\r\n                <NavBarProdCurve/>\r\n                <div className={`alert alert-success ${spanAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setSpanAlert(false)}>\r\n                    <AlertF type=\"success\" text=\"Project week span saved!\" margin=\"0px\"/>\r\n                </div>\r\n                <div className={`alert alert-success ${pipingAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setPipingAlert(false)}>\r\n                    <AlertF type=\"success\" text=\"Piping classes saved!\" margin=\"0px\"/>\r\n                </div>\r\n                <div className={`alert alert-success ${materialsAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setMaterialsAlert(false)}>\r\n                    <AlertF type=\"success\" text=\"Materials saved!\" margin=\"0px\"/>\r\n                </div>\r\n                <div className={`alert alert-success ${success ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setSuccess(false)}>\r\n                    <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n                </div>\r\n                <Collapse in={loading}>\r\n                    <Alert style={{fontSize:\"16px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\",zIndex:\"0\"}} severity=\"info\"\r\n                        >\r\n                        Processing...\r\n                    </Alert>\r\n                </Collapse>\r\n                <div id=\"pdf\">\r\n                <div className=\"top__container\">\r\n                    {tabBtns}\r\n                    <div id=\"graph\" className=\"graph__container\">\r\n                    \r\n                    {lineChart}\r\n                    \r\n                    </div>\r\n                    <div className=\"materials__pc__container\">\r\n                        <div style={{marginBottom:\"30px\"}}>\r\n                            <button className=\"back__button\" onClick={()=>history.push('/'+process.env.REACT_APP_PROJECT+'/piping')} style={{width:\"110px\", marginTop: \"80px\"}}><img src={BackIcon} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\", height: \"30px\"}}></img><p className=\"back__button__text\">Back</p></button>\r\n                            <button className=\"back__button\" onClick={()=> printDocument()} style={{width:\"110px\", marginLeft:\"10px\", marginTop: \"80px\"}}><img src={Graph} alt=\"report\" className=\"navBar__icon\" style={{marginRight:\"0px\", height: \"30px\"}}></img><p className=\"back__button__text\">Graph</p></button>\r\n                            <button className=\"back__button\" onClick={()=> exportPiping()} style={{width:\"110px\", marginLeft:\"10px\", marginTop: \"80px\"}}><img src={Reports} alt=\"report\" className=\"navBar__icon\" style={{marginRight:\"0px\", height: \"30px\"}}></img><p className=\"back__button__text\">Export</p></button>\r\n                        </div>\r\n                        <div style={{display:\"flex\"}}>\r\n                            <text className=\"materials__title\">Project Management</text>\r\n                            <button className=\"save__button\" onClick={()=> submitManagement()}><img src={SaveIcon} alt=\"save\" className=\"save__icon\"></img></button>\r\n                        </div>\r\n                        <div style={{marginBottom:\"20px\", marginTop:\"10px\"}}>\r\n                            <HotTable\r\n                                data={management}\r\n                                colHeaders = {[\"<b>Starting date</b>\", \"<b>Finishing date</b>\"]}\r\n                                width=\"500\"\r\n                                height=\"60\"\r\n                                settings={spanSettings} \r\n                                manualColumnResize={true}\r\n                                manualRowResize={true}\r\n                                columns= {[{ data: \"Starting date\", type:\"date\"}, { data: \"Finishing date\", type:\"date\"}]}\r\n                                className='project__management'\r\n                            />\r\n                        </div>\r\n                        <div id=\"hot-app\" style={{marginBottom:\"20px\"}}>\r\n                            <HotTable\r\n                                data={materials}\r\n                                colHeaders = {[\"<b>Materials</b>\"]}\r\n                                width=\"450\"\r\n                                height=\"130\"\r\n                                settings={matSettings} \r\n                                manualColumnResize={true}\r\n                                manualRowResize={true}\r\n                                columns= {[{ data: \"Material\"}]}\r\n                                className='materials__management'\r\n                            />\r\n                            </div>\r\n                                <button class=\"btn btn-sm btn-info\" onClick={() => addRowMaterials()} style={{marginRight:\"5px\", fontSize:\"12px\",width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\", marginLeft:\"165px\"}}>Add</button>\r\n                                <button className=\"projects__button__save\" onClick={()=> submitChangesMaterials()} style={{width:\"175px\", marginLeft:\"-1620px\"}}><img src={SaveIcon2} alt=\"hold\" className=\"navBar__icon__save\" style={{marginRight:\"-20px\"}}></img><p className=\"projects__button__text\">Save</p></button>\r\n                            <div id=\"hot-app\" style={{marginBottom:\"20px\", marginTop:\"40px\"}}>\r\n                            <HotTable\r\n                                data={piping}\r\n                                colHeaders = {[\"<b>Piping class</b>\", \"<b>Material</b>\"]}\r\n                                width=\"500\"\r\n                                height=\"130\"\r\n                                settings={pipingSettings} \r\n                                manualColumnResize={true}\r\n                                manualRowResize={true}\r\n                                columns= {[{ data: \"PipingClass\"}, { data: \"Material\", type:\"dropdown\",strict:\"true\", source: materialsList}]}\r\n                                className='pipingclass__management'\r\n                            />\r\n                            </div>\r\n                            <button class=\"btn btn-sm btn-info\" onClick={() => addRowPiping()} style={{marginRight:\"5px\", fontSize:\"12px\",width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\", marginLeft:\"165px\"}}>Add</button>\r\n                            <button class=\"btn btn-sm btn-success\" onClick={() => submitChangesPiping()} style={{marginRight:\"5px\", fontSize:\"12px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#7BD36D\"}}>Save</button>\r\n    \r\n                        </div>\r\n                </div>\r\n                <div className=\"materials__tables__container\">\r\n                    {overallTable}\r\n                    {tables}\r\n                </div>\r\n                </div>\r\n            </body>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default PITRequests;"]},"metadata":{},"sourceType":"module"}