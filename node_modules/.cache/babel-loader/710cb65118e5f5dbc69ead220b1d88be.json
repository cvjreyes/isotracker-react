{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\dragAndDrop\\\\dragAndDrop.js\";\n//Drag and drop para subir isometricas\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Dragger\n} = Upload;\nconst props = {\n  name: 'file',\n  multiple: true,\n  action: 'http://localhost:5000/upload',\n\n  onChange(info) {\n    const {\n      status\n    } = info.file;\n\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n\n    if (status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  }\n\n};\n\nconst DragAndDrop = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dragger, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.handleUpload,\n        disabled: fileList.length === 0,\n        loading: uploading,\n        style: {\n          marginTop: 16\n        },\n        children: uploading ? 'Uploading' : 'Start Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-text\",\n        children: \"Click or drag the isometrics to this area to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-hint\",\n        children: \"You can drop single or multiple isometrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), \",\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DragAndDrop;\nexport default DragAndDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragAndDrop\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/dragAndDrop/dragAndDrop.js"],"names":["React","Button","Upload","message","InboxOutlined","Dragger","props","name","multiple","action","onChange","info","status","file","console","log","fileList","success","error","DragAndDrop","handleUpload","length","uploading","marginTop"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,OAA1B,QAAyC,MAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcH,MAApB;AAEA,MAAMI,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,MADM;AAEZC,EAAAA,QAAQ,EAAE,IAFE;AAGZC,EAAAA,MAAM,EAAE,8BAHI;;AAIZC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,UAAM;AAAEC,MAAAA;AAAF,QAAaD,IAAI,CAACE,IAAxB;;AACA,QAAID,MAAM,KAAK,WAAf,EAA4B;AAC1BE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB,EAAuBF,IAAI,CAACK,QAA5B;AACD;;AACD,QAAIJ,MAAM,KAAK,MAAf,EAAuB;AACrBT,MAAAA,OAAO,CAACc,OAAR,CAAiB,GAAEN,IAAI,CAACE,IAAL,CAAUN,IAAK,8BAAlC;AACD,KAFD,MAEO,IAAIK,MAAM,KAAK,OAAf,EAAwB;AAC7BT,MAAAA,OAAO,CAACe,KAAR,CAAe,GAAEP,IAAI,CAACE,IAAL,CAAUN,IAAK,sBAAhC;AACD;AACF;;AAdW,CAAd;;AAiBA,MAAMY,WAAW,GAAG,MAAK;AACrB,sBACI;AAAA,4BACI,QAAC,OAAD,OAAab,KAAb;AAAA,8BACA,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE,KAAKc,YAFhB;AAGE,QAAA,QAAQ,EAAEJ,QAAQ,CAACK,MAAT,KAAoB,CAHhC;AAIE,QAAA,OAAO,EAAEC,SAJX;AAKE,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SALT;AAAA,kBAOGD,SAAS,GAAG,WAAH,GAAiB;AAP7B;AAAA;AAAA;AAAA;AAAA,cADA,eAUI;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA,+BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVJ,eAaI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAvBD;;KAAMH,W;AAyBN,eAAeA,WAAf","sourcesContent":["//Drag and drop para subir isometricas\r\n\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {  Button, Upload, message } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: 'http://localhost:5000/upload',\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nconst DragAndDrop = () =>{\r\n    return(\r\n        <div>\r\n            <Dragger {...props}>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.handleUpload}\r\n              disabled={fileList.length === 0}\r\n              loading={uploading}\r\n              style={{ marginTop: 16 }}\r\n            >\r\n              {uploading ? 'Uploading' : 'Start Upload'}\r\n            </Button>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                  <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Click or drag the isometrics to this area to upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                  You can drop single or multiple isometrics\r\n                </p>\r\n            </Dragger>,\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DragAndDrop;"]},"metadata":{},"sourceType":"module"}