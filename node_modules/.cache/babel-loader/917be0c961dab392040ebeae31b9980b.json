{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\progressPlot\\\\progressPlot.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\nexport default class ProgressPlot extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/gpipes\", options).then(response => response.json()).then(json => {\n      let week = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        week.push({\n          week: json.rows[i].week,\n          estimated: json.rows[i].estiamted,\n          progress: json.rows[i].progress\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"80%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 500,\n        height: 300,\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"Progress\",\n          stroke: \"#8884d8\",\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"Estimated\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }, this);\n  }\n\n}\nProgressPlot.demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/progressPlot/progressPlot.js"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","data","name","uv","pv","amt","ProgressPlot","PureComponent","state","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","week","i","rows","length","push","estimated","estiamted","progress","render","top","right","left","bottom","r","demoUrl"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n\t{\r\n\t  name: 'Page A',\r\n\t  uv: 4000,\r\n\t  pv: 2400,\r\n\t  amt: 2400,\r\n\t},\r\n\t{\r\n\t  name: 'Page B',\r\n\t  uv: 3000,\r\n\t  pv: 1398,\r\n\t  amt: 2210,\r\n\t},\r\n\t{\r\n\t  name: 'Page C',\r\n\t  uv: 2000,\r\n\t  pv: 9800,\r\n\t  amt: 2290,\r\n\t},\r\n\t{\r\n\t  name: 'Page D',\r\n\t  uv: 2780,\r\n\t  pv: 3908,\r\n\t  amt: 2000,\r\n\t},\r\n\t{\r\n\t  name: 'Page E',\r\n\t  uv: 1890,\r\n\t  pv: 4800,\r\n\t  amt: 2181,\r\n\t},\r\n\t{\r\n\t  name: 'Page F',\r\n\t  uv: 2390,\r\n\t  pv: 3800,\r\n\t  amt: 2500,\r\n\t},\r\n\t{\r\n\t  name: 'Page G',\r\n\t  uv: 3490,\r\n\t  pv: 4300,\r\n\t  amt: 2100,\r\n\t},\r\n  ];\r\n  \r\n  export default class ProgressPlot extends React.PureComponent {\r\n\tstatic demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';\r\n\t\r\n\tstate = {\r\n\t\tdata: []\r\n\t  };\r\n\r\n\r\n\tcomponentDidMount(){\r\n\r\n\t\tconst options = {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/gpipes\", options)\r\n\t\t.then(response => response.json())\r\n\t\t.then(json=>{\r\n\t\t\tlet week = []\r\n\t\t\tfor(let i = 0; i < json.rows.length; i++){\r\n\t\t\t\tweek.push({week: json.rows[i].week, estimated: json.rows[i].estiamted, progress: json.rows[i].progress})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<ResponsiveContainer width=\"100%\" height=\"80%\">\r\n\t\t  <LineChart\r\n\t\t\twidth={500}\r\n\t\t\theight={300}\r\n\t\t\tdata={data}\r\n\t\t\tmargin={{\r\n\t\t\t  top: 5,\r\n\t\t\t  right: 30,\r\n\t\t\t  left: 20,\r\n\t\t\t  bottom: 5,\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t<XAxis dataKey=\"name\" />\r\n\t\t\t<YAxis />\r\n\t\t\t<Tooltip />\r\n\t\t\t<Legend />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"Progress\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"Estimated\" stroke=\"#82ca9d\" />\r\n\t\t  </LineChart>\r\n\t\t</ResponsiveContainer>\r\n\t  );\r\n\t}\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}