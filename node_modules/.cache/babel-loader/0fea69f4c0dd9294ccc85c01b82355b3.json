{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\dragAndDrop\\\\dragAndDrop.js\";\n//Drag and drop para subir isometricas\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Upload, message, Button } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DragAndDrop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileList: [],\n      uploading: false\n    };\n  }\n\n  render() {\n    const {\n      Dragger\n    } = Upload;\n\n    const handleUpload = () => {\n      this.state.fileList.forEach(file => {\n        const formData = new FormData();\n        formData.append('file', file);\n        uploadFile(formData);\n      });\n      this.setState({\n        fileList\n      });\n      console.log(this.state.fileList);\n    };\n\n    function uploadFile(file) {\n      fetch('http://localhost:5000/upload', {\n        // content-type header should not be specified!\n        method: 'POST',\n        body: file\n      }).then(response => response.json()).then(success => {\n        // Do something with the successful response\n        message.success('Files uploaded successfully.');\n      }).catch(error => console.log(error));\n    }\n\n    const props = {\n      name: 'file',\n      multiple: true,\n      action: 'http://localhost:5000/upload',\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      beforeUpload: file => {\n        this.setState(state => ({\n          fileList: [...state.fileList, file]\n        }));\n        return false;\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        class: \"btn btn-info btn-lg\",\n        style: {\n          backgroundColor: \"#17a2b8\",\n          width: \"100%\"\n        },\n        children: \"Upload files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dragger, { ...props,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-drag-icon\",\n          children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-text\",\n          children: \"Click or drag the isometrics to this area to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-hint\",\n          children: \"You can drop single or multiple isometrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), \",\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default DragAndDrop;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/dragAndDrop/dragAndDrop.js"],"names":["React","Upload","message","Button","InboxOutlined","useHistory","DragAndDrop","Component","state","fileList","uploading","render","Dragger","handleUpload","forEach","file","formData","FormData","append","uploadFile","setState","console","log","fetch","method","body","then","response","json","success","catch","error","props","name","multiple","action","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","backgroundColor","width"],"mappings":"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","sourcesContent":["//Drag and drop para subir isometricas\r\n\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Upload, message , Button} from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport {useHistory} from \"react-router\";\r\n\r\n\r\nclass DragAndDrop extends React.Component{\r\n\r\n  state = {\r\n    fileList: [],\r\n    uploading: false,\r\n  };\r\n\r\nrender (){\r\n  \r\n  const { Dragger } = Upload;\r\n\r\n  const handleUpload = () =>{\r\n    \r\n    this.state.fileList.forEach(file => {\r\n      const formData  = new FormData();\r\n      formData.append('file', file)\r\n      uploadFile(formData);\r\n    });\r\n\r\n    this.setState({fileList})\r\n    \r\n    console.log(this.state.fileList)\r\n  }\r\n\r\n  function uploadFile(file) {\r\n    fetch('http://localhost:5000/upload', {\r\n      // content-type header should not be specified!\r\n      method: 'POST',\r\n      body: file,\r\n    })\r\n      .then(response => response.json())\r\n      .then(success => {\r\n        // Do something with the successful response\r\n        message.success('Files uploaded successfully.');\r\n      })\r\n      .catch(error => console.log(error)\r\n    );\r\n  }\r\n\r\n  const props = {\r\n    name: 'file',\r\n    multiple: true,\r\n    action: 'http://localhost:5000/upload',\r\n    onRemove: file => {\r\n      this.setState(state => {\r\n        const index = state.fileList.indexOf(file);\r\n        const newFileList = state.fileList.slice();\r\n        newFileList.splice(index, 1);\r\n        return {\r\n          fileList: newFileList,\r\n        };\r\n      });\r\n    },\r\n    beforeUpload: file => {\r\n      this.setState(state => ({\r\n        fileList: [...state.fileList, file],\r\n      }));\r\n      return false;\r\n      },\r\n    };\r\n\r\n      return(\r\n          <div>\r\n            <button onClick={handleUpload} class=\"btn btn-info btn-lg\" style={{backgroundColor: \"#17a2b8\", width:\"100%\"}}>Upload files</button>\r\n              <Dragger {...props}>\r\n                \r\n                  <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined />\r\n                  </p>\r\n                  <p className=\"ant-upload-text\">Click or drag the isometrics to this area to upload</p>\r\n                  <p className=\"ant-upload-hint\">\r\n                    You can drop single or multiple isometrics\r\n                  </p>\r\n              </Dragger>,\r\n          </div>\r\n      );\r\n      }\r\n}\r\n\r\nexport default DragAndDrop;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}