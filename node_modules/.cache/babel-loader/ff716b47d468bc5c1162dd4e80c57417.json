{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\pitRequestView\\\\pitRequestView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport NavBar from '../../components/navBar/navBar';\nimport CSPTrackerLogo from \"../../assets/images/csptracker.svg\";\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown';\nimport IdleTimer from 'react-idle-timer';\nimport { useHistory } from \"react-router\";\nimport QTrackerViewDataTable from '../../components/qtrackerViewDataTable/qtrackerViewDataTable';\nimport SaveIcon from \"../../assets/images/save.svg\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PitRequestView = () => {\n  _s();\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const settings = {\n    licenseKey: 'non-commercial-and-evaluation',\n    colWidths: 250\n  };\n  const [currentRole, setCurrentRole] = useState();\n  const [currentTab, setCurrentTab] = useState(\"View\");\n  const [roles, setRoles] = useState();\n  const [saveBtn, setSaveBtn] = useState();\n  const [updatedRows, setUpdatedRows] = useState([]);\n  const [observations, setObservations] = useState();\n  const [updateData, setUpdateData] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (!secureStorage.getItem(\"user\")) {\n      history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/\");\n    }\n  }, []);\n  var currentUser = secureStorage.getItem('user');\n  useEffect(() => {\n    const body = {\n      user: currentUser\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/roles/user\", options).then(response => response.json()).then(json => {\n      setRoles(json.roles);\n\n      if (secureStorage.getItem('role') !== null) {\n        setCurrentRole(secureStorage.getItem('role'));\n      } else {\n        secureStorage.setItem('role', json.roles[0]);\n        setCurrentRole(secureStorage.getItem('role'));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n\n    if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n      setSaveBtn( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => saveChanges(),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: SaveIcon,\n          alt: \"save\",\n          className: \"navBar__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 88\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 150\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 24\n      }, this));\n    } else {\n      setSaveBtn(null);\n    }\n  }, [currentRole]);\n  useEffect(() => {\n    const body = {\n      user: currentUser\n    };\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {});\n  }, [updateData]);\n\n  function handleOnIdle() {\n    const body = {\n      user: currentUser\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {});\n    secureStorage.clear();\n    history.push(\"/\" + process.env.REACT_APP_PROJECT);\n  }\n\n  async function updateDataMethod() {\n    setUpdateData(!updateData);\n  }\n\n  async function downloadReport() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNWC\", options).then(response => response.json()).then(async json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          incidence_number: json.rows[i].incidence_number,\n          user: json.rows[i].user,\n          created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n          observations: json.rows[i].observations,\n          spref: json.rows[i].spref,\n          name: null,\n          pipe: null,\n          items: null,\n          scope: null,\n          description: json.rows[i].description\n        };\n\n        if (json.rows[i].status === 0) {\n          row.status = \"Pending\";\n        } else if (json.rows[i].status === 1) {\n          row.status = \"In progress\";\n        } else if (json.rows[i].status === 2) {\n          row.status = \"Ready\";\n        } else {\n          row.status = \"Rejected\";\n        }\n\n        row.ar_date = json.rows[i].accept_reject_date;\n        rows.push(row);\n      }\n\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNVN\", options).then(response => response.json()).then(async json => {\n        var row = null;\n\n        for (let i = 0; i < json.rows.length; i++) {\n          row = {\n            incidence_number: json.rows[i].incidence_number,\n            user: json.rows[i].user,\n            created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n            observations: json.rows[i].observations,\n            spref: null,\n            name: json.rows[i].name,\n            pipe: null,\n            items: null,\n            scope: null,\n            description: json.rows[i].description\n          };\n\n          if (json.rows[i].status === 0) {\n            row.status = \"Pending\";\n          } else if (json.rows[i].status === 1) {\n            row.status = \"In progress\";\n          } else if (json.rows[i].status === 2) {\n            row.status = \"Ready\";\n          } else {\n            row.status = \"Rejected\";\n          }\n\n          row.ar_date = json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19);\n          rows.push(row);\n        }\n\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNRI\", options).then(response => response.json()).then(async json => {\n          var row = null;\n\n          for (let i = 0; i < json.rows.length; i++) {\n            row = {\n              incidence_number: json.rows[i].incidence_number,\n              user: json.rows[i].user,\n              created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n              observations: json.rows[i].observations,\n              spref: null,\n              name: null,\n              pipe: json.rows[i].pipe,\n              items: null,\n              scope: null,\n              description: json.rows[i].description\n            };\n\n            if (json.rows[i].status === 0) {\n              row.status = \"Pending\";\n            } else if (json.rows[i].status === 1) {\n              row.status = \"In progress\";\n            } else if (json.rows[i].status === 2) {\n              row.status = \"Ready\";\n            } else {\n              row.status = \"Rejected\";\n            }\n\n            row.ar_date = json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19);\n            rows.push(row);\n          }\n\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNRB\", options).then(response => response.json()).then(async json => {\n            var row = null;\n\n            for (let i = 0; i < json.rows.length; i++) {\n              row = {\n                incidence_number: json.rows[i].incidence_number,\n                user: json.rows[i].user,\n                created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                observations: json.rows[i].observations,\n                spref: null,\n                name: null,\n                pipe: json.rows[i].pipe,\n                items: null,\n                scope: null,\n                description: json.rows[i].description\n              };\n\n              if (json.rows[i].status === 0) {\n                row.status = \"Pending\";\n              } else if (json.rows[i].status === 1) {\n                row.status = \"In progress\";\n              } else if (json.rows[i].status === 2) {\n                row.status = \"Ready\";\n              } else {\n                row.status = \"Rejected\";\n              }\n\n              row.ar_date = json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19);\n              rows.push(row);\n            }\n\n            await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNRIDS\", options).then(response => response.json()).then(async json => {\n              var row = null;\n\n              for (let i = 0; i < json.rows.length; i++) {\n                row = {\n                  incidence_number: json.rows[i].incidence_number,\n                  user: json.rows[i].user,\n                  created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                  observations: json.rows[i].observations,\n                  spref: null,\n                  name: json.rows[i].name,\n                  pipe: null,\n                  items: null,\n                  scope: null,\n                  description: null\n                };\n\n                if (json.rows[i].status === 0) {\n                  row.status = \"Pending\";\n                } else if (json.rows[i].status === 1) {\n                  row.status = \"In progress\";\n                } else if (json.rows[i].status === 2) {\n                  row.status = \"Ready\";\n                } else {\n                  row.status = \"Rejected\";\n                }\n\n                row.ar_date = json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19);\n                rows.push(row);\n              }\n\n              await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getRP\", options).then(response => response.json()).then(async json => {\n                var row = null;\n\n                for (let i = 0; i < json.rows.length; i++) {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    observations: json.rows[i].observations,\n                    spref: null,\n                    name: null,\n                    pipe: null,\n                    items: json.rows[i].items_to_report,\n                    scope: json.rows[i].scope,\n                    description: json.rows[i].description\n                  };\n\n                  if (json.rows[i].status === 0) {\n                    row.status = \"Pending\";\n                  } else if (json.rows[i].status === 1) {\n                    row.status = \"In progress\";\n                  } else if (json.rows[i].status === 2) {\n                    row.status = \"Ready\";\n                  } else {\n                    row.status = \"Rejected\";\n                  }\n\n                  row.ar_date = json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19);\n                  rows.push(row);\n                } // Sort the array based on the second element\n\n\n                rows.sort(function (first, second) {\n                  return second.created_at.localeCompare(first.created_at);\n                });\n                const headers = [\"Reference\", \"User\", \"Date\", \"Observations\", \"SPREF\", \"Name\", \"Pipe\", \"Items\", \"Scope\", \"Description\", \"Status\", \"Accepted/Rejected date\"];\n                const apiData = rows;\n                const fileName = \"QueryTracker report\";\n                const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n                const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1'];\n                const fileExtension = \".xlsx\";\n                let wscols = [];\n\n                for (let i = 0; i < headers.length; i++) {\n                  wscols.push({\n                    width: 35\n                  });\n                }\n\n                const ws = XLSX.utils.json_to_sheet(apiData);\n                ws[\"!cols\"] = wscols;\n\n                for (let i = 0; i < headers.length; i++) {\n                  console.log(i);\n                  ws[header_cells[i]].v = headers[i];\n                }\n\n                const wb = {\n                  Sheets: {\n                    data: ws\n                  },\n                  SheetNames: [\"data\"]\n                };\n                const excelBuffer = XLSX.write(wb, {\n                  bookType: \"xlsx\",\n                  type: \"array\"\n                });\n                const data = new Blob([excelBuffer], {\n                  type: fileType\n                });\n                FileSaver.saveAs(data, fileName + fileExtension);\n              });\n            });\n          });\n        });\n      });\n    });\n  }\n\n  async function updateStatus(updatedRow) {\n    let currentRows = updatedRows;\n    currentRows.push(updatedRow);\n    await setUpdatedRows(currentRows);\n  }\n\n  async function updateObservations(observations) {\n    await setObservations(observations);\n  }\n\n  async function saveChanges() {\n    for (let i = 0; i < updatedRows.length; i++) {\n      let body = {\n        incidence_number: updatedRows[i][0],\n        status_id: updatedRows[i][1],\n        type: updatedRows[i][2],\n        email: secureStorage.getItem(\"user\")\n      };\n      let options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/updateStatus\", options).then(response => response.json()).then(async json => {});\n    }\n\n    let observationsArray = [];\n    Object.entries(observations).map(async ([incidence_number, observation]) => await observationsArray.push([incidence_number, observation]));\n\n    for (let i = 0; i < observationsArray.length; i++) {\n      let body = {\n        incidence_number: observationsArray[i][0],\n        observation: observationsArray[i][1]\n      };\n      let options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/updateObservations\", options).then(response => response.json()).then(async json => {});\n    }\n\n    await setUpdatedRows([]);\n    await setUpdateData(!updateData);\n  }\n\n  document.body.style.zoom = 0.8;\n  var dataTableHeight = \"600px\";\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [updateData, /*#__PURE__*/_jsxDEV(IdleTimer, {\n      timeout: 1000 * 60 * 15,\n      onIdle: handleOnIdle,\n      debounce: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      onChange: value => setCurrentTab(currentTab)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isotracker__row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isotracker__column\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CSPTrackerLogo,\n          alt: \"CSPTrackerLogo\",\n          className: \"isoTrackerLogo__image2\",\n          style: {\n            height: \"85px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roleSelector__containerF\",\n          children: /*#__PURE__*/_jsxDEV(RoleDropDown, {\n            style: {\n              paddingLeft: \"2px\"\n            },\n            onChange: value => setCurrentRole(value),\n            roles: roles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"isotracker__table__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"isotracker__table__navBar__container\",\n        style: {\n          height: \"65px \"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"isotracker__table__navBar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: secureStorage.getItem(\"role\") === \"3D Admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"navBar__button\",\n              onClick: () => saveChanges(),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: SaveIcon,\n                alt: \"save\",\n                className: \"navBar__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 99\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"navBar__button__text\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 161\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"isotracker__table__tray__and__table__container\",\n        style: {\n          height: dataTableHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"discplines__table__table\",\n          style: {\n            height: dataTableHeight\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: dataTableHeight,\n              width: \"2200px\"\n            },\n            className: \"isotracker__table__table__container\",\n            children: /*#__PURE__*/_jsxDEV(QTrackerViewDataTable, {\n              updateObservations: updateObservations.bind(this),\n              updateData: updateDataMethod.bind(this),\n              updateStatus: updateStatus.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      className: \"actionBtns__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginTop: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action__btn\",\n          name: \"export\",\n          value: \"export\",\n          onClick: () => downloadReport(),\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PitRequestView, \"XJN0CXolzai8cj+7EYIh8F9szp0=\", false, function () {\n  return [useHistory];\n});\n\n_c = PitRequestView;\nexport default PitRequestView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PitRequestView\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/pitRequestView/pitRequestView.js"],"names":["React","useState","useEffect","NavBar","RoleDropDown","IdleTimer","useHistory","QTrackerViewDataTable","FileSaver","XLSX","PitRequestView","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","settings","licenseKey","colWidths","currentRole","setCurrentRole","currentTab","setCurrentTab","roles","setRoles","saveBtn","setSaveBtn","updatedRows","setUpdatedRows","observations","setObservations","updateData","setUpdateData","history","getItem","push","process","env","REACT_APP_PROJECT","currentUser","body","user","options","method","headers","JSON","stringify","fetch","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","setItem","catch","error","console","log","saveChanges","SaveIcon","handleOnIdle","clear","updateDataMethod","downloadReport","rows","row","i","length","incidence_number","created_at","substring","spref","name","pipe","items","scope","description","status","ar_date","accept_reject_date","items_to_report","sort","first","second","localeCompare","apiData","fileName","fileType","header_cells","fileExtension","wscols","width","ws","utils","json_to_sheet","v","wb","Sheets","SheetNames","excelBuffer","write","bookType","type","Blob","saveAs","updateStatus","updatedRow","currentRows","updateObservations","status_id","email","observationsArray","Object","entries","map","observation","document","style","zoom","dataTableHeight","value","CSPTrackerLogo","height","paddingLeft","display","bind","marginTop"],"mappings":"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","sourcesContent":["import React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport CSPTrackerLogo from \"../../assets/images/csptracker.svg\"\r\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown'\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\nimport QTrackerViewDataTable from '../../components/qtrackerViewDataTable/qtrackerViewDataTable'\r\n\r\nimport SaveIcon from \"../../assets/images/save.svg\"\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst PitRequestView = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const settings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 250,\r\n      }\r\n\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [currentTab, setCurrentTab] = useState(\"View\")\r\n    const [roles, setRoles] = useState();\r\n    const [saveBtn, setSaveBtn] = useState()\r\n    const [updatedRows, setUpdatedRows] = useState([])\r\n    const [observations, setObservations] = useState()\r\n\r\n    const [updateData, setUpdateData] = useState(false)    \r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        if(!secureStorage.getItem(\"user\")){\r\n            history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n        }\r\n        \r\n    }, [])\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })     \r\n            \r\n            \r\n        if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n            setSaveBtn(<button className=\"navBar__button\" onClick={()=> saveChanges()}><img src={SaveIcon} alt=\"save\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Save</p></button>)\r\n\r\n        }else{\r\n            setSaveBtn(null)\r\n        }\r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        let options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n\r\n    },[updateData])\r\n\r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n\r\n    async function updateDataMethod(){\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function downloadReport(){\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNWC\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n          var rows = []\r\n          var row = null\r\n            for(let i = 0; i < json.rows.length; i++){\r\n                row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), observations: json.rows[i].observations, spref: json.rows[i].spref, name: null, pipe: null, items: null, scope: null, description: json.rows[i].description}\r\n                  \r\n                  if(json.rows[i].status === 0){\r\n                    row.status = \"Pending\"\r\n                  }else if(json.rows[i].status === 1){\r\n                      row.status = \"In progress\"\r\n                  }else if(json.rows[i].status === 2){\r\n                      row.status = \"Ready\"\r\n                  }else{\r\n                      row.status = \"Rejected\"\r\n                  }\r\n\r\n                  row.ar_date = json.rows[i].accept_reject_date\r\n                \r\n                \r\n                rows.push(row)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNVN\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n            var row = null\r\n                for(let i = 0; i < json.rows.length; i++){\r\n                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), observations: json.rows[i].observations, spref: null, name: json.rows[i].name, pipe: null, items: null, scope: null, description: json.rows[i].description}\r\n                    \r\n                      if(json.rows[i].status === 0){\r\n                        row.status = \"Pending\"\r\n                      }else if(json.rows[i].status === 1){\r\n                          row.status = \"In progress\"\r\n                      }else if(json.rows[i].status === 2){\r\n                          row.status = \"Ready\"\r\n                      }else{\r\n                          row.status = \"Rejected\"\r\n                      }\r\n                      row.ar_date = json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)\r\n                      rows.push(row)\r\n                }\r\n                \r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNRI\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                var row = null\r\n                    for(let i = 0; i < json.rows.length; i++){\r\n                        row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), observations: json.rows[i].observations, spref: null, name: null, pipe: json.rows[i].pipe, items: null, scope: null, description: json.rows[i].description}\r\n                                             \r\n                        if(json.rows[i].status === 0){\r\n                        row.status = \"Pending\"\r\n                        }else if(json.rows[i].status === 1){\r\n                            row.status = \"In progress\"\r\n                        }else if(json.rows[i].status === 2){\r\n                            row.status = \"Ready\"\r\n                        }else{\r\n                            row.status = \"Rejected\"\r\n                        }\r\n                        row.ar_date = json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)\r\n                        \r\n                        rows.push(row)\r\n                    }\r\n                    \r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNRB\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json => {\r\n                    var row = null\r\n                        for(let i = 0; i < json.rows.length; i++){\r\n                            row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), observations: json.rows[i].observations, spref: null, name: null, pipe: json.rows[i].pipe, items: null, scope: null, description: json.rows[i].description}\r\n                            \r\n                              if(json.rows[i].status === 0){\r\n                                row.status = \"Pending\"\r\n                              }else if(json.rows[i].status === 1){\r\n                                  row.status = \"In progress\"\r\n                              }else if(json.rows[i].status === 2){\r\n                                  row.status = \"Ready\"\r\n                              }else{\r\n                                  row.status = \"Rejected\"\r\n                              }\r\n                            \r\n                              row.ar_date = json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)\r\n                              rows.push(row)\r\n                        }\r\n                        \r\n                        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNRIDS\", options)\r\n                        .then(response => response.json())\r\n                        .then(async json => {\r\n                        var row = null\r\n                            for(let i = 0; i < json.rows.length; i++){\r\n                                row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), observations: json.rows[i].observations, spref: null, name: json.rows[i].name, pipe: null, items: null, scope: null, description: null}\r\n                               \r\n                                  if(json.rows[i].status === 0){\r\n                                    row.status = \"Pending\"\r\n                                  }else if(json.rows[i].status === 1){\r\n                                      row.status = \"In progress\"\r\n                                  }else if(json.rows[i].status === 2){\r\n                                      row.status = \"Ready\"\r\n                                  }else{\r\n                                      row.status = \"Rejected\"\r\n                                  }\r\n                                \r\n                                  row.ar_date = json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)\r\n                                  rows.push(row)\r\n                            }\r\n                            \r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getRP\", options)\r\n                            .then(response => response.json())\r\n                            .then(async json => {\r\n                            var row = null\r\n                                for(let i = 0; i < json.rows.length; i++){\r\n                                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), observations: json.rows[i].observations, spref: null, name: null, pipe: null, items: json.rows[i].items_to_report, scope: json.rows[i].scope, description: json.rows[i].description}\r\n                                    \r\n                                      if(json.rows[i].status === 0){\r\n                                        row.status = \"Pending\"\r\n                                      }else if(json.rows[i].status === 1){\r\n                                          row.status = \"In progress\"\r\n                                      }else if(json.rows[i].status === 2){\r\n                                          row.status = \"Ready\"\r\n                                      }else{\r\n                                          row.status = \"Rejected\"\r\n                                      }\r\n                                    \r\n                                      row.ar_date = json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)\r\n                                    rows.push(row)\r\n                                }\r\n\r\n                                // Sort the array based on the second element\r\n                                rows.sort(function(first, second) {\r\n                                  return second.created_at.localeCompare(first.created_at);\r\n                                });\r\n                                \r\n                                const headers = [\"Reference\", \"User\", \"Date\", \"Observations\", \"SPREF\", \"Name\", \"Pipe\", \"Items\", \"Scope\", \"Description\", \"Status\", \"Accepted/Rejected date\"]\r\n                                const apiData = rows\r\n                                const fileName = \"QueryTracker report\"\r\n\r\n                                const fileType =\r\n                                \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n                                const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1']\r\n                                const fileExtension = \".xlsx\";\r\n\r\n                                let wscols = []\r\n                                for(let i = 0; i < headers.length; i++){\r\n                                    wscols.push({width:35})\r\n                                }\r\n\r\n                                const ws = XLSX.utils.json_to_sheet(apiData);   \r\n                                ws[\"!cols\"] = wscols\r\n                                for(let i = 0; i < headers.length; i++){\r\n                                    console.log(i)\r\n                                    ws[header_cells[i]].v = headers[i]\r\n                                }\r\n                                const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n                                const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n                                const data = new Blob([excelBuffer], { type: fileType });\r\n                                FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n                            })\r\n\r\n                        })\r\n\r\n                    })\r\n\r\n                })\r\n\r\n            })\r\n            \r\n        })\r\n    }\r\n\r\n    async function updateStatus(updatedRow){\r\n        let currentRows = updatedRows\r\n        currentRows.push(updatedRow)\r\n        await setUpdatedRows(currentRows)\r\n    }\r\n\r\n    async function updateObservations(observations){\r\n        await setObservations(observations)\r\n    }\r\n\r\n    async function saveChanges(){\r\n        for(let i = 0; i < updatedRows.length; i++){\r\n\r\n            let body = {\r\n                incidence_number: updatedRows[i][0],\r\n                status_id: updatedRows[i][1],\r\n                type: updatedRows[i][2],\r\n                email: secureStorage.getItem(\"user\")\r\n              }\r\n              let options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n              }\r\n              \r\n              fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/updateStatus\", options)\r\n              .then(response => response.json())\r\n              .then(async json => {\r\n                \r\n              })\r\n        }\r\n        \r\n        let observationsArray = []\r\n\r\n        Object.entries(observations)\r\n        .map(async ([incidence_number, observation]) => \r\n            \r\n            await observationsArray.push([incidence_number, observation])\r\n        )\r\n\r\n        for(let i = 0; i < observationsArray.length; i++){\r\n            let body = {\r\n                incidence_number: observationsArray[i][0],\r\n                observation: observationsArray[i][1],\r\n              }\r\n              let options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n              }\r\n              \r\n              fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/updateObservations\", options)\r\n              .then(response => response.json())\r\n              .then(async json => {\r\n                \r\n              })\r\n        }\r\n        \r\n        await setUpdatedRows([])\r\n        await setUpdateData(!updateData)\r\n        \r\n    }\r\n\r\n    document.body.style.zoom = 0.8\r\n\r\n    var dataTableHeight = \"600px\"\r\n\r\n\r\n    return(\r\n        \r\n        <body>\r\n            {updateData}\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n            \r\n            <div className=\"isotracker__row\">\r\n                  <div className=\"isotracker__column\">\r\n                      <img src={CSPTrackerLogo} alt=\"CSPTrackerLogo\" className=\"isoTrackerLogo__image2\" style={{height:\"85px\"}}/>\r\n                      \r\n                      <div className=\"roleSelector__containerF\">\r\n                              <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                      </div>\r\n                      \r\n                  </div>\r\n            </div>\r\n            <table className=\"isotracker__table__container\">\r\n                      <tr className=\"isotracker__table__navBar__container\" style={{height:\"65px \"}}>\r\n                          <th  className=\"isotracker__table__navBar\">\r\n                              <div style={{display:\"flex\"}}>\r\n                                  {secureStorage.getItem(\"role\") === \"3D Admin\" &&\r\n                                  <button className=\"navBar__button\" onClick={()=> saveChanges()}><img src={SaveIcon} alt=\"save\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Save</p></button>\r\n                                  }\r\n                              </div>                           \r\n                               \r\n                          </th>\r\n                      </tr>\r\n                      <tr className=\"isotracker__table__tray__and__table__container\" style={{height: dataTableHeight}}>\r\n                          <td className=\"discplines__table__table\" style={{height: dataTableHeight}} >\r\n                              <div  style={{height: dataTableHeight, width:\"2200px\"}} className=\"isotracker__table__table__container\">\r\n                                <QTrackerViewDataTable updateObservations={updateObservations.bind(this)} updateData={updateDataMethod.bind(this)} updateStatus={updateStatus.bind(this)}/>\r\n                              </div>\r\n                          </td>\r\n                          \r\n                      </tr>\r\n                  </table>\r\n                  <center className=\"actionBtns__container\">   \r\n                    <div style={{display:\"flex\", marginTop:\"10px\"}}>\r\n                        <button className=\"action__btn\" name=\"export\" value=\"export\" onClick={() => downloadReport()}>Export</button>\r\n                    </div>\r\n                    \r\n                  </center>\r\n                  <br></br>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default PitRequestView;"]},"metadata":{},"sourceType":"module"}