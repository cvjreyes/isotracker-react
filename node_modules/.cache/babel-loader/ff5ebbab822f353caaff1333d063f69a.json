{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\pipingExcel\\\\pipingExcel.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PipingExcel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      progressData: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/gpipes\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n      console.log(json.rows);\n      rows.push({\n        \"Week\": \"Week\",\n        \"Estimated\": \"Estimated\"\n      });\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"Week\": json.rows[i].week,\n          \"Estimated\": json.rows[i].estimated\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        progressData: rows,\n        selectedRows: []\n      });\n    });\n  }\n\n  addRowProgress() {\n    let rows = this.state.progressData;\n    rows.push({\n      \"Week\": \"\",\n      \"Estimated\": \"\"\n    });\n    this.setState({\n      progressData: rows\n    });\n  }\n\n  submitChangesProgress() {\n    const body = {\n      rows: this.state.progressData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/piping/progress\", options).then(response => response.json()).then(json => {\n      if (json.error) {\n        console.log(\"error\");\n      } else {\n        console.log(\"success\");\n      }\n    });\n  }\n\n  render() {\n    const progressSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 195 //... other options\n\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      style: {\n        marginLeft: \"35%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hot-app\",\n        children: [/*#__PURE__*/_jsxDEV(HotTable, {\n          data: this.state.progressData,\n          colHeaders: true,\n          rowHeaders: true,\n          width: \"465\",\n          height: \"500\",\n          settings: progressSettings,\n          manualColumnResize: true,\n          manualRowResize: true,\n          columns: [{\n            data: \"Week\",\n            type: \"numeric\"\n          }, {\n            data: \"Estimated\",\n            type: \"numeric\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"180px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-info\",\n            onClick: () => this.addRowProgress(),\n            style: {\n              marginRight: \"5px\",\n              fontSize: \"16px\",\n              width: \"60px\"\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-success\",\n            onClick: () => this.submitChangesProgress(),\n            style: {\n              marginRight: \"5px\",\n              fontSize: \"16px\",\n              width: \"60px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default PipingExcel;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/pipingExcel/pipingExcel.js"],"names":["React","HotTable","PipingExcel","Component","state","searchText","searchedColumn","progressData","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","row","console","log","push","i","length","week","estimated","setState","addRowProgress","submitChangesProgress","body","JSON","stringify","error","render","progressSettings","licenseKey","colWidths","marginLeft","data","type","marginRight","fontSize","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\n\r\n\r\nclass PipingExcel extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    progressData: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: []\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n\r\n  fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/gpipes\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      console.log(json.rows)\r\n      rows.push({\"Week\": \"Week\", \"Estimated\": \"Estimated\"})\r\n      for(let i = 0; i < json.rows.length; i++){\r\n          row = {\"Week\": json.rows[i].week, \"Estimated\": json.rows[i].estimated}\r\n\r\n          rows.push(row)\r\n      }\r\n      this.setState({progressData : rows, selectedRows: []});\r\n\r\n  })\r\n  }\r\n\r\n  \r\n  addRowProgress(){\r\n    let rows = this.state.progressData\r\n    rows.push({\"Week\": \"\", \"Estimated\": \"\"})\r\n    this.setState({progressData: rows})\r\n  }\r\n\r\n  submitChangesProgress(){\r\n    const body = {\r\n      rows: this.state.progressData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/piping/progress\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n      if(json.error){\r\n        console.log(\"error\")\r\n      }else{\r\n        console.log(\"success\")\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n  \r\n      const progressSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 195,\r\n        //... other options\r\n      }\r\n\r\n      return (\r\n\r\n          <div className=\"column\" style={{marginLeft:\"35%\"}}>\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.progressData}\r\n                colHeaders={true}\r\n                rowHeaders={true}\r\n                width=\"465\"\r\n                height=\"500\"\r\n                settings={progressSettings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Week\", type:\"numeric\"}, {data: \"Estimated\", type:\"numeric\"}]}\r\n              />\r\n              <br></br>\r\n              <div style={{marginLeft:\"180px\"}}>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowProgress()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesProgress()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\"}}>Save</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default PipingExcel;"]},"metadata":{},"sourceType":"module"}