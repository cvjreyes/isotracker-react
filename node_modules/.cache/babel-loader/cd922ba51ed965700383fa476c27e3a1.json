{"ast":null,"code":"var isObject = require('../internals/is-object');\n\nvar setPrototypeOf = require('../internals/object-set-prototype-of'); // makes subclassing work correct for wrapped built-ins\n\n\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if ( // it can work only with native `setPrototypeOf`\n  setPrototypeOf && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n  typeof (NewTarget = dummy.constructor) == 'function' && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/core-js/internals/inherit-if-required.js"],"names":["isObject","require","setPrototypeOf","module","exports","$this","dummy","Wrapper","NewTarget","NewTargetPrototype","constructor","prototype"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,sCAAD,CAA5B,C,CAEA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiC;AAChD,MAAIC,SAAJ,EAAeC,kBAAf;AACA,OACE;AACAP,EAAAA,cAAc,IACd;AACA,UAAQM,SAAS,GAAGF,KAAK,CAACI,WAA1B,KAA0C,UAF1C,IAGAF,SAAS,KAAKD,OAHd,IAIAP,QAAQ,CAACS,kBAAkB,GAAGD,SAAS,CAACG,SAAhC,CAJR,IAKAF,kBAAkB,KAAKF,OAAO,CAACI,SAPjC,EAQET,cAAc,CAACG,KAAD,EAAQI,kBAAR,CAAd;AACF,SAAOJ,KAAP;AACD,CAZD","sourcesContent":["var isObject = require('../internals/is-object');\r\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\r\n\r\n// makes subclassing work correct for wrapped built-ins\r\nmodule.exports = function ($this, dummy, Wrapper) {\r\n  var NewTarget, NewTargetPrototype;\r\n  if (\r\n    // it can work only with native `setPrototypeOf`\r\n    setPrototypeOf &&\r\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\r\n    typeof (NewTarget = dummy.constructor) == 'function' &&\r\n    NewTarget !== Wrapper &&\r\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\r\n    NewTargetPrototype !== Wrapper.prototype\r\n  ) setPrototypeOf($this, NewTargetPrototype);\r\n  return $this;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}