{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\csptrackerRequestPopUp\\\\csptrackerRequestPopUp.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-awesome-modal';\nimport './csptrackerRequestPopUp.css';\nimport Request from \"../../assets/images/hand_requests.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\nexport default class CSPTrackerRequestPopUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      tag: null,\n      pid: null,\n      sptag: null,\n      pidlist: null\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/pids\", options).then(response => response.json()).then(async json => {\n      let pids = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        pids.push(json.rows[i].pid);\n      }\n    });\n  }\n\n  async openModal() {\n    await this.setState({\n      visible: true,\n      tag: null,\n      pid: null,\n      sptag: null\n    });\n  }\n\n  async closeModal() {\n    await this.setState({\n      visible: false,\n      tag: null,\n      pid: null,\n      sptag: null\n    });\n    this.refs.tag.value = null;\n    this.refs.pid.value = null;\n    this.refs.sptag.value = null;\n  }\n\n  async request() {\n    if (this.state.tag && this.state.pid && this.state.sptag) {\n      const body = {\n        tag: this.state.tag,\n        pid: this.state.pid,\n        sptag: this.state.sptag,\n        user: secureStorage.getItem(\"user\")\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/requestSP\", options).then(response => response.json()).then(json => {\n        if (json.success) {\n          this.props.successRequest();\n        } else {\n          this.props.existsErrorRequest();\n        }\n      });\n      this.closeModal();\n    } else {\n      this.props.errorBlankRequest();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: \"5px\",\n        marginLeft: \"5px\",\n        float: \"right\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => this.openModal(),\n        style: {\n          width: \"150px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Request,\n          alt: \"request\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"4px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 109\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Request SP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 201\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          visible: this.state.visible,\n          width: \"450\",\n          height: \"320\",\n          effect: \"fadeInUp\",\n          onClickAway: () => this.closeModal(),\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            className: \"popUp__title\",\n            style: {\n              marginBottom: \"30px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Request SP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 89\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"LINE ID\",\n              id: \"tag\",\n              className: \"popUp__input__text\",\n              ref: \"tag\",\n              style: {\n                marginBottom: \"20px\",\n                color: 'black'\n              },\n              value: this.state.tag,\n              onChange: e => this.setState({\n                tag: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"P&ID\",\n              id: \"pid\",\n              className: \"popUp__input__text\",\n              ref: \"pid\",\n              style: {\n                marginBottom: \"20px\",\n                color: \"black\"\n              },\n              value: this.state.pid,\n              onChange: e => this.setState({\n                pid: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"TAG SP\",\n              id: \"sptag\",\n              className: \"popUp__input__text\",\n              ref: \"sptag\",\n              style: {\n                marginBottom: \"30px\",\n                color: \"black\"\n              },\n              value: this.state.sptag,\n              onChange: e => this.setState({\n                sptag: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.request(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-danger\",\n              onClick: () => this.closeModal(),\n              style: {\n                marginLeft: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/csptrackerRequestPopUp/csptrackerRequestPopUp.js"],"names":["React","Component","Modal","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","CSPTrackerRequestPopUp","constructor","props","state","visible","tag","pid","sptag","pidlist","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","pids","i","rows","length","push","openModal","setState","closeModal","refs","value","request","body","user","getItem","JSON","stringify","success","successRequest","existsErrorRequest","errorBlankRequest","render","marginRight","marginLeft","float","width","Request","marginBottom","color","e","target","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport './csptrackerRequestPopUp.css';\r\nimport Request from \"../../assets/images/hand_requests.svg\";\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nexport default class CSPTrackerRequestPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false,\r\n            tag: null,\r\n            pid: null,\r\n            sptag: null,\r\n            pidlist: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/pids\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            let pids = []\r\n            for(let i = 0; i < json.rows.length; i++){\r\n                pids.push(json.rows[i].pid)\r\n            }\r\n        }) \r\n    \r\n    }\r\n\r\n    async openModal() {\r\n        await this.setState({\r\n            visible : true,\r\n            tag: null,\r\n            pid: null,\r\n            sptag: null\r\n        });\r\n    }\r\n\r\n    async closeModal() {\r\n        await this.setState({\r\n            visible : false,\r\n            tag: null,\r\n            pid: null,\r\n            sptag: null\r\n        });\r\n\r\n        this.refs.tag.value = null;\r\n        this.refs.pid.value = null;\r\n        this.refs.sptag.value = null;\r\n\r\n    }\r\n\r\n    async request(){\r\n        if(this.state.tag && this.state.pid && this.state.sptag){\r\n            const body ={\r\n                tag : this.state.tag,\r\n                pid: this.state.pid,\r\n                sptag: this.state.sptag,\r\n                user: secureStorage.getItem(\"user\")\r\n              }\r\n              const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n              await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/requestSP\", options)\r\n                  .then(response => response.json())\r\n                  .then(json => {\r\n                      if(json.success){\r\n                          this.props.successRequest()\r\n                      }else{\r\n                          this.props.existsErrorRequest()\r\n                      }\r\n                  })\r\n                  this.closeModal()\r\n        }else{\r\n            this.props.errorBlankRequest()\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginRight:\"5px\", marginLeft:\"5px\", float:\"right\"}}>\r\n                <button className=\"navBar__button\" onClick={() => this.openModal()} style={{width:\"150px\"}}><img src={Request} alt=\"request\" className=\"navBar__icon\" style={{marginRight:\"4px\"}}></img><p className=\"navBar__button__text\">Request SP</p></button>\r\n                <div>\r\n                    <Modal visible={this.state.visible} width=\"450\" height=\"320\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                        <center className=\"popUp__title\" style={{marginBottom: \"30px\"}}><h3>Request SP</h3></center>\r\n                        <div className=\"request__container\">\r\n                            <input type=\"text\" placeholder=\"LINE ID\" id=\"tag\" className=\"popUp__input__text\" ref=\"tag\" style={{marginBottom: \"20px\", color:'black'}} value={this.state.tag} onChange={(e) => this.setState({tag: e.target.value})} ></input>\r\n                            <input type=\"text\" placeholder=\"P&ID\" id=\"pid\" className=\"popUp__input__text\" ref=\"pid\" style={{marginBottom: \"20px\", color:\"black\"}} value={this.state.pid} onChange={(e) => this.setState({pid: e.target.value})} ></input>\r\n                            <input type=\"text\" placeholder=\"TAG SP\" id=\"sptag\"className=\"popUp__input__text\" ref=\"sptag\" style={{marginBottom: \"30px\", color:\"black\"}} value={this.state.sptag} onChange={(e) => this.setState({sptag: e.target.value})} ></input>\r\n                            <button class=\"btn btn-sm btn-success\" onClick={() => this.request()} style={{marginRight:\"5px\", fontSize:\"16px\"}}>Submit</button>\r\n                            <button class=\"btn btn-sm btn-danger\" onClick={() => this.closeModal()} style={{marginLeft:\"5px\", fontSize:\"16px\"}}>Cancel</button>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}