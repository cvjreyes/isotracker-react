{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexport default function convertMapToSchema(map) {\n  var schema = {};\n\n  for (var _iterator = Object.keys(map), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var key = _ref;\n    var prop = map[key];\n    var type = void 0;\n\n    if ((typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) === 'object') {\n      prop = Object.keys(map[key])[0];\n      type = convertMapToSchema(map[key][prop]);\n    }\n\n    schema[key] = {\n      prop: prop\n    };\n\n    if (type) {\n      schema[key].type = type;\n    }\n  }\n\n  return schema;\n}","map":{"version":3,"sources":["../source/convertMapToSchema.js"],"names":["schema","key","Object","prop","map","type","convertMapToSchema"],"mappings":";;;;;;AAAA,eAAe,SAAA,kBAAA,CAAA,GAAA,EAAiC;AAC/C,MAAMA,MAAAA,GAAN,EAAA;;AACA,OAAA,IAAA,SAAA,GAAkBE,MAAAA,CAAAA,IAAAA,CAAlB,GAAkBA,CAAlB,EAAA,QAAA,GAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,SAAA,GAAA,QAAA,GAAA,SAAA,GAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,IAAoC;AAAA,QAAA,IAAA;;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,EAAA,IAAA,SAAA,CAAA,MAAA,EAAA;AAAA,MAAA,IAAA,GAAA,SAAA,CAAA,EAAA,EAAA,CAAA;AAAA,KAAA,MAAA;AAAA,MAAA,EAAA,GAAA,SAAA,CAAA,IAAA,EAAA;AAAA,UAAA,EAAA,CAAA,IAAA,EAAA;AAAA,MAAA,IAAA,GAAA,EAAA,CAAA,KAAA;AAAA;;AAAA,QAAzBD,GAAyB,GAAA,IAAA;AACnC,QAAIE,IAAAA,GAAOC,GAAAA,CAAX,GAAWA,CAAX;AACA,QAAIC,IAAAA,GAAAA,KAAJ,CAAA;;AACA,QAAI,CAAA,OAAA,IAAA,KAAA,WAAA,GAAA,WAAA,GAAA,OAAA,CAAA,IAAA,CAAA,MAAJ,QAAA,EAA8B;AAC7BF,MAAAA,IAAAA,GAAOD,MAAAA,CAAAA,IAAAA,CAAYE,GAAAA,CAAZF,GAAYE,CAAZF,EAAPC,CAAOD,CAAPC;AACAE,MAAAA,IAAAA,GAAOC,kBAAAA,CAAmBF,GAAAA,CAAAA,GAAAA,CAAAA,CAA1BC,IAA0BD,CAAnBE,CAAPD;AACA;;AACDL,IAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GAAc;AACbG,MAAAA,IAAAA,EAAAA;AADa,KAAdH;;AAGA,QAAA,IAAA,EAAU;AACTA,MAAAA,MAAAA,CAAAA,GAAAA,CAAAA,CAAAA,IAAAA,GAAAA,IAAAA;AACA;AACD;;AACD,SAAA,MAAA;AACA","sourcesContent":["export default function convertMapToSchema(map) {\r\n\tconst schema = {}\r\n\tfor (const key of Object.keys(map)) {\r\n\t\tlet prop = map[key]\r\n\t\tlet type\r\n\t\tif (typeof prop === 'object') {\r\n\t\t\tprop = Object.keys(map[key])[0]\r\n\t\t\ttype = convertMapToSchema(map[key][prop])\r\n\t\t}\r\n\t\tschema[key] = {\r\n\t\t\tprop\r\n\t\t}\r\n\t\tif (type) {\r\n\t\t\tschema[key].type = type\r\n\t\t}\r\n\t}\r\n\treturn schema\r\n}"]},"metadata":{},"sourceType":"module"}