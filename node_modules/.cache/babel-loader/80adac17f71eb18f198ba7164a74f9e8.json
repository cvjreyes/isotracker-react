{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\estimatedPipesExcel\\\\estimatedPipesExcel.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport \"./estimatedPipesExcel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EstimatedPipesExcel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      diameters: [],\n      areas: [],\n      trains: [\"01\", \"02\", \"03\", \"04\", \"05\"],\n      line_refs: [],\n      new_data: {},\n      warning: false,\n      empty: false,\n      tags: [],\n      designers: [],\n      owners: []\n    };\n\n    this.handleChange = async (changes, source) => {\n      if (source !== 'loadData') {\n        let data_aux = this.state.data;\n\n        for (let i = 0; i < changes.length; i += 4) {\n          if (changes[i][1] !== \"Owner IFC\" && changes[i][1] !== \"Owner IsoTracker\") {} else {}\n        }\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/areas\", options).then(response => response.json()).then(json => {\n      let areas_options = [];\n\n      for (let i = 0; i < json.length; i++) {\n        areas_options.push(json[i].name);\n      }\n\n      this.setState({\n        areas: areas_options\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/diameters\", options).then(response => response.json()).then(json => {\n      let diameters = [];\n\n      for (let i = 0; i < json.diameters.length; i++) {\n        diameters.push(json.diameters[i].diameter);\n      }\n\n      this.setState({\n        diameters: diameters\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/lineRefs\", options).then(response => response.json()).then(json => {\n      let line_refs = [];\n\n      for (let i = 0; i < json.line_refs.length; i++) {\n        line_refs.push(json.line_refs[i].line_ref);\n      }\n\n      this.setState({\n        line_refs: line_refs\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/designers\", options).then(response => response.json()).then(json => {\n      let designers = [];\n\n      for (let i = 0; i < json.designers.length; i++) {\n        designers.push(json.designers[i].name);\n      }\n\n      this.setState({\n        designers: designers\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/modelledEstimatedPipes\", options).then(response => response.json()).then(async json => {\n      let rows = [];\n      let tags = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        rows.push({\n          \"Line reference\": json.rows[i].line_reference,\n          \"Tag\": json.rows[i].tag,\n          \"Owner IFC\": json.rows[i].owner_ifc,\n          \"Owner IsoTracker\": json.rows[i].owner_iso,\n          \"Unit\": json.rows[i].unit,\n          \"Area\": json.rows[i].area,\n          \"Fluid\": json.rows[i].fluid,\n          \"Seq\": json.rows[i].seq,\n          \"Spec\": json.rows[i].spec,\n          \"Type\": json.rows[i].type,\n          \"Diameter\": json.rows[i].diameter,\n          \"Insulation\": json.rows[i].insulation,\n          \"Train\": json.rows[i].train,\n          \"Status\": json.rows[i].status,\n          \"id\": json.rows[i].id\n        });\n        tags.push(json.rows[i].tag);\n      }\n\n      await this.setState({\n        data: rows,\n        tags: tags\n      });\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/modelledEstimatedPipes\", options).then(response => response.json()).then(async json => {\n        let rows = [];\n\n        for (let i = 0; i < json.rows.length; i++) {\n          rows.push({\n            \"Line reference\": json.rows[i].line_reference,\n            \"Tag\": json.rows[i].tag,\n            \"Owner IFC\": json.rows[i].owner_ifc,\n            \"Owner IsoTracker\": json.rows[i].owner_iso,\n            \"Unit\": json.rows[i].unit,\n            \"Area\": json.rows[i].area,\n            \"Fluid\": json.rows[i].fluid,\n            \"Seq\": json.rows[i].seq,\n            \"Spec\": json.rows[i].spec,\n            \"Type\": json.rows[i].type,\n            \"Diameter\": json.rows[i].diameter,\n            \"Insulation\": json.rows[i].insulation,\n            \"Train\": json.rows[i].train,\n            \"Status\": json.rows[i].status,\n            \"id\": json.rows[i].id\n          });\n        }\n\n        await this.setState({\n          data: rows\n        });\n      });\n    }\n  }\n\n  addRow() {\n    let rows = this.state.data;\n    rows.push({\n      \"Line reference\": \"\",\n      \"Tag\": \"\",\n      \"Owner IFC\": \"\",\n      \"Owner IsoTracker\": \"\",\n      \"Unit\": \"\",\n      \"Area\": \"\",\n      \"Fluid\": \"\",\n      \"Seq\": \"\",\n      \"Spec\": \"\",\n      \"Type\": \"\",\n      \"Diameter\": \"\",\n      \"Insulation\": \"\",\n      \"Train\": \"\",\n      \"Status\": \"\"\n    });\n    this.setState({\n      data: rows\n    });\n  }\n\n  async submitChanges() {\n    let new_rows = [];\n    Object.entries(this.state.new_data).map(([key, value]) => new_rows.push(value));\n\n    for (let i = 0; i < new_rows.length; i++) {\n      if (new_rows[i][\"Line reference\"] === \"\" || new_rows[i].Tag === \"\" || new_rows[i].Unit === \"\" || new_rows[i].Area === \"\" || new_rows[i].Fluid === \"\" || new_rows[i].Seq === \"\" || new_rows[i].Spec === \"\" || new_rows[i].Diameter === \"\" || new_rows[i].Insulation === \"\" || new_rows[i].Train === \"\" || new_rows[i][\"Line reference\"] === null || new_rows[i].Tag === null || new_rows[i].Unit === null || new_rows[i].Area === null || new_rows[i].Fluid === null || new_rows[i].Seq === null || new_rows[i].Spec === null || new_rows[i].Diameter === null || new_rows[i].Insulation === null || new_rows[i].Train === null) {\n        await this.setState({\n          empty: true\n        });\n        new_rows.splice(i, 1);\n      }\n    }\n\n    const body = {\n      rows: new_rows\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitModelledEstimatedPipes\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        this.props.success();\n      }\n\n      if (this.state.warning) {\n        this.props.estimatedWarning();\n      }\n\n      if (this.state.empty) {\n        this.props.estimatedEmpty();\n      }\n\n      this.setState({\n        new_data: [],\n        warning: false,\n        empty: false\n      });\n    });\n    await this.props.updateData();\n  }\n\n  render() {\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: [180, 400, 240, 240, 70, 70, 70, 100, 95, 80, 105, 110, 70, 120],\n      fontSize: 24 //... other options\n\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hot-app\",\n        children: [/*#__PURE__*/_jsxDEV(HotTable, {\n          data: this.state.data,\n          colHeaders: [\"<b className='header'>Line reference</b>\", \"<b>Tag</b>\", \"<b>Owner IFC</b>\", \"<b>Owner IsoTracker</b>\", \"<b>Unit</b>\", \"<b>Area</b>\", \"<b>Fluid</b>\", \"<b>Seq</b>\", \"<b>Spec</b>\", \"<b>Type</b>\", \"<b>Diameter</b>\", \"<b>Insulation</b>\", \"<b>Train</b>\", \"<b>Status</b>\"],\n          rowHeaders: true,\n          rowHeights: \"30px\",\n          columnHeaderHeight: 30,\n          width: \"100%\",\n          height: \"520\",\n          settings: settings,\n          manualColumnResize: true,\n          manualRowResize: true,\n          columns: [{\n            data: \"Line reference\",\n            type: 'dropdown',\n            source: this.state.line_refs,\n            strict: true\n          }, {\n            data: \"Tag\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Owner IFC\",\n            type: 'dropdown',\n            source: this.state.designers,\n            strict: true\n          }, {\n            data: \"Owner IsoTracker\",\n            type: 'dropdown',\n            source: this.state.designers,\n            strict: true\n          }, {\n            data: \"Unit\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Area\",\n            type: 'dropdown',\n            source: this.state.areas,\n            strict: true\n          }, {\n            data: \"Fluid\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Seq\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Spec\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Type\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Diameter\",\n            type: 'dropdown',\n            source: this.state.diameters,\n            strict: true\n          }, {\n            data: \"Insulation\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Train\",\n            type: 'dropdown',\n            source: this.state.trains,\n            strict: true\n          }, {\n            data: \"Status\",\n            type: 'text',\n            readOnly: true\n          }],\n          filters: true,\n          dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar'],\n          afterChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"695px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-info\",\n            onClick: () => this.addRow(),\n            style: {\n              marginRight: \"25px\",\n              fontSize: \"16px\",\n              width: \"160px\",\n              borderRadius: \"10px\"\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-success\",\n            onClick: () => this.submitChanges(),\n            style: {\n              marginRight: \"5px\",\n              fontSize: \"16px\",\n              width: \"160px\",\n              borderRadius: \"10px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default EstimatedPipesExcel;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/estimatedPipesExcel/estimatedPipesExcel.js"],"names":["React","HotTable","EstimatedPipesExcel","Component","state","searchText","searchedColumn","data","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","diameters","areas","trains","line_refs","new_data","warning","empty","tags","designers","owners","handleChange","changes","source","data_aux","i","length","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","areas_options","push","name","setState","diameter","line_ref","rows","line_reference","tag","owner_ifc","owner_iso","unit","area","fluid","seq","spec","type","insulation","train","status","id","componentDidUpdate","prevProps","prevState","addRow","submitChanges","new_rows","Object","entries","map","key","value","Tag","Unit","Area","Fluid","Seq","Spec","Diameter","Insulation","Train","splice","body","JSON","stringify","success","estimatedWarning","estimatedEmpty","render","settings","licenseKey","colWidths","fontSize","strict","readOnly","marginLeft","marginRight","width","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,yCAAP;AACA,OAAO,2BAAP;;;AAEA,MAAMC,mBAAN,SAAkCF,KAAK,CAACG,SAAxC,CAAiD;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,cAAc,EAAE,EAFV;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,UAJV;AAKNC,MAAAA,YAAY,EAAE,EALR;AAMNC,MAAAA,gBAAgB,EAAE,EANZ;AAONC,MAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI,UAPjB;AAQNC,MAAAA,QAAQ,EAAE,EARJ;AASNC,MAAAA,QAAQ,EAAG,IATL;AAUNC,MAAAA,SAAS,EAAE,EAVL;AAWNC,MAAAA,KAAK,EAAE,EAXD;AAYNC,MAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAZF;AAaNC,MAAAA,SAAS,EAAE,EAbL;AAcNC,MAAAA,QAAQ,EAAE,EAdJ;AAeNC,MAAAA,OAAO,EAAE,KAfH;AAgBNC,MAAAA,KAAK,EAAE,KAhBD;AAiBNC,MAAAA,IAAI,EAAE,EAjBA;AAkBNC,MAAAA,SAAS,EAAE,EAlBL;AAmBNC,MAAAA,MAAM,EAAE;AAnBF,KADuC;;AAAA,SAiK/CC,YAjK+C,GAiKhC,OAAMC,OAAN,EAAeC,MAAf,KAAyB;AACtC,UAAIA,MAAM,KAAK,UAAf,EAA0B;AACxB,YAAIC,QAAQ,GAAG,KAAKzB,KAAL,CAAWG,IAA1B;;AACA,aAAI,IAAIuB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,OAAO,CAACI,MAA3B,EAAmCD,CAAC,IAAE,CAAtC,EAAwC;AACtC,cAAGH,OAAO,CAACG,CAAD,CAAP,CAAW,CAAX,MAAkB,WAAlB,IAAiCH,OAAO,CAACG,CAAD,CAAP,CAAW,CAAX,MAAkB,kBAAtD,EAAyE,CAExE,CAFD,MAEK,CAEJ;AAEJ;AAEA;AACF,KA9K8C;AAAA;;AAuBxB,QAAjBE,iBAAiB,GAAE;AAEvB,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFG,KAAhB;AAQFC,IAAAA,KAAK,CAAC,YAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAtB,GAAuC,GAAvC,GAA2CF,OAAO,CAACC,GAAR,CAAYE,mBAAvD,GAA2E,YAA5E,EAA0FP,OAA1F,CAAL,CACGQ,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZ,UAAIC,aAAa,GAAG,EAApB;;AACA,WAAI,IAAId,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGa,IAAI,CAACZ,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAClCc,QAAAA,aAAa,CAACC,IAAd,CAAmBF,IAAI,CAACb,CAAD,CAAJ,CAAQgB,IAA3B;AACD;;AACD,WAAKC,QAAL,CAAc;AAAC9B,QAAAA,KAAK,EAAG2B;AAAT,OAAd;AAEH,KATD;AAWA,UAAMR,KAAK,CAAC,YAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAtB,GAAuC,GAAvC,GAA2CF,OAAO,CAACC,GAAR,CAAYE,mBAAvD,GAA2E,gBAA5E,EAA8FP,OAA9F,CAAL,CACLQ,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAE,IAAI,IAAI;AACZ,UAAI3B,SAAS,GAAG,EAAhB;;AACA,WAAI,IAAIc,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGa,IAAI,CAAC3B,SAAL,CAAee,MAAlC,EAA0CD,CAAC,EAA3C,EAA8C;AAC5Cd,QAAAA,SAAS,CAAC6B,IAAV,CAAeF,IAAI,CAAC3B,SAAL,CAAec,CAAf,EAAkBkB,QAAjC;AACD;;AACD,WAAKD,QAAL,CAAc;AAAC/B,QAAAA,SAAS,EAAGA;AAAb,OAAd;AAED,KATK,CAAN;AAWA,UAAMoB,KAAK,CAAC,YAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAtB,GAAuC,GAAvC,GAA2CF,OAAO,CAACC,GAAR,CAAYE,mBAAvD,GAA2E,eAA5E,EAA6FP,OAA7F,CAAL,CACLQ,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAE,IAAI,IAAI;AACZ,UAAIxB,SAAS,GAAG,EAAhB;;AACA,WAAI,IAAIW,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGa,IAAI,CAACxB,SAAL,CAAeY,MAAlC,EAA0CD,CAAC,EAA3C,EAA8C;AAC5CX,QAAAA,SAAS,CAAC0B,IAAV,CAAeF,IAAI,CAACxB,SAAL,CAAeW,CAAf,EAAkBmB,QAAjC;AACD;;AACD,WAAKF,QAAL,CAAc;AAAC5B,QAAAA,SAAS,EAAGA;AAAb,OAAd;AAED,KATK,CAAN;AAWA,UAAMiB,KAAK,CAAC,YAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAtB,GAAuC,GAAvC,GAA2CF,OAAO,CAACC,GAAR,CAAYE,mBAAvD,GAA2E,gBAA5E,EAA8FP,OAA9F,CAAL,CACLQ,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAE,IAAI,IAAI;AACZ,UAAInB,SAAS,GAAG,EAAhB;;AACA,WAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGa,IAAI,CAACnB,SAAL,CAAeO,MAAlC,EAA0CD,CAAC,EAA3C,EAA8C;AAC5CN,QAAAA,SAAS,CAACqB,IAAV,CAAeF,IAAI,CAACnB,SAAL,CAAeM,CAAf,EAAkBgB,IAAjC;AACD;;AACD,WAAKC,QAAL,CAAc;AAACvB,QAAAA,SAAS,EAAGA;AAAb,OAAd;AAED,KATK,CAAN;AAWA,UAAMY,KAAK,CAAC,YAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAtB,GAAuC,GAAvC,GAA2CF,OAAO,CAACC,GAAR,CAAYE,mBAAvD,GAA2E,yBAA5E,EAAuGP,OAAvG,CAAL,CACLQ,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEA,MAAME,IAAN,IAAc;AAClB,UAAIO,IAAI,GAAG,EAAX;AACA,UAAI3B,IAAI,GAAG,EAAX;;AACA,WAAI,IAAIO,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGa,IAAI,CAACO,IAAL,CAAUnB,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACvCoB,QAAAA,IAAI,CAACL,IAAL,CAAU;AAAC,4BAAkBF,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAaqB,cAAhC;AAAgD,iBAAOR,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAasB,GAApE;AAAyE,uBAAYT,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAauB,SAAlG;AAA6G,8BAAmBV,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAawB,SAA7I;AAAwJ,kBAAQX,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAayB,IAA7K;AAAmL,kBAAQZ,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa0B,IAAxM;AAA8M,mBAASb,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa2B,KAApO;AAA2O,iBAAOd,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa4B,GAA/P;AAAoQ,kBAAQf,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa6B,IAAzR;AAA+R,kBAAQhB,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa8B,IAApT;AAA0T,sBAAYjB,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAakB,QAAnV;AAA6V,wBAAcL,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa+B,UAAxX;AAAoY,mBAASlB,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAagC,KAA1Z;AAAia,oBAAUnB,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAaiC,MAAxb;AAAgc,gBAAKpB,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAakC;AAAld,SAAV;AACAzC,QAAAA,IAAI,CAACsB,IAAL,CAAUF,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAasB,GAAvB;AACD;;AACD,YAAM,KAAKL,QAAL,CAAc;AAACxC,QAAAA,IAAI,EAAE2C,IAAP;AAAa3B,QAAAA,IAAI,EAAEA;AAAnB,OAAd,CAAN;AACD,KAVK,CAAN;AAWD;;AAEuB,QAAlB0C,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AAE5C,QAAGD,SAAS,KAAK,KAAKzD,KAAtB,EAA4B;AAE1B,YAAMwB,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAFK,OAAhB;AAOA,YAAMC,KAAK,CAAC,YAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAtB,GAAuC,GAAvC,GAA2CF,OAAO,CAACC,GAAR,CAAYE,mBAAvD,GAA2E,yBAA5E,EAAuGP,OAAvG,CAAL,CACLQ,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEA,MAAME,IAAN,IAAc;AAClB,YAAIO,IAAI,GAAG,EAAX;;AACA,aAAI,IAAIpB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGa,IAAI,CAACO,IAAL,CAAUnB,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACvCoB,UAAAA,IAAI,CAACL,IAAL,CAAU;AAAC,8BAAkBF,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAaqB,cAAhC;AAAgD,mBAAOR,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAasB,GAApE;AAAyE,yBAAYT,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAauB,SAAlG;AAA6G,gCAAmBV,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAawB,SAA7I;AAAwJ,oBAAQX,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAayB,IAA7K;AAAmL,oBAAQZ,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa0B,IAAxM;AAA8M,qBAASb,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa2B,KAApO;AAA2O,mBAAOd,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa4B,GAA/P;AAAoQ,oBAAQf,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa6B,IAAzR;AAA+R,oBAAQhB,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa8B,IAApT;AAA0T,wBAAYjB,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAakB,QAAnV;AAA6V,0BAAcL,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAa+B,UAAxX;AAAoY,qBAASlB,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAagC,KAA1Z;AAAia,sBAAUnB,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAaiC,MAAxb;AAAgc,kBAAKpB,IAAI,CAACO,IAAL,CAAUpB,CAAV,EAAakC;AAAld,WAAV;AACD;;AACD,cAAM,KAAKjB,QAAL,CAAc;AAACxC,UAAAA,IAAI,EAAE2C;AAAP,SAAd,CAAN;AACD,OARK,CAAN;AASD;AAEF;;AAECkB,EAAAA,MAAM,GAAE;AACN,QAAIlB,IAAI,GAAG,KAAK9C,KAAL,CAAWG,IAAtB;AACA2C,IAAAA,IAAI,CAACL,IAAL,CAAU;AAAC,wBAAkB,EAAnB;AAAuB,aAAO,EAA9B;AAAkC,mBAAa,EAA/C;AAAmD,0BAAoB,EAAvE;AAA2E,cAAQ,EAAnF;AAAuF,cAAQ,EAA/F;AAAmG,eAAS,EAA5G;AAAgH,aAAO,EAAvH;AAA2H,cAAQ,EAAnI;AAAuI,cAAQ,EAA/I;AAAmJ,kBAAY,EAA/J;AAAmK,oBAAc,EAAjL;AAAqL,eAAS,EAA9L;AAAkM,gBAAU;AAA5M,KAAV;AACA,SAAKE,QAAL,CAAc;AAACxC,MAAAA,IAAI,EAAE2C;AAAP,KAAd;AACD;;AAEkB,QAAbmB,aAAa,GAAE;AAEnB,QAAIC,QAAQ,GAAG,EAAf;AACAC,IAAAA,MAAM,CAACC,OAAP,CAAe,KAAKpE,KAAL,CAAWgB,QAA1B,EACCqD,GADD,CACM,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkBL,QAAQ,CAACzB,IAAT,CAAc8B,KAAd,CADxB;;AAEA,SAAI,IAAI7C,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGwC,QAAQ,CAACvC,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACtC,UAAGwC,QAAQ,CAACxC,CAAD,CAAR,CAAY,gBAAZ,MAAkC,EAAlC,IAAwCwC,QAAQ,CAACxC,CAAD,CAAR,CAAY8C,GAAZ,KAAoB,EAA5D,IAAkEN,QAAQ,CAACxC,CAAD,CAAR,CAAY+C,IAAZ,KAAqB,EAAvF,IAA6FP,QAAQ,CAACxC,CAAD,CAAR,CAAYgD,IAAZ,KAAqB,EAAlH,IAAwHR,QAAQ,CAACxC,CAAD,CAAR,CAAYiD,KAAZ,KAAsB,EAA9I,IAAoJT,QAAQ,CAACxC,CAAD,CAAR,CAAYkD,GAAZ,KAAoB,EAAxK,IAA8KV,QAAQ,CAACxC,CAAD,CAAR,CAAYmD,IAAZ,KAAqB,EAAnM,IAAyMX,QAAQ,CAACxC,CAAD,CAAR,CAAYoD,QAAZ,KAAyB,EAAlO,IAAwOZ,QAAQ,CAACxC,CAAD,CAAR,CAAYqD,UAAZ,KAA2B,EAAnQ,IAAyQb,QAAQ,CAACxC,CAAD,CAAR,CAAYsD,KAAZ,KAAsB,EAA/R,IAAqSd,QAAQ,CAACxC,CAAD,CAAR,CAAY,gBAAZ,MAAkC,IAAvU,IAA+UwC,QAAQ,CAACxC,CAAD,CAAR,CAAY8C,GAAZ,KAAoB,IAAnW,IAA2WN,QAAQ,CAACxC,CAAD,CAAR,CAAY+C,IAAZ,KAAqB,IAAhY,IAAwYP,QAAQ,CAACxC,CAAD,CAAR,CAAYgD,IAAZ,KAAqB,IAA7Z,IAAqaR,QAAQ,CAACxC,CAAD,CAAR,CAAYiD,KAAZ,KAAsB,IAA3b,IAAmcT,QAAQ,CAACxC,CAAD,CAAR,CAAYkD,GAAZ,KAAoB,IAAvd,IAA+dV,QAAQ,CAACxC,CAAD,CAAR,CAAYmD,IAAZ,KAAqB,IAApf,IAA4fX,QAAQ,CAACxC,CAAD,CAAR,CAAYoD,QAAZ,KAAyB,IAArhB,IAA6hBZ,QAAQ,CAACxC,CAAD,CAAR,CAAYqD,UAAZ,KAA2B,IAAxjB,IAAgkBb,QAAQ,CAACxC,CAAD,CAAR,CAAYsD,KAAZ,KAAsB,IAAzlB,EAA8lB;AAC5lB,cAAM,KAAKrC,QAAL,CAAc;AAACzB,UAAAA,KAAK,EAAE;AAAR,SAAd,CAAN;AACAgD,QAAAA,QAAQ,CAACe,MAAT,CAAgBvD,CAAhB,EAAmB,CAAnB;AACD;AACF;;AAED,UAAMwD,IAAI,GAAG;AACXpC,MAAAA,IAAI,EAAEoB;AADK,KAAb;AAGA,UAAMrC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFG;AAKZmD,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AALM,KAAhB;AAOA,UAAMlD,KAAK,CAAC,YAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAtB,GAAuC,GAAvC,GAA2CF,OAAO,CAACC,GAAR,CAAYE,mBAAvD,GAA2E,+BAA5E,EAA6GP,OAA7G,CAAL,CACLQ,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEA,MAAME,IAAN,IAAc;AAClB,UAAGA,IAAI,CAAC8C,OAAR,EAAgB;AACd,aAAKhF,KAAL,CAAWgF,OAAX;AAED;;AACD,UAAG,KAAKrF,KAAL,CAAWiB,OAAd,EAAsB;AACpB,aAAKZ,KAAL,CAAWiF,gBAAX;AACD;;AACD,UAAG,KAAKtF,KAAL,CAAWkB,KAAd,EAAoB;AAClB,aAAKb,KAAL,CAAWkF,cAAX;AACD;;AACD,WAAK5C,QAAL,CAAc;AAAC3B,QAAAA,QAAQ,EAAE,EAAX;AAAeC,QAAAA,OAAO,EAAE,KAAxB;AAA+BC,QAAAA,KAAK,EAAE;AAAtC,OAAd;AACD,KAdK,CAAN;AAgBA,UAAM,KAAKb,KAAL,CAAWI,UAAX,EAAN;AACD;;AAkBD+E,EAAAA,MAAM,GAAG;AAEP,UAAMC,QAAQ,GAAG;AACbC,MAAAA,UAAU,EAAE,+BADC;AAEbC,MAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,GAAjC,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,EAAxD,EAA4D,GAA5D,CAFE;AAGbC,MAAAA,QAAQ,EAAE,EAHG,CAIb;;AAJa,KAAjB;AAQE,wBACI;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAE,KAAK5F,KAAL,CAAWG,IADnB;AAEE,UAAA,UAAU,EAAE,CAAC,0CAAD,EAA6C,YAA7C,EAA2D,kBAA3D,EAA+E,yBAA/E,EAA0G,aAA1G,EAAyH,aAAzH,EAAwI,cAAxI,EAAwJ,YAAxJ,EAAsK,aAAtK,EAAqL,aAArL,EAAoM,iBAApM,EAAuN,mBAAvN,EAA4O,cAA5O,EAA4P,eAA5P,CAFd;AAGE,UAAA,UAAU,EAAE,IAHd;AAIE,UAAA,UAAU,EAAC,MAJb;AAKE,UAAA,kBAAkB,EAAE,EALtB;AAME,UAAA,KAAK,EAAC,MANR;AAOE,UAAA,MAAM,EAAC,KAPT;AAQE,UAAA,QAAQ,EAAEsF,QARZ;AASE,UAAA,kBAAkB,EAAE,IATtB;AAUE,UAAA,eAAe,EAAE,IAVnB;AAWE,UAAA,OAAO,EAAG,CAAC;AAAEtF,YAAAA,IAAI,EAAE,gBAAR;AAA0BqD,YAAAA,IAAI,EAAC,UAA/B;AAA2ChC,YAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWe,SAA9D;AAAyE8E,YAAAA,MAAM,EAAE;AAAjF,WAAD,EAAyF;AAAE1F,YAAAA,IAAI,EAAE,KAAR;AAAeqD,YAAAA,IAAI,EAAC,MAApB;AAA4BsC,YAAAA,QAAQ,EAAE;AAAtC,WAAzF,EAAsI;AAAE3F,YAAAA,IAAI,EAAE,WAAR;AAAqBqD,YAAAA,IAAI,EAAC,UAA1B;AAAsChC,YAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWoB,SAAzD;AAAoEyE,YAAAA,MAAM,EAAE;AAA5E,WAAtI,EAAyN;AAAE1F,YAAAA,IAAI,EAAE,kBAAR;AAA4BqD,YAAAA,IAAI,EAAC,UAAjC;AAA6ChC,YAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWoB,SAAhE;AAA2EyE,YAAAA,MAAM,EAAE;AAAnF,WAAzN,EAAmT;AAAE1F,YAAAA,IAAI,EAAE,MAAR;AAAgBqD,YAAAA,IAAI,EAAC,MAArB;AAA6BsC,YAAAA,QAAQ,EAAE;AAAvC,WAAnT,EAAgW;AAAE3F,YAAAA,IAAI,EAAE,MAAR;AAAgBqD,YAAAA,IAAI,EAAC,UAArB;AAAiChC,YAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWa,KAApD;AAA2DgF,YAAAA,MAAM,EAAE;AAAnE,WAAhW,EAA2a;AAAE1F,YAAAA,IAAI,EAAE,OAAR;AAAiBqD,YAAAA,IAAI,EAAC,MAAtB;AAA8BsC,YAAAA,QAAQ,EAAE;AAAxC,WAA3a,EAA0d;AAAE3F,YAAAA,IAAI,EAAE,KAAR;AAAeqD,YAAAA,IAAI,EAAC,MAApB;AAA4BsC,YAAAA,QAAQ,EAAE;AAAtC,WAA1d,EAAugB;AAAE3F,YAAAA,IAAI,EAAE,MAAR;AAAgBqD,YAAAA,IAAI,EAAC,MAArB;AAA6BsC,YAAAA,QAAQ,EAAE;AAAvC,WAAvgB,EAAsjB;AAAE3F,YAAAA,IAAI,EAAE,MAAR;AAAgBqD,YAAAA,IAAI,EAAC,MAArB;AAA6BsC,YAAAA,QAAQ,EAAE;AAAvC,WAAtjB,EAAomB;AAAE3F,YAAAA,IAAI,EAAE,UAAR;AAAoBqD,YAAAA,IAAI,EAAC,UAAzB;AAAqChC,YAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWY,SAAxD;AAAmEiF,YAAAA,MAAM,EAAE;AAA3E,WAApmB,EAAsrB;AAAE1F,YAAAA,IAAI,EAAE,YAAR;AAAsBqD,YAAAA,IAAI,EAAC,MAA3B;AAAmCsC,YAAAA,QAAQ,EAAE;AAA7C,WAAtrB,EAAyuB;AAAE3F,YAAAA,IAAI,EAAE,OAAR;AAAiBqD,YAAAA,IAAI,EAAC,UAAtB;AAAkChC,YAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWc,MAArD;AAA6D+E,YAAAA,MAAM,EAAE;AAArE,WAAzuB,EAAozB;AAAE1F,YAAAA,IAAI,EAAE,QAAR;AAAkBqD,YAAAA,IAAI,EAAC,MAAvB;AAA+BsC,YAAAA,QAAQ,EAAE;AAAzC,WAApzB,CAXZ;AAYE,UAAA,OAAO,EAAE,IAZX;AAaE,UAAA,YAAY,EAAG,CACX,gBADW,EAEX,WAFW,EAGX,WAHW,EAIX,WAJW,EAKX,qBALW,EAMX,WANW,EAOX,kBAPW,EAQX,WARW,EASX,sBATW,EAUX,WAVW,EAWX,iBAXW,EAYX,WAZW,EAaX,mBAbW,CAbjB;AA4BI,UAAA,WAAW,EAAE,KAAKxE;AA5BtB;AAAA;AAAA;AAAA;AAAA,gBADF,eA+BE;AAAA;AAAA;AAAA;AAAA,gBA/BF,eAgCE;AAAK,UAAA,KAAK,EAAE;AAACyE,YAAAA,UAAU,EAAC;AAAZ,WAAZ;AAAA,kCACI;AAAQ,YAAA,KAAK,EAAC,qBAAd;AAAoC,YAAA,OAAO,EAAE,MAAM,KAAK/B,MAAL,EAAnD;AAAkE,YAAA,KAAK,EAAE;AAACgC,cAAAA,WAAW,EAAC,MAAb;AAAqBJ,cAAAA,QAAQ,EAAC,MAA9B;AAAsCK,cAAAA,KAAK,EAAC,OAA5C;AAAqDC,cAAAA,YAAY,EAAC;AAAlE,aAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,KAAK,EAAC,wBAAd;AAAuC,YAAA,OAAO,EAAE,MAAM,KAAKjC,aAAL,EAAtD;AAA4E,YAAA,KAAK,EAAE;AAAC+B,cAAAA,WAAW,EAAC,KAAb;AAAoBJ,cAAAA,QAAQ,EAAC,MAA7B;AAAqCK,cAAAA,KAAK,EAAC,OAA3C;AAAoDC,cAAAA,YAAY,EAAC;AAAjE,aAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCF,eAoCE;AAAA;AAAA;AAAA;AAAA,gBApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CH;;AArO8C;;AAwOjD,eAAepG,mBAAf","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport \"./estimatedPipesExcel.css\"\r\n\r\nclass EstimatedPipesExcel extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    diameters: [],\r\n    areas: [],\r\n    trains: [\"01\", \"02\", \"03\", \"04\", \"05\"],\r\n    line_refs: [],\r\n    new_data: {},\r\n    warning: false,\r\n    empty: false,\r\n    tags: [],\r\n    designers: [],\r\n    owners: []\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n\r\n  fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/areas\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      let areas_options = []\r\n      for(let i = 0; i < json.length; i++){\r\n        areas_options.push(json[i].name)\r\n      }\r\n      this.setState({areas : areas_options});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/diameters\", options)\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    let diameters = []\r\n    for(let i = 0; i < json.diameters.length; i++){\r\n      diameters.push(json.diameters[i].diameter)\r\n    }\r\n    this.setState({diameters : diameters});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/lineRefs\", options)\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    let line_refs = []\r\n    for(let i = 0; i < json.line_refs.length; i++){\r\n      line_refs.push(json.line_refs[i].line_ref)\r\n    }\r\n    this.setState({line_refs : line_refs});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/designers\", options)\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    let designers = []\r\n    for(let i = 0; i < json.designers.length; i++){\r\n      designers.push(json.designers[i].name)\r\n    }\r\n    this.setState({designers : designers});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/modelledEstimatedPipes\", options)\r\n  .then(response => response.json())\r\n  .then(async json => {\r\n    let rows = [] \r\n    let tags = []\r\n    for(let i = 0; i < json.rows.length; i++){\r\n      rows.push({\"Line reference\": json.rows[i].line_reference, \"Tag\": json.rows[i].tag, \"Owner IFC\":json.rows[i].owner_ifc, \"Owner IsoTracker\":json.rows[i].owner_iso, \"Unit\": json.rows[i].unit, \"Area\": json.rows[i].area, \"Fluid\": json.rows[i].fluid, \"Seq\": json.rows[i].seq, \"Spec\": json.rows[i].spec, \"Type\": json.rows[i].type, \"Diameter\": json.rows[i].diameter, \"Insulation\": json.rows[i].insulation, \"Train\": json.rows[i].train, \"Status\": json.rows[i].status, \"id\":json.rows[i].id})\r\n      tags.push(json.rows[i].tag)\r\n    }\r\n    await this.setState({data: rows, tags: tags})\r\n  })\r\n}\r\n\r\nasync componentDidUpdate(prevProps, prevState){\r\n\r\n  if(prevProps !== this.props){\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n    }\r\n\r\n    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/modelledEstimatedPipes\", options)\r\n    .then(response => response.json())\r\n    .then(async json => {\r\n      let rows = [] \r\n      for(let i = 0; i < json.rows.length; i++){\r\n        rows.push({\"Line reference\": json.rows[i].line_reference, \"Tag\": json.rows[i].tag, \"Owner IFC\":json.rows[i].owner_ifc, \"Owner IsoTracker\":json.rows[i].owner_iso, \"Unit\": json.rows[i].unit, \"Area\": json.rows[i].area, \"Fluid\": json.rows[i].fluid, \"Seq\": json.rows[i].seq, \"Spec\": json.rows[i].spec, \"Type\": json.rows[i].type, \"Diameter\": json.rows[i].diameter, \"Insulation\": json.rows[i].insulation, \"Train\": json.rows[i].train, \"Status\": json.rows[i].status, \"id\":json.rows[i].id})\r\n      }\r\n      await this.setState({data: rows})\r\n    })\r\n  }\r\n\r\n}\r\n\r\n  addRow(){\r\n    let rows = this.state.data\r\n    rows.push({\"Line reference\": \"\", \"Tag\": \"\", \"Owner IFC\": \"\", \"Owner IsoTracker\": \"\", \"Unit\": \"\", \"Area\": \"\", \"Fluid\": \"\", \"Seq\": \"\", \"Spec\": \"\", \"Type\": \"\", \"Diameter\": \"\", \"Insulation\": \"\", \"Train\": \"\", \"Status\": \"\"})\r\n    this.setState({data: rows})\r\n  }\r\n  \r\n  async submitChanges(){\r\n    \r\n    let new_rows = []\r\n    Object.entries(this.state.new_data)\r\n    .map( ([key, value]) => new_rows.push(value))\r\n    for(let i = 0; i < new_rows.length; i++){\r\n      if(new_rows[i][\"Line reference\"] === \"\" || new_rows[i].Tag === \"\" || new_rows[i].Unit === \"\" || new_rows[i].Area === \"\" || new_rows[i].Fluid === \"\" || new_rows[i].Seq === \"\" || new_rows[i].Spec === \"\" || new_rows[i].Diameter === \"\" || new_rows[i].Insulation === \"\" || new_rows[i].Train === \"\" || new_rows[i][\"Line reference\"] === null || new_rows[i].Tag === null || new_rows[i].Unit === null || new_rows[i].Area === null || new_rows[i].Fluid === null || new_rows[i].Seq === null || new_rows[i].Spec === null || new_rows[i].Diameter === null || new_rows[i].Insulation === null || new_rows[i].Train === null){\r\n        await this.setState({empty: true})\r\n        new_rows.splice(i, 1)\r\n      }\r\n    }\r\n\r\n    const body = {\r\n      rows: new_rows,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitModelledEstimatedPipes\", options)\r\n    .then(response => response.json())\r\n    .then(async json => {\r\n      if(json.success){\r\n        this.props.success()\r\n        \r\n      }\r\n      if(this.state.warning){\r\n        this.props.estimatedWarning()\r\n      }\r\n      if(this.state.empty){\r\n        this.props.estimatedEmpty()\r\n      }\r\n      this.setState({new_data: [], warning: false, empty: false})\r\n    })\r\n\r\n    await this.props.updateData()\r\n  }\r\n\r\n  handleChange = async(changes, source) =>{\r\n    if (source !== 'loadData'){\r\n      let data_aux = this.state.data\r\n      for(let i = 0; i < changes.length; i+=4){\r\n        if(changes[i][1] !== \"Owner IFC\" && changes[i][1] !== \"Owner IsoTracker\"){\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const settings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: [180, 400, 240, 240, 70, 70, 70, 100, 95, 80, 105, 110, 70, 120],\r\n        fontSize: 24\r\n        //... other options\r\n      }\r\n  \r\n\r\n      return (\r\n          <div>\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.data}\r\n                colHeaders={[\"<b className='header'>Line reference</b>\", \"<b>Tag</b>\", \"<b>Owner IFC</b>\", \"<b>Owner IsoTracker</b>\", \"<b>Unit</b>\", \"<b>Area</b>\", \"<b>Fluid</b>\", \"<b>Seq</b>\", \"<b>Spec</b>\", \"<b>Type</b>\", \"<b>Diameter</b>\", \"<b>Insulation</b>\", \"<b>Train</b>\", \"<b>Status</b>\"]}\r\n                rowHeaders={true}\r\n                rowHeights=\"30px\"\r\n                columnHeaderHeight={30}\r\n                width=\"100%\"\r\n                height=\"520\"\r\n                settings={settings}\r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Line reference\", type:'dropdown', source: this.state.line_refs, strict: true}, { data: \"Tag\", type:'text', readOnly: true}, { data: \"Owner IFC\", type:'dropdown', source: this.state.designers, strict: true}, { data: \"Owner IsoTracker\", type:'dropdown', source: this.state.designers, strict: true}, { data: \"Unit\", type:'text', readOnly: true},{ data: \"Area\", type:'dropdown', source: this.state.areas, strict: true }, { data: \"Fluid\", type:'text', readOnly: true}, { data: \"Seq\", type:'text', readOnly: true}, { data: \"Spec\", type:'text', readOnly: true},  { data: \"Type\", type:'text', readOnly: true}, { data: \"Diameter\", type:'dropdown', source: this.state.diameters, strict: true}, { data: \"Insulation\", type:'text', readOnly: true},{ data: \"Train\", type:'dropdown', source: this.state.trains, strict: true},{ data: \"Status\", type:'text', readOnly: true}]}\r\n                filters={true}\r\n                dropdownMenu= {[\r\n                    'make_read_only',\r\n                    '---------',\r\n                    'alignment',\r\n                    '---------',\r\n                    'filter_by_condition',\r\n                    '---------',\r\n                    'filter_operators',\r\n                    '---------',\r\n                    'filter_by_condition2',\r\n                    '---------',\r\n                    'filter_by_value',\r\n                    '---------',\r\n                    'filter_action_bar',\r\n                  ]}\r\n                  afterChange={this.handleChange}\r\n              />\r\n              <br></br>\r\n              <div style={{marginLeft:\"695px\"}}>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRow()} style={{marginRight:\"25px\", fontSize:\"16px\", width:\"160px\", borderRadius:\"10px\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChanges()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"160px\", borderRadius:\"10px\"}}>Save</button>\r\n              </div>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default EstimatedPipesExcel;"]},"metadata":{},"sourceType":"module"}