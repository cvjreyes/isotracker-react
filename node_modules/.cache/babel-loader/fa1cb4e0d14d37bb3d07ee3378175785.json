{"ast":null,"code":"import React, { useRef, useImperativeHandle, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowRight from '@material-ui/icons/ArrowRight';\nimport clsx from 'clsx';\nconst TRANSPARENT = 'rgba(0,0,0,0)';\nconst useMenuItemStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.open ? theme.palette.action.hover : TRANSPARENT\n  })\n}));\n/**\n * Use as a drop-in replacement for `<MenuItem>` when you need to add cascading\n * menu elements as children to this component.\n */\n\nconst NestedMenuItem = React.forwardRef(function NestedMenuItem(props, ref) {\n  const {\n    parentMenuOpen,\n    component = 'div',\n    label,\n    rightIcon = React.createElement(ArrowRight, null),\n    children,\n    className,\n    tabIndex: tabIndexProp,\n    MenuProps = {},\n    ContainerProps: ContainerPropsProp = {},\n    ...MenuItemProps\n  } = props;\n  const {\n    ref: containerRefProp,\n    ...ContainerProps\n  } = ContainerPropsProp;\n  const menuItemRef = useRef(null);\n  useImperativeHandle(ref, () => menuItemRef.current);\n  const containerRef = useRef(null);\n  useImperativeHandle(containerRefProp, () => containerRef.current);\n  const menuContainerRef = useRef(null);\n  const [isSubMenuOpen, setIsSubMenuOpen] = useState(false);\n\n  const handleMouseEnter = event => {\n    var _a;\n\n    setIsSubMenuOpen(true);\n\n    if ((_a = ContainerProps) === null || _a === void 0 ? void 0 : _a.onMouseEnter) {\n      ContainerProps.onMouseEnter(event);\n    }\n  };\n\n  const handleMouseLeave = event => {\n    var _a;\n\n    setIsSubMenuOpen(false);\n\n    if ((_a = ContainerProps) === null || _a === void 0 ? void 0 : _a.onMouseLeave) {\n      ContainerProps.onMouseLeave(event);\n    }\n  }; // Check if any immediate children are active\n\n\n  const isSubmenuFocused = () => {\n    var _a, _b, _c, _d;\n\n    const active = (_b = (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.activeElement;\n\n    for (const child of (_d = (_c = menuContainerRef.current) === null || _c === void 0 ? void 0 : _c.children, _d !== null && _d !== void 0 ? _d : [])) {\n      if (child === active) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const handleFocus = event => {\n    var _a;\n\n    if (event.target === containerRef.current) {\n      setIsSubMenuOpen(true);\n    }\n\n    if ((_a = ContainerProps) === null || _a === void 0 ? void 0 : _a.onFocus) {\n      ContainerProps.onFocus(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    var _a, _b, _c, _d, _e;\n\n    if (event.key === 'Escape') {\n      return;\n    }\n\n    if (isSubmenuFocused()) {\n      event.stopPropagation();\n    }\n\n    const active = (_b = (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.activeElement;\n\n    if (event.key === 'ArrowLeft' && isSubmenuFocused()) {\n      (_c = containerRef.current) === null || _c === void 0 ? void 0 : _c.focus();\n    }\n\n    if (event.key === 'ArrowRight' && event.target === containerRef.current && event.target === active) {\n      const firstChild = (_d = menuContainerRef.current) === null || _d === void 0 ? void 0 : _d.children[0];\n      (_e = firstChild) === null || _e === void 0 ? void 0 : _e.focus();\n    }\n  };\n\n  const open = isSubMenuOpen && parentMenuOpen;\n  const menuItemClasses = useMenuItemStyles({\n    open\n  }); // Root element must have a `tabIndex` attribute for keyboard navigation\n\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return React.createElement(\"div\", Object.assign({}, ContainerProps, {\n    ref: containerRef,\n    onFocus: handleFocus,\n    tabIndex: tabIndex,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    onKeyDown: handleKeyDown\n  }), React.createElement(MenuItem, Object.assign({}, MenuItemProps, {\n    className: clsx(menuItemClasses.root, className),\n    ref: menuItemRef\n  }), label, rightIcon), React.createElement(Menu // Set pointer events to 'none' to prevent the invisible Popover div\n  // from capturing events for clicks and hovers\n  , {\n    // Set pointer events to 'none' to prevent the invisible Popover div\n    // from capturing events for clicks and hovers\n    style: {\n      pointerEvents: 'none'\n    },\n    anchorEl: menuItemRef.current,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    open: open,\n    autoFocus: false,\n    disableAutoFocus: true,\n    disableEnforceFocus: true,\n    onClose: () => {\n      setIsSubMenuOpen(false);\n    }\n  }, React.createElement(\"div\", {\n    ref: menuContainerRef,\n    style: {\n      pointerEvents: 'auto'\n    }\n  }, children)));\n});\nexport default NestedMenuItem;","map":{"version":3,"sources":["../dist-src/index.js"],"names":[],"mappings":";;;;;;AAMA,MAAM,WAAW,GAAG,eAApB;AACA,MAAM,iBAAiB,GAAG,UAAU,CAAE,KAAD,KAAY;AAC7C,EAAA,IAAI,EAAG,KAAD,KAAY;AACd,IAAA,eAAe,EAAE,KAAK,CAAC,IAAN,GAAa,KAAK,CAAC,OAAN,CAAc,MAAd,CAAqB,KAAlC,GAA0C;AAD7C,GAAZ;AADuC,CAAZ,CAAD,CAApC;;;;;;AASA,MAAM,cAAc,GAAG,KAAK,CAAC,UAAN,CAAiB,SAAS,cAAT,CAAwB,KAAxB,EAA+B,GAA/B,EAAoC;AACxE,QAAM;AAAE,IAAA,cAAF;AAAkB,IAAA,SAAS,GAAG,KAA9B;AAAqC,IAAA,KAArC;AAA4C,IAAA,SAAS,GAAG,KAAK,CAAC,aAAN,CAAoB,UAApB,EAAgC,IAAhC,CAAxD;AAA+F,IAAA,QAA/F;AAAyG,IAAA,SAAzG;AAAoH,IAAA,QAAQ,EAAE,YAA9H;AAA4I,IAAA,SAAS,GAAG,EAAxJ;AAA4J,IAAA,cAAc,EAAE,kBAAkB,GAAG,EAAjM;AAAqM,OAAG;AAAxM,MAA0N,KAAhO;AACA,QAAM;AAAE,IAAA,GAAG,EAAE,gBAAP;AAAyB,OAAG;AAA5B,MAA+C,kBAArD;AACA,QAAM,WAAW,GAAG,MAAM,CAAC,IAAD,CAA1B;AACA,EAAA,mBAAmB,CAAC,GAAD,EAAM,MAAM,WAAW,CAAC,OAAxB,CAAnB;AACA,QAAM,YAAY,GAAG,MAAM,CAAC,IAAD,CAA3B;AACA,EAAA,mBAAmB,CAAC,gBAAD,EAAmB,MAAM,YAAY,CAAC,OAAtC,CAAnB;AACA,QAAM,gBAAgB,GAAG,MAAM,CAAC,IAAD,CAA/B;AACA,QAAM,CAAC,aAAD,EAAgB,gBAAhB,IAAoC,QAAQ,CAAC,KAAD,CAAlD;;AACA,QAAM,gBAAgB,GAAI,KAAD,IAAW;AAChC,QAAI,EAAJ;;AACA,IAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,QAAI,CAAC,EAAE,GAAG,cAAN,MAA0B,IAA1B,IAAkC,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2D,EAAE,CAAC,YAAlE,EAAgF;AAC5E,MAAA,cAAc,CAAC,YAAf,CAA4B,KAA5B;AACH;AACJ,GAND;;AAOA,QAAM,gBAAgB,GAAI,KAAD,IAAW;AAChC,QAAI,EAAJ;;AACA,IAAA,gBAAgB,CAAC,KAAD,CAAhB;;AACA,QAAI,CAAC,EAAE,GAAG,cAAN,MAA0B,IAA1B,IAAkC,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2D,EAAE,CAAC,YAAlE,EAAgF;AAC5E,MAAA,cAAc,CAAC,YAAf,CAA4B,KAA5B;AACH;AACJ,GAND,CAhBwE,C;;;AAwBxE,QAAM,gBAAgB,GAAG,MAAM;AAC3B,QAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB;;AACA,UAAM,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,YAAY,CAAC,OAAnB,MAAgC,IAAhC,IAAwC,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiE,EAAE,CAAC,aAA1E,MAA6F,IAA7F,IAAqG,EAAE,KAAK,KAAK,CAAjH,GAAqH,KAAK,CAA1H,GAA8H,EAAE,CAAC,aAAhJ;;AACA,SAAK,MAAM,KAAX,KAAqB,EAAE,GAAG,CAAC,EAAE,GAAG,gBAAgB,CAAC,OAAvB,MAAoC,IAApC,IAA4C,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqE,EAAE,CAAC,QAA7E,EAAwF,EAAE,KAAK,IAAP,IAAe,EAAE,KAAK,KAAK,CAA3B,GAA+B,EAA/B,GAAoC,EAAjJ,GAAuJ;AACnJ,UAAI,KAAK,KAAK,MAAd,EAAsB;AAClB,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GATD;;AAUA,QAAM,WAAW,GAAI,KAAD,IAAW;AAC3B,QAAI,EAAJ;;AACA,QAAI,KAAK,CAAC,MAAN,KAAiB,YAAY,CAAC,OAAlC,EAA2C;AACvC,MAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AACD,QAAI,CAAC,EAAE,GAAG,cAAN,MAA0B,IAA1B,IAAkC,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2D,EAAE,CAAC,OAAlE,EAA2E;AACvE,MAAA,cAAc,CAAC,OAAf,CAAuB,KAAvB;AACH;AACJ,GARD;;AASA,QAAM,aAAa,GAAI,KAAD,IAAW;AAC7B,QAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB;;AACA,QAAI,KAAK,CAAC,GAAN,KAAc,QAAlB,EAA4B;AACxB;AACH;;AACD,QAAI,gBAAgB,EAApB,EAAwB;AACpB,MAAA,KAAK,CAAC,eAAN;AACH;;AACD,UAAM,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,YAAY,CAAC,OAAnB,MAAgC,IAAhC,IAAwC,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiE,EAAE,CAAC,aAA1E,MAA6F,IAA7F,IAAqG,EAAE,KAAK,KAAK,CAAjH,GAAqH,KAAK,CAA1H,GAA8H,EAAE,CAAC,aAAhJ;;AACA,QAAI,KAAK,CAAC,GAAN,KAAc,WAAd,IAA6B,gBAAgB,EAAjD,EAAqD;AACjD,OAAC,EAAE,GAAG,YAAY,CAAC,OAAnB,MAAgC,IAAhC,IAAwC,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiE,EAAE,CAAC,KAAH,EAAjE;AACH;;AACD,QAAI,KAAK,CAAC,GAAN,KAAc,YAAd,IACA,KAAK,CAAC,MAAN,KAAiB,YAAY,CAAC,OAD9B,IAEA,KAAK,CAAC,MAAN,KAAiB,MAFrB,EAE6B;AACzB,YAAM,UAAU,GAAG,CAAC,EAAE,GAAG,gBAAgB,CAAC,OAAvB,MAAoC,IAApC,IAA4C,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqE,EAAE,CAAC,QAAH,CAAY,CAAZ,CAAxF;AACA,OAAC,EAAE,GAAG,UAAN,MAAsB,IAAtB,IAA8B,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuD,EAAE,CAAC,KAAH,EAAvD;AACH;AACJ,GAlBD;;AAmBA,QAAM,IAAI,GAAG,aAAa,IAAI,cAA9B;AACA,QAAM,eAAe,GAAG,iBAAiB,CAAC;AAAE,IAAA;AAAF,GAAD,CAAzC,CA/DwE,C;;AAiExE,MAAI,QAAJ;;AACA,MAAI,CAAC,KAAK,CAAC,QAAX,EAAqB;AACjB,IAAA,QAAQ,GAAG,YAAY,KAAK,SAAjB,GAA6B,YAA7B,GAA4C,CAAC,CAAxD;AACH;;AACD,SAAQ,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA2B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,cAAlB,EAAkC;AAAE,IAAA,GAAG,EAAE,YAAP;AAAqB,IAAA,OAAO,EAAE,WAA9B;AAA2C,IAAA,QAAQ,EAAE,QAArD;AAA+D,IAAA,YAAY,EAAE,gBAA7E;AAA+F,IAAA,YAAY,EAAE,gBAA7G;AAA+H,IAAA,SAAS,EAAE;AAA1I,GAAlC,CAA3B,EACJ,KAAK,CAAC,aAAN,CAAoB,QAApB,EAA8B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,aAAlB,EAAiC;AAAE,IAAA,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,IAAjB,EAAuB,SAAvB,CAAjB;AAAoD,IAAA,GAAG,EAAE;AAAzD,GAAjC,CAA9B,EACI,KADJ,EAEI,SAFJ,CADI,EAIJ,KAAK,CAAC,aAAN,CAAoB,IAApB,C;;AAAA,IAGE;;;AAGE,IAAA,KAAK,EAAE;AAAE,MAAA,aAAa,EAAE;AAAjB,KAHT;AAGoC,IAAA,QAAQ,EAAE,WAAW,CAAC,OAH1D;AAGmE,IAAA,YAAY,EAAE;AAC3E,MAAA,QAAQ,EAAE,KADiE;AAE3E,MAAA,UAAU,EAAE;AAF+D,KAHjF;AAMK,IAAA,eAAe,EAAE;AAChB,MAAA,QAAQ,EAAE,KADM;AAEhB,MAAA,UAAU,EAAE;AAFI,KANtB;AASK,IAAA,IAAI,EAAE,IATX;AASiB,IAAA,SAAS,EAAE,KAT5B;AASmC,IAAA,gBAAgB,EAAE,IATrD;AAS2D,IAAA,mBAAmB,EAAE,IAThF;AASsF,IAAA,OAAO,EAAE,MAAM;AAC/F,MAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;AAXH,GAHF,EAeI,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA2B;AAAE,IAAA,GAAG,EAAE,gBAAP;AAAyB,IAAA,KAAK,EAAE;AAAE,MAAA,aAAa,EAAE;AAAjB;AAAhC,GAA3B,EAAwF,QAAxF,CAfJ,CAJI,CAAR;AAoBH,CAzFsB,CAAvB","sourcesContent":["import React, { useState, useRef, useImperativeHandle } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowRight from '@material-ui/icons/ArrowRight';\nimport clsx from 'clsx';\nconst TRANSPARENT = 'rgba(0,0,0,0)';\nconst useMenuItemStyles = makeStyles((theme) => ({\n    root: (props) => ({\n        backgroundColor: props.open ? theme.palette.action.hover : TRANSPARENT\n    })\n}));\n/**\n * Use as a drop-in replacement for `<MenuItem>` when you need to add cascading\n * menu elements as children to this component.\n */\nconst NestedMenuItem = React.forwardRef(function NestedMenuItem(props, ref) {\n    const { parentMenuOpen, component = 'div', label, rightIcon = React.createElement(ArrowRight, null), children, className, tabIndex: tabIndexProp, MenuProps = {}, ContainerProps: ContainerPropsProp = {}, ...MenuItemProps } = props;\n    const { ref: containerRefProp, ...ContainerProps } = ContainerPropsProp;\n    const menuItemRef = useRef(null);\n    useImperativeHandle(ref, () => menuItemRef.current);\n    const containerRef = useRef(null);\n    useImperativeHandle(containerRefProp, () => containerRef.current);\n    const menuContainerRef = useRef(null);\n    const [isSubMenuOpen, setIsSubMenuOpen] = useState(false);\n    const handleMouseEnter = (event) => {\n        var _a;\n        setIsSubMenuOpen(true);\n        if ((_a = ContainerProps) === null || _a === void 0 ? void 0 : _a.onMouseEnter) {\n            ContainerProps.onMouseEnter(event);\n        }\n    };\n    const handleMouseLeave = (event) => {\n        var _a;\n        setIsSubMenuOpen(false);\n        if ((_a = ContainerProps) === null || _a === void 0 ? void 0 : _a.onMouseLeave) {\n            ContainerProps.onMouseLeave(event);\n        }\n    };\n    // Check if any immediate children are active\n    const isSubmenuFocused = () => {\n        var _a, _b, _c, _d;\n        const active = (_b = (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.activeElement;\n        for (const child of (_d = (_c = menuContainerRef.current) === null || _c === void 0 ? void 0 : _c.children, (_d !== null && _d !== void 0 ? _d : []))) {\n            if (child === active) {\n                return true;\n            }\n        }\n        return false;\n    };\n    const handleFocus = (event) => {\n        var _a;\n        if (event.target === containerRef.current) {\n            setIsSubMenuOpen(true);\n        }\n        if ((_a = ContainerProps) === null || _a === void 0 ? void 0 : _a.onFocus) {\n            ContainerProps.onFocus(event);\n        }\n    };\n    const handleKeyDown = (event) => {\n        var _a, _b, _c, _d, _e;\n        if (event.key === 'Escape') {\n            return;\n        }\n        if (isSubmenuFocused()) {\n            event.stopPropagation();\n        }\n        const active = (_b = (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.activeElement;\n        if (event.key === 'ArrowLeft' && isSubmenuFocused()) {\n            (_c = containerRef.current) === null || _c === void 0 ? void 0 : _c.focus();\n        }\n        if (event.key === 'ArrowRight' &&\n            event.target === containerRef.current &&\n            event.target === active) {\n            const firstChild = (_d = menuContainerRef.current) === null || _d === void 0 ? void 0 : _d.children[0];\n            (_e = firstChild) === null || _e === void 0 ? void 0 : _e.focus();\n        }\n    };\n    const open = isSubMenuOpen && parentMenuOpen;\n    const menuItemClasses = useMenuItemStyles({ open });\n    // Root element must have a `tabIndex` attribute for keyboard navigation\n    let tabIndex;\n    if (!props.disabled) {\n        tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n    }\n    return (React.createElement(\"div\", Object.assign({}, ContainerProps, { ref: containerRef, onFocus: handleFocus, tabIndex: tabIndex, onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave, onKeyDown: handleKeyDown }),\n        React.createElement(MenuItem, Object.assign({}, MenuItemProps, { className: clsx(menuItemClasses.root, className), ref: menuItemRef }),\n            label,\n            rightIcon),\n        React.createElement(Menu\n        // Set pointer events to 'none' to prevent the invisible Popover div\n        // from capturing events for clicks and hovers\n        , { \n            // Set pointer events to 'none' to prevent the invisible Popover div\n            // from capturing events for clicks and hovers\n            style: { pointerEvents: 'none' }, anchorEl: menuItemRef.current, anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n            }, transformOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n            }, open: open, autoFocus: false, disableAutoFocus: true, disableEnforceFocus: true, onClose: () => {\n                setIsSubMenuOpen(false);\n            } },\n            React.createElement(\"div\", { ref: menuContainerRef, style: { pointerEvents: 'auto' } }, children))));\n});\nexport default NestedMenuItem;\n"]},"metadata":{},"sourceType":"module"}