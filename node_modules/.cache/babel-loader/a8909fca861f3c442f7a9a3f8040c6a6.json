{"ast":null,"code":"//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.download = factory();\n  }\n})(this, function () {\n  return function download(data, strFileName, strMimeType) {\n    var self = window,\n        // this script is only for browsers anyway...\n    defaultMime = \"application/octet-stream\",\n        // this default mime also triggers iframe downloads\n    mimeType = strMimeType || defaultMime,\n        payload = data,\n        url = !strFileName && !strMimeType && payload,\n        anchor = document.createElement(\"a\"),\n        toString = function (a) {\n      return String(a);\n    },\n        myBlob = self.Blob || self.MozBlob || self.WebKitBlob || toString,\n        fileName = strFileName || \"download\",\n        blob,\n        reader;\n\n    myBlob = myBlob.call ? myBlob.bind(self) : Blob;\n\n    if (String(this) === \"true\") {\n      //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n      payload = [payload, mimeType];\n      mimeType = payload[0];\n      payload = payload[1];\n    }\n\n    if (url && url.length < 2048) {\n      // if no filename and no mime, assume a url was passed as the only argument\n      fileName = url.split(\"/\").pop().split(\"?\")[0];\n      anchor.href = url; // assign href prop to temp anchor\n\n      if (anchor.href.indexOf(url) !== -1) {\n        // if the browser determines that it's a potentially valid url path:\n        var ajax = new XMLHttpRequest();\n        ajax.open(\"GET\", url, true);\n        ajax.responseType = 'blob';\n\n        ajax.onload = function (e) {\n          download(e.target.response, fileName, defaultMime);\n        };\n\n        setTimeout(function () {\n          ajax.send();\n        }, 0); // allows setting custom ajax headers using the return:\n\n        return ajax;\n      } // end if valid url?\n\n    } // end if url?\n    //go ahead and download dataURLs right away\n\n\n    if (/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)) {\n      if (payload.length > 1024 * 1024 * 1.999 && myBlob !== toString) {\n        payload = dataUrlToBlob(payload);\n        mimeType = payload.type || defaultMime;\n      } else {\n        return navigator.msSaveBlob ? // IE10 can't do a[download], only Blobs:\n        navigator.msSaveBlob(dataUrlToBlob(payload), fileName) : saver(payload); // everyone else can save dataURLs un-processed\n      }\n    } else {\n      //not data url, is it a string with special needs?\n      if (/([\\x80-\\xff])/.test(payload)) {\n        var i = 0,\n            tempUiArr = new Uint8Array(payload.length),\n            mx = tempUiArr.length;\n\n        for (i; i < mx; ++i) tempUiArr[i] = payload.charCodeAt(i);\n\n        payload = new myBlob([tempUiArr], {\n          type: mimeType\n        });\n      }\n    }\n\n    blob = payload instanceof myBlob ? payload : new myBlob([payload], {\n      type: mimeType\n    });\n\n    function dataUrlToBlob(strUrl) {\n      var parts = strUrl.split(/[:;,]/),\n          type = parts[1],\n          decoder = parts[2] == \"base64\" ? atob : decodeURIComponent,\n          binData = decoder(parts.pop()),\n          mx = binData.length,\n          i = 0,\n          uiArr = new Uint8Array(mx);\n\n      for (i; i < mx; ++i) uiArr[i] = binData.charCodeAt(i);\n\n      return new myBlob([uiArr], {\n        type: type\n      });\n    }\n\n    function saver(url, winMode) {\n      if ('download' in anchor) {\n        //html5 A[download]\n        anchor.href = url;\n        anchor.setAttribute(\"download\", fileName);\n        anchor.className = \"download-js-link\";\n        anchor.innerHTML = \"downloading...\";\n        anchor.style.display = \"none\";\n        document.body.appendChild(anchor);\n        setTimeout(function () {\n          anchor.click();\n          document.body.removeChild(anchor);\n\n          if (winMode === true) {\n            setTimeout(function () {\n              self.URL.revokeObjectURL(anchor.href);\n            }, 250);\n          }\n        }, 66);\n        return true;\n      } // handle non-a[download] safari as best we can:\n\n\n      if (/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n        if (/^data:/.test(url)) url = \"data:\" + url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\n        if (!window.open(url)) {\n          // popup blocked, offer direct download:\n          if (confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")) {\n            location.href = url;\n          }\n        }\n\n        return true;\n      } //do iframe dataURL download (old ch+FF):\n\n\n      var f = document.createElement(\"iframe\");\n      document.body.appendChild(f);\n\n      if (!winMode && /^data:/.test(url)) {\n        // force a mime that will download:\n        url = \"data:\" + url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n      }\n\n      f.src = url;\n      setTimeout(function () {\n        document.body.removeChild(f);\n      }, 333);\n    } //end saver\n\n\n    if (navigator.msSaveBlob) {\n      // IE10+ : (has Blob, but not a[download] or URL)\n      return navigator.msSaveBlob(blob, fileName);\n    }\n\n    if (self.URL) {\n      // simple fast and modern way using Blob and URL:\n      saver(self.URL.createObjectURL(blob), true);\n    } else {\n      // handle non-Blob()+non-URL browsers:\n      if (typeof blob === \"string\" || blob.constructor === toString) {\n        try {\n          return saver(\"data:\" + mimeType + \";base64,\" + self.btoa(blob));\n        } catch (y) {\n          return saver(\"data:\" + mimeType + \",\" + encodeURIComponent(blob));\n        }\n      } // Blob but not URL support:\n\n\n      reader = new FileReader();\n\n      reader.onload = function (e) {\n        saver(this.result);\n      };\n\n      reader.readAsDataURL(blob);\n    }\n\n    return true;\n  };\n  /* end download() */\n});","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/downloadjs/download.js"],"names":["root","factory","define","amd","exports","module","download","data","strFileName","strMimeType","self","window","defaultMime","mimeType","payload","url","anchor","document","createElement","toString","a","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","blob","reader","call","bind","length","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","e","target","response","setTimeout","send","test","dataUrlToBlob","type","navigator","msSaveBlob","saver","i","tempUiArr","Uint8Array","mx","charCodeAt","strUrl","parts","decoder","atob","decodeURIComponent","binData","uiArr","winMode","setAttribute","className","innerHTML","style","display","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","constructor","btoa","y","encodeURIComponent","FileReader","result","readAsDataURL"],"mappings":"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","sourcesContent":["//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\r\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\r\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\r\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\r\n// v4 adds AMD/UMD, commonJS, and plain browser support\r\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\r\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\r\n// https://github.com/rndme/download\r\n\r\n(function (root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine([], factory);\r\n\t} else if (typeof exports === 'object') {\r\n\t\t// Node. Does not work with strict CommonJS, but\r\n\t\t// only CommonJS-like environments that support module.exports,\r\n\t\t// like Node.\r\n\t\tmodule.exports = factory();\r\n\t} else {\r\n\t\t// Browser globals (root is window)\r\n\t\troot.download = factory();\r\n  }\r\n}(this, function () {\r\n\r\n\treturn function download(data, strFileName, strMimeType) {\r\n\r\n\t\tvar self = window, // this script is only for browsers anyway...\r\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\r\n\t\t\tmimeType = strMimeType || defaultMime,\r\n\t\t\tpayload = data,\r\n\t\t\turl = !strFileName && !strMimeType && payload,\r\n\t\t\tanchor = document.createElement(\"a\"),\r\n\t\t\ttoString = function(a){return String(a);},\r\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\r\n\t\t\tfileName = strFileName || \"download\",\r\n\t\t\tblob,\r\n\t\t\treader;\r\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\r\n\t  \r\n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\r\n\t\t\tpayload=[payload, mimeType];\r\n\t\t\tmimeType=payload[0];\r\n\t\t\tpayload=payload[1];\r\n\t\t}\r\n\r\n\r\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\r\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\r\n\t\t\tanchor.href = url; // assign href prop to temp anchor\r\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\r\n        \t\tvar ajax=new XMLHttpRequest();\r\n        \t\tajax.open( \"GET\", url, true);\r\n        \t\tajax.responseType = 'blob';\r\n        \t\tajax.onload= function(e){ \r\n\t\t\t\t  download(e.target.response, fileName, defaultMime);\r\n\t\t\t\t};\r\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\r\n\t\t\t    return ajax;\r\n\t\t\t} // end if valid url?\r\n\t\t} // end if url?\r\n\r\n\r\n\t\t//go ahead and download dataURLs right away\r\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\r\n\t\t\r\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\r\n\t\t\t\tpayload=dataUrlToBlob(payload);\r\n\t\t\t\tmimeType=payload.type || defaultMime;\r\n\t\t\t}else{\t\t\t\r\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\r\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\r\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}else{//not data url, is it a string with special needs?\r\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \r\n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\r\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\r\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\r\n\t\t\t}\t\t  \r\n\t\t}\r\n\t\tblob = payload instanceof myBlob ?\r\n\t\t\tpayload :\r\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\r\n\r\n\r\n\t\tfunction dataUrlToBlob(strUrl) {\r\n\t\t\tvar parts= strUrl.split(/[:;,]/),\r\n\t\t\ttype= parts[1],\r\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\r\n\t\t\tbinData= decoder( parts.pop() ),\r\n\t\t\tmx= binData.length,\r\n\t\t\ti= 0,\r\n\t\t\tuiArr= new Uint8Array(mx);\r\n\r\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\r\n\r\n\t\t\treturn new myBlob([uiArr], {type: type});\r\n\t\t }\r\n\r\n\t\tfunction saver(url, winMode){\r\n\r\n\t\t\tif ('download' in anchor) { //html5 A[download]\r\n\t\t\t\tanchor.href = url;\r\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\r\n\t\t\t\tanchor.className = \"download-js-link\";\r\n\t\t\t\tanchor.innerHTML = \"downloading...\";\r\n\t\t\t\tanchor.style.display = \"none\";\r\n\t\t\t\tdocument.body.appendChild(anchor);\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tanchor.click();\r\n\t\t\t\t\tdocument.body.removeChild(anchor);\r\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\r\n\t\t\t\t}, 66);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// handle non-a[download] safari as best we can:\r\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\r\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\r\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\r\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t//do iframe dataURL download (old ch+FF):\r\n\t\t\tvar f = document.createElement(\"iframe\");\r\n\t\t\tdocument.body.appendChild(f);\r\n\r\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\r\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\r\n\t\t\t}\r\n\t\t\tf.src=url;\r\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\r\n\r\n\t\t}//end saver\r\n\r\n\r\n\r\n\r\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\r\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\r\n\t\t}\r\n\r\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\r\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\r\n\t\t}else{\r\n\t\t\t// handle non-Blob()+non-URL browsers:\r\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\r\n\t\t\t\ttry{\r\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\r\n\t\t\t\t}catch(y){\r\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Blob but not URL support:\r\n\t\t\treader=new FileReader();\r\n\t\t\treader.onload=function(e){\r\n\t\t\t\tsaver(this.result);\r\n\t\t\t};\r\n\t\t\treader.readAsDataURL(blob);\r\n\t\t}\r\n\t\treturn true;\r\n\t}; /* end download() */\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}