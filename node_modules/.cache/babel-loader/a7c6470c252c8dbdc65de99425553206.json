{"ast":null,"code":"function LayoutManager(x1, y1, x2, y2, padding) {\n  if (typeof padding === \"undefined\") padding = 0;\n  this._padding = padding;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._x2 = x2;\n  this._y2 = y2;\n  this._topOccupied = this._padding;\n  this._bottomOccupied = this._padding;\n  this._leftOccupied = this._padding;\n  this._rightOccupied = this._padding;\n}\n\nLayoutManager.prototype.registerSpace = function (position, size) {\n  if (position === \"top\") {\n    this._topOccupied += size.height;\n  } else if (position === \"bottom\") {\n    this._bottomOccupied += size.height;\n  } else if (position === \"left\") {\n    this._leftOccupied += size.width; // this is width when seen upright/vertically\n  } else if (position === \"right\") {\n    this._rightOccupied += size.width; // this is width when seen upright/vertically\n  }\n};\n\nLayoutManager.prototype.unRegisterSpace = function (position, size) {\n  if (position === \"top\") {\n    this._topOccupied -= size.height;\n  } else if (position === \"bottom\") {\n    this._bottomOccupied -= size.height;\n  } else if (position === \"left\") {\n    this._leftOccupied -= size.width; // this is width when seen upright/vertically\n  } else if (position === \"right\") {\n    this._rightOccupied -= size.width; // this is width when seen upright/vertically\n  }\n};\n\nLayoutManager.prototype.getFreeSpace = function () {\n  ///<signature>\n  ///<summary>Returns available free space {x1:number, y1:number, x2:number, y2:number}</summary>\n  ///</signature>\n  return {\n    x1: this._x1 + this._leftOccupied,\n    y1: this._y1 + this._topOccupied,\n    x2: this._x2 - this._rightOccupied,\n    y2: this._y2 - this._bottomOccupied,\n    width: this._x2 - this._x1 - this._rightOccupied - this._leftOccupied,\n    height: this._y2 - this._y1 - this._bottomOccupied - this._topOccupied\n  };\n};\n\nLayoutManager.prototype.reset = function () {\n  //so that there is enough padding.\n  this._topOccupied = this._padding;\n  this._bottomOccupied = this._padding;\n  this._leftOccupied = this._padding;\n  this._rightOccupied = this._padding;\n};\n\nexport default LayoutManager;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/canvasjs/src/core/layout_manager.js"],"names":["LayoutManager","x1","y1","x2","y2","padding","_padding","_x1","_y1","_x2","_y2","_topOccupied","_bottomOccupied","_leftOccupied","_rightOccupied","prototype","registerSpace","position","size","height","width","unRegisterSpace","getFreeSpace","reset"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,OAAvC,EAAgD;AAE9C,MAAI,OAAQA,OAAR,KAAqB,WAAzB,EACEA,OAAO,GAAG,CAAV;AAEF,OAAKC,QAAL,GAAgBD,OAAhB;AAEA,OAAKE,GAAL,GAAWN,EAAX;AACA,OAAKO,GAAL,GAAWN,EAAX;AACA,OAAKO,GAAL,GAAWN,EAAX;AACA,OAAKO,GAAL,GAAWN,EAAX;AAEA,OAAKO,YAAL,GAAoB,KAAKL,QAAzB;AACA,OAAKM,eAAL,GAAuB,KAAKN,QAA5B;AACA,OAAKO,aAAL,GAAqB,KAAKP,QAA1B;AACA,OAAKQ,cAAL,GAAsB,KAAKR,QAA3B;AACD;;AAEDN,aAAa,CAACe,SAAd,CAAwBC,aAAxB,GAAwC,UAAUC,QAAV,EAAoBC,IAApB,EAA0B;AAChE,MAAID,QAAQ,KAAK,KAAjB,EAAwB;AACtB,SAAKN,YAAL,IAAqBO,IAAI,CAACC,MAA1B;AACD,GAFD,MAGK,IAAIF,QAAQ,KAAK,QAAjB,EAA2B;AAC9B,SAAKL,eAAL,IAAwBM,IAAI,CAACC,MAA7B;AACD,GAFI,MAEE,IAAIF,QAAQ,KAAK,MAAjB,EAAyB;AAC9B,SAAKJ,aAAL,IAAsBK,IAAI,CAACE,KAA3B,CAD8B,CACI;AACnC,GAFM,MAEA,IAAIH,QAAQ,KAAK,OAAjB,EAA0B;AAC/B,SAAKH,cAAL,IAAuBI,IAAI,CAACE,KAA5B,CAD+B,CACG;AACnC;AACF,CAXD;;AAaApB,aAAa,CAACe,SAAd,CAAwBM,eAAxB,GAA0C,UAAUJ,QAAV,EAAoBC,IAApB,EAA0B;AAClE,MAAID,QAAQ,KAAK,KAAjB,EAAwB;AACtB,SAAKN,YAAL,IAAqBO,IAAI,CAACC,MAA1B;AACD,GAFD,MAGK,IAAIF,QAAQ,KAAK,QAAjB,EAA2B;AAC9B,SAAKL,eAAL,IAAwBM,IAAI,CAACC,MAA7B;AACD,GAFI,MAEE,IAAIF,QAAQ,KAAK,MAAjB,EAAyB;AAC9B,SAAKJ,aAAL,IAAsBK,IAAI,CAACE,KAA3B,CAD8B,CACG;AAClC,GAFM,MAEA,IAAIH,QAAQ,KAAK,OAAjB,EAA0B;AAC/B,SAAKH,cAAL,IAAuBI,IAAI,CAACE,KAA5B,CAD+B,CACG;AACnC;AACF,CAXD;;AAaApB,aAAa,CAACe,SAAd,CAAwBO,YAAxB,GAAuC,YAAY;AACjD;AACA;AACA;AAEA,SAAO;AACLrB,IAAAA,EAAE,EAAE,KAAKM,GAAL,GAAW,KAAKM,aADf;AAELX,IAAAA,EAAE,EAAE,KAAKM,GAAL,GAAW,KAAKG,YAFf;AAGLR,IAAAA,EAAE,EAAE,KAAKM,GAAL,GAAW,KAAKK,cAHf;AAILV,IAAAA,EAAE,EAAE,KAAKM,GAAL,GAAW,KAAKE,eAJf;AAKLQ,IAAAA,KAAK,EAAG,KAAKX,GAAL,GAAW,KAAKF,GAAjB,GAAwB,KAAKO,cAA7B,GAA8C,KAAKD,aALrD;AAMLM,IAAAA,MAAM,EAAG,KAAKT,GAAL,GAAW,KAAKF,GAAjB,GAAwB,KAAKI,eAA7B,GAA+C,KAAKD;AANvD,GAAP;AAQD,CAbD;;AAeAX,aAAa,CAACe,SAAd,CAAwBQ,KAAxB,GAAgC,YAAY;AAC1C;AACA,OAAKZ,YAAL,GAAoB,KAAKL,QAAzB;AACA,OAAKM,eAAL,GAAuB,KAAKN,QAA5B;AACA,OAAKO,aAAL,GAAqB,KAAKP,QAA1B;AACA,OAAKQ,cAAL,GAAsB,KAAKR,QAA3B;AACD,CAND;;AAQA,eAAeN,aAAf","sourcesContent":["function LayoutManager(x1, y1, x2, y2, padding) {\r\n\r\n  if (typeof (padding) === \"undefined\")\r\n    padding = 0;\r\n\r\n  this._padding = padding;\r\n\r\n  this._x1 = x1;\r\n  this._y1 = y1;\r\n  this._x2 = x2;\r\n  this._y2 = y2;\r\n\r\n  this._topOccupied = this._padding;\r\n  this._bottomOccupied = this._padding;\r\n  this._leftOccupied = this._padding;\r\n  this._rightOccupied = this._padding;\r\n}\r\n\r\nLayoutManager.prototype.registerSpace = function (position, size) {\r\n  if (position === \"top\") {\r\n    this._topOccupied += size.height;\r\n  }\r\n  else if (position === \"bottom\") {\r\n    this._bottomOccupied += size.height;\r\n  } else if (position === \"left\") {\r\n    this._leftOccupied += size.width; // this is width when seen upright/vertically\r\n  } else if (position === \"right\") {\r\n    this._rightOccupied += size.width;// this is width when seen upright/vertically\r\n  }\r\n}\r\n\r\nLayoutManager.prototype.unRegisterSpace = function (position, size) {\r\n  if (position === \"top\") {\r\n    this._topOccupied -= size.height;\r\n  }\r\n  else if (position === \"bottom\") {\r\n    this._bottomOccupied -= size.height;\r\n  } else if (position === \"left\") {\r\n    this._leftOccupied -= size.width;// this is width when seen upright/vertically\r\n  } else if (position === \"right\") {\r\n    this._rightOccupied -= size.width;// this is width when seen upright/vertically\r\n  }\r\n}\r\n\r\nLayoutManager.prototype.getFreeSpace = function () {\r\n  ///<signature>\r\n  ///<summary>Returns available free space {x1:number, y1:number, x2:number, y2:number}</summary>\r\n  ///</signature>\r\n\r\n  return {\r\n    x1: this._x1 + this._leftOccupied,\r\n    y1: this._y1 + this._topOccupied,\r\n    x2: this._x2 - this._rightOccupied,\r\n    y2: this._y2 - this._bottomOccupied,\r\n    width: (this._x2 - this._x1) - this._rightOccupied - this._leftOccupied,\r\n    height: (this._y2 - this._y1) - this._bottomOccupied - this._topOccupied\r\n  };\r\n}\r\n\r\nLayoutManager.prototype.reset = function () {\r\n  //so that there is enough padding.\r\n  this._topOccupied = this._padding;\r\n  this._bottomOccupied = this._padding;\r\n  this._leftOccupied = this._padding;\r\n  this._rightOccupied = this._padding;\r\n}\r\n\r\nexport default LayoutManager;\r\n"]},"metadata":{},"sourceType":"module"}