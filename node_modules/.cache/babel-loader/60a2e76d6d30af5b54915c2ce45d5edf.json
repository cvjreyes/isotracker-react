{"ast":null,"code":"var _excluded = [\"crossHiddenColumns\"];\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { createDefaultHeaderSettings, createPlaceholderHeaderSettings } from \"./utils.mjs\";\n/**\r\n * A function that dump a tree structure into multidimensional array. That structure is\r\n * later processed by header renderers to modify TH elements to achieve a proper\r\n * DOM structure.\r\n *\r\n * That structure contains settings object for every TH element generated by Walkontable.\r\n * The matrix operates on visual column index.\r\n *\r\n * Output example:\r\n *   [\r\n *     [\r\n *       { label: 'A1', colspan: 2, origColspan: 2, isHidden: false, ... },\r\n *       { label: '', colspan: 1, origColspan: 1, isHidden: true, ... },\r\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *     ],\r\n *     [\r\n *       { label: 'true', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *       { label: 'B2', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *       { label: '4', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *     ],\r\n *     [\r\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *     ],\r\n *   ]\r\n *\r\n * @param {TreeNode[]} headerRoots An array of root nodes.\r\n * @returns {Array[]}\r\n */\n\nexport function generateMatrix(headerRoots) {\n  var matrix = [];\n  arrayEach(headerRoots, function (rootNode) {\n    rootNode.walkDown(function (node) {\n      var nodeData = node.data;\n      var origColspan = nodeData.origColspan,\n          columnIndex = nodeData.columnIndex,\n          headerLevel = nodeData.headerLevel,\n          crossHiddenColumns = nodeData.crossHiddenColumns;\n      var colspanHeaderLayer = createNestedArrayIfNecessary(matrix, headerLevel);\n      var isRootSettingsFound = false;\n\n      for (var i = columnIndex; i < columnIndex + origColspan; i++) {\n        var isColumnHidden = crossHiddenColumns.includes(i);\n\n        if (isColumnHidden || isRootSettingsFound) {\n          colspanHeaderLayer.push(createPlaceholderHeaderSettings(nodeData));\n        } else {\n          var headerRootSettings = createHeaderSettings(nodeData);\n          headerRootSettings.isRoot = true;\n          colspanHeaderLayer.push(headerRootSettings);\n          isRootSettingsFound = true;\n        }\n      }\n    });\n  });\n  return matrix;\n}\n/**\r\n * Creates header settings object.\r\n *\r\n * @param {object} nodeData The tree data object.\r\n * @returns {object}\r\n */\n\nfunction createHeaderSettings(nodeData) {\n  // For the matrix module we do not need to export \"crossHiddenColumns\" key. It's redundant here.\n  var _createDefaultHeaderS = createDefaultHeaderSettings(nodeData),\n      crossHiddenColumns = _createDefaultHeaderS.crossHiddenColumns,\n      headerRootSettings = _objectWithoutProperties(_createDefaultHeaderS, _excluded);\n\n  return headerRootSettings;\n}\n/**\r\n * Internal helper which ensures that subarray exists under specified index.\r\n *\r\n * @param {Array[]} array An array to check.\r\n * @param {number} index An array index under the subarray should be checked.\r\n * @returns {Array}\r\n */\n\n\nfunction createNestedArrayIfNecessary(array, index) {\n  var subArray;\n\n  if (Array.isArray(array[index])) {\n    subArray = array[index];\n  } else {\n    subArray = [];\n    array[index] = subArray;\n  }\n\n  return subArray;\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/nestedHeaders/stateManager/matrixGenerator.mjs"],"names":["_excluded","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","arrayEach","createDefaultHeaderSettings","createPlaceholderHeaderSettings","generateMatrix","headerRoots","matrix","rootNode","walkDown","node","nodeData","data","origColspan","columnIndex","headerLevel","crossHiddenColumns","colspanHeaderLayer","createNestedArrayIfNecessary","isRootSettingsFound","isColumnHidden","includes","push","headerRootSettings","createHeaderSettings","isRoot","_createDefaultHeaderS","array","index","subArray","Array","isArray"],"mappings":"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","sourcesContent":["var _excluded = [\"crossHiddenColumns\"];\r\n\r\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\n\r\nimport \"core-js/modules/es.array.includes.js\";\r\nimport \"core-js/modules/es.string.includes.js\";\r\nimport \"core-js/modules/es.object.keys.js\";\r\nimport \"core-js/modules/es.array.index-of.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\n\r\n/* eslint-disable jsdoc/require-description-complete-sentence */\r\nimport { arrayEach } from \"../../../helpers/array.mjs\";\r\nimport { createDefaultHeaderSettings, createPlaceholderHeaderSettings } from \"./utils.mjs\";\r\n/**\r\n * A function that dump a tree structure into multidimensional array. That structure is\r\n * later processed by header renderers to modify TH elements to achieve a proper\r\n * DOM structure.\r\n *\r\n * That structure contains settings object for every TH element generated by Walkontable.\r\n * The matrix operates on visual column index.\r\n *\r\n * Output example:\r\n *   [\r\n *     [\r\n *       { label: 'A1', colspan: 2, origColspan: 2, isHidden: false, ... },\r\n *       { label: '', colspan: 1, origColspan: 1, isHidden: true, ... },\r\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *     ],\r\n *     [\r\n *       { label: 'true', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *       { label: 'B2', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *       { label: '4', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *     ],\r\n *     [\r\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *       { label: '', colspan: 1, origColspan: 1, isHidden: false, ... },\r\n *     ],\r\n *   ]\r\n *\r\n * @param {TreeNode[]} headerRoots An array of root nodes.\r\n * @returns {Array[]}\r\n */\r\n\r\nexport function generateMatrix(headerRoots) {\r\n  var matrix = [];\r\n  arrayEach(headerRoots, function (rootNode) {\r\n    rootNode.walkDown(function (node) {\r\n      var nodeData = node.data;\r\n      var origColspan = nodeData.origColspan,\r\n          columnIndex = nodeData.columnIndex,\r\n          headerLevel = nodeData.headerLevel,\r\n          crossHiddenColumns = nodeData.crossHiddenColumns;\r\n      var colspanHeaderLayer = createNestedArrayIfNecessary(matrix, headerLevel);\r\n      var isRootSettingsFound = false;\r\n\r\n      for (var i = columnIndex; i < columnIndex + origColspan; i++) {\r\n        var isColumnHidden = crossHiddenColumns.includes(i);\r\n\r\n        if (isColumnHidden || isRootSettingsFound) {\r\n          colspanHeaderLayer.push(createPlaceholderHeaderSettings(nodeData));\r\n        } else {\r\n          var headerRootSettings = createHeaderSettings(nodeData);\r\n          headerRootSettings.isRoot = true;\r\n          colspanHeaderLayer.push(headerRootSettings);\r\n          isRootSettingsFound = true;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  return matrix;\r\n}\r\n/**\r\n * Creates header settings object.\r\n *\r\n * @param {object} nodeData The tree data object.\r\n * @returns {object}\r\n */\r\n\r\nfunction createHeaderSettings(nodeData) {\r\n  // For the matrix module we do not need to export \"crossHiddenColumns\" key. It's redundant here.\r\n  var _createDefaultHeaderS = createDefaultHeaderSettings(nodeData),\r\n      crossHiddenColumns = _createDefaultHeaderS.crossHiddenColumns,\r\n      headerRootSettings = _objectWithoutProperties(_createDefaultHeaderS, _excluded);\r\n\r\n  return headerRootSettings;\r\n}\r\n/**\r\n * Internal helper which ensures that subarray exists under specified index.\r\n *\r\n * @param {Array[]} array An array to check.\r\n * @param {number} index An array index under the subarray should be checked.\r\n * @returns {Array}\r\n */\r\n\r\n\r\nfunction createNestedArrayIfNecessary(array, index) {\r\n  var subArray;\r\n\r\n  if (Array.isArray(array[index])) {\r\n    subArray = array[index];\r\n  } else {\r\n    subArray = [];\r\n    array[index] = subArray;\r\n  }\r\n\r\n  return subArray;\r\n}"]},"metadata":{},"sourceType":"module"}