{"ast":null,"code":"import CanvasJSObject from './canvasjs';\nimport Animator from './animator';\nimport DataSeries from './data_series';\nimport TextBlock from './text_block';\nimport RenderHelper from '../helpers/render';\nimport LayoutManager from './layout_manager';\nimport EventManager from './event_manager';\nimport ToolTip from './tooltip';\nimport CultureInfo from '../core/culture_info';\nimport Axis from '../core/axis';\nimport Title from '../core/title';\nimport Legend from '../core/legend';\nimport AnimationHelper from '../helpers/animator';\nimport { colorSets } from '../constants/themes';\nimport { isDebugMode, defaultOptions } from '../constants/options'; // import {inherits} from 'util';\n\nimport { addEvent, setCanvasSize, addArrayIndexOf, hide, show, getMouseCoordinates, getProperty, isCanvasSupported, extend, createCanvas, extendCtx, getObjectId, getDevicePixelBackingStoreRatio, trimString, numberFormat, getLineDashArray, intToHexColorString, compareDataPointX } from '../helpers/utils';\nimport { SplineChart, ColumnChart, StackedColumnChart, StackedColumn100Chart, BarChart, StackedBarChart, StackedBar100Chart, AreaChart, SplineAreaChart, StepAreaChart, StackedAreaChart, StackedArea100Chart, BubbleChart, ScatterChart, CandlestickChart, RangeColumnChart, RangeBarChart, RangeAreaChart, RangeSplineAreaChart, PieChart } from '../charts/index';\nvar devicePixelBackingStoreRatio = getDevicePixelBackingStoreRatio();\n\nfunction Chart(containerId, options, publicChartReference) {\n  this._publicChartReference = publicChartReference;\n  options = options || {};\n  Chart.base.constructor.call(this, \"Chart\", options, options.theme ? options.theme : \"theme1\");\n\n  var _this = this;\n\n  this._containerId = containerId;\n  this._objectsInitialized = false;\n  this.ctx = null;\n  this.overlaidCanvasCtx = null;\n  this._indexLabels = [];\n  this._panTimerId = 0;\n  this._lastTouchEventType = \"\";\n  this._lastTouchData = null;\n  this.isAnimating = false;\n  this.renderCount = 0;\n  this.animatedRender = false;\n  this.disableToolTip = false;\n  this.panEnabled = false;\n  this._defaultCursor = \"default\";\n  this.plotArea = {\n    canvas: null,\n    ctx: null,\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    width: 0,\n    height: 0\n  };\n  this._dataInRenderedOrder = [];\n  this._container = typeof this._containerId === \"string\" ? document.getElementById(this._containerId) : this._containerId;\n\n  if (!this._container) {\n    if (window.console) window.console.log(\"CanvasJS Error: Chart Container with id \\\"\" + this._containerId + \"\\\" was not found\");\n    return;\n  }\n\n  this._container.innerHTML = \"\";\n  var width = 0;\n  var height = 0;\n  if (this._options.width) width = this.width;else width = this._container.clientWidth > 0 ? this._container.clientWidth : this.width;\n  if (this._options.height) height = this.height;else height = this._container.clientHeight > 0 ? this._container.clientHeight : this.height;\n  this.width = width;\n  this.height = height;\n  this.x1 = this.y1 = 0;\n  this.x2 = this.width;\n  this.y2 = this.height;\n  this._selectedColorSet = typeof colorSets[this.colorSet] !== \"undefined\" ? colorSets[this.colorSet] : colorSets[\"colorSet1\"];\n  this._canvasJSContainer = document.createElement(\"div\");\n\n  this._canvasJSContainer.setAttribute(\"class\", \"canvasjs-chart-container\");\n\n  this._canvasJSContainer.style.position = \"relative\";\n  this._canvasJSContainer.style.textAlign = \"left\";\n  this._canvasJSContainer.style.cursor = \"auto\";\n\n  if (!isCanvasSupported) {\n    this._canvasJSContainer.style.height = \"0px\"; //In IE6 toolTip doesn't show at proper position if not set.\n  }\n\n  this._container.appendChild(this._canvasJSContainer);\n\n  this.canvas = createCanvas(width, height);\n  this.canvas.style.position = \"absolute\";\n\n  if (this.canvas.getContext) {\n    //try {\n    //\tthis.canvas.style.background = this.backgroundColor;\n    //} catch (e) { }\n    this._canvasJSContainer.appendChild(this.canvas);\n\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.ctx.textBaseline = \"top\";\n    extendCtx(this.ctx);\n  } else return; //this.canvas.style.cursor = \"pointer\";\n\n\n  if (!isCanvasSupported) {\n    this.plotArea.canvas = createCanvas(width, height);\n    this.plotArea.canvas.style.position = \"absolute\";\n    this.plotArea.canvas.setAttribute(\"class\", \"plotAreaCanvas\");\n\n    this._canvasJSContainer.appendChild(this.plotArea.canvas);\n\n    this.plotArea.ctx = this.plotArea.canvas.getContext(\"2d\");\n  } else {\n    this.plotArea.ctx = this.ctx;\n  }\n\n  this.overlaidCanvas = createCanvas(width, height);\n  this.overlaidCanvas.style.position = \"absolute\";\n\n  this._canvasJSContainer.appendChild(this.overlaidCanvas);\n\n  this.overlaidCanvasCtx = this.overlaidCanvas.getContext(\"2d\");\n  this.overlaidCanvasCtx.textBaseline = \"top\";\n  this._eventManager = new EventManager(this);\n  addEvent(window, \"resize\", function () {\n    //this._container.addEventListener(\"DOMSubtreeModified\", function () {\n    if (_this._updateSize()) _this.render();\n  });\n  this._toolBar = document.createElement(\"div\");\n\n  this._toolBar.setAttribute(\"class\", \"canvasjs-chart-toolbar\");\n\n  this._toolBar.style.cssText = \"position: absolute; right: 1px; top: 1px;\";\n\n  this._canvasJSContainer.appendChild(this._toolBar);\n\n  this.bounds = {\n    x1: 0,\n    y1: 0,\n    x2: this.width,\n    y2: this.height\n  };\n  addEvent(this.overlaidCanvas, 'click', function (e) {\n    _this._mouseEventHandler(e);\n  });\n  addEvent(this.overlaidCanvas, 'mousemove', function (e) {\n    _this._mouseEventHandler(e);\n  });\n  addEvent(this.overlaidCanvas, 'mouseup', function (e) {\n    _this._mouseEventHandler(e);\n  });\n  addEvent(this.overlaidCanvas, 'mousedown', function (e) {\n    _this._mouseEventHandler(e);\n\n    hide(_this._dropdownMenu);\n  });\n  addEvent(this.overlaidCanvas, 'mouseout', function (e) {\n    _this._mouseEventHandler(e);\n  });\n  addEvent(this.overlaidCanvas, window.navigator.msPointerEnabled ? \"MSPointerDown\" : \"touchstart\", function (e) {\n    _this._touchEventHandler(e);\n  });\n  addEvent(this.overlaidCanvas, window.navigator.msPointerEnabled ? \"MSPointerMove\" : 'touchmove', function (e) {\n    _this._touchEventHandler(e);\n  });\n  addEvent(this.overlaidCanvas, window.navigator.msPointerEnabled ? \"MSPointerUp\" : 'touchend', function (e) {\n    _this._touchEventHandler(e);\n  });\n  addEvent(this.overlaidCanvas, window.navigator.msPointerEnabled ? \"MSPointerCancel\" : 'touchcancel', function (e) {\n    _this._touchEventHandler(e);\n  });\n\n  if (!this._creditLink) {\n    this._creditLink = document.createElement(\"a\");\n\n    this._creditLink.setAttribute(\"class\", \"canvasjs-chart-credit\");\n\n    this._creditLink.setAttribute(\"style\", \"outline:none;margin:0px;position:absolute;right:3px;top:\" + (this.height - 14) + \"px;color:dimgrey;text-decoration:none;font-size:10px;font-family:Lucida Grande, Lucida Sans Unicode, Arial, sans-serif\");\n\n    this._creditLink.setAttribute(\"tabIndex\", -1);\n\n    this._creditLink.setAttribute(\"target\", \"_blank\");\n  }\n\n  this._toolTip = new ToolTip(this, this._options.toolTip, this.theme);\n  this.data = null;\n  this.axisX = null;\n  this.axisY = null;\n  this.axisY2 = null;\n  this.sessionVariables = {\n    axisX: {},\n    axisY: {},\n    axisY2: {}\n  };\n}\n\nextend(Chart, CanvasJSObject); //Update Chart Properties\n\nChart.prototype._updateOptions = function () {\n  var _this = this;\n\n  this.updateOption(\"width\");\n  this.updateOption(\"height\");\n  this.updateOption(\"dataPointMaxWidth\");\n  this.updateOption(\"interactivityEnabled\");\n  this.updateOption(\"theme\");\n  if (this.updateOption(\"colorSet\")) this._selectedColorSet = typeof colorSets[this.colorSet] !== \"undefined\" ? colorSets[this.colorSet] : colorSets[\"colorSet1\"];\n  this.updateOption(\"backgroundColor\");\n  if (!this.backgroundColor) this.backgroundColor = \"rgba(0,0,0,0)\";\n  this.updateOption(\"culture\");\n  this._cultureInfo = new CultureInfo(this._options.culture);\n  this.updateOption(\"animationEnabled\");\n  this.animationEnabled = this.animationEnabled && isCanvasSupported;\n  this.updateOption(\"animationDuration\");\n  this.updateOption(\"rangeChanging\");\n  this.updateOption(\"rangeChanged\"); //Need to check this._options.zoomEnabled because this.zoomEnabled is used internally to keep track of state - and hence changes.\n\n  if (this._options.zoomEnabled) {\n    if (!this._zoomButton) {\n      hide(this._zoomButton = document.createElement(\"button\"));\n      setButtonState(this, this._zoomButton, \"pan\");\n\n      this._toolBar.appendChild(this._zoomButton);\n\n      addEvent(this._zoomButton, \"click\", function () {\n        if (_this.zoomEnabled) {\n          _this.zoomEnabled = false;\n          _this.panEnabled = true;\n          setButtonState(_this, _this._zoomButton, \"zoom\");\n        } else {\n          _this.zoomEnabled = true;\n          _this.panEnabled = false;\n          setButtonState(_this, _this._zoomButton, \"pan\");\n        }\n\n        _this.render();\n      });\n    }\n\n    if (!this._resetButton) {\n      hide(this._resetButton = document.createElement(\"button\"));\n      setButtonState(this, this._resetButton, \"reset\");\n\n      this._toolBar.appendChild(this._resetButton);\n\n      addEvent(this._resetButton, \"click\", function () {\n        _this._toolTip.hide();\n\n        if (_this.zoomEnabled || _this.panEnabled) {\n          _this.zoomEnabled = true;\n          _this.panEnabled = false;\n          setButtonState(_this, _this._zoomButton, \"pan\");\n          _this._defaultCursor = \"default\";\n          _this.overlaidCanvas.style.cursor = _this._defaultCursor;\n        } else {\n          _this.zoomEnabled = false;\n          _this.panEnabled = false;\n        } //Reset axisX\n\n\n        if (_this.sessionVariables.axisX) {\n          _this.sessionVariables.axisX.newViewportMinimum = null;\n          _this.sessionVariables.axisX.newViewportMaximum = null;\n        } //Reset axisY\n\n\n        if (_this.sessionVariables.axisY) {\n          _this.sessionVariables.axisY.newViewportMinimum = null;\n          _this.sessionVariables.axisY.newViewportMaximum = null;\n        } //Reset axisY2\n\n\n        if (_this.sessionVariables.axisY2) {\n          _this.sessionVariables.axisY2.newViewportMinimum = null;\n          _this.sessionVariables.axisY2.newViewportMaximum = null;\n        }\n\n        _this.resetOverlayedCanvas();\n\n        hide(_this._zoomButton, _this._resetButton);\n\n        _this._dispatchRangeEvent(\"rangeChanging\", \"reset\");\n\n        _this.render();\n\n        _this._dispatchRangeEvent(\"rangeChanged\", \"reset\");\n      });\n      this.overlaidCanvas.style.cursor = _this._defaultCursor;\n    }\n\n    if (!this.zoomEnabled && !this.panEnabled) {\n      if (!this._zoomButton) {\n        this.zoomEnabled = true;\n        this.panEnabled = false;\n      } else {\n        if (_this._zoomButton.getAttribute(\"state\") === _this._cultureInfo.zoomText) {\n          this.panEnabled = true;\n          this.zoomEnabled = false;\n        } else {\n          this.zoomEnabled = true;\n          this.panEnabled = false;\n        }\n\n        show(_this._zoomButton, _this._resetButton);\n      }\n    }\n  } else {\n    this.zoomEnabled = false;\n    this.panEnabled = false;\n  }\n\n  if (this._menuButton) {\n    if (this.exportEnabled) show(this._menuButton);else hide(this._menuButton);\n  } else if (this.exportEnabled && isCanvasSupported) {\n    this._menuButton = document.createElement(\"button\");\n    setButtonState(this, this._menuButton, \"menu\");\n\n    this._toolBar.appendChild(this._menuButton);\n\n    addEvent(this._menuButton, \"click\", function () {\n      if (_this._dropdownMenu.style.display === \"none\") {\n        if (_this._dropDownCloseTime && new Date().getTime() - _this._dropDownCloseTime.getTime() <= 500) return;\n        _this._dropdownMenu.style.display = \"block\";\n\n        _this._menuButton.blur();\n\n        _this._dropdownMenu.focus();\n      }\n    }, true);\n  }\n\n  if (!this._dropdownMenu && this.exportEnabled && isCanvasSupported) {\n    this._dropdownMenu = document.createElement(\"div\");\n\n    this._dropdownMenu.setAttribute(\"tabindex\", -1);\n\n    this._dropdownMenu.style.cssText = \"position: absolute; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; cursor: pointer;right: 1px;top: 25px;min-width: 120px;outline: 0;border: 1px solid silver;font-size: 14px;font-family: Calibri, Verdana, sans-serif;padding: 5px 0px 5px 0px;text-align: left;background-color: #fff;line-height: 20px;box-shadow: 2px 2px 10px #888888;\";\n    _this._dropdownMenu.style.display = \"none\";\n\n    this._toolBar.appendChild(this._dropdownMenu);\n\n    addEvent(this._dropdownMenu, \"blur\", function () {\n      hide(_this._dropdownMenu);\n      _this._dropDownCloseTime = new Date();\n    }, true);\n    var exportOption = document.createElement(\"div\");\n    exportOption.style.cssText = \"padding: 2px 15px 2px 10px\";\n    exportOption.innerHTML = this._cultureInfo.saveJPGText;\n\n    this._dropdownMenu.appendChild(exportOption);\n\n    addEvent(exportOption, \"mouseover\", function () {\n      this.style.backgroundColor = \"#EEEEEE\";\n    }, true);\n    addEvent(exportOption, \"mouseout\", function () {\n      this.style.backgroundColor = \"transparent\";\n    }, true);\n    addEvent(exportOption, \"click\", function () {\n      exportCanvas(_this.canvas, \"jpg\", _this.exportFileName);\n      hide(_this._dropdownMenu);\n    }, true);\n    var exportOption = document.createElement(\"div\");\n    exportOption.style.cssText = \"padding: 2px 15px 2px 10px\";\n    exportOption.innerHTML = this._cultureInfo.savePNGText;\n\n    this._dropdownMenu.appendChild(exportOption);\n\n    addEvent(exportOption, \"mouseover\", function () {\n      this.style.backgroundColor = \"#EEEEEE\";\n    }, true);\n    addEvent(exportOption, \"mouseout\", function () {\n      this.style.backgroundColor = \"transparent\";\n    }, true);\n    addEvent(exportOption, \"click\", function () {\n      exportCanvas(_this.canvas, \"png\", _this.exportFileName);\n      hide(_this._dropdownMenu);\n    }, true);\n  }\n\n  if (this._toolBar.style.display !== \"none\" && this._zoomButton) {\n    this.panEnabled ? setButtonState(_this, _this._zoomButton, \"zoom\") : setButtonState(_this, _this._zoomButton, \"pan\");\n    if (_this._resetButton.getAttribute(\"state\") !== _this._cultureInfo.resetText) setButtonState(_this, _this._resetButton, \"reset\");\n  }\n\n  if (typeof defaultOptions.Chart.creditHref === \"undefined\") {\n    this.creditHref = \"http://canvasjs.com/\";\n    this.creditText = \"CanvasJS.com\";\n  } else {\n    var creditTextChanged = this.updateOption(\"creditText\");\n    var creditHrefChanged = this.updateOption(\"creditHref\");\n  }\n\n  if (this.renderCount === 0 || creditTextChanged || creditHrefChanged) {\n    this._creditLink.setAttribute(\"href\", this.creditHref);\n\n    this._creditLink.innerHTML = this.creditText;\n  }\n\n  if (this.creditHref && this.creditText) {\n    if (!this._creditLink.parentElement) this._canvasJSContainer.appendChild(this._creditLink);\n  } else if (this._creditLink.parentElement) this._canvasJSContainer.removeChild(this._creditLink);\n\n  if (this._options.toolTip && this._toolTip._options !== this._options.toolTip) this._toolTip._options = this._options.toolTip;\n\n  for (var prop in this._toolTip._options) {\n    if (this._toolTip._options.hasOwnProperty(prop)) {\n      this._toolTip.updateOption(prop);\n    }\n  }\n};\n\nChart.prototype._updateSize = function () {\n  var width = 0;\n  var height = 0;\n  if (this._options.width) width = this.width;else this.width = width = this._container.clientWidth > 0 ? this._container.clientWidth : this.width;\n  if (this._options.height) height = this.height;else this.height = height = this._container.clientHeight > 0 ? this._container.clientHeight : this.height;\n\n  if (this.canvas.width !== width * devicePixelBackingStoreRatio || this.canvas.height !== height * devicePixelBackingStoreRatio) {\n    setCanvasSize(this.canvas, width, height);\n    setCanvasSize(this.overlaidCanvas, width, height);\n    setCanvasSize(this._eventManager.ghostCanvas, width, height);\n    return true;\n  }\n\n  return false;\n}; // initialize chart objects\n\n\nChart.prototype._initialize = function () {\n  ///<signature>\n  ///<summary>Initializes Chart objects/state. Creates DataSeries class instance for each DataSeries provided by ther user. Sets the Axis Type based on the user data</summary>\n  ///</signature>\n  //this.width = this.width;\n  if (!this._animator) this._animator = new Animator(this);else {\n    this._animator.cancelAllAnimations();\n  }\n  this.removeAllEventListeners();\n  this.disableToolTip = false;\n  this._axes = [];\n  this.pieDoughnutClickHandler = null; //this._touchCurrentCoordinates = null;\n\n  if (this.animationRequestId) this.cancelRequestAnimFrame.call(window, this.animationRequestId);\n\n  this._updateOptions();\n\n  this.animatedRender = isCanvasSupported && this.animationEnabled && this.renderCount === 0;\n\n  this._updateSize(); //this._selectedColorSet = colorSets[\"colorSet2\"];\n  //this.ctx.clearRect(0, 0, this.width, this.height);\n\n\n  this.clearCanvas();\n  this.ctx.beginPath();\n  this.axisX = null;\n  this.axisY = null;\n  this.axisY2 = null;\n  this._indexLabels = [];\n  this._dataInRenderedOrder = [];\n  this._events = [];\n  if (this._eventManager) this._eventManager.reset();\n  this.plotInfo = {\n    axisPlacement: null,\n    axisXValueType: null,\n    plotTypes: [] //array of plotType: {type:\"\", axisYType: \"primary\", dataSeriesIndexes:[]}\n\n  };\n  this.layoutManager = new LayoutManager(0, 0, this.width, this.height, 2);\n  if (this.plotArea.layoutManager) this.plotArea.layoutManager.reset();\n  this.data = [];\n  var dataSeriesIndex = 0;\n\n  for (var series = 0; series < this._options.data.length; series++) {\n    //for (series in this._options.data) {\n    dataSeriesIndex++;\n    if (!(!this._options.data[series].type || Chart._supportedChartTypes.indexOf(this._options.data[series].type) >= 0)) continue;\n    var dataSeries = new DataSeries(this, this._options.data[series], this.theme, dataSeriesIndex - 1, ++this._eventManager.lastObjectId);\n    if (dataSeries.name === null) dataSeries.name = \"DataSeries \" + dataSeriesIndex;\n\n    if (dataSeries.color === null) {\n      if (this._options.data.length > 1) {\n        dataSeries._colorSet = [this._selectedColorSet[dataSeries.index % this._selectedColorSet.length]];\n        dataSeries.color = this._selectedColorSet[dataSeries.index % this._selectedColorSet.length];\n      } else {\n        if (dataSeries.type === \"line\" || dataSeries.type === \"stepLine\" || dataSeries.type === \"spline\" || dataSeries.type === \"area\" || dataSeries.type === \"stepArea\" || dataSeries.type === \"splineArea\" || dataSeries.type === \"stackedArea\" || dataSeries.type === \"stackedArea100\" || dataSeries.type === \"rangeArea\" || dataSeries.type === \"rangeSplineArea\" || dataSeries.type === \"candlestick\" || dataSeries.type === \"ohlc\") {\n          dataSeries._colorSet = [this._selectedColorSet[0]];\n        } else dataSeries._colorSet = this._selectedColorSet;\n      }\n    } else {\n      dataSeries._colorSet = [dataSeries.color];\n    }\n\n    if (dataSeries.markerSize === null) {\n      if ((dataSeries.type === \"line\" || dataSeries.type === \"stepLine\" || dataSeries.type === \"spline\") && dataSeries.dataPoints && dataSeries.dataPoints.length < this.width / 16 || dataSeries.type === \"scatter\") {\n        //if (dataSeries.type === \"line\") {\n        dataSeries.markerSize = 8;\n      }\n    }\n\n    if ((dataSeries.type === \"bubble\" || dataSeries.type === \"scatter\") && dataSeries.dataPoints) {\n      dataSeries.dataPoints.sort(compareDataPointX);\n    } //if (dataSeries.markerBorderThickness === null && dataSeries.type === \"scatter\") {\n    //    dataSeries.markerBorderThickness = 2;\n    //}\n    //if (dataSeries.markerType === null) {\n    //    if (dataSeries.type === \"line\" & dataSeries.dataPoints.length < 500) {\n    //        dataSeries.markerType = \"circle\";\n    //    }\n    //}\n\n\n    this.data.push(dataSeries);\n    var seriesAxisPlacement = dataSeries.axisPlacement; //if (isDebugMode && window.console)\n    //    window.console.log(dataSeries.type);\n\n    var errorMessage;\n\n    if (seriesAxisPlacement === \"normal\") {\n      if (this.plotInfo.axisPlacement === \"xySwapped\") {\n        errorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with bar chart\";\n      } else if (this.plotInfo.axisPlacement === \"none\") {\n        errorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with pie chart\";\n      } else if (this.plotInfo.axisPlacement === null) this.plotInfo.axisPlacement = \"normal\";\n    } else if (seriesAxisPlacement === \"xySwapped\") {\n      if (this.plotInfo.axisPlacement === \"normal\") {\n        errorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with line, area, column or pie chart\";\n      } else if (this.plotInfo.axisPlacement === \"none\") {\n        errorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with pie chart\";\n      } else if (this.plotInfo.axisPlacement === null) this.plotInfo.axisPlacement = \"xySwapped\";\n    } else if (seriesAxisPlacement == \"none\") {\n      if (this.plotInfo.axisPlacement === \"normal\") {\n        errorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with line, area, column or bar chart\";\n      } else if (this.plotInfo.axisPlacement === \"xySwapped\") {\n        errorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with bar chart\";\n      } else if (this.plotInfo.axisPlacement === null) this.plotInfo.axisPlacement = \"none\";\n    }\n\n    if (errorMessage && window.console) {\n      window.console.log(errorMessage);\n      return;\n    }\n  } //if (isDebugMode && window.console) {\n  //    window.console.log(\"xMin: \" + this.plotInfo.viewPortXMin + \"; xMax: \" + this.plotInfo.viewPortXMax + \"; yMin: \" + this.plotInfo.yMin + \"; yMax: \" + this.plotInfo.yMax);\n  //}\n\n\n  this._objectsInitialized = true;\n}; //indexOf is not supported in IE8-\n\n\nChart._supportedChartTypes = addArrayIndexOf([\"line\", \"stepLine\", \"spline\", \"column\", \"area\", \"stepArea\", \"splineArea\", \"bar\", \"bubble\", \"scatter\", \"stackedColumn\", \"stackedColumn100\", \"stackedBar\", \"stackedBar100\", \"stackedArea\", \"stackedArea100\", \"candlestick\", \"ohlc\", \"rangeColumn\", \"rangeBar\", \"rangeArea\", \"rangeSplineArea\", \"pie\", \"doughnut\", \"funnel\"]);\n\nChart.prototype.render = function (options) {\n  if (options) this._options = options;\n\n  this._initialize();\n\n  var plotAreaElements = []; //Elements to be rendered inside the plotArea\n  //Create Primary and Secondary axis and assign them to the series\n\n  for (var i = 0; i < this.data.length; i++) {\n    if (this.plotInfo.axisPlacement === \"normal\" || this.plotInfo.axisPlacement === \"xySwapped\") {\n      if (!this.data[i].axisYType || this.data[i].axisYType === \"primary\") {\n        if (!this.axisY) {\n          if (this.plotInfo.axisPlacement === \"normal\") {\n            this._axes.push(this.axisY = new Axis(this, this._options.axisY, \"axisY\", \"left\"));\n          } else if (this.plotInfo.axisPlacement === \"xySwapped\") {\n            this._axes.push(this.axisY = new Axis(this, this._options.axisY, \"axisY\", \"bottom\"));\n          }\n        }\n\n        this.data[i].axisY = this.axisY;\n      } else if (this.data[i].axisYType === \"secondary\") {\n        if (!this.axisY2) {\n          if (this.plotInfo.axisPlacement === \"normal\") {\n            this._axes.push(this.axisY2 = new Axis(this, this._options.axisY2, \"axisY\", \"right\"));\n          } else if (this.plotInfo.axisPlacement === \"xySwapped\") {\n            this._axes.push(this.axisY2 = new Axis(this, this._options.axisY2, \"axisY\", \"top\"));\n          }\n        }\n\n        this.data[i].axisY = this.axisY2;\n      }\n\n      if (!this.axisX) {\n        if (this.plotInfo.axisPlacement === \"normal\") {\n          this._axes.push(this.axisX = new Axis(this, this._options.axisX, \"axisX\", \"bottom\"));\n        } else if (this.plotInfo.axisPlacement === \"xySwapped\") {\n          this._axes.push(this.axisX = new Axis(this, this._options.axisX, \"axisX\", \"left\"));\n        }\n      }\n\n      this.data[i].axisX = this.axisX;\n    }\n  } //If Both Primary and Secondary axis are present, disable gridlines for one of them unless the user has set value for both\n\n\n  if (this.axisY && this.axisY2) {\n    if (this.axisY.gridThickness > 0 && typeof this.axisY2._options.gridThickness === \"undefined\") this.axisY2.gridThickness = 0;else if (this.axisY2.gridThickness > 0 && typeof this.axisY._options.gridThickness === \"undefined\") this.axisY.gridThickness = 0;\n  } //Show toolBar when viewportMinimum/viewportMaximum are set\n\n\n  var showToolBar = false;\n\n  if (this._axes.length > 0 && (this.zoomEnabled || this.panEnabled)) {\n    for (var i = 0; i < this._axes.length; i++) {\n      if (this._axes[i].viewportMinimum !== null || this._axes[i].viewportMaximum !== null) {\n        showToolBar = true;\n        break;\n      }\n    }\n  }\n\n  if (showToolBar) {\n    show(this._zoomButton, this._resetButton);\n  } else {\n    hide(this._zoomButton, this._resetButton);\n  }\n\n  this._processData(); // Categorises the dataSeries and calculates min, max and other values\n\n\n  if (this._options.title) {\n    this._title = new Title(this, this._options.title);\n    if (!this._title.dockInsidePlotArea) this._title.render();else plotAreaElements.push(this._title);\n  }\n\n  if (this._options.subtitles) {\n    for (var i = 0; i < this._options.subtitles.length; i++) {\n      this.subtitles = [];\n      var subtitle = new Subtitle(this, this._options.subtitles[i]);\n      this.subtitles.push(subtitle);\n      if (!subtitle.dockInsidePlotArea) subtitle.render();else plotAreaElements.push(subtitle);\n    }\n  }\n\n  this.legend = new Legend(this, this._options.legend, this.theme);\n\n  for (var i = 0; i < this.data.length; i++) {\n    if (this.data[i].showInLegend || this.data[i].type === \"pie\" || this.data[i].type === \"doughnut\") {\n      this.legend.dataSeries.push(this.data[i]);\n    }\n  }\n\n  if (!this.legend.dockInsidePlotArea) this.legend.render();else plotAreaElements.push(this.legend); //TBI: Revisit and check if the functionality is enough.\n\n  if (this.plotInfo.axisPlacement === \"normal\" || this.plotInfo.axisPlacement === \"xySwapped\") {\n    //var freeSpace = this.layoutManager.getFreeSpace();\n    Axis.setLayoutAndRender(this.axisX, this.axisY, this.axisY2, this.plotInfo.axisPlacement, this.layoutManager.getFreeSpace());\n  } else if (this.plotInfo.axisPlacement === \"none\") {\n    //In case of charts with axis this method is called inside setLayoutAndRender\n    this.preparePlotArea();\n  } else {\n    return;\n  }\n\n  var index = 0;\n\n  for (index in plotAreaElements) {\n    if (plotAreaElements.hasOwnProperty(index)) plotAreaElements[index].render();\n  }\n\n  var animations = [];\n\n  if (this.animatedRender) {\n    var initialState = createCanvas(this.width, this.height);\n    var initialStateCtx = initialState.getContext(\"2d\");\n    initialStateCtx.drawImage(this.canvas, 0, 0, this.width, this.height);\n  }\n\n  for (var i = 0; i < this.plotInfo.plotTypes.length; i++) {\n    var plotType = this.plotInfo.plotTypes[i];\n\n    for (var j = 0; j < plotType.plotUnits.length; j++) {\n      var plotUnit = plotType.plotUnits[j];\n      var animationInfo = null;\n      plotUnit.targetCanvas = null; //In case chart updates before the animation is complete, previous canvases need to be removed\n\n      if (this.animatedRender) {\n        plotUnit.targetCanvas = createCanvas(this.width, this.height);\n        plotUnit.targetCanvasCtx = plotUnit.targetCanvas.getContext(\"2d\");\n      }\n\n      if (plotUnit.type === \"line\") animationInfo = this.renderLine(plotUnit);else if (plotUnit.type === \"stepLine\") animationInfo = this.renderStepLine(plotUnit);else if (plotUnit.type === \"spline\") animationInfo = this.renderSpline(plotUnit);else if (plotUnit.type === \"column\") animationInfo = this.renderColumn(plotUnit);else if (plotUnit.type === \"bar\") animationInfo = this.renderBar(plotUnit);else if (plotUnit.type === \"area\") animationInfo = this.renderArea(plotUnit);else if (plotUnit.type === \"stepArea\") animationInfo = this.renderStepArea(plotUnit);else if (plotUnit.type === \"splineArea\") animationInfo = this.renderSplineArea(plotUnit);else if (plotUnit.type === \"stackedColumn\") animationInfo = this.renderStackedColumn(plotUnit);else if (plotUnit.type === \"stackedColumn100\") animationInfo = this.renderStackedColumn100(plotUnit);else if (plotUnit.type === \"stackedBar\") animationInfo = this.renderStackedBar(plotUnit);else if (plotUnit.type === \"stackedBar100\") animationInfo = this.renderStackedBar100(plotUnit);else if (plotUnit.type === \"stackedArea\") animationInfo = this.renderStackedArea(plotUnit);else if (plotUnit.type === \"stackedArea100\") animationInfo = this.renderStackedArea100(plotUnit);else if (plotUnit.type === \"bubble\") animationInfo = animationInfo = this.renderBubble(plotUnit);else if (plotUnit.type === \"scatter\") animationInfo = this.renderScatter(plotUnit);else if (plotUnit.type === \"pie\") this.renderPie(plotUnit);else if (plotUnit.type === \"doughnut\") this.renderPie(plotUnit);else if (plotUnit.type === \"candlestick\") animationInfo = this.renderCandlestick(plotUnit);else if (plotUnit.type === \"ohlc\") animationInfo = this.renderCandlestick(plotUnit);else if (plotUnit.type === \"rangeColumn\") animationInfo = this.renderRangeColumn(plotUnit);else if (plotUnit.type === \"rangeBar\") animationInfo = this.renderRangeBar(plotUnit);else if (plotUnit.type === \"rangeArea\") animationInfo = this.renderRangeArea(plotUnit);else if (plotUnit.type === \"rangeSplineArea\") animationInfo = this.renderRangeSplineArea(plotUnit);\n\n      for (var k = 0; k < plotUnit.dataSeriesIndexes.length; k++) {\n        this._dataInRenderedOrder.push(this.data[plotUnit.dataSeriesIndexes[k]]);\n      }\n\n      if (this.animatedRender && animationInfo) animations.push(animationInfo);\n    }\n  }\n\n  if (this.animatedRender && this._indexLabels.length > 0) {\n    var indexLabelCanvas = createCanvas(this.width, this.height);\n    var indexLabelCanvasCtx = indexLabelCanvas.getContext(\"2d\");\n    animations.push(this.renderIndexLabels(indexLabelCanvasCtx));\n  }\n\n  var _this = this;\n\n  if (animations.length > 0) {\n    //var animationCount = 0;\n    _this.disableToolTip = true;\n\n    _this._animator.animate(200, _this.animationDuration, function (fractionComplete) {\n      //console.log(fractionComplete);\n      //animationCount++;\n      _this.ctx.clearRect(0, 0, _this.width, _this.height); //  _this.ctx.drawImage(initialState, 0, 0, _this.width * devicePixelBackingStoreRatio, _this.height * devicePixelBackingStoreRatio, 0, 0, _this.width, _this.height);\n\n\n      _this.ctx.drawImage(initialState, 0, 0, Math.floor(_this.width * devicePixelBackingStoreRatio), Math.floor(_this.height * devicePixelBackingStoreRatio), 0, 0, _this.width, _this.height);\n\n      for (var l = 0; l < animations.length; l++) {\n        animationInfo = animations[l];\n\n        if (fractionComplete < 1 && typeof animationInfo.startTimePercent !== \"undefined\") {\n          if (fractionComplete >= animationInfo.startTimePercent) {\n            //animationInfo.animationCallback(AnimationHelper.easing.linear(fractionComplete - animationInfo.startTimePercent, 0, 1, 1 - animationInfo.startTimePercent), animationInfo);\n            animationInfo.animationCallback(animationInfo.easingFunction(fractionComplete - animationInfo.startTimePercent, 0, 1, 1 - animationInfo.startTimePercent), animationInfo);\n          }\n        } else {\n          animationInfo.animationCallback(animationInfo.easingFunction(fractionComplete, 0, 1, 1), animationInfo);\n        }\n      }\n\n      _this.dispatchEvent(\"dataAnimationIterationEnd\", {\n        chart: _this\n      });\n    }, function () {\n      animations = [];\n      var count = 0; //Delete all render target canvases used for animation.\n\n      for (var i = 0; i < _this.plotInfo.plotTypes.length; i++) {\n        var plotType = _this.plotInfo.plotTypes[i];\n\n        for (var j = 0; j < plotType.plotUnits.length; j++) {\n          var plotUnit = plotType.plotUnits[j];\n          plotUnit.targetCanvas = null;\n        }\n      }\n\n      initialState = null;\n      _this.disableToolTip = false; //console.log(\"*********** Animation Complete - \" + animationCount + \" ***********\");\n    });\n  } else {\n    if (_this._indexLabels.length > 0) _this.renderIndexLabels();\n\n    _this.dispatchEvent(\"dataAnimationIterationEnd\", {\n      chart: _this\n    });\n  }\n\n  this.attachPlotAreaEventHandlers();\n\n  if (!this.zoomEnabled && !this.panEnabled && this._zoomButton && this._zoomButton.style.display !== \"none\") {\n    hide(this._zoomButton, this._resetButton);\n  }\n\n  this._toolTip._updateToolTip();\n\n  this.renderCount++; //if (window.console) {\n  //    window.console.log(new Date().getTime() - dt);\n  //}\n\n  if (isDebugMode) {\n    var _this = this;\n\n    setTimeout(function () {\n      var ghostCanvasCopy = document.getElementById(\"ghostCanvasCopy\");\n\n      if (ghostCanvasCopy) {\n        //console.log(ghostCanvasCopy.clientWidth);\n        setCanvasSize(ghostCanvasCopy, _this.width, _this.height);\n        var ghostCanvasCopyCtx = ghostCanvasCopy.getContext(\"2d\"); //ghostCanvasCopyCtx.scale(1, 1);\n        //var imageData = this._eventManager.ghostCtx.getImageData(0, 0, this._container.clientWidth, this._container.clientHeight);\n        //this._eventManager.ghostCtx.drawImage(this._eventManager.ghostCanvas, 0, 0);\n        //this.ctx.drawImage(this._eventManager.ghostCanvas, 0, 0);\n\n        ghostCanvasCopyCtx.drawImage(_this._eventManager.ghostCanvas, 0, 0); //_this._canvasJSContainer.appendChild(_this._eventManager.ghostCanvas);\n        //_this.overlaidCanvasCtx.drawImage(_this._eventManager.ghostCanvas, 0, 0);\n      }\n    }, 2000);\n  }\n};\n\nChart.prototype.attachPlotAreaEventHandlers = function () {\n  //this._toolBar.style.display = \"inline\";\n  this.attachEvent({\n    context: this,\n    chart: this,\n    mousedown: this._plotAreaMouseDown,\n    mouseup: this._plotAreaMouseUp,\n    mousemove: this._plotAreaMouseMove,\n    cursor: this.zoomEnabled ? \"col-resize\" : \"move\",\n    cursor: this.panEnabled ? \"move\" : \"default\",\n    capture: true,\n    bounds: this.plotArea\n  });\n};\n\nChart.prototype.categoriseDataSeries = function () {\n  var dataSeries = \"\";\n\n  for (var i = 0; i < this.data.length; i++) {\n    dataSeries = this.data[i];\n    if (!dataSeries.dataPoints || dataSeries.dataPoints.length === 0 || !dataSeries.visible) continue;\n\n    if (Chart._supportedChartTypes.indexOf(dataSeries.type) >= 0) {\n      var plotType = null;\n      var plotTypeExists = false;\n      var plotUnit = null;\n      var plotUnitExists = false;\n\n      for (var j = 0; j < this.plotInfo.plotTypes.length; j++) {\n        if (this.plotInfo.plotTypes[j].type === dataSeries.type) {\n          plotTypeExists = true;\n          var plotType = this.plotInfo.plotTypes[j];\n          break;\n        }\n      }\n\n      if (!plotTypeExists) {\n        plotType = {\n          type: dataSeries.type,\n          totalDataSeries: 0,\n          plotUnits: []\n        };\n        this.plotInfo.plotTypes.push(plotType);\n      }\n\n      for (var j = 0; j < plotType.plotUnits.length; j++) {\n        if (plotType.plotUnits[j].axisYType === dataSeries.axisYType) {\n          plotUnitExists = true;\n          var plotUnit = plotType.plotUnits[j];\n          break;\n        }\n      }\n\n      if (!plotUnitExists) {\n        plotUnit = {\n          type: dataSeries.type,\n          previousDataSeriesCount: 0,\n          //to be set next\n          index: plotType.plotUnits.length,\n          plotType: plotType,\n          axisYType: dataSeries.axisYType,\n          axisY: dataSeries.axisYType === \"primary\" ? this.axisY : this.axisY2,\n          axisX: this.axisX,\n          dataSeriesIndexes: [],\n          //index of dataSeries\n          yTotals: []\n        };\n        plotType.plotUnits.push(plotUnit);\n      }\n\n      plotType.totalDataSeries++;\n      plotUnit.dataSeriesIndexes.push(i);\n      dataSeries.plotUnit = plotUnit;\n    }\n  }\n\n  for (var i = 0; i < this.plotInfo.plotTypes.length; i++) {\n    var plotType = this.plotInfo.plotTypes[i];\n    var previousDataSeriesCount = 0;\n\n    for (var j = 0; j < plotType.plotUnits.length; j++) {\n      plotType.plotUnits[j].previousDataSeriesCount = previousDataSeriesCount;\n      previousDataSeriesCount += plotType.plotUnits[j].dataSeriesIndexes.length;\n    }\n  }\n};\n\nChart.prototype.assignIdToDataPoints = function () {\n  for (var i = 0; i < this.data.length; i++) {\n    var dataSeries = this.data[i];\n    if (!dataSeries.dataPoints) continue;\n    var length = dataSeries.dataPoints.length;\n\n    for (var j = 0; j < length; j++) {\n      dataSeries.dataPointIds[j] = ++this._eventManager.lastObjectId;\n    }\n  }\n};\n\nChart.prototype._processData = function () {\n  this.assignIdToDataPoints();\n  this.categoriseDataSeries();\n\n  for (var i = 0; i < this.plotInfo.plotTypes.length; i++) {\n    var plotType = this.plotInfo.plotTypes[i];\n\n    for (var j = 0; j < plotType.plotUnits.length; j++) {\n      var plotUnit = plotType.plotUnits[j];\n      if (plotUnit.type === \"line\" || plotUnit.type === \"stepLine\" || plotUnit.type === \"spline\" || plotUnit.type === \"column\" || plotUnit.type === \"area\" || plotUnit.type === \"stepArea\" || plotUnit.type === \"splineArea\" || plotUnit.type === \"bar\" || plotUnit.type === \"bubble\" || plotUnit.type === \"scatter\") this._processMultiseriesPlotUnit(plotUnit);else if (plotUnit.type === \"stackedColumn\" || plotUnit.type === \"stackedBar\" || plotUnit.type === \"stackedArea\") this._processStackedPlotUnit(plotUnit);else if (plotUnit.type === \"stackedColumn100\" || plotUnit.type === \"stackedBar100\" || plotUnit.type === \"stackedArea100\") this._processStacked100PlotUnit(plotUnit);else if (plotUnit.type === \"candlestick\" || plotUnit.type === \"ohlc\" || plotUnit.type === \"rangeColumn\" || plotUnit.type === \"rangeBar\" || plotUnit.type === \"rangeArea\" || plotUnit.type === \"rangeSplineArea\") this._processMultiYPlotUnit(plotUnit);\n    }\n  }\n};\n\nChart.prototype._processMultiseriesPlotUnit = function (plotUnit) {\n  if (!plotUnit.dataSeriesIndexes || plotUnit.dataSeriesIndexes.length < 1) return;\n  var axisYDataInfo = plotUnit.axisY.dataInfo;\n  var axisXDataInfo = plotUnit.axisX.dataInfo;\n  var dataPointX, dataPointY;\n  var isDateTime = false;\n\n  for (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\n    var dataSeries = this.data[plotUnit.dataSeriesIndexes[j]];\n    var i = 0;\n    var isFirstDPInViewPort = false;\n    var isLastDPInViewPort = false;\n\n    if (dataSeries.axisPlacement === \"normal\" || dataSeries.axisPlacement === \"xySwapped\") {\n      var plotAreaXMin = this.sessionVariables.axisX.newViewportMinimum ? this.sessionVariables.axisX.newViewportMinimum : this._options.axisX && this._options.axisX.viewportMinimum ? this._options.axisX.viewportMinimum : this._options.axisX && this._options.axisX.minimum ? this._options.axisX.minimum : -Infinity;\n      var plotAreaXMax = this.sessionVariables.axisX.newViewportMaximum ? this.sessionVariables.axisX.newViewportMaximum : this._options.axisX && this._options.axisX.viewportMaximum ? this._options.axisX.viewportMaximum : this._options.axisX && this._options.axisX.maximum ? this._options.axisX.maximum : Infinity;\n    }\n\n    if (dataSeries.dataPoints[i].x && dataSeries.dataPoints[i].x.getTime || dataSeries.xValueType === \"dateTime\") {\n      isDateTime = true;\n    }\n\n    for (i = 0; i < dataSeries.dataPoints.length; i++) {\n      if (typeof dataSeries.dataPoints[i].x === \"undefined\") {\n        dataSeries.dataPoints[i].x = i;\n      }\n\n      if (dataSeries.dataPoints[i].x.getTime) {\n        isDateTime = true;\n        dataPointX = dataSeries.dataPoints[i].x.getTime(); //dataPointX is used so that getTime is called only once in case of dateTime values\n      } else dataPointX = dataSeries.dataPoints[i].x;\n\n      dataPointY = dataSeries.dataPoints[i].y;\n      if (dataPointX < axisXDataInfo.min) axisXDataInfo.min = dataPointX;\n      if (dataPointX > axisXDataInfo.max) axisXDataInfo.max = dataPointX;\n      if (dataPointY < axisYDataInfo.min) axisYDataInfo.min = dataPointY;\n      if (dataPointY > axisYDataInfo.max) axisYDataInfo.max = dataPointY;\n\n      if (i > 0) {\n        var xDiff = dataPointX - dataSeries.dataPoints[i - 1].x;\n        xDiff < 0 && (xDiff = xDiff * -1); //If Condition shortcut\n\n        if (axisXDataInfo.minDiff > xDiff && xDiff !== 0) {\n          axisXDataInfo.minDiff = xDiff;\n        }\n\n        if (dataPointY !== null && dataSeries.dataPoints[i - 1].y !== null) {\n          var yDiff = dataPointY - dataSeries.dataPoints[i - 1].y;\n          yDiff < 0 && (yDiff = yDiff * -1); //If Condition shortcut\n\n          if (axisYDataInfo.minDiff > yDiff && yDiff !== 0) {\n            axisYDataInfo.minDiff = yDiff;\n          }\n        }\n      } // This section makes sure that partially visible dataPoints are included in the begining\n\n\n      if (dataPointX < plotAreaXMin && !isFirstDPInViewPort) {\n        continue;\n      } else if (!isFirstDPInViewPort) {\n        isFirstDPInViewPort = true;\n\n        if (i > 0) {\n          i -= 2;\n          continue;\n        }\n      } // This section makes sure that partially visible dataPoints are included at the end\n\n\n      if (dataPointX > plotAreaXMax && !isLastDPInViewPort) {\n        isLastDPInViewPort = true;\n      } else if (dataPointX > plotAreaXMax && isLastDPInViewPort) {\n        continue;\n      }\n\n      if (dataSeries.dataPoints[i].label) plotUnit.axisX.labels[dataPointX] = dataSeries.dataPoints[i].label;\n      if (dataPointX < axisXDataInfo.viewPortMin) axisXDataInfo.viewPortMin = dataPointX;\n      if (dataPointX > axisXDataInfo.viewPortMax) axisXDataInfo.viewPortMax = dataPointX;\n      if (dataPointY === null) continue;\n      if (dataPointY < axisYDataInfo.viewPortMin) axisYDataInfo.viewPortMin = dataPointY;\n      if (dataPointY > axisYDataInfo.viewPortMax) axisYDataInfo.viewPortMax = dataPointY;\n    }\n\n    this.plotInfo.axisXValueType = dataSeries.xValueType = isDateTime ? \"dateTime\" : \"number\";\n  } //this.dataPoints.sort(compareDataPointX);\n  //this.dataPoints.sort(function (dataPoint1, dataPoint2) { return dataPoint1.x - dataPoint2.x; });\n\n};\n\nChart.prototype._processStackedPlotUnit = function (plotUnit) {\n  if (!plotUnit.dataSeriesIndexes || plotUnit.dataSeriesIndexes.length < 1) return;\n  var axisYDataInfo = plotUnit.axisY.dataInfo;\n  var axisXDataInfo = plotUnit.axisX.dataInfo;\n  var dataPointX, dataPointY;\n  var isDateTime = false;\n  var dataPointYPositiveSums = [];\n  var dataPointYNegativeSums = [];\n\n  for (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\n    var dataSeries = this.data[plotUnit.dataSeriesIndexes[j]];\n    var i = 0;\n    var isFirstDPInViewPort = false;\n    var isLastDPInViewPort = false;\n\n    if (dataSeries.axisPlacement === \"normal\" || dataSeries.axisPlacement === \"xySwapped\") {\n      var plotAreaXMin = this.sessionVariables.axisX.newViewportMinimum ? this.sessionVariables.axisX.newViewportMinimum : this._options.axisX && this._options.axisX.viewportMinimum ? this._options.axisX.viewportMinimum : this._options.axisX && this._options.axisX.minimum ? this._options.axisX.minimum : -Infinity;\n      var plotAreaXMax = this.sessionVariables.axisX.newViewportMaximum ? this.sessionVariables.axisX.newViewportMaximum : this._options.axisX && this._options.axisX.viewportMaximum ? this._options.axisX.viewportMaximum : this._options.axisX && this._options.axisX.maximum ? this._options.axisX.maximum : Infinity;\n    }\n\n    if (dataSeries.dataPoints[i].x && dataSeries.dataPoints[i].x.getTime || dataSeries.xValueType === \"dateTime\") {\n      isDateTime = true;\n    }\n\n    for (i = 0; i < dataSeries.dataPoints.length; i++) {\n      // Requird when no x values are provided\n      if (typeof dataSeries.dataPoints[i].x === \"undefined\") {\n        dataSeries.dataPoints[i].x = i;\n      }\n\n      if (dataSeries.dataPoints[i].x.getTime) {\n        isDateTime = true;\n        dataPointX = dataSeries.dataPoints[i].x.getTime(); //dataPointX is used so that getTime is called only once in case of dateTime values\n      } else dataPointX = dataSeries.dataPoints[i].x;\n\n      dataPointY = dataSeries.dataPoints[i].y;\n      if (dataPointX < axisXDataInfo.min) axisXDataInfo.min = dataPointX;\n      if (dataPointX > axisXDataInfo.max) axisXDataInfo.max = dataPointX;\n\n      if (i > 0) {\n        var xDiff = dataPointX - dataSeries.dataPoints[i - 1].x;\n        xDiff < 0 && (xDiff = xDiff * -1); //If Condition shortcut\n\n        if (axisXDataInfo.minDiff > xDiff && xDiff !== 0) {\n          axisXDataInfo.minDiff = xDiff;\n        }\n\n        if (dataPointY !== null && dataSeries.dataPoints[i - 1].y !== null) {\n          var yDiff = dataPointY - dataSeries.dataPoints[i - 1].y;\n          yDiff < 0 && (yDiff = yDiff * -1); //If Condition shortcut\n\n          if (axisYDataInfo.minDiff > yDiff && yDiff !== 0) {\n            axisYDataInfo.minDiff = yDiff;\n          }\n        }\n      } // This section makes sure that partially visible dataPoints are included in the begining\n\n\n      if (dataPointX < plotAreaXMin && !isFirstDPInViewPort) {\n        continue;\n      } else if (!isFirstDPInViewPort) {\n        isFirstDPInViewPort = true;\n\n        if (i > 0) {\n          i -= 2;\n          continue;\n        }\n      } // This section makes sure that partially visible dataPoints are included at the end\n\n\n      if (dataPointX > plotAreaXMax && !isLastDPInViewPort) {\n        isLastDPInViewPort = true;\n      } else if (dataPointX > plotAreaXMax && isLastDPInViewPort) {\n        continue;\n      }\n\n      if (dataSeries.dataPoints[i].label) plotUnit.axisX.labels[dataPointX] = dataSeries.dataPoints[i].label;\n      if (dataPointX < axisXDataInfo.viewPortMin) axisXDataInfo.viewPortMin = dataPointX;\n      if (dataPointX > axisXDataInfo.viewPortMax) axisXDataInfo.viewPortMax = dataPointX;\n      if (dataPointY === null) continue;\n      plotUnit.yTotals[dataPointX] = (!plotUnit.yTotals[dataPointX] ? 0 : plotUnit.yTotals[dataPointX]) + Math.abs(dataPointY);\n\n      if (dataPointY >= 0) {\n        if (dataPointYPositiveSums[dataPointX]) dataPointYPositiveSums[dataPointX] += dataPointY;else dataPointYPositiveSums[dataPointX] = dataPointY;\n      } else {\n        if (dataPointYNegativeSums[dataPointX]) dataPointYNegativeSums[dataPointX] += dataPointY;else dataPointYNegativeSums[dataPointX] = dataPointY;\n      }\n    }\n\n    this.plotInfo.axisXValueType = dataSeries.xValueType = isDateTime ? \"dateTime\" : \"number\";\n  }\n\n  for (i in dataPointYPositiveSums) {\n    if (dataPointYPositiveSums.hasOwnProperty(i)) {\n      if (isNaN(i)) {\n        continue;\n      }\n\n      var ySum = dataPointYPositiveSums[i];\n      if (ySum < axisYDataInfo.min) axisYDataInfo.min = ySum;\n      if (ySum > axisYDataInfo.max) axisYDataInfo.max = ySum;\n      if (i < axisXDataInfo.viewPortMin || i > axisXDataInfo.viewPortMax) continue;\n      if (ySum < axisYDataInfo.viewPortMin) axisYDataInfo.viewPortMin = ySum;\n      if (ySum > axisYDataInfo.viewPortMax) axisYDataInfo.viewPortMax = ySum;\n    }\n  }\n\n  for (i in dataPointYNegativeSums) {\n    if (dataPointYNegativeSums.hasOwnProperty(i)) {\n      if (isNaN(i)) {\n        continue;\n      }\n\n      var ySum = dataPointYNegativeSums[i];\n      if (ySum < axisYDataInfo.min) axisYDataInfo.min = ySum;\n      if (ySum > axisYDataInfo.max) axisYDataInfo.max = ySum;\n      if (i < axisXDataInfo.viewPortMin || i > axisXDataInfo.viewPortMax) continue;\n      if (ySum < axisYDataInfo.viewPortMin) axisYDataInfo.viewPortMin = ySum;\n      if (ySum > axisYDataInfo.viewPortMax) axisYDataInfo.viewPortMax = ySum;\n    }\n  } //this.dataPoints.sort(compareDataPointX);\n  //this.dataPoints.sort(function (dataPoint1, dataPoint2) { return dataPoint1.x - dataPoint2.x; });\n  //window.console.log(\"viewPortYMin: \" + plotInfo.viewPortYMin + \"; viewPortYMax: \" + plotInfo.viewPortYMax);\n\n};\n\nChart.prototype._processStacked100PlotUnit = function (plotUnit) {\n  if (!plotUnit.dataSeriesIndexes || plotUnit.dataSeriesIndexes.length < 1) return;\n  var axisYDataInfo = plotUnit.axisY.dataInfo;\n  var axisXDataInfo = plotUnit.axisX.dataInfo;\n  var dataPointX, dataPointY;\n  var isDateTime = false;\n  var containsPositiveY = false;\n  var containsNegativeY = false;\n  var dataPointYSums = [];\n\n  for (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\n    var dataSeries = this.data[plotUnit.dataSeriesIndexes[j]];\n    var i = 0;\n    var isFirstDPInViewPort = false;\n    var isLastDPInViewPort = false;\n\n    if (dataSeries.axisPlacement === \"normal\" || dataSeries.axisPlacement === \"xySwapped\") {\n      var plotAreaXMin = this.sessionVariables.axisX.newViewportMinimum ? this.sessionVariables.axisX.newViewportMinimum : this._options.axisX && this._options.axisX.viewportMinimum ? this._options.axisX.viewportMinimum : this._options.axisX && this._options.axisX.minimum ? this._options.axisX.minimum : -Infinity;\n      var plotAreaXMax = this.sessionVariables.axisX.newViewportMaximum ? this.sessionVariables.axisX.newViewportMaximum : this._options.axisX && this._options.axisX.viewportMaximum ? this._options.axisX.viewportMaximum : this._options.axisX && this._options.axisX.maximum ? this._options.axisX.maximum : Infinity;\n    }\n\n    if (dataSeries.dataPoints[i].x && dataSeries.dataPoints[i].x.getTime || dataSeries.xValueType === \"dateTime\") {\n      isDateTime = true;\n    }\n\n    for (i = 0; i < dataSeries.dataPoints.length; i++) {\n      // Requird when no x values are provided\n      if (typeof dataSeries.dataPoints[i].x === \"undefined\") {\n        dataSeries.dataPoints[i].x = i;\n      }\n\n      if (dataSeries.dataPoints[i].x.getTime) {\n        isDateTime = true;\n        dataPointX = dataSeries.dataPoints[i].x.getTime(); //dataPointX is used so that getTime is called only once in case of dateTime values\n      } else dataPointX = dataSeries.dataPoints[i].x;\n\n      dataPointY = dataSeries.dataPoints[i].y;\n      if (dataPointX < axisXDataInfo.min) axisXDataInfo.min = dataPointX;\n      if (dataPointX > axisXDataInfo.max) axisXDataInfo.max = dataPointX;\n\n      if (i > 0) {\n        var xDiff = dataPointX - dataSeries.dataPoints[i - 1].x;\n        xDiff < 0 && (xDiff = xDiff * -1); //If Condition shortcut\n\n        if (axisXDataInfo.minDiff > xDiff && xDiff !== 0) {\n          axisXDataInfo.minDiff = xDiff;\n        }\n\n        if (dataPointY !== null && dataSeries.dataPoints[i - 1].y !== null) {\n          var yDiff = dataPointY - dataSeries.dataPoints[i - 1].y;\n          yDiff < 0 && (yDiff = yDiff * -1); //If Condition shortcut\n\n          if (axisYDataInfo.minDiff > yDiff && yDiff !== 0) {\n            axisYDataInfo.minDiff = yDiff;\n          }\n        }\n      } // This section makes sure that partially visible dataPoints are included in the begining\n\n\n      if (dataPointX < plotAreaXMin && !isFirstDPInViewPort) {\n        continue;\n      } else if (!isFirstDPInViewPort) {\n        isFirstDPInViewPort = true;\n\n        if (i > 0) {\n          i -= 2;\n          continue;\n        }\n      } // This section makes sure that partially visible dataPoints are included at the end\n\n\n      if (dataPointX > plotAreaXMax && !isLastDPInViewPort) {\n        isLastDPInViewPort = true;\n      } else if (dataPointX > plotAreaXMax && isLastDPInViewPort) {\n        continue;\n      }\n\n      if (dataSeries.dataPoints[i].label) plotUnit.axisX.labels[dataPointX] = dataSeries.dataPoints[i].label;\n      if (dataPointX < axisXDataInfo.viewPortMin) axisXDataInfo.viewPortMin = dataPointX;\n      if (dataPointX > axisXDataInfo.viewPortMax) axisXDataInfo.viewPortMax = dataPointX;\n      if (dataPointY === null) continue;\n      plotUnit.yTotals[dataPointX] = (!plotUnit.yTotals[dataPointX] ? 0 : plotUnit.yTotals[dataPointX]) + Math.abs(dataPointY);\n\n      if (dataPointY >= 0) {\n        containsPositiveY = true;\n      } else {\n        containsNegativeY = true;\n      }\n\n      if (dataPointYSums[dataPointX]) dataPointYSums[dataPointX] += Math.abs(dataPointY);else dataPointYSums[dataPointX] = Math.abs(dataPointY);\n    }\n\n    this.plotInfo.axisXValueType = dataSeries.xValueType = isDateTime ? \"dateTime\" : \"number\";\n  }\n\n  if (containsPositiveY && !containsNegativeY) {\n    axisYDataInfo.max = 99;\n    axisYDataInfo.min = 1;\n  } else if (containsPositiveY && containsNegativeY) {\n    axisYDataInfo.max = 99;\n    axisYDataInfo.min = -99;\n  } else if (!containsPositiveY && containsNegativeY) {\n    axisYDataInfo.max = -1;\n    axisYDataInfo.min = -99;\n  }\n\n  axisYDataInfo.viewPortMin = axisYDataInfo.min;\n  axisYDataInfo.viewPortMax = axisYDataInfo.max;\n  plotUnit.dataPointYSums = dataPointYSums; //this.dataPoints.sort(compareDataPointX);\n  //this.dataPoints.sort(function (dataPoint1, dataPoint2) { return dataPoint1.x - dataPoint2.x; });\n  //window.console.log(\"viewPortYMin: \" + plotInfo.viewPortYMin + \"; viewPortYMax: \" + plotInfo.viewPortYMax);\n};\n\nChart.prototype._processMultiYPlotUnit = function (plotUnit) {\n  if (!plotUnit.dataSeriesIndexes || plotUnit.dataSeriesIndexes.length < 1) return;\n  var axisYDataInfo = plotUnit.axisY.dataInfo;\n  var axisXDataInfo = plotUnit.axisX.dataInfo;\n  var dataPointX, dataPointY, dataPointYMin, dataPointYMax;\n  var isDateTime = false;\n\n  for (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\n    var dataSeries = this.data[plotUnit.dataSeriesIndexes[j]];\n    var i = 0;\n    var isFirstDPInViewPort = false;\n    var isLastDPInViewPort = false;\n\n    if (dataSeries.axisPlacement === \"normal\" || dataSeries.axisPlacement === \"xySwapped\") {\n      var plotAreaXMin = this.sessionVariables.axisX.newViewportMinimum ? this.sessionVariables.axisX.newViewportMinimum : this._options.axisX && this._options.axisX.viewportMinimum ? this._options.axisX.viewportMinimum : this._options.axisX && this._options.axisX.minimum ? this._options.axisX.minimum : -Infinity;\n      var plotAreaXMax = this.sessionVariables.axisX.newViewportMaximum ? this.sessionVariables.axisX.newViewportMaximum : this._options.axisX && this._options.axisX.viewportMaximum ? this._options.axisX.viewportMaximum : this._options.axisX && this._options.axisX.maximum ? this._options.axisX.maximum : Infinity;\n    }\n\n    if (dataSeries.dataPoints[i].x && dataSeries.dataPoints[i].x.getTime || dataSeries.xValueType === \"dateTime\") {\n      isDateTime = true;\n    }\n\n    for (i = 0; i < dataSeries.dataPoints.length; i++) {\n      if (typeof dataSeries.dataPoints[i].x === \"undefined\") {\n        dataSeries.dataPoints[i].x = i;\n      }\n\n      if (dataSeries.dataPoints[i].x.getTime) {\n        isDateTime = true;\n        dataPointX = dataSeries.dataPoints[i].x.getTime(); //dataPointX is used so that getTime is called only once in case of dateTime values\n      } else dataPointX = dataSeries.dataPoints[i].x;\n\n      dataPointY = dataSeries.dataPoints[i].y;\n\n      if (dataPointY && dataPointY.length) {\n        dataPointYMin = Math.min.apply(null, dataPointY);\n        dataPointYMax = Math.max.apply(null, dataPointY);\n      }\n\n      if (dataPointX < axisXDataInfo.min) axisXDataInfo.min = dataPointX;\n      if (dataPointX > axisXDataInfo.max) axisXDataInfo.max = dataPointX;\n      if (dataPointYMin < axisYDataInfo.min) axisYDataInfo.min = dataPointYMin;\n      if (dataPointYMax > axisYDataInfo.max) axisYDataInfo.max = dataPointYMax;\n\n      if (i > 0) {\n        var xDiff = dataPointX - dataSeries.dataPoints[i - 1].x;\n        xDiff < 0 && (xDiff = xDiff * -1); //If Condition shortcut\n\n        if (axisXDataInfo.minDiff > xDiff && xDiff !== 0) {\n          axisXDataInfo.minDiff = xDiff;\n        }\n\n        if (dataPointY[0] !== null && dataSeries.dataPoints[i - 1].y[0] !== null) {\n          var yDiff = dataPointY[0] - dataSeries.dataPoints[i - 1].y[0];\n          yDiff < 0 && (yDiff = yDiff * -1); //If Condition shortcut\n\n          if (axisYDataInfo.minDiff > yDiff && yDiff !== 0) {\n            axisYDataInfo.minDiff = yDiff;\n          }\n        }\n      } // This section makes sure that partially visible dataPoints are included in the begining\n\n\n      if (dataPointX < plotAreaXMin && !isFirstDPInViewPort) {\n        continue;\n      } else if (!isFirstDPInViewPort) {\n        isFirstDPInViewPort = true;\n\n        if (i > 0) {\n          i -= 2;\n          continue;\n        }\n      } // This section makes sure that partially visible dataPoints are included at the end\n\n\n      if (dataPointX > plotAreaXMax && !isLastDPInViewPort) {\n        isLastDPInViewPort = true;\n      } else if (dataPointX > plotAreaXMax && isLastDPInViewPort) {\n        continue;\n      }\n\n      if (dataSeries.dataPoints[i].label) plotUnit.axisX.labels[dataPointX] = dataSeries.dataPoints[i].label;\n      if (dataPointX < axisXDataInfo.viewPortMin) axisXDataInfo.viewPortMin = dataPointX;\n      if (dataPointX > axisXDataInfo.viewPortMax) axisXDataInfo.viewPortMax = dataPointX;\n      if (dataPointY === null) continue;\n      if (dataPointYMin < axisYDataInfo.viewPortMin) axisYDataInfo.viewPortMin = dataPointYMin;\n      if (dataPointYMax > axisYDataInfo.viewPortMax) axisYDataInfo.viewPortMax = dataPointYMax;\n    }\n\n    this.plotInfo.axisXValueType = dataSeries.xValueType = isDateTime ? \"dateTime\" : \"number\";\n  } //this.dataPoints.sort(compareDataPointX);\n  //this.dataPoints.sort(function (dataPoint1, dataPoint2) { return dataPoint1.x - dataPoint2.x; });\n\n}; //getClosest returns objects nearby and hence shouldn't be used for events like click, mouseover, mousemove, etc which require object that is exactly under the mouse.\n\n\nChart.prototype.getDataPointAtXY = function (mouseX, mouseY, getClosest) {\n  getClosest = getClosest || false;\n  var results = [];\n\n  for (var i = this._dataInRenderedOrder.length - 1; i >= 0; i--) {\n    var dataSeries = this._dataInRenderedOrder[i];\n    var result = null;\n    result = dataSeries.getDataPointAtXY(mouseX, mouseY, getClosest);\n    if (result) results.push(result);\n  }\n\n  var closestResult = null;\n  var onlyLineAreaTypes = false;\n\n  for (var m = 0; m < results.length; m++) {\n    if (results[m].dataSeries.type === \"line\" || results[m].dataSeries.type === \"stepLine\" || results[m].dataSeries.type === \"area\" || results[m].dataSeries.type === \"stepArea\") {\n      var markerSize = getProperty(\"markerSize\", results[m].dataPoint, results[m].dataSeries) || 8;\n\n      if (results[m].distance <= markerSize / 2) {\n        onlyLineAreaTypes = true;\n        break;\n      }\n    }\n  }\n\n  for (m = 0; m < results.length; m++) {\n    if (onlyLineAreaTypes && results[m].dataSeries.type !== \"line\" && results[m].dataSeries.type !== \"stepLine\" && results[m].dataSeries.type !== \"area\" && results[m].dataSeries.type !== \"stepArea\") continue;\n\n    if (!closestResult) {\n      closestResult = results[m];\n    } else if (results[m].distance <= closestResult.distance) {\n      closestResult = results[m];\n    }\n  }\n\n  return closestResult;\n};\n\nChart.prototype.getObjectAtXY = function (mouseX, mouseY, getClosest) {\n  getClosest = getClosest || false;\n  var id = null;\n  var dataPointInfo = this.getDataPointAtXY(mouseX, mouseY, getClosest);\n\n  if (dataPointInfo) {\n    id = dataPointInfo.dataSeries.dataPointIds[dataPointInfo.dataPointIndex];\n  } else if (isCanvasSupported) {\n    //IE9+\n    id = getObjectId(mouseX, mouseY, this._eventManager.ghostCtx);\n  } else {\n    for (var i = 0; i < this.legend.items.length; i++) {\n      var item = this.legend.items[i];\n\n      if (mouseX >= item.x1 && mouseX <= item.x2 && mouseY >= item.y1 && mouseY <= item.y2) {\n        id = item.id;\n      }\n    }\n  }\n\n  return id;\n}; /// <summary>Calculates Font Size based on standardSize and Chart Size</summary>\n/// <param name=\"standardSize\" type=\"Number\">Standard font size for a Chart with min(width,height) = 400px</param>\n/// <returns type=\"Number\">The area.</returns>\n\n\nChart.prototype.getAutoFontSize = function (standardSize, width, height) {\n  width = width || this.width;\n  height = height || this.height;\n  var fontSizeScaleFactor = standardSize / 400;\n  return Math.round(Math.min(this.width, this.height) * fontSizeScaleFactor);\n}; //#region Events\n\n\nChart.prototype.resetOverlayedCanvas = function () {\n  //var width = this.overlaidCanvas.width;\n  //this.overlaidCanvas.width = 0;\n  //this.overlaidCanvas.width = width;\n  this.overlaidCanvasCtx.clearRect(0, 0, this.width, this.height);\n};\n\nChart.prototype.clearCanvas = function () {\n  this.ctx.clearRect(0, 0, this.width, this.height);\n\n  if (this.backgroundColor) {\n    this.ctx.fillStyle = this.backgroundColor;\n    this.ctx.fillRect(0, 0, this.width, this.height);\n  }\n};\n\nChart.prototype.attachEvent = function (param) {\n  this._events.push(param);\n};\n\nChart.prototype._touchEventHandler = function (ev) {\n  if (!ev.changedTouches || !this.interactivityEnabled) return;\n  var mouseEvents = [];\n  var touches = ev.changedTouches;\n  var first = touches ? touches[0] : ev;\n  var touchCurrentCoordinates = null; //window.console.log(touches.length);\n\n  switch (ev.type) {\n    case \"touchstart\":\n    case \"MSPointerDown\":\n      mouseEvents = [\"mousemove\", \"mousedown\"];\n      this._lastTouchData = getMouseCoordinates(first);\n      this._lastTouchData.time = new Date();\n      break;\n\n    case \"touchmove\":\n    case \"MSPointerMove\":\n      mouseEvents = [\"mousemove\"];\n      break;\n\n    case \"touchend\":\n    case \"MSPointerUp\":\n      mouseEvents = this._lastTouchEventType === \"touchstart\" || this._lastTouchEventType === \"MSPointerDown\" ? [\"mouseup\", \"click\"] : [\"mouseup\"];\n      break;\n\n    default:\n      return;\n  }\n\n  if (touches && touches.length > 1) return;\n  touchCurrentCoordinates = getMouseCoordinates(first);\n  touchCurrentCoordinates.time = new Date();\n\n  try {\n    var dy = touchCurrentCoordinates.y - this._lastTouchData.y;\n    var dx = touchCurrentCoordinates.x - this._lastTouchData.x;\n    var dt = touchCurrentCoordinates.time - this._lastTouchData.time;\n\n    if (Math.abs(dy) > 15 && (!!this._lastTouchData.scroll || dt < 200)) {\n      //this._lastTouchData.y = touchCurrentCoordinates.y;\n      this._lastTouchData.scroll = true;\n      var win = window.parent || window;\n      if (win && win.scrollBy) win.scrollBy(0, -dy);\n    }\n  } catch (e) {}\n\n  ;\n  this._lastTouchEventType = ev.type;\n\n  if (!!this._lastTouchData.scroll && this.zoomEnabled) {\n    if (this.isDrag) this.resetOverlayedCanvas();\n    this.isDrag = false;\n    return;\n  }\n\n  for (var i = 0; i < mouseEvents.length; i++) {\n    var type = mouseEvents[i];\n    var simulatedEvent = document.createEvent(\"MouseEvent\");\n    simulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0, null);\n    first.target.dispatchEvent(simulatedEvent);\n\n    if (ev.preventManipulation) {\n      //alert(\"preventManipulation\");\n      ev.preventManipulation();\n    }\n\n    if (ev.preventDefault) {\n      //alert(\"preventDefault\");\n      ev.preventDefault();\n    }\n  }\n};\n\nChart.prototype._dispatchRangeEvent = function (eventName, triggerSource) {\n  var eventParameter = {};\n  eventParameter.chart = this._publicChartReference;\n  eventParameter.type = eventName;\n  eventParameter.trigger = triggerSource;\n  var axes = [];\n  if (this.axisX) axes.push(\"axisX\");\n  if (this.axisY) axes.push(\"axisY\");\n  if (this.axisY2) axes.push(\"axisY2\");\n\n  for (var i = 0; i < axes.length; i++) {\n    eventParameter[axes[i]] = {\n      viewportMinimum: this[axes[i]].sessionVariables.newViewportMinimum,\n      viewportMaximum: this[axes[i]].sessionVariables.newViewportMaximum\n    };\n  }\n\n  this.dispatchEvent(eventName, eventParameter, this._publicChartReference);\n};\n\nChart.prototype._mouseEventHandler = function (ev) {\n  if (!this.interactivityEnabled) return;\n\n  if (this._ignoreNextEvent) {\n    this._ignoreNextEvent = false;\n    return;\n  } // stop panning and zooming so we can draw\n\n\n  if (ev.preventManipulation) {\n    //alert(\"preventManipulation\");\n    ev.preventManipulation();\n  } // we are handling this event\n\n\n  if (ev.preventDefault) {\n    //alert(\"preventDefault\");\n    ev.preventDefault();\n  } //IE8- uses srcElement instead of target. So instead of checking this condition everytime, its better to create a reference called target.\n\n\n  if (typeof ev.target === \"undefined\" && ev.srcElement) ev.target = ev.srcElement; //console.log(ev.type);\n\n  var xy = getMouseCoordinates(ev);\n  var type = ev.type;\n  var eventParam;\n  var rightclick;\n  if (!ev) var e = window.event;\n  if (ev.which) rightclick = ev.which == 3;else if (ev.button) rightclick = ev.button == 2; //window.console.log(type + \" --> x: \" + xy.x + \"; y:\" + xy.y);\n  //if (type === \"mouseout\") {\n  //    this._toolTip.hide();\n  //}\n\n  if (isDebugMode && window.console) {\n    window.console.log(type + \" --> x: \" + xy.x + \"; y:\" + xy.y);\n    if (rightclick) window.console.log(ev.which);\n    if (type === \"mouseup\") window.console.log(\"mouseup\");\n  }\n\n  if (rightclick) return; //if (this.plotInfo.axisPlacement === \"xySwapped\") {\n  //    //var temp = xy.x;\n  //    //xy.x = xy.y;\n  //    //xy.y = temp;\n  //    xy = {x: xy.y, y: xy.x};\n  //}\n\n  if (Chart.capturedEventParam) {\n    eventParam = Chart.capturedEventParam;\n\n    if (type === \"mouseup\") {\n      Chart.capturedEventParam = null;\n      if (eventParam.chart.overlaidCanvas.releaseCapture) eventParam.chart.overlaidCanvas.releaseCapture();else document.body.removeEventListener(\"mouseup\", eventParam.chart._mouseEventHandler, false);\n    }\n\n    if (eventParam.hasOwnProperty(type)) eventParam[type].call(eventParam.context, xy.x, xy.y);\n  } else if (this._events) {\n    for (var i = 0; i < this._events.length; i++) {\n      if (!this._events[i].hasOwnProperty(type)) continue;\n      eventParam = this._events[i];\n      var bounds = eventParam.bounds;\n\n      if (xy.x >= bounds.x1 && xy.x <= bounds.x2 && xy.y >= bounds.y1 && xy.y <= bounds.y2) {\n        eventParam[type].call(eventParam.context, xy.x, xy.y);\n\n        if (type === \"mousedown\" && eventParam.capture === true) {\n          Chart.capturedEventParam = eventParam;\n          if (this.overlaidCanvas.setCapture) this.overlaidCanvas.setCapture();else {\n            document.body.addEventListener(\"mouseup\", this._mouseEventHandler, false); //addEvent(document.body, \"mouseup\", this._mouseEventHandler);\n          }\n        } else if (type === \"mouseup\") {\n          if (eventParam.chart.overlaidCanvas.releaseCapture) eventParam.chart.overlaidCanvas.releaseCapture();else document.body.removeEventListener(\"mouseup\", this._mouseEventHandler, false);\n        }\n\n        break;\n      } else eventParam = null;\n    }\n\n    if (eventParam && eventParam.cursor) {\n      ev.target.style.cursor = eventParam.cursor;\n    } else ev.target.style.cursor = this._defaultCursor; //eventParam =\n\n  }\n\n  if (this._toolTip && this._toolTip.enabled) {\n    var plotArea = this.plotArea;\n    if (xy.x < plotArea.x1 || xy.x > plotArea.x2 || xy.y < plotArea.y1 || xy.y > plotArea.y2) this._toolTip.hide();\n  }\n\n  if ((!this.isDrag || !this.zoomEnabled) && this._eventManager) {\n    this._eventManager.mouseEventHandler(ev); //this._updateToolTip(ev.x, ev.y);\n\n  } //if (this._toolTip.enabled)\n  //    this._toolTip.mouseMoveHandler(ev.x, ev.y);\n\n};\n\nChart.prototype._plotAreaMouseDown = function (x, y) {\n  this.isDrag = true;\n\n  if (this.plotInfo.axisPlacement !== \"none\") {\n    this.dragStartPoint = {\n      x: x,\n      y: y\n    };\n  } else {\n    this.dragStartPoint = {\n      x: x,\n      y: y\n    };\n  }\n};\n\nChart.prototype._plotAreaMouseUp = function (x, y) {\n  if (this.plotInfo.axisPlacement === \"normal\" || this.plotInfo.axisPlacement === \"xySwapped\") {\n    if (this.isDrag) {\n      var dragDelta = 0,\n          dragDeltaPY = y - this.dragStartPoint.y,\n          dragDeltaPX = x - this.dragStartPoint.x,\n          zoomPX = this.zoomType.indexOf(\"x\") >= 0,\n          //Whether to zoom horizontally\n      zoomPY = this.zoomType.indexOf(\"y\") >= 0,\n          //Whether to zoom vertically\n      reRender = false;\n      this.resetOverlayedCanvas();\n\n      if (this.plotInfo.axisPlacement === \"xySwapped\") {\n        var temp = zoomPY;\n        zoomPY = zoomPX;\n        zoomPX = temp;\n      }\n\n      if (this.panEnabled || this.zoomEnabled) {\n        if (this.panEnabled) {\n          var overflow = 0;\n\n          for (var i = 0; i < this._axes.length; i++) {\n            var axis = this._axes[i];\n\n            if (axis.viewportMinimum < axis.minimum) {\n              overflow = axis.minimum - axis.viewportMinimum;\n              axis.sessionVariables.newViewportMinimum = axis.viewportMinimum + overflow;\n              axis.sessionVariables.newViewportMaximum = axis.viewportMaximum + overflow;\n              reRender = true;\n            } else if (axis.viewportMaximum > axis.maximum) {\n              overflow = axis.viewportMaximum - axis.maximum;\n              axis.sessionVariables.newViewportMinimum = axis.viewportMinimum - overflow;\n              axis.sessionVariables.newViewportMaximum = axis.viewportMaximum - overflow;\n              reRender = true;\n            }\n          }\n        } else if ((!zoomPX || Math.abs(dragDeltaPX) > 2) && (!zoomPY || Math.abs(dragDeltaPY) > 2) && this.zoomEnabled) {\n          if (!this.dragStartPoint) return;\n          var selectedRegion = {\n            x1: zoomPX ? this.dragStartPoint.x : this.plotArea.x1,\n            y1: zoomPY ? this.dragStartPoint.y : this.plotArea.y1,\n            x2: zoomPX ? x : this.plotArea.x2,\n            y2: zoomPY ? y : this.plotArea.y2\n          };\n\n          if (Math.abs(selectedRegion.x1 - selectedRegion.x2) > 2 && Math.abs(selectedRegion.y1 - selectedRegion.y2) > 2) {\n            if (this._zoomPanToSelectedRegion(selectedRegion.x1, selectedRegion.y1, selectedRegion.x2, selectedRegion.y2)) {\n              reRender = true;\n            }\n          }\n        }\n\n        if (reRender) {\n          this._ignoreNextEvent = true; //Required so that click event doesn't fire after zooming into a section of the chart.\n\n          this._dispatchRangeEvent(\"rangeChanging\", \"zoom\");\n\n          this.render();\n\n          this._dispatchRangeEvent(\"rangeChanged\", \"zoom\");\n\n          if (reRender && this.zoomEnabled && this._zoomButton.style.display === \"none\") {\n            show(this._zoomButton, this._resetButton);\n            setButtonState(this, this._zoomButton, \"pan\");\n            setButtonState(this, this._resetButton, \"reset\");\n          }\n        }\n      }\n    }\n  }\n\n  this.isDrag = false;\n};\n\nChart.prototype._plotAreaMouseMove = function (x, y) {\n  if (this.isDrag && this.plotInfo.axisPlacement !== \"none\") {\n    var dragDeltaPX = 0,\n        dragDeltaPY = 0,\n        alpha = null,\n        selectedRegion = null,\n        zoomPX = this.zoomType.indexOf(\"x\") >= 0,\n        //Whether to zoom horizontally\n    zoomPY = this.zoomType.indexOf(\"y\") >= 0,\n        //Whether to zoom vertically\n    _this = this;\n\n    if (this.plotInfo.axisPlacement === \"xySwapped\") {\n      var temp = zoomPY;\n      zoomPY = zoomPX;\n      zoomPX = temp;\n    }\n\n    dragDeltaPX = this.dragStartPoint.x - x;\n    dragDeltaPY = this.dragStartPoint.y - y;\n\n    if (Math.abs(dragDeltaPX) > 2 && Math.abs(dragDeltaPX) < 8 && (this.panEnabled || this.zoomEnabled)) {\n      this._toolTip.hide();\n    } else if (!this.panEnabled && !this.zoomEnabled) {\n      this._toolTip.mouseMoveHandler(x, y);\n    }\n\n    if ((!zoomPX || Math.abs(dragDeltaPX) > 2 || !zoomPY || Math.abs(dragDeltaPY) > 2) && (this.panEnabled || this.zoomEnabled)) {\n      if (this.panEnabled) {\n        selectedRegion = {\n          x1: zoomPX ? this.plotArea.x1 + dragDeltaPX : this.plotArea.x1,\n          y1: zoomPY ? this.plotArea.y1 + dragDeltaPY : this.plotArea.y1,\n          x2: zoomPX ? this.plotArea.x2 + dragDeltaPX : this.plotArea.x2,\n          y2: zoomPY ? this.plotArea.y2 + dragDeltaPY : this.plotArea.y2\n        };\n\n        if (this._zoomPanToSelectedRegion(selectedRegion.x1, selectedRegion.y1, selectedRegion.x2, selectedRegion.y2, true)) {\n          this._dispatchRangeEvent(\"rangeChanging\", \"pan\");\n\n          this.render();\n\n          this._dispatchRangeEvent(\"rangeChanged\", \"pan\");\n\n          this.dragStartPoint.x = x;\n          this.dragStartPoint.y = y; //clearTimeout(this._panTimerId);\n          //this._panTimerId = setTimeout(function () {\n          //\t_this._dispatchRangeEvent(\"rangeChanging\", \"pan\");\n          //\t_this.render();\n          //\t_this._dispatchRangeEvent(\"rangeChanged\", \"pan\");\n          //}, 0);\n        }\n      } else if (this.zoomEnabled) {\n        this.resetOverlayedCanvas();\n        alpha = this.overlaidCanvasCtx.globalAlpha;\n        this.overlaidCanvasCtx.globalAlpha = .7;\n        this.overlaidCanvasCtx.fillStyle = \"#A0ABB8\";\n        var rect = {\n          x1: zoomPX ? this.dragStartPoint.x : this.plotArea.x1,\n          y1: zoomPY ? this.dragStartPoint.y : this.plotArea.y1,\n          x2: zoomPX ? x - this.dragStartPoint.x : this.plotArea.x2 - this.plotArea.x1,\n          y2: zoomPY ? y - this.dragStartPoint.y : this.plotArea.y2 - this.plotArea.y1\n        };\n        this.overlaidCanvasCtx.fillRect(rect.x1, rect.y1, rect.x2, rect.y2);\n        this.overlaidCanvasCtx.globalAlpha = alpha;\n      }\n    }\n  } else this._toolTip.mouseMoveHandler(x, y);\n}; //#endregion Events\n//Sets the viewport range of Axis based on the given rect bounds (pixels). Also limits the zooming/panning based on axis bounds. Returns a boolean to indicate whether it was succesful or not based on the selected region.\n\n\nChart.prototype._zoomPanToSelectedRegion = function (px1, py1, px2, py2, keepAxisIndependent) {\n  keepAxisIndependent = keepAxisIndependent || false;\n  var zoomPX = this.zoomType.indexOf(\"x\") >= 0,\n      //Whether to zoom horizontally\n  zoomPY = this.zoomType.indexOf(\"y\") >= 0,\n      //Whether to zoom vertically\n  validRegion = false;\n  var axes = [],\n      axesWithValidRange = [];\n  if (this.axisX && zoomPX) axes.push(this.axisX);\n  if (this.axisY && zoomPY) axes.push(this.axisY);\n  if (this.axisY2 && zoomPY) axes.push(this.axisY2);\n  var params = [];\n\n  for (var i = 0; i < axes.length; i++) {\n    var axis = axes[i]; //var range = Math.abs(axis.viewportMaximum - axis.viewportMinimum);\n\n    var val1 = axis.convertPixelToValue({\n      x: px1,\n      y: py1\n    });\n    var val2 = axis.convertPixelToValue({\n      x: px2,\n      y: py2\n    });\n\n    if (val1 > val2) {\n      var temp = val2;\n      val2 = val1;\n      val1 = temp;\n    }\n\n    if (isFinite(axis.dataInfo.minDiff)) {\n      if (!(Math.abs(val2 - val1) < 3 * Math.abs(axis.dataInfo.minDiff) || val1 < axis.minimum || val2 > axis.maximum)) {\n        axesWithValidRange.push(axis);\n        params.push({\n          val1: val1,\n          val2: val2\n        });\n        validRegion = true;\n      } else if (!keepAxisIndependent) {\n        validRegion = false;\n        break;\n      }\n    }\n  }\n\n  if (validRegion) {\n    for (var i = 0; i < axesWithValidRange.length; i++) {\n      var axis = axesWithValidRange[i];\n      var param = params[i];\n      axis.setViewPortRange(param.val1, param.val2);\n    }\n  }\n\n  return validRegion;\n};\n\nChart.prototype.preparePlotArea = function () {\n  var plotArea = this.plotArea;\n  var yAxis = this.axisY ? this.axisY : this.axisY2;\n\n  if (!isCanvasSupported && (plotArea.x1 > 0 || plotArea.y1 > 0)) {\n    plotArea.ctx.translate(plotArea.x1, plotArea.y1);\n  }\n\n  if (this.axisX && yAxis) {\n    plotArea.x1 = this.axisX.lineCoordinates.x1 < this.axisX.lineCoordinates.x2 ? this.axisX.lineCoordinates.x1 : yAxis.lineCoordinates.x1;\n    plotArea.y1 = this.axisX.lineCoordinates.y1 < yAxis.lineCoordinates.y1 ? this.axisX.lineCoordinates.y1 : yAxis.lineCoordinates.y1;\n    plotArea.x2 = this.axisX.lineCoordinates.x2 > yAxis.lineCoordinates.x2 ? this.axisX.lineCoordinates.x2 : yAxis.lineCoordinates.x2;\n    plotArea.y2 = this.axisX.lineCoordinates.y2 > this.axisX.lineCoordinates.y1 ? this.axisX.lineCoordinates.y2 : yAxis.lineCoordinates.y2;\n    plotArea.width = plotArea.x2 - plotArea.x1;\n    plotArea.height = plotArea.y2 - plotArea.y1; //plotArea = { x1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: y2 - y1 };\n  } else {\n    //ToDo: @sunil\n    var freeSpace = this.layoutManager.getFreeSpace();\n    plotArea.x1 = freeSpace.x1;\n    plotArea.x2 = freeSpace.x2;\n    plotArea.y1 = freeSpace.y1;\n    plotArea.y2 = freeSpace.y2;\n    plotArea.width = freeSpace.width;\n    plotArea.height = freeSpace.height;\n  }\n\n  if (!isCanvasSupported) {\n    plotArea.canvas.width = plotArea.width;\n    plotArea.canvas.height = plotArea.height;\n    plotArea.canvas.style.left = plotArea.x1 + \"px\";\n    plotArea.canvas.style.top = plotArea.y1 + \"px\";\n\n    if (plotArea.x1 > 0 || plotArea.y1 > 0) {\n      plotArea.ctx.translate(-plotArea.x1, -plotArea.y1);\n    }\n  }\n\n  plotArea.layoutManager = new LayoutManager(plotArea.x1, plotArea.y1, plotArea.x2, plotArea.y2, 2);\n};\n\nChart.prototype.getPixelCoordinatesOnPlotArea = function (x, y) {\n  return {\n    x: this.axisX.getPixelCoordinatesOnAxis(x).x,\n    y: this.axisY.getPixelCoordinatesOnAxis(y).y\n  }; //return { x: 5, y: 10 };\n}; //#region Render Methods\n\n\nChart.prototype.renderIndexLabels = function (targetCtx) {\n  var ctx = targetCtx || this.plotArea.ctx;\n  var plotArea = this.plotArea;\n  var mid = 0;\n  var yMinLimit = 0;\n  var yMaxLimit = 0;\n  var xMinLimit = 0;\n  var xMaxLimit = 0;\n  var marginX = 0,\n      marginY = 0; // Margin between label and dataPoint / PlotArea\n\n  var offSetX = 0,\n      offSetY = 0; // Distance to offSet textBlock (top) from dataPoint inorder to position it\n\n  var visibleWidth = 0;\n  var visibleHeight = 0;\n\n  for (var i = 0; i < this._indexLabels.length; i++) {\n    var indexLabel = this._indexLabels[i];\n    var chartTypeLower = indexLabel.chartType.toLowerCase();\n    var x, y, angle;\n    var fontColor = getProperty(\"indexLabelFontColor\", indexLabel.dataPoint, indexLabel.dataSeries);\n    var fontSize = getProperty(\"indexLabelFontSize\", indexLabel.dataPoint, indexLabel.dataSeries);\n    var fontFamily = getProperty(\"indexLabelFontFamily\", indexLabel.dataPoint, indexLabel.dataSeries);\n    var fontStyle = getProperty(\"indexLabelFontStyle\", indexLabel.dataPoint, indexLabel.dataSeries);\n    var fontWeight = getProperty(\"indexLabelFontWeight\", indexLabel.dataPoint, indexLabel.dataSeries);\n    var backgroundColor = getProperty(\"indexLabelBackgroundColor\", indexLabel.dataPoint, indexLabel.dataSeries);\n    var maxWidth = getProperty(\"indexLabelMaxWidth\", indexLabel.dataPoint, indexLabel.dataSeries);\n    var indexLabelWrap = getProperty(\"indexLabelWrap\", indexLabel.dataPoint, indexLabel.dataSeries);\n    var percentAndTotal = {\n      percent: null,\n      total: null\n    };\n    var formatterParameter = null;\n    if (indexLabel.dataSeries.type.indexOf(\"stacked\") >= 0 || indexLabel.dataSeries.type === \"pie\" || indexLabel.dataSeries.type === \"doughnut\") percentAndTotal = this.getPercentAndTotal(indexLabel.dataSeries, indexLabel.dataPoint);\n    if (indexLabel.dataSeries.indexLabelFormatter || indexLabel.dataPoint.indexLabelFormatter) formatterParameter = {\n      chart: this._options,\n      dataSeries: indexLabel.dataSeries,\n      dataPoint: indexLabel.dataPoint,\n      index: indexLabel.indexKeyword,\n      total: percentAndTotal.total,\n      percent: percentAndTotal.percent\n    };\n    var indexLabelText = indexLabel.dataPoint.indexLabelFormatter ? indexLabel.dataPoint.indexLabelFormatter(formatterParameter) : indexLabel.dataPoint.indexLabel ? this.replaceKeywordsWithValue(indexLabel.dataPoint.indexLabel, indexLabel.dataPoint, indexLabel.dataSeries, null, indexLabel.indexKeyword) : indexLabel.dataSeries.indexLabelFormatter ? indexLabel.dataSeries.indexLabelFormatter(formatterParameter) : indexLabel.dataSeries.indexLabel ? this.replaceKeywordsWithValue(indexLabel.dataSeries.indexLabel, indexLabel.dataPoint, indexLabel.dataSeries, null, indexLabel.indexKeyword) : null;\n    if (indexLabelText === null || indexLabelText === \"\") continue;\n    var placement = getProperty(\"indexLabelPlacement\", indexLabel.dataPoint, indexLabel.dataSeries);\n    var orientation = getProperty(\"indexLabelOrientation\", indexLabel.dataPoint, indexLabel.dataSeries);\n    var angle = 0;\n    var direction = indexLabel.direction; // +1 for above the point and -1 for below the point\n\n    var axisX = indexLabel.dataSeries.axisX;\n    var axisY = indexLabel.dataSeries.axisY;\n    var textBlock = new TextBlock(ctx, {\n      x: 0,\n      y: 0,\n      maxWidth: maxWidth ? maxWidth : this.width * .5,\n      maxHeight: indexLabelWrap ? fontSize * 5 : fontSize * 1.5,\n      angle: orientation === \"horizontal\" ? 0 : -90,\n      text: indexLabelText,\n      padding: 0,\n      backgroundColor: backgroundColor,\n      horizontalAlign: \"left\",\n      //left, center, right\n      fontSize: fontSize,\n      //in pixels\n      fontFamily: fontFamily,\n      fontWeight: fontWeight,\n      //normal, bold, bolder, lighter,\n      fontColor: fontColor,\n      fontStyle: fontStyle,\n      // normal, italic, oblique\n      textBaseline: \"top\"\n    });\n    var textSize = textBlock.measureText(); //if (indexLabel.dataPoint.x < axisX.viewportMinimum || indexLabel.dataPoint.x > axisX.viewportMaximum || indexLabel.dataPoint.y < axisY.viewportMinimum || indexLabel.dataPoint.y > axisY.viewportMaximum)\n    //\tcontinue;\n\n    if (chartTypeLower.indexOf(\"line\") >= 0 || chartTypeLower.indexOf(\"area\") >= 0 || chartTypeLower.indexOf(\"bubble\") >= 0 || chartTypeLower.indexOf(\"scatter\") >= 0) {\n      if (indexLabel.dataPoint.x < axisX.viewportMinimum || indexLabel.dataPoint.x > axisX.viewportMaximum || indexLabel.dataPoint.y < axisY.viewportMinimum || indexLabel.dataPoint.y > axisY.viewportMaximum) continue;\n    } else {\n      if (indexLabel.dataPoint.x < axisX.viewportMinimum || indexLabel.dataPoint.x > axisX.viewportMaximum) continue;\n    }\n\n    marginY = 2;\n    marginX = 2;\n\n    if (orientation === \"horizontal\") {\n      visibleWidth = textBlock.width;\n      visibleHeight = textBlock.height;\n    } else {\n      visibleHeight = textBlock.width;\n      visibleWidth = textBlock.height;\n    }\n\n    if (this.plotInfo.axisPlacement === \"normal\") {\n      if (chartTypeLower.indexOf(\"line\") >= 0 || chartTypeLower.indexOf(\"area\") >= 0) {\n        placement = \"auto\";\n        marginY = 4;\n      } else if (chartTypeLower.indexOf(\"stacked\") >= 0) {\n        if (placement === \"auto\") placement = \"inside\";\n      } else if (chartTypeLower === \"bubble\" || chartTypeLower === \"scatter\") {\n        placement = \"inside\";\n      }\n\n      x = indexLabel.point.x - visibleWidth / 2;\n\n      if (placement !== \"inside\") {\n        //outside or auto\n        yMinLimit = plotArea.y1;\n        yMaxLimit = plotArea.y2;\n\n        if (direction > 0) {\n          y = indexLabel.point.y - visibleHeight - marginY;\n\n          if (y < yMinLimit) {\n            if (placement === \"auto\") {\n              y = Math.max(indexLabel.point.y, yMinLimit) + marginY;\n            } else {\n              y = yMinLimit + marginY;\n            }\n          }\n        } else {\n          y = indexLabel.point.y + marginY;\n\n          if (y > yMaxLimit - visibleHeight - marginY) {\n            if (placement === \"auto\") {\n              y = Math.min(indexLabel.point.y, yMaxLimit) - visibleHeight - marginY;\n            } else {\n              y = yMaxLimit - visibleHeight - marginY;\n            }\n          }\n        }\n      } else {\n        yMinLimit = Math.max(indexLabel.bounds.y1, plotArea.y1);\n        yMaxLimit = Math.min(indexLabel.bounds.y2, plotArea.y2);\n\n        if (chartTypeLower.indexOf(\"range\") >= 0) {\n          if (direction > 0) mid = Math.max(indexLabel.bounds.y1, plotArea.y1) + visibleHeight / 2 + marginY;else mid = Math.min(indexLabel.bounds.y2, plotArea.y2) - visibleHeight / 2 - marginY;\n        } else mid = (Math.max(indexLabel.bounds.y1, plotArea.y1) + Math.min(indexLabel.bounds.y2, plotArea.y2)) / 2;\n\n        if (direction > 0) {\n          y = Math.max(indexLabel.point.y, mid) - visibleHeight / 2;\n\n          if (y < yMinLimit && (chartTypeLower === \"bubble\" || chartTypeLower === \"scatter\")) {\n            y = Math.max(indexLabel.point.y - visibleHeight - marginY, plotArea.y1 + marginY);\n          }\n        } else {\n          y = Math.min(indexLabel.point.y, mid) - visibleHeight / 2;\n\n          if (y > yMaxLimit - visibleHeight - marginY && (chartTypeLower === \"bubble\" || chartTypeLower === \"scatter\")) {\n            y = Math.min(indexLabel.point.y + marginY, plotArea.y2 - visibleHeight - marginY);\n          }\n        } // Make Sure that it does not overlap the axis line\n\n\n        y = Math.min(y, yMaxLimit - visibleHeight);\n      }\n    } else {\n      if (chartTypeLower.indexOf(\"line\") >= 0 || chartTypeLower.indexOf(\"area\") >= 0 || chartTypeLower.indexOf(\"scatter\") >= 0) {\n        placement = \"auto\";\n        marginX = 4;\n      } else if (chartTypeLower.indexOf(\"stacked\") >= 0) {\n        if (placement === \"auto\") placement = \"inside\";\n      } else if (chartTypeLower === \"bubble\") {\n        placement = \"inside\";\n      }\n\n      y = indexLabel.point.y - visibleHeight / 2;\n\n      if (placement !== \"inside\") {\n        //outside or auto\n        xMinLimit = plotArea.x1;\n        xMaxLimit = plotArea.x2;\n\n        if (direction < 0) {\n          x = indexLabel.point.x - visibleWidth - marginX;\n\n          if (x < xMinLimit) {\n            if (placement === \"auto\") {\n              x = Math.max(indexLabel.point.x, xMinLimit) + marginX;\n            } else {\n              x = xMinLimit + marginX;\n            }\n          }\n        } else {\n          x = indexLabel.point.x + marginX;\n\n          if (x > xMaxLimit - visibleWidth - marginX) {\n            if (placement === \"auto\") {\n              x = Math.min(indexLabel.point.x, xMaxLimit) - visibleWidth - marginX;\n            } else {\n              x = xMaxLimit - visibleWidth - marginX;\n            }\n          }\n        }\n      } else {\n        xMinLimit = Math.max(indexLabel.bounds.x1, plotArea.x1);\n        xMaxLimit = Math.min(indexLabel.bounds.x2, plotArea.x2);\n\n        if (chartTypeLower.indexOf(\"range\") >= 0) {\n          if (direction < 0) mid = Math.max(indexLabel.bounds.x1, plotArea.x1) + visibleWidth / 2 + marginX;else mid = Math.min(indexLabel.bounds.x2, plotArea.x2) - visibleWidth / 2 - marginX;\n        } else var mid = (Math.max(indexLabel.bounds.x1, plotArea.x1) + Math.min(indexLabel.bounds.x2, plotArea.x2)) / 2;\n\n        if (direction < 0) {\n          x = Math.max(indexLabel.point.x, mid) - visibleWidth / 2; //if (y < xMinLimit) {\n          //\ty = Math.max(indexLabel.point.y - visibleHeight - marginY, plotArea.y1 + marginY);\n          //}\n        } else {\n          x = Math.min(indexLabel.point.x, mid) - visibleWidth / 2; //if (y > xMaxLimit - visibleHeight - marginY) {\n          //\ty = Math.min(indexLabel.point.y + marginY, plotArea.y2 - visibleHeight - marginY);\n          //}\n        } // Make Sure that it does not overlap the axis line\n\n\n        x = Math.max(x, xMinLimit);\n      }\n    }\n\n    if (orientation === \"vertical\") {\n      y += visibleHeight;\n    }\n\n    textBlock.x = x;\n    textBlock.y = y; //console.log(textBlock.text + \": \" + textBlock.x + \"; \" + textBlock.y);\n\n    textBlock.render(true);\n  } //source and dest would be same when animation is not enabled\n\n\n  var animationInfo = {\n    source: ctx,\n    dest: this.plotArea.ctx,\n    animationCallback: AnimationHelper.fadeInAnimation,\n    easingFunction: AnimationHelper.easing.easeInQuad,\n    animationBase: 0,\n    startTimePercent: .7\n  };\n  return animationInfo;\n};\n\nChart.prototype.renderLine = function (plotUnit) {\n  var ctx = plotUnit.targetCanvasCtx || this.plotArea.ctx;\n  var totalDataSeries = plotUnit.dataSeriesIndexes.length;\n  if (totalDataSeries <= 0) return;\n  var ghostCtx = this._eventManager.ghostCtx; //var ghostCtx = this.overlaidCanvasCtx;\n\n  ctx.save();\n  var plotArea = this.plotArea;\n  ctx.beginPath();\n  ctx.rect(plotArea.x1, plotArea.y1, plotArea.width, plotArea.height);\n  ctx.clip();\n  var markers = [];\n\n  for (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\n    var dataSeriesIndex = plotUnit.dataSeriesIndexes[j];\n    var dataSeries = this.data[dataSeriesIndex];\n    ctx.lineWidth = dataSeries.lineThickness;\n    var dataPoints = dataSeries.dataPoints;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(getLineDashArray(dataSeries.lineDashType, dataSeries.lineThickness));\n    }\n\n    var seriesId = dataSeries.id;\n    this._eventManager.objectMap[seriesId] = {\n      objectType: \"dataSeries\",\n      dataSeriesIndex: dataSeriesIndex\n    };\n    var hexColor = intToHexColorString(seriesId);\n    ghostCtx.strokeStyle = hexColor; //ghostCtx.lineWidth = dataSeries.lineThickness;\n\n    ghostCtx.lineWidth = dataSeries.lineThickness > 0 ? Math.max(dataSeries.lineThickness, 4) : 0;\n    var colorSet = dataSeries._colorSet;\n    var color = colorSet[0];\n    ctx.strokeStyle = color;\n    var isFirstDataPointInPlotArea = true;\n    var i = 0,\n        x,\n        y;\n    var dataPointX; //Used so that when dataPoint.x is a DateTime value, it doesn't get converted to number back and forth.\n    //if (!dataSeries._options.markerSize && dataSeries.dataPoints.length < 1000)\n    //    dataSeries.markerSize = 8;\n\n    ctx.beginPath();\n\n    if (dataPoints.length > 0) {\n      //var xy = this.getPixelCoordinatesOnPlotArea(dataPoints[0].x, dataPoints[0].y);\n      //dataSeries.noDataPointsInPlotArea = 0\n      var prevDataNull = false;\n\n      for (i = 0; i < dataPoints.length; i++) {\n        dataPointX = dataPoints[i].x.getTime ? dataPoints[i].x.getTime() : dataPoints[i].x;\n        if (dataPointX < plotUnit.axisX.dataInfo.viewPortMin || dataPointX > plotUnit.axisX.dataInfo.viewPortMax) continue; //if (!isFinite(dataPoints[i].y))\n        //    continue;\n\n        if (typeof dataPoints[i].y !== \"number\") {\n          if (i > 0) {\n            // if first dataPoint is null then no need to call stroke method\n            ctx.stroke();\n\n            if (isCanvasSupported) {\n              ghostCtx.stroke();\n            }\n          }\n\n          prevDataNull = true;\n          continue;\n        }\n\n        x = plotUnit.axisX.conversionParameters.reference + plotUnit.axisX.conversionParameters.pixelPerUnit * (dataPointX - plotUnit.axisX.conversionParameters.minimum) + .5 << 0;\n        y = plotUnit.axisY.conversionParameters.reference + plotUnit.axisY.conversionParameters.pixelPerUnit * (dataPoints[i].y - plotUnit.axisY.conversionParameters.minimum) + .5 << 0;\n        var id = dataSeries.dataPointIds[i];\n        this._eventManager.objectMap[id] = {\n          id: id,\n          objectType: \"dataPoint\",\n          dataSeriesIndex: dataSeriesIndex,\n          dataPointIndex: i,\n          x1: x,\n          y1: y\n        }; //dataSeries.noDataPointsInPlotArea++;\n\n        if (isFirstDataPointInPlotArea || prevDataNull) {\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n\n          if (isCanvasSupported) {\n            ghostCtx.beginPath();\n            ghostCtx.moveTo(x, y);\n          }\n\n          isFirstDataPointInPlotArea = false;\n          prevDataNull = false;\n        } else {\n          ctx.lineTo(x, y);\n          if (isCanvasSupported) ghostCtx.lineTo(x, y);\n\n          if (i % 500 == 0) {\n            ctx.stroke();\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n\n            if (isCanvasSupported) {\n              ghostCtx.stroke();\n              ghostCtx.beginPath();\n              ghostCtx.moveTo(x, y);\n            }\n          }\n        } //Render Marker\n\n\n        if (dataPoints[i].markerSize > 0 || dataSeries.markerSize > 0) {\n          var markerProps = dataSeries.getMarkerProperties(i, x, y, ctx);\n          markers.push(markerProps); //if (!dataSeries.maxWidthInX || markerProps.size > dataSeries.maxWidthInX) {\n          //\tdataSeries.maxWidthInX = markerProps.size / (plotUnit.axisX.conversionParameters.pixelPerUnit > 1 ? plotUnit.axisX.conversionParameters.pixelPerUnit - 1 : plotUnit.axisX.conversionParameters.pixelPerUnit);\n          //}\n\n          var markerColor = intToHexColorString(id); //window.console.log(\"index: \" + i + \"; id: \" + id + \"; hex: \" + markerColor);\n\n          if (isCanvasSupported) {\n            markers.push({\n              x: x,\n              y: y,\n              ctx: ghostCtx,\n              type: markerProps.type,\n              size: markerProps.size,\n              color: markerColor,\n              borderColor: markerColor,\n              borderThickness: markerProps.borderThickness\n            });\n          }\n        }\n\n        if (dataPoints[i].indexLabel || dataSeries.indexLabel || dataPoints[i].indexLabelFormatter || dataSeries.indexLabelFormatter) {\n          this._indexLabels.push({\n            chartType: \"line\",\n            dataPoint: dataPoints[i],\n            dataSeries: dataSeries,\n            point: {\n              x: x,\n              y: y\n            },\n            direction: dataPoints[i].y >= 0 ? 1 : -1,\n            color: color\n          });\n        }\n      }\n\n      ctx.stroke();\n      if (isCanvasSupported) ghostCtx.stroke();\n    }\n  }\n\n  RenderHelper.drawMarkers(markers);\n  ctx.restore();\n  ctx.beginPath();\n  if (isCanvasSupported) ghostCtx.beginPath(); //source and dest would be same when animation is not enabled\n\n  var animationInfo = {\n    source: ctx,\n    dest: this.plotArea.ctx,\n    animationCallback: AnimationHelper.xClipAnimation,\n    easingFunction: AnimationHelper.easing.linear,\n    animationBase: 0\n  };\n  return animationInfo;\n};\n\nChart.prototype.renderStepLine = function (plotUnit) {\n  var ctx = plotUnit.targetCanvasCtx || this.plotArea.ctx;\n  var totalDataSeries = plotUnit.dataSeriesIndexes.length;\n  if (totalDataSeries <= 0) return;\n  var ghostCtx = this._eventManager.ghostCtx; //var ghostCtx = this.overlaidCanvasCtx;\n\n  ctx.save();\n  var plotArea = this.plotArea;\n  ctx.beginPath();\n  ctx.rect(plotArea.x1, plotArea.y1, plotArea.width, plotArea.height);\n  ctx.clip();\n  var markers = [];\n\n  for (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\n    var dataSeriesIndex = plotUnit.dataSeriesIndexes[j];\n    var dataSeries = this.data[dataSeriesIndex];\n    ctx.lineWidth = dataSeries.lineThickness;\n    var dataPoints = dataSeries.dataPoints;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(getLineDashArray(dataSeries.lineDashType, dataSeries.lineThickness));\n    }\n\n    var seriesId = dataSeries.id;\n    this._eventManager.objectMap[seriesId] = {\n      objectType: \"dataSeries\",\n      dataSeriesIndex: dataSeriesIndex\n    };\n    var hexColor = intToHexColorString(seriesId);\n    ghostCtx.strokeStyle = hexColor; //ghostCtx.lineWidth = dataSeries.lineThickness;\n\n    ghostCtx.lineWidth = dataSeries.lineThickness > 0 ? Math.max(dataSeries.lineThickness, 4) : 0;\n    var colorSet = dataSeries._colorSet;\n    var color = colorSet[0];\n    ctx.strokeStyle = color;\n    var isFirstDataPointInPlotArea = true;\n    var i = 0,\n        x,\n        y;\n    var dataPointX; //Used so that when dataPoint.x is a DateTime value, it doesn't get converted to number back and forth.\n    //if (!dataSeries._options.markerSize && dataSeries.dataPoints.length < 1000)\n    //    dataSeries.markerSize = 8;\n\n    ctx.beginPath();\n\n    if (dataPoints.length > 0) {\n      //var xy = this.getPixelCoordinatesOnPlotArea(dataPoints[0].x, dataPoints[0].y);\n      //dataSeries.noDataPointsInPlotArea = 0\n      var prevDataNull = false;\n\n      for (i = 0; i < dataPoints.length; i++) {\n        dataPointX = dataPoints[i].getTime ? dataPoints[i].x.getTime() : dataPoints[i].x;\n        if (dataPointX < plotUnit.axisX.dataInfo.viewPortMin || dataPointX > plotUnit.axisX.dataInfo.viewPortMax) continue; //if (!isFinite(dataPoints[i].y))\n        //    continue;\n\n        if (typeof dataPoints[i].y !== \"number\") {\n          if (i > 0) {\n            // if first dataPoint is null then no need to call stroke method\n            ctx.stroke();\n\n            if (isCanvasSupported) {\n              ghostCtx.stroke();\n            }\n          }\n\n          prevDataNull = true;\n          continue;\n        }\n\n        var prevY = y;\n        x = plotUnit.axisX.conversionParameters.reference + plotUnit.axisX.conversionParameters.pixelPerUnit * (dataPointX - plotUnit.axisX.conversionParameters.minimum) + .5 << 0;\n        y = plotUnit.axisY.conversionParameters.reference + plotUnit.axisY.conversionParameters.pixelPerUnit * (dataPoints[i].y - plotUnit.axisY.conversionParameters.minimum) + .5 << 0;\n        var id = dataSeries.dataPointIds[i];\n        this._eventManager.objectMap[id] = {\n          id: id,\n          objectType: \"dataPoint\",\n          dataSeriesIndex: dataSeriesIndex,\n          dataPointIndex: i,\n          x1: x,\n          y1: y\n        }; //dataSeries.noDataPointsInPlotArea++;\n\n        if (isFirstDataPointInPlotArea || prevDataNull) {\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n\n          if (isCanvasSupported) {\n            ghostCtx.beginPath();\n            ghostCtx.moveTo(x, y);\n          }\n\n          isFirstDataPointInPlotArea = false;\n          prevDataNull = false;\n        } else {\n          ctx.lineTo(x, prevY);\n          if (isCanvasSupported) ghostCtx.lineTo(x, prevY);\n          ctx.lineTo(x, y);\n          if (isCanvasSupported) ghostCtx.lineTo(x, y);\n\n          if (i % 500 == 0) {\n            ctx.stroke();\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n\n            if (isCanvasSupported) {\n              ghostCtx.stroke();\n              ghostCtx.beginPath();\n              ghostCtx.moveTo(x, y);\n            }\n          }\n        } //Render Marker\n\n\n        if (dataPoints[i].markerSize > 0 || dataSeries.markerSize > 0) {\n          var markerProps = dataSeries.getMarkerProperties(i, x, y, ctx);\n          markers.push(markerProps); //if (!dataSeries.maxWidthInX || markerProps.size > dataSeries.maxWidthInX) {\n          //\tdataSeries.maxWidthInX = markerProps.size / (plotUnit.axisX.conversionParameters.pixelPerUnit > 1 ? plotUnit.axisX.conversionParameters.pixelPerUnit - 1 : plotUnit.axisX.conversionParameters.pixelPerUnit);\n          //}\n\n          var markerColor = intToHexColorString(id); //window.console.log(\"index: \" + i + \"; id: \" + id + \"; hex: \" + markerColor);\n\n          if (isCanvasSupported) {\n            markers.push({\n              x: x,\n              y: y,\n              ctx: ghostCtx,\n              type: markerProps.type,\n              size: markerProps.size,\n              color: markerColor,\n              borderColor: markerColor,\n              borderThickness: markerProps.borderThickness\n            });\n          }\n        }\n\n        if (dataPoints[i].indexLabel || dataSeries.indexLabel || dataPoints[i].indexLabelFormatter || dataSeries.indexLabelFormatter) {\n          this._indexLabels.push({\n            chartType: \"stepLine\",\n            dataPoint: dataPoints[i],\n            dataSeries: dataSeries,\n            point: {\n              x: x,\n              y: y\n            },\n            direction: dataPoints[i].y >= 0 ? 1 : -1,\n            color: color\n          });\n        }\n      }\n\n      ctx.stroke();\n      if (isCanvasSupported) ghostCtx.stroke();\n    }\n  }\n\n  RenderHelper.drawMarkers(markers);\n  ctx.restore();\n  ctx.beginPath();\n  if (isCanvasSupported) ghostCtx.beginPath(); //source and dest would be same when animation is not enabled\n\n  var animationInfo = {\n    source: ctx,\n    dest: this.plotArea.ctx,\n    animationCallback: AnimationHelper.xClipAnimation,\n    easingFunction: AnimationHelper.easing.linear,\n    animationBase: 0\n  };\n  return animationInfo;\n};\n\nChart.prototype.animationRequestId = null;\n\nChart.prototype.requestAnimFrame = function () {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n    window.setTimeout(callback, 1000 / 60);\n  };\n}();\n\nChart.prototype.cancelRequestAnimFrame = function () {\n  return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.mozCancelRequestAnimationFrame || window.oCancelRequestAnimationFrame || window.msCancelRequestAnimationFrame || clearTimeout;\n}();\n\nChart.prototype.getPercentAndTotal = function (ds, dp) {\n  var dpX = null;\n  var total = null;\n  var percent = null;\n\n  if (ds.type.indexOf(\"stacked\") >= 0) {\n    total = 0;\n    dpX = dp.x.getTime ? dp.x.getTime() : dp.x;\n\n    if (dpX in ds.plotUnit.yTotals) {\n      total = ds.plotUnit.yTotals[dpX];\n\n      if (!isNaN(dp.y)) {\n        if (total === 0) percent = 0;else percent = dp.y / total * 100;\n      } else percent = 0;\n    }\n  } else if (ds.type === \"pie\" || ds.type === \"doughnut\") {\n    total = 0;\n\n    for (var i = 0; i < ds.dataPoints.length; i++) {\n      if (!isNaN(ds.dataPoints[i].y)) total += ds.dataPoints[i].y;\n    }\n\n    if (!isNaN(dp.y)) percent = dp.y / total * 100;else percent = 0;\n  }\n\n  return {\n    percent: percent,\n    total: total\n  };\n};\n\nChart.prototype.replaceKeywordsWithValue = function (str, dp, ds, dpIndex, indexKeywordValue) {\n  //var regex = /\\{\\s*[a-zA-Z]+\\s*\\}|\"[^\"]*\"|'[^']*'/g;\n  var regex = /\\{.*?\\}|\"[^\"]*\"|'[^']*'/g;\n  var chart = this;\n  indexKeywordValue = typeof indexKeywordValue === \"undefined\" ? 0 : indexKeywordValue;\n\n  if ((ds.type.indexOf(\"stacked\") >= 0 || ds.type === \"pie\" || ds.type === \"doughnut\") && (str.indexOf(\"#percent\") >= 0 || str.indexOf(\"#total\") >= 0)) {\n    var percent = \"#percent\";\n    var total = \"#total\";\n    var dpX = null;\n    var percentAndTotal = this.getPercentAndTotal(ds, dp);\n    total = isNaN(percentAndTotal.total) ? total : percentAndTotal.total;\n    percent = isNaN(percentAndTotal.percent) ? percent : percentAndTotal.percent;\n\n    do {\n      var percentFormatString = \"\";\n      if (ds.percentFormatString) percentFormatString = ds.percentFormatString;else {\n        percentFormatString = \"#,##0.\";\n        var numberOfDecimals = Math.max(Math.ceil(Math.log(1 / Math.abs(percent)) / Math.LN10), 2);\n        if (isNaN(numberOfDecimals) || !isFinite(numberOfDecimals)) numberOfDecimals = 2;\n\n        for (var n = 0; n < numberOfDecimals; n++) {\n          percentFormatString += \"#\";\n        }\n      }\n      str = str.replace(\"#percent\", numberFormat(percent, percentFormatString, chart._cultureInfo));\n      str = str.replace(\"#total\", numberFormat(total, ds.yValueFormatString ? ds.yValueFormatString : \"#,##0.########\"));\n    } while (str.indexOf(\"#percent\") >= 0 || str.indexOf(\"#total\") >= 0);\n  }\n\n  var fcn = function ($0) {\n    if ($0[0] === \"\\\"\" && $0[$0.length - 1] === \"\\\"\" || $0[0] === \"\\'\" && $0[$0.length - 1] === \"\\'\") return $0.slice(1, $0.length - 1);\n    var key = trimString($0.slice(1, $0.length - 1));\n    key = key.replace(\"#index\", indexKeywordValue);\n    var index = null;\n\n    try {\n      var match = key.match(/(.*?)\\s*\\[\\s*(.*?)\\s*\\]/);\n\n      if (match && match.length > 0) {\n        index = trimString(match[2]);\n        key = trimString(match[1]);\n      }\n    } catch (e) {}\n\n    ;\n    var obj = null;\n\n    if (key === \"color\") {\n      return dp.color ? dp.color : ds.color ? ds.color : ds._colorSet[dpIndex % ds._colorSet.length];\n    }\n\n    if (dp.hasOwnProperty(key)) obj = dp;else if (ds.hasOwnProperty(key)) obj = ds;else return \"\";\n    var value = obj[key];\n    if (index !== null) value = value[index];\n\n    if (key === \"x\") {\n      if (chart.axisX && chart.plotInfo.axisXValueType === \"dateTime\") return dateFormat(value, dp.xValueFormatString ? dp.xValueFormatString : ds.xValueFormatString ? ds.xValueFormatString : chart.axisX && chart.axisX.valueFormatString ? chart.axisX.valueFormatString : \"DD MMM YY\", chart._cultureInfo);else return numberFormat(value, dp.xValueFormatString ? dp.xValueFormatString : ds.xValueFormatString ? ds.xValueFormatString : \"#,##0.########\", chart._cultureInfo);\n    } else if (key === \"y\") return numberFormat(value, dp.yValueFormatString ? dp.yValueFormatString : ds.yValueFormatString ? ds.yValueFormatString : \"#,##0.########\", chart._cultureInfo);else if (key === \"z\") return numberFormat(value, dp.zValueFormatString ? dp.zValueFormatString : ds.zValueFormatString ? ds.zValueFormatString : \"#,##0.########\", chart._cultureInfo);else return value;\n  };\n\n  return str.replace(regex, fcn);\n};\n\nChart.prototype.renderSpline = SplineChart;\nChart.prototype.renderColumn = ColumnChart;\nChart.prototype.renderStackedColumn = StackedColumnChart;\nChart.prototype.renderStackedColumn100 = StackedColumn100Chart;\nChart.prototype.renderBar = BarChart;\nChart.prototype.renderStackedBar = StackedBarChart;\nChart.prototype.renderStackedBar100 = StackedBar100Chart;\nChart.prototype.renderArea = AreaChart;\nChart.prototype.renderSplineArea = SplineAreaChart;\nChart.prototype.renderStepArea = StepAreaChart;\nChart.prototype.renderStackedArea = StackedAreaChart;\nChart.prototype.renderStackedArea100 = StackedArea100Chart;\nChart.prototype.renderBubble = BubbleChart;\nChart.prototype.renderScatter = ScatterChart;\nChart.prototype.renderCandlestick = CandlestickChart;\nChart.prototype.renderRangeColumn = RangeColumnChart;\nChart.prototype.renderRangeBar = RangeBarChart;\nChart.prototype.renderRangeArea = RangeAreaChart;\nChart.prototype.renderRangeSplineArea = RangeSplineAreaChart;\nChart.prototype.renderPie = PieChart;\nexport default Chart;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/canvasjs/src/core/charts.js"],"names":["CanvasJSObject","Animator","DataSeries","TextBlock","RenderHelper","LayoutManager","EventManager","ToolTip","CultureInfo","Axis","Title","Legend","AnimationHelper","colorSets","isDebugMode","defaultOptions","addEvent","setCanvasSize","addArrayIndexOf","hide","show","getMouseCoordinates","getProperty","isCanvasSupported","extend","createCanvas","extendCtx","getObjectId","getDevicePixelBackingStoreRatio","trimString","numberFormat","getLineDashArray","intToHexColorString","compareDataPointX","SplineChart","ColumnChart","StackedColumnChart","StackedColumn100Chart","BarChart","StackedBarChart","StackedBar100Chart","AreaChart","SplineAreaChart","StepAreaChart","StackedAreaChart","StackedArea100Chart","BubbleChart","ScatterChart","CandlestickChart","RangeColumnChart","RangeBarChart","RangeAreaChart","RangeSplineAreaChart","PieChart","devicePixelBackingStoreRatio","Chart","containerId","options","publicChartReference","_publicChartReference","base","constructor","call","theme","_this","_containerId","_objectsInitialized","ctx","overlaidCanvasCtx","_indexLabels","_panTimerId","_lastTouchEventType","_lastTouchData","isAnimating","renderCount","animatedRender","disableToolTip","panEnabled","_defaultCursor","plotArea","canvas","x1","y1","x2","y2","width","height","_dataInRenderedOrder","_container","document","getElementById","window","console","log","innerHTML","_options","clientWidth","clientHeight","_selectedColorSet","colorSet","_canvasJSContainer","createElement","setAttribute","style","position","textAlign","cursor","appendChild","getContext","textBaseline","overlaidCanvas","_eventManager","_updateSize","render","_toolBar","cssText","bounds","e","_mouseEventHandler","_dropdownMenu","navigator","msPointerEnabled","_touchEventHandler","_creditLink","_toolTip","toolTip","data","axisX","axisY","axisY2","sessionVariables","prototype","_updateOptions","updateOption","backgroundColor","_cultureInfo","culture","animationEnabled","zoomEnabled","_zoomButton","setButtonState","_resetButton","newViewportMinimum","newViewportMaximum","resetOverlayedCanvas","_dispatchRangeEvent","getAttribute","zoomText","_menuButton","exportEnabled","display","_dropDownCloseTime","Date","getTime","blur","focus","exportOption","saveJPGText","exportCanvas","exportFileName","savePNGText","resetText","creditHref","creditText","creditTextChanged","creditHrefChanged","parentElement","removeChild","prop","hasOwnProperty","ghostCanvas","_initialize","_animator","cancelAllAnimations","removeAllEventListeners","_axes","pieDoughnutClickHandler","animationRequestId","cancelRequestAnimFrame","clearCanvas","beginPath","_events","reset","plotInfo","axisPlacement","axisXValueType","plotTypes","layoutManager","dataSeriesIndex","series","length","type","_supportedChartTypes","indexOf","dataSeries","lastObjectId","name","color","_colorSet","index","markerSize","dataPoints","sort","push","seriesAxisPlacement","errorMessage","plotAreaElements","i","axisYType","gridThickness","showToolBar","viewportMinimum","viewportMaximum","_processData","title","_title","dockInsidePlotArea","subtitles","subtitle","Subtitle","legend","showInLegend","setLayoutAndRender","getFreeSpace","preparePlotArea","animations","initialState","initialStateCtx","drawImage","plotType","j","plotUnits","plotUnit","animationInfo","targetCanvas","targetCanvasCtx","renderLine","renderStepLine","renderSpline","renderColumn","renderBar","renderArea","renderStepArea","renderSplineArea","renderStackedColumn","renderStackedColumn100","renderStackedBar","renderStackedBar100","renderStackedArea","renderStackedArea100","renderBubble","renderScatter","renderPie","renderCandlestick","renderRangeColumn","renderRangeBar","renderRangeArea","renderRangeSplineArea","k","dataSeriesIndexes","indexLabelCanvas","indexLabelCanvasCtx","renderIndexLabels","animate","animationDuration","fractionComplete","clearRect","Math","floor","l","startTimePercent","animationCallback","easingFunction","dispatchEvent","chart","count","attachPlotAreaEventHandlers","_updateToolTip","setTimeout","ghostCanvasCopy","ghostCanvasCopyCtx","attachEvent","context","mousedown","_plotAreaMouseDown","mouseup","_plotAreaMouseUp","mousemove","_plotAreaMouseMove","capture","categoriseDataSeries","visible","plotTypeExists","plotUnitExists","totalDataSeries","previousDataSeriesCount","yTotals","assignIdToDataPoints","dataPointIds","_processMultiseriesPlotUnit","_processStackedPlotUnit","_processStacked100PlotUnit","_processMultiYPlotUnit","axisYDataInfo","dataInfo","axisXDataInfo","dataPointX","dataPointY","isDateTime","isFirstDPInViewPort","isLastDPInViewPort","plotAreaXMin","minimum","Infinity","plotAreaXMax","maximum","x","xValueType","y","min","max","xDiff","minDiff","yDiff","label","labels","viewPortMin","viewPortMax","dataPointYPositiveSums","dataPointYNegativeSums","abs","isNaN","ySum","containsPositiveY","containsNegativeY","dataPointYSums","dataPointYMin","dataPointYMax","apply","getDataPointAtXY","mouseX","mouseY","getClosest","results","result","closestResult","onlyLineAreaTypes","m","dataPoint","distance","getObjectAtXY","id","dataPointInfo","dataPointIndex","ghostCtx","items","item","getAutoFontSize","standardSize","fontSizeScaleFactor","round","fillStyle","fillRect","param","ev","changedTouches","interactivityEnabled","mouseEvents","touches","first","touchCurrentCoordinates","time","dy","dx","dt","scroll","win","parent","scrollBy","isDrag","simulatedEvent","createEvent","initMouseEvent","screenX","screenY","clientX","clientY","target","preventManipulation","preventDefault","eventName","triggerSource","eventParameter","trigger","axes","_ignoreNextEvent","srcElement","xy","eventParam","rightclick","event","which","button","capturedEventParam","releaseCapture","body","removeEventListener","setCapture","addEventListener","enabled","mouseEventHandler","dragStartPoint","dragDelta","dragDeltaPY","dragDeltaPX","zoomPX","zoomType","zoomPY","reRender","temp","overflow","axis","selectedRegion","_zoomPanToSelectedRegion","alpha","mouseMoveHandler","globalAlpha","rect","px1","py1","px2","py2","keepAxisIndependent","validRegion","axesWithValidRange","params","val1","convertPixelToValue","val2","isFinite","setViewPortRange","yAxis","translate","lineCoordinates","freeSpace","left","top","getPixelCoordinatesOnPlotArea","getPixelCoordinatesOnAxis","targetCtx","mid","yMinLimit","yMaxLimit","xMinLimit","xMaxLimit","marginX","marginY","offSetX","offSetY","visibleWidth","visibleHeight","indexLabel","chartTypeLower","chartType","toLowerCase","angle","fontColor","fontSize","fontFamily","fontStyle","fontWeight","maxWidth","indexLabelWrap","percentAndTotal","percent","total","formatterParameter","getPercentAndTotal","indexLabelFormatter","indexKeyword","indexLabelText","replaceKeywordsWithValue","placement","orientation","direction","textBlock","maxHeight","text","padding","horizontalAlign","textSize","measureText","point","source","dest","fadeInAnimation","easing","easeInQuad","animationBase","save","clip","markers","lineWidth","lineThickness","setLineDash","lineDashType","seriesId","objectMap","objectType","hexColor","strokeStyle","isFirstDataPointInPlotArea","prevDataNull","stroke","conversionParameters","reference","pixelPerUnit","moveTo","lineTo","markerProps","getMarkerProperties","markerColor","size","borderColor","borderThickness","drawMarkers","restore","xClipAnimation","linear","prevY","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","cancelAnimationFrame","webkitCancelRequestAnimationFrame","mozCancelRequestAnimationFrame","oCancelRequestAnimationFrame","msCancelRequestAnimationFrame","clearTimeout","ds","dp","dpX","str","dpIndex","indexKeywordValue","regex","percentFormatString","numberOfDecimals","ceil","LN10","n","replace","yValueFormatString","fcn","$0","slice","key","match","obj","value","dateFormat","xValueFormatString","valueFormatString","zValueFormatString"],"mappings":"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","sourcesContent":["\r\nimport CanvasJSObject from './canvasjs';\r\nimport Animator from './animator';\r\nimport DataSeries from './data_series';\r\nimport TextBlock from './text_block';\r\nimport RenderHelper from '../helpers/render';\r\nimport LayoutManager from './layout_manager';\r\nimport EventManager from './event_manager';\r\nimport ToolTip from './tooltip';\r\nimport CultureInfo from '../core/culture_info';\r\nimport Axis from '../core/axis';\r\nimport Title from '../core/title';\r\nimport Legend from '../core/legend';\r\nimport AnimationHelper from '../helpers/animator';\r\nimport {colorSets} from '../constants/themes';\r\nimport {isDebugMode, defaultOptions} from '../constants/options';\r\n// import {inherits} from 'util';\r\n\r\nimport {\r\n\taddEvent,\r\n\tsetCanvasSize,\r\n\taddArrayIndexOf,\r\n\thide,\r\n\tshow,\r\n\tgetMouseCoordinates,\r\n\tgetProperty,\r\n\tisCanvasSupported,\r\n\textend,\r\n\tcreateCanvas,\r\n\textendCtx,\r\n\tgetObjectId,\r\n\tgetDevicePixelBackingStoreRatio,\r\n\ttrimString,\r\n\tnumberFormat,\r\n\tgetLineDashArray,\r\n\tintToHexColorString,\r\n\tcompareDataPointX\r\n} from '../helpers/utils';\r\n\r\nimport {\r\n\tSplineChart,\r\n\tColumnChart,\r\n\tStackedColumnChart,\r\n\tStackedColumn100Chart,\r\n\tBarChart,\r\n\tStackedBarChart,\r\n\tStackedBar100Chart,\r\n\tAreaChart,\r\n\tSplineAreaChart,\r\n\tStepAreaChart,\r\n\tStackedAreaChart,\r\n\tStackedArea100Chart,\r\n\tBubbleChart,\r\n\tScatterChart,\r\n\tCandlestickChart,\r\n\tRangeColumnChart,\r\n\tRangeBarChart,\r\n\tRangeAreaChart,\r\n\tRangeSplineAreaChart,\r\n\tPieChart\r\n} from '../charts/index';\r\n\r\nvar devicePixelBackingStoreRatio = getDevicePixelBackingStoreRatio();\r\n\r\nfunction Chart(containerId, options, publicChartReference) {\r\n\r\n\tthis._publicChartReference = publicChartReference;\r\n\r\n\toptions = options || {};\r\n\r\n\tChart.base.constructor.call(this, \"Chart\", options, options.theme ? options.theme : \"theme1\");\r\n\r\n\tvar _this = this;\r\n\r\n\tthis._containerId = containerId;\r\n\tthis._objectsInitialized = false;\r\n\tthis.ctx = null;\r\n\tthis.overlaidCanvasCtx = null;\r\n\tthis._indexLabels = [];\r\n\tthis._panTimerId = 0;\r\n\tthis._lastTouchEventType = \"\";\r\n\tthis._lastTouchData = null;\r\n\tthis.isAnimating = false;\r\n\tthis.renderCount = 0;\r\n\tthis.animatedRender = false;\r\n\tthis.disableToolTip = false;\r\n\r\n\r\n\tthis.panEnabled = false;\r\n\tthis._defaultCursor = \"default\";\r\n\tthis.plotArea = { canvas: null, ctx: null, x1: 0, y1: 0, x2: 0, y2: 0, width: 0, height: 0 };\r\n\tthis._dataInRenderedOrder = [];\r\n\r\n\tthis._container = typeof (this._containerId) === \"string\" ? document.getElementById(this._containerId) : this._containerId;\r\n\r\n\tif (!this._container) {\r\n\t\tif (window.console)\r\n\t\t\twindow.console.log(\"CanvasJS Error: Chart Container with id \\\"\" + this._containerId + \"\\\" was not found\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis._container.innerHTML = \"\";\r\n\r\n\tvar width = 0;\r\n\tvar height = 0;\r\n\r\n\tif (this._options.width)\r\n\t\twidth = this.width;\r\n\telse\r\n\t\twidth = this._container.clientWidth > 0 ? this._container.clientWidth : this.width;\r\n\r\n\tif (this._options.height)\r\n\t\theight = this.height;\r\n\telse\r\n\t\theight = this._container.clientHeight > 0 ? this._container.clientHeight : this.height;\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.x1 = this.y1 = 0;\r\n\tthis.x2 = this.width;\r\n\tthis.y2 = this.height;\r\n\r\n\r\n\tthis._selectedColorSet = typeof (colorSets[this.colorSet]) !== \"undefined\" ? colorSets[this.colorSet] : colorSets[\"colorSet1\"];\r\n\r\n\tthis._canvasJSContainer = document.createElement(\"div\");\r\n\tthis._canvasJSContainer.setAttribute(\"class\", \"canvasjs-chart-container\");\r\n\r\n\tthis._canvasJSContainer.style.position = \"relative\";\r\n\tthis._canvasJSContainer.style.textAlign = \"left\";\r\n\tthis._canvasJSContainer.style.cursor = \"auto\";\r\n\r\n\tif (!isCanvasSupported) {\r\n\t\tthis._canvasJSContainer.style.height = \"0px\";//In IE6 toolTip doesn't show at proper position if not set.\r\n\t}\r\n\tthis._container.appendChild(this._canvasJSContainer);\r\n\r\n\r\n\tthis.canvas = createCanvas(width, height);\r\n\r\n\tthis.canvas.style.position = \"absolute\";\r\n\tif (this.canvas.getContext) {\r\n\t\t//try {\r\n\t\t//\tthis.canvas.style.background = this.backgroundColor;\r\n\t\t//} catch (e) { }\r\n\t\tthis._canvasJSContainer.appendChild(this.canvas);\r\n\t\tthis.ctx = this.canvas.getContext(\"2d\");\r\n\t\tthis.ctx.textBaseline = \"top\";\r\n\t\textendCtx(this.ctx);\r\n\r\n\t} else return;\r\n\r\n\t//this.canvas.style.cursor = \"pointer\";\r\n\r\n\tif (!isCanvasSupported) {\r\n\t\tthis.plotArea.canvas = createCanvas(width, height);\r\n\t\tthis.plotArea.canvas.style.position = \"absolute\";\r\n\t\tthis.plotArea.canvas.setAttribute(\"class\", \"plotAreaCanvas\");\r\n\t\tthis._canvasJSContainer.appendChild(this.plotArea.canvas);\r\n\r\n\t\tthis.plotArea.ctx = this.plotArea.canvas.getContext(\"2d\");\r\n\t} else {\r\n\t\tthis.plotArea.ctx = this.ctx;\r\n\t}\r\n\r\n\tthis.overlaidCanvas = createCanvas(width, height);\r\n\tthis.overlaidCanvas.style.position = \"absolute\";\r\n\tthis._canvasJSContainer.appendChild(this.overlaidCanvas);\r\n\tthis.overlaidCanvasCtx = this.overlaidCanvas.getContext(\"2d\");\r\n\tthis.overlaidCanvasCtx.textBaseline = \"top\";\r\n\r\n\tthis._eventManager = new EventManager(this);\r\n\r\n\taddEvent(window, \"resize\", function () {\r\n\t\t//this._container.addEventListener(\"DOMSubtreeModified\", function () {\r\n\r\n\t\tif (_this._updateSize())\r\n\t\t\t_this.render();\r\n\t});\r\n\r\n\r\n\tthis._toolBar = document.createElement(\"div\");\r\n\tthis._toolBar.setAttribute(\"class\", \"canvasjs-chart-toolbar\");\r\n\tthis._toolBar.style.cssText = \"position: absolute; right: 1px; top: 1px;\";\r\n\tthis._canvasJSContainer.appendChild(this._toolBar);\r\n\r\n\r\n\tthis.bounds = { x1: 0, y1: 0, x2: this.width, y2: this.height };\r\n\r\n\taddEvent(this.overlaidCanvas, 'click', function (e) {\r\n\t\t_this._mouseEventHandler(e);\r\n\t});\r\n\r\n\taddEvent(this.overlaidCanvas, 'mousemove', function (e) {\r\n\t\t_this._mouseEventHandler(e);\r\n\t});\r\n\r\n\taddEvent(this.overlaidCanvas, 'mouseup', function (e) {\r\n\t\t_this._mouseEventHandler(e);\r\n\t});\r\n\r\n\taddEvent(this.overlaidCanvas, 'mousedown', function (e) {\r\n\t\t_this._mouseEventHandler(e);\r\n\t\thide(_this._dropdownMenu);\r\n\t});\r\n\r\n\taddEvent(this.overlaidCanvas, 'mouseout', function (e) {\r\n\t\t_this._mouseEventHandler(e);\r\n\t});\r\n\r\n\r\n\taddEvent(this.overlaidCanvas, window.navigator.msPointerEnabled ? \"MSPointerDown\" : \"touchstart\", function (e) {\r\n\t\t_this._touchEventHandler(e);\r\n\t});\r\n\r\n\taddEvent(this.overlaidCanvas, window.navigator.msPointerEnabled ? \"MSPointerMove\" : 'touchmove', function (e) {\r\n\t\t_this._touchEventHandler(e);\r\n\t});\r\n\r\n\taddEvent(this.overlaidCanvas, window.navigator.msPointerEnabled ? \"MSPointerUp\" : 'touchend', function (e) {\r\n\t\t_this._touchEventHandler(e);\r\n\t});\r\n\r\n\taddEvent(this.overlaidCanvas, window.navigator.msPointerEnabled ? \"MSPointerCancel\" : 'touchcancel', function (e) {\r\n\t\t_this._touchEventHandler(e);\r\n\t});\r\n\r\n\tif (!this._creditLink) {\r\n\r\n\t\tthis._creditLink = document.createElement(\"a\");\r\n\t\tthis._creditLink.setAttribute(\"class\", \"canvasjs-chart-credit\");\r\n\t\tthis._creditLink.setAttribute(\"style\", \"outline:none;margin:0px;position:absolute;right:3px;top:\" + (this.height - 14) + \"px;color:dimgrey;text-decoration:none;font-size:10px;font-family:Lucida Grande, Lucida Sans Unicode, Arial, sans-serif\");\r\n\r\n\t\tthis._creditLink.setAttribute(\"tabIndex\", -1);\r\n\r\n\t\tthis._creditLink.setAttribute(\"target\", \"_blank\");\r\n\t}\r\n\r\n\tthis._toolTip = new ToolTip(this, this._options.toolTip, this.theme);\r\n\r\n\tthis.data = null;\r\n\tthis.axisX = null;\r\n\tthis.axisY = null;\r\n\tthis.axisY2 = null;\r\n\r\n\tthis.sessionVariables = {\r\n\t\taxisX: {},\r\n\t\taxisY: {},\r\n\t\taxisY2: {}\r\n\t};\r\n}\r\n\r\nextend(Chart, CanvasJSObject);\r\n\r\n//Update Chart Properties\r\nChart.prototype._updateOptions = function () {\r\n\r\n\tvar _this = this;\r\n\r\n\tthis.updateOption(\"width\");\r\n\tthis.updateOption(\"height\");\r\n\tthis.updateOption(\"dataPointMaxWidth\");\r\n\tthis.updateOption(\"interactivityEnabled\");\r\n\tthis.updateOption(\"theme\");\r\n\r\n\tif (this.updateOption(\"colorSet\"))\r\n\t\tthis._selectedColorSet = typeof (colorSets[this.colorSet]) !== \"undefined\" ? colorSets[this.colorSet] : colorSets[\"colorSet1\"];\r\n\r\n\tthis.updateOption(\"backgroundColor\");\r\n\tif (!this.backgroundColor)\r\n\t\tthis.backgroundColor = \"rgba(0,0,0,0)\";\r\n\r\n\tthis.updateOption(\"culture\");\r\n\tthis._cultureInfo = new CultureInfo(this._options.culture);\r\n\r\n\tthis.updateOption(\"animationEnabled\");\r\n\tthis.animationEnabled = this.animationEnabled && isCanvasSupported;\r\n\tthis.updateOption(\"animationDuration\");\r\n\r\n\tthis.updateOption(\"rangeChanging\");\r\n\tthis.updateOption(\"rangeChanged\");\r\n\r\n\t//Need to check this._options.zoomEnabled because this.zoomEnabled is used internally to keep track of state - and hence changes.\r\n\tif (this._options.zoomEnabled) {\r\n\r\n\t\tif (!this._zoomButton) {\r\n\r\n\t\t\thide(this._zoomButton = document.createElement(\"button\"));\r\n\r\n\t\t\tsetButtonState(this, this._zoomButton, \"pan\");\r\n\r\n\t\t\tthis._toolBar.appendChild(this._zoomButton);\r\n\t\t\taddEvent(this._zoomButton, \"click\", function () {\r\n\t\t\t\tif (_this.zoomEnabled) {\r\n\t\t\t\t\t_this.zoomEnabled = false;\r\n\t\t\t\t\t_this.panEnabled = true;\r\n\r\n\t\t\t\t\tsetButtonState(_this, _this._zoomButton, \"zoom\");\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.zoomEnabled = true;\r\n\t\t\t\t\t_this.panEnabled = false;\r\n\r\n\t\t\t\t\tsetButtonState(_this, _this._zoomButton, \"pan\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_this.render();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\tif (!this._resetButton) {\r\n\t\t\thide(this._resetButton = document.createElement(\"button\"));\r\n\t\t\tsetButtonState(this, this._resetButton, \"reset\");\r\n\t\t\tthis._toolBar.appendChild(this._resetButton);\r\n\r\n\t\t\taddEvent(this._resetButton, \"click\", function () {\r\n\r\n\t\t\t\t_this._toolTip.hide();\r\n\r\n\t\t\t\tif (_this.zoomEnabled || _this.panEnabled) {\r\n\t\t\t\t\t_this.zoomEnabled = true;\r\n\t\t\t\t\t_this.panEnabled = false;\r\n\t\t\t\t\tsetButtonState(_this, _this._zoomButton, \"pan\");\r\n\r\n\t\t\t\t\t_this._defaultCursor = \"default\";\r\n\t\t\t\t\t_this.overlaidCanvas.style.cursor = _this._defaultCursor;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.zoomEnabled = false;\r\n\t\t\t\t\t_this.panEnabled = false;\r\n\t\t\t\t}\r\n\t\t\t\t//Reset axisX\r\n\t\t\t\tif (_this.sessionVariables.axisX) {\r\n\t\t\t\t\t_this.sessionVariables.axisX.newViewportMinimum = null;\r\n\t\t\t\t\t_this.sessionVariables.axisX.newViewportMaximum = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Reset axisY\r\n\t\t\t\tif (_this.sessionVariables.axisY) {\r\n\t\t\t\t\t_this.sessionVariables.axisY.newViewportMinimum = null;\r\n\t\t\t\t\t_this.sessionVariables.axisY.newViewportMaximum = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Reset axisY2\r\n\t\t\t\tif (_this.sessionVariables.axisY2) {\r\n\t\t\t\t\t_this.sessionVariables.axisY2.newViewportMinimum = null;\r\n\t\t\t\t\t_this.sessionVariables.axisY2.newViewportMaximum = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_this.resetOverlayedCanvas();\r\n\r\n\t\t\t\thide(_this._zoomButton, _this._resetButton);\r\n\r\n\t\t\t\t_this._dispatchRangeEvent(\"rangeChanging\", \"reset\");\r\n\t\t\t\t_this.render();\r\n\t\t\t\t_this._dispatchRangeEvent(\"rangeChanged\", \"reset\");\r\n\t\t\t});\r\n\r\n\t\t\tthis.overlaidCanvas.style.cursor = _this._defaultCursor;\r\n\t\t}\r\n\r\n\t\tif (!this.zoomEnabled && !this.panEnabled) {\r\n\t\t\tif (!this._zoomButton) {\r\n\t\t\t\tthis.zoomEnabled = true;\r\n\t\t\t\tthis.panEnabled = false;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (_this._zoomButton.getAttribute(\"state\") === _this._cultureInfo.zoomText) {\r\n\t\t\t\t\tthis.panEnabled = true;\r\n\t\t\t\t\tthis.zoomEnabled = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.zoomEnabled = true;\r\n\t\t\t\t\tthis.panEnabled = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tshow(_this._zoomButton, _this._resetButton);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t} else {\r\n\t\tthis.zoomEnabled = false;\r\n\t\tthis.panEnabled = false;\r\n\t}\r\n\r\n\r\n\r\n\tif (this._menuButton) {\r\n\t\tif (this.exportEnabled)\r\n\t\t\tshow(this._menuButton);\r\n\t\telse\r\n\t\t\thide(this._menuButton);\r\n\t} else if (this.exportEnabled && isCanvasSupported) {\r\n\t\tthis._menuButton = document.createElement(\"button\");\r\n\t\tsetButtonState(this, this._menuButton, \"menu\");\r\n\t\tthis._toolBar.appendChild(this._menuButton);\r\n\r\n\t\taddEvent(this._menuButton, \"click\", function () {\r\n\t\t\tif (_this._dropdownMenu.style.display === \"none\") {\r\n\r\n\t\t\t\tif (_this._dropDownCloseTime && ((new Date()).getTime() - _this._dropDownCloseTime.getTime() <= 500))\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t_this._dropdownMenu.style.display = \"block\";\r\n\t\t\t\t_this._menuButton.blur();\r\n\t\t\t\t_this._dropdownMenu.focus();\r\n\t\t\t}\r\n\r\n\t\t}, true);\r\n\t}\r\n\r\n\r\n\tif (!this._dropdownMenu && this.exportEnabled && isCanvasSupported) {\r\n\t\tthis._dropdownMenu = document.createElement(\"div\");\r\n\t\tthis._dropdownMenu.setAttribute(\"tabindex\", -1);\r\n\t\tthis._dropdownMenu.style.cssText = \"position: absolute; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; cursor: pointer;right: 1px;top: 25px;min-width: 120px;outline: 0;border: 1px solid silver;font-size: 14px;font-family: Calibri, Verdana, sans-serif;padding: 5px 0px 5px 0px;text-align: left;background-color: #fff;line-height: 20px;box-shadow: 2px 2px 10px #888888;\";\r\n\t\t_this._dropdownMenu.style.display = \"none\";\r\n\t\tthis._toolBar.appendChild(this._dropdownMenu);\r\n\r\n\t\taddEvent(this._dropdownMenu, \"blur\", function () {\r\n\t\t\thide(_this._dropdownMenu);\r\n\r\n\t\t\t_this._dropDownCloseTime = new Date();\r\n\t\t}, true);\r\n\r\n\t\tvar exportOption = document.createElement(\"div\");\r\n\t\texportOption.style.cssText = \"padding: 2px 15px 2px 10px\"\r\n\t\texportOption.innerHTML = this._cultureInfo.saveJPGText;\r\n\t\tthis._dropdownMenu.appendChild(exportOption);\r\n\r\n\t\taddEvent(exportOption, \"mouseover\", function () {\r\n\t\t\tthis.style.backgroundColor = \"#EEEEEE\";\r\n\t\t}, true);\r\n\r\n\t\taddEvent(exportOption, \"mouseout\", function () {\r\n\t\t\tthis.style.backgroundColor = \"transparent\";\r\n\t\t}, true);\r\n\r\n\t\taddEvent(exportOption, \"click\", function () {\r\n\t\t\texportCanvas(_this.canvas, \"jpg\", _this.exportFileName);\r\n\t\t\thide(_this._dropdownMenu);\r\n\t\t}, true);\r\n\r\n\t\tvar exportOption = document.createElement(\"div\");\r\n\t\texportOption.style.cssText = \"padding: 2px 15px 2px 10px\"\r\n\t\texportOption.innerHTML = this._cultureInfo.savePNGText;\r\n\t\tthis._dropdownMenu.appendChild(exportOption);\r\n\r\n\t\taddEvent(exportOption, \"mouseover\", function () {\r\n\t\t\tthis.style.backgroundColor = \"#EEEEEE\";\r\n\t\t}, true);\r\n\r\n\t\taddEvent(exportOption, \"mouseout\", function () {\r\n\t\t\tthis.style.backgroundColor = \"transparent\";\r\n\t\t}, true);\r\n\r\n\t\taddEvent(exportOption, \"click\", function () {\r\n\t\t\texportCanvas(_this.canvas, \"png\", _this.exportFileName);\r\n\t\t\thide(_this._dropdownMenu);\r\n\t\t}, true);\r\n\t}\r\n\r\n\r\n\tif (this._toolBar.style.display !== \"none\" && this._zoomButton) {\r\n\r\n\t\tthis.panEnabled ? setButtonState(_this, _this._zoomButton, \"zoom\") : setButtonState(_this, _this._zoomButton, \"pan\");\r\n\r\n\r\n\t\tif (_this._resetButton.getAttribute(\"state\") !== _this._cultureInfo.resetText)\r\n\t\t\tsetButtonState(_this, _this._resetButton, \"reset\");\r\n\t}\r\n\r\n\tif (typeof (defaultOptions.Chart.creditHref) === \"undefined\") {\r\n\t\tthis.creditHref = \"http://canvasjs.com/\";\r\n\t\tthis.creditText = \"CanvasJS.com\";\r\n\t} else {\r\n\t\tvar creditTextChanged = this.updateOption(\"creditText\");\r\n\t\tvar creditHrefChanged = this.updateOption(\"creditHref\");\r\n\t}\r\n\r\n\tif (this.renderCount === 0 || (creditTextChanged || creditHrefChanged)) {\r\n\t\tthis._creditLink.setAttribute(\"href\", this.creditHref);\r\n\t\tthis._creditLink.innerHTML = this.creditText;\r\n\t}\r\n\r\n\tif (this.creditHref && this.creditText) {\r\n\t\tif (!this._creditLink.parentElement)\r\n\t\t\tthis._canvasJSContainer.appendChild(this._creditLink);\r\n\t}\r\n\telse if (this._creditLink.parentElement)\r\n\t\tthis._canvasJSContainer.removeChild(this._creditLink);\r\n\r\n\tif (this._options.toolTip && this._toolTip._options !== this._options.toolTip)\r\n\t\tthis._toolTip._options = this._options.toolTip\r\n\r\n\tfor (var prop in this._toolTip._options) {\r\n\r\n\t\tif (this._toolTip._options.hasOwnProperty(prop)) {\r\n\t\t\tthis._toolTip.updateOption(prop);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nChart.prototype._updateSize = function () {\r\n\tvar width = 0;\r\n\tvar height = 0;\r\n\r\n\tif (this._options.width)\r\n\t\twidth = this.width;\r\n\telse\r\n\t\tthis.width = width = this._container.clientWidth > 0 ? this._container.clientWidth : this.width;\r\n\r\n\tif (this._options.height)\r\n\t\theight = this.height;\r\n\telse\r\n\t\tthis.height = height = this._container.clientHeight > 0 ? this._container.clientHeight : this.height;\r\n\r\n\tif (this.canvas.width !== width * devicePixelBackingStoreRatio || this.canvas.height !== height * devicePixelBackingStoreRatio) {\r\n\t\tsetCanvasSize(this.canvas, width, height);\r\n\r\n\t\tsetCanvasSize(this.overlaidCanvas, width, height);\r\n\t\tsetCanvasSize(this._eventManager.ghostCanvas, width, height);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n// initialize chart objects\r\nChart.prototype._initialize = function () {\r\n\t///<signature>\r\n\t///<summary>Initializes Chart objects/state. Creates DataSeries class instance for each DataSeries provided by ther user. Sets the Axis Type based on the user data</summary>\r\n\t///</signature>\r\n\t//this.width = this.width;\r\n\r\n\tif (!this._animator)\r\n\t\tthis._animator = new Animator(this);\r\n\telse {\r\n\t\tthis._animator.cancelAllAnimations();\r\n\t}\r\n\r\n\tthis.removeAllEventListeners();\r\n\r\n\tthis.disableToolTip = false;\r\n\r\n\tthis._axes = [];\r\n\r\n\tthis.pieDoughnutClickHandler = null;\r\n\t//this._touchCurrentCoordinates = null;\r\n\r\n\tif (this.animationRequestId)\r\n\t\tthis.cancelRequestAnimFrame.call(window, this.animationRequestId);\r\n\r\n\tthis._updateOptions();\r\n\r\n\tthis.animatedRender = isCanvasSupported && this.animationEnabled && (this.renderCount === 0);\r\n\r\n\tthis._updateSize();\r\n\r\n\t//this._selectedColorSet = colorSets[\"colorSet2\"];\r\n\r\n\t//this.ctx.clearRect(0, 0, this.width, this.height);\r\n\tthis.clearCanvas();\r\n\tthis.ctx.beginPath();\r\n\r\n\tthis.axisX = null;\r\n\tthis.axisY = null;\r\n\tthis.axisY2 = null;\r\n\tthis._indexLabels = [];\r\n\tthis._dataInRenderedOrder = [];\r\n\r\n\tthis._events = [];\r\n\tif (this._eventManager)\r\n\t\tthis._eventManager.reset();\r\n\r\n\tthis.plotInfo = {\r\n\t\taxisPlacement: null,\r\n\t\taxisXValueType: null,\r\n\t\tplotTypes: []//array of plotType: {type:\"\", axisYType: \"primary\", dataSeriesIndexes:[]}\r\n\t};\r\n\r\n\tthis.layoutManager = new LayoutManager(0, 0, this.width, this.height, 2);\r\n\r\n\tif (this.plotArea.layoutManager)\r\n\t\tthis.plotArea.layoutManager.reset();\r\n\r\n\r\n\tthis.data = [];\r\n\tvar dataSeriesIndex = 0;\r\n\r\n\tfor (var series = 0; series < this._options.data.length; series++) {\r\n\t\t//for (series in this._options.data) {\r\n\r\n\t\tdataSeriesIndex++;\r\n\r\n\t\tif (!(!this._options.data[series].type || Chart._supportedChartTypes.indexOf(this._options.data[series].type) >= 0))\r\n\t\t\tcontinue;\r\n\r\n\t\tvar dataSeries = new DataSeries(this, this._options.data[series], this.theme, dataSeriesIndex - 1, ++this._eventManager.lastObjectId);\r\n\t\tif (dataSeries.name === null)\r\n\t\t\tdataSeries.name = \"DataSeries \" + (dataSeriesIndex);\r\n\r\n\t\tif (dataSeries.color === null) {\r\n\t\t\tif (this._options.data.length > 1) {\r\n\t\t\t\tdataSeries._colorSet = [this._selectedColorSet[dataSeries.index % this._selectedColorSet.length]];\r\n\t\t\t\tdataSeries.color = this._selectedColorSet[dataSeries.index % this._selectedColorSet.length];\r\n\t\t\t} else {\r\n\t\t\t\tif (dataSeries.type === \"line\" || dataSeries.type === \"stepLine\" || dataSeries.type === \"spline\" || dataSeries.type === \"area\"\r\n\t\t\t\t\t|| dataSeries.type === \"stepArea\" || dataSeries.type === \"splineArea\" || dataSeries.type === \"stackedArea\" || dataSeries.type === \"stackedArea100\"\r\n\t\t\t\t\t|| dataSeries.type === \"rangeArea\" || dataSeries.type === \"rangeSplineArea\" || dataSeries.type === \"candlestick\" || dataSeries.type === \"ohlc\") {\r\n\t\t\t\t\tdataSeries._colorSet = [this._selectedColorSet[0]];\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tdataSeries._colorSet = this._selectedColorSet;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdataSeries._colorSet = [dataSeries.color];\r\n\t\t}\r\n\r\n\t\tif (dataSeries.markerSize === null) {\r\n\t\t\tif (((dataSeries.type === \"line\" || dataSeries.type === \"stepLine\" || dataSeries.type === \"spline\") && dataSeries.dataPoints && dataSeries.dataPoints.length < this.width / 16) || dataSeries.type === \"scatter\") {\r\n\t\t\t\t//if (dataSeries.type === \"line\") {\r\n\t\t\t\tdataSeries.markerSize = 8;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ((dataSeries.type === \"bubble\" || dataSeries.type === \"scatter\") && dataSeries.dataPoints) {\r\n\t\t\tdataSeries.dataPoints.sort(compareDataPointX)\r\n\t\t}\r\n\r\n\t\t//if (dataSeries.markerBorderThickness === null && dataSeries.type === \"scatter\") {\r\n\t\t//    dataSeries.markerBorderThickness = 2;\r\n\t\t//}\r\n\r\n\t\t//if (dataSeries.markerType === null) {\r\n\t\t//    if (dataSeries.type === \"line\" & dataSeries.dataPoints.length < 500) {\r\n\t\t//        dataSeries.markerType = \"circle\";\r\n\t\t//    }\r\n\t\t//}\r\n\r\n\t\tthis.data.push(dataSeries);\r\n\r\n\t\tvar seriesAxisPlacement = dataSeries.axisPlacement;\r\n\r\n\t\t//if (isDebugMode && window.console)\r\n\t\t//    window.console.log(dataSeries.type);\r\n\r\n\t\tvar errorMessage;\r\n\r\n\t\tif (seriesAxisPlacement === \"normal\") {\r\n\r\n\t\t\tif (this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\t\t\t\terrorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with bar chart\";\r\n\t\t\t} else if (this.plotInfo.axisPlacement === \"none\") {\r\n\t\t\t\terrorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with pie chart\";\r\n\t\t\t} else if (this.plotInfo.axisPlacement === null)\r\n\t\t\t\tthis.plotInfo.axisPlacement = \"normal\";\r\n\t\t}\r\n\t\telse if (seriesAxisPlacement === \"xySwapped\") {\r\n\r\n\t\t\tif (this.plotInfo.axisPlacement === \"normal\") {\r\n\t\t\t\terrorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with line, area, column or pie chart\";\r\n\t\t\t} else if (this.plotInfo.axisPlacement === \"none\") {\r\n\t\t\t\terrorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with pie chart\";\r\n\t\t\t} else if (this.plotInfo.axisPlacement === null)\r\n\t\t\t\tthis.plotInfo.axisPlacement = \"xySwapped\";\r\n\t\t}\r\n\t\telse if (seriesAxisPlacement == \"none\") {\r\n\r\n\t\t\tif (this.plotInfo.axisPlacement === \"normal\") {\r\n\t\t\t\terrorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with line, area, column or bar chart\";\r\n\t\t\t} else if (this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\t\t\t\terrorMessage = \"You cannot combine \\\"\" + dataSeries.type + \"\\\" with bar chart\";\r\n\t\t\t} else if (this.plotInfo.axisPlacement === null)\r\n\t\t\t\tthis.plotInfo.axisPlacement = \"none\";\r\n\t\t}\r\n\r\n\t\tif (errorMessage && window.console) {\r\n\t\t\twindow.console.log(errorMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t//if (isDebugMode && window.console) {\r\n\t//    window.console.log(\"xMin: \" + this.plotInfo.viewPortXMin + \"; xMax: \" + this.plotInfo.viewPortXMax + \"; yMin: \" + this.plotInfo.yMin + \"; yMax: \" + this.plotInfo.yMax);\r\n\t//}\r\n\r\n\tthis._objectsInitialized = true;\r\n}\r\n\r\n//indexOf is not supported in IE8-\r\nChart._supportedChartTypes = addArrayIndexOf([\"line\", \"stepLine\", \"spline\", \"column\", \"area\", \"stepArea\", \"splineArea\", \"bar\", \"bubble\", \"scatter\",\r\n\t\"stackedColumn\", \"stackedColumn100\", \"stackedBar\", \"stackedBar100\",\r\n\t\"stackedArea\", \"stackedArea100\",\r\n\t\"candlestick\",\r\n\t\"ohlc\",\r\n\t\"rangeColumn\",\r\n\t\"rangeBar\",\r\n\t\"rangeArea\",\r\n\t\"rangeSplineArea\",\r\n\t\"pie\", \"doughnut\", \"funnel\"\r\n]);\r\n\r\nChart.prototype.render = function (options) {\r\n\r\n\tif (options)\r\n\t\tthis._options = options;\r\n\r\n\tthis._initialize();\r\n\tvar plotAreaElements = []; //Elements to be rendered inside the plotArea\r\n\r\n\t//Create Primary and Secondary axis and assign them to the series\r\n\tfor (var i = 0; i < this.data.length; i++) {\r\n\r\n\t\tif (this.plotInfo.axisPlacement === \"normal\" || this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\t\t\tif (!this.data[i].axisYType || this.data[i].axisYType === \"primary\") {\r\n\t\t\t\tif (!this.axisY) {\r\n\r\n\t\t\t\t\tif (this.plotInfo.axisPlacement === \"normal\") {\r\n\t\t\t\t\t\tthis._axes.push(this.axisY = new Axis(this, this._options.axisY, \"axisY\", \"left\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\t\t\t\t\t\tthis._axes.push(this.axisY = new Axis(this, this._options.axisY, \"axisY\", \"bottom\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.data[i].axisY = this.axisY;\r\n\t\t\t}\r\n\t\t\telse if (this.data[i].axisYType === \"secondary\") {\r\n\t\t\t\tif (!this.axisY2) {\r\n\t\t\t\t\tif (this.plotInfo.axisPlacement === \"normal\") {\r\n\t\t\t\t\t\tthis._axes.push(this.axisY2 = new Axis(this, this._options.axisY2, \"axisY\", \"right\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\t\t\t\t\t\tthis._axes.push(this.axisY2 = new Axis(this, this._options.axisY2, \"axisY\", \"top\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.data[i].axisY = this.axisY2;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.axisX) {\r\n\t\t\t\tif (this.plotInfo.axisPlacement === \"normal\") {\r\n\t\t\t\t\tthis._axes.push(this.axisX = new Axis(this, this._options.axisX, \"axisX\", \"bottom\"));\r\n\t\t\t\t} else if (this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\t\t\t\t\tthis._axes.push(this.axisX = new Axis(this, this._options.axisX, \"axisX\", \"left\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.data[i].axisX = this.axisX;\r\n\t\t}\r\n\t}\r\n\r\n\t//If Both Primary and Secondary axis are present, disable gridlines for one of them unless the user has set value for both\r\n\tif (this.axisY && this.axisY2) {\r\n\t\tif (this.axisY.gridThickness > 0 && typeof (this.axisY2._options.gridThickness) === \"undefined\")\r\n\t\t\tthis.axisY2.gridThickness = 0;\r\n\t\telse if (this.axisY2.gridThickness > 0 && typeof (this.axisY._options.gridThickness) === \"undefined\")\r\n\t\t\tthis.axisY.gridThickness = 0;\r\n\t}\r\n\r\n\r\n\t//Show toolBar when viewportMinimum/viewportMaximum are set\r\n\tvar showToolBar = false;\r\n\tif (this._axes.length > 0 && (this.zoomEnabled || this.panEnabled)) {\r\n\t\tfor (var i = 0; i < this._axes.length; i++) {\r\n\t\t\tif (this._axes[i].viewportMinimum !== null || this._axes[i].viewportMaximum !== null) {\r\n\t\t\t\tshowToolBar = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (showToolBar) {\r\n\t\tshow(this._zoomButton, this._resetButton);\r\n\t} else {\r\n\t\thide(this._zoomButton, this._resetButton);\r\n\t}\r\n\r\n\r\n\tthis._processData();// Categorises the dataSeries and calculates min, max and other values\r\n\r\n\tif (this._options.title) {\r\n\t\tthis._title = new Title(this, this._options.title);\r\n\r\n\t\tif (!this._title.dockInsidePlotArea)\r\n\t\t\tthis._title.render();\r\n\t\telse\r\n\t\t\tplotAreaElements.push(this._title);\r\n\t}\r\n\r\n\tif (this._options.subtitles) {\r\n\t\tfor (var i = 0; i < this._options.subtitles.length; i++) {\r\n\r\n\t\t\tthis.subtitles = [];\r\n\r\n\t\t\tvar subtitle = new Subtitle(this, this._options.subtitles[i]);\r\n\t\t\tthis.subtitles.push(subtitle);\r\n\r\n\t\t\tif (!subtitle.dockInsidePlotArea)\r\n\t\t\t\tsubtitle.render();\r\n\t\t\telse\r\n\t\t\t\tplotAreaElements.push(subtitle);\r\n\t\t}\r\n\t}\r\n\r\n\tthis.legend = new Legend(this, this._options.legend, this.theme);\r\n\tfor (var i = 0; i < this.data.length; i++) {\r\n\t\tif (this.data[i].showInLegend || this.data[i].type === \"pie\" || this.data[i].type === \"doughnut\") {\r\n\t\t\tthis.legend.dataSeries.push(this.data[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tif (!this.legend.dockInsidePlotArea)\r\n\t\tthis.legend.render();\r\n\telse\r\n\t\tplotAreaElements.push(this.legend);\r\n\r\n\t//TBI: Revisit and check if the functionality is enough.\r\n\tif (this.plotInfo.axisPlacement === \"normal\" || this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\r\n\t\t//var freeSpace = this.layoutManager.getFreeSpace();\r\n\r\n\t\tAxis.setLayoutAndRender(this.axisX, this.axisY, this.axisY2, this.plotInfo.axisPlacement, this.layoutManager.getFreeSpace());\r\n\t} else if (this.plotInfo.axisPlacement === \"none\") {\r\n\t\t//In case of charts with axis this method is called inside setLayoutAndRender\r\n\t\tthis.preparePlotArea();\r\n\t}\r\n\telse {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar index = 0;\r\n\tfor (index in plotAreaElements) {\r\n\t\tif(plotAreaElements.hasOwnProperty(index))\r\n\t\tplotAreaElements[index].render();\r\n\t}\r\n\r\n\tvar animations = [];\r\n\tif (this.animatedRender) {\r\n\t\tvar initialState = createCanvas(this.width, this.height);\r\n\t\tvar initialStateCtx = initialState.getContext(\"2d\");\r\n\t\tinitialStateCtx.drawImage(this.canvas, 0, 0, this.width, this.height);\r\n\t}\r\n\r\n\tfor (var i = 0; i < this.plotInfo.plotTypes.length; i++) {\r\n\t\tvar plotType = this.plotInfo.plotTypes[i];\r\n\r\n\t\tfor (var j = 0; j < plotType.plotUnits.length; j++) {\r\n\r\n\t\t\tvar plotUnit = plotType.plotUnits[j];\r\n\t\t\tvar animationInfo = null;\r\n\r\n\t\t\tplotUnit.targetCanvas = null; //In case chart updates before the animation is complete, previous canvases need to be removed\r\n\r\n\t\t\tif (this.animatedRender) {\r\n\t\t\t\tplotUnit.targetCanvas = createCanvas(this.width, this.height);\r\n\t\t\t\tplotUnit.targetCanvasCtx = plotUnit.targetCanvas.getContext(\"2d\");\r\n\t\t\t}\r\n\r\n\t\t\tif (plotUnit.type === \"line\")\r\n\t\t\t\tanimationInfo = this.renderLine(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"stepLine\")\r\n\t\t\t\tanimationInfo = this.renderStepLine(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"spline\")\r\n\t\t\t\tanimationInfo = this.renderSpline(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"column\")\r\n\t\t\t\tanimationInfo = this.renderColumn(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"bar\")\r\n\t\t\t\tanimationInfo = this.renderBar(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"area\")\r\n\t\t\t\tanimationInfo = this.renderArea(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"stepArea\")\r\n\t\t\t\tanimationInfo = this.renderStepArea(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"splineArea\")\r\n\t\t\t\tanimationInfo = this.renderSplineArea(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"stackedColumn\")\r\n\t\t\t\tanimationInfo = this.renderStackedColumn(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"stackedColumn100\")\r\n\t\t\t\tanimationInfo = this.renderStackedColumn100(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"stackedBar\")\r\n\t\t\t\tanimationInfo = this.renderStackedBar(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"stackedBar100\")\r\n\t\t\t\tanimationInfo = this.renderStackedBar100(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"stackedArea\")\r\n\t\t\t\tanimationInfo = this.renderStackedArea(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"stackedArea100\")\r\n\t\t\t\tanimationInfo = this.renderStackedArea100(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"bubble\")\r\n\t\t\t\tanimationInfo = animationInfo = this.renderBubble(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"scatter\")\r\n\t\t\t\tanimationInfo = this.renderScatter(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"pie\")\r\n\t\t\t\tthis.renderPie(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"doughnut\")\r\n\t\t\t\tthis.renderPie(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"candlestick\")\r\n\t\t\t\tanimationInfo = this.renderCandlestick(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"ohlc\")\r\n\t\t\t\tanimationInfo = this.renderCandlestick(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"rangeColumn\")\r\n\t\t\t\tanimationInfo = this.renderRangeColumn(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"rangeBar\")\r\n\t\t\t\tanimationInfo = this.renderRangeBar(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"rangeArea\")\r\n\t\t\t\tanimationInfo = this.renderRangeArea(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"rangeSplineArea\")\r\n\t\t\t\tanimationInfo = this.renderRangeSplineArea(plotUnit);\r\n\r\n\t\t\tfor (var k = 0; k < plotUnit.dataSeriesIndexes.length; k++) {\r\n\t\t\t\tthis._dataInRenderedOrder.push(this.data[plotUnit.dataSeriesIndexes[k]]);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.animatedRender && animationInfo)\r\n\t\t\t\tanimations.push(animationInfo);\r\n\t\t}\r\n\t}\r\n\r\n\tif (this.animatedRender && this._indexLabels.length > 0) {\r\n\t\tvar indexLabelCanvas = createCanvas(this.width, this.height);\r\n\t\tvar indexLabelCanvasCtx = indexLabelCanvas.getContext(\"2d\");\r\n\t\tanimations.push(this.renderIndexLabels(indexLabelCanvasCtx));\r\n\t}\r\n\r\n\tvar _this = this;\r\n\r\n\tif (animations.length > 0) {\r\n\t\t//var animationCount = 0;\r\n\t\t_this.disableToolTip = true;\r\n\t\t_this._animator.animate(200, _this.animationDuration, function (fractionComplete) {\r\n\r\n\t\t\t//console.log(fractionComplete);\r\n\t\t\t//animationCount++;\r\n\r\n\t\t\t_this.ctx.clearRect(0, 0, _this.width, _this.height);\r\n\r\n\r\n\t\t\t//  _this.ctx.drawImage(initialState, 0, 0, _this.width * devicePixelBackingStoreRatio, _this.height * devicePixelBackingStoreRatio, 0, 0, _this.width, _this.height);\r\n\t\t\t_this.ctx.drawImage(initialState, 0, 0, Math.floor(_this.width * devicePixelBackingStoreRatio), Math.floor(_this.height * devicePixelBackingStoreRatio), 0, 0, _this.width, _this.height);\r\n\r\n\t\t\tfor (var l = 0; l < animations.length; l++) {\r\n\r\n\t\t\t\tanimationInfo = animations[l];\r\n\r\n\t\t\t\tif (fractionComplete < 1 && typeof (animationInfo.startTimePercent) !== \"undefined\") {\r\n\t\t\t\t\tif (fractionComplete >= animationInfo.startTimePercent) {\r\n\t\t\t\t\t\t//animationInfo.animationCallback(AnimationHelper.easing.linear(fractionComplete - animationInfo.startTimePercent, 0, 1, 1 - animationInfo.startTimePercent), animationInfo);\r\n\r\n\t\t\t\t\t\tanimationInfo.animationCallback(animationInfo.easingFunction(fractionComplete - animationInfo.startTimePercent, 0, 1, 1 - animationInfo.startTimePercent), animationInfo);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tanimationInfo.animationCallback(animationInfo.easingFunction(fractionComplete, 0, 1, 1), animationInfo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_this.dispatchEvent(\"dataAnimationIterationEnd\",\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tchart: _this\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t}, function () {\r\n\r\n\t\t\tanimations = [];\r\n\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\t//Delete all render target canvases used for animation.\r\n\t\t\tfor (var i = 0; i < _this.plotInfo.plotTypes.length; i++) {\r\n\t\t\t\tvar plotType = _this.plotInfo.plotTypes[i];\r\n\r\n\t\t\t\tfor (var j = 0; j < plotType.plotUnits.length; j++) {\r\n\t\t\t\t\tvar plotUnit = plotType.plotUnits[j];\r\n\t\t\t\t\tplotUnit.targetCanvas = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinitialState = null;\r\n\t\t\t_this.disableToolTip = false;\r\n\t\t\t//console.log(\"*********** Animation Complete - \" + animationCount + \" ***********\");\r\n\r\n\t\t});\r\n\t} else {\r\n\t\tif (_this._indexLabels.length > 0)\r\n\t\t\t_this.renderIndexLabels();\r\n\r\n\t\t_this.dispatchEvent(\"dataAnimationIterationEnd\",\r\n\t\t\t\t{\r\n\t\t\t\t\tchart: _this\r\n\t\t\t\t});\r\n\t}\r\n\r\n\tthis.attachPlotAreaEventHandlers();\r\n\r\n\tif (!this.zoomEnabled && !this.panEnabled && this._zoomButton && this._zoomButton.style.display !== \"none\") {\r\n\t\thide(this._zoomButton, this._resetButton);\r\n\t}\r\n\r\n\tthis._toolTip._updateToolTip();\r\n\r\n\tthis.renderCount++;\r\n\r\n\t//if (window.console) {\r\n\t//    window.console.log(new Date().getTime() - dt);\r\n\t//}\r\n\r\n\tif (isDebugMode) {\r\n\r\n\t\tvar _this = this;\r\n\t\tsetTimeout(function () {\r\n\t\t\tvar ghostCanvasCopy = document.getElementById(\"ghostCanvasCopy\");\r\n\r\n\t\t\tif (ghostCanvasCopy) {\r\n\t\t\t\t//console.log(ghostCanvasCopy.clientWidth);\r\n\t\t\t\tsetCanvasSize(ghostCanvasCopy, _this.width, _this.height);\r\n\t\t\t\tvar ghostCanvasCopyCtx = ghostCanvasCopy.getContext(\"2d\");\r\n\r\n\t\t\t\t//ghostCanvasCopyCtx.scale(1, 1);\r\n\t\t\t\t//var imageData = this._eventManager.ghostCtx.getImageData(0, 0, this._container.clientWidth, this._container.clientHeight);\r\n\t\t\t\t//this._eventManager.ghostCtx.drawImage(this._eventManager.ghostCanvas, 0, 0);\r\n\t\t\t\t//this.ctx.drawImage(this._eventManager.ghostCanvas, 0, 0);\r\n\r\n\t\t\t\tghostCanvasCopyCtx.drawImage(_this._eventManager.ghostCanvas, 0, 0);\r\n\t\t\t\t//_this._canvasJSContainer.appendChild(_this._eventManager.ghostCanvas);\r\n\t\t\t\t//_this.overlaidCanvasCtx.drawImage(_this._eventManager.ghostCanvas, 0, 0);\r\n\t\t\t}\r\n\t\t}, 2000);\r\n\t}\r\n}\r\n\r\nChart.prototype.attachPlotAreaEventHandlers = function () {\r\n\r\n\t//this._toolBar.style.display = \"inline\";\r\n\r\n\tthis.attachEvent({\r\n\t\tcontext: this,\r\n\t\tchart: this,\r\n\t\tmousedown: this._plotAreaMouseDown,\r\n\t\tmouseup: this._plotAreaMouseUp,\r\n\t\tmousemove: this._plotAreaMouseMove,\r\n\t\tcursor: this.zoomEnabled ? \"col-resize\" : \"move\",\r\n\t\tcursor: this.panEnabled ? \"move\" : \"default\",\r\n\t\tcapture: true,\r\n\t\tbounds: this.plotArea\r\n\t});\r\n\r\n}\r\n\r\nChart.prototype.categoriseDataSeries = function () {\r\n\tvar dataSeries = \"\";\r\n\r\n\tfor (var i = 0; i < this.data.length; i++) {\r\n\t\tdataSeries = this.data[i]\r\n\t\tif (!dataSeries.dataPoints || dataSeries.dataPoints.length === 0 || !dataSeries.visible)\r\n\t\t\tcontinue;\r\n\r\n\t\tif (Chart._supportedChartTypes.indexOf(dataSeries.type) >= 0) {\r\n\r\n\t\t\tvar plotType = null;\r\n\t\t\tvar plotTypeExists = false;\r\n\r\n\t\t\tvar plotUnit = null;\r\n\t\t\tvar plotUnitExists = false;\r\n\r\n\t\t\tfor (var j = 0; j < this.plotInfo.plotTypes.length; j++) {\r\n\t\t\t\tif (this.plotInfo.plotTypes[j].type === dataSeries.type) {\r\n\t\t\t\t\tplotTypeExists = true;\r\n\t\t\t\t\tvar plotType = this.plotInfo.plotTypes[j];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!plotTypeExists) {\r\n\t\t\t\tplotType = {\r\n\t\t\t\t\ttype: dataSeries.type,\r\n\t\t\t\t\ttotalDataSeries: 0,\r\n\t\t\t\t\tplotUnits: []\r\n\t\t\t\t};\r\n\t\t\t\tthis.plotInfo.plotTypes.push(plotType)\r\n\t\t\t}\r\n\r\n\t\t\tfor (var j = 0; j < plotType.plotUnits.length; j++) {\r\n\t\t\t\tif (plotType.plotUnits[j].axisYType === dataSeries.axisYType) {\r\n\t\t\t\t\tplotUnitExists = true;\r\n\t\t\t\t\tvar plotUnit = plotType.plotUnits[j];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!plotUnitExists) {\r\n\t\t\t\tplotUnit = {\r\n\t\t\t\t\ttype: dataSeries.type,\r\n\t\t\t\t\tpreviousDataSeriesCount: 0, //to be set next\r\n\t\t\t\t\tindex: plotType.plotUnits.length,\r\n\t\t\t\t\tplotType: plotType,\r\n\t\t\t\t\taxisYType: dataSeries.axisYType,\r\n\t\t\t\t\taxisY: dataSeries.axisYType === \"primary\" ? this.axisY : this.axisY2,\r\n\t\t\t\t\taxisX: this.axisX,\r\n\t\t\t\t\tdataSeriesIndexes: [], //index of dataSeries\r\n\t\t\t\t\tyTotals: []\r\n\t\t\t\t}\r\n\t\t\t\tplotType.plotUnits.push(plotUnit);\r\n\t\t\t}\r\n\r\n\t\t\tplotType.totalDataSeries++;\r\n\r\n\t\t\tplotUnit.dataSeriesIndexes.push(i);\r\n\r\n\t\t\tdataSeries.plotUnit = plotUnit;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (var i = 0; i < this.plotInfo.plotTypes.length; i++) {\r\n\t\tvar plotType = this.plotInfo.plotTypes[i];\r\n\t\tvar previousDataSeriesCount = 0;\r\n\r\n\t\tfor (var j = 0; j < plotType.plotUnits.length; j++) {\r\n\r\n\t\t\tplotType.plotUnits[j].previousDataSeriesCount = previousDataSeriesCount;\r\n\r\n\t\t\tpreviousDataSeriesCount += plotType.plotUnits[j].dataSeriesIndexes.length;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nChart.prototype.assignIdToDataPoints = function () {\r\n\r\n\tfor (var i = 0; i < this.data.length; i++) {\r\n\t\tvar dataSeries = this.data[i];\r\n\r\n\t\tif (!dataSeries.dataPoints)\r\n\t\t\tcontinue;\r\n\r\n\t\tvar length = dataSeries.dataPoints.length;\r\n\r\n\t\tfor (var j = 0; j < length; j++) {\r\n\t\t\tdataSeries.dataPointIds[j] = ++this._eventManager.lastObjectId;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nChart.prototype._processData = function () {\r\n\tthis.assignIdToDataPoints();\r\n\tthis.categoriseDataSeries();\r\n\r\n\tfor (var i = 0; i < this.plotInfo.plotTypes.length; i++) {\r\n\t\tvar plotType = this.plotInfo.plotTypes[i];\r\n\r\n\t\tfor (var j = 0; j < plotType.plotUnits.length; j++) {\r\n\r\n\t\t\tvar plotUnit = plotType.plotUnits[j];\r\n\r\n\t\t\tif (plotUnit.type === \"line\" || plotUnit.type === \"stepLine\" || plotUnit.type === \"spline\" || plotUnit.type === \"column\" || plotUnit.type === \"area\" || plotUnit.type === \"stepArea\" || plotUnit.type === \"splineArea\" || plotUnit.type === \"bar\" || plotUnit.type === \"bubble\" || plotUnit.type === \"scatter\")\r\n\t\t\t\tthis._processMultiseriesPlotUnit(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"stackedColumn\" || plotUnit.type === \"stackedBar\" || plotUnit.type === \"stackedArea\")\r\n\t\t\t\tthis._processStackedPlotUnit(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"stackedColumn100\" || plotUnit.type === \"stackedBar100\" || plotUnit.type === \"stackedArea100\")\r\n\t\t\t\tthis._processStacked100PlotUnit(plotUnit);\r\n\t\t\telse if (plotUnit.type === \"candlestick\" || plotUnit.type === \"ohlc\" || plotUnit.type === \"rangeColumn\" || plotUnit.type === \"rangeBar\" || plotUnit.type === \"rangeArea\" || plotUnit.type === \"rangeSplineArea\")\r\n\t\t\t\tthis._processMultiYPlotUnit(plotUnit);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nChart.prototype._processMultiseriesPlotUnit = function (plotUnit) {\r\n\tif (!plotUnit.dataSeriesIndexes || plotUnit.dataSeriesIndexes.length < 1)\r\n\t\treturn;\r\n\r\n\tvar axisYDataInfo = plotUnit.axisY.dataInfo;\r\n\tvar axisXDataInfo = plotUnit.axisX.dataInfo;\r\n\tvar dataPointX, dataPointY;\r\n\tvar isDateTime = false;\r\n\r\n\r\n\tfor (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\r\n\t\tvar dataSeries = this.data[plotUnit.dataSeriesIndexes[j]];\r\n\t\tvar i = 0;\r\n\t\tvar isFirstDPInViewPort = false;\r\n\t\tvar isLastDPInViewPort = false;\r\n\r\n\t\tif (dataSeries.axisPlacement === \"normal\" || dataSeries.axisPlacement === \"xySwapped\") {\r\n\r\n\t\t\tvar plotAreaXMin = this.sessionVariables.axisX.newViewportMinimum ? this.sessionVariables.axisX.newViewportMinimum : (this._options.axisX && this._options.axisX.viewportMinimum) ?\r\n\t\t\t\tthis._options.axisX.viewportMinimum : (this._options.axisX && this._options.axisX.minimum) ? this._options.axisX.minimum : -Infinity;\r\n\r\n\t\t\tvar plotAreaXMax = this.sessionVariables.axisX.newViewportMaximum ? this.sessionVariables.axisX.newViewportMaximum : (this._options.axisX && this._options.axisX.viewportMaximum) ?\r\n\t\t\t\tthis._options.axisX.viewportMaximum : (this._options.axisX && this._options.axisX.maximum) ? this._options.axisX.maximum : Infinity;\r\n\t\t}\r\n\r\n\r\n\t\tif (dataSeries.dataPoints[i].x && dataSeries.dataPoints[i].x.getTime || dataSeries.xValueType === \"dateTime\") {\r\n\t\t\tisDateTime = true;\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < dataSeries.dataPoints.length; i++) {\r\n\r\n\t\t\tif (typeof dataSeries.dataPoints[i].x === \"undefined\") {\r\n\t\t\t\tdataSeries.dataPoints[i].x = i;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataSeries.dataPoints[i].x.getTime) {\r\n\t\t\t\tisDateTime = true;\r\n\t\t\t\tdataPointX = dataSeries.dataPoints[i].x.getTime();//dataPointX is used so that getTime is called only once in case of dateTime values\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tdataPointX = dataSeries.dataPoints[i].x;\r\n\r\n\t\t\tdataPointY = dataSeries.dataPoints[i].y;\r\n\r\n\r\n\t\t\tif (dataPointX < axisXDataInfo.min)\r\n\t\t\t\taxisXDataInfo.min = dataPointX;\r\n\t\t\tif (dataPointX > axisXDataInfo.max)\r\n\t\t\t\taxisXDataInfo.max = dataPointX;\r\n\r\n\t\t\tif (dataPointY < axisYDataInfo.min)\r\n\t\t\t\taxisYDataInfo.min = dataPointY;\r\n\r\n\t\t\tif (dataPointY > axisYDataInfo.max)\r\n\t\t\t\taxisYDataInfo.max = dataPointY;\r\n\r\n\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tvar xDiff = dataPointX - dataSeries.dataPoints[i - 1].x;\r\n\t\t\t\txDiff < 0 && (xDiff = xDiff * -1); //If Condition shortcut\r\n\r\n\t\t\t\tif (axisXDataInfo.minDiff > xDiff && xDiff !== 0) {\r\n\t\t\t\t\taxisXDataInfo.minDiff = xDiff;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dataPointY !== null && dataSeries.dataPoints[i - 1].y !== null) {\r\n\t\t\t\t\tvar yDiff = dataPointY - dataSeries.dataPoints[i - 1].y;\r\n\t\t\t\t\tyDiff < 0 && (yDiff = yDiff * -1); //If Condition shortcut\r\n\r\n\t\t\t\t\tif (axisYDataInfo.minDiff > yDiff && yDiff !== 0) {\r\n\t\t\t\t\t\taxisYDataInfo.minDiff = yDiff;\r\n\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// This section makes sure that partially visible dataPoints are included in the begining\r\n\t\t\tif (dataPointX < plotAreaXMin && !isFirstDPInViewPort) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (!isFirstDPInViewPort) {\r\n\t\t\t\tisFirstDPInViewPort = true;\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\ti -= 2;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// This section makes sure that partially visible dataPoints are included at the end\r\n\t\t\tif (dataPointX > plotAreaXMax && !isLastDPInViewPort) {\r\n\t\t\t\tisLastDPInViewPort = true;\r\n\t\t\t} else if (dataPointX > plotAreaXMax && isLastDPInViewPort) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataSeries.dataPoints[i].label)\r\n\t\t\t\tplotUnit.axisX.labels[dataPointX] = dataSeries.dataPoints[i].label;\r\n\r\n\r\n\t\t\tif (dataPointX < axisXDataInfo.viewPortMin)\r\n\t\t\t\taxisXDataInfo.viewPortMin = dataPointX;\r\n\t\t\tif (dataPointX > axisXDataInfo.viewPortMax)\r\n\t\t\t\taxisXDataInfo.viewPortMax = dataPointX;\r\n\r\n\t\t\tif (dataPointY === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (dataPointY < axisYDataInfo.viewPortMin)\r\n\t\t\t\taxisYDataInfo.viewPortMin = dataPointY;\r\n\t\t\tif (dataPointY > axisYDataInfo.viewPortMax)\r\n\t\t\t\taxisYDataInfo.viewPortMax = dataPointY;\r\n\t\t}\r\n\r\n\t\tthis.plotInfo.axisXValueType = dataSeries.xValueType = isDateTime ? \"dateTime\" : \"number\";\r\n\t}\r\n\r\n\t//this.dataPoints.sort(compareDataPointX);\r\n\t//this.dataPoints.sort(function (dataPoint1, dataPoint2) { return dataPoint1.x - dataPoint2.x; });\r\n}\r\n\r\nChart.prototype._processStackedPlotUnit = function (plotUnit) {\r\n\r\n\tif (!plotUnit.dataSeriesIndexes || plotUnit.dataSeriesIndexes.length < 1)\r\n\t\treturn;\r\n\r\n\tvar axisYDataInfo = plotUnit.axisY.dataInfo;\r\n\tvar axisXDataInfo = plotUnit.axisX.dataInfo;\r\n\r\n\tvar dataPointX, dataPointY;\r\n\tvar isDateTime = false;\r\n\r\n\tvar dataPointYPositiveSums = [];\r\n\tvar dataPointYNegativeSums = [];\r\n\r\n\tfor (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\r\n\t\tvar dataSeries = this.data[plotUnit.dataSeriesIndexes[j]];\r\n\t\tvar i = 0;\r\n\t\tvar isFirstDPInViewPort = false;\r\n\t\tvar isLastDPInViewPort = false;\r\n\r\n\t\tif (dataSeries.axisPlacement === \"normal\" || dataSeries.axisPlacement === \"xySwapped\") {\r\n\r\n\t\t\tvar plotAreaXMin = this.sessionVariables.axisX.newViewportMinimum ? this.sessionVariables.axisX.newViewportMinimum : (this._options.axisX && this._options.axisX.viewportMinimum) ?\r\n\t\t\t\tthis._options.axisX.viewportMinimum : (this._options.axisX && this._options.axisX.minimum) ? this._options.axisX.minimum : -Infinity;\r\n\r\n\t\t\tvar plotAreaXMax = this.sessionVariables.axisX.newViewportMaximum ? this.sessionVariables.axisX.newViewportMaximum : (this._options.axisX && this._options.axisX.viewportMaximum) ?\r\n\t\t\t\tthis._options.axisX.viewportMaximum : (this._options.axisX && this._options.axisX.maximum) ? this._options.axisX.maximum : Infinity;\r\n\t\t}\r\n\r\n\r\n\t\tif (dataSeries.dataPoints[i].x && dataSeries.dataPoints[i].x.getTime || dataSeries.xValueType === \"dateTime\") {\r\n\t\t\tisDateTime = true;\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < dataSeries.dataPoints.length; i++) {\r\n\r\n\t\t\t// Requird when no x values are provided\r\n\t\t\tif (typeof dataSeries.dataPoints[i].x === \"undefined\") {\r\n\t\t\t\tdataSeries.dataPoints[i].x = i;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataSeries.dataPoints[i].x.getTime) {\r\n\t\t\t\tisDateTime = true;\r\n\t\t\t\tdataPointX = dataSeries.dataPoints[i].x.getTime();//dataPointX is used so that getTime is called only once in case of dateTime values\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tdataPointX = dataSeries.dataPoints[i].x;\r\n\r\n\t\t\tdataPointY = dataSeries.dataPoints[i].y;\r\n\r\n\r\n\r\n\t\t\tif (dataPointX < axisXDataInfo.min)\r\n\t\t\t\taxisXDataInfo.min = dataPointX;\r\n\t\t\tif (dataPointX > axisXDataInfo.max)\r\n\t\t\t\taxisXDataInfo.max = dataPointX;\r\n\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tvar xDiff = dataPointX - dataSeries.dataPoints[i - 1].x;\r\n\t\t\t\txDiff < 0 && (xDiff = xDiff * -1); //If Condition shortcut\r\n\r\n\t\t\t\tif (axisXDataInfo.minDiff > xDiff && xDiff !== 0) {\r\n\t\t\t\t\taxisXDataInfo.minDiff = xDiff;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dataPointY !== null && dataSeries.dataPoints[i - 1].y !== null) {\r\n\t\t\t\t\tvar yDiff = dataPointY - dataSeries.dataPoints[i - 1].y;\r\n\t\t\t\t\tyDiff < 0 && (yDiff = yDiff * -1); //If Condition shortcut\r\n\r\n\t\t\t\t\tif (axisYDataInfo.minDiff > yDiff && yDiff !== 0) {\r\n\t\t\t\t\t\taxisYDataInfo.minDiff = yDiff;\r\n\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// This section makes sure that partially visible dataPoints are included in the begining\r\n\t\t\tif (dataPointX < plotAreaXMin && !isFirstDPInViewPort) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (!isFirstDPInViewPort) {\r\n\t\t\t\tisFirstDPInViewPort = true;\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\ti -= 2;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// This section makes sure that partially visible dataPoints are included at the end\r\n\t\t\tif (dataPointX > plotAreaXMax && !isLastDPInViewPort) {\r\n\t\t\t\tisLastDPInViewPort = true;\r\n\t\t\t} else if (dataPointX > plotAreaXMax && isLastDPInViewPort) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (dataSeries.dataPoints[i].label)\r\n\t\t\t\tplotUnit.axisX.labels[dataPointX] = dataSeries.dataPoints[i].label;\r\n\r\n\t\t\tif (dataPointX < axisXDataInfo.viewPortMin)\r\n\t\t\t\taxisXDataInfo.viewPortMin = dataPointX;\r\n\t\t\tif (dataPointX > axisXDataInfo.viewPortMax)\r\n\t\t\t\taxisXDataInfo.viewPortMax = dataPointX;\r\n\r\n\t\t\tif (dataPointY === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tplotUnit.yTotals[dataPointX] = (!plotUnit.yTotals[dataPointX] ? 0 : plotUnit.yTotals[dataPointX]) + Math.abs(dataPointY);\r\n\r\n\t\t\tif (dataPointY >= 0) {\r\n\t\t\t\tif (dataPointYPositiveSums[dataPointX])\r\n\t\t\t\t\tdataPointYPositiveSums[dataPointX] += dataPointY;\r\n\t\t\t\telse\r\n\t\t\t\t\tdataPointYPositiveSums[dataPointX] = dataPointY;\r\n\t\t\t} else {\r\n\t\t\t\tif (dataPointYNegativeSums[dataPointX])\r\n\t\t\t\t\tdataPointYNegativeSums[dataPointX] += dataPointY;\r\n\t\t\t\telse\r\n\t\t\t\t\tdataPointYNegativeSums[dataPointX] = dataPointY;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.plotInfo.axisXValueType = dataSeries.xValueType = isDateTime ? \"dateTime\" : \"number\";\r\n\t}\r\n\r\n\tfor (i in dataPointYPositiveSums) {\r\n\t\tif (dataPointYPositiveSums.hasOwnProperty(i)) {\r\n\t\tif (isNaN(i)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tvar ySum = dataPointYPositiveSums[i];\r\n\r\n\t\tif (ySum < axisYDataInfo.min)\r\n\t\t\taxisYDataInfo.min = ySum;\r\n\r\n\t\tif (ySum > axisYDataInfo.max)\r\n\t\t\taxisYDataInfo.max = ySum;\r\n\r\n\t\tif (i < axisXDataInfo.viewPortMin || i > axisXDataInfo.viewPortMax)\r\n\t\t\tcontinue;\r\n\r\n\t\tif (ySum < axisYDataInfo.viewPortMin)\r\n\t\t\taxisYDataInfo.viewPortMin = ySum;\r\n\t\tif (ySum > axisYDataInfo.viewPortMax)\r\n\t\t\taxisYDataInfo.viewPortMax = ySum;\r\n\t}\r\n\r\n\t}\r\n\r\n\tfor (i in dataPointYNegativeSums) {\r\n\r\n\t\tif (dataPointYNegativeSums.hasOwnProperty(i)) {\r\n\t\tif (isNaN(i)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvar ySum = dataPointYNegativeSums[i];\r\n\r\n\t\tif (ySum < axisYDataInfo.min)\r\n\t\t\taxisYDataInfo.min = ySum;\r\n\r\n\t\tif (ySum > axisYDataInfo.max)\r\n\t\t\taxisYDataInfo.max = ySum;\r\n\r\n\t\tif (i < axisXDataInfo.viewPortMin || i > axisXDataInfo.viewPortMax)\r\n\t\t\tcontinue;\r\n\r\n\t\tif (ySum < axisYDataInfo.viewPortMin)\r\n\t\t\taxisYDataInfo.viewPortMin = ySum;\r\n\t\tif (ySum > axisYDataInfo.viewPortMax)\r\n\t\t\taxisYDataInfo.viewPortMax = ySum;\r\n\t}\r\n\r\n\t}\r\n\r\n\r\n\t//this.dataPoints.sort(compareDataPointX);\r\n\t//this.dataPoints.sort(function (dataPoint1, dataPoint2) { return dataPoint1.x - dataPoint2.x; });\r\n\r\n\t//window.console.log(\"viewPortYMin: \" + plotInfo.viewPortYMin + \"; viewPortYMax: \" + plotInfo.viewPortYMax);\r\n}\r\n\r\nChart.prototype._processStacked100PlotUnit = function (plotUnit) {\r\n\tif (!plotUnit.dataSeriesIndexes || plotUnit.dataSeriesIndexes.length < 1)\r\n\t\treturn;\r\n\r\n\tvar axisYDataInfo = plotUnit.axisY.dataInfo;\r\n\tvar axisXDataInfo = plotUnit.axisX.dataInfo;\r\n\r\n\tvar dataPointX, dataPointY;\r\n\tvar isDateTime = false;\r\n\tvar containsPositiveY = false;\r\n\tvar containsNegativeY = false;\r\n\r\n\tvar dataPointYSums = [];\r\n\r\n\tfor (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\r\n\t\tvar dataSeries = this.data[plotUnit.dataSeriesIndexes[j]];\r\n\t\tvar i = 0;\r\n\t\tvar isFirstDPInViewPort = false;\r\n\t\tvar isLastDPInViewPort = false;\r\n\r\n\t\tif (dataSeries.axisPlacement === \"normal\" || dataSeries.axisPlacement === \"xySwapped\") {\r\n\r\n\t\t\tvar plotAreaXMin = this.sessionVariables.axisX.newViewportMinimum ? this.sessionVariables.axisX.newViewportMinimum : (this._options.axisX && this._options.axisX.viewportMinimum) ?\r\n\t\t\t\tthis._options.axisX.viewportMinimum : (this._options.axisX && this._options.axisX.minimum) ? this._options.axisX.minimum : -Infinity;\r\n\r\n\t\t\tvar plotAreaXMax = this.sessionVariables.axisX.newViewportMaximum ? this.sessionVariables.axisX.newViewportMaximum : (this._options.axisX && this._options.axisX.viewportMaximum) ?\r\n\t\t\t\tthis._options.axisX.viewportMaximum : (this._options.axisX && this._options.axisX.maximum) ? this._options.axisX.maximum : Infinity;\r\n\t\t}\r\n\r\n\r\n\t\tif (dataSeries.dataPoints[i].x && dataSeries.dataPoints[i].x.getTime || dataSeries.xValueType === \"dateTime\") {\r\n\t\t\tisDateTime = true;\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < dataSeries.dataPoints.length; i++) {\r\n\r\n\t\t\t// Requird when no x values are provided\r\n\t\t\tif (typeof dataSeries.dataPoints[i].x === \"undefined\") {\r\n\t\t\t\tdataSeries.dataPoints[i].x = i;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataSeries.dataPoints[i].x.getTime) {\r\n\t\t\t\tisDateTime = true;\r\n\t\t\t\tdataPointX = dataSeries.dataPoints[i].x.getTime();//dataPointX is used so that getTime is called only once in case of dateTime values\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tdataPointX = dataSeries.dataPoints[i].x;\r\n\r\n\t\t\tdataPointY = dataSeries.dataPoints[i].y;\r\n\r\n\r\n\r\n\t\t\tif (dataPointX < axisXDataInfo.min)\r\n\t\t\t\taxisXDataInfo.min = dataPointX;\r\n\t\t\tif (dataPointX > axisXDataInfo.max)\r\n\t\t\t\taxisXDataInfo.max = dataPointX;\r\n\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tvar xDiff = dataPointX - dataSeries.dataPoints[i - 1].x;\r\n\t\t\t\txDiff < 0 && (xDiff = xDiff * -1); //If Condition shortcut\r\n\r\n\t\t\t\tif (axisXDataInfo.minDiff > xDiff && xDiff !== 0) {\r\n\t\t\t\t\taxisXDataInfo.minDiff = xDiff;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dataPointY !== null && dataSeries.dataPoints[i - 1].y !== null) {\r\n\t\t\t\t\tvar yDiff = dataPointY - dataSeries.dataPoints[i - 1].y;\r\n\t\t\t\t\tyDiff < 0 && (yDiff = yDiff * -1); //If Condition shortcut\r\n\r\n\t\t\t\t\tif (axisYDataInfo.minDiff > yDiff && yDiff !== 0) {\r\n\t\t\t\t\t\taxisYDataInfo.minDiff = yDiff;\r\n\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// This section makes sure that partially visible dataPoints are included in the begining\r\n\t\t\tif (dataPointX < plotAreaXMin && !isFirstDPInViewPort) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (!isFirstDPInViewPort) {\r\n\t\t\t\tisFirstDPInViewPort = true;\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\ti -= 2;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// This section makes sure that partially visible dataPoints are included at the end\r\n\t\t\tif (dataPointX > plotAreaXMax && !isLastDPInViewPort) {\r\n\t\t\t\tisLastDPInViewPort = true;\r\n\t\t\t} else if (dataPointX > plotAreaXMax && isLastDPInViewPort) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataSeries.dataPoints[i].label)\r\n\t\t\t\tplotUnit.axisX.labels[dataPointX] = dataSeries.dataPoints[i].label;\r\n\r\n\t\t\tif (dataPointX < axisXDataInfo.viewPortMin)\r\n\t\t\t\taxisXDataInfo.viewPortMin = dataPointX;\r\n\t\t\tif (dataPointX > axisXDataInfo.viewPortMax)\r\n\t\t\t\taxisXDataInfo.viewPortMax = dataPointX;\r\n\r\n\t\t\tif (dataPointY === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tplotUnit.yTotals[dataPointX] = (!plotUnit.yTotals[dataPointX] ? 0 : plotUnit.yTotals[dataPointX]) + Math.abs(dataPointY);\r\n\r\n\t\t\tif (dataPointY >= 0) {\r\n\t\t\t\tcontainsPositiveY = true;\r\n\t\t\t} else {\r\n\t\t\t\tcontainsNegativeY = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataPointYSums[dataPointX])\r\n\t\t\t\tdataPointYSums[dataPointX] += Math.abs(dataPointY);\r\n\t\t\telse\r\n\t\t\t\tdataPointYSums[dataPointX] = Math.abs(dataPointY);\r\n\t\t}\r\n\r\n\t\tthis.plotInfo.axisXValueType = dataSeries.xValueType = isDateTime ? \"dateTime\" : \"number\";\r\n\t}\r\n\r\n\r\n\tif (containsPositiveY && !containsNegativeY) {\r\n\t\taxisYDataInfo.max = 99;\r\n\t\taxisYDataInfo.min = 1;\r\n\t} else if (containsPositiveY && containsNegativeY) {\r\n\t\taxisYDataInfo.max = 99;\r\n\t\taxisYDataInfo.min = -99;\r\n\t} else if (!containsPositiveY && containsNegativeY) {\r\n\t\taxisYDataInfo.max = -1;\r\n\t\taxisYDataInfo.min = -99;\r\n\t}\r\n\r\n\taxisYDataInfo.viewPortMin = axisYDataInfo.min;\r\n\taxisYDataInfo.viewPortMax = axisYDataInfo.max;\r\n\r\n\tplotUnit.dataPointYSums = dataPointYSums;\r\n\r\n\t//this.dataPoints.sort(compareDataPointX);\r\n\t//this.dataPoints.sort(function (dataPoint1, dataPoint2) { return dataPoint1.x - dataPoint2.x; });\r\n\r\n\t//window.console.log(\"viewPortYMin: \" + plotInfo.viewPortYMin + \"; viewPortYMax: \" + plotInfo.viewPortYMax);\r\n}\r\n\r\nChart.prototype._processMultiYPlotUnit = function (plotUnit) {\r\n\tif (!plotUnit.dataSeriesIndexes || plotUnit.dataSeriesIndexes.length < 1)\r\n\t\treturn;\r\n\r\n\tvar axisYDataInfo = plotUnit.axisY.dataInfo;\r\n\tvar axisXDataInfo = plotUnit.axisX.dataInfo;\r\n\tvar dataPointX, dataPointY, dataPointYMin, dataPointYMax;\r\n\tvar isDateTime = false;\r\n\r\n\r\n\tfor (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\r\n\t\tvar dataSeries = this.data[plotUnit.dataSeriesIndexes[j]];\r\n\t\tvar i = 0;\r\n\t\tvar isFirstDPInViewPort = false;\r\n\t\tvar isLastDPInViewPort = false;\r\n\r\n\t\tif (dataSeries.axisPlacement === \"normal\" || dataSeries.axisPlacement === \"xySwapped\") {\r\n\r\n\t\t\tvar plotAreaXMin = this.sessionVariables.axisX.newViewportMinimum ? this.sessionVariables.axisX.newViewportMinimum : (this._options.axisX && this._options.axisX.viewportMinimum) ?\r\n\t\t\t\tthis._options.axisX.viewportMinimum : (this._options.axisX && this._options.axisX.minimum) ? this._options.axisX.minimum : -Infinity;\r\n\r\n\t\t\tvar plotAreaXMax = this.sessionVariables.axisX.newViewportMaximum ? this.sessionVariables.axisX.newViewportMaximum : (this._options.axisX && this._options.axisX.viewportMaximum) ?\r\n\t\t\t\tthis._options.axisX.viewportMaximum : (this._options.axisX && this._options.axisX.maximum) ? this._options.axisX.maximum : Infinity;\r\n\t\t}\r\n\r\n\r\n\t\tif (dataSeries.dataPoints[i].x && dataSeries.dataPoints[i].x.getTime || dataSeries.xValueType === \"dateTime\") {\r\n\t\t\tisDateTime = true;\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < dataSeries.dataPoints.length; i++) {\r\n\r\n\t\t\tif (typeof dataSeries.dataPoints[i].x === \"undefined\") {\r\n\t\t\t\tdataSeries.dataPoints[i].x = i;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataSeries.dataPoints[i].x.getTime) {\r\n\t\t\t\tisDateTime = true;\r\n\t\t\t\tdataPointX = dataSeries.dataPoints[i].x.getTime();//dataPointX is used so that getTime is called only once in case of dateTime values\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tdataPointX = dataSeries.dataPoints[i].x;\r\n\r\n\t\t\tdataPointY = dataSeries.dataPoints[i].y;\r\n\r\n\t\t\tif (dataPointY && dataPointY.length) {\r\n\t\t\t\tdataPointYMin = Math.min.apply(null, dataPointY);\r\n\t\t\t\tdataPointYMax = Math.max.apply(null, dataPointY);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (dataPointX < axisXDataInfo.min)\r\n\t\t\t\taxisXDataInfo.min = dataPointX;\r\n\t\t\tif (dataPointX > axisXDataInfo.max)\r\n\t\t\t\taxisXDataInfo.max = dataPointX;\r\n\r\n\t\t\tif (dataPointYMin < axisYDataInfo.min)\r\n\t\t\t\taxisYDataInfo.min = dataPointYMin;\r\n\r\n\t\t\tif (dataPointYMax > axisYDataInfo.max)\r\n\t\t\t\taxisYDataInfo.max = dataPointYMax;\r\n\r\n\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tvar xDiff = dataPointX - dataSeries.dataPoints[i - 1].x;\r\n\t\t\t\txDiff < 0 && (xDiff = xDiff * -1); //If Condition shortcut\r\n\r\n\t\t\t\tif (axisXDataInfo.minDiff > xDiff && xDiff !== 0) {\r\n\t\t\t\t\taxisXDataInfo.minDiff = xDiff;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dataPointY[0] !== null && dataSeries.dataPoints[i - 1].y[0] !== null) {\r\n\t\t\t\t\tvar yDiff = dataPointY[0] - dataSeries.dataPoints[i - 1].y[0];\r\n\t\t\t\t\tyDiff < 0 && (yDiff = yDiff * -1); //If Condition shortcut\r\n\r\n\t\t\t\t\tif (axisYDataInfo.minDiff > yDiff && yDiff !== 0) {\r\n\t\t\t\t\t\taxisYDataInfo.minDiff = yDiff;\r\n\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// This section makes sure that partially visible dataPoints are included in the begining\r\n\t\t\tif (dataPointX < plotAreaXMin && !isFirstDPInViewPort) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (!isFirstDPInViewPort) {\r\n\t\t\t\tisFirstDPInViewPort = true;\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\ti -= 2;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// This section makes sure that partially visible dataPoints are included at the end\r\n\t\t\tif (dataPointX > plotAreaXMax && !isLastDPInViewPort) {\r\n\t\t\t\tisLastDPInViewPort = true;\r\n\t\t\t} else if (dataPointX > plotAreaXMax && isLastDPInViewPort) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataSeries.dataPoints[i].label)\r\n\t\t\t\tplotUnit.axisX.labels[dataPointX] = dataSeries.dataPoints[i].label;\r\n\r\n\r\n\t\t\tif (dataPointX < axisXDataInfo.viewPortMin)\r\n\t\t\t\taxisXDataInfo.viewPortMin = dataPointX;\r\n\t\t\tif (dataPointX > axisXDataInfo.viewPortMax)\r\n\t\t\t\taxisXDataInfo.viewPortMax = dataPointX;\r\n\r\n\t\t\tif (dataPointY === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (dataPointYMin < axisYDataInfo.viewPortMin)\r\n\t\t\t\taxisYDataInfo.viewPortMin = dataPointYMin;\r\n\t\t\tif (dataPointYMax > axisYDataInfo.viewPortMax)\r\n\t\t\t\taxisYDataInfo.viewPortMax = dataPointYMax;\r\n\t\t}\r\n\r\n\t\tthis.plotInfo.axisXValueType = dataSeries.xValueType = isDateTime ? \"dateTime\" : \"number\";\r\n\t}\r\n\r\n\t//this.dataPoints.sort(compareDataPointX);\r\n\t//this.dataPoints.sort(function (dataPoint1, dataPoint2) { return dataPoint1.x - dataPoint2.x; });\r\n}\r\n\r\n//getClosest returns objects nearby and hence shouldn't be used for events like click, mouseover, mousemove, etc which require object that is exactly under the mouse.\r\nChart.prototype.getDataPointAtXY = function (mouseX, mouseY, getClosest) {\r\n\r\n\tgetClosest = getClosest || false;\r\n\tvar results = [];\r\n\r\n\tfor (var i = this._dataInRenderedOrder.length - 1; i >= 0; i--) {\r\n\t\tvar dataSeries = this._dataInRenderedOrder[i];\r\n\r\n\t\tvar result = null;\r\n\r\n\t\tresult = dataSeries.getDataPointAtXY(mouseX, mouseY, getClosest);\r\n\t\tif (result)\r\n\t\t\tresults.push(result);\r\n\t}\r\n\r\n\tvar closestResult = null;\r\n\tvar onlyLineAreaTypes = false;\r\n\r\n\tfor (var m = 0; m < results.length; m++) {\r\n\r\n\t\tif (results[m].dataSeries.type === \"line\" || results[m].dataSeries.type === \"stepLine\" || results[m].dataSeries.type === \"area\" || results[m].dataSeries.type === \"stepArea\") {\r\n\t\t\tvar markerSize = getProperty(\"markerSize\", results[m].dataPoint, results[m].dataSeries) || 8;\r\n\t\t\tif (results[m].distance <= markerSize / 2) {\r\n\t\t\t\tonlyLineAreaTypes = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor (m = 0; m < results.length; m++) {\r\n\r\n\t\tif (onlyLineAreaTypes && results[m].dataSeries.type !== \"line\" && results[m].dataSeries.type !== \"stepLine\" && results[m].dataSeries.type !== \"area\" && results[m].dataSeries.type !== \"stepArea\")\r\n\t\t\tcontinue;\r\n\r\n\t\tif (!closestResult) {\r\n\t\t\tclosestResult = results[m];\r\n\t\t} else if (results[m].distance <= closestResult.distance) {\r\n\t\t\tclosestResult = results[m];\r\n\t\t}\r\n\t}\r\n\r\n\treturn closestResult;\r\n}\r\n\r\nChart.prototype.getObjectAtXY = function (mouseX, mouseY, getClosest) {\r\n\tgetClosest = getClosest || false;\r\n\r\n\tvar id = null;\r\n\r\n\tvar dataPointInfo = this.getDataPointAtXY(mouseX, mouseY, getClosest);\r\n\r\n\tif (dataPointInfo) {\r\n\t\tid = dataPointInfo.dataSeries.dataPointIds[dataPointInfo.dataPointIndex];\r\n\t} else if (isCanvasSupported) {//IE9+\r\n\t\tid = getObjectId(mouseX, mouseY, this._eventManager.ghostCtx);\r\n\t}\r\n\telse {\r\n\t\tfor (var i = 0; i < this.legend.items.length; i++) {\r\n\t\t\tvar item = this.legend.items[i];\r\n\r\n\t\t\tif (mouseX >= item.x1 && mouseX <= item.x2 && mouseY >= item.y1 && mouseY <= item.y2) {\r\n\t\t\t\tid = item.id;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn id;\r\n}\r\n\r\n/// <summary>Calculates Font Size based on standardSize and Chart Size</summary>\r\n/// <param name=\"standardSize\" type=\"Number\">Standard font size for a Chart with min(width,height) = 400px</param>\r\n/// <returns type=\"Number\">The area.</returns>\r\nChart.prototype.getAutoFontSize = function (standardSize, width, height) {\r\n\r\n\twidth = width || this.width;\r\n\theight = height || this.height;\r\n\r\n\tvar fontSizeScaleFactor = standardSize / 400;\r\n\r\n\treturn Math.round(Math.min(this.width, this.height) * fontSizeScaleFactor);\r\n}\r\n\r\n//#region Events\r\n\r\nChart.prototype.resetOverlayedCanvas = function () {\r\n\t//var width = this.overlaidCanvas.width;\r\n\t//this.overlaidCanvas.width = 0;\r\n\t//this.overlaidCanvas.width = width;\r\n\tthis.overlaidCanvasCtx.clearRect(0, 0, this.width, this.height);\r\n}\r\n\r\nChart.prototype.clearCanvas = function () {\r\n\tthis.ctx.clearRect(0, 0, this.width, this.height);\r\n\r\n\tif (this.backgroundColor) {\r\n\t\tthis.ctx.fillStyle = this.backgroundColor;\r\n\t\tthis.ctx.fillRect(0, 0, this.width, this.height);\r\n\t}\r\n}\r\n\r\nChart.prototype.attachEvent = function (param) {\r\n\tthis._events.push(param);\r\n}\r\n\r\nChart.prototype._touchEventHandler = function (ev) {\r\n\tif (!ev.changedTouches || !this.interactivityEnabled)\r\n\t\treturn;\r\n\r\n\tvar mouseEvents = [];\r\n\tvar touches = ev.changedTouches;\r\n\tvar first = touches ? touches[0] : ev;\r\n\tvar touchCurrentCoordinates = null;\r\n\r\n\t//window.console.log(touches.length);\r\n\r\n\tswitch (ev.type) {\r\n\t\tcase \"touchstart\": case \"MSPointerDown\":\r\n\t\t\tmouseEvents = [\"mousemove\", \"mousedown\"];\r\n\t\t\tthis._lastTouchData = getMouseCoordinates(first);\r\n\t\t\tthis._lastTouchData.time = new Date();\r\n\t\t\tbreak;\r\n\t\tcase \"touchmove\": case \"MSPointerMove\": mouseEvents = [\"mousemove\"]; break;\r\n\t\tcase \"touchend\": case \"MSPointerUp\": mouseEvents = (this._lastTouchEventType === \"touchstart\" || this._lastTouchEventType === \"MSPointerDown\") ? [\"mouseup\", \"click\"] : [\"mouseup\"];\r\n\t\t\tbreak;\r\n\t\tdefault: return;\r\n\t}\r\n\r\n\tif (touches && touches.length > 1) return;\r\n\r\n\r\n\ttouchCurrentCoordinates = getMouseCoordinates(first);\r\n\ttouchCurrentCoordinates.time = new Date();\r\n\ttry {\r\n\t\tvar dy = touchCurrentCoordinates.y - this._lastTouchData.y;\r\n\t\tvar dx = touchCurrentCoordinates.x - this._lastTouchData.x;\r\n\t\tvar dt = touchCurrentCoordinates.time - this._lastTouchData.time;\r\n\r\n\t\tif (Math.abs(dy) > 15 && (!!this._lastTouchData.scroll || dt < 200)) {\r\n\t\t\t//this._lastTouchData.y = touchCurrentCoordinates.y;\r\n\t\t\tthis._lastTouchData.scroll = true;\r\n\r\n\t\t\tvar win = window.parent || window;\r\n\t\t\tif (win && win.scrollBy)\r\n\t\t\t\twin.scrollBy(0, -dy);\r\n\t\t}\r\n\t} catch (e) { };\r\n\r\n\tthis._lastTouchEventType = ev.type;\r\n\r\n\tif (!!this._lastTouchData.scroll && this.zoomEnabled) {\r\n\t\tif (this.isDrag)\r\n\t\t\tthis.resetOverlayedCanvas();\r\n\r\n\t\tthis.isDrag = false;\r\n\t\treturn;\r\n\t}\r\n\r\n\tfor (var i = 0; i < mouseEvents.length; i++) {\r\n\r\n\t\tvar type = mouseEvents[i];\r\n\t\tvar simulatedEvent = document.createEvent(\"MouseEvent\");\r\n\t\tsimulatedEvent.initMouseEvent(type, true, true, window, 1,\r\n\t\t\t\t\t\t\t\t  first.screenX, first.screenY,\r\n\t\t\t\t\t\t\t\t  first.clientX, first.clientY, false,\r\n\t\t\t\t\t\t\t\t  false, false, false, 0, null);\r\n\r\n\t\tfirst.target.dispatchEvent(simulatedEvent);\r\n\r\n\t\tif (ev.preventManipulation) {\r\n\t\t\t//alert(\"preventManipulation\");\r\n\t\t\tev.preventManipulation();\r\n\t\t}\r\n\r\n\t\tif (ev.preventDefault) {\r\n\t\t\t//alert(\"preventDefault\");\r\n\t\t\tev.preventDefault();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nChart.prototype._dispatchRangeEvent = function (eventName, triggerSource) {\r\n\tvar eventParameter = {};\r\n\r\n\teventParameter.chart = this._publicChartReference;\r\n\teventParameter.type = eventName;\r\n\teventParameter.trigger = triggerSource;\r\n\r\n\tvar axes = [];\r\n\r\n\tif (this.axisX)\r\n\t\taxes.push(\"axisX\");\r\n\tif (this.axisY)\r\n\t\taxes.push(\"axisY\");\r\n\tif (this.axisY2)\r\n\t\taxes.push(\"axisY2\");\r\n\r\n\tfor (var i = 0; i < axes.length; i++) {\r\n\t\teventParameter[axes[i]] = {\r\n\t\t\tviewportMinimum: this[axes[i]].sessionVariables.newViewportMinimum,\r\n\t\t\tviewportMaximum: this[axes[i]].sessionVariables.newViewportMaximum\r\n\t\t}\r\n\t}\r\n\r\n\tthis.dispatchEvent(eventName, eventParameter, this._publicChartReference);\r\n}\r\n\r\nChart.prototype._mouseEventHandler = function (ev) {\r\n\r\n\tif (!this.interactivityEnabled)\r\n\t\treturn;\r\n\r\n\tif (this._ignoreNextEvent) {\r\n\t\tthis._ignoreNextEvent = false;\r\n\t\treturn;\r\n\t}\r\n\r\n\t// stop panning and zooming so we can draw\r\n\tif (ev.preventManipulation) {\r\n\t\t//alert(\"preventManipulation\");\r\n\t\tev.preventManipulation();\r\n\t}\r\n\r\n\t// we are handling this event\r\n\tif (ev.preventDefault) {\r\n\t\t//alert(\"preventDefault\");\r\n\t\tev.preventDefault();\r\n\t}\r\n\r\n\t//IE8- uses srcElement instead of target. So instead of checking this condition everytime, its better to create a reference called target.\r\n\tif (typeof (ev.target) === \"undefined\" && ev.srcElement)\r\n\t\tev.target = ev.srcElement;\r\n\r\n\t//console.log(ev.type);\r\n\r\n\tvar xy = getMouseCoordinates(ev);\r\n\tvar type = ev.type;\r\n\tvar eventParam;\r\n\tvar rightclick;\r\n\r\n\tif (!ev) var e = window.event;\r\n\tif (ev.which) rightclick = (ev.which == 3);\r\n\telse if (ev.button) rightclick = (ev.button == 2);\r\n\r\n\t//window.console.log(type + \" --> x: \" + xy.x + \"; y:\" + xy.y);\r\n\r\n\t//if (type === \"mouseout\") {\r\n\t//    this._toolTip.hide();\r\n\t//}\r\n\r\n\tif (isDebugMode && window.console) {\r\n\t\twindow.console.log(type + \" --> x: \" + xy.x + \"; y:\" + xy.y);\r\n\t\tif (rightclick)\r\n\t\t\twindow.console.log(ev.which);\r\n\r\n\t\tif (type === \"mouseup\")\r\n\t\t\twindow.console.log(\"mouseup\");\r\n\t}\r\n\r\n\tif (rightclick)\r\n\t\treturn;\r\n\r\n\t//if (this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\t//    //var temp = xy.x;\r\n\t//    //xy.x = xy.y;\r\n\t//    //xy.y = temp;\r\n\t//    xy = {x: xy.y, y: xy.x};\r\n\t//}\r\n\r\n\tif (Chart.capturedEventParam) {\r\n\t\teventParam = Chart.capturedEventParam;\r\n\r\n\t\tif (type === \"mouseup\") {\r\n\t\t\tChart.capturedEventParam = null;\r\n\r\n\t\t\tif (eventParam.chart.overlaidCanvas.releaseCapture)\r\n\t\t\t\teventParam.chart.overlaidCanvas.releaseCapture();\r\n\t\t\telse\r\n\t\t\t\tdocument.body.removeEventListener(\"mouseup\", eventParam.chart._mouseEventHandler, false);\r\n\r\n\t\t}\r\n\r\n\t\tif (eventParam.hasOwnProperty(type))\r\n\t\t\teventParam[type].call(eventParam.context, xy.x, xy.y);\r\n\r\n\r\n\r\n\t}\r\n\telse if (this._events) {\r\n\r\n\t\tfor (var i = 0; i < this._events.length; i++) {\r\n\t\t\tif (!this._events[i].hasOwnProperty(type))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\teventParam = this._events[i];\r\n\t\t\tvar bounds = eventParam.bounds;\r\n\r\n\t\t\tif (xy.x >= bounds.x1 && xy.x <= bounds.x2 && xy.y >= bounds.y1 && xy.y <= bounds.y2) {\r\n\t\t\t\teventParam[type].call(eventParam.context, xy.x, xy.y);\r\n\r\n\t\t\t\tif (type === \"mousedown\" && eventParam.capture === true) {\r\n\t\t\t\t\tChart.capturedEventParam = eventParam;\r\n\r\n\t\t\t\t\tif (this.overlaidCanvas.setCapture)\r\n\t\t\t\t\t\tthis.overlaidCanvas.setCapture();\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdocument.body.addEventListener(\"mouseup\", this._mouseEventHandler, false);\r\n\t\t\t\t\t\t//addEvent(document.body, \"mouseup\", this._mouseEventHandler);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (type === \"mouseup\") {\r\n\t\t\t\t\tif (eventParam.chart.overlaidCanvas.releaseCapture)\r\n\t\t\t\t\t\teventParam.chart.overlaidCanvas.releaseCapture();\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdocument.body.removeEventListener(\"mouseup\", this._mouseEventHandler, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\teventParam = null;\r\n\t\t}\r\n\r\n\t\tif (eventParam && eventParam.cursor) {\r\n\t\t\tev.target.style.cursor = eventParam.cursor;\r\n\t\t}\r\n\t\telse\r\n\t\t\tev.target.style.cursor = this._defaultCursor;\r\n\r\n\t\t//eventParam =\r\n\t}\r\n\r\n\tif (this._toolTip && this._toolTip.enabled) {\r\n\r\n\t\tvar plotArea = this.plotArea;\r\n\r\n\t\tif (xy.x < plotArea.x1 || xy.x > plotArea.x2 || xy.y < plotArea.y1 || xy.y > plotArea.y2)\r\n\t\t\tthis._toolTip.hide();\r\n\t}\r\n\r\n\r\n\tif ((!this.isDrag || !this.zoomEnabled) && this._eventManager) {\r\n\r\n\t\tthis._eventManager.mouseEventHandler(ev);\r\n\t\t//this._updateToolTip(ev.x, ev.y);\r\n\t}\r\n\r\n\t//if (this._toolTip.enabled)\r\n\t//    this._toolTip.mouseMoveHandler(ev.x, ev.y);\r\n}\r\n\r\nChart.prototype._plotAreaMouseDown = function (x, y) {\r\n\tthis.isDrag = true;\r\n\r\n\tif (this.plotInfo.axisPlacement !== \"none\") {\r\n\t\tthis.dragStartPoint = { x: x, y: y };\r\n\t} else {\r\n\t\tthis.dragStartPoint = { x: x, y: y };\r\n\t}\r\n}\r\n\r\nChart.prototype._plotAreaMouseUp = function (x, y) {\r\n\r\n\tif (this.plotInfo.axisPlacement === \"normal\" || this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\t\tif (this.isDrag) {\r\n\t\t\tvar dragDelta = 0,\r\n\t\t\t\tdragDeltaPY = y - this.dragStartPoint.y,\r\n\t\t\t\tdragDeltaPX = x - this.dragStartPoint.x,\r\n\t\t\t\tzoomPX = this.zoomType.indexOf(\"x\") >= 0, //Whether to zoom horizontally\r\n\t\t\t\tzoomPY = this.zoomType.indexOf(\"y\") >= 0, //Whether to zoom vertically\r\n\t\t\t\treRender = false;\r\n\r\n\t\t\tthis.resetOverlayedCanvas();\r\n\r\n\t\t\tif (this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\t\t\t\tvar temp = zoomPY;\r\n\t\t\t\tzoomPY = zoomPX;\r\n\t\t\t\tzoomPX = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.panEnabled || this.zoomEnabled) {\r\n\t\t\t\tif (this.panEnabled) {\r\n\r\n\t\t\t\t\tvar overflow = 0;\r\n\r\n\t\t\t\t\tfor (var i = 0; i < this._axes.length; i++) {\r\n\t\t\t\t\t\tvar axis = this._axes[i];\r\n\r\n\t\t\t\t\t\tif (axis.viewportMinimum < axis.minimum) {\r\n\r\n\t\t\t\t\t\t\toverflow = axis.minimum - axis.viewportMinimum;\r\n\r\n\t\t\t\t\t\t\taxis.sessionVariables.newViewportMinimum = axis.viewportMinimum + overflow;\r\n\t\t\t\t\t\t\taxis.sessionVariables.newViewportMaximum = axis.viewportMaximum + overflow;\r\n\r\n\t\t\t\t\t\treRender = true;\r\n\t\t\t\t\t\t} else if (axis.viewportMaximum > axis.maximum) {\r\n\r\n\t\t\t\t\t\t\toverflow = axis.viewportMaximum - axis.maximum;\r\n\t\t\t\t\t\t\taxis.sessionVariables.newViewportMinimum = axis.viewportMinimum - overflow;\r\n\t\t\t\t\t\t\taxis.sessionVariables.newViewportMaximum = axis.viewportMaximum - overflow;\r\n\r\n\t\t\t\t\t\treRender = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (((!zoomPX || Math.abs(dragDeltaPX) > 2) && (!zoomPY || Math.abs(dragDeltaPY) > 2)) && this.zoomEnabled) {\r\n\r\n\t\t\t\t\tif (!this.dragStartPoint)\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\tvar selectedRegion = {\r\n\t\t\t\t\t\tx1: zoomPX ? this.dragStartPoint.x : this.plotArea.x1,\r\n\t\t\t\t\t\ty1: zoomPY ? this.dragStartPoint.y : this.plotArea.y1,\r\n\t\t\t\t\t\tx2: zoomPX ? x : this.plotArea.x2,\r\n\t\t\t\t\t\ty2: zoomPY ? y : this.plotArea.y2\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (Math.abs(selectedRegion.x1 - selectedRegion.x2) > 2 && Math.abs(selectedRegion.y1 - selectedRegion.y2) > 2) {\r\n\r\n\t\t\t\t\t\tif (this._zoomPanToSelectedRegion(selectedRegion.x1, selectedRegion.y1, selectedRegion.x2, selectedRegion.y2)) {\r\n\r\n\t\t\t\t\t\t\treRender = true;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\tif (reRender) {\r\n\t\t\t\t\tthis._ignoreNextEvent = true;//Required so that click event doesn't fire after zooming into a section of the chart.\r\n\r\n\t\t\t\t\tthis._dispatchRangeEvent(\"rangeChanging\", \"zoom\");\r\n\t\t\t\t\t\t\t\tthis.render();\r\n\t\t\t\t\tthis._dispatchRangeEvent(\"rangeChanged\", \"zoom\");\r\n\r\n\t\t\t\t\tif (reRender && this.zoomEnabled && this._zoomButton.style.display === \"none\") {\r\n\t\t\t\t\tshow(this._zoomButton, this._resetButton);\r\n\t\t\t\t\tsetButtonState(this, this._zoomButton, \"pan\");\r\n\t\t\t\t\tsetButtonState(this, this._resetButton, \"reset\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.isDrag = false;\r\n}\r\n\r\nChart.prototype._plotAreaMouseMove = function (x, y) {\r\n\tif (this.isDrag && this.plotInfo.axisPlacement !== \"none\") {\r\n\r\n\t\tvar dragDeltaPX = 0,\r\n\t\t\tdragDeltaPY = 0,\r\n\t\t\talpha = null,\r\n\t\t\tselectedRegion = null,\r\n\t\t\tzoomPX = this.zoomType.indexOf(\"x\") >= 0, //Whether to zoom horizontally\r\n\t\t\tzoomPY = this.zoomType.indexOf(\"y\") >= 0, //Whether to zoom vertically\r\n\t\t\t_this = this;\r\n\r\n\t\tif (this.plotInfo.axisPlacement === \"xySwapped\") {\r\n\t\t\tvar temp = zoomPY;\r\n\t\t\tzoomPY = zoomPX;\r\n\t\t\tzoomPX = temp;\r\n\t\t}\r\n\r\n\t\tdragDeltaPX = this.dragStartPoint.x - x;\r\n\t\tdragDeltaPY = this.dragStartPoint.y - y;\r\n\r\n\t\tif (Math.abs(dragDeltaPX) > 2 && Math.abs(dragDeltaPX) < 8 && (this.panEnabled || this.zoomEnabled)) {\r\n\t\t\tthis._toolTip.hide();\r\n\t\t} else if (!this.panEnabled && !this.zoomEnabled) {\r\n\t\t\tthis._toolTip.mouseMoveHandler(x, y);\r\n\t\t}\r\n\r\n\t\tif (((!zoomPX || Math.abs(dragDeltaPX) > 2) || (!zoomPY || Math.abs(dragDeltaPY) > 2)) && (this.panEnabled || this.zoomEnabled)) {\r\n\t\t\tif (this.panEnabled) {\r\n\r\n\t\t\t\tselectedRegion =\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx1: zoomPX ? this.plotArea.x1 + dragDeltaPX : this.plotArea.x1,\r\n\t\t\t\t\t\ty1: zoomPY ? this.plotArea.y1 + dragDeltaPY : this.plotArea.y1,\r\n\t\t\t\t\t\tx2: zoomPX ? this.plotArea.x2 + dragDeltaPX : this.plotArea.x2,\r\n\t\t\t\t\t\ty2: zoomPY ? this.plotArea.y2 + dragDeltaPY : this.plotArea.y2\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\tif (this._zoomPanToSelectedRegion(selectedRegion.x1, selectedRegion.y1, selectedRegion.x2, selectedRegion.y2, true)) {\r\n\t\t\t\t\tthis._dispatchRangeEvent(\"rangeChanging\", \"pan\");\r\n\t\t\t\t\tthis.render();\r\n\t\t\t\t\tthis._dispatchRangeEvent(\"rangeChanged\", \"pan\");\r\n\r\n\t\t\t\t\tthis.dragStartPoint.x = x;\r\n\t\t\t\t\tthis.dragStartPoint.y = y;\r\n\r\n\t\t\t\t\t//clearTimeout(this._panTimerId);\r\n\t\t\t\t\t//this._panTimerId = setTimeout(function () {\r\n\t\t\t\t\t//\t_this._dispatchRangeEvent(\"rangeChanging\", \"pan\");\r\n\t\t\t\t\t//\t_this.render();\r\n\t\t\t\t\t//\t_this._dispatchRangeEvent(\"rangeChanged\", \"pan\");\r\n\t\t\t\t\t//}, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (this.zoomEnabled) {\r\n\r\n\t\t\t\tthis.resetOverlayedCanvas();\r\n\r\n\t\t\t\talpha = this.overlaidCanvasCtx.globalAlpha;\r\n\r\n\t\t\t\tthis.overlaidCanvasCtx.globalAlpha = .7;\r\n\t\t\t\tthis.overlaidCanvasCtx.fillStyle = \"#A0ABB8\";\r\n\r\n\t\t\t\tvar rect = {\r\n\t\t\t\t\tx1: zoomPX ? this.dragStartPoint.x : this.plotArea.x1,\r\n\t\t\t\t\ty1: zoomPY ? this.dragStartPoint.y : this.plotArea.y1,\r\n\t\t\t\t\tx2: zoomPX ? x - this.dragStartPoint.x : this.plotArea.x2 - this.plotArea.x1,\r\n\t\t\t\t\ty2: zoomPY ? y - this.dragStartPoint.y : this.plotArea.y2 - this.plotArea.y1\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.overlaidCanvasCtx.fillRect(rect.x1, rect.y1, rect.x2, rect.y2);\r\n\r\n\t\t\t\tthis.overlaidCanvasCtx.globalAlpha = alpha;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} else\r\n\t\tthis._toolTip.mouseMoveHandler(x, y);\r\n}\r\n\r\n//#endregion Events\r\n\r\n//Sets the viewport range of Axis based on the given rect bounds (pixels). Also limits the zooming/panning based on axis bounds. Returns a boolean to indicate whether it was succesful or not based on the selected region.\r\nChart.prototype._zoomPanToSelectedRegion = function (px1, py1, px2, py2, keepAxisIndependent) {\r\n\r\n\tkeepAxisIndependent = keepAxisIndependent || false;\r\n\r\n\tvar zoomPX = this.zoomType.indexOf(\"x\") >= 0, //Whether to zoom horizontally\r\n\t\tzoomPY = this.zoomType.indexOf(\"y\") >= 0, //Whether to zoom vertically\r\n\t\tvalidRegion = false;\r\n\r\n\tvar axes = [], axesWithValidRange = [];\r\n\tif (this.axisX && zoomPX)\r\n\t\taxes.push(this.axisX);\r\n\tif (this.axisY && zoomPY)\r\n\t\taxes.push(this.axisY);\r\n\tif (this.axisY2 && zoomPY)\r\n\t\taxes.push(this.axisY2);\r\n\r\n\tvar params = [];\r\n\r\n\tfor (var i = 0; i < axes.length; i++) {\r\n\t\tvar axis = axes[i];\r\n\t\t//var range = Math.abs(axis.viewportMaximum - axis.viewportMinimum);\r\n\r\n\t\tvar val1 = axis.convertPixelToValue({ x: px1, y: py1 });\r\n\t\tvar val2 = axis.convertPixelToValue({ x: px2, y: py2 });\r\n\r\n\t\tif (val1 > val2) {\r\n\t\t\tvar temp = val2;\r\n\t\t\tval2 = val1;\r\n\t\t\tval1 = temp;\r\n\t\t}\r\n\r\n\t\tif (isFinite(axis.dataInfo.minDiff)) {\r\n\t\t\tif (!(Math.abs(val2 - val1) < 3 * Math.abs(axis.dataInfo.minDiff)\r\n\t\t\t|| (val1 < axis.minimum) || (val2 > axis.maximum))) {\r\n\t\t\t\taxesWithValidRange.push(axis);\r\n\t\t\t\tparams.push({ val1: val1, val2: val2 });\r\n\r\n\t\t\t\tvalidRegion = true;\r\n\t\t\t} else if (!keepAxisIndependent) {\r\n\t\t\t\tvalidRegion = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (validRegion) {\r\n\t\tfor (var i = 0; i < axesWithValidRange.length; i++) {\r\n\t\t\tvar axis = axesWithValidRange[i];\r\n\t\t\tvar param = params[i];\r\n\r\n\t\t\taxis.setViewPortRange(param.val1, param.val2);\r\n\t\t}\r\n\t}\r\n\r\n\treturn validRegion;\r\n}\r\n\r\nChart.prototype.preparePlotArea = function () {\r\n\r\n\tvar plotArea = this.plotArea;\r\n\r\n\tvar yAxis = this.axisY ? this.axisY : this.axisY2;\r\n\r\n\tif (!isCanvasSupported && (plotArea.x1 > 0 || plotArea.y1 > 0)) {\r\n\t\tplotArea.ctx.translate(plotArea.x1, plotArea.y1);\r\n\t}\r\n\r\n\tif (this.axisX && yAxis) {\r\n\t\tplotArea.x1 = this.axisX.lineCoordinates.x1 < this.axisX.lineCoordinates.x2 ? this.axisX.lineCoordinates.x1 : yAxis.lineCoordinates.x1;\r\n\t\tplotArea.y1 = (this.axisX.lineCoordinates.y1 < yAxis.lineCoordinates.y1 ? this.axisX.lineCoordinates.y1 : yAxis.lineCoordinates.y1);\r\n\r\n\t\tplotArea.x2 = (this.axisX.lineCoordinates.x2 > yAxis.lineCoordinates.x2 ? this.axisX.lineCoordinates.x2 : yAxis.lineCoordinates.x2);\r\n\t\tplotArea.y2 = this.axisX.lineCoordinates.y2 > this.axisX.lineCoordinates.y1 ? this.axisX.lineCoordinates.y2 : yAxis.lineCoordinates.y2;\r\n\r\n\t\tplotArea.width = plotArea.x2 - plotArea.x1;\r\n\t\tplotArea.height = plotArea.y2 - plotArea.y1;\r\n\t\t//plotArea = { x1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: y2 - y1 };\r\n\t} else {\r\n\t\t//ToDo: @sunil\r\n\t\tvar freeSpace = this.layoutManager.getFreeSpace();\r\n\t\tplotArea.x1 = freeSpace.x1;\r\n\t\tplotArea.x2 = freeSpace.x2;\r\n\t\tplotArea.y1 = freeSpace.y1;\r\n\t\tplotArea.y2 = freeSpace.y2;\r\n\r\n\t\tplotArea.width = freeSpace.width;\r\n\t\tplotArea.height = freeSpace.height;\r\n\t}\r\n\r\n\tif (!isCanvasSupported) {\r\n\r\n\t\tplotArea.canvas.width = plotArea.width;\r\n\t\tplotArea.canvas.height = plotArea.height;\r\n\r\n\t\tplotArea.canvas.style.left = plotArea.x1 + \"px\";\r\n\t\tplotArea.canvas.style.top = plotArea.y1 + \"px\";\r\n\r\n\t\tif (plotArea.x1 > 0 || plotArea.y1 > 0) {\r\n\t\t\tplotArea.ctx.translate(-plotArea.x1, -plotArea.y1);\r\n\t\t}\r\n\t}\r\n\r\n\tplotArea.layoutManager = new LayoutManager(plotArea.x1, plotArea.y1, plotArea.x2, plotArea.y2, 2);\r\n}\r\n\r\nChart.prototype.getPixelCoordinatesOnPlotArea = function (x, y) {\r\n\treturn {\r\n\t\tx: this.axisX.getPixelCoordinatesOnAxis(x).x, y: this.axisY.getPixelCoordinatesOnAxis(y).y\r\n\t}\r\n\t//return { x: 5, y: 10 };\r\n}\r\n\r\n//#region Render Methods\r\n\r\nChart.prototype.renderIndexLabels = function (targetCtx) {\r\n\tvar ctx = targetCtx || this.plotArea.ctx;\r\n\r\n\tvar plotArea = this.plotArea;\r\n\r\n\tvar mid = 0;\r\n\tvar yMinLimit = 0;\r\n\tvar yMaxLimit = 0;\r\n\tvar xMinLimit = 0;\r\n\tvar xMaxLimit = 0;\r\n\tvar marginX = 0, marginY = 0; // Margin between label and dataPoint / PlotArea\r\n\tvar offSetX = 0, offSetY = 0; // Distance to offSet textBlock (top) from dataPoint inorder to position it\r\n\tvar visibleWidth = 0;\r\n\tvar visibleHeight = 0;\r\n\r\n\tfor (var i = 0; i < this._indexLabels.length; i++) {\r\n\r\n\t\tvar indexLabel = this._indexLabels[i];\r\n\t\tvar chartTypeLower = indexLabel.chartType.toLowerCase();\r\n\r\n\t\tvar x, y, angle;\r\n\r\n\t\tvar fontColor = getProperty(\"indexLabelFontColor\", indexLabel.dataPoint, indexLabel.dataSeries);\r\n\t\tvar fontSize = getProperty(\"indexLabelFontSize\", indexLabel.dataPoint, indexLabel.dataSeries);\r\n\t\tvar fontFamily = getProperty(\"indexLabelFontFamily\", indexLabel.dataPoint, indexLabel.dataSeries);\r\n\t\tvar fontStyle = getProperty(\"indexLabelFontStyle\", indexLabel.dataPoint, indexLabel.dataSeries);\r\n\t\tvar fontWeight = getProperty(\"indexLabelFontWeight\", indexLabel.dataPoint, indexLabel.dataSeries);\r\n\t\tvar backgroundColor = getProperty(\"indexLabelBackgroundColor\", indexLabel.dataPoint, indexLabel.dataSeries);\r\n\t\tvar maxWidth = getProperty(\"indexLabelMaxWidth\", indexLabel.dataPoint, indexLabel.dataSeries);\r\n\t\tvar indexLabelWrap = getProperty(\"indexLabelWrap\", indexLabel.dataPoint, indexLabel.dataSeries);\r\n\r\n\t\tvar percentAndTotal = {\r\n\t\t\tpercent: null, total: null\r\n\t\t};\r\n\t\tvar formatterParameter = null;\r\n\r\n\t\tif (indexLabel.dataSeries.type.indexOf(\"stacked\") >= 0 || indexLabel.dataSeries.type === \"pie\" || indexLabel.dataSeries.type === \"doughnut\")\r\n\t\t\tpercentAndTotal = this.getPercentAndTotal(indexLabel.dataSeries, indexLabel.dataPoint);\r\n\r\n\t\tif (indexLabel.dataSeries.indexLabelFormatter || indexLabel.dataPoint.indexLabelFormatter)\r\n\t\t\tformatterParameter = {\r\n\t\t\t\tchart: this._options, dataSeries: indexLabel.dataSeries, dataPoint: indexLabel.dataPoint, index: indexLabel.indexKeyword, total: percentAndTotal.total, percent: percentAndTotal.percent\r\n\t\t\t};\r\n\r\n\r\n\t\tvar indexLabelText = indexLabel.dataPoint.indexLabelFormatter ? indexLabel.dataPoint.indexLabelFormatter(formatterParameter)\r\n\t\t\t: indexLabel.dataPoint.indexLabel ? this.replaceKeywordsWithValue(indexLabel.dataPoint.indexLabel, indexLabel.dataPoint, indexLabel.dataSeries, null, indexLabel.indexKeyword)\r\n\t\t\t: indexLabel.dataSeries.indexLabelFormatter ? indexLabel.dataSeries.indexLabelFormatter(formatterParameter)\r\n\t\t\t: indexLabel.dataSeries.indexLabel ? this.replaceKeywordsWithValue(indexLabel.dataSeries.indexLabel, indexLabel.dataPoint, indexLabel.dataSeries, null, indexLabel.indexKeyword) : null;\r\n\r\n\t\tif (indexLabelText === null || indexLabelText === \"\")\r\n\t\t\tcontinue;\r\n\r\n\t\tvar placement = getProperty(\"indexLabelPlacement\", indexLabel.dataPoint, indexLabel.dataSeries);\r\n\t\tvar orientation = getProperty(\"indexLabelOrientation\", indexLabel.dataPoint, indexLabel.dataSeries);\r\n\t\tvar angle = 0;\r\n\r\n\t\tvar direction = indexLabel.direction; // +1 for above the point and -1 for below the point\r\n\r\n\t\tvar axisX = indexLabel.dataSeries.axisX;\r\n\t\tvar axisY = indexLabel.dataSeries.axisY;\r\n\r\n\r\n\t\tvar textBlock = new TextBlock(ctx, {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\tmaxWidth: maxWidth ? maxWidth : this.width * .5,\r\n\t\t\tmaxHeight: indexLabelWrap ? fontSize * 5 : fontSize * 1.5,\r\n\t\t\tangle: orientation === \"horizontal\" ? 0 : -90,\r\n\t\t\ttext: indexLabelText,\r\n\t\t\tpadding: 0,\r\n\t\t\tbackgroundColor: backgroundColor,\r\n\t\t\thorizontalAlign: \"left\",//left, center, right\r\n\t\t\tfontSize: fontSize,//in pixels\r\n\t\t\tfontFamily: fontFamily,\r\n\t\t\tfontWeight: fontWeight, //normal, bold, bolder, lighter,\r\n\t\t\tfontColor: fontColor,\r\n\t\t\tfontStyle: fontStyle, // normal, italic, oblique\r\n\t\t\ttextBaseline: \"top\"\r\n\t\t});\r\n\r\n\t\tvar textSize = textBlock.measureText();\r\n\r\n\t\t//if (indexLabel.dataPoint.x < axisX.viewportMinimum || indexLabel.dataPoint.x > axisX.viewportMaximum || indexLabel.dataPoint.y < axisY.viewportMinimum || indexLabel.dataPoint.y > axisY.viewportMaximum)\r\n\t\t//\tcontinue;\r\n\r\n\t\tif (chartTypeLower.indexOf(\"line\") >= 0 || chartTypeLower.indexOf(\"area\") >= 0\r\n\t\t\t\t|| chartTypeLower.indexOf(\"bubble\") >= 0 || chartTypeLower.indexOf(\"scatter\") >= 0) {\r\n\r\n\t\t\tif (indexLabel.dataPoint.x < axisX.viewportMinimum || indexLabel.dataPoint.x > axisX.viewportMaximum || indexLabel.dataPoint.y < axisY.viewportMinimum || indexLabel.dataPoint.y > axisY.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (indexLabel.dataPoint.x < axisX.viewportMinimum || indexLabel.dataPoint.x > axisX.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tmarginY = 2;\r\n\t\tmarginX = 2;\r\n\r\n\t\tif (orientation === \"horizontal\") {\r\n\t\t\tvisibleWidth = textBlock.width;\r\n\t\t\tvisibleHeight = textBlock.height;\r\n\t\t} else {\r\n\t\t\tvisibleHeight = textBlock.width;\r\n\t\t\tvisibleWidth = textBlock.height;\r\n\t\t}\r\n\r\n\t\tif (this.plotInfo.axisPlacement === \"normal\") {\r\n\r\n\t\t\tif (chartTypeLower.indexOf(\"line\") >= 0 || chartTypeLower.indexOf(\"area\") >= 0) {\r\n\r\n\t\t\t\tplacement = \"auto\";\r\n\t\t\t\tmarginY = 4;\r\n\r\n\t\t\t} else if (chartTypeLower.indexOf(\"stacked\") >= 0) {\r\n\r\n\t\t\t\tif (placement === \"auto\")\r\n\t\t\t\t\tplacement = \"inside\";\r\n\r\n\t\t\t} else if (chartTypeLower === \"bubble\" || chartTypeLower === \"scatter\") {\r\n\r\n\t\t\t\tplacement = \"inside\";\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx = indexLabel.point.x - visibleWidth / 2;\r\n\r\n\t\t\tif (placement !== \"inside\") {\t//outside or auto\r\n\r\n\t\t\t\tyMinLimit = plotArea.y1;\r\n\t\t\t\tyMaxLimit = plotArea.y2;\r\n\r\n\t\t\t\tif (direction > 0) {\r\n\t\t\t\t\ty = indexLabel.point.y - visibleHeight - marginY;\r\n\r\n\t\t\t\t\tif (y < yMinLimit) {\r\n\t\t\t\t\t\tif (placement === \"auto\") {\r\n\t\t\t\t\t\t\ty = Math.max(indexLabel.point.y, yMinLimit) + marginY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ty = yMinLimit + marginY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ty = indexLabel.point.y + marginY;\r\n\r\n\t\t\t\t\tif (y > yMaxLimit - visibleHeight - marginY) {\r\n\t\t\t\t\t\tif (placement === \"auto\") {\r\n\t\t\t\t\t\t\ty = Math.min(indexLabel.point.y, yMaxLimit) - visibleHeight - marginY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ty = yMaxLimit - visibleHeight - marginY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\r\n\t\t\t\tyMinLimit = Math.max(indexLabel.bounds.y1, plotArea.y1);\r\n\t\t\t\tyMaxLimit = Math.min(indexLabel.bounds.y2, plotArea.y2);\r\n\r\n\r\n\t\t\t\tif (chartTypeLower.indexOf(\"range\") >= 0) {\r\n\t\t\t\t\tif (direction > 0)\r\n\t\t\t\t\t\tmid = Math.max(indexLabel.bounds.y1, plotArea.y1) + visibleHeight / 2 + marginY;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tmid = Math.min(indexLabel.bounds.y2, plotArea.y2) - visibleHeight / 2 - marginY;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tmid = (Math.max(indexLabel.bounds.y1, plotArea.y1) + Math.min(indexLabel.bounds.y2, plotArea.y2)) / 2\r\n\r\n\t\t\t\tif (direction > 0) {\r\n\t\t\t\t\ty = Math.max(indexLabel.point.y, mid) - visibleHeight / 2;\r\n\r\n\t\t\t\t\tif (y < yMinLimit && (chartTypeLower === \"bubble\" || chartTypeLower === \"scatter\")) {\r\n\t\t\t\t\t\ty = Math.max(indexLabel.point.y - visibleHeight - marginY, plotArea.y1 + marginY);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ty = Math.min(indexLabel.point.y, mid) - visibleHeight / 2;\r\n\r\n\t\t\t\t\tif (y > yMaxLimit - visibleHeight - marginY && (chartTypeLower === \"bubble\" || chartTypeLower === \"scatter\")) {\r\n\t\t\t\t\t\ty = Math.min(indexLabel.point.y + marginY, plotArea.y2 - visibleHeight - marginY);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                  // Make Sure that it does not overlap the axis line\r\n\t\t\t\ty = Math.min(y, yMaxLimit - visibleHeight);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tif (chartTypeLower.indexOf(\"line\") >= 0 || chartTypeLower.indexOf(\"area\") >= 0\r\n\t\t\t\t|| chartTypeLower.indexOf(\"scatter\") >= 0) {\r\n\r\n\t\t\t\tplacement = \"auto\";\r\n\t\t\t\tmarginX = 4;\r\n\r\n\t\t\t} else if (chartTypeLower.indexOf(\"stacked\") >= 0) {\r\n\r\n\t\t\t\tif (placement === \"auto\")\r\n\t\t\t\t\tplacement = \"inside\";\r\n\r\n\t\t\t} else if (chartTypeLower === \"bubble\") {\r\n\r\n\t\t\t\tplacement = \"inside\";\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty = indexLabel.point.y - visibleHeight / 2;\r\n\r\n\t\t\tif (placement !== \"inside\") {\t//outside or auto\r\n\r\n\t\t\t\txMinLimit = plotArea.x1;\r\n\t\t\t\txMaxLimit = plotArea.x2;\r\n\r\n\t\t\t\tif (direction < 0) {\r\n\t\t\t\t\tx = indexLabel.point.x - visibleWidth - marginX;\r\n\r\n\t\t\t\t\tif (x < xMinLimit) {\r\n\t\t\t\t\t\tif (placement === \"auto\") {\r\n\t\t\t\t\t\t\tx = Math.max(indexLabel.point.x, xMinLimit) + marginX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tx = xMinLimit + marginX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tx = indexLabel.point.x + marginX;\r\n\r\n\t\t\t\t\tif (x > xMaxLimit - visibleWidth - marginX) {\r\n\t\t\t\t\t\tif (placement === \"auto\") {\r\n\t\t\t\t\t\t\tx = Math.min(indexLabel.point.x, xMaxLimit) - visibleWidth - marginX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tx = xMaxLimit - visibleWidth - marginX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\txMinLimit = Math.max(indexLabel.bounds.x1, plotArea.x1);\r\n\t\t\t\txMaxLimit = Math.min(indexLabel.bounds.x2, plotArea.x2);\r\n\r\n\t\t\t\tif (chartTypeLower.indexOf(\"range\") >= 0) {\r\n\t\t\t\t\tif (direction < 0)\r\n\t\t\t\t\t\tmid = Math.max(indexLabel.bounds.x1, plotArea.x1) + visibleWidth / 2 + marginX;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tmid = Math.min(indexLabel.bounds.x2, plotArea.x2) - visibleWidth / 2 - marginX;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tvar mid = (Math.max(indexLabel.bounds.x1, plotArea.x1) + Math.min(indexLabel.bounds.x2, plotArea.x2)) / 2;\r\n\r\n\t\t\t\tif (direction < 0) {\r\n\t\t\t\t\tx = Math.max(indexLabel.point.x, mid) - visibleWidth / 2;\r\n\r\n\t\t\t\t\t//if (y < xMinLimit) {\r\n\t\t\t\t\t//\ty = Math.max(indexLabel.point.y - visibleHeight - marginY, plotArea.y1 + marginY);\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tx = Math.min(indexLabel.point.x, mid) - visibleWidth / 2;\r\n\r\n\t\t\t\t\t//if (y > xMaxLimit - visibleHeight - marginY) {\r\n\t\t\t\t\t//\ty = Math.min(indexLabel.point.y + marginY, plotArea.y2 - visibleHeight - marginY);\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\r\n\t\t\t    // Make Sure that it does not overlap the axis line\r\n\t\t\t    x = Math.max(x, xMinLimit);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (orientation === \"vertical\") {\r\n\t\t\ty += visibleHeight;\r\n\t\t}\r\n\r\n\t\ttextBlock.x = x;\r\n\t\ttextBlock.y = y;\r\n\r\n\t\t//console.log(textBlock.text + \": \" + textBlock.x + \"; \" + textBlock.y);\r\n\r\n\t\ttextBlock.render(true);\r\n\t}\r\n\r\n\t//source and dest would be same when animation is not enabled\r\n\tvar animationInfo = {\r\n\t\tsource: ctx, dest: this.plotArea.ctx, animationCallback: AnimationHelper.fadeInAnimation, easingFunction: AnimationHelper.easing.easeInQuad, animationBase: 0, startTimePercent: .7\r\n\t};\r\n\treturn animationInfo;\r\n}\r\n\r\nChart.prototype.renderLine = function (plotUnit) {\r\n\r\n\tvar ctx = plotUnit.targetCanvasCtx || this.plotArea.ctx;\r\n\r\n\tvar totalDataSeries = plotUnit.dataSeriesIndexes.length;\r\n\tif (totalDataSeries <= 0)\r\n\t\treturn;\r\n\r\n\tvar ghostCtx = this._eventManager.ghostCtx;\r\n\t//var ghostCtx = this.overlaidCanvasCtx;\r\n\r\n\tctx.save();\r\n\r\n\tvar plotArea = this.plotArea;\r\n\r\n\tctx.beginPath();\r\n\tctx.rect(plotArea.x1, plotArea.y1, plotArea.width, plotArea.height);\r\n\tctx.clip();\r\n\r\n\tvar markers = [];\r\n\r\n\tfor (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\r\n\r\n\t\tvar dataSeriesIndex = plotUnit.dataSeriesIndexes[j];\r\n\r\n\t\tvar dataSeries = this.data[dataSeriesIndex];\r\n\t\tctx.lineWidth = dataSeries.lineThickness;\r\n\t\tvar dataPoints = dataSeries.dataPoints;\r\n\r\n\r\n\t\tif (ctx.setLineDash) {\r\n\t\t\tctx.setLineDash(getLineDashArray(dataSeries.lineDashType, dataSeries.lineThickness));\r\n\t\t}\r\n\r\n\t\tvar seriesId = dataSeries.id;\r\n\t\tthis._eventManager.objectMap[seriesId] = {\r\n\t\t\tobjectType: \"dataSeries\", dataSeriesIndex: dataSeriesIndex\r\n\t\t};\r\n\t\tvar hexColor = intToHexColorString(seriesId);\r\n\t\tghostCtx.strokeStyle = hexColor;\r\n\t\t//ghostCtx.lineWidth = dataSeries.lineThickness;\r\n\t\tghostCtx.lineWidth = dataSeries.lineThickness > 0 ? Math.max(dataSeries.lineThickness, 4) : 0;\r\n\r\n\t\tvar colorSet = dataSeries._colorSet;\r\n\t\tvar color = colorSet[0];\r\n\t\tctx.strokeStyle = color;\r\n\r\n\t\tvar isFirstDataPointInPlotArea = true;\r\n\t\tvar i = 0, x, y;\r\n\t\tvar dataPointX; //Used so that when dataPoint.x is a DateTime value, it doesn't get converted to number back and forth.\r\n\r\n\t\t//if (!dataSeries._options.markerSize && dataSeries.dataPoints.length < 1000)\r\n\t\t//    dataSeries.markerSize = 8;\r\n\t\tctx.beginPath();\r\n\t\tif (dataPoints.length > 0) {\r\n\t\t\t//var xy = this.getPixelCoordinatesOnPlotArea(dataPoints[0].x, dataPoints[0].y);\r\n\r\n\t\t\t//dataSeries.noDataPointsInPlotArea = 0\r\n\t\t\tvar prevDataNull = false;\r\n\t\t\tfor (i = 0; i < dataPoints.length; i++) {\r\n\r\n\t\t\t\tdataPointX = dataPoints[i].x.getTime ? dataPoints[i].x.getTime() : dataPoints[i].x;\r\n\r\n\t\t\t\tif (dataPointX < plotUnit.axisX.dataInfo.viewPortMin || dataPointX > plotUnit.axisX.dataInfo.viewPortMax)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t//if (!isFinite(dataPoints[i].y))\r\n\t\t\t\t//    continue;\r\n\r\n\t\t\t\tif (typeof (dataPoints[i].y) !== \"number\") {\r\n\t\t\t\t\tif (i > 0) {// if first dataPoint is null then no need to call stroke method\r\n\t\t\t\t\t\tctx.stroke();\r\n\r\n\t\t\t\t\t\tif (isCanvasSupported) {\r\n\t\t\t\t\t\t\tghostCtx.stroke();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tprevDataNull = true;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx = (plotUnit.axisX.conversionParameters.reference + plotUnit.axisX.conversionParameters.pixelPerUnit * (dataPointX - plotUnit.axisX.conversionParameters.minimum) + .5) << 0;\r\n\t\t\t\ty = (plotUnit.axisY.conversionParameters.reference + plotUnit.axisY.conversionParameters.pixelPerUnit * (dataPoints[i].y - plotUnit.axisY.conversionParameters.minimum) + .5) << 0;\r\n\r\n\t\t\t\tvar id = dataSeries.dataPointIds[i];\r\n\t\t\t\tthis._eventManager.objectMap[id] = {\r\n\t\t\t\t\tid: id, objectType: \"dataPoint\", dataSeriesIndex: dataSeriesIndex, dataPointIndex: i, x1: x, y1: y\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t//dataSeries.noDataPointsInPlotArea++;\r\n\r\n\t\t\t\tif (isFirstDataPointInPlotArea || prevDataNull) {\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x, y);\r\n\r\n\r\n\t\t\t\t\tif (isCanvasSupported) {\r\n\t\t\t\t\t\tghostCtx.beginPath();\r\n\t\t\t\t\t\tghostCtx.moveTo(x, y);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tisFirstDataPointInPlotArea = false;\r\n\t\t\t\t\tprevDataNull = false;\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tctx.lineTo(x, y);\r\n\r\n\t\t\t\t\tif (isCanvasSupported)\r\n\t\t\t\t\t\tghostCtx.lineTo(x, y);\r\n\r\n\t\t\t\t\tif (i % 500 == 0) {\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.moveTo(x, y);\r\n\r\n\t\t\t\t\t\tif (isCanvasSupported) {\r\n\t\t\t\t\t\t\tghostCtx.stroke();\r\n\t\t\t\t\t\t\tghostCtx.beginPath();\r\n\t\t\t\t\t\t\tghostCtx.moveTo(x, y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Render Marker\r\n\t\t\t\tif (dataPoints[i].markerSize > 0 || dataSeries.markerSize > 0) {\r\n\r\n\t\t\t\t\tvar markerProps = dataSeries.getMarkerProperties(i, x, y, ctx);\r\n\t\t\t\t\tmarkers.push(markerProps);\r\n\r\n\t\t\t\t\t//if (!dataSeries.maxWidthInX || markerProps.size > dataSeries.maxWidthInX) {\r\n\t\t\t\t\t//\tdataSeries.maxWidthInX = markerProps.size / (plotUnit.axisX.conversionParameters.pixelPerUnit > 1 ? plotUnit.axisX.conversionParameters.pixelPerUnit - 1 : plotUnit.axisX.conversionParameters.pixelPerUnit);\r\n\t\t\t\t\t//}\r\n\r\n\t\t\t\t\tvar markerColor = intToHexColorString(id);\r\n\r\n\t\t\t\t\t//window.console.log(\"index: \" + i + \"; id: \" + id + \"; hex: \" + markerColor);\r\n\r\n\t\t\t\t\tif (isCanvasSupported) {\r\n\t\t\t\t\t\tmarkers.push({\r\n\t\t\t\t\t\t\tx: x, y: y, ctx: ghostCtx,\r\n\t\t\t\t\t\t\ttype: markerProps.type,\r\n\t\t\t\t\t\t\tsize: markerProps.size,\r\n\t\t\t\t\t\t\tcolor: markerColor,\r\n\t\t\t\t\t\t\tborderColor: markerColor,\r\n\t\t\t\t\t\t\tborderThickness: markerProps.borderThickness\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dataPoints[i].indexLabel || dataSeries.indexLabel || dataPoints[i].indexLabelFormatter || dataSeries.indexLabelFormatter) {\r\n\r\n\t\t\t\t\tthis._indexLabels.push({\r\n\t\t\t\t\t\tchartType: \"line\",\r\n\t\t\t\t\t\tdataPoint: dataPoints[i],\r\n\t\t\t\t\t\tdataSeries: dataSeries,\r\n\t\t\t\t\t\tpoint: {\r\n\t\t\t\t\t\t\tx: x, y: y\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdirection: dataPoints[i].y >= 0 ? 1 : -1,\r\n\t\t\t\t\t\tcolor: color\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tif (isCanvasSupported)\r\n\t\t\t\tghostCtx.stroke();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tRenderHelper.drawMarkers(markers);\r\n\tctx.restore();\r\n\r\n\tctx.beginPath();\r\n\r\n\tif (isCanvasSupported)\r\n\t\tghostCtx.beginPath();\r\n\r\n\t//source and dest would be same when animation is not enabled\r\n\tvar animationInfo = {\r\n\t\tsource: ctx, dest: this.plotArea.ctx, animationCallback: AnimationHelper.xClipAnimation, easingFunction: AnimationHelper.easing.linear, animationBase: 0\r\n\t};\r\n\treturn animationInfo;\r\n}\r\n\r\nChart.prototype.renderStepLine = function (plotUnit) {\r\n\tvar ctx = plotUnit.targetCanvasCtx || this.plotArea.ctx;\r\n\r\n\tvar totalDataSeries = plotUnit.dataSeriesIndexes.length;\r\n\tif (totalDataSeries <= 0)\r\n\t\treturn;\r\n\r\n\tvar ghostCtx = this._eventManager.ghostCtx;\r\n\t//var ghostCtx = this.overlaidCanvasCtx;\r\n\r\n\tctx.save();\r\n\r\n\tvar plotArea = this.plotArea;\r\n\r\n\tctx.beginPath();\r\n\tctx.rect(plotArea.x1, plotArea.y1, plotArea.width, plotArea.height);\r\n\tctx.clip();\r\n\r\n\tvar markers = [];\r\n\r\n\tfor (var j = 0; j < plotUnit.dataSeriesIndexes.length; j++) {\r\n\r\n\t\tvar dataSeriesIndex = plotUnit.dataSeriesIndexes[j];\r\n\r\n\t\tvar dataSeries = this.data[dataSeriesIndex];\r\n\t\tctx.lineWidth = dataSeries.lineThickness;\r\n\t\tvar dataPoints = dataSeries.dataPoints;\r\n\r\n\t\tif (ctx.setLineDash) {\r\n\t\t\tctx.setLineDash(getLineDashArray(dataSeries.lineDashType, dataSeries.lineThickness));\r\n\t\t}\r\n\r\n\t\tvar seriesId = dataSeries.id;\r\n\t\tthis._eventManager.objectMap[seriesId] = {\r\n\t\t\tobjectType: \"dataSeries\", dataSeriesIndex: dataSeriesIndex\r\n\t\t};\r\n\t\tvar hexColor = intToHexColorString(seriesId);\r\n\t\tghostCtx.strokeStyle = hexColor;\r\n\t\t//ghostCtx.lineWidth = dataSeries.lineThickness;\r\n\t\tghostCtx.lineWidth = dataSeries.lineThickness > 0 ? Math.max(dataSeries.lineThickness, 4) : 0;\r\n\r\n\t\tvar colorSet = dataSeries._colorSet;\r\n\t\tvar color = colorSet[0];\r\n\t\tctx.strokeStyle = color;\r\n\r\n\t\tvar isFirstDataPointInPlotArea = true;\r\n\t\tvar i = 0, x, y;\r\n\t\tvar dataPointX; //Used so that when dataPoint.x is a DateTime value, it doesn't get converted to number back and forth.\r\n\r\n\t\t//if (!dataSeries._options.markerSize && dataSeries.dataPoints.length < 1000)\r\n\t\t//    dataSeries.markerSize = 8;\r\n\t\tctx.beginPath();\r\n\t\tif (dataPoints.length > 0) {\r\n\t\t\t//var xy = this.getPixelCoordinatesOnPlotArea(dataPoints[0].x, dataPoints[0].y);\r\n\r\n\t\t\t//dataSeries.noDataPointsInPlotArea = 0\r\n\t\t\tvar prevDataNull = false;\r\n\t\t\tfor (i = 0; i < dataPoints.length; i++) {\r\n\r\n\t\t\t\tdataPointX = dataPoints[i].getTime ? dataPoints[i].x.getTime() : dataPoints[i].x;\r\n\r\n\t\t\t\tif (dataPointX < plotUnit.axisX.dataInfo.viewPortMin || dataPointX > plotUnit.axisX.dataInfo.viewPortMax)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t//if (!isFinite(dataPoints[i].y))\r\n\t\t\t\t//    continue;\r\n\r\n\t\t\t\tif (typeof (dataPoints[i].y) !== \"number\") {\r\n\t\t\t\t\tif (i > 0) {// if first dataPoint is null then no need to call stroke method\r\n\t\t\t\t\t\tctx.stroke();\r\n\r\n\t\t\t\t\t\tif (isCanvasSupported) {\r\n\t\t\t\t\t\t\tghostCtx.stroke();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprevDataNull = true;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar prevY = y;\r\n\r\n\t\t\t\tx = (plotUnit.axisX.conversionParameters.reference + plotUnit.axisX.conversionParameters.pixelPerUnit * (dataPointX - plotUnit.axisX.conversionParameters.minimum) + .5) << 0;\r\n\t\t\t\ty = (plotUnit.axisY.conversionParameters.reference + plotUnit.axisY.conversionParameters.pixelPerUnit * (dataPoints[i].y - plotUnit.axisY.conversionParameters.minimum) + .5) << 0;\r\n\r\n\t\t\t\tvar id = dataSeries.dataPointIds[i];\r\n\t\t\t\tthis._eventManager.objectMap[id] = {\r\n\t\t\t\t\tid: id, objectType: \"dataPoint\", dataSeriesIndex: dataSeriesIndex, dataPointIndex: i, x1: x, y1: y\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t//dataSeries.noDataPointsInPlotArea++;\r\n\r\n\t\t\t\tif (isFirstDataPointInPlotArea || prevDataNull) {\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x, y);\r\n\r\n\t\t\t\t\tif (isCanvasSupported) {\r\n\t\t\t\t\t\tghostCtx.beginPath();\r\n\t\t\t\t\t\tghostCtx.moveTo(x, y);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tisFirstDataPointInPlotArea = false;\r\n\t\t\t\t\tprevDataNull = false;\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tctx.lineTo(x, prevY);\r\n\t\t\t\t\tif (isCanvasSupported)\r\n\t\t\t\t\t\tghostCtx.lineTo(x, prevY);\r\n\r\n\t\t\t\t\tctx.lineTo(x, y);\r\n\t\t\t\t\tif (isCanvasSupported)\r\n\t\t\t\t\t\tghostCtx.lineTo(x, y);\r\n\r\n\t\t\t\t\tif (i % 500 == 0) {\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.moveTo(x, y);\r\n\r\n\t\t\t\t\t\tif (isCanvasSupported) {\r\n\t\t\t\t\t\t\tghostCtx.stroke();\r\n\t\t\t\t\t\t\tghostCtx.beginPath();\r\n\t\t\t\t\t\t\tghostCtx.moveTo(x, y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Render Marker\r\n\t\t\t\tif (dataPoints[i].markerSize > 0 || dataSeries.markerSize > 0) {\r\n\r\n\t\t\t\t\tvar markerProps = dataSeries.getMarkerProperties(i, x, y, ctx);\r\n\t\t\t\t\tmarkers.push(markerProps);\r\n\r\n\t\t\t\t\t//if (!dataSeries.maxWidthInX || markerProps.size > dataSeries.maxWidthInX) {\r\n\t\t\t\t\t//\tdataSeries.maxWidthInX = markerProps.size / (plotUnit.axisX.conversionParameters.pixelPerUnit > 1 ? plotUnit.axisX.conversionParameters.pixelPerUnit - 1 : plotUnit.axisX.conversionParameters.pixelPerUnit);\r\n\t\t\t\t\t//}\r\n\r\n\t\t\t\t\tvar markerColor = intToHexColorString(id);\r\n\r\n\t\t\t\t\t//window.console.log(\"index: \" + i + \"; id: \" + id + \"; hex: \" + markerColor);\r\n\t\t\t\t\tif (isCanvasSupported) {\r\n\t\t\t\t\t\tmarkers.push({\r\n\t\t\t\t\t\t\tx: x, y: y, ctx: ghostCtx,\r\n\t\t\t\t\t\t\ttype: markerProps.type,\r\n\t\t\t\t\t\t\tsize: markerProps.size,\r\n\t\t\t\t\t\t\tcolor: markerColor,\r\n\t\t\t\t\t\t\tborderColor: markerColor,\r\n\t\t\t\t\t\t\tborderThickness: markerProps.borderThickness\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dataPoints[i].indexLabel || dataSeries.indexLabel || dataPoints[i].indexLabelFormatter || dataSeries.indexLabelFormatter) {\r\n\r\n\t\t\t\t\tthis._indexLabels.push({\r\n\t\t\t\t\t\tchartType: \"stepLine\",\r\n\t\t\t\t\t\tdataPoint: dataPoints[i],\r\n\t\t\t\t\t\tdataSeries: dataSeries,\r\n\t\t\t\t\t\tpoint: {\r\n\t\t\t\t\t\t\tx: x, y: y\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdirection: dataPoints[i].y >= 0 ? 1 : -1,\r\n\t\t\t\t\t\tcolor: color\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\t\t\tif (isCanvasSupported)\r\n\t\t\t\tghostCtx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tRenderHelper.drawMarkers(markers);\r\n\tctx.restore();\r\n\r\n\tctx.beginPath();\r\n\r\n\tif (isCanvasSupported)\r\n\t\tghostCtx.beginPath();\r\n\r\n\t//source and dest would be same when animation is not enabled\r\n\tvar animationInfo = {\r\n\t\tsource: ctx, dest: this.plotArea.ctx, animationCallback: AnimationHelper.xClipAnimation, easingFunction: AnimationHelper.easing.linear, animationBase: 0\r\n\t};\r\n\treturn animationInfo;\r\n}\r\n\r\nChart.prototype.animationRequestId = null;\r\n\r\nChart.prototype.requestAnimFrame = (function () {\r\n\treturn window.requestAnimationFrame ||\r\n\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\twindow.oRequestAnimationFrame ||\r\n\t\t\twindow.msRequestAnimationFrame ||\r\n\t\t\tfunction (callback) {\r\n\t\t\t\twindow.setTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n})();\r\n\r\nChart.prototype.cancelRequestAnimFrame = (function () {\r\n\treturn window.cancelAnimationFrame ||\r\n\t\twindow.webkitCancelRequestAnimationFrame ||\r\n\t\twindow.mozCancelRequestAnimationFrame ||\r\n\t\twindow.oCancelRequestAnimationFrame ||\r\n\t\twindow.msCancelRequestAnimationFrame ||\r\n\t\tclearTimeout\r\n})();\r\n\r\nChart.prototype.getPercentAndTotal = function (ds, dp) {\r\n\r\n\tvar dpX = null;\r\n\tvar total = null;\r\n\tvar percent = null;\r\n\r\n\tif (ds.type.indexOf(\"stacked\") >= 0) {\r\n\t\ttotal = 0;\r\n\t\tdpX = dp.x.getTime ? dp.x.getTime() : dp.x;\r\n\t\tif (dpX in ds.plotUnit.yTotals) {\r\n\t\t\ttotal = ds.plotUnit.yTotals[dpX];\r\n\r\n\t\t\tif (!isNaN(dp.y)) {\r\n\t\t\t    if (total === 0)\r\n\t\t\t        percent = 0;\r\n                  else\r\n\t\t\t        percent = (dp.y / total) * 100;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t    percent = 0;\r\n\t\t}\r\n\t} else if (ds.type === \"pie\" || ds.type === \"doughnut\") {\r\n\t\ttotal = 0;\r\n\t\tfor (var i = 0; i < ds.dataPoints.length; i++) {\r\n\r\n\t\t\tif (!isNaN(ds.dataPoints[i].y))\r\n\t\t\t\ttotal += ds.dataPoints[i].y;\r\n\t\t}\r\n\r\n\t\tif (!isNaN(dp.y))\r\n\t\t\tpercent = (dp.y / total) * 100;\r\n\t\telse\r\n\t\t\tpercent = 0;\r\n\t}\r\n\r\n\treturn {\r\n\t\tpercent: percent, total: total\r\n\t};\r\n}\r\n\r\nChart.prototype.replaceKeywordsWithValue = function (str, dp, ds, dpIndex, indexKeywordValue) {\r\n\t//var regex = /\\{\\s*[a-zA-Z]+\\s*\\}|\"[^\"]*\"|'[^']*'/g;\r\n\tvar regex = /\\{.*?\\}|\"[^\"]*\"|'[^']*'/g;\r\n\tvar chart = this;\r\n\tindexKeywordValue = typeof (indexKeywordValue) === \"undefined\" ? 0 : indexKeywordValue;\r\n\r\n\tif ((ds.type.indexOf(\"stacked\") >= 0 || (ds.type === \"pie\" || ds.type === \"doughnut\")) && (str.indexOf(\"#percent\") >= 0 || str.indexOf(\"#total\") >= 0)) {\r\n\t\tvar percent = \"#percent\";\r\n\t\tvar total = \"#total\";\r\n\t\tvar dpX = null;\r\n\r\n\t\tvar percentAndTotal = this.getPercentAndTotal(ds, dp);\r\n\r\n\t\ttotal = isNaN(percentAndTotal.total) ? total : percentAndTotal.total;\r\n\t\tpercent = isNaN(percentAndTotal.percent) ? percent : percentAndTotal.percent;\r\n\r\n\t\tdo {\r\n\t\t\tvar percentFormatString = \"\";\r\n\t\t\tif (ds.percentFormatString)\r\n\t\t\t\tpercentFormatString = ds.percentFormatString;\r\n\t\t\telse {\r\n\t\t\t\tpercentFormatString = \"#,##0.\";\r\n\t\t\t\tvar numberOfDecimals = Math.max(Math.ceil(Math.log(1 / Math.abs(percent)) / Math.LN10), 2);\r\n\r\n\t\t\t\tif (isNaN(numberOfDecimals) || !isFinite(numberOfDecimals))\r\n\t\t\t\t\tnumberOfDecimals = 2;\r\n\r\n\t\t\t\tfor (var n = 0; n < numberOfDecimals; n++) {\r\n\t\t\t\t\tpercentFormatString += \"#\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstr = str.replace(\"#percent\", numberFormat(percent, percentFormatString, chart._cultureInfo));\r\n\t\t\tstr = str.replace(\"#total\", numberFormat(total, ds.yValueFormatString ? ds.yValueFormatString : \"#,##0.########\"));\r\n\t\t} while (str.indexOf(\"#percent\") >= 0 || str.indexOf(\"#total\") >= 0);\r\n\t}\r\n\r\n\r\n\tvar fcn = function ($0) {\r\n\t\tif (($0[0] === \"\\\"\" && $0[$0.length - 1] === \"\\\"\") || ($0[0] === \"\\'\" && $0[$0.length - 1] === \"\\'\"))\r\n\t\t\treturn $0.slice(1, $0.length - 1);\r\n\r\n\t\tvar key = trimString($0.slice(1, $0.length - 1));\r\n\t\tkey = key.replace(\"#index\", indexKeywordValue);\r\n\r\n\t\tvar index = null;\r\n\r\n\t\ttry {\r\n\t\t\tvar match = key.match(/(.*?)\\s*\\[\\s*(.*?)\\s*\\]/);\r\n\t\t\tif (match && match.length > 0) {\r\n\t\t\t\tindex = trimString(match[2]);\r\n\t\t\t\tkey = trimString(match[1]);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t};\r\n\r\n\r\n\t\tvar obj = null;\r\n\r\n\t\tif (key === \"color\") {\r\n\t\t\treturn dp.color ? dp.color : ds.color ? ds.color : ds._colorSet[dpIndex % ds._colorSet.length];\r\n\t\t}\r\n\r\n\t\tif (dp.hasOwnProperty(key))\r\n\t\t\tobj = dp;\r\n\t\telse if (ds.hasOwnProperty(key))\r\n\t\t\tobj = ds;\r\n\t\telse return \"\";\r\n\r\n\t\tvar value = obj[key];\r\n\t\tif (index !== null)\r\n\t\t\tvalue = value[index];\r\n\r\n\t\tif (key === \"x\") {\r\n\t\t\tif (chart.axisX && chart.plotInfo.axisXValueType === \"dateTime\")\r\n\t\t\t\treturn dateFormat(value, dp.xValueFormatString ? dp.xValueFormatString : ds.xValueFormatString ? ds.xValueFormatString : chart.axisX && chart.axisX.valueFormatString ? chart.axisX.valueFormatString : \"DD MMM YY\", chart._cultureInfo);\r\n\t\t\telse\r\n\t\t\t\treturn numberFormat(value, dp.xValueFormatString ? dp.xValueFormatString : ds.xValueFormatString ? ds.xValueFormatString : \"#,##0.########\", chart._cultureInfo);\r\n\t\t} else if (key === \"y\")\r\n\t\t\treturn numberFormat(value, dp.yValueFormatString ? dp.yValueFormatString : ds.yValueFormatString ? ds.yValueFormatString : \"#,##0.########\", chart._cultureInfo);\r\n\t\telse if (key === \"z\")\r\n\t\t\treturn numberFormat(value, dp.zValueFormatString ? dp.zValueFormatString : ds.zValueFormatString ? ds.zValueFormatString : \"#,##0.########\", chart._cultureInfo);\r\n\t\telse\r\n\t\t\treturn value;\r\n\t}\r\n\r\n\treturn str.replace(regex, fcn);\r\n}\r\n\r\n\r\nChart.prototype.renderSpline = SplineChart;\r\n\r\nChart.prototype.renderColumn = ColumnChart\r\n\r\nChart.prototype.renderStackedColumn = StackedColumnChart;\r\n\r\nChart.prototype.renderStackedColumn100 = StackedColumn100Chart;\r\n\r\nChart.prototype.renderBar = BarChart;\r\n\r\nChart.prototype.renderStackedBar = StackedBarChart;\r\n\r\nChart.prototype.renderStackedBar100 = StackedBar100Chart;\r\n\r\nChart.prototype.renderArea = AreaChart;\r\n\r\nChart.prototype.renderSplineArea = SplineAreaChart;\r\n\r\nChart.prototype.renderStepArea = StepAreaChart;\r\n\r\nChart.prototype.renderStackedArea = StackedAreaChart;\r\n\r\nChart.prototype.renderStackedArea100 = StackedArea100Chart;\r\n\r\nChart.prototype.renderBubble = BubbleChart;\r\n\r\nChart.prototype.renderScatter = ScatterChart;\r\n\r\nChart.prototype.renderCandlestick = CandlestickChart;\r\n\r\nChart.prototype.renderRangeColumn = RangeColumnChart;\r\n\r\nChart.prototype.renderRangeBar = RangeBarChart;\r\n\r\nChart.prototype.renderRangeArea = RangeAreaChart;\r\n\r\nChart.prototype.renderRangeSplineArea = RangeSplineAreaChart;\r\n\r\nChart.prototype.renderPie = PieChart;\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}