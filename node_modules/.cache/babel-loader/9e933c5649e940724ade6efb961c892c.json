{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\isoControlGroupLineIdDataTable\\\\isoControlGroupLineIdDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IsoControlGroupLineIdDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      displayData: [],\n      filterData: [\"\", \"\", \"\"],\n      tab: this.props.currentTab,\n      role: this.props.currentRole,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      filters: []\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }, this),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id.props.children);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }); //this.setState({ selectedRows: selectedRows });\n\n      this.props.onChange(ids);\n    };\n  }\n\n  unlock(filename) {\n    this.props.unlock(filename);\n  }\n\n  rename(newName, oldName) {\n    this.props.rename(newName, oldName);\n  }\n\n  componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/isoControlGroupLineId\", options).then(response => response.json()).then(async json => {\n      for (let i = 0; i < json.rows.length; i++) {\n        if (i % 2 === 0) {\n          json.rows[i].color = \"#fff\";\n        } else {\n          json.rows[i].color = \"#eee\";\n        }\n      }\n\n      let filterRow = [{\n        key: 0,\n        line_id: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Code\",\n            onChange: e => this.filter(0, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 43\n        }, this),\n        name: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Type\",\n            onChange: e => this.filter(1, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 181\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 176\n        }, this),\n        weight: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Weight\",\n            onChange: e => this.filter(2, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 316\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 311\n        }, this)\n      }];\n      this.setState({\n        data: json.rows,\n        displayData: json.rows\n      });\n      await this.setState({\n        filters: filterRow\n      });\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Line ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'line_id',\n      key: 'line_id',\n      ...this.getColumnSearchProps('line_id'),\n      sorter: {\n        compare: (a, b) => {\n          return a.line_id.localeCompare(b.line_id);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"ITEMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'num',\n      key: 'num',\n      ...this.getColumnSearchProps('num'),\n      sorter: {\n        compare: (a, b) => a.num.localeCompare(b.num)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Total weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'total_weight',\n      key: 'total_weight',\n      ...this.getColumnSearchProps('total_weight'),\n      sorter: {\n        compare: (a, b) => a.total_weight.localeCompare(b.total_weight)\n      }\n    }];\n    var totalElements = null;\n\n    if (this.state.data.length === 0) {\n      totalElements = null;\n    } else {\n      totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.data,\n          scroll: {\n            y: 437\n          },\n          pagination: {\n            disabled: true,\n            defaultPageSize: 5000\n          },\n          size: \"small\",\n          rowClassName: record => record.color.replace('#', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default IsoControlGroupLineIdDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/isoControlGroupLineIdDataTable/isoControlGroupLineIdDataTable.js"],"names":["React","Table","Input","Button","Space","SearchOutlined","IsoControlGroupLineIdDataTable","Component","state","searchText","searchedColumn","data","displayData","filterData","tab","props","currentTab","role","currentRole","selectedRows","selectedRowsKeys","updateData","username","acronyms","filters","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","onSelectChange","selectedRowKeys","ids","i","length","push","id","children","onChange","unlock","filename","rename","newName","oldName","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","filterRow","key","line_id","filter","name","weight","columns","title","sorter","compare","a","b","localeCompare","num","total_weight","totalElements","position","bottom","left","y","disabled","defaultPageSize","replace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,KAA/B,QAA4C,MAA5C;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;AAEA,MAAMC,8BAAN,SAA6CN,KAAK,CAACO,SAAnD,CAA4D;AAAA;AAAA;AAAA,SAC1DC,KAD0D,GAClD;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,cAAc,EAAE,EAFV;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CALN;AAMNC,MAAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,UANV;AAONC,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,WAPX;AAQNC,MAAAA,YAAY,EAAE,EARR;AASNC,MAAAA,gBAAgB,EAAE,EATZ;AAUNC,MAAAA,UAAU,EAAE,KAAKN,KAAL,CAAWM,UAVjB;AAWNC,MAAAA,QAAQ,EAAE,EAXJ;AAYNC,MAAAA,QAAQ,EAAG,IAZL;AAaNC,MAAAA,OAAO,EAAE;AAbH,KADkD;;AAAA,SAqD1DC,oBArD0D,GAqDnCC,SAAS,KAAK;AACnCC,MAAAA,cAAc,EAAE,CAAC;AAAEC,QAAAA,eAAF;AAAmBC,QAAAA,YAAnB;AAAiCC,QAAAA,OAAjC;AAA0CC,QAAAA;AAA1C,OAAD,kBACd;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,GAAG,EAAEC,IAAI,IAAI;AACX,iBAAKC,WAAL,GAAmBD,IAAnB;AACD,WAHH;AAIE,UAAA,WAAW,EAAG,UAASP,SAAU,EAJnC;AAKE,UAAA,KAAK,EAAEG,YAAY,CAAC,CAAD,CALrB;AAME,UAAA,QAAQ,EAAEM,CAAC,IAAIP,eAAe,CAACO,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,CAACF,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,GAAoC,EAArC,CANhC;AAOE,UAAA,YAAY,EAAE,MAAM,KAAKC,YAAL,CAAkBT,YAAlB,EAAgCC,OAAhC,EAAyCJ,SAAzC,CAPtB;AAQE,UAAA,KAAK,EAAE;AAAEa,YAAAA,KAAK,EAAE,GAAT;AAAcC,YAAAA,YAAY,EAAE,CAA5B;AAA+BC,YAAAA,OAAO,EAAE;AAAxC;AART;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,KAAD;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,SADP;AAEE,YAAA,OAAO,EAAE,MAAM,KAAKH,YAAL,CAAkBT,YAAlB,EAAgCC,OAAhC,EAAyCJ,SAAzC,CAFjB;AAGE,YAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,oBAHR;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,KAAK,EAAE;AAAEa,cAAAA,KAAK,EAAE;AAAT,aALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKG,WAAL,CAAiBX,YAAjB,CAAvB;AAAuD,YAAA,IAAI,EAAC,OAA5D;AAAoE,YAAA,KAAK,EAAE;AAAEQ,cAAAA,KAAK,EAAE;AAAT,aAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAaE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,OAAO,EAAE,MAAM;AACbT,cAAAA,OAAO,CAAC;AAAEa,gBAAAA,aAAa,EAAE;AAAjB,eAAD,CAAP;AACA,mBAAKC,QAAL,CAAc;AACZnC,gBAAAA,UAAU,EAAEoB,YAAY,CAAC,CAAD,CADZ;AAEZnB,gBAAAA,cAAc,EAAEgB;AAFJ,eAAd;AAID,aATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFiC;AA0CnCmB,MAAAA,UAAU,EAAEC,QAAQ,iBAAI,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAED,QAAQ,GAAG,SAAH,GAAeE;AAAhC;AAAvB;AAAA;AAAA;AAAA;AAAA,cA1CW;AA2CnCC,MAAAA,QAAQ,EAAE,CAACZ,KAAD,EAAQa,MAAR,KAINA,MAAM,CAACxB,SAAD,CAAN,CAAkByB,QAAlB,GAA6BC,WAA7B,GAA2CC,QAA3C,CAAoDhB,KAAK,CAACe,WAAN,EAApD,CA/C+B;AAmDnCE,MAAAA,6BAA6B,EAAEC,OAAO,IAAI;AACxC,YAAIA,OAAJ,EAAa;AACXC,UAAAA,UAAU,CAAC,MAAM,KAAKtB,WAAL,CAAiBuB,MAAjB,EAAP,EAAkC,GAAlC,CAAV;AACD;AACF,OAvDkC;AAwDnCC,MAAAA,MAAM,EAAEC,IAAI,IAEVA;AA1DiC,KAAL,CArD0B;;AAAA,SAoH1DrB,YApH0D,GAoH3C,CAACT,YAAD,EAAeC,OAAf,EAAwBJ,SAAxB,KAAsC;AACnDI,MAAAA,OAAO;AACP,WAAKc,QAAL,CAAc;AACZnC,QAAAA,UAAU,EAAEoB,YAAY,CAAC,CAAD,CADZ;AAEZnB,QAAAA,cAAc,EAAEgB;AAFJ,OAAd;AAID,KA1HyD;;AAAA,SA4H1DgB,WA5H0D,GA4H5CX,YAAY,IAAI;AAC5BA,MAAAA,YAAY;AACZ,WAAKa,QAAL,CAAc;AAAEnC,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KA/HyD;;AAAA,SAiI1DmD,cAjI0D,GAiIzC,CAACC,eAAD,EAAkB1C,YAAlB,KAAmC;AAClD,UAAI2C,GAAG,GAAG,EAAV;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG5C,YAAY,CAAC6C,MAAhC,EAAwCD,CAAC,EAAzC,EAA4C;AAC1CD,QAAAA,GAAG,CAACG,IAAJ,CAAS9C,YAAY,CAAC4C,CAAD,CAAZ,CAAgBG,EAAhB,CAAmBnD,KAAnB,CAAyBoD,QAAlC;AACD;;AACD,WAAKvB,QAAL,CAAc;AACZxB,QAAAA,gBAAgB,EAAEyC,eADN;AAEZ1C,QAAAA,YAAY,EAAEA;AAFF,OAAd,EALkD,CASlD;;AACA,WAAKJ,KAAL,CAAWqD,QAAX,CAAoBN,GAApB;AAED,KA7IyD;AAAA;;AAiB1DO,EAAAA,MAAM,CAACC,QAAD,EAAU;AACd,SAAKvD,KAAL,CAAWsD,MAAX,CAAkBC,QAAlB;AACD;;AAEDC,EAAAA,MAAM,CAACC,OAAD,EAAUC,OAAV,EAAkB;AACtB,SAAK1D,KAAL,CAAWwD,MAAX,CAAkBC,OAAlB,EAA2BC,OAA3B;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFG,KAAhB;AAMAC,IAAAA,KAAK,CAAC,YAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAtB,GAAuC,GAAvC,GAA2CF,OAAO,CAACC,GAAR,CAAYE,mBAAvD,GAA2E,wBAA5E,EAAsGP,OAAtG,CAAL,CACCQ,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEM,MAAME,IAAN,IAAa;AACf,WAAI,IAAItB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGsB,IAAI,CAACC,IAAL,CAAUtB,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACrC,YAAGA,CAAC,GAAG,CAAJ,KAAU,CAAb,EAAe;AACXsB,UAAAA,IAAI,CAACC,IAAL,CAAUvB,CAAV,EAAahB,KAAb,GAAqB,MAArB;AACH,SAFD,MAEK;AACDsC,UAAAA,IAAI,CAACC,IAAL,CAAUvB,CAAV,EAAahB,KAAb,GAAqB,MAArB;AACH;AACJ;;AACD,UAAIwC,SAAS,GAAG,CAAC;AAACC,QAAAA,GAAG,EAAC,CAAL;AAAQC,QAAAA,OAAO,eAAE;AAAA,iCAAK;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,eAA7B;AAA6C,YAAA,WAAW,EAAC,MAAzD;AAAgE,YAAA,QAAQ,EAAGtD,CAAD,IAAO,KAAKuD,MAAL,CAAY,CAAZ,EAAevD,CAAC,CAACC,MAAF,CAASC,KAAxB;AAAjF;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAjB;AAAgJsD,QAAAA,IAAI,eAAE;AAAA,iCAAK;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,eAA7B;AAA6C,YAAA,WAAW,EAAC,MAAzD;AAAgE,YAAA,QAAQ,EAAGxD,CAAD,IAAO,KAAKuD,MAAL,CAAY,CAAZ,EAAevD,CAAC,CAACC,MAAF,CAASC,KAAxB;AAAjF;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAtJ;AAAqRuD,QAAAA,MAAM,eAAE;AAAA,iCAAK;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,eAA7B;AAA6C,YAAA,WAAW,EAAC,QAAzD;AAAkE,YAAA,QAAQ,EAAGzD,CAAD,IAAO,KAAKuD,MAAL,CAAY,CAAZ,EAAcvD,CAAC,CAACC,MAAF,CAASC,KAAvB;AAAnF;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAA7R,OAAD,CAAhB;AAEA,WAAKO,QAAL,CAAc;AAACjC,QAAAA,IAAI,EAAG0E,IAAI,CAACC,IAAb;AAAmB1E,QAAAA,WAAW,EAAEyE,IAAI,CAACC;AAArC,OAAd;AACA,YAAM,KAAK1C,QAAL,CAAc;AAACpB,QAAAA,OAAO,EAAG+D;AAAX,OAAd,CAAN;AACH,KAdD;AAkBD;;AA8FD7B,EAAAA,MAAM,GAAG;AAEP,UAAMmC,OAAO,GAAG,CACd;AACEC,MAAAA,KAAK,eAAE;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADT;AAEEpE,MAAAA,SAAS,EAAE,SAFb;AAGE8D,MAAAA,GAAG,EAAE,SAHP;AAIE,SAAG,KAAK/D,oBAAL,CAA0B,SAA1B,CAJL;AAKEsE,MAAAA,MAAM,EAAC;AACLC,QAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAE,iBAAOD,CAAC,CAACR,OAAF,CAAUU,aAAV,CAAwBD,CAAC,CAACT,OAA1B,CAAP;AAA0C;AAD1D;AALT,KADc,EAUd;AACEK,MAAAA,KAAK,eAAE;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADT;AAEEpE,MAAAA,SAAS,EAAE,KAFb;AAGE8D,MAAAA,GAAG,EAAE,KAHP;AAIE,SAAG,KAAK/D,oBAAL,CAA0B,KAA1B,CAJL;AAKEsE,MAAAA,MAAM,EAAC;AACLC,QAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,GAAF,CAAMD,aAAN,CAAoBD,CAAC,CAACE,GAAtB;AADd;AALT,KAVc,EAmBd;AACEN,MAAAA,KAAK,eAAE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADT;AAEEpE,MAAAA,SAAS,EAAE,cAFb;AAGE8D,MAAAA,GAAG,EAAE,cAHP;AAIE,SAAG,KAAK/D,oBAAL,CAA0B,cAA1B,CAJL;AAKEsE,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,YAAF,CAAeF,aAAf,CAA6BD,CAAC,CAACG,YAA/B;AADb;AALV,KAnBc,CAAhB;AAgCA,QAAIC,aAAa,GAAG,IAApB;;AACA,QAAI,KAAK9F,KAAL,CAAWG,IAAX,CAAgBqD,MAAhB,KAA2B,CAA/B,EAAiC;AAC/BsC,MAAAA,aAAa,GAAG,IAAhB;AACD,KAFD,MAEK;AACHA,MAAAA,aAAa,gBAAI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,MAAM,EAAE,EAA/B;AAAmCC,UAAAA,IAAI,EAAC;AAAxC,SAAZ;AAAA,+BACjB;AAAA,yCAAoB,KAAKjG,KAAL,CAAWG,IAAX,CAAgBqD,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AADiB;AAAA;AAAA;AAAA;AAAA,cAAjB;AAGD;;AAED,wBACE;AAAA,iBACG,KAAKxD,KAAL,CAAWa,UADd,eAEE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACA,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,aAAjB;AAA+B,UAAA,QAAQ,EAAI,IAA3C;AAAiD,UAAA,OAAO,EAAEwE,OAA1D;AAAmE,UAAA,UAAU,EAAE,KAAKrF,KAAL,CAAWG,IAA1F;AAAgG,UAAA,MAAM,EAAE;AAAC+F,YAAAA,CAAC,EAAC;AAAH,WAAxG;AAAkH,UAAA,UAAU,EAAE;AAACC,YAAAA,QAAQ,EAAC,IAAV;AAAgBC,YAAAA,eAAe,EAAC;AAAhC,WAA9H;AAAqK,UAAA,IAAI,EAAC,OAA1K;AAAkL,UAAA,YAAY,EAAI1D,MAAD,IAAYA,MAAM,CAACH,KAAP,CAAa8D,OAAb,CAAqB,GAArB,EAA0B,EAA1B;AAA7M;AAAA;AAAA;AAAA;AAAA,gBADA,EAEGP,aAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AArMyD;;AAwM5D,eAAehG,8BAAf","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nclass IsoControlGroupLineIdDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    displayData: [],\r\n    filterData: [\"\", \"\", \"\"],\r\n    tab: this.props.currentTab,\r\n    role: this.props.currentRole,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    filters: []\r\n  };\r\n\r\n  unlock(filename){\r\n    this.props.unlock(filename)\r\n  }\r\n\r\n  rename(newName, oldName){\r\n    this.props.rename(newName, oldName)\r\n  }\r\n\r\n  componentDidMount(){\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/isoControlGroupLineId\", options)\r\n    .then(response => response.json())\r\n    .then(async json =>{\r\n        for(let i = 0; i < json.rows.length; i++){\r\n            if(i % 2 === 0){\r\n                json.rows[i].color = \"#fff\"\r\n            }else{\r\n                json.rows[i].color = \"#eee\"\r\n            }\r\n        }\r\n        let filterRow = [{key:0, line_id: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Code\" onChange={(e) => this.filter(0, e.target.value)}/></div>, name: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Type\" onChange={(e) => this.filter(1, e.target.value)}/></div>, weight: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Weight\" onChange={(e) => this.filter(2,e.target.value)}/></div>}]\r\n             \r\n        this.setState({data : json.rows, displayData: json.rows});\r\n        await this.setState({filters : filterRow})\r\n    })\r\n\r\n    \r\n        \r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n\r\n\r\n      \r\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n          \r\n\r\n\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n    \r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Line ID</center>,\r\n        dataIndex: 'line_id',\r\n        key: 'line_id',\r\n        ...this.getColumnSearchProps('line_id'),\r\n        sorter:{\r\n          compare: (a, b) => { return a.line_id.localeCompare(b.line_id)},\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">ITEMS</center>,\r\n        dataIndex: 'num',\r\n        key: 'num',\r\n        ...this.getColumnSearchProps('num'),\r\n        sorter:{\r\n          compare: (a, b) => a.num.localeCompare(b.num),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Total weight</div>,\r\n        dataIndex: 'total_weight',\r\n        key: 'total_weight',\r\n        ...this.getColumnSearchProps('total_weight'),\r\n        sorter: {\r\n          compare: (a, b) => a.total_weight.localeCompare(b.total_weight),\r\n        },\r\n      },\r\n    ];\r\n\r\n    \r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} columns={columns} dataSource={this.state.data} scroll={{y:437}}  pagination={{disabled:true, defaultPageSize:5000}} size=\"small\" rowClassName= {(record) => record.color.replace('#', '')}/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IsoControlGroupLineIdDataTable;"]},"metadata":{},"sourceType":"module"}