{"ast":null,"code":"import _regeneratorRuntime from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Modal from'react-awesome-modal';import'../uploadReportPopUp/uploadReportPopUp.css';import readXlsxFile from'read-excel-file';import{readString}from'react-papaparse';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UploadElectricalModelledPopUp=/*#__PURE__*/function(_Component){_inherits(UploadElectricalModelledPopUp,_Component);var _super=_createSuper(UploadElectricalModelledPopUp);function UploadElectricalModelledPopUp(props){var _this;_classCallCheck(this,UploadElectricalModelledPopUp);_this=_super.call(this,props);_this.state={visible:false,file:null,error:false};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.uploadReport=_this.uploadReport.bind(_assertThisInitialized(_this));_this.id=props.id;return _this;}_createClass(UploadElectricalModelledPopUp,[{key:\"openModal\",value:function openModal(){this.setState({visible:true,error:false,file:null});}},{key:\"closeModal\",value:function closeModal(){document.getElementById(\"fileToUpload\").value=null;this.setState({visible:false,file:null});}},{key:\"handleChange\",value:function handleChange(event){this.setState({file:event.target.files[0]});}},{key:\"uploadReport\",value:function uploadReport(event){var _this2=this;event.preventDefault();this.props.setUploading(true);if(this.state.file.name.substring(this.state.file.name.length-4,this.state.file.name.length)===\"xlsx\"){readXlsxFile(this.state.file).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(rows){var options;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:options={method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(rows)};_context2.next=3;return fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/uploadElecModelledReport\",options).then(function(response){return response.json();}).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(json){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(json.invalid){_this2.props.setErrorReportData(json.invalid);}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}());case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref.apply(this,arguments);};}());}else{var reader=new FileReader();reader.onload=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var csv,options;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:csv=reader.result;options={method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(readString(csv).data)};_context4.next=4;return fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/uploadElecModelledReport\",options).then(function(response){return response.json();}).then(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(json){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(json.invalid){_this2.props.setErrorReportData(json.invalid);}case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref4.apply(this,arguments);};}());case 4:case\"end\":return _context4.stop();}}},_callee4);}));reader.readAsText(this.state.file);}this.closeModal();this.props.setUploading(false);}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsxs(\"section\",{style:{float:\"left\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Upload delecs\",style:{marginTop:\"10px\",marginLeft:\"10px\",height:\"150px\",width:\"150px\"},className:\"btn btn-bg btn-info\",onClick:function onClick(){return _this3.openModal();}}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Modal,{visible:this.state.visible,width:\"650\",height:\"180\",effect:\"fadeInUp\",onClickAway:function onClickAway(){return _this3.closeModal();},children:[/*#__PURE__*/_jsx(\"div\",{className:\"popUp__container\",children:/*#__PURE__*/_jsx(\"center\",{className:\"popUp__title\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Upload your modelled electrical report\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"select__container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.uploadReport,children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"fileToUpload\",id:\"fileToUpload\",onChange:this.handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",style:{marginLeft:\"10px\"},className:\"btn btn-sm btn-success\",value:\"Upload\"})]})})]})})]});}}]);return UploadElectricalModelledPopUp;}(Component);export{UploadElectricalModelledPopUp as default};","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/uploadElectricalModelledPopUp/uploadElectricalModelledPopUp.js"],"names":["React","Component","Modal","readXlsxFile","readString","UploadElectricalModelledPopUp","props","state","visible","file","error","handleChange","bind","uploadReport","id","setState","document","getElementById","value","event","target","files","preventDefault","setUploading","name","substring","length","then","rows","options","method","headers","body","JSON","stringify","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","response","json","invalid","setErrorReportData","reader","FileReader","onload","csv","result","data","readAsText","closeModal","float","marginTop","marginLeft","height","width","openModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport '../uploadReportPopUp/uploadReportPopUp.css'\r\nimport readXlsxFile from 'read-excel-file'\r\nimport { readString } from 'react-papaparse'\r\n\r\nexport default class UploadElectricalModelledPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false,\r\n            file: null,\r\n            error: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.uploadReport = this.uploadReport.bind(this);\r\n        this.id = props.id;\r\n    }\r\n   \r\n\r\n    openModal() {      \r\n        this.setState({\r\n            visible : true,\r\n            error: false,\r\n            file: null\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        document.getElementById(\"fileToUpload\").value = null\r\n        this.setState({\r\n            visible : false,\r\n            file: null,\r\n        });\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({file: event.target.files[0]})\r\n    }\r\n\r\n    uploadReport(event){\r\n        event.preventDefault()\r\n        this.props.setUploading(true)\r\n\r\n        if(this.state.file.name.substring(this.state.file.name.length-4, this.state.file.name.length) === \"xlsx\"){\r\n            readXlsxFile(this.state.file).then(async(rows) => {\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(rows)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/uploadElecModelledReport\", options)\r\n                .then(response => response.json())\r\n                .then(async json =>{\r\n                    if(json.invalid){\r\n                        this.props.setErrorReportData(json.invalid)\r\n                    }\r\n                })\r\n            })\r\n        }else{\r\n            let reader = new FileReader();\r\n            reader.onload = async() =>{\r\n                const csv = reader.result\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(readString(csv).data)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/uploadElecModelledReport\", options)\r\n                .then(response => response.json())\r\n                .then(async json =>{\r\n                    if(json.invalid){\r\n                        this.props.setErrorReportData(json.invalid)\r\n                    }\r\n                })\r\n            }\r\n            reader.readAsText(this.state.file)\r\n        }\r\n        this.closeModal()\r\n        this.props.setUploading(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section style={{float:\"left\"}}>\r\n                <input type=\"button\"  value=\"Upload delecs\" style={{marginTop:\"10px\",marginLeft:\"10px\", height:\"150px\", width:\"150px\"}} className=\"btn btn-bg btn-info\"  onClick={() => this.openModal()} />\r\n                <div>\r\n                    <Modal visible={this.state.visible} width=\"650\" height=\"180\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                        <div className=\"popUp__container\" >\r\n                            <center className=\"popUp__title\"><h2>Upload your modelled electrical report</h2></center>\r\n                                \r\n                        </div>\r\n                        <div className=\"select__container\">\r\n                            <form onSubmit={this.uploadReport}>\r\n                                <input type=\"file\" name=\"fileToUpload\" id=\"fileToUpload\" onChange={this.handleChange}/>\r\n                                <input type=\"submit\" style={{marginLeft:\"10px\"}} className=\"btn btn-sm btn-success\" value=\"Upload\"/>\r\n                            </form>\r\n                        </div> \r\n\r\n                        \r\n                    </Modal>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}