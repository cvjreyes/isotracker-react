{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach, arrayFilter } from \"../../helpers/array.mjs\";\nimport { cancelAnimationFrame, requestAnimationFrame } from \"../../helpers/feature.mjs\";\nimport { isVisible } from \"../../helpers/dom/element.mjs\";\nimport GhostTable from \"../../utils/ghostTable.mjs\";\nimport { isObject, hasOwnProperty } from \"../../helpers/object.mjs\";\nimport { valueAccordingPercent, rangeEach } from \"../../helpers/number.mjs\";\nimport SamplesGenerator from \"../../utils/samplesGenerator.mjs\";\nimport { isPercentValue } from \"../../helpers/string.mjs\";\nimport { PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nexport var PLUGIN_KEY = 'autoRowSize';\nexport var PLUGIN_PRIORITY = 40;\nvar ROW_WIDTHS_MAP_NAME = 'autoRowSize';\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\r\n * @plugin AutoRowSize\r\n * @class AutoRowSize\r\n * @description\r\n * This plugin allows to set row heights based on their highest cells.\r\n *\r\n * By default, the plugin is declared as `undefined`, which makes it disabled (same as if it was declared as `false`).\r\n * Enabling this plugin may decrease the overall table performance, as it needs to calculate the heights of all cells to\r\n * resize the rows accordingly.\r\n * If you experience problems with the performance, try turning this feature off and declaring the row heights manually.\r\n *\r\n * Row height calculations are divided into sync and async part. Each of this parts has their own advantages and\r\n * disadvantages. Synchronous calculations are faster but they block the browser UI, while the slower asynchronous\r\n * operations don't block the browser UI.\r\n *\r\n * To configure the sync/async distribution, you can pass an absolute value (number of columns) or a percentage value to a config object:\r\n * ```js\r\n * // as a number (300 columns in sync, rest async)\r\n * autoRowSize: {syncLimit: 300},.\r\n *\r\n * // as a string (percent)\r\n * autoRowSize: {syncLimit: '40%'},.\r\n *\r\n * // allow sample duplication\r\n * autoRowSize: {syncLimit: '40%', allowSampleDuplicates: true},\r\n * ```\r\n *\r\n * You can also use the `allowSampleDuplicates` option to allow sampling duplicate values when calculating the row\r\n * height. __Note__, that this might have a negative impact on performance.\r\n *\r\n * To configure this plugin see {@link Options#autoRowSize}.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const hot = new Handsontable(document.getElementById('example'), {\r\n *   data: getData(),\r\n *   autoRowSize: true\r\n * });\r\n * // Access to plugin instance:\r\n * const plugin = hot.getPlugin('autoRowSize');\r\n *\r\n * plugin.getRowHeight(4);\r\n *\r\n * if (plugin.isEnabled()) {\r\n *   // code...\r\n * }\r\n * ```\r\n */\n\n/* eslint-enable jsdoc/require-description-complete-sentence */\n\nexport var AutoRowSize = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(AutoRowSize, _BasePlugin);\n\n  var _super = _createSuper(AutoRowSize);\n\n  function AutoRowSize(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, AutoRowSize);\n\n    _this = _super.call(this, hotInstance);\n    /**\r\n     * PhysicalIndexToValueMap to keep and track heights for physical row indexes.\r\n     *\r\n     * @private\r\n     * @type {PhysicalIndexToValueMap}\r\n     */\n\n    _this.rowHeightsMap = void 0;\n    /**\r\n     * Columns header's height cache.\r\n     *\r\n     * @private\r\n     * @type {number}\r\n     */\n\n    _this.headerHeight = null;\n    /**\r\n     * Instance of {@link GhostTable} for rows and columns size calculations.\r\n     *\r\n     * @private\r\n     * @type {GhostTable}\r\n     */\n\n    _this.ghostTable = new GhostTable(_this.hot);\n    /**\r\n     * Instance of {@link SamplesGenerator} for generating samples necessary for rows height calculations.\r\n     *\r\n     * @private\r\n     * @type {SamplesGenerator}\r\n     */\n\n    _this.samplesGenerator = new SamplesGenerator(function (row, col) {\n      var cellValue;\n\n      if (row >= 0) {\n        cellValue = _this.hot.getDataAtCell(row, col);\n      } else if (row === -1) {\n        cellValue = _this.hot.getColHeader(col);\n      }\n\n      return {\n        value: cellValue\n      };\n    });\n    /**\r\n     * `true` if only the first calculation was performed.\r\n     *\r\n     * @private\r\n     * @type {boolean}\r\n     */\n\n    _this.firstCalculation = true;\n    /**\r\n     * `true` if the size calculation is in progress.\r\n     *\r\n     * @type {boolean}\r\n     */\n\n    _this.inProgress = false;\n    /**\r\n     * Number of already measured rows (we already know their sizes).\r\n     *\r\n     * @type {number}\r\n     */\n\n    _this.measuredRows = 0;\n    /**\r\n     * PhysicalIndexToValueMap to keep and track heights for physical row indexes.\r\n     *\r\n     * @private\r\n     * @type {PhysicalIndexToValueMap}\r\n     */\n\n    _this.rowHeightsMap = new IndexToValueMap();\n\n    _this.hot.rowIndexMapper.registerMap(ROW_WIDTHS_MAP_NAME, _this.rowHeightsMap); // Leave the listener active to allow auto-sizing the rows when the plugin is disabled.\n    // This is necesseary for height recalculation for resize handler doubleclick (ManualRowResize).\n\n\n    _this.addHook('beforeRowResize', function (size, row, isDblClick) {\n      return _this.onBeforeRowResize(size, row, isDblClick);\n    });\n\n    return _this;\n  }\n  /**\r\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\r\n   * hook and if it returns `true` than the {@link AutoRowSize#enablePlugin} method is called.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  _createClass(AutoRowSize, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var settings = this.hot.getSettings()[PLUGIN_KEY];\n      return settings === true || isObject(settings);\n    }\n    /**\r\n     * Enables the plugin functionality for this Handsontable instance.\r\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.setSamplingOptions();\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData();\n      });\n      this.addHook('beforeChange', function (changes) {\n        return _this2.onBeforeChange(changes);\n      });\n      this.addHook('beforeColumnResize', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeRender', function (force) {\n        return _this2.onBeforeRender(force);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.getRowHeight(row, height);\n      });\n      this.addHook('modifyColumnHeaderHeight', function () {\n        return _this2.getColumnHeaderHeight();\n      });\n\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\r\n     * Disables the plugin functionality for this Handsontable instance.\r\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      var _this3 = this;\n\n      this.headerHeight = null;\n\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"disablePlugin\", this).call(this); // Leave the listener active to allow auto-sizing the rows when the plugin is disabled.\n      // This is necesseary for height recalculation for resize handler doubleclick (ManualRowResize).\n\n\n      this.addHook('beforeRowResize', function (size, row, isDblClick) {\n        return _this3.onBeforeRowResize(size, row, isDblClick);\n      });\n    }\n    /**\r\n     * Calculate a given rows height.\r\n     *\r\n     * @param {number|object} rowRange Row index or an object with `from` and `to` indexes as a range.\r\n     * @param {number|object} colRange Column index or an object with `from` and `to` indexes as a range.\r\n     * @param {boolean} [force=false] If `true` the calculation will be processed regardless of whether the width exists in the cache.\r\n     */\n\n  }, {\n    key: \"calculateRowsHeight\",\n    value: function calculateRowsHeight() {\n      var _this4 = this;\n\n      var rowRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countRows() - 1\n      };\n      var colRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; // eslint-disable-line max-len\n\n      var rowsRange = typeof rowRange === 'number' ? {\n        from: rowRange,\n        to: rowRange\n      } : rowRange;\n      var columnsRange = typeof colRange === 'number' ? {\n        from: colRange,\n        to: colRange\n      } : colRange;\n\n      if (this.hot.getColHeader(0) !== null) {\n        var samples = this.samplesGenerator.generateRowSamples(-1, columnsRange);\n        this.ghostTable.addColumnHeadersRow(samples.get(-1));\n      }\n\n      rangeEach(rowsRange.from, rowsRange.to, function (row) {\n        // For rows we must calculate row height even when user had set height value manually.\n        // We can shrink column but cannot shrink rows!\n        if (force || _this4.rowHeightsMap.getValueAtIndex(row) === null) {\n          var _samples = _this4.samplesGenerator.generateRowSamples(row, columnsRange);\n\n          arrayEach(_samples, function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                rowIndex = _ref2[0],\n                sample = _ref2[1];\n\n            return _this4.ghostTable.addRow(rowIndex, sample);\n          });\n        }\n      });\n\n      if (this.ghostTable.rows.length) {\n        this.hot.batchExecution(function () {\n          _this4.ghostTable.getHeights(function (row, height) {\n            if (row < 0) {\n              _this4.headerHeight = height;\n            } else {\n              _this4.rowHeightsMap.setValueAtIndex(_this4.hot.toPhysicalRow(row), height);\n            }\n          });\n        }, true);\n        this.measuredRows = rowsRange.to + 1;\n        this.ghostTable.clean();\n      }\n    }\n    /**\r\n     * Calculate all rows heights. The calculated row will be cached in the {@link AutoRowSize#heights} property.\r\n     * To retrieve height for specified row use {@link AutoRowSize#getRowHeight} method.\r\n     *\r\n     * @param {object|number} colRange Row index or an object with `from` and `to` properties which define row range.\r\n     */\n\n  }, {\n    key: \"calculateAllRowsHeight\",\n    value: function calculateAllRowsHeight() {\n      var _this5 = this;\n\n      var colRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var current = 0;\n      var length = this.hot.countRows() - 1;\n      var timer = null;\n      this.inProgress = true;\n\n      var loop = function loop() {\n        // When hot was destroyed after calculating finished cancel frame\n        if (!_this5.hot) {\n          cancelAnimationFrame(timer);\n          _this5.inProgress = false;\n          return;\n        }\n\n        _this5.calculateRowsHeight({\n          from: current,\n          to: Math.min(current + AutoRowSize.CALCULATION_STEP, length)\n        }, colRange);\n\n        current = current + AutoRowSize.CALCULATION_STEP + 1;\n\n        if (current < length) {\n          timer = requestAnimationFrame(loop);\n        } else {\n          cancelAnimationFrame(timer);\n          _this5.inProgress = false; // @TODO Should call once per render cycle, currently fired separately in different plugins\n\n          _this5.hot.view.adjustElementsSize(true); // tmp\n\n\n          if (_this5.hot.view.wt.wtOverlays.leftOverlay.needFullRender) {\n            _this5.hot.view.wt.wtOverlays.leftOverlay.clone.draw();\n          }\n        }\n      };\n\n      var syncLimit = this.getSyncCalculationLimit(); // sync\n\n      if (this.firstCalculation && syncLimit >= 0) {\n        this.calculateRowsHeight({\n          from: 0,\n          to: syncLimit\n        }, colRange);\n        this.firstCalculation = false;\n        current = syncLimit + 1;\n      } // async\n\n\n      if (current < length) {\n        loop();\n      } else {\n        this.inProgress = false;\n        this.hot.view.adjustElementsSize(false);\n      }\n    }\n    /**\r\n     * Sets the sampling options.\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"setSamplingOptions\",\n    value: function setSamplingOptions() {\n      var setting = this.hot.getSettings()[PLUGIN_KEY];\n      var samplingRatio = setting && hasOwnProperty(setting, 'samplingRatio') ? setting.samplingRatio : void 0;\n      var allowSampleDuplicates = setting && hasOwnProperty(setting, 'allowSampleDuplicates') ? setting.allowSampleDuplicates : void 0;\n\n      if (samplingRatio && !isNaN(samplingRatio)) {\n        this.samplesGenerator.setSampleCount(parseInt(samplingRatio, 10));\n      }\n\n      if (allowSampleDuplicates) {\n        this.samplesGenerator.setAllowDuplicates(allowSampleDuplicates);\n      }\n    }\n    /**\r\n     * Recalculates all rows height (overwrite cache values).\r\n     */\n\n  }, {\n    key: \"recalculateAllRowsHeight\",\n    value: function recalculateAllRowsHeight() {\n      if (isVisible(this.hot.view.wt.wtTable.TABLE)) {\n        this.clearCache();\n        this.calculateAllRowsHeight();\n      }\n    }\n    /**\r\n     * Gets value which tells how many rows should be calculated synchronously (rest of the rows will be calculated\r\n     * asynchronously). The limit is calculated based on `syncLimit` set to autoRowSize option (see {@link Options#autoRowSize}).\r\n     *\r\n     * @returns {number}\r\n     */\n\n  }, {\n    key: \"getSyncCalculationLimit\",\n    value: function getSyncCalculationLimit() {\n      var settings = this.hot.getSettings()[PLUGIN_KEY];\n      /* eslint-disable no-bitwise */\n\n      var limit = AutoRowSize.SYNC_CALCULATION_LIMIT;\n      var rowsLimit = this.hot.countRows() - 1;\n\n      if (isObject(settings)) {\n        limit = settings.syncLimit;\n\n        if (isPercentValue(limit)) {\n          limit = valueAccordingPercent(rowsLimit, limit);\n        } else {\n          // Force to Number\n          limit >>= 0;\n        }\n      }\n\n      return Math.min(limit, rowsLimit);\n    }\n    /**\r\n     * Gets the calculated row height.\r\n     *\r\n     * @param {number} row Visual row index.\r\n     * @param {number} [defaultHeight] Default row height. It will be picked up if no calculated height found.\r\n     * @returns {number}\r\n     */\n\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(row) {\n      var defaultHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : void 0;\n      var cachedHeight = row < 0 ? this.headerHeight : this.rowHeightsMap.getValueAtIndex(this.hot.toPhysicalRow(row));\n      var height = defaultHeight;\n\n      if (cachedHeight !== null && cachedHeight > (defaultHeight || 0)) {\n        height = cachedHeight;\n      }\n\n      return height;\n    }\n    /**\r\n     * Get the calculated column header height.\r\n     *\r\n     * @returns {number|undefined}\r\n     */\n\n  }, {\n    key: \"getColumnHeaderHeight\",\n    value: function getColumnHeaderHeight() {\n      return this.headerHeight;\n    }\n    /**\r\n     * Get the first visible row.\r\n     *\r\n     * @returns {number} Returns row index, -1 if table is not rendered or if there are no rows to base the the calculations on.\r\n     */\n\n  }, {\n    key: \"getFirstVisibleRow\",\n    value: function getFirstVisibleRow() {\n      var wot = this.hot.view.wt;\n\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getFirstVisibleRow();\n      }\n\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getFirstRenderedRow();\n      }\n\n      return -1;\n    }\n    /**\r\n     * Gets the last visible row.\r\n     *\r\n     * @returns {number} Returns row index or -1 if table is not rendered.\r\n     */\n\n  }, {\n    key: \"getLastVisibleRow\",\n    value: function getLastVisibleRow() {\n      var wot = this.hot.view.wt;\n\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getLastVisibleRow();\n      }\n\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getLastRenderedRow();\n      }\n\n      return -1;\n    }\n    /**\r\n     * Clears cached heights.\r\n     */\n\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.headerHeight = null;\n      this.rowHeightsMap.init();\n    }\n    /**\r\n     * Clears cache by range.\r\n     *\r\n     * @param {object|number} range Row index or an object with `from` and `to` properties which define row range.\r\n     */\n\n  }, {\n    key: \"clearCacheByRange\",\n    value: function clearCacheByRange(range) {\n      var _this6 = this;\n\n      var _ref3 = typeof range === 'number' ? {\n        from: range,\n        to: range\n      } : range,\n          from = _ref3.from,\n          to = _ref3.to;\n\n      this.hot.batchExecution(function () {\n        rangeEach(Math.min(from, to), Math.max(from, to), function (row) {\n          _this6.rowHeightsMap.setValueAtIndex(row, null);\n        });\n      }, true);\n    }\n    /**\r\n     * Checks if all heights were calculated. If not then return `true` (need recalculate).\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isNeedRecalculate\",\n    value: function isNeedRecalculate() {\n      return !!arrayFilter(this.rowHeightsMap.getValues().slice(0, this.measuredRows), function (item) {\n        return item === null;\n      }).length;\n    }\n    /**\r\n     * On before render listener.\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"onBeforeRender\",\n    value: function onBeforeRender() {\n      var force = this.hot.renderCall;\n      var fixedRowsBottom = this.hot.getSettings().fixedRowsBottom;\n      var firstVisibleRow = this.getFirstVisibleRow();\n      var lastVisibleRow = this.getLastVisibleRow();\n\n      if (firstVisibleRow === -1 || lastVisibleRow === -1) {\n        return;\n      }\n\n      this.calculateRowsHeight({\n        from: firstVisibleRow,\n        to: lastVisibleRow\n      }, void 0, force); // Calculate rows height synchronously for bottom overlay\n\n      if (fixedRowsBottom) {\n        var totalRows = this.hot.countRows() - 1;\n        this.calculateRowsHeight({\n          from: totalRows - fixedRowsBottom,\n          to: totalRows\n        });\n      }\n\n      if (this.isNeedRecalculate() && !this.inProgress) {\n        this.calculateAllRowsHeight();\n      }\n    }\n    /**\r\n     * On before row move listener.\r\n     *\r\n     * @private\r\n     * @param {number} from Row index where was grabbed.\r\n     * @param {number} to Destination row index.\r\n     */\n\n  }, {\n    key: \"onBeforeRowMove\",\n    value: function onBeforeRowMove(from, to) {\n      this.clearCacheByRange({\n        from: from,\n        to: to\n      });\n      this.calculateAllRowsHeight();\n    }\n    /**\r\n     * On before row resize listener.\r\n     *\r\n     * @private\r\n     * @param {number} size The size of the current row index.\r\n     * @param {number} row Current row index.\r\n     * @param {boolean} isDblClick Indicates if the resize was triggered by doubleclick.\r\n     * @returns {number}\r\n     */\n\n  }, {\n    key: \"onBeforeRowResize\",\n    value: function onBeforeRowResize(size, row, isDblClick) {\n      var newSize = size;\n\n      if (isDblClick) {\n        this.calculateRowsHeight(row, void 0, true);\n        newSize = this.getRowHeight(row);\n      }\n\n      return newSize;\n    }\n    /**\r\n     * On after load data listener.\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      var _this7 = this;\n\n      if (this.hot.view) {\n        this.recalculateAllRowsHeight();\n      } else {\n        // first load - initialization\n        setTimeout(function () {\n          if (_this7.hot) {\n            _this7.recalculateAllRowsHeight();\n          }\n        }, 0);\n      }\n    }\n    /**\r\n     * On before change listener.\r\n     *\r\n     * @private\r\n     * @param {Array} changes 2D array containing information about each of the edited cells.\r\n     */\n\n  }, {\n    key: \"onBeforeChange\",\n    value: function onBeforeChange(changes) {\n      var range = null;\n\n      if (changes.length === 1) {\n        range = changes[0][0];\n      } else if (changes.length > 1) {\n        range = {\n          from: changes[0][0],\n          to: changes[changes.length - 1][0]\n        };\n      }\n\n      if (range !== null) {\n        this.clearCacheByRange(range);\n      }\n    }\n    /**\r\n     * Destroys the plugin instance.\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.ghostTable.clean();\n\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }, {\n    key: \"CALCULATION_STEP\",\n    get: function get() {\n      return 50;\n    }\n  }, {\n    key: \"SYNC_CALCULATION_LIMIT\",\n    get: function get() {\n      return 500;\n    }\n  }]);\n\n  return AutoRowSize;\n}(BasePlugin);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/autoRowSize/autoRowSize.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","len","length","arr2","_i","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","arrayEach","arrayFilter","cancelAnimationFrame","requestAnimationFrame","isVisible","GhostTable","isObject","valueAccordingPercent","rangeEach","SamplesGenerator","isPercentValue","PhysicalIndexToValueMap","IndexToValueMap","PLUGIN_KEY","PLUGIN_PRIORITY","ROW_WIDTHS_MAP_NAME","AutoRowSize","_BasePlugin","_super","hotInstance","_this","rowHeightsMap","headerHeight","ghostTable","hot","samplesGenerator","row","col","cellValue","getDataAtCell","getColHeader","firstCalculation","inProgress","measuredRows","rowIndexMapper","registerMap","addHook","size","isDblClick","onBeforeRowResize","isEnabled","settings","getSettings","enablePlugin","_this2","enabled","setSamplingOptions","onAfterLoadData","changes","onBeforeChange","recalculateAllRowsHeight","force","onBeforeRender","height","getRowHeight","getColumnHeaderHeight","disablePlugin","_this3","calculateRowsHeight","_this4","rowRange","undefined","to","countRows","colRange","countCols","rowsRange","columnsRange","samples","generateRowSamples","addColumnHeadersRow","getValueAtIndex","_samples","_ref","_ref2","rowIndex","sample","addRow","rows","batchExecution","getHeights","setValueAtIndex","toPhysicalRow","clean","calculateAllRowsHeight","_this5","current","timer","loop","Math","min","CALCULATION_STEP","view","adjustElementsSize","wt","wtOverlays","leftOverlay","needFullRender","clone","draw","syncLimit","getSyncCalculationLimit","setting","samplingRatio","allowSampleDuplicates","isNaN","setSampleCount","parseInt","setAllowDuplicates","wtTable","TABLE","clearCache","limit","SYNC_CALCULATION_LIMIT","rowsLimit","defaultHeight","cachedHeight","getFirstVisibleRow","wot","wtViewport","rowsVisibleCalculator","rowsRenderCalculator","getFirstRenderedRow","getLastVisibleRow","getLastRenderedRow","init","clearCacheByRange","range","_this6","_ref3","max","isNeedRecalculate","getValues","item","renderCall","fixedRowsBottom","firstVisibleRow","lastVisibleRow","totalRows","onBeforeRowMove","newSize","_this7","setTimeout","destroy"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAmB1X,SAASK,cAAT,CAAwBC,GAAxB,EAA6BC,CAA7B,EAAgC;AAAE,SAAOC,eAAe,CAACF,GAAD,CAAf,IAAwBG,qBAAqB,CAACH,GAAD,EAAMC,CAAN,CAA7C,IAAyDG,2BAA2B,CAACJ,GAAD,EAAMC,CAAN,CAApF,IAAgGI,gBAAgB,EAAvH;AAA4H;;AAE9J,SAASA,gBAAT,GAA4B;AAAE,QAAM,IAAIC,SAAJ,CAAc,2IAAd,CAAN;AAAmK;;AAEjM,SAASF,2BAAT,CAAqCG,CAArC,EAAwCC,MAAxC,EAAgD;AAAE,MAAI,CAACD,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOE,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAqC,MAAIE,CAAC,GAAGC,MAAM,CAACb,SAAP,CAAiBc,QAAjB,CAA0BC,IAA1B,CAA+BN,CAA/B,EAAkCO,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIJ,CAAC,KAAK,QAAN,IAAkBH,CAAC,CAACV,WAAxB,EAAqCa,CAAC,GAAGH,CAAC,CAACV,WAAF,CAAckB,IAAlB;AAAwB,MAAIL,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOM,KAAK,CAACC,IAAN,CAAWV,CAAX,CAAP;AAAsB,MAAIG,CAAC,KAAK,WAAN,IAAqB,2CAA2CQ,IAA3C,CAAgDR,CAAhD,CAAzB,EAA6E,OAAOD,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAsC;;AAEha,SAASC,iBAAT,CAA2BT,GAA3B,EAAgCmB,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGnB,GAAG,CAACoB,MAA7B,EAAqCD,GAAG,GAAGnB,GAAG,CAACoB,MAAV;;AAAkB,OAAK,IAAInB,CAAC,GAAG,CAAR,EAAWoB,IAAI,GAAG,IAAIL,KAAJ,CAAUG,GAAV,CAAvB,EAAuClB,CAAC,GAAGkB,GAA3C,EAAgDlB,CAAC,EAAjD,EAAqD;AAAEoB,IAAAA,IAAI,CAACpB,CAAD,CAAJ,GAAUD,GAAG,CAACC,CAAD,CAAb;AAAmB;;AAAC,SAAOoB,IAAP;AAAc;;AAEvL,SAASlB,qBAAT,CAA+BH,GAA/B,EAAoCC,CAApC,EAAuC;AAAE,MAAIqB,EAAE,GAAGtB,GAAG,KAAK,OAAOL,MAAP,KAAkB,WAAlB,IAAiCK,GAAG,CAACL,MAAM,CAACC,QAAR,CAApC,IAAyDI,GAAG,CAAC,YAAD,CAAjE,CAAZ;;AAA8F,MAAIsB,EAAE,IAAI,IAAV,EAAgB;AAAQ,MAAIC,IAAI,GAAG,EAAX;AAAe,MAAIC,EAAE,GAAG,IAAT;AAAe,MAAIC,EAAE,GAAG,KAAT;;AAAgB,MAAIC,EAAJ,EAAQC,EAAR;;AAAY,MAAI;AAAE,SAAKL,EAAE,GAAGA,EAAE,CAACT,IAAH,CAAQb,GAAR,CAAV,EAAwB,EAAEwB,EAAE,GAAG,CAACE,EAAE,GAAGJ,EAAE,CAACM,IAAH,EAAN,EAAiBC,IAAxB,CAAxB,EAAuDL,EAAE,GAAG,IAA5D,EAAkE;AAAED,MAAAA,IAAI,CAACO,IAAL,CAAUJ,EAAE,CAACK,KAAb;;AAAqB,UAAI9B,CAAC,IAAIsB,IAAI,CAACH,MAAL,KAAgBnB,CAAzB,EAA4B;AAAQ;AAAE,GAArI,CAAsI,OAAO+B,GAAP,EAAY;AAAEP,IAAAA,EAAE,GAAG,IAAL;AAAWE,IAAAA,EAAE,GAAGK,GAAL;AAAW,GAA1K,SAAmL;AAAE,QAAI;AAAE,UAAI,CAACR,EAAD,IAAOF,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiCA,EAAE,CAAC,QAAD,CAAF;AAAiB,KAAxD,SAAiE;AAAE,UAAIG,EAAJ,EAAQ,MAAME,EAAN;AAAW;AAAE;;AAAC,SAAOJ,IAAP;AAAc;;AAErf,SAASrB,eAAT,CAAyBF,GAAzB,EAA8B;AAAE,MAAIgB,KAAK,CAACiB,OAAN,CAAcjC,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAAa;;AAErE,SAASkC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAI9B,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAAS+B,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsC,KAAK,CAACnB,MAA1B,EAAkCnB,CAAC,EAAnC,EAAuC;AAAE,QAAIuC,UAAU,GAAGD,KAAK,CAACtC,CAAD,CAAtB;AAA2BuC,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BhC,IAAAA,MAAM,CAACiC,cAAP,CAAsBN,MAAtB,EAA8BE,UAAU,CAACK,GAAzC,EAA8CL,UAA9C;AAA4D;AAAE;;AAE7T,SAASM,YAAT,CAAsBV,WAAtB,EAAmCW,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBV,iBAAiB,CAACD,WAAW,CAACtC,SAAb,EAAwBiD,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBX,iBAAiB,CAACD,WAAD,EAAcY,WAAd,CAAjB;AAA6C,SAAOZ,WAAP;AAAqB;;AAEvN,SAASa,IAAT,CAAcX,MAAd,EAAsBY,QAAtB,EAAgCC,QAAhC,EAA0C;AAAE,MAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,GAA9C,EAAmD;AAAEJ,IAAAA,IAAI,GAAGG,OAAO,CAACC,GAAf;AAAqB,GAA1E,MAAgF;AAAEJ,IAAAA,IAAI,GAAG,SAASA,IAAT,CAAcX,MAAd,EAAsBY,QAAtB,EAAgCC,QAAhC,EAA0C;AAAE,UAAIG,IAAI,GAAGC,cAAc,CAACjB,MAAD,EAASY,QAAT,CAAzB;;AAA6C,UAAI,CAACI,IAAL,EAAW;AAAQ,UAAIE,IAAI,GAAG7C,MAAM,CAAC8C,wBAAP,CAAgCH,IAAhC,EAAsCJ,QAAtC,CAAX;;AAA4D,UAAIM,IAAI,CAACH,GAAT,EAAc;AAAE,eAAOG,IAAI,CAACH,GAAL,CAASxC,IAAT,CAAcsC,QAAd,CAAP;AAAiC;;AAAC,aAAOK,IAAI,CAACzB,KAAZ;AAAoB,KAArP;AAAwP;;AAAC,SAAOkB,IAAI,CAACX,MAAD,EAASY,QAAT,EAAmBC,QAAQ,IAAIb,MAA/B,CAAX;AAAoD;;AAE3a,SAASiB,cAAT,CAAwBG,MAAxB,EAAgCR,QAAhC,EAA0C;AAAE,SAAO,CAACvC,MAAM,CAACb,SAAP,CAAiB6D,cAAjB,CAAgC9C,IAAhC,CAAqC6C,MAArC,EAA6CR,QAA7C,CAAR,EAAgE;AAAEQ,IAAAA,MAAM,GAAGE,eAAe,CAACF,MAAD,CAAxB;AAAkC,QAAIA,MAAM,KAAK,IAAf,EAAqB;AAAQ;;AAAC,SAAOA,MAAP;AAAgB;;AAE9L,SAASG,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIzD,SAAJ,CAAc,oDAAd,CAAN;AAA4E;;AAACwD,EAAAA,QAAQ,CAAChE,SAAT,GAAqBa,MAAM,CAACqD,MAAP,CAAcD,UAAU,IAAIA,UAAU,CAACjE,SAAvC,EAAkD;AAAED,IAAAA,WAAW,EAAE;AAAEkC,MAAAA,KAAK,EAAE+B,QAAT;AAAmBnB,MAAAA,QAAQ,EAAE,IAA7B;AAAmCD,MAAAA,YAAY,EAAE;AAAjD;AAAf,GAAlD,CAArB;AAAkJ,MAAIqB,UAAJ,EAAgBE,eAAe,CAACH,QAAD,EAAWC,UAAX,CAAf;AAAwC;;AAEjY,SAASE,eAAT,CAAyB1D,CAAzB,EAA4B2D,CAA5B,EAA+B;AAAED,EAAAA,eAAe,GAAGtD,MAAM,CAACwD,cAAP,IAAyB,SAASF,eAAT,CAAyB1D,CAAzB,EAA4B2D,CAA5B,EAA+B;AAAE3D,IAAAA,CAAC,CAAC6D,SAAF,GAAcF,CAAd;AAAiB,WAAO3D,CAAP;AAAW,GAAxG;;AAA0G,SAAO0D,eAAe,CAAC1D,CAAD,EAAI2D,CAAJ,CAAtB;AAA+B;;AAE1K,SAASG,YAAT,CAAsBC,OAAtB,EAA+B;AAAE,MAAIC,yBAAyB,GAAGC,yBAAyB,EAAzD;;AAA6D,SAAO,SAASC,oBAAT,GAAgC;AAAE,QAAIC,KAAK,GAAGd,eAAe,CAACU,OAAD,CAA3B;AAAA,QAAsCK,MAAtC;;AAA8C,QAAIJ,yBAAJ,EAA+B;AAAE,UAAIK,SAAS,GAAGhB,eAAe,CAAC,IAAD,CAAf,CAAsB/D,WAAtC;;AAAmD8E,MAAAA,MAAM,GAAGvB,OAAO,CAACyB,SAAR,CAAkBH,KAAlB,EAAyBI,SAAzB,EAAoCF,SAApC,CAAT;AAA0D,KAA9I,MAAoJ;AAAED,MAAAA,MAAM,GAAGD,KAAK,CAACK,KAAN,CAAY,IAAZ,EAAkBD,SAAlB,CAAT;AAAwC;;AAAC,WAAOE,0BAA0B,CAAC,IAAD,EAAOL,MAAP,CAAjC;AAAkD,GAAxU;AAA2U;;AAEza,SAASK,0BAAT,CAAoCC,IAApC,EAA0CpE,IAA1C,EAAgD;AAAE,MAAIA,IAAI,KAAKpB,OAAO,CAACoB,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAP,KAAgB,UAAnD,CAAR,EAAwE;AAAE,WAAOA,IAAP;AAAc;;AAAC,SAAOqE,sBAAsB,CAACD,IAAD,CAA7B;AAAsC;;AAEjL,SAASC,sBAAT,CAAgCD,IAAhC,EAAsC;AAAE,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAE,UAAM,IAAIE,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOF,IAAP;AAAc;;AAEtK,SAAST,yBAAT,GAAqC;AAAE,MAAI,OAAOpB,OAAP,KAAmB,WAAnB,IAAkC,CAACA,OAAO,CAACyB,SAA/C,EAA0D,OAAO,KAAP;AAAc,MAAIzB,OAAO,CAACyB,SAAR,CAAkBO,IAAtB,EAA4B,OAAO,KAAP;AAAc,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC,OAAO,IAAP;;AAAa,MAAI;AAAEC,IAAAA,OAAO,CAACxF,SAAR,CAAkByF,OAAlB,CAA0B1E,IAA1B,CAA+BuC,OAAO,CAACyB,SAAR,CAAkBS,OAAlB,EAA2B,EAA3B,EAA+B,YAAY,CAAE,CAA7C,CAA/B;AAAgF,WAAO,IAAP;AAAc,GAApG,CAAqG,OAAOE,CAAP,EAAU;AAAE,WAAO,KAAP;AAAe;AAAE;;AAEzU,SAAS5B,eAAT,CAAyBrD,CAAzB,EAA4B;AAAEqD,EAAAA,eAAe,GAAGjD,MAAM,CAACwD,cAAP,GAAwBxD,MAAM,CAAC8E,cAA/B,GAAgD,SAAS7B,eAAT,CAAyBrD,CAAzB,EAA4B;AAAE,WAAOA,CAAC,CAAC6D,SAAF,IAAezD,MAAM,CAAC8E,cAAP,CAAsBlF,CAAtB,CAAtB;AAAiD,GAAjJ;AAAmJ,SAAOqD,eAAe,CAACrD,CAAD,CAAtB;AAA4B;;AAE7M,SAASmF,UAAT,QAA2B,mBAA3B;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,yBAAvC;AACA,SAASC,oBAAT,EAA+BC,qBAA/B,QAA4D,2BAA5D;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,QAAT,EAAmBtC,cAAnB,QAAyC,0BAAzC;AACA,SAASuC,qBAAT,EAAgCC,SAAhC,QAAiD,0BAAjD;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,uBAAuB,IAAIC,eAApC,QAA2D,8BAA3D;AACA,OAAO,IAAIC,UAAU,GAAG,aAAjB;AACP,OAAO,IAAIC,eAAe,GAAG,EAAtB;AACP,IAAIC,mBAAmB,GAAG,aAA1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,IAAIC,WAAW,GAAG,aAAa,UAAUC,WAAV,EAAuB;AAC3D/C,EAAAA,SAAS,CAAC8C,WAAD,EAAcC,WAAd,CAAT;;AAEA,MAAIC,MAAM,GAAGxC,YAAY,CAACsC,WAAD,CAAzB;;AAEA,WAASA,WAAT,CAAqBG,WAArB,EAAkC;AAChC,QAAIC,KAAJ;;AAEA7E,IAAAA,eAAe,CAAC,IAAD,EAAOyE,WAAP,CAAf;;AAEAI,IAAAA,KAAK,GAAGF,MAAM,CAAChG,IAAP,CAAY,IAAZ,EAAkBiG,WAAlB,CAAR;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEIC,IAAAA,KAAK,CAACC,aAAN,GAAsB,KAAK,CAA3B;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEID,IAAAA,KAAK,CAACE,YAAN,GAAqB,IAArB;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEIF,IAAAA,KAAK,CAACG,UAAN,GAAmB,IAAIlB,UAAJ,CAAee,KAAK,CAACI,GAArB,CAAnB;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEIJ,IAAAA,KAAK,CAACK,gBAAN,GAAyB,IAAIhB,gBAAJ,CAAqB,UAAUiB,GAAV,EAAeC,GAAf,EAAoB;AAChE,UAAIC,SAAJ;;AAEA,UAAIF,GAAG,IAAI,CAAX,EAAc;AACZE,QAAAA,SAAS,GAAGR,KAAK,CAACI,GAAN,CAAUK,aAAV,CAAwBH,GAAxB,EAA6BC,GAA7B,CAAZ;AACD,OAFD,MAEO,IAAID,GAAG,KAAK,CAAC,CAAb,EAAgB;AACrBE,QAAAA,SAAS,GAAGR,KAAK,CAACI,GAAN,CAAUM,YAAV,CAAuBH,GAAvB,CAAZ;AACD;;AAED,aAAO;AACLvF,QAAAA,KAAK,EAAEwF;AADF,OAAP;AAGD,KAZwB,CAAzB;AAaA;AACJ;AACA;AACA;AACA;AACA;;AAEIR,IAAAA,KAAK,CAACW,gBAAN,GAAyB,IAAzB;AACA;AACJ;AACA;AACA;AACA;;AAEIX,IAAAA,KAAK,CAACY,UAAN,GAAmB,KAAnB;AACA;AACJ;AACA;AACA;AACA;;AAEIZ,IAAAA,KAAK,CAACa,YAAN,GAAqB,CAArB;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEIb,IAAAA,KAAK,CAACC,aAAN,GAAsB,IAAIT,eAAJ,EAAtB;;AAEAQ,IAAAA,KAAK,CAACI,GAAN,CAAUU,cAAV,CAAyBC,WAAzB,CAAqCpB,mBAArC,EAA0DK,KAAK,CAACC,aAAhE,EAjFgC,CAiFgD;AAChF;;;AAGAD,IAAAA,KAAK,CAACgB,OAAN,CAAc,iBAAd,EAAiC,UAAUC,IAAV,EAAgBX,GAAhB,EAAqBY,UAArB,EAAiC;AAChE,aAAOlB,KAAK,CAACmB,iBAAN,CAAwBF,IAAxB,EAA8BX,GAA9B,EAAmCY,UAAnC,CAAP;AACD,KAFD;;AAIA,WAAOlB,KAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;;;AAGEjE,EAAAA,YAAY,CAAC6D,WAAD,EAAc,CAAC;AACzB9D,IAAAA,GAAG,EAAE,WADoB;AAEzBd,IAAAA,KAAK,EAAE,SAASoG,SAAT,GAAqB;AAC1B,UAAIC,QAAQ,GAAG,KAAKjB,GAAL,CAASkB,WAAT,GAAuB7B,UAAvB,CAAf;AACA,aAAO4B,QAAQ,KAAK,IAAb,IAAqBnC,QAAQ,CAACmC,QAAD,CAApC;AACD;AACD;AACJ;AACA;;AAR6B,GAAD,EAUvB;AACDvF,IAAAA,GAAG,EAAE,cADJ;AAEDd,IAAAA,KAAK,EAAE,SAASuG,YAAT,GAAwB;AAC7B,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAI,KAAKC,OAAT,EAAkB;AAChB;AACD;;AAED,WAAKC,kBAAL;AACA,WAAKV,OAAL,CAAa,eAAb,EAA8B,YAAY;AACxC,eAAOQ,MAAM,CAACG,eAAP,EAAP;AACD,OAFD;AAGA,WAAKX,OAAL,CAAa,cAAb,EAA6B,UAAUY,OAAV,EAAmB;AAC9C,eAAOJ,MAAM,CAACK,cAAP,CAAsBD,OAAtB,CAAP;AACD,OAFD;AAGA,WAAKZ,OAAL,CAAa,oBAAb,EAAmC,YAAY;AAC7C,eAAOQ,MAAM,CAACM,wBAAP,EAAP;AACD,OAFD;AAGA,WAAKd,OAAL,CAAa,cAAb,EAA6B,UAAUe,KAAV,EAAiB;AAC5C,eAAOP,MAAM,CAACQ,cAAP,CAAsBD,KAAtB,CAAP;AACD,OAFD;AAGA,WAAKf,OAAL,CAAa,iBAAb,EAAgC,UAAUiB,MAAV,EAAkB3B,GAAlB,EAAuB;AACrD,eAAOkB,MAAM,CAACU,YAAP,CAAoB5B,GAApB,EAAyB2B,MAAzB,CAAP;AACD,OAFD;AAGA,WAAKjB,OAAL,CAAa,0BAAb,EAAyC,YAAY;AACnD,eAAOQ,MAAM,CAACW,qBAAP,EAAP;AACD,OAFD;;AAIAjG,MAAAA,IAAI,CAACW,eAAe,CAAC+C,WAAW,CAAC7G,SAAb,CAAhB,EAAyC,cAAzC,EAAyD,IAAzD,CAAJ,CAAmEe,IAAnE,CAAwE,IAAxE;AACD;AACD;AACJ;AACA;;AAjCK,GAVuB,EA6CvB;AACDgC,IAAAA,GAAG,EAAE,eADJ;AAEDd,IAAAA,KAAK,EAAE,SAASoH,aAAT,GAAyB;AAC9B,UAAIC,MAAM,GAAG,IAAb;;AAEA,WAAKnC,YAAL,GAAoB,IAApB;;AAEAhE,MAAAA,IAAI,CAACW,eAAe,CAAC+C,WAAW,CAAC7G,SAAb,CAAhB,EAAyC,eAAzC,EAA0D,IAA1D,CAAJ,CAAoEe,IAApE,CAAyE,IAAzE,EAL8B,CAKkD;AAChF;;;AAGA,WAAKkH,OAAL,CAAa,iBAAb,EAAgC,UAAUC,IAAV,EAAgBX,GAAhB,EAAqBY,UAArB,EAAiC;AAC/D,eAAOmB,MAAM,CAAClB,iBAAP,CAAyBF,IAAzB,EAA+BX,GAA/B,EAAoCY,UAApC,CAAP;AACD,OAFD;AAGD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AArBK,GA7CuB,EAoEvB;AACDpF,IAAAA,GAAG,EAAE,qBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASsH,mBAAT,GAA+B;AACpC,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIC,QAAQ,GAAGzE,SAAS,CAAC1D,MAAV,GAAmB,CAAnB,IAAwB0D,SAAS,CAAC,CAAD,CAAT,KAAiB0E,SAAzC,GAAqD1E,SAAS,CAAC,CAAD,CAA9D,GAAoE;AACjF7D,QAAAA,IAAI,EAAE,CAD2E;AAEjFwI,QAAAA,EAAE,EAAE,KAAKtC,GAAL,CAASuC,SAAT,KAAuB;AAFsD,OAAnF;AAIA,UAAIC,QAAQ,GAAG7E,SAAS,CAAC1D,MAAV,GAAmB,CAAnB,IAAwB0D,SAAS,CAAC,CAAD,CAAT,KAAiB0E,SAAzC,GAAqD1E,SAAS,CAAC,CAAD,CAA9D,GAAoE;AACjF7D,QAAAA,IAAI,EAAE,CAD2E;AAEjFwI,QAAAA,EAAE,EAAE,KAAKtC,GAAL,CAASyC,SAAT,KAAuB;AAFsD,OAAnF;AAIA,UAAId,KAAK,GAAGhE,SAAS,CAAC1D,MAAV,GAAmB,CAAnB,IAAwB0D,SAAS,CAAC,CAAD,CAAT,KAAiB0E,SAAzC,GAAqD1E,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAhF,CAXoC,CAYpC;;AACA,UAAI+E,SAAS,GAAG,OAAON,QAAP,KAAoB,QAApB,GAA+B;AAC7CtI,QAAAA,IAAI,EAAEsI,QADuC;AAE7CE,QAAAA,EAAE,EAAEF;AAFyC,OAA/B,GAGZA,QAHJ;AAIA,UAAIO,YAAY,GAAG,OAAOH,QAAP,KAAoB,QAApB,GAA+B;AAChD1I,QAAAA,IAAI,EAAE0I,QAD0C;AAEhDF,QAAAA,EAAE,EAAEE;AAF4C,OAA/B,GAGfA,QAHJ;;AAKA,UAAI,KAAKxC,GAAL,CAASM,YAAT,CAAsB,CAAtB,MAA6B,IAAjC,EAAuC;AACrC,YAAIsC,OAAO,GAAG,KAAK3C,gBAAL,CAAsB4C,kBAAtB,CAAyC,CAAC,CAA1C,EAA6CF,YAA7C,CAAd;AACA,aAAK5C,UAAL,CAAgB+C,mBAAhB,CAAoCF,OAAO,CAAC1G,GAAR,CAAY,CAAC,CAAb,CAApC;AACD;;AAED8C,MAAAA,SAAS,CAAC0D,SAAS,CAAC5I,IAAX,EAAiB4I,SAAS,CAACJ,EAA3B,EAA+B,UAAUpC,GAAV,EAAe;AACrD;AACA;AACA,YAAIyB,KAAK,IAAIQ,MAAM,CAACtC,aAAP,CAAqBkD,eAArB,CAAqC7C,GAArC,MAA8C,IAA3D,EAAiE;AAC/D,cAAI8C,QAAQ,GAAGb,MAAM,CAAClC,gBAAP,CAAwB4C,kBAAxB,CAA2C3C,GAA3C,EAAgDyC,YAAhD,CAAf;;AAEAnE,UAAAA,SAAS,CAACwE,QAAD,EAAW,UAAUC,IAAV,EAAgB;AAClC,gBAAIC,KAAK,GAAGtK,cAAc,CAACqK,IAAD,EAAO,CAAP,CAA1B;AAAA,gBACIE,QAAQ,GAAGD,KAAK,CAAC,CAAD,CADpB;AAAA,gBAEIE,MAAM,GAAGF,KAAK,CAAC,CAAD,CAFlB;;AAIA,mBAAOf,MAAM,CAACpC,UAAP,CAAkBsD,MAAlB,CAAyBF,QAAzB,EAAmCC,MAAnC,CAAP;AACD,WANQ,CAAT;AAOD;AACF,OAdQ,CAAT;;AAgBA,UAAI,KAAKrD,UAAL,CAAgBuD,IAAhB,CAAqBrJ,MAAzB,EAAiC;AAC/B,aAAK+F,GAAL,CAASuD,cAAT,CAAwB,YAAY;AAClCpB,UAAAA,MAAM,CAACpC,UAAP,CAAkByD,UAAlB,CAA6B,UAAUtD,GAAV,EAAe2B,MAAf,EAAuB;AAClD,gBAAI3B,GAAG,GAAG,CAAV,EAAa;AACXiC,cAAAA,MAAM,CAACrC,YAAP,GAAsB+B,MAAtB;AACD,aAFD,MAEO;AACLM,cAAAA,MAAM,CAACtC,aAAP,CAAqB4D,eAArB,CAAqCtB,MAAM,CAACnC,GAAP,CAAW0D,aAAX,CAAyBxD,GAAzB,CAArC,EAAoE2B,MAApE;AACD;AACF,WAND;AAOD,SARD,EAQG,IARH;AASA,aAAKpB,YAAL,GAAoBiC,SAAS,CAACJ,EAAV,GAAe,CAAnC;AACA,aAAKvC,UAAL,CAAgB4D,KAAhB;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;;AAhEK,GApEuB,EAsIvB;AACDjI,IAAAA,GAAG,EAAE,wBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASgJ,sBAAT,GAAkC;AACvC,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIrB,QAAQ,GAAG7E,SAAS,CAAC1D,MAAV,GAAmB,CAAnB,IAAwB0D,SAAS,CAAC,CAAD,CAAT,KAAiB0E,SAAzC,GAAqD1E,SAAS,CAAC,CAAD,CAA9D,GAAoE;AACjF7D,QAAAA,IAAI,EAAE,CAD2E;AAEjFwI,QAAAA,EAAE,EAAE,KAAKtC,GAAL,CAASyC,SAAT,KAAuB;AAFsD,OAAnF;AAIA,UAAIqB,OAAO,GAAG,CAAd;AACA,UAAI7J,MAAM,GAAG,KAAK+F,GAAL,CAASuC,SAAT,KAAuB,CAApC;AACA,UAAIwB,KAAK,GAAG,IAAZ;AACA,WAAKvD,UAAL,GAAkB,IAAlB;;AAEA,UAAIwD,IAAI,GAAG,SAASA,IAAT,GAAgB;AACzB;AACA,YAAI,CAACH,MAAM,CAAC7D,GAAZ,EAAiB;AACftB,UAAAA,oBAAoB,CAACqF,KAAD,CAApB;AACAF,UAAAA,MAAM,CAACrD,UAAP,GAAoB,KAApB;AACA;AACD;;AAEDqD,QAAAA,MAAM,CAAC3B,mBAAP,CAA2B;AACzBpI,UAAAA,IAAI,EAAEgK,OADmB;AAEzBxB,UAAAA,EAAE,EAAE2B,IAAI,CAACC,GAAL,CAASJ,OAAO,GAAGtE,WAAW,CAAC2E,gBAA/B,EAAiDlK,MAAjD;AAFqB,SAA3B,EAGGuI,QAHH;;AAKAsB,QAAAA,OAAO,GAAGA,OAAO,GAAGtE,WAAW,CAAC2E,gBAAtB,GAAyC,CAAnD;;AAEA,YAAIL,OAAO,GAAG7J,MAAd,EAAsB;AACpB8J,UAAAA,KAAK,GAAGpF,qBAAqB,CAACqF,IAAD,CAA7B;AACD,SAFD,MAEO;AACLtF,UAAAA,oBAAoB,CAACqF,KAAD,CAApB;AACAF,UAAAA,MAAM,CAACrD,UAAP,GAAoB,KAApB,CAFK,CAEsB;;AAE3BqD,UAAAA,MAAM,CAAC7D,GAAP,CAAWoE,IAAX,CAAgBC,kBAAhB,CAAmC,IAAnC,EAJK,CAIqC;;;AAG1C,cAAIR,MAAM,CAAC7D,GAAP,CAAWoE,IAAX,CAAgBE,EAAhB,CAAmBC,UAAnB,CAA8BC,WAA9B,CAA0CC,cAA9C,EAA8D;AAC5DZ,YAAAA,MAAM,CAAC7D,GAAP,CAAWoE,IAAX,CAAgBE,EAAhB,CAAmBC,UAAnB,CAA8BC,WAA9B,CAA0CE,KAA1C,CAAgDC,IAAhD;AACD;AACF;AACF,OA5BD;;AA8BA,UAAIC,SAAS,GAAG,KAAKC,uBAAL,EAAhB,CA1CuC,CA0CS;;AAEhD,UAAI,KAAKtE,gBAAL,IAAyBqE,SAAS,IAAI,CAA1C,EAA6C;AAC3C,aAAK1C,mBAAL,CAAyB;AACvBpI,UAAAA,IAAI,EAAE,CADiB;AAEvBwI,UAAAA,EAAE,EAAEsC;AAFmB,SAAzB,EAGGpC,QAHH;AAIA,aAAKjC,gBAAL,GAAwB,KAAxB;AACAuD,QAAAA,OAAO,GAAGc,SAAS,GAAG,CAAtB;AACD,OAnDsC,CAmDrC;;;AAGF,UAAId,OAAO,GAAG7J,MAAd,EAAsB;AACpB+J,QAAAA,IAAI;AACL,OAFD,MAEO;AACL,aAAKxD,UAAL,GAAkB,KAAlB;AACA,aAAKR,GAAL,CAASoE,IAAT,CAAcC,kBAAd,CAAiC,KAAjC;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;;AAnEK,GAtIuB,EA2MvB;AACD3I,IAAAA,GAAG,EAAE,oBADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS0G,kBAAT,GAA8B;AACnC,UAAIwD,OAAO,GAAG,KAAK9E,GAAL,CAASkB,WAAT,GAAuB7B,UAAvB,CAAd;AACA,UAAI0F,aAAa,GAAGD,OAAO,IAAItI,cAAc,CAACsI,OAAD,EAAU,eAAV,CAAzB,GAAsDA,OAAO,CAACC,aAA9D,GAA8E,KAAK,CAAvG;AACA,UAAIC,qBAAqB,GAAGF,OAAO,IAAItI,cAAc,CAACsI,OAAD,EAAU,uBAAV,CAAzB,GAA8DA,OAAO,CAACE,qBAAtE,GAA8F,KAAK,CAA/H;;AAEA,UAAID,aAAa,IAAI,CAACE,KAAK,CAACF,aAAD,CAA3B,EAA4C;AAC1C,aAAK9E,gBAAL,CAAsBiF,cAAtB,CAAqCC,QAAQ,CAACJ,aAAD,EAAgB,EAAhB,CAA7C;AACD;;AAED,UAAIC,qBAAJ,EAA2B;AACzB,aAAK/E,gBAAL,CAAsBmF,kBAAtB,CAAyCJ,qBAAzC;AACD;AACF;AACD;AACJ;AACA;;AAjBK,GA3MuB,EA8NvB;AACDtJ,IAAAA,GAAG,EAAE,0BADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS8G,wBAAT,GAAoC;AACzC,UAAI9C,SAAS,CAAC,KAAKoB,GAAL,CAASoE,IAAT,CAAcE,EAAd,CAAiBe,OAAjB,CAAyBC,KAA1B,CAAb,EAA+C;AAC7C,aAAKC,UAAL;AACA,aAAK3B,sBAAL;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;;AAbK,GA9NuB,EA6OvB;AACDlI,IAAAA,GAAG,EAAE,yBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASiK,uBAAT,GAAmC;AACxC,UAAI5D,QAAQ,GAAG,KAAKjB,GAAL,CAASkB,WAAT,GAAuB7B,UAAvB,CAAf;AACA;;AAEA,UAAImG,KAAK,GAAGhG,WAAW,CAACiG,sBAAxB;AACA,UAAIC,SAAS,GAAG,KAAK1F,GAAL,CAASuC,SAAT,KAAuB,CAAvC;;AAEA,UAAIzD,QAAQ,CAACmC,QAAD,CAAZ,EAAwB;AACtBuE,QAAAA,KAAK,GAAGvE,QAAQ,CAAC2D,SAAjB;;AAEA,YAAI1F,cAAc,CAACsG,KAAD,CAAlB,EAA2B;AACzBA,UAAAA,KAAK,GAAGzG,qBAAqB,CAAC2G,SAAD,EAAYF,KAAZ,CAA7B;AACD,SAFD,MAEO;AACL;AACAA,UAAAA,KAAK,KAAK,CAAV;AACD;AACF;;AAED,aAAOvB,IAAI,CAACC,GAAL,CAASsB,KAAT,EAAgBE,SAAhB,CAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AA5BK,GA7OuB,EA2QvB;AACDhK,IAAAA,GAAG,EAAE,cADJ;AAEDd,IAAAA,KAAK,EAAE,SAASkH,YAAT,CAAsB5B,GAAtB,EAA2B;AAChC,UAAIyF,aAAa,GAAGhI,SAAS,CAAC1D,MAAV,GAAmB,CAAnB,IAAwB0D,SAAS,CAAC,CAAD,CAAT,KAAiB0E,SAAzC,GAAqD1E,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAK,CAA7F;AACA,UAAIiI,YAAY,GAAG1F,GAAG,GAAG,CAAN,GAAU,KAAKJ,YAAf,GAA8B,KAAKD,aAAL,CAAmBkD,eAAnB,CAAmC,KAAK/C,GAAL,CAAS0D,aAAT,CAAuBxD,GAAvB,CAAnC,CAAjD;AACA,UAAI2B,MAAM,GAAG8D,aAAb;;AAEA,UAAIC,YAAY,KAAK,IAAjB,IAAyBA,YAAY,IAAID,aAAa,IAAI,CAArB,CAAzC,EAAkE;AAChE9D,QAAAA,MAAM,GAAG+D,YAAT;AACD;;AAED,aAAO/D,MAAP;AACD;AACD;AACJ;AACA;AACA;AACA;;AAjBK,GA3QuB,EA8RvB;AACDnG,IAAAA,GAAG,EAAE,uBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASmH,qBAAT,GAAiC;AACtC,aAAO,KAAKjC,YAAZ;AACD;AACD;AACJ;AACA;AACA;AACA;;AATK,GA9RuB,EAySvB;AACDpE,IAAAA,GAAG,EAAE,oBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASiL,kBAAT,GAA8B;AACnC,UAAIC,GAAG,GAAG,KAAK9F,GAAL,CAASoE,IAAT,CAAcE,EAAxB;;AAEA,UAAIwB,GAAG,CAACC,UAAJ,CAAeC,qBAAnB,EAA0C;AACxC,eAAOF,GAAG,CAACT,OAAJ,CAAYQ,kBAAZ,EAAP;AACD;;AAED,UAAIC,GAAG,CAACC,UAAJ,CAAeE,oBAAnB,EAAyC;AACvC,eAAOH,GAAG,CAACT,OAAJ,CAAYa,mBAAZ,EAAP;AACD;;AAED,aAAO,CAAC,CAAR;AACD;AACD;AACJ;AACA;AACA;AACA;;AAnBK,GAzSuB,EA8TvB;AACDxK,IAAAA,GAAG,EAAE,mBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASuL,iBAAT,GAA6B;AAClC,UAAIL,GAAG,GAAG,KAAK9F,GAAL,CAASoE,IAAT,CAAcE,EAAxB;;AAEA,UAAIwB,GAAG,CAACC,UAAJ,CAAeC,qBAAnB,EAA0C;AACxC,eAAOF,GAAG,CAACT,OAAJ,CAAYc,iBAAZ,EAAP;AACD;;AAED,UAAIL,GAAG,CAACC,UAAJ,CAAeE,oBAAnB,EAAyC;AACvC,eAAOH,GAAG,CAACT,OAAJ,CAAYe,kBAAZ,EAAP;AACD;;AAED,aAAO,CAAC,CAAR;AACD;AACD;AACJ;AACA;;AAjBK,GA9TuB,EAiVvB;AACD1K,IAAAA,GAAG,EAAE,YADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS2K,UAAT,GAAsB;AAC3B,WAAKzF,YAAL,GAAoB,IAApB;AACA,WAAKD,aAAL,CAAmBwG,IAAnB;AACD;AACD;AACJ;AACA;AACA;AACA;;AAVK,GAjVuB,EA6VvB;AACD3K,IAAAA,GAAG,EAAE,mBADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS0L,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIC,KAAK,GAAG,OAAOF,KAAP,KAAiB,QAAjB,GAA4B;AACtCzM,QAAAA,IAAI,EAAEyM,KADgC;AAEtCjE,QAAAA,EAAE,EAAEiE;AAFkC,OAA5B,GAGRA,KAHJ;AAAA,UAIIzM,IAAI,GAAG2M,KAAK,CAAC3M,IAJjB;AAAA,UAKIwI,EAAE,GAAGmE,KAAK,CAACnE,EALf;;AAOA,WAAKtC,GAAL,CAASuD,cAAT,CAAwB,YAAY;AAClCvE,QAAAA,SAAS,CAACiF,IAAI,CAACC,GAAL,CAASpK,IAAT,EAAewI,EAAf,CAAD,EAAqB2B,IAAI,CAACyC,GAAL,CAAS5M,IAAT,EAAewI,EAAf,CAArB,EAAyC,UAAUpC,GAAV,EAAe;AAC/DsG,UAAAA,MAAM,CAAC3G,aAAP,CAAqB4D,eAArB,CAAqCvD,GAArC,EAA0C,IAA1C;AACD,SAFQ,CAAT;AAGD,OAJD,EAIG,IAJH;AAKD;AACD;AACJ;AACA;AACA;AACA;;AAtBK,GA7VuB,EAqXvB;AACDxE,IAAAA,GAAG,EAAE,mBADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS+L,iBAAT,GAA6B;AAClC,aAAO,CAAC,CAAClI,WAAW,CAAC,KAAKoB,aAAL,CAAmB+G,SAAnB,GAA+BjN,KAA/B,CAAqC,CAArC,EAAwC,KAAK8G,YAA7C,CAAD,EAA6D,UAAUoG,IAAV,EAAgB;AAC/F,eAAOA,IAAI,KAAK,IAAhB;AACD,OAFmB,CAAX,CAEN5M,MAFH;AAGD;AACD;AACJ;AACA;AACA;AACA;;AAXK,GArXuB,EAkYvB;AACDyB,IAAAA,GAAG,EAAE,gBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASgH,cAAT,GAA0B;AAC/B,UAAID,KAAK,GAAG,KAAK3B,GAAL,CAAS8G,UAArB;AACA,UAAIC,eAAe,GAAG,KAAK/G,GAAL,CAASkB,WAAT,GAAuB6F,eAA7C;AACA,UAAIC,eAAe,GAAG,KAAKnB,kBAAL,EAAtB;AACA,UAAIoB,cAAc,GAAG,KAAKd,iBAAL,EAArB;;AAEA,UAAIa,eAAe,KAAK,CAAC,CAArB,IAA0BC,cAAc,KAAK,CAAC,CAAlD,EAAqD;AACnD;AACD;;AAED,WAAK/E,mBAAL,CAAyB;AACvBpI,QAAAA,IAAI,EAAEkN,eADiB;AAEvB1E,QAAAA,EAAE,EAAE2E;AAFmB,OAAzB,EAGG,KAAK,CAHR,EAGWtF,KAHX,EAV+B,CAaZ;;AAEnB,UAAIoF,eAAJ,EAAqB;AACnB,YAAIG,SAAS,GAAG,KAAKlH,GAAL,CAASuC,SAAT,KAAuB,CAAvC;AACA,aAAKL,mBAAL,CAAyB;AACvBpI,UAAAA,IAAI,EAAEoN,SAAS,GAAGH,eADK;AAEvBzE,UAAAA,EAAE,EAAE4E;AAFmB,SAAzB;AAID;;AAED,UAAI,KAAKP,iBAAL,MAA4B,CAAC,KAAKnG,UAAtC,EAAkD;AAChD,aAAKoD,sBAAL;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAnCK,GAlYuB,EAuavB;AACDlI,IAAAA,GAAG,EAAE,iBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASuM,eAAT,CAAyBrN,IAAzB,EAA+BwI,EAA/B,EAAmC;AACxC,WAAKgE,iBAAL,CAAuB;AACrBxM,QAAAA,IAAI,EAAEA,IADe;AAErBwI,QAAAA,EAAE,EAAEA;AAFiB,OAAvB;AAIA,WAAKsB,sBAAL;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBK,GAvauB,EA0bvB;AACDlI,IAAAA,GAAG,EAAE,mBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASmG,iBAAT,CAA2BF,IAA3B,EAAiCX,GAAjC,EAAsCY,UAAtC,EAAkD;AACvD,UAAIsG,OAAO,GAAGvG,IAAd;;AAEA,UAAIC,UAAJ,EAAgB;AACd,aAAKoB,mBAAL,CAAyBhC,GAAzB,EAA8B,KAAK,CAAnC,EAAsC,IAAtC;AACAkH,QAAAA,OAAO,GAAG,KAAKtF,YAAL,CAAkB5B,GAAlB,CAAV;AACD;;AAED,aAAOkH,OAAP;AACD;AACD;AACJ;AACA;AACA;AACA;;AAhBK,GA1buB,EA4cvB;AACD1L,IAAAA,GAAG,EAAE,iBADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS2G,eAAT,GAA2B;AAChC,UAAI8F,MAAM,GAAG,IAAb;;AAEA,UAAI,KAAKrH,GAAL,CAASoE,IAAb,EAAmB;AACjB,aAAK1C,wBAAL;AACD,OAFD,MAEO;AACL;AACA4F,QAAAA,UAAU,CAAC,YAAY;AACrB,cAAID,MAAM,CAACrH,GAAX,EAAgB;AACdqH,YAAAA,MAAM,CAAC3F,wBAAP;AACD;AACF,SAJS,EAIP,CAJO,CAAV;AAKD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;;AArBK,GA5cuB,EAmevB;AACDhG,IAAAA,GAAG,EAAE,gBADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS6G,cAAT,CAAwBD,OAAxB,EAAiC;AACtC,UAAI+E,KAAK,GAAG,IAAZ;;AAEA,UAAI/E,OAAO,CAACvH,MAAR,KAAmB,CAAvB,EAA0B;AACxBsM,QAAAA,KAAK,GAAG/E,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAR;AACD,OAFD,MAEO,IAAIA,OAAO,CAACvH,MAAR,GAAiB,CAArB,EAAwB;AAC7BsM,QAAAA,KAAK,GAAG;AACNzM,UAAAA,IAAI,EAAE0H,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CADA;AAENc,UAAAA,EAAE,EAAEd,OAAO,CAACA,OAAO,CAACvH,MAAR,GAAiB,CAAlB,CAAP,CAA4B,CAA5B;AAFE,SAAR;AAID;;AAED,UAAIsM,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAKD,iBAAL,CAAuBC,KAAvB;AACD;AACF;AACD;AACJ;AACA;;AApBK,GAneuB,EAyfvB;AACD7K,IAAAA,GAAG,EAAE,SADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS2M,OAAT,GAAmB;AACxB,WAAKxH,UAAL,CAAgB4D,KAAhB;;AAEA7H,MAAAA,IAAI,CAACW,eAAe,CAAC+C,WAAW,CAAC7G,SAAb,CAAhB,EAAyC,SAAzC,EAAoD,IAApD,CAAJ,CAA8De,IAA9D,CAAmE,IAAnE;AACD;AANA,GAzfuB,CAAd,EAggBR,CAAC;AACHgC,IAAAA,GAAG,EAAE,YADF;AAEHQ,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAOmD,UAAP;AACD;AAJE,GAAD,EAKD;AACD3D,IAAAA,GAAG,EAAE,iBADJ;AAEDQ,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAOoD,eAAP;AACD;AAJA,GALC,EAUD;AACD5D,IAAAA,GAAG,EAAE,kBADJ;AAEDQ,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,EAAP;AACD;AAJA,GAVC,EAeD;AACDR,IAAAA,GAAG,EAAE,wBADJ;AAEDQ,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,GAAP;AACD;AAJA,GAfC,CAhgBQ,CAAZ;;AAshBA,SAAOsD,WAAP;AACD,CA/nBqC,CA+nBpCjB,UA/nBoC,CAA/B","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\r\n\r\nimport \"core-js/modules/es.array.slice.js\";\r\nimport \"core-js/modules/web.timers.js\";\r\nimport \"core-js/modules/es.object.set-prototype-of.js\";\r\nimport \"core-js/modules/es.object.get-prototype-of.js\";\r\nimport \"core-js/modules/es.reflect.construct.js\";\r\nimport \"core-js/modules/es.reflect.get.js\";\r\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.symbol.iterator.js\";\r\nimport \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.array.from.js\";\r\n\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\r\n\r\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\r\n\r\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\r\n\r\nimport { BasePlugin } from \"../base/index.mjs\";\r\nimport { arrayEach, arrayFilter } from \"../../helpers/array.mjs\";\r\nimport { cancelAnimationFrame, requestAnimationFrame } from \"../../helpers/feature.mjs\";\r\nimport { isVisible } from \"../../helpers/dom/element.mjs\";\r\nimport GhostTable from \"../../utils/ghostTable.mjs\";\r\nimport { isObject, hasOwnProperty } from \"../../helpers/object.mjs\";\r\nimport { valueAccordingPercent, rangeEach } from \"../../helpers/number.mjs\";\r\nimport SamplesGenerator from \"../../utils/samplesGenerator.mjs\";\r\nimport { isPercentValue } from \"../../helpers/string.mjs\";\r\nimport { PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\r\nexport var PLUGIN_KEY = 'autoRowSize';\r\nexport var PLUGIN_PRIORITY = 40;\r\nvar ROW_WIDTHS_MAP_NAME = 'autoRowSize';\r\n/* eslint-disable jsdoc/require-description-complete-sentence */\r\n\r\n/**\r\n * @plugin AutoRowSize\r\n * @class AutoRowSize\r\n * @description\r\n * This plugin allows to set row heights based on their highest cells.\r\n *\r\n * By default, the plugin is declared as `undefined`, which makes it disabled (same as if it was declared as `false`).\r\n * Enabling this plugin may decrease the overall table performance, as it needs to calculate the heights of all cells to\r\n * resize the rows accordingly.\r\n * If you experience problems with the performance, try turning this feature off and declaring the row heights manually.\r\n *\r\n * Row height calculations are divided into sync and async part. Each of this parts has their own advantages and\r\n * disadvantages. Synchronous calculations are faster but they block the browser UI, while the slower asynchronous\r\n * operations don't block the browser UI.\r\n *\r\n * To configure the sync/async distribution, you can pass an absolute value (number of columns) or a percentage value to a config object:\r\n * ```js\r\n * // as a number (300 columns in sync, rest async)\r\n * autoRowSize: {syncLimit: 300},.\r\n *\r\n * // as a string (percent)\r\n * autoRowSize: {syncLimit: '40%'},.\r\n *\r\n * // allow sample duplication\r\n * autoRowSize: {syncLimit: '40%', allowSampleDuplicates: true},\r\n * ```\r\n *\r\n * You can also use the `allowSampleDuplicates` option to allow sampling duplicate values when calculating the row\r\n * height. __Note__, that this might have a negative impact on performance.\r\n *\r\n * To configure this plugin see {@link Options#autoRowSize}.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const hot = new Handsontable(document.getElementById('example'), {\r\n *   data: getData(),\r\n *   autoRowSize: true\r\n * });\r\n * // Access to plugin instance:\r\n * const plugin = hot.getPlugin('autoRowSize');\r\n *\r\n * plugin.getRowHeight(4);\r\n *\r\n * if (plugin.isEnabled()) {\r\n *   // code...\r\n * }\r\n * ```\r\n */\r\n\r\n/* eslint-enable jsdoc/require-description-complete-sentence */\r\n\r\nexport var AutoRowSize = /*#__PURE__*/function (_BasePlugin) {\r\n  _inherits(AutoRowSize, _BasePlugin);\r\n\r\n  var _super = _createSuper(AutoRowSize);\r\n\r\n  function AutoRowSize(hotInstance) {\r\n    var _this;\r\n\r\n    _classCallCheck(this, AutoRowSize);\r\n\r\n    _this = _super.call(this, hotInstance);\r\n    /**\r\n     * PhysicalIndexToValueMap to keep and track heights for physical row indexes.\r\n     *\r\n     * @private\r\n     * @type {PhysicalIndexToValueMap}\r\n     */\r\n\r\n    _this.rowHeightsMap = void 0;\r\n    /**\r\n     * Columns header's height cache.\r\n     *\r\n     * @private\r\n     * @type {number}\r\n     */\r\n\r\n    _this.headerHeight = null;\r\n    /**\r\n     * Instance of {@link GhostTable} for rows and columns size calculations.\r\n     *\r\n     * @private\r\n     * @type {GhostTable}\r\n     */\r\n\r\n    _this.ghostTable = new GhostTable(_this.hot);\r\n    /**\r\n     * Instance of {@link SamplesGenerator} for generating samples necessary for rows height calculations.\r\n     *\r\n     * @private\r\n     * @type {SamplesGenerator}\r\n     */\r\n\r\n    _this.samplesGenerator = new SamplesGenerator(function (row, col) {\r\n      var cellValue;\r\n\r\n      if (row >= 0) {\r\n        cellValue = _this.hot.getDataAtCell(row, col);\r\n      } else if (row === -1) {\r\n        cellValue = _this.hot.getColHeader(col);\r\n      }\r\n\r\n      return {\r\n        value: cellValue\r\n      };\r\n    });\r\n    /**\r\n     * `true` if only the first calculation was performed.\r\n     *\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n\r\n    _this.firstCalculation = true;\r\n    /**\r\n     * `true` if the size calculation is in progress.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n\r\n    _this.inProgress = false;\r\n    /**\r\n     * Number of already measured rows (we already know their sizes).\r\n     *\r\n     * @type {number}\r\n     */\r\n\r\n    _this.measuredRows = 0;\r\n    /**\r\n     * PhysicalIndexToValueMap to keep and track heights for physical row indexes.\r\n     *\r\n     * @private\r\n     * @type {PhysicalIndexToValueMap}\r\n     */\r\n\r\n    _this.rowHeightsMap = new IndexToValueMap();\r\n\r\n    _this.hot.rowIndexMapper.registerMap(ROW_WIDTHS_MAP_NAME, _this.rowHeightsMap); // Leave the listener active to allow auto-sizing the rows when the plugin is disabled.\r\n    // This is necesseary for height recalculation for resize handler doubleclick (ManualRowResize).\r\n\r\n\r\n    _this.addHook('beforeRowResize', function (size, row, isDblClick) {\r\n      return _this.onBeforeRowResize(size, row, isDblClick);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\r\n   * hook and if it returns `true` than the {@link AutoRowSize#enablePlugin} method is called.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n\r\n\r\n  _createClass(AutoRowSize, [{\r\n    key: \"isEnabled\",\r\n    value: function isEnabled() {\r\n      var settings = this.hot.getSettings()[PLUGIN_KEY];\r\n      return settings === true || isObject(settings);\r\n    }\r\n    /**\r\n     * Enables the plugin functionality for this Handsontable instance.\r\n     */\r\n\r\n  }, {\r\n    key: \"enablePlugin\",\r\n    value: function enablePlugin() {\r\n      var _this2 = this;\r\n\r\n      if (this.enabled) {\r\n        return;\r\n      }\r\n\r\n      this.setSamplingOptions();\r\n      this.addHook('afterLoadData', function () {\r\n        return _this2.onAfterLoadData();\r\n      });\r\n      this.addHook('beforeChange', function (changes) {\r\n        return _this2.onBeforeChange(changes);\r\n      });\r\n      this.addHook('beforeColumnResize', function () {\r\n        return _this2.recalculateAllRowsHeight();\r\n      });\r\n      this.addHook('beforeRender', function (force) {\r\n        return _this2.onBeforeRender(force);\r\n      });\r\n      this.addHook('modifyRowHeight', function (height, row) {\r\n        return _this2.getRowHeight(row, height);\r\n      });\r\n      this.addHook('modifyColumnHeaderHeight', function () {\r\n        return _this2.getColumnHeaderHeight();\r\n      });\r\n\r\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"enablePlugin\", this).call(this);\r\n    }\r\n    /**\r\n     * Disables the plugin functionality for this Handsontable instance.\r\n     */\r\n\r\n  }, {\r\n    key: \"disablePlugin\",\r\n    value: function disablePlugin() {\r\n      var _this3 = this;\r\n\r\n      this.headerHeight = null;\r\n\r\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"disablePlugin\", this).call(this); // Leave the listener active to allow auto-sizing the rows when the plugin is disabled.\r\n      // This is necesseary for height recalculation for resize handler doubleclick (ManualRowResize).\r\n\r\n\r\n      this.addHook('beforeRowResize', function (size, row, isDblClick) {\r\n        return _this3.onBeforeRowResize(size, row, isDblClick);\r\n      });\r\n    }\r\n    /**\r\n     * Calculate a given rows height.\r\n     *\r\n     * @param {number|object} rowRange Row index or an object with `from` and `to` indexes as a range.\r\n     * @param {number|object} colRange Column index or an object with `from` and `to` indexes as a range.\r\n     * @param {boolean} [force=false] If `true` the calculation will be processed regardless of whether the width exists in the cache.\r\n     */\r\n\r\n  }, {\r\n    key: \"calculateRowsHeight\",\r\n    value: function calculateRowsHeight() {\r\n      var _this4 = this;\r\n\r\n      var rowRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\r\n        from: 0,\r\n        to: this.hot.countRows() - 1\r\n      };\r\n      var colRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\r\n        from: 0,\r\n        to: this.hot.countCols() - 1\r\n      };\r\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n      // eslint-disable-line max-len\r\n      var rowsRange = typeof rowRange === 'number' ? {\r\n        from: rowRange,\r\n        to: rowRange\r\n      } : rowRange;\r\n      var columnsRange = typeof colRange === 'number' ? {\r\n        from: colRange,\r\n        to: colRange\r\n      } : colRange;\r\n\r\n      if (this.hot.getColHeader(0) !== null) {\r\n        var samples = this.samplesGenerator.generateRowSamples(-1, columnsRange);\r\n        this.ghostTable.addColumnHeadersRow(samples.get(-1));\r\n      }\r\n\r\n      rangeEach(rowsRange.from, rowsRange.to, function (row) {\r\n        // For rows we must calculate row height even when user had set height value manually.\r\n        // We can shrink column but cannot shrink rows!\r\n        if (force || _this4.rowHeightsMap.getValueAtIndex(row) === null) {\r\n          var _samples = _this4.samplesGenerator.generateRowSamples(row, columnsRange);\r\n\r\n          arrayEach(_samples, function (_ref) {\r\n            var _ref2 = _slicedToArray(_ref, 2),\r\n                rowIndex = _ref2[0],\r\n                sample = _ref2[1];\r\n\r\n            return _this4.ghostTable.addRow(rowIndex, sample);\r\n          });\r\n        }\r\n      });\r\n\r\n      if (this.ghostTable.rows.length) {\r\n        this.hot.batchExecution(function () {\r\n          _this4.ghostTable.getHeights(function (row, height) {\r\n            if (row < 0) {\r\n              _this4.headerHeight = height;\r\n            } else {\r\n              _this4.rowHeightsMap.setValueAtIndex(_this4.hot.toPhysicalRow(row), height);\r\n            }\r\n          });\r\n        }, true);\r\n        this.measuredRows = rowsRange.to + 1;\r\n        this.ghostTable.clean();\r\n      }\r\n    }\r\n    /**\r\n     * Calculate all rows heights. The calculated row will be cached in the {@link AutoRowSize#heights} property.\r\n     * To retrieve height for specified row use {@link AutoRowSize#getRowHeight} method.\r\n     *\r\n     * @param {object|number} colRange Row index or an object with `from` and `to` properties which define row range.\r\n     */\r\n\r\n  }, {\r\n    key: \"calculateAllRowsHeight\",\r\n    value: function calculateAllRowsHeight() {\r\n      var _this5 = this;\r\n\r\n      var colRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\r\n        from: 0,\r\n        to: this.hot.countCols() - 1\r\n      };\r\n      var current = 0;\r\n      var length = this.hot.countRows() - 1;\r\n      var timer = null;\r\n      this.inProgress = true;\r\n\r\n      var loop = function loop() {\r\n        // When hot was destroyed after calculating finished cancel frame\r\n        if (!_this5.hot) {\r\n          cancelAnimationFrame(timer);\r\n          _this5.inProgress = false;\r\n          return;\r\n        }\r\n\r\n        _this5.calculateRowsHeight({\r\n          from: current,\r\n          to: Math.min(current + AutoRowSize.CALCULATION_STEP, length)\r\n        }, colRange);\r\n\r\n        current = current + AutoRowSize.CALCULATION_STEP + 1;\r\n\r\n        if (current < length) {\r\n          timer = requestAnimationFrame(loop);\r\n        } else {\r\n          cancelAnimationFrame(timer);\r\n          _this5.inProgress = false; // @TODO Should call once per render cycle, currently fired separately in different plugins\r\n\r\n          _this5.hot.view.adjustElementsSize(true); // tmp\r\n\r\n\r\n          if (_this5.hot.view.wt.wtOverlays.leftOverlay.needFullRender) {\r\n            _this5.hot.view.wt.wtOverlays.leftOverlay.clone.draw();\r\n          }\r\n        }\r\n      };\r\n\r\n      var syncLimit = this.getSyncCalculationLimit(); // sync\r\n\r\n      if (this.firstCalculation && syncLimit >= 0) {\r\n        this.calculateRowsHeight({\r\n          from: 0,\r\n          to: syncLimit\r\n        }, colRange);\r\n        this.firstCalculation = false;\r\n        current = syncLimit + 1;\r\n      } // async\r\n\r\n\r\n      if (current < length) {\r\n        loop();\r\n      } else {\r\n        this.inProgress = false;\r\n        this.hot.view.adjustElementsSize(false);\r\n      }\r\n    }\r\n    /**\r\n     * Sets the sampling options.\r\n     *\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: \"setSamplingOptions\",\r\n    value: function setSamplingOptions() {\r\n      var setting = this.hot.getSettings()[PLUGIN_KEY];\r\n      var samplingRatio = setting && hasOwnProperty(setting, 'samplingRatio') ? setting.samplingRatio : void 0;\r\n      var allowSampleDuplicates = setting && hasOwnProperty(setting, 'allowSampleDuplicates') ? setting.allowSampleDuplicates : void 0;\r\n\r\n      if (samplingRatio && !isNaN(samplingRatio)) {\r\n        this.samplesGenerator.setSampleCount(parseInt(samplingRatio, 10));\r\n      }\r\n\r\n      if (allowSampleDuplicates) {\r\n        this.samplesGenerator.setAllowDuplicates(allowSampleDuplicates);\r\n      }\r\n    }\r\n    /**\r\n     * Recalculates all rows height (overwrite cache values).\r\n     */\r\n\r\n  }, {\r\n    key: \"recalculateAllRowsHeight\",\r\n    value: function recalculateAllRowsHeight() {\r\n      if (isVisible(this.hot.view.wt.wtTable.TABLE)) {\r\n        this.clearCache();\r\n        this.calculateAllRowsHeight();\r\n      }\r\n    }\r\n    /**\r\n     * Gets value which tells how many rows should be calculated synchronously (rest of the rows will be calculated\r\n     * asynchronously). The limit is calculated based on `syncLimit` set to autoRowSize option (see {@link Options#autoRowSize}).\r\n     *\r\n     * @returns {number}\r\n     */\r\n\r\n  }, {\r\n    key: \"getSyncCalculationLimit\",\r\n    value: function getSyncCalculationLimit() {\r\n      var settings = this.hot.getSettings()[PLUGIN_KEY];\r\n      /* eslint-disable no-bitwise */\r\n\r\n      var limit = AutoRowSize.SYNC_CALCULATION_LIMIT;\r\n      var rowsLimit = this.hot.countRows() - 1;\r\n\r\n      if (isObject(settings)) {\r\n        limit = settings.syncLimit;\r\n\r\n        if (isPercentValue(limit)) {\r\n          limit = valueAccordingPercent(rowsLimit, limit);\r\n        } else {\r\n          // Force to Number\r\n          limit >>= 0;\r\n        }\r\n      }\r\n\r\n      return Math.min(limit, rowsLimit);\r\n    }\r\n    /**\r\n     * Gets the calculated row height.\r\n     *\r\n     * @param {number} row Visual row index.\r\n     * @param {number} [defaultHeight] Default row height. It will be picked up if no calculated height found.\r\n     * @returns {number}\r\n     */\r\n\r\n  }, {\r\n    key: \"getRowHeight\",\r\n    value: function getRowHeight(row) {\r\n      var defaultHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : void 0;\r\n      var cachedHeight = row < 0 ? this.headerHeight : this.rowHeightsMap.getValueAtIndex(this.hot.toPhysicalRow(row));\r\n      var height = defaultHeight;\r\n\r\n      if (cachedHeight !== null && cachedHeight > (defaultHeight || 0)) {\r\n        height = cachedHeight;\r\n      }\r\n\r\n      return height;\r\n    }\r\n    /**\r\n     * Get the calculated column header height.\r\n     *\r\n     * @returns {number|undefined}\r\n     */\r\n\r\n  }, {\r\n    key: \"getColumnHeaderHeight\",\r\n    value: function getColumnHeaderHeight() {\r\n      return this.headerHeight;\r\n    }\r\n    /**\r\n     * Get the first visible row.\r\n     *\r\n     * @returns {number} Returns row index, -1 if table is not rendered or if there are no rows to base the the calculations on.\r\n     */\r\n\r\n  }, {\r\n    key: \"getFirstVisibleRow\",\r\n    value: function getFirstVisibleRow() {\r\n      var wot = this.hot.view.wt;\r\n\r\n      if (wot.wtViewport.rowsVisibleCalculator) {\r\n        return wot.wtTable.getFirstVisibleRow();\r\n      }\r\n\r\n      if (wot.wtViewport.rowsRenderCalculator) {\r\n        return wot.wtTable.getFirstRenderedRow();\r\n      }\r\n\r\n      return -1;\r\n    }\r\n    /**\r\n     * Gets the last visible row.\r\n     *\r\n     * @returns {number} Returns row index or -1 if table is not rendered.\r\n     */\r\n\r\n  }, {\r\n    key: \"getLastVisibleRow\",\r\n    value: function getLastVisibleRow() {\r\n      var wot = this.hot.view.wt;\r\n\r\n      if (wot.wtViewport.rowsVisibleCalculator) {\r\n        return wot.wtTable.getLastVisibleRow();\r\n      }\r\n\r\n      if (wot.wtViewport.rowsRenderCalculator) {\r\n        return wot.wtTable.getLastRenderedRow();\r\n      }\r\n\r\n      return -1;\r\n    }\r\n    /**\r\n     * Clears cached heights.\r\n     */\r\n\r\n  }, {\r\n    key: \"clearCache\",\r\n    value: function clearCache() {\r\n      this.headerHeight = null;\r\n      this.rowHeightsMap.init();\r\n    }\r\n    /**\r\n     * Clears cache by range.\r\n     *\r\n     * @param {object|number} range Row index or an object with `from` and `to` properties which define row range.\r\n     */\r\n\r\n  }, {\r\n    key: \"clearCacheByRange\",\r\n    value: function clearCacheByRange(range) {\r\n      var _this6 = this;\r\n\r\n      var _ref3 = typeof range === 'number' ? {\r\n        from: range,\r\n        to: range\r\n      } : range,\r\n          from = _ref3.from,\r\n          to = _ref3.to;\r\n\r\n      this.hot.batchExecution(function () {\r\n        rangeEach(Math.min(from, to), Math.max(from, to), function (row) {\r\n          _this6.rowHeightsMap.setValueAtIndex(row, null);\r\n        });\r\n      }, true);\r\n    }\r\n    /**\r\n     * Checks if all heights were calculated. If not then return `true` (need recalculate).\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"isNeedRecalculate\",\r\n    value: function isNeedRecalculate() {\r\n      return !!arrayFilter(this.rowHeightsMap.getValues().slice(0, this.measuredRows), function (item) {\r\n        return item === null;\r\n      }).length;\r\n    }\r\n    /**\r\n     * On before render listener.\r\n     *\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: \"onBeforeRender\",\r\n    value: function onBeforeRender() {\r\n      var force = this.hot.renderCall;\r\n      var fixedRowsBottom = this.hot.getSettings().fixedRowsBottom;\r\n      var firstVisibleRow = this.getFirstVisibleRow();\r\n      var lastVisibleRow = this.getLastVisibleRow();\r\n\r\n      if (firstVisibleRow === -1 || lastVisibleRow === -1) {\r\n        return;\r\n      }\r\n\r\n      this.calculateRowsHeight({\r\n        from: firstVisibleRow,\r\n        to: lastVisibleRow\r\n      }, void 0, force); // Calculate rows height synchronously for bottom overlay\r\n\r\n      if (fixedRowsBottom) {\r\n        var totalRows = this.hot.countRows() - 1;\r\n        this.calculateRowsHeight({\r\n          from: totalRows - fixedRowsBottom,\r\n          to: totalRows\r\n        });\r\n      }\r\n\r\n      if (this.isNeedRecalculate() && !this.inProgress) {\r\n        this.calculateAllRowsHeight();\r\n      }\r\n    }\r\n    /**\r\n     * On before row move listener.\r\n     *\r\n     * @private\r\n     * @param {number} from Row index where was grabbed.\r\n     * @param {number} to Destination row index.\r\n     */\r\n\r\n  }, {\r\n    key: \"onBeforeRowMove\",\r\n    value: function onBeforeRowMove(from, to) {\r\n      this.clearCacheByRange({\r\n        from: from,\r\n        to: to\r\n      });\r\n      this.calculateAllRowsHeight();\r\n    }\r\n    /**\r\n     * On before row resize listener.\r\n     *\r\n     * @private\r\n     * @param {number} size The size of the current row index.\r\n     * @param {number} row Current row index.\r\n     * @param {boolean} isDblClick Indicates if the resize was triggered by doubleclick.\r\n     * @returns {number}\r\n     */\r\n\r\n  }, {\r\n    key: \"onBeforeRowResize\",\r\n    value: function onBeforeRowResize(size, row, isDblClick) {\r\n      var newSize = size;\r\n\r\n      if (isDblClick) {\r\n        this.calculateRowsHeight(row, void 0, true);\r\n        newSize = this.getRowHeight(row);\r\n      }\r\n\r\n      return newSize;\r\n    }\r\n    /**\r\n     * On after load data listener.\r\n     *\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: \"onAfterLoadData\",\r\n    value: function onAfterLoadData() {\r\n      var _this7 = this;\r\n\r\n      if (this.hot.view) {\r\n        this.recalculateAllRowsHeight();\r\n      } else {\r\n        // first load - initialization\r\n        setTimeout(function () {\r\n          if (_this7.hot) {\r\n            _this7.recalculateAllRowsHeight();\r\n          }\r\n        }, 0);\r\n      }\r\n    }\r\n    /**\r\n     * On before change listener.\r\n     *\r\n     * @private\r\n     * @param {Array} changes 2D array containing information about each of the edited cells.\r\n     */\r\n\r\n  }, {\r\n    key: \"onBeforeChange\",\r\n    value: function onBeforeChange(changes) {\r\n      var range = null;\r\n\r\n      if (changes.length === 1) {\r\n        range = changes[0][0];\r\n      } else if (changes.length > 1) {\r\n        range = {\r\n          from: changes[0][0],\r\n          to: changes[changes.length - 1][0]\r\n        };\r\n      }\r\n\r\n      if (range !== null) {\r\n        this.clearCacheByRange(range);\r\n      }\r\n    }\r\n    /**\r\n     * Destroys the plugin instance.\r\n     */\r\n\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      this.ghostTable.clean();\r\n\r\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"destroy\", this).call(this);\r\n    }\r\n  }], [{\r\n    key: \"PLUGIN_KEY\",\r\n    get: function get() {\r\n      return PLUGIN_KEY;\r\n    }\r\n  }, {\r\n    key: \"PLUGIN_PRIORITY\",\r\n    get: function get() {\r\n      return PLUGIN_PRIORITY;\r\n    }\r\n  }, {\r\n    key: \"CALCULATION_STEP\",\r\n    get: function get() {\r\n      return 50;\r\n    }\r\n  }, {\r\n    key: \"SYNC_CALCULATION_LIMIT\",\r\n    get: function get() {\r\n      return 500;\r\n    }\r\n  }]);\r\n\r\n  return AutoRowSize;\r\n}(BasePlugin);"]},"metadata":{},"sourceType":"module"}