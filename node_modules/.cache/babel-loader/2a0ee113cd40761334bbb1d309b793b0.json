{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\roleDropDown\\\\roleDropDown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst RoleDropDown = props => {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var options = [\"none\"];\n\n  if (props.roles) {\n    options = props.roles;\n  }\n\n  useEffect(() => {\n    props.onChange(options[0]);\n  }, [options]);\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    props.onChange(options[index]);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    style: {\n      backgroundColor: \"#F5F8FB\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      \"aria-label\": \"Device settings\",\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        \"aria-haspopup\": \"true\",\n        \"aria-controls\": \"lock-menu\",\n        \"aria-label\": \"Role\",\n        onClick: handleClickListItem,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Role\",\n          secondary: options[selectedIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"lock-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        selected: index === selectedIndex,\n        onClick: event => handleMenuItemClick(event, index),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoleDropDown, \"kch2xirq3Jo3hTk4Whrs3UMrBj0=\", false, function () {\n  return [useStyles];\n});\n\n_c = RoleDropDown;\nexport default RoleDropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleDropDown\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/roleDropDown/roleDropDown.js"],"names":["React","useEffect","makeStyles","List","ListItem","ListItemText","MenuItem","Menu","useStyles","theme","root","backgroundColor","palette","background","paper","RoleDropDown","props","classes","anchorEl","setAnchorEl","useState","selectedIndex","setSelectedIndex","handleClickListItem","event","currentTarget","options","roles","onChange","handleMenuItemClick","index","handleClose","Boolean","map","option"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\n\r\nconst RoleDropDown = (props) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  var options = [\"none\"]\r\n  if (props.roles){\r\n    options = props.roles;\r\n  }\r\n\r\n  useEffect(()=> {\r\n    props.onChange(options[0])\r\n  }, [options])\r\n  \r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n    props.onChange(options[index]);\r\n    \r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} style={{backgroundColor: \"#F5F8FB\"}}>\r\n      <List component=\"nav\" aria-label=\"Device settings\">\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"Role\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText primary=\"Role\" secondary={options[selectedIndex]} />\r\n        </ListItem>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {options.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === selectedIndex}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoleDropDown;"]},"metadata":{},"sourceType":"module"}