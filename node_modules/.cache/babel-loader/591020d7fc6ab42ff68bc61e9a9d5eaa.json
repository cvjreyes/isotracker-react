{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\revisionPopUp\\\\revisionPopUp.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-awesome-modal';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RevisionPopUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      issuer_date: null,\n      issuer_designation: null,\n      issuer_draw: null,\n      issuer_check: null,\n      issuer_appr: null\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/revision/\" + this.props.fileName, options).then(response => response.json()).then(async json => {\n      await this.setState({\n        issuer_date: json.issuer_date,\n        issuer_designation: json.issuer_designation,\n        issuer_draw: json.issuer_draw,\n        issuer_check: json.issuer_check,\n        issuer_appr: json.issuer_appr\n      });\n    });\n  }\n\n  async openModal() {\n    const useStyles = makeStyles(theme => ({\n      container: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200\n      }\n    }));\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/revision/\" + this.props.fileName, options).then(response => response.json()).then(async json => {\n      await this.setState({\n        issuer_date: json.rows.issuer_date,\n        issuer_designation: json.rows.issuer_designation,\n        issuer_draw: json.rows.issuer_draw,\n        issuer_check: json.rows.issuer_check,\n        issuer_appr: json.rows.issuer_appr\n      });\n    });\n    await this.setState({\n      visible: true\n    });\n  }\n\n  async closeModal() {\n    await this.setState({\n      visible: false\n    });\n  }\n\n  async request() {\n    const body = {\n      fileName: this.props.fileName,\n      issuer_date: this.state.issuer_date,\n      issuer_designation: this.state.issuer_designation,\n      issuer_draw: this.state.issuer_draw,\n      issuer_check: this.state.issuer_check,\n      issuer_appr: this.state.issuer_appr\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitRevision\", options).then(response => response.json()).then(json => {\n      if (json.success) {\n        this.props.successRequest();\n      }\n    });\n    this.closeModal();\n  }\n\n  async handleDateChange(event) {\n    let d = event.target.value;\n    await this.setState({\n      issuer_date: d\n    });\n  }\n\n  render() {\n    const classes = useStyles();\n    let button = null;\n\n    if (this.state.revision && this.state.issuer_date && this.state.issuer_designation && this.state.issuer_draw && this.state.issuer_check && this.state.issuer_appr) {\n      button = /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"REV\",\n        className: \"btn btn-success\",\n        style: {\n          fontSize: \"12px\",\n          padding: \"2px 5px 2px 5px\",\n          borderColor: \"#B0E0E6\",\n          width: \"40px\",\n          float: \"left\",\n          marginRight: \"5px\",\n          marginTop: \"3px\"\n        },\n        onClick: () => this.openModal()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 22\n      }, this);\n    } else {\n      button = /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"REV\",\n        className: \"btn btn-danger\",\n        style: {\n          fontSize: \"12px\",\n          padding: \"2px 5px 2px 5px\",\n          borderColor: \"#B0E0E6\",\n          width: \"40px\",\n          float: \"left\",\n          marginRight: \"5px\",\n          marginTop: \"3px\"\n        },\n        onClick: () => this.openModal()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 22\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: \"5px\",\n        marginLeft: \"5px\",\n        float: \"right\"\n      },\n      children: [button, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          visible: this.state.visible,\n          width: \"450\",\n          height: \"420\",\n          effect: \"fadeInUp\",\n          onClickAway: () => this.closeModal(),\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            className: \"popUp__title\",\n            style: {\n              marginBottom: \"30px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Revision parameters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 89\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request__container\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              onChange: this.handleDateChange,\n              id: \"date\",\n              type: \"date\",\n              defaultValue: \"2021-01-01\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Designation\",\n              id: \"issuer_designation\",\n              className: \"popUp__input__text\",\n              ref: \"issuer_designation\",\n              style: {\n                marginBottom: \"20px\",\n                color: 'black'\n              },\n              defaultValue: this.state.issuer_designation,\n              onChange: e => this.setState({\n                issuer_designation: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Draw\",\n              id: \"issuer_draw\",\n              className: \"popUp__input__text\",\n              ref: \"issuer_draw\",\n              style: {\n                marginBottom: \"20px\",\n                color: 'black'\n              },\n              defaultValue: this.state.issuer_draw,\n              onChange: e => this.setState({\n                issuer_draw: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Check\",\n              id: \"issuer_check\",\n              className: \"popUp__input__text\",\n              ref: \"issuer_check\",\n              style: {\n                marginBottom: \"20px\",\n                color: 'black'\n              },\n              defaultValue: this.state.issuer_check,\n              onChange: e => this.setState({\n                issuer_check: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Approval\",\n              id: \"issuer_appr\",\n              className: \"popUp__input__text\",\n              ref: \"issuer_appr\",\n              style: {\n                marginBottom: \"20px\",\n                color: 'black'\n              },\n              defaultValue: this.state.issuer_appr,\n              onChange: e => this.setState({\n                issuer_appr: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.request(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-danger\",\n              onClick: () => this.closeModal(),\n              style: {\n                marginLeft: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/revisionPopUp/revisionPopUp.js"],"names":["React","Component","Modal","TextField","makeStyles","RevisionPopUp","constructor","props","state","visible","issuer_date","issuer_designation","issuer_draw","issuer_check","issuer_appr","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","fileName","then","response","json","setState","openModal","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","rows","closeModal","request","body","JSON","stringify","success","successRequest","handleDateChange","event","d","target","value","render","classes","button","revision","fontSize","padding","borderColor","float","marginTop","marginBottom","shrink","color","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n    \r\n\r\nexport default class RevisionPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false,\r\n            issuer_date: null,\r\n            issuer_designation: null,\r\n            issuer_draw: null,\r\n            issuer_check: null,\r\n            issuer_appr: null,\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n        \r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/revision/\"+this.props.fileName, options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            await this.setState({\r\n                issuer_date: json.issuer_date,\r\n                issuer_designation: json.issuer_designation,\r\n                issuer_draw: json.issuer_draw,\r\n                issuer_check: json.issuer_check,\r\n                issuer_appr: json.issuer_appr\r\n            })\r\n        }) \r\n    \r\n    }\r\n\r\n    async openModal() {\r\n\r\n        const useStyles = makeStyles((theme) => ({\r\n            container: {\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n            },\r\n            textField: {\r\n              marginLeft: theme.spacing(1),\r\n              marginRight: theme.spacing(1),\r\n              width: 200,\r\n            },\r\n          }));\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/revision/\"+this.props.fileName, options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            await this.setState({\r\n                issuer_date: json.rows.issuer_date,\r\n                issuer_designation: json.rows.issuer_designation,\r\n                issuer_draw: json.rows.issuer_draw,\r\n                issuer_check: json.rows.issuer_check,\r\n                issuer_appr: json.rows.issuer_appr\r\n            })\r\n        }) \r\n\r\n        await this.setState({\r\n            visible : true,\r\n        });\r\n    }\r\n\r\n    async closeModal() {\r\n        await this.setState({\r\n            visible : false,\r\n        });\r\n    }\r\n\r\n    async request(){  \r\n        \r\n        const body ={\r\n            fileName: this.props.fileName,\r\n            issuer_date: this.state.issuer_date,\r\n            issuer_designation: this.state.issuer_designation,\r\n            issuer_draw: this.state.issuer_draw,\r\n            issuer_check: this.state.issuer_check,\r\n            issuer_appr: this.state.issuer_appr\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitRevision\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if(json.success){\r\n                    this.props.successRequest()\r\n                }\r\n            })\r\n            this.closeModal()\r\n    \r\n    }\r\n\r\n     async handleDateChange (event) {\r\n        let d = event.target.value\r\n        await this.setState({issuer_date: d})\r\n      }\r\n\r\n    render() {      \r\n        \r\n        const classes = useStyles();\r\n        let button = null\r\n        if(this.state.revision && this.state.issuer_date && this.state.issuer_designation && this.state.issuer_draw && this.state.issuer_check && this.state.issuer_appr){\r\n            button = <input type=\"button\"  value=\"REV\" className=\"btn btn-success\"  style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", borderColor:\"#B0E0E6\", width:\"40px\", float:\"left\", marginRight: \"5px\", marginTop:\"3px\"}} onClick={() => this.openModal()} />\r\n        }else{\r\n            button = <input type=\"button\"  value=\"REV\" className=\"btn btn-danger\"  style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", borderColor:\"#B0E0E6\", width:\"40px\", float:\"left\", marginRight: \"5px\", marginTop:\"3px\"}} onClick={() => this.openModal()} />\r\n        }\r\n\r\n        return (\r\n            <div style={{marginRight:\"5px\", marginLeft:\"5px\", float:\"right\"}}>\r\n                {button}\r\n                <div>\r\n                    <Modal visible={this.state.visible} width=\"450\" height=\"420\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                        <center className=\"popUp__title\" style={{marginBottom: \"30px\"}}><h3>Revision parameters</h3></center>\r\n                        <div className=\"request__container\">\r\n                        <TextField\r\n                            onChange={this.handleDateChange}\r\n                            id=\"date\"\r\n                            type=\"date\"\r\n                            defaultValue=\"2021-01-01\"\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                            }}\r\n                        />\r\n                            <input type=\"text\" placeholder=\"Designation\" id=\"issuer_designation\" className=\"popUp__input__text\" ref=\"issuer_designation\" style={{marginBottom: \"20px\", color:'black'}} defaultValue={this.state.issuer_designation} onChange={(e) => this.setState({issuer_designation: e.target.value})} ></input>\r\n                            <input type=\"text\" placeholder=\"Draw\" id=\"issuer_draw\" className=\"popUp__input__text\" ref=\"issuer_draw\" style={{marginBottom: \"20px\", color:'black'}} defaultValue={this.state.issuer_draw} onChange={(e) => this.setState({issuer_draw: e.target.value})} ></input>\r\n                            <input type=\"text\" placeholder=\"Check\" id=\"issuer_check\" className=\"popUp__input__text\" ref=\"issuer_check\" style={{marginBottom: \"20px\", color:'black'}} defaultValue={this.state.issuer_check} onChange={(e) => this.setState({issuer_check: e.target.value})} ></input>\r\n                            <input type=\"text\" placeholder=\"Approval\" id=\"issuer_appr\" className=\"popUp__input__text\" ref=\"issuer_appr\" style={{marginBottom: \"20px\", color:'black'}} defaultValue={this.state.issuer_appr} onChange={(e) => this.setState({issuer_appr: e.target.value})} ></input>\r\n\r\n                           <button class=\"btn btn-sm btn-success\" onClick={() => this.request()} style={{marginRight:\"5px\", fontSize:\"16px\"}}>Submit</button>\r\n                            <button class=\"btn btn-sm btn-danger\" onClick={() => this.closeModal()} style={{marginLeft:\"5px\", fontSize:\"16px\"}}>Cancel</button>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}