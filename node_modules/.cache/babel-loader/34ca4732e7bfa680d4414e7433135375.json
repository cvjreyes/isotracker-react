{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\sptracker\\\\sptracker.js\",\n    _s = $RefreshSig$();\n\nimport \"./sptracker.css\";\nimport React, { useState, useEffect } from 'react';\nimport NavBar from '../../components/navBar/navBar';\nimport CSPTrackerLogo from \"../../assets/images/csptracker.svg\";\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown';\nimport IdleTimer from 'react-idle-timer';\nimport { useHistory } from \"react-router\";\nimport SelectPag from \"../../components/selectPag/selectPag\";\nimport CSPTrackerdDataTable from \"../../components/csptrackerDataTable/csptrackerDataTable\";\nimport HotTable from \"@handsontable/react\";\nimport SaveIcon from \"../../assets/images/save.svg\";\nimport AlertF from \"../../components/alert/alert\";\nimport CSPTrackerRequestPopUp from \"../../components/csptrackerRequestPopUp/csptrackerRequestPopUp\";\nimport CSPTrackerdRequestsDataTable from \"../../components/csptrackerRequestsDataTable/csptrackerRequestsDataTable\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport Reports from \"../../assets/images/view_requests.svg\";\nimport Back from \"../../assets/images/back.svg\";\nimport CSPTrackerKeyParams from \"../../components/csptrackerKeyParams/csptrackerKeyParams\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CSPTracker = () => {\n  _s();\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const settings = {\n    licenseKey: 'non-commercial-and-evaluation',\n    colWidths: 250\n  };\n  const [currentRole, setCurrentRole] = useState();\n  const [currentTab, setCurrentTab] = useState(\"View\");\n  const [roles, setRoles] = useState();\n  const [pagination, setPagination] = useState(10);\n  const [successAlert, setSuccessAlert] = useState(false);\n  const [uploadDrawingSuccess, setUploadDrawingSuccess] = useState(false);\n  const [updateDrawingSuccess, setUpdateDrawingSuccess] = useState(false);\n  const [drawingError, setDrawingError] = useState(false);\n  const [noTagError, setNoTagError] = useState(false);\n  const [invalidFieldError, setInvalidFieldError] = useState(false);\n  const [errorIndex, setErrorIndex] = useState(null);\n  const [warningBlankRequest, setWarningBlankRequest] = useState(false);\n  const [requestSuccess, setRequestSuccess] = useState(false);\n  const [existsRequest, setExistsRequest] = useState(false);\n  const [errorPid, seterrorPid] = useState(false);\n  const [viewData, setViewData] = useState();\n  const [editData, setEditData] = useState();\n  const [descriptionPlaneData, setDescriptionPlaneData] = useState();\n  const [diametersData, setDiametersData] = useState();\n  const [ratingData, setRatingData] = useState();\n  const [specData, setSpecData] = useState();\n  const [endPreparationData, setEndPrepartaionData] = useState();\n  const [boltTypesData, setBoltTypesData] = useState();\n  const [pidData, setPidData] = useState();\n  const [busy, setBusy] = useState(false);\n  const [editingUser, setEditingUser] = useState();\n  const [updateData, setUpdateData] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (!secureStorage.getItem(\"user\")) {\n      history.push(\"/\" + process.env.REACT_APP_PROJECT + \"/\");\n    }\n  }, []);\n  var currentUser = secureStorage.getItem('user');\n  let p1bore,\n      p2bore,\n      p3bore = \"\";\n\n  if (process.env.REACT_APP_MMDN === \"1\") {\n    p1bore = \"p1diameter_nps\";\n    p2bore = \"p2diameter_nps\";\n    p3bore = \"p3diameter_nps\";\n  } else {\n    p1bore = \"p1diameter_dn\";\n    p2bore = \"p2diameter_dn\";\n    p3bore = \"p3diameter_dn\";\n  }\n\n  useEffect(() => {\n    const body = {\n      user: currentUser\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/roles/user\", options).then(response => response.json()).then(json => {\n      setRoles(json.roles);\n\n      if (secureStorage.getItem('role') !== null) {\n        setCurrentRole(secureStorage.getItem('role'));\n      } else {\n        secureStorage.setItem('role', json.roles[0]);\n        setCurrentRole(secureStorage.getItem('role'));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [currentRole]);\n  useEffect(() => {\n    const body = {\n      user: currentUser\n    };\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {});\n  }, [updateData]);\n  useEffect(async () => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker\", options).then(response => response.json()).then(async json => {\n      await setEditData(json.rows);\n    });\n\n    if (currentTab === \"View\") {\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getListsData\", options).then(response => response.json()).then(async json => {\n        await setDescriptionPlaneData(json.descriptionPlaneData);\n        await setDiametersData(json.diametersData);\n        await setRatingData(json.ratingData);\n        await setSpecData(json.specData);\n        await setEndPrepartaionData(json.endPreparationData);\n        await setBoltTypesData(json.boltTypesData);\n        await setPidData(json.pidData);\n      });\n    }\n  }, [currentTab]);\n\n  function uploadSuccess() {\n    setUploadDrawingSuccess(true);\n  }\n\n  function updateSuccess() {\n    setUpdateDrawingSuccess(true);\n  }\n\n  function drawingUploadError() {\n    setDrawingError(true);\n  }\n\n  function errorBlankRequest() {\n    setWarningBlankRequest(true);\n  }\n\n  function successRequest() {\n    setRequestSuccess(true);\n  }\n\n  function existsErrorRequest() {\n    setExistsRequest(true);\n  }\n\n  function errorPidRequest() {\n    seterrorPid(true);\n  }\n\n  function handleOnIdle() {\n    saveChanges();\n    const body = {\n      user: currentUser\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {});\n    secureStorage.clear();\n    history.push(\"/\" + process.env.REACT_APP_PROJECT);\n  }\n\n  async function handleToggle() {\n    if (currentTab === \"View\") {\n      const body = {\n        user: currentUser\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/editCSP\", options).then(response => response.json()).then(async json => {\n        if (json.user) {\n          await setBusy(true);\n          await setEditingUser(json.user);\n        } else {\n          await setBusy(false);\n        }\n\n        await setCurrentTab(\"Edit\");\n      });\n    } else {\n      const body = {\n        user: currentUser\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {\n        if (json.success) {\n          await saveChanges();\n          await setCurrentTab(\"View\");\n        }\n      });\n    }\n  }\n\n  async function handleToggleKP() {\n    if (currentTab === \"View\") {\n      await setCurrentTab(\"CSP KeyParams\");\n    } else {\n      //await saveChangesKP()\n      await setCurrentTab(\"View\");\n    }\n  }\n\n  async function addRow() {\n    let rows = editData;\n    rows.push({\n      tag: \"\",\n      quantity: \"\",\n      description: \"\",\n      description_plan_code: \"\",\n      drawing_filename: \"\",\n      description_iso: \"\",\n      ident: \"\",\n      p1diameter_dn: \"\",\n      p1diameter_nps: \"\",\n      p2diameter_dn: \"\",\n      p2diameter_nps: \"\",\n      p3diameter_dn: \"\",\n      p3diameter_nps: \"\",\n      rating: \"\",\n      spec: \"\",\n      type: \"\",\n      end_preparation: \"\",\n      description_drawing: \"\",\n      face_to_face: \"\",\n      bolt_type: \"\",\n      ready_load: \"\",\n      ready_e3d: \"\",\n      comments: \"\",\n      pid: \"\",\n      line_id: \"\",\n      requisition: \"\",\n      equipnozz: \"\",\n      utility_station: \"\"\n    });\n    await setEditData(rows);\n    await setUpdateData(!updateData);\n  }\n\n  async function saveChanges() {\n    const body = {\n      rows: editData,\n      email: currentUser\n    };\n    let options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/tags\", options).then(response => response.json()).then(async json => {\n      let unique = true;\n\n      if (json.none) {} else {\n        let tags = [];\n\n        for (let i = 0; i < editData.length; i++) {\n          if (tags.indexOf(editData[i].tag) > -1 && editData[i].tag !== null) {\n            unique = false;\n            await setErrorIndex(\"Repeated tag at entry \" + i + \"!\");\n          } else {\n            tags.push(editData[i].tag);\n          }\n        }\n      }\n\n      if (!unique) {\n        await setNoTagError(true);\n      }\n\n      options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitCSP\", options).then(response => response.json()).then(async json => {\n        if (json.success) {\n          await setSuccessAlert(true);\n        }\n      });\n    });\n  }\n\n  async function updateDataMethod() {\n    setUpdateData(!updateData);\n  }\n\n  async function downloadReport() {\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadCSP/\").then(response => response.json()).then(json => {\n      const headers = [\"Tag\", \"Spec\", \"P1Bore\", \"P2Bore\", \"P3Bore\", \"Rating\", \"Quantity\", \"Type\", \"Description\", \"Drawing description\", \"Iso description\", \"Ident\", \"Face to face\", \"FLG Short Code\", \"Comments\", \"Ready to Load\", \"Ready in E3D\", \"Updated\"];\n      const apiData = JSON.parse(json);\n      const fileName = \"CSPTracker report\";\n      const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n      const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'N1', 'O1', 'P1', 'Q1', 'R1', 'S1', 'T1', 'U1', 'V1', 'W1'];\n      const fileExtension = \".xlsx\";\n      let wscols = [];\n\n      for (let i = 0; i < headers.length; i++) {\n        wscols.push({\n          width: 35\n        });\n      }\n\n      const ws = XLSX.utils.json_to_sheet(apiData);\n      ws[\"!cols\"] = wscols;\n\n      for (let i = 0; i < headers.length; i++) {\n        ws[header_cells[i]].v = headers[i];\n      }\n\n      const wb = {\n        Sheets: {\n          data: ws\n        },\n        SheetNames: [\"data\"]\n      };\n      const excelBuffer = XLSX.write(wb, {\n        bookType: \"xlsx\",\n        type: \"array\"\n      });\n      const data = new Blob([excelBuffer], {\n        type: fileType\n      });\n      FileSaver.saveAs(data, fileName + fileExtension);\n    });\n  }\n\n  document.body.style.zoom = 0.8;\n\n  var pageSelector = /*#__PURE__*/_jsxDEV(SelectPag, {\n    onChange: value => setPagination(value),\n    pagination: pagination\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 24\n  }, this);\n\n  var dataTableHeight = \"570px\";\n\n  if (pagination === 10) {\n    dataTableHeight = \"570px\";\n  }\n\n  if (pagination === 25) {\n    dataTableHeight = \"1240px\";\n  }\n\n  if (pagination === 50) {\n    dataTableHeight = \"2330px\";\n  }\n\n  if (pagination === 100) {\n    dataTableHeight = \"4520px\";\n  }\n\n  if (pagination === 500) {\n    dataTableHeight = \"19000px\";\n  }\n\n  let editBtn,\n      addRowBtn,\n      saveBtn,\n      exportBtn,\n      requestBtn,\n      notificationsBtn,\n      designNotificationsBtn,\n      kpBtn = null;\n\n  let table = /*#__PURE__*/_jsxDEV(CSPTrackerdDataTable, {\n    currentRole: currentRole,\n    updateDataMethod: updateDataMethod.bind(this),\n    updateData: updateData,\n    uploadDrawingSuccess: uploadSuccess.bind(this),\n    updateDrawingSuccess: updateSuccess.bind(this),\n    drawingUploadError: drawingUploadError.bind(this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 17\n  }, this);\n\n  if (currentRole === \"Materials\") {\n    editBtn = /*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"switchBtn\",\n      style: {\n        width: \"145px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        style: {\n          width: \"100px\",\n          marginTop: \"4px\"\n        },\n        children: \"Edit mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"edit\",\n        onClick: () => handleToggle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"slide round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 19\n    }, this);\n\n    if (currentTab === \"Edit\") {\n      notificationsBtn = null;\n    } else if (currentTab !== \"Requests\") {\n      notificationsBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"Requests\"),\n        style: {\n          width: \"120px\",\n          marginTop: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Reports,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"4px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 148\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 237\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 32\n      }, this);\n    } else {\n      notificationsBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => setCurrentTab(\"View\"),\n        style: {\n          backgroundColor: \"#99C6F8\",\n          width: \"120px\",\n          marginTop: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Back,\n          alt: \"hold\",\n          className: \"navBar__icon\",\n          style: {\n            marginRight: \"4px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 171\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 257\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 32\n      }, this);\n      editBtn = /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"switchBtn\",\n        style: {\n          width: \"145px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          style: {\n            width: \"100px\",\n            marginTop: \"4px\"\n          },\n          children: \"Edit mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"edit\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"slide round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 23\n      }, this);\n    }\n  }\n\n  if (currentRole === \"3D Admin\") {\n    editBtn = /*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"switchBtn\",\n      style: {\n        width: \"155px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navBar__button__text\",\n        style: {\n          width: \"180px\",\n          marginTop: \"4px\"\n        },\n        children: \"KeyParams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"edit\",\n        onClick: () => handleToggleKP()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"slide round\",\n        style: {\n          marginLeft: \"90px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (currentRole === \"Design\") {\n    requestBtn = /*#__PURE__*/_jsxDEV(CSPTrackerRequestPopUp, {\n      errorBlankRequest: errorBlankRequest.bind(this),\n      successRequest: successRequest.bind(this),\n      existsErrorRequest: existsErrorRequest.bind(this),\n      errorPidRequest: errorPidRequest.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 22\n    }, this);\n  }\n\n  if (currentRole === \"Materials\" || currentRole === \"3D Admin\") {\n    pageSelector = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"87%\",\n        position: \"absolute\"\n      },\n      children: /*#__PURE__*/_jsxDEV(SelectPag, {\n        onChange: value => setPagination(value),\n        pagination: pagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 77\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 24\n    }, this);\n  } else if (currentRole === \"Design\") {\n    pageSelector = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"86%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(SelectPag, {\n        onChange: value => setPagination(value),\n        pagination: pagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 24\n    }, this);\n  } else {\n    pageSelector = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"94%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(SelectPag, {\n        onChange: value => setPagination(value),\n        pagination: pagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"View\") {\n    table = /*#__PURE__*/_jsxDEV(CSPTrackerdDataTable, {\n      pagination: pagination,\n      currentRole: currentRole,\n      updateDataMethod: updateDataMethod.bind(this),\n      updateData: updateData,\n      uploadDrawingSuccess: uploadSuccess.bind(this),\n      updateDrawingSuccess: updateSuccess.bind(this),\n      drawingUploadError: drawingUploadError.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 17\n    }, this);\n    exportBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"action__btn\",\n      name: \"export\",\n      value: \"export\",\n      onClick: () => downloadReport(),\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }, this);\n    addRowBtn = null;\n    saveBtn = null;\n  } else if (currentTab === \"Edit\") {\n    if (!busy) {\n      table = /*#__PURE__*/_jsxDEV(HotTable, {\n        data: editData,\n        colHeaders: [\"<b>TAG</b>\", \"<b>SPEC</b>\", \"<b>P1BORE</b>\", \"<b>P2BORE</b>\", \"P3BORE\", \"<b>RATING</b>\", \"<b>END PREPARATION</b>\", \"<b>LINE ID</b>\", \"<b>P&ID</b>\", \"<b>TYPE</b>\", \"<b>DRAWING DESCRIPTION</b>\", \"<b>QUANTITY</b>\", \"REQUISITION\", \"<b>DESCRIPTION</b>\", \"<b>ISO DESCRIPTION</b>\", \"<b>IDENT</b>\", \"FACE TO FACE\", \"<b>FLG SHORT CODE</b>\", \"EQUIPMENT + NOZZLE\", \"UTILITY STATION\", \"COMMENTS\"],\n        rowHeaders: true,\n        width: \"2200\",\n        height: \"635\",\n        settings: settings,\n        manualColumnResize: true,\n        manualRowResize: true,\n        columns: [{\n          data: \"tag\",\n          type: 'text'\n        }, {\n          data: \"spec\",\n          type: \"dropdown\",\n          strict: \"true\",\n          source: specData\n        }, {\n          data: p1bore,\n          type: \"dropdown\",\n          strict: \"true\",\n          source: diametersData\n        }, {\n          data: p2bore,\n          type: \"dropdown\",\n          strict: \"true\",\n          source: diametersData\n        }, {\n          data: p3bore,\n          type: \"dropdown\",\n          strict: \"true\",\n          source: diametersData\n        }, {\n          data: \"rating\",\n          type: \"dropdown\",\n          strict: \"true\",\n          source: ratingData\n        }, {\n          data: \"end_preparation\",\n          type: \"dropdown\",\n          strict: \"true\",\n          source: endPreparationData\n        }, {\n          data: \"line_id\",\n          type: \"text\"\n        }, {\n          data: \"pid\",\n          type: \"dropdown\",\n          strict: \"true\",\n          source: pidData\n        }, {\n          data: \"type\",\n          type: \"text\"\n        }, {\n          data: \"description_plan_code\",\n          type: \"dropdown\",\n          allowInvalid: true,\n          source: descriptionPlaneData\n        }, {\n          data: \"quantity\",\n          type: \"numeric\"\n        }, {\n          data: \"requisition\",\n          type: 'text'\n        }, {\n          data: \"description\",\n          type: 'text'\n        }, {\n          data: \"description_iso\",\n          type: \"text\"\n        }, {\n          data: \"ident\",\n          type: \"text\"\n        }, {\n          data: \"face_to_face\",\n          type: \"text\"\n        }, {\n          data: \"bolt_type\",\n          type: \"dropdown\",\n          strict: \"true\",\n          source: boltTypesData\n        }, {\n          data: \"equipnozz\",\n          type: \"text\"\n        }, {\n          data: \"utility_station\",\n          type: \"text\"\n        }, {\n          data: \"comments\",\n          type: \"text\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }, this);\n      pageSelector = null;\n      dataTableHeight = \"700px\";\n      addRowBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-sm btn-success\",\n        onClick: () => addRow(),\n        style: {\n          marginRight: \"5px\",\n          fontSize: \"18px\",\n          width: \"35px\",\n          height: \"35px\",\n          borderRadius: \"10px\",\n          float: \"right\",\n          marginTop: \"8px\"\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 25\n      }, this);\n      saveBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => saveChanges(),\n        style: {\n          marginTop: \"7px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: SaveIcon,\n          alt: \"save\",\n          className: \"navBar__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 113\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 175\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 23\n      }, this);\n    } else {\n      table = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connected__panel\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"connected__text\",\n          children: [\"The user \", editingUser, \" is already editing!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 21\n      }, this);\n    }\n  } else if (currentTab === \"Requests\") {\n    table = /*#__PURE__*/_jsxDEV(CSPTrackerdRequestsDataTable, {\n      updateDataMethod: updateDataMethod.bind(this),\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 17\n    }, this);\n  } else if (currentTab === \"CSP KeyParams\") {\n    table = /*#__PURE__*/_jsxDEV(CSPTrackerKeyParams, {\n      success: () => setSuccessAlert(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [updateData, /*#__PURE__*/_jsxDEV(IdleTimer, {\n      timeout: 1000 * 60 * 5,\n      onIdle: handleOnIdle,\n      debounce: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      onChange: value => setCurrentTab(currentTab)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${successAlert ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setSuccessAlert(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Changes saved!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${uploadDrawingSuccess ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setUploadDrawingSuccess(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Drawing uploaded successfully!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${updateDrawingSuccess ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setUpdateDrawingSuccess(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Drawing updated successfully!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${noTagError ? 'alert-shown' : 'alert-error-hidden'}`,\n      onTransitionEnd: () => setNoTagError(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"waring\",\n        text: errorIndex,\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${invalidFieldError ? 'alert-shown' : 'alert-error-hidden'}`,\n      onTransitionEnd: () => setInvalidFieldError(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"error\",\n        subtext: \"At least one of the entries had an invalid field!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${requestSuccess ? 'alert-shown' : 'alert-error-hidden'}`,\n      onTransitionEnd: () => setRequestSuccess(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"SP requested successfully!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${warningBlankRequest ? 'alert-shown' : 'alert-error-hidden'}`,\n      onTransitionEnd: () => setWarningBlankRequest(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"warning\",\n        text: \"All fileds need to be filled!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${existsRequest ? 'alert-shown' : 'alert-error-hidden'}`,\n      onTransitionEnd: () => setExistsRequest(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"error\",\n        subtext: \"An SP with that SPTag already exists!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${errorPid ? 'alert-shown' : 'alert-error-hidden'}`,\n      onTransitionEnd: () => seterrorPid(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"error\",\n        subtext: \"The specified P&ID is invalid!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isotracker__row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isotracker__column\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CSPTrackerLogo,\n          alt: \"CSPTrackerLogo\",\n          className: \"isoTrackerLogo__image2\",\n          style: {\n            height: \"85px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roleSelector__containerF\",\n          children: /*#__PURE__*/_jsxDEV(RoleDropDown, {\n            style: {\n              paddingLeft: \"2px\"\n            },\n            onChange: value => setCurrentRole(value),\n            roles: roles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"isotracker__table__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"isotracker__table__navBar__container\",\n        style: {\n          height: \"65px \"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"isotracker__table__navBar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [requestBtn, editBtn, notificationsBtn, designNotificationsBtn, saveBtn, pageSelector]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"isotracker__table__tray__and__table__container\",\n        style: {\n          height: dataTableHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"discplines__table__table\",\n          style: {\n            height: dataTableHeight\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: dataTableHeight\n            },\n            className: \"isotracker__table__table__container\",\n            style: {\n              width: \"2200px\"\n            },\n            children: [table, addRowBtn]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      className: \"actionBtns__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginTop: \"10px\"\n        },\n        children: exportBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 491,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CSPTracker, \"SypAauG2qmoRh0IKdeY56Zn7yV0=\", false, function () {\n  return [useHistory];\n});\n\n_c = CSPTracker;\nexport default CSPTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSPTracker\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/sptracker/sptracker.js"],"names":["React","useState","useEffect","NavBar","RoleDropDown","IdleTimer","useHistory","SelectPag","CSPTrackerdDataTable","HotTable","AlertF","CSPTrackerRequestPopUp","CSPTrackerdRequestsDataTable","FileSaver","XLSX","CSPTrackerKeyParams","CSPTracker","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","settings","licenseKey","colWidths","currentRole","setCurrentRole","currentTab","setCurrentTab","roles","setRoles","pagination","setPagination","successAlert","setSuccessAlert","uploadDrawingSuccess","setUploadDrawingSuccess","updateDrawingSuccess","setUpdateDrawingSuccess","drawingError","setDrawingError","noTagError","setNoTagError","invalidFieldError","setInvalidFieldError","errorIndex","setErrorIndex","warningBlankRequest","setWarningBlankRequest","requestSuccess","setRequestSuccess","existsRequest","setExistsRequest","errorPid","seterrorPid","viewData","setViewData","editData","setEditData","descriptionPlaneData","setDescriptionPlaneData","diametersData","setDiametersData","ratingData","setRatingData","specData","setSpecData","endPreparationData","setEndPrepartaionData","boltTypesData","setBoltTypesData","pidData","setPidData","busy","setBusy","editingUser","setEditingUser","updateData","setUpdateData","history","getItem","push","process","env","REACT_APP_PROJECT","currentUser","p1bore","p2bore","p3bore","REACT_APP_MMDN","body","user","options","method","headers","JSON","stringify","fetch","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","setItem","catch","error","console","log","rows","uploadSuccess","updateSuccess","drawingUploadError","errorBlankRequest","successRequest","existsErrorRequest","errorPidRequest","handleOnIdle","saveChanges","clear","handleToggle","success","handleToggleKP","addRow","tag","quantity","description","description_plan_code","drawing_filename","description_iso","ident","p1diameter_dn","p1diameter_nps","p2diameter_dn","p2diameter_nps","p3diameter_dn","p3diameter_nps","rating","spec","type","end_preparation","description_drawing","face_to_face","bolt_type","ready_load","ready_e3d","comments","pid","line_id","requisition","equipnozz","utility_station","email","unique","none","tags","i","length","indexOf","updateDataMethod","downloadReport","apiData","parse","fileName","fileType","header_cells","fileExtension","wscols","width","ws","utils","json_to_sheet","v","wb","Sheets","SheetNames","excelBuffer","write","bookType","Blob","saveAs","document","style","zoom","pageSelector","value","dataTableHeight","editBtn","addRowBtn","saveBtn","exportBtn","requestBtn","notificationsBtn","designNotificationsBtn","kpBtn","table","bind","marginTop","Reports","marginRight","backgroundColor","Back","marginLeft","position","strict","source","allowInvalid","fontSize","height","borderRadius","float","SaveIcon","CSPTrackerLogo","paddingLeft","display"],"mappings":"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","sourcesContent":["import \"./sptracker.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport CSPTrackerLogo from \"../../assets/images/csptracker.svg\"\r\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown'\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\nimport SelectPag from \"../../components/selectPag/selectPag\"\r\nimport CSPTrackerdDataTable from \"../../components/csptrackerDataTable/csptrackerDataTable\"\r\nimport HotTable from \"@handsontable/react\"\r\n\r\nimport SaveIcon from \"../../assets/images/save.svg\"\r\nimport AlertF from \"../../components/alert/alert\"\r\nimport CSPTrackerRequestPopUp from \"../../components/csptrackerRequestPopUp/csptrackerRequestPopUp\"\r\nimport CSPTrackerdRequestsDataTable from \"../../components/csptrackerRequestsDataTable/csptrackerRequestsDataTable\"\r\n\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Reports from \"../../assets/images/view_requests.svg\"\r\nimport Back from \"../../assets/images/back.svg\"\r\nimport CSPTrackerKeyParams from \"../../components/csptrackerKeyParams/csptrackerKeyParams\"\r\n\r\nconst CSPTracker = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const settings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 250,\r\n      }\r\n\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [currentTab, setCurrentTab] = useState(\"View\")\r\n    const [roles, setRoles] = useState();\r\n    const [pagination, setPagination] = useState(10)\r\n\r\n    const [successAlert, setSuccessAlert] = useState(false);\r\n    const [uploadDrawingSuccess, setUploadDrawingSuccess] = useState(false);\r\n    const [updateDrawingSuccess, setUpdateDrawingSuccess] = useState(false);\r\n    const [drawingError, setDrawingError] = useState(false);\r\n    const [noTagError, setNoTagError] = useState(false);\r\n    const [invalidFieldError, setInvalidFieldError] = useState(false);\r\n    const [errorIndex, setErrorIndex] = useState(null);\r\n    const [warningBlankRequest, setWarningBlankRequest] = useState(false)\r\n    const [requestSuccess, setRequestSuccess] = useState(false)\r\n    const [existsRequest, setExistsRequest] = useState(false)\r\n    const [errorPid, seterrorPid] = useState(false)\r\n\r\n    const [viewData, setViewData] = useState()\r\n    const [editData, setEditData] = useState()\r\n    const [descriptionPlaneData, setDescriptionPlaneData] = useState()\r\n    const [diametersData, setDiametersData] = useState()\r\n    const [ratingData, setRatingData] = useState()\r\n    const [specData, setSpecData] = useState()\r\n    const [endPreparationData, setEndPrepartaionData] = useState()\r\n    const [boltTypesData, setBoltTypesData] = useState()\r\n    const [pidData, setPidData] = useState()\r\n\r\n    const [busy, setBusy] = useState(false)\r\n    const [editingUser, setEditingUser] = useState()\r\n\r\n    const [updateData, setUpdateData] = useState(false)    \r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        if(!secureStorage.getItem(\"user\")){\r\n            history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/\");\r\n        }\r\n    }, [])\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    let p1bore, p2bore, p3bore = \"\"\r\n\r\n    if(process.env.REACT_APP_MMDN === \"1\"){\r\n        p1bore = \"p1diameter_nps\"\r\n        p2bore = \"p2diameter_nps\"\r\n        p3bore = \"p3diameter_nps\"\r\n    }else{\r\n        p1bore = \"p1diameter_dn\"\r\n        p2bore = \"p2diameter_dn\"\r\n        p3bore = \"p3diameter_dn\"\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        let options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n\r\n    },[updateData])\r\n\r\n    useEffect(async()=>{\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                await setEditData(json.rows)\r\n            })\r\n\r\n        if(currentTab === \"View\"){  \r\n    \r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getListsData\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                await setDescriptionPlaneData(json.descriptionPlaneData)\r\n                await setDiametersData(json.diametersData)\r\n                await setRatingData(json.ratingData)\r\n                await setSpecData(json.specData)\r\n                await setEndPrepartaionData(json.endPreparationData)\r\n                await setBoltTypesData(json.boltTypesData)\r\n                await setPidData(json.pidData)\r\n            })\r\n        }    \r\n    }, [currentTab])\r\n\r\n    function uploadSuccess(){\r\n        setUploadDrawingSuccess(true)\r\n    }\r\n\r\n    function updateSuccess(){\r\n        setUpdateDrawingSuccess(true)\r\n    }\r\n\r\n    function drawingUploadError(){\r\n        setDrawingError(true)\r\n    }\r\n\r\n    function errorBlankRequest(){\r\n        setWarningBlankRequest(true)\r\n    }\r\n\r\n    function successRequest(){\r\n        setRequestSuccess(true)\r\n    }\r\n\r\n    function existsErrorRequest(){\r\n        setExistsRequest(true)\r\n    }\r\n\r\n    function errorPidRequest(){\r\n        seterrorPid(true)\r\n    }\r\n\r\n    function handleOnIdle(){\r\n        saveChanges()\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n\r\n    async function handleToggle(){\r\n        if(currentTab === \"View\"){\r\n            const body = {\r\n                user: currentUser,\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/editCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                if(json.user){\r\n                    await setBusy(true)\r\n                    await setEditingUser(json.user)\r\n                }else{\r\n                    await setBusy(false)\r\n                }\r\n                await setCurrentTab(\"Edit\")\r\n            })\r\n            \r\n        }else{\r\n            const body = {\r\n                user: currentUser,\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                if(json.success){\r\n                    await saveChanges()\r\n                    await setCurrentTab(\"View\")\r\n                }\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    async function handleToggleKP(){\r\n        if(currentTab === \"View\"){\r\n            await setCurrentTab(\"CSP KeyParams\")\r\n            \r\n        }else{\r\n            //await saveChangesKP()\r\n            await setCurrentTab(\"View\")\r\n            \r\n        }\r\n    }\r\n\r\n    async function addRow(){\r\n        let rows = editData\r\n        rows.push({tag:\"\", quantity: \"\", description: \"\", description_plan_code: \"\", drawing_filename: \"\", description_iso: \"\", ident: \"\", p1diameter_dn: \"\", p1diameter_nps: \"\", p2diameter_dn: \"\", p2diameter_nps: \"\", p3diameter_dn: \"\", p3diameter_nps: \"\", rating: \"\", spec: \"\", type: \"\", end_preparation: \"\", description_drawing: \"\", face_to_face: \"\", bolt_type: \"\", ready_load: \"\", ready_e3d: \"\", comments: \"\", pid: \"\", line_id: \"\", requisition: \"\", equipnozz: \"\", utility_station: \"\"})\r\n        await setEditData(rows)\r\n        await setUpdateData(!updateData)\r\n      }\r\n\r\n    async function saveChanges(){\r\n\r\n        const body = {\r\n            rows: editData,\r\n            email: currentUser\r\n        }\r\n        let options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/tags\", options)\r\n        .then(response => response.json())\r\n        .then(async json =>{\r\n            let unique = true\r\n            if(json.none){\r\n\r\n            }else{\r\n                let tags = []\r\n                for(let i = 0; i < editData.length; i++){\r\n                    if(tags.indexOf(editData[i].tag) > -1 && editData[i].tag !== null){\r\n                        unique = false\r\n                        await setErrorIndex(\"Repeated tag at entry \" + i +\"!\")             \r\n                    }else{\r\n                        tags.push(editData[i].tag)\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if(!unique){\r\n                await setNoTagError(true)\r\n            }\r\n            options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json =>{\r\n                if(json.success){\r\n                    await setSuccessAlert(true)\r\n                }\r\n            })\r\n                                \r\n        })                \r\n             \r\n    }\r\n\r\n    async function updateDataMethod(){\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function downloadReport(){\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadCSP/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"Tag\", \"Spec\", \"P1Bore\", \"P2Bore\", \"P3Bore\", \"Rating\", \"Quantity\", \"Type\", \"Description\", \"Drawing description\", \"Iso description\", \"Ident\", \"Face to face\", \"FLG Short Code\", \"Comments\", \"Ready to Load\", \"Ready in E3D\", \"Updated\"]\r\n            const apiData = JSON.parse(json)\r\n            const fileName = \"CSPTracker report\"\r\n\r\n            const fileType =\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n            const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'N1', 'O1', 'P1', 'Q1', 'R1', 'S1', 'T1', 'U1', 'V1', 'W1']\r\n            const fileExtension = \".xlsx\";\r\n\r\n            let wscols = []\r\n            for(let i = 0; i < headers.length; i++){\r\n                wscols.push({width:35})\r\n            }\r\n\r\n            const ws = XLSX.utils.json_to_sheet(apiData);   \r\n            ws[\"!cols\"] = wscols\r\n            for(let i = 0; i < headers.length; i++){\r\n                ws[header_cells[i]].v = headers[i]\r\n            }\r\n            const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n            const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n            const data = new Blob([excelBuffer], { type: fileType });\r\n            FileSaver.saveAs(data, fileName + fileExtension);\r\n        })\r\n    }\r\n\r\n    document.body.style.zoom = 0.8\r\n\r\n    var pageSelector = <SelectPag onChange={value => setPagination(value)} pagination = {pagination}/>\r\n\r\n    var dataTableHeight = \"570px\"\r\n\r\n    if (pagination === 10){\r\n        dataTableHeight = \"570px\"\r\n    }if(pagination === 25){\r\n        dataTableHeight = \"1240px\"\r\n    }if(pagination === 50){\r\n        dataTableHeight = \"2330px\"\r\n    }if(pagination === 100){\r\n        dataTableHeight = \"4520px\"\r\n    }if(pagination === 500){\r\n        dataTableHeight = \"19000px\"    \r\n    }\r\n\r\n    let editBtn, addRowBtn, saveBtn, exportBtn, requestBtn, notificationsBtn, designNotificationsBtn, kpBtn = null\r\n    let table = <CSPTrackerdDataTable currentRole = {currentRole} updateDataMethod = {updateDataMethod.bind(this)} updateData = {updateData} uploadDrawingSuccess = {uploadSuccess.bind(this)} updateDrawingSuccess = {updateSuccess.bind(this)} drawingUploadError={drawingUploadError.bind(this)}/>\r\n    if(currentRole === \"Materials\"){\r\n        editBtn = <label class=\"switchBtn\" style={{width:\"145px\"}}>\r\n                    <p className=\"navBar__button__text\" style={{width:\"100px\", marginTop:\"4px\"}}>Edit mode</p>\r\n                    <input type=\"checkbox\" id=\"edit\" onClick={()=>handleToggle()}/>\r\n                    <div class=\"slide round\"></div>\r\n                </label>   \r\n                   \r\n        if(currentTab === \"Edit\"){\r\n            notificationsBtn = null\r\n        }\r\n        else if(currentTab !== \"Requests\"){\r\n            notificationsBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"Requests\")} style={{width:\"120px\", marginTop:\"5px\"}}><img src={Reports} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"4px\"}}></img><p className=\"navBar__button__text\">Requests</p></button>\r\n        }else{\r\n            notificationsBtn = <button className=\"navBar__button\" onClick={()=>setCurrentTab(\"View\")} style={{backgroundColor:\"#99C6F8\", width:\"120px\", marginTop:\"5px\"}}><img src={Back} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"4px\"}}></img><p className=\"navBar__button__text\">Back</p></button>\r\n            editBtn = <label class=\"switchBtn\" style={{width:\"145px\"}}>\r\n            <p className=\"navBar__button__text\" style={{width:\"100px\", marginTop:\"4px\"}}>Edit mode</p>\r\n            <input type=\"checkbox\" id=\"edit\" disabled/>\r\n            <div class=\"slide round\"></div>\r\n        </label>\r\n        }\r\n    }\r\n\r\n    if(currentRole === \"3D Admin\"){\r\n        editBtn = <label class=\"switchBtn\" style={{width:\"155px\"}}>\r\n                    <p className=\"navBar__button__text\" style={{width:\"180px\", marginTop:\"4px\"}}>KeyParams</p>\r\n                    <input type=\"checkbox\" id=\"edit\" onClick={()=>handleToggleKP()}/>\r\n                    <div class=\"slide round\" style={{marginLeft:\"90px\"}}></div>\r\n                </label>  \r\n    }\r\n\r\n    if(currentRole === \"Design\"){\r\n        requestBtn = <CSPTrackerRequestPopUp errorBlankRequest={errorBlankRequest.bind(this)} successRequest={successRequest.bind(this)} existsErrorRequest={existsErrorRequest.bind(this)} errorPidRequest={errorPidRequest.bind(this)}/>\r\n    }\r\n\r\n    if(currentRole === \"Materials\" || currentRole === \"3D Admin\"){\r\n        pageSelector = <div style={{marginLeft:\"87%\", position:\"absolute\"}}><SelectPag onChange={value => setPagination(value)} pagination = {pagination}/></div>\r\n    }else if(currentRole === \"Design\"){\r\n        pageSelector = <div style={{marginLeft:\"86%\"}}><SelectPag onChange={value => setPagination(value)} pagination = {pagination}/></div>  \r\n    }else{\r\n        pageSelector = <div style={{marginLeft:\"94%\"}}><SelectPag onChange={value => setPagination(value)} pagination = {pagination}/></div>\r\n    }\r\n\r\n    if(currentTab === \"View\"){\r\n        table = <CSPTrackerdDataTable pagination={pagination} currentRole = {currentRole} updateDataMethod = {updateDataMethod.bind(this)} updateData = {updateData} uploadDrawingSuccess = {uploadSuccess.bind(this)} updateDrawingSuccess = {updateSuccess.bind(this)} drawingUploadError={drawingUploadError.bind(this)}/>\r\n        exportBtn = <button className=\"action__btn\" name=\"export\" value=\"export\" onClick={() => downloadReport()}>Export</button>\r\n        addRowBtn = null\r\n        saveBtn = null\r\n        \r\n    }else if(currentTab === \"Edit\"){\r\n        if(!busy){\r\n            table = <HotTable\r\n            data={editData}\r\n            colHeaders = {[\"<b>TAG</b>\", \"<b>SPEC</b>\", \"<b>P1BORE</b>\", \"<b>P2BORE</b>\", \"P3BORE\", \"<b>RATING</b>\", \"<b>END PREPARATION</b>\", \"<b>LINE ID</b>\", \"<b>P&ID</b>\", \"<b>TYPE</b>\", \"<b>DRAWING DESCRIPTION</b>\", \"<b>QUANTITY</b>\", \"REQUISITION\", \"<b>DESCRIPTION</b>\", \"<b>ISO DESCRIPTION</b>\", \"<b>IDENT</b>\", \"FACE TO FACE\", \"<b>FLG SHORT CODE</b>\", \"EQUIPMENT + NOZZLE\", \"UTILITY STATION\", \"COMMENTS\"]}\r\n            rowHeaders={true}\r\n            width=\"2200\"\r\n            height=\"635\"\r\n            settings={settings} \r\n            manualColumnResize={true}\r\n            manualRowResize={true}\r\n            columns= {[{ data: \"tag\", type:'text'}, {data: \"spec\", type:\"dropdown\", strict:\"true\", source: specData}, {data: p1bore, type:\"dropdown\", strict:\"true\", source: diametersData}, {data: p2bore, type:\"dropdown\", strict:\"true\", source: diametersData}, {data: p3bore, type:\"dropdown\", strict:\"true\", source: diametersData}, {data: \"rating\", type:\"dropdown\", strict:\"true\", source: ratingData}, {data: \"end_preparation\", type:\"dropdown\", strict:\"true\", source: endPreparationData}, {data: \"line_id\", type:\"text\"}, {data: \"pid\", type:\"dropdown\", strict:\"true\", source: pidData}, {data: \"type\", type:\"text\"}, {data: \"description_plan_code\", type:\"dropdown\", allowInvalid:true, source: descriptionPlaneData}, {data:\"quantity\", type:\"numeric\"}, { data: \"requisition\", type:'text'}, { data: \"description\", type:'text'}, {data: \"description_iso\", type:\"text\"},{data: \"ident\", type:\"text\"}, {data: \"face_to_face\", type:\"text\"}, {data: \"bolt_type\", type:\"dropdown\", strict:\"true\", source: boltTypesData}, {data:\"equipnozz\", type:\"text\"}, {data:\"utility_station\", type:\"text\"}, {data:\"comments\", type:\"text\"}]}\r\n            />\r\n          \r\n            pageSelector = null\r\n            dataTableHeight= \"700px\"\r\n            addRowBtn = <button class=\"btn btn-sm btn-success\" onClick={() => addRow()} style={{marginRight:\"5px\", fontSize:\"18px\", width:\"35px\", height:\"35px\", borderRadius:\"10px\", float:\"right\", marginTop:\"8px\"}}>+</button>\r\n    \r\n            saveBtn = <button className=\"navBar__button\" onClick={()=> saveChanges()} style={{marginTop:\"7px\"}}><img src={SaveIcon} alt=\"save\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Save</p></button>\r\n        }else{\r\n            table = <div className=\"connected__panel\"><p className=\"connected__text\">The user {editingUser} is already editing!</p></div>\r\n        }    \r\n\r\n    }else if(currentTab === \"Requests\"){\r\n        table = <CSPTrackerdRequestsDataTable updateDataMethod = {updateDataMethod.bind(this)} updateData = {updateData} />\r\n    }else if(currentTab === \"CSP KeyParams\"){\r\n        table = <CSPTrackerKeyParams success={()=> setSuccessAlert(true)}/>\r\n    }\r\n\r\n    return(\r\n        \r\n        <body>\r\n            {updateData}\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 5}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n            <div\r\n            className={`alert alert-success ${successAlert ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setSuccessAlert(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${uploadDrawingSuccess ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setUploadDrawingSuccess(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Drawing uploaded successfully!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${updateDrawingSuccess ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setUpdateDrawingSuccess(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Drawing updated successfully!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${noTagError ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setNoTagError(false)}\r\n            >\r\n                <AlertF type=\"waring\" text={errorIndex} margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${invalidFieldError ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setInvalidFieldError(false)}\r\n            >\r\n                <AlertF type=\"error\" subtext=\"At least one of the entries had an invalid field!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${requestSuccess? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setRequestSuccess(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"SP requested successfully!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${warningBlankRequest ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setWarningBlankRequest(false)}\r\n            >\r\n                <AlertF type=\"warning\" text=\"All fileds need to be filled!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${existsRequest ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setExistsRequest(false)}\r\n            >\r\n                <AlertF type=\"error\" subtext=\"An SP with that SPTag already exists!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${errorPid ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => seterrorPid(false)}\r\n            >\r\n                <AlertF type=\"error\" subtext=\"The specified P&ID is invalid!\" margin=\"0px\"/>\r\n            </div>\r\n            <div className=\"isotracker__row\">\r\n                  <div className=\"isotracker__column\">\r\n                      <img src={CSPTrackerLogo} alt=\"CSPTrackerLogo\" className=\"isoTrackerLogo__image2\" style={{height:\"85px\"}}/>\r\n                      \r\n                      <div className=\"roleSelector__containerF\">\r\n                              <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                      </div>\r\n                      \r\n                  </div>\r\n            </div>\r\n            <table className=\"isotracker__table__container\">\r\n                      <tr className=\"isotracker__table__navBar__container\" style={{height:\"65px \"}}>\r\n                          <th  className=\"isotracker__table__navBar\">\r\n                              <div style={{display:\"flex\"}}>\r\n                                {requestBtn}\r\n                                {editBtn}\r\n                                {notificationsBtn}\r\n                                {designNotificationsBtn}\r\n                                {saveBtn}   \r\n                                {pageSelector}\r\n                              </div>                           \r\n                               \r\n                          </th>\r\n                      </tr>\r\n                      <tr className=\"isotracker__table__tray__and__table__container\" style={{height: dataTableHeight}}>\r\n                          <td className=\"discplines__table__table\" style={{height: dataTableHeight}} >\r\n                              <div  style={{height: dataTableHeight}} className=\"isotracker__table__table__container\" style={{width:\"2200px\"}}>\r\n                                {table}\r\n                                {addRowBtn}\r\n                              </div>\r\n                          </td>\r\n                          \r\n                      </tr>\r\n                  </table>\r\n                  <center className=\"actionBtns__container\">   \r\n                    <div style={{display:\"flex\", marginTop:\"10px\"}}>\r\n                        {exportBtn}\r\n                    </div>\r\n                    \r\n                  </center>\r\n                  <br></br>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default CSPTracker;"]},"metadata":{},"sourceType":"module"}