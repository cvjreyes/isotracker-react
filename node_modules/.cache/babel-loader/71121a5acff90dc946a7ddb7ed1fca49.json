{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\datatable\\\\datatable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport './datatable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }, this),\n      onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text ? text.toString() : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }); //this.setState({ selectedRows: selectedRows });\n\n      this.props.onChange(ids);\n    };\n  }\n\n  componentDidMount() {\n    const body = {\n      currentTab: this.props.currentTab\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://localhost:5000/files\", options).then(response => response.json()).then(json => {\n      var rows = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        if (json.rows[i].claimed === 1) {\n          var row = {\n            key: i,\n            id: json.rows[i].filename,\n            date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n            from: json.rows[i].from,\n            to: json.rows[i].to,\n            user: json.rows[i].user + \" as \" + json.rows[i].role,\n            actions: \"CLAIMED\"\n          };\n        } else {\n          var row = {\n            key: i,\n            id: json.rows[i].filename,\n            date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n            from: json.rows[i].from,\n            to: json.rows[i].to,\n            user: json.rows[i].user,\n            actions: {}\n          };\n        }\n\n        rows.push(row);\n      }\n\n      this.setState({\n        data: rows,\n        selectedRows: []\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const body = {\n        currentTab: this.props.currentTab\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://localhost:5000/files\", options).then(response => response.json()).then(json => {\n        var rows = [];\n\n        for (let i = 0; i < json.rows.length; i++) {\n          if (process.env.REACT_APP_IFC === 1) {\n            if (json.rows[i].claimed === 1) {\n              var row = {\n                key: i,\n                id: json.rows[i].filename,\n                date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n                from: json.rows[i].from,\n                to: json.rows[i].to,\n                user: json.rows[i].user + \" as \" + json.rows[i].role,\n                actions: \"CLAIMED\"\n              };\n            } else {\n              var row = {\n                key: i,\n                id: json.rows[i].filename,\n                date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n                from: json.rows[i].from,\n                to: json.rows[i].to,\n                user: json.rows[i].user,\n                actions: {}\n              };\n            }\n\n            rows.push(row);\n          } else {\n            if (json.rows[i].verifydesign === 1) {\n              var row = {\n                key: i,\n                id: json.rows[i].filename,\n                date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n                from: json.rows[i].from,\n                to: json.rows[i].to,\n                user: json.rows[i].user + \" as \" + json.rows[i].role,\n                actions: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  children: \"CANCEL VERIFY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 295\n                }, this)\n              };\n            } else {\n              var row = {\n                key: i,\n                id: json.rows[i].filename,\n                date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n                from: json.rows[i].from,\n                to: json.rows[i].to,\n                user: json.rows[i].user,\n                actions: {}\n              };\n            }\n\n            rows.push(row);\n          }\n        }\n\n        this.setState({\n          data: rows\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const update = this.state.updateData;\n    const selectedRows = this.state.selectedRows;\n    const selectedRowsKeys = this.state.selectedRowsKeys;\n    const rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => ({\n        disabled: record.actions === 'CLAIMED' | record.actions.type === 'button',\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n\n    if (localStorage.getItem(\"update\") === \"true\") {\n      this.setState({\n        selectedRows: [],\n        selectedRowsKeys: []\n      });\n      rowSelection.selectedRowKeys = [];\n      rowSelection.selectedRows = [];\n      localStorage.setItem(\"update\", false);\n    } else {\n      rowSelection.selectedRowKeys = selectedRowsKeys;\n      rowSelection.selectedRows = selectedRows;\n    }\n\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"ISO ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'id',\n      key: 'id',\n      width: '20%',\n      ...this.getColumnSearchProps('id'),\n      sorter: {\n        compare: (a, b) => a.id - b.id\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'date',\n      key: 'date',\n      width: '20%',\n      ...this.getColumnSearchProps('date'),\n      sorter: {\n        compare: (a, b) => moment(a.date, 'DD/MM/YYYY') - moment(b.date, 'DD/MM/YYYY')\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"From\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'from',\n      key: 'from',\n      ...this.getColumnSearchProps('from'),\n      sorter: {\n        compare: (a, b) => {\n          return a.from.localeCompare(b.from);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"To\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'to',\n      key: 'to',\n      ...this.getColumnSearchProps('to'),\n      sorter: {\n        compare: (a, b) => {\n          return a.to.localeCompare(b.to);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'user',\n      key: 'user',\n      ...this.getColumnSearchProps('user'),\n      sorter: {\n        compare: (a, b) => {\n          return a.user.localeCompare(b.user);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'actions',\n      key: 'actions',\n      ...this.getColumnSearchProps('actions'),\n      sorter: {\n        compare: (a, b) => a.actions - b.actions\n      }\n    }];\n\n    if (this.state.data.length === 0) {\n      var totalElements = null;\n    } else {\n      var totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          rowSelection: {\n            type: 'checkbox',\n            ...rowSelection\n          },\n          columns: columns,\n          dataSource: this.state.data,\n          pagination: {\n            pageSize: this.props.pagination\n          },\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/datatable/datatable.js"],"names":["React","Table","Input","Button","Space","Highlighter","SearchOutlined","moment","DataTable","Component","state","searchText","searchedColumn","data","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","onSelectChange","selectedRowKeys","ids","i","length","push","id","onChange","componentDidMount","body","options","method","headers","JSON","stringify","fetch","then","response","json","rows","claimed","row","key","filename","date","updated_at","substring","from","to","user","role","actions","catch","error","console","log","componentDidUpdate","prevProps","prevState","process","env","REACT_APP_IFC","verifydesign","update","rowSelection","getCheckboxProps","disabled","type","name","localStorage","getItem","setItem","columns","title","sorter","compare","a","b","localeCompare","totalElements","position","bottom","left","pageSize","pagination"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport './datatable.css'\r\n\r\n\r\nclass DataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n  };\r\n\r\n  \r\n\r\n  componentDidMount(){\r\n    \r\n    const body ={\r\n      currentTab : this.props.currentTab\r\n    }\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n  }\r\n    fetch(\"http://localhost:5000/files\", options)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n                var rows = []\r\n                for(let i = 0; i < json.rows.length; i++){\r\n                  if(json.rows[i].claimed === 1){\r\n                    var row = {key:i, id: json.rows[i].filename , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user+ \" as \" +json.rows[i].role, actions: \"CLAIMED\" }\r\n                  }else{\r\n                    var row = {key:i, id: json.rows[i].filename , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions:{}}\r\n                  }\r\n                  rows.push(row)\r\n                }\r\n                this.setState({data : rows, selectedRows: []});\r\n\r\n            }\r\n        )\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n\r\n    if(prevProps !== this.props){\r\n  \r\n      const body ={\r\n        currentTab : this.props.currentTab\r\n      }\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n      fetch(\"http://localhost:5000/files\", options)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n                  var rows = []\r\n                  for(let i = 0; i < json.rows.length; i++){\r\n                    if(process.env.REACT_APP_IFC === 1){\r\n                      if(json.rows[i].claimed === 1){\r\n                        var row = {key:i, id: json.rows[i].filename , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user+ \" as \" +json.rows[i].role, actions: \"CLAIMED\" }\r\n                      }else{\r\n                        var row = {key:i, id: json.rows[i].filename , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions:{}}\r\n                      }\r\n                      rows.push(row)\r\n                    }else{\r\n                      if(json.rows[i].verifydesign === 1){\r\n                        var row = {key:i, id: json.rows[i].filename , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user+ \" as \" +json.rows[i].role, actions: <button className=\"btn btn-warning\">CANCEL VERIFY</button> }\r\n                      }else{\r\n                        var row = {key:i, id: json.rows[i].filename , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions:{}}\r\n                      }\r\n                      rows.push(row)\r\n                    }\r\n                  }\r\n                  this.setState({\r\n                    data : rows,\r\n                  });\r\n              }\r\n          )\r\n          .catch(error => {\r\n              console.log(error);\r\n          })\r\n      }\r\n\r\n  }\r\n\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n    const update = this.state.updateData;\r\n    const selectedRows = this.state.selectedRows;\r\n    const selectedRowsKeys = this.state.selectedRowsKeys;\r\n   \r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => (      \r\n        {\r\n        \r\n        disabled: record.actions === 'CLAIMED' | record.actions.type === 'button',\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n    if(localStorage.getItem(\"update\") === \"true\"){\r\n      this.setState({\r\n        selectedRows: [],\r\n        selectedRowsKeys: []\r\n      })\r\n      rowSelection.selectedRowKeys = []\r\n      rowSelection.selectedRows = []\r\n      localStorage.setItem(\"update\", false)\r\n    }else{\r\n      rowSelection.selectedRowKeys = selectedRowsKeys \r\n      rowSelection.selectedRows = selectedRows;\r\n    }  \r\n    \r\n    \r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">ISO ID</center>,\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('id'),\r\n        sorter:{\r\n          compare: (a, b) => a.id - b.id,\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Date</div>,\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('date'),\r\n        sorter: {\r\n          compare: (a, b) => moment(a.date, 'DD/MM/YYYY') - moment(b.date, 'DD/MM/YYYY'),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">From</div>,\r\n        dataIndex: 'from',\r\n        key: 'from',\r\n        ...this.getColumnSearchProps('from'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.from.localeCompare(b.from)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">To</div>,\r\n        dataIndex: 'to',\r\n        key: 'to',\r\n        ...this.getColumnSearchProps('to'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.to.localeCompare(b.to)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">User</div>,\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        ...this.getColumnSearchProps('user'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.user.localeCompare(b.user)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Actions</div>,\r\n        dataIndex: 'actions',\r\n        key: 'actions',\r\n        ...this.getColumnSearchProps('actions'),\r\n        sorter: {\r\n          compare: (a, b) => a.actions - b.actions,\r\n        },\r\n      },\r\n    ];\r\n\r\n    if (this.state.data.length === 0){\r\n      var totalElements = null;\r\n    }else{\r\n      var totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} columns={columns} dataSource={this.state.data} pagination={{ pageSize: this.props.pagination  }} size=\"small\"/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}