{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\progressPlotCurve\\\\progressPlotCurve.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ProgressPlotCurve extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/gequips\", options).then(response => response.json()).then(async json => {\n      let weeks = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        weeks.push({\n          name: \"W\" + json.rows[i].week,\n          estimated: json.rows[i].estimated,\n          progress: json.rows[i].progress\n        });\n      }\n\n      await this.setState({\n        data: weeks\n      });\n      console.log(this.state.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 500,\n          height: 300,\n          data: this.state.data,\n          margin: {\n            top: 35,\n            right: 30,\n            left: 20,\n            bottom: -15\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            label: {\n              value: \"Progress(%)\",\n              position: \"insideLeft\",\n              angle: -90,\n              dy: 30\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"progress\",\n            stroke: \"blue\",\n            activeDot: {\n              r: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"estimated\",\n            stroke: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this);\n  }\n\n}\nProgressPlotCurve.demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/progressPlotCurve/progressPlotCurve.js"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ProgressPlotCurve","PureComponent","state","data","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","weeks","i","rows","length","push","name","week","estimated","progress","setState","console","log","render","top","right","left","bottom","value","position","angle","dy","r","demoUrl"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n  export default class ProgressPlotCurve extends React.PureComponent {\r\n\tstatic demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';\r\n\t\r\n\tstate = {\r\n\t\tdata: []\r\n\t  };\r\n\r\n\r\n\tasync componentDidMount (){\r\n\r\n\t\tconst options = {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/gequips\", options)\r\n\t\t.then(response => response.json())\r\n\t\t.then(async json=>{\r\n\t\t\tlet weeks = []\r\n\t\t\tfor(let i = 0; i < json.rows.length; i++){\r\n\t\t\t\tweeks.push({name: \"W\"+json.rows[i].week, estimated: json.rows[i].estimated, progress: json.rows[i].progress})\r\n\t\t\t}\r\n\t\t\tawait this.setState({data: weeks})\r\n\t\t\tconsole.log(this.state.data)\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\trender() {\r\n\t  return (\r\n          <div>\r\n          <p>a</p>\r\n\t\t<ResponsiveContainer width=\"100%\" height=\"100%\">\r\n\t\t  <LineChart\r\n\t\t\twidth={500}\r\n\t\t\theight={300}\r\n\t\t\tdata={this.state.data}\r\n\t\t\tmargin={{\r\n\t\t\t  top: 35,\r\n\t\t\t  right: 30,\r\n\t\t\t  left: 20,\r\n\t\t\t  bottom: -15,\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t<XAxis dataKey=\"name\" />\r\n\t\t\t<YAxis label={{ value: \"Progress(%)\", position: \"insideLeft\", angle: -90,   dy: 30}} />\r\n\t\t\t<Tooltip />\r\n\t\t\t<Legend />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"progress\" stroke=\"blue\" activeDot={{ r: 8 }} />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"estimated\" stroke=\"red\" />\r\n\t\t  </LineChart>\r\n\t\t</ResponsiveContainer>\r\n        </div>\r\n\t  );\r\n\t}\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}