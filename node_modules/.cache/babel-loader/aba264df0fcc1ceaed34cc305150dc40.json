{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport TimelineItemContext from '../TimelineItem/TimelineItemContext';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      padding: '6px 16px',\n      marginRight: 'auto',\n      textAlign: 'right',\n      flex: 1\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'left'\n    }\n  };\n};\nvar TimelineOppositeContent = /*#__PURE__*/React.forwardRef(function TimelineOppositeContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var _React$useContext = React.useContext(TimelineContext),\n      _React$useContext$ali = _React$useContext.align,\n      align = _React$useContext$ali === void 0 ? 'left' : _React$useContext$ali;\n\n  var _React$useContext2 = React.useContext(TimelineItemContext),\n      _React$useContext2$cl = _React$useContext2.classes,\n      contextClasses = _React$useContext2$cl === void 0 ? {} : _React$useContext2$cl;\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, contextClasses.oppositeContent, classes[\"align\".concat(capitalize(align))], className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineOppositeContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string\n} : void 0;\nTimelineOppositeContent.muiName = 'TimelineOppositeContent';\nexport default withStyles(styles, {\n  name: 'MuiTimelineOppositeContent'\n})(TimelineOppositeContent);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@material-ui/lab/esm/TimelineOppositeContent/TimelineOppositeContent.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","capitalize","withStyles","TimelineContext","TimelineItemContext","styles","root","padding","marginRight","textAlign","flex","alignRight","TimelineOppositeContent","forwardRef","props","ref","classes","className","other","_React$useContext","useContext","_React$useContext$ali","align","_React$useContext2","_React$useContext2$cl","contextClasses","createElement","oppositeContent","concat","process","env","NODE_ENV","propTypes","children","node","object","string","muiName","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,GAAkB;AACpC,SAAO;AACL;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,UADL;AAEJC,MAAAA,WAAW,EAAE,MAFT;AAGJC,MAAAA,SAAS,EAAE,OAHP;AAIJC,MAAAA,IAAI,EAAE;AAJF,KAFD;;AASL;AACAC,IAAAA,UAAU,EAAE;AACVF,MAAAA,SAAS,EAAE;AADD;AAVP,GAAP;AAcD,CAfM;AAgBP,IAAIG,uBAAuB,GAAG,aAAad,KAAK,CAACe,UAAN,CAAiB,SAASD,uBAAT,CAAiCE,KAAjC,EAAwCC,GAAxC,EAA6C;AACvG,MAAIC,OAAO,GAAGF,KAAK,CAACE,OAApB;AAAA,MACIC,SAAS,GAAGH,KAAK,CAACG,SADtB;AAAA,MAEIC,KAAK,GAAGrB,wBAAwB,CAACiB,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,CAAR,CAFpC;;AAIA,MAAIK,iBAAiB,GAAGrB,KAAK,CAACsB,UAAN,CAAiBjB,eAAjB,CAAxB;AAAA,MACIkB,qBAAqB,GAAGF,iBAAiB,CAACG,KAD9C;AAAA,MAEIA,KAAK,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,MAAnC,GAA4CA,qBAFxD;;AAIA,MAAIE,kBAAkB,GAAGzB,KAAK,CAACsB,UAAN,CAAiBhB,mBAAjB,CAAzB;AAAA,MACIoB,qBAAqB,GAAGD,kBAAkB,CAACP,OAD/C;AAAA,MAEIS,cAAc,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAF7D;;AAIA,SAAO,aAAa1B,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B9B,QAAQ,CAAC;AACtDqB,IAAAA,SAAS,EAAEjB,IAAI,CAACgB,OAAO,CAACV,IAAT,EAAemB,cAAc,CAACE,eAA9B,EAA+CX,OAAO,CAAC,QAAQY,MAAR,CAAe3B,UAAU,CAACqB,KAAD,CAAzB,CAAD,CAAtD,EAA2FL,SAA3F,CADuC;AAEtDF,IAAAA,GAAG,EAAEA;AAFiD,GAAD,EAGpDG,KAHoD,CAAnC,CAApB;AAID,CAjB0C,CAA3C;AAkBAW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCnB,uBAAuB,CAACoB,SAAxB,GAAoC;AAC1E;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEC,EAAAA,QAAQ,EAAElC,SAAS,CAACmC,IATsD;;AAW1E;AACF;AACA;AACA;AACElB,EAAAA,OAAO,EAAEjB,SAAS,CAACoC,MAfuD;;AAiB1E;AACF;AACA;AACElB,EAAAA,SAAS,EAAElB,SAAS,CAACqC;AApBqD,CAA5E,GAqBI,KAAK,CArBT;AAsBAxB,uBAAuB,CAACyB,OAAxB,GAAkC,yBAAlC;AACA,eAAenC,UAAU,CAACG,MAAD,EAAS;AAChCiC,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZ1B,uBAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { capitalize } from '@material-ui/core/utils';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TimelineContext from '../Timeline/TimelineContext';\r\nimport TimelineItemContext from '../TimelineItem/TimelineItemContext';\r\nexport var styles = function styles() {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      padding: '6px 16px',\r\n      marginRight: 'auto',\r\n      textAlign: 'right',\r\n      flex: 1\r\n    },\r\n\r\n    /* Styles applied to the root element if `align=\"right\"`. */\r\n    alignRight: {\r\n      textAlign: 'left'\r\n    }\r\n  };\r\n};\r\nvar TimelineOppositeContent = /*#__PURE__*/React.forwardRef(function TimelineOppositeContent(props, ref) {\r\n  var classes = props.classes,\r\n      className = props.className,\r\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\r\n\r\n  var _React$useContext = React.useContext(TimelineContext),\r\n      _React$useContext$ali = _React$useContext.align,\r\n      align = _React$useContext$ali === void 0 ? 'left' : _React$useContext$ali;\r\n\r\n  var _React$useContext2 = React.useContext(TimelineItemContext),\r\n      _React$useContext2$cl = _React$useContext2.classes,\r\n      contextClasses = _React$useContext2$cl === void 0 ? {} : _React$useContext2$cl;\r\n\r\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    className: clsx(classes.root, contextClasses.oppositeContent, classes[\"align\".concat(capitalize(align))], className),\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TimelineOppositeContent.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string\r\n} : void 0;\r\nTimelineOppositeContent.muiName = 'TimelineOppositeContent';\r\nexport default withStyles(styles, {\r\n  name: 'MuiTimelineOppositeContent'\r\n})(TimelineOppositeContent);"]},"metadata":{},"sourceType":"module"}