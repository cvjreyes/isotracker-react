{"ast":null,"code":"import { getValidSelection } from \"../utils.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nexport var KEY = 'clear_column';\n/**\n * @returns {object}\n */\n\nexport default function clearColumnItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_CLEAR_COLUMN);\n    },\n    callback: function callback(key, selection) {\n      var startColumn = selection[0].start.col;\n      var endColumn = selection[0].end.col;\n\n      if (this.countRows()) {\n        this.populateFromArray(0, startColumn, [[null]], Math.max(selection[0].start.row, selection[0].end.row), endColumn, 'ContextMenu.clearColumn');\n      }\n    },\n    disabled: function disabled() {\n      var selected = getValidSelection(this);\n\n      if (!selected) {\n        return true;\n      }\n\n      return !this.selection.isSelectedByColumnHeader();\n    }\n  };\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/contextMenu/predefinedItems/clearColumn.mjs"],"names":["getValidSelection","C","KEY","clearColumnItem","key","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_CLEAR_COLUMN","callback","selection","startColumn","start","col","endColumn","end","countRows","populateFromArray","Math","max","row","disabled","selected","isSelectedByColumnHeader"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,OAAO,KAAKC,CAAZ,MAAmB,6BAAnB;AACA,OAAO,IAAIC,GAAG,GAAG,cAAV;AACP;AACA;AACA;;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,SAAO;AACLC,IAAAA,GAAG,EAAEF,GADA;AAELG,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,aAAO,KAAKC,mBAAL,CAAyBL,CAAC,CAACM,8BAA3B,CAAP;AACD,KAJI;AAKLC,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBJ,GAAlB,EAAuBK,SAAvB,EAAkC;AAC1C,UAAIC,WAAW,GAAGD,SAAS,CAAC,CAAD,CAAT,CAAaE,KAAb,CAAmBC,GAArC;AACA,UAAIC,SAAS,GAAGJ,SAAS,CAAC,CAAD,CAAT,CAAaK,GAAb,CAAiBF,GAAjC;;AAEA,UAAI,KAAKG,SAAL,EAAJ,EAAsB;AACpB,aAAKC,iBAAL,CAAuB,CAAvB,EAA0BN,WAA1B,EAAuC,CAAC,CAAC,IAAD,CAAD,CAAvC,EAAiDO,IAAI,CAACC,GAAL,CAAST,SAAS,CAAC,CAAD,CAAT,CAAaE,KAAb,CAAmBQ,GAA5B,EAAiCV,SAAS,CAAC,CAAD,CAAT,CAAaK,GAAb,CAAiBK,GAAlD,CAAjD,EAAyGN,SAAzG,EAAoH,yBAApH;AACD;AACF,KAZI;AAaLO,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,UAAIC,QAAQ,GAAGrB,iBAAiB,CAAC,IAAD,CAAhC;;AAEA,UAAI,CAACqB,QAAL,EAAe;AACb,eAAO,IAAP;AACD;;AAED,aAAO,CAAC,KAAKZ,SAAL,CAAea,wBAAf,EAAR;AACD;AArBI,GAAP;AAuBD","sourcesContent":["import { getValidSelection } from \"../utils.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nexport var KEY = 'clear_column';\n/**\n * @returns {object}\n */\n\nexport default function clearColumnItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_CLEAR_COLUMN);\n    },\n    callback: function callback(key, selection) {\n      var startColumn = selection[0].start.col;\n      var endColumn = selection[0].end.col;\n\n      if (this.countRows()) {\n        this.populateFromArray(0, startColumn, [[null]], Math.max(selection[0].start.row, selection[0].end.row), endColumn, 'ContextMenu.clearColumn');\n      }\n    },\n    disabled: function disabled() {\n      var selected = getValidSelection(this);\n\n      if (!selected) {\n        return true;\n      }\n\n      return !this.selection.isSelectedByColumnHeader();\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}