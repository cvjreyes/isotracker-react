{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\isoCtrl\\\\isoCtrl.js\",\n    _s = $RefreshSig$();\n\nimport DataTable from \"../../components/datatable/datatable\";\nimport ReportBtns from \"../../components/reportBtns/reportBtns\";\nimport StateTable from \"../../components/stateTable/stateTable\";\nimport NavBtns from \"../../components/navBtns/navBtns\";\nimport DragAndDrop from \"../../components/dragAndDrop/dragAndDrop\";\nimport \"./isoCtrl.css\";\nimport React, { useState, useEffect } from 'react';\nimport ActionButtons from \"../../components/actionBtns/actionBtns\";\nimport SelectPag from \"../../components/selectPag/selectPag\";\nimport CheckInTable from \"../../components/checkInTable/checkInTable\";\nimport NavBar from '../../components/navBar/navBar';\nimport MyTrayBtn from \"../../components/myTrayBtn/myTrayBtn\";\nimport MyTrayTable from \"../../components/myTrayTable/myTrayTable\";\nimport BinBtn from '../../components/binBtn/binBtn';\nimport BinTable from \"../../components/binTable/binTable\";\nimport OnHoldTable from \"../../components/onHoldTable/onHoldTable\";\nimport StatusDataTable from \"../../components/statusDataTable/statusDataTable\";\nimport HistoryDataTable from \"../../components/historyDataTable/historyDataTable\";\nimport RoleDropDown from \"../../components/roleDropDown/roleDropDown\";\nimport Alert from '@material-ui/lab/Alert';\nimport Collapse from '@material-ui/core/Collapse';\nimport OnHoldBtn from \"../../components/onHoldBtn/onHoldBtn\";\nimport ProcInsBtn from \"../../components/procInsBtn/procInsBtn\";\nimport ReportsBtn from \"../../components/reportsBtn/reportsBtn\";\nimport ProcInstTable from \"../../components/procInstTable/procInstTable\";\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport ReportBoxBtns from \"../../components/reportBoxBtns/reportBoxBtns\";\nimport IssuedBtn from \"../../components/issuedBtn/issuedBtn\";\nimport ProgressBtn from \"../../components/progressBtn/progressBtn\";\nimport ProgressPlot from \"../../components/progressPlot/progressPlot\";\nimport ModelledBtn from \"../../components/modelledBtn/modelledBtn\";\nimport ModelledDataTable from \"../../components/modelledDataTable/modelledDataTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IsoCtrl = () => {\n  _s();\n\n  document.body.style.zoom = 0.9;\n  document.title = process.env.REACT_APP_APP_NAMEPROJ;\n  const [pagination, setPagination] = useState(8); //Controla el numero de entradas por pagina de la tabla\n\n  const [currentRole, setCurrentRole] = useState();\n  const [roles, setRoles] = useState();\n  const [selected, setSelected] = useState([]);\n  const [updateData, setUpdateData] = useState();\n  const [comment, setComment] = useState(\" \");\n  const [commentAlert, setCommentAlert] = useState(false);\n  const [downloadZip, setDownloadzip] = useState(new JSZip());\n  const [loading, setLoading] = useState(false);\n  const [errorUnclaim, setErrorUnclaim] = useState(false);\n  const [errorPI, setErrorPI] = useState(false);\n  const [errorCL, setErrorCL] = useState(false);\n  const [transactionSuccess, setTransactionSuccess] = useState(false);\n  const [errorReports, setErrorReports] = useState(false);\n  const [errorUnclaimR, setErrorUnclaimR] = useState(false);\n  const [warningSelected, setWarningSelected] = useState(false);\n  const [blocked, setBlocked] = useState(false);\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"tab\")); //Controla la tabla y botones que se muestran\n  //La altura de la tabla es fija en funcion de la paginacion para evitar que los botones se muevan\n\n  var dataTableHeight = 8;\n\n  if (pagination === 8) {\n    dataTableHeight = \"550px\";\n  }\n\n  if (pagination === 25) {\n    dataTableHeight = \"1250px\";\n  }\n\n  if (pagination === 50) {\n    dataTableHeight = \"2250px\";\n  }\n\n  if (pagination === 100) {\n    dataTableHeight = \"4330px\";\n  } //Componentes de la pagina que varian en funcion del estado\n\n\n  var uploadButton, actionButtons, actionText, commentBox, tableContent, procInsBtn, progressBtn, modelledBtn, myTrayBtn;\n  var currentTabText = currentTab;\n\n  if (currentTabText === \"LDE/IsoControl\") {\n    currentTabText = \"LOS/IsoControl\";\n  }\n\n  tableContent = /*#__PURE__*/_jsxDEV(DataTable, {\n    forceUnclaim: forceUnclaim.bind(this),\n    onChange: value => setSelected(value),\n    selected: selected,\n    pagination: pagination,\n    currentTab: currentTab,\n    currentRole: currentRole,\n    updateData: updateData,\n    unlock: unlock.bind(this),\n    rename: rename.bind(this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 20\n  }, this);\n\n  var pageSelector = /*#__PURE__*/_jsxDEV(SelectPag, {\n    onChange: value => setPagination(value),\n    pagination: pagination\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 24\n  }, this);\n\n  var currentUser = secureStorage.getItem('user');\n  useEffect(() => {\n    const body = {\n      user: currentUser\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/roles/user\", options).then(response => response.json()).then(json => {\n      setRoles(json.roles);\n\n      if (secureStorage.getItem('role') !== null) {\n        setCurrentRole(secureStorage.getItem('role'));\n      } else {\n        secureStorage.setItem('role', json.roles[0]);\n        setCurrentRole(secureStorage.getItem('role'));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    setErrorPI(false);\n    setErrorUnclaimR(false);\n    setErrorCL(false);\n    setUpdateData(!updateData);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setErrorReports(false);\n    setLoading(false);\n    setWarningSelected(false);\n    setBlocked(false);\n  }, [currentRole]);\n  useEffect(() => {\n    setErrorUnclaimR(false);\n    setErrorPI(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setLoading(false);\n    setErrorReports(false);\n    setSelected([]);\n    setWarningSelected(false);\n    setBlocked(false);\n  }, [currentTab]);\n\n  const getProgress = () => {\n    setUpdateData(!updateData);\n  };\n\n  const claim = async event => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setWarningSelected(false);\n    setErrorPI(false);\n    setBlocked(false);\n    console.log(selected);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      if (currentTab === \"Process\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/claimProc\", options);\n        }\n      } else if (currentTab === \"Instrument\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/claimInst\", options);\n        }\n      } else {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/claim\", options);\n        }\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  };\n\n  const forceClaim = async username => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setWarningSelected(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: username,\n          file: selected[i],\n          los: currentUser\n        };\n        console.log(body);\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/forceClaim\", options);\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    }\n  };\n\n  const unclaim = async event => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setWarningSelected(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      if (currentRole === \"Process\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/unclaimProc\", options);\n        }\n      } else if (currentRole === \"Instrument\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          console.log(body);\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/unclaimInst\", options);\n        }\n      } else {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/unclaim\", options).then(response => response.json()).then(json => {\n            if (json.error === \"forced\") {\n              setErrorUnclaim(true);\n            } else if (json.error === \"returned\") {\n              setErrorUnclaimR(true);\n            }\n          }).catch(err => {});\n        }\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  };\n\n  async function forceUnclaim(fileName) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setLoading(true);\n    setWarningSelected(false);\n    setBlocked(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    console.log(body);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    console.log(body);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/forceUnclaim\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n    setSelected([]);\n  }\n\n  const verifyClick = async event => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setWarningSelected(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/verify\", options);\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  };\n\n  async function cancelVerifyClick(filename) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setLoading(true);\n    setWarningSelected(false);\n    setBlocked(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: filename,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/cancelVerify\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n    setSelected([]);\n  }\n\n  async function transaction(destiny, comments) {\n    if (selected.length > 0) {\n      setErrorUnclaimR(false);\n      setWarningSelected(false);\n      setErrorReports(false);\n      setErrorCL(false);\n      setErrorUnclaim(false);\n      setErrorPI(false);\n      setTransactionSuccess(false);\n      setLoading(true);\n      setBlocked(false);\n\n      if (destiny === \"Design\") {\n        if (comment.length > 1) {\n          setComment(\" \");\n          setCommentAlert(false);\n          localStorage.setItem(\"update\", true);\n\n          for (let i = 0; i < selected.length; i++) {\n            const body = {\n              user: currentUser,\n              fileName: selected[i],\n              to: destiny,\n              role: secureStorage.getItem(\"role\"),\n              comment: comment,\n              deleted: 0,\n              onhold: 0\n            };\n            const options = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(body)\n            };\n            await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/transaction\", options).then(response => response.json()).then(json => {\n              console.log(json);\n\n              if (json.blocked) {\n                setBlocked(true);\n              } else {\n                setTransactionSuccess(true);\n              }\n            });\n          }\n        } else {\n          setCommentAlert(true);\n        }\n      } else if (destiny === \"LDE/Isocontrol\") {\n        for (let i = 0; i < selected.length; i++) {\n          const options = {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/piStatus/\" + selected[i], options).then(response => response.json()).then(async json => {\n            if (json.sit === 1 || json.sit === 4 || json.sit === 5 || json.spo === 1 || json.spo === 4 || json.spo === 5) {\n              localStorage.setItem(\"update\", true);\n              setErrorPI(true);\n              setTransactionSuccess(false);\n            } else {\n              setCommentAlert(false);\n              localStorage.setItem(\"update\", true);\n              let deleted,\n                  hold = 0;\n              const body = {\n                user: currentUser,\n                fileName: selected[i],\n                to: destiny,\n                role: secureStorage.getItem(\"role\"),\n                comment: null,\n                deleted: deleted,\n                onhold: hold\n              };\n              const options = {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              };\n              await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/transaction\", options).then(response => response.json()).then(async json => {\n                console.log(json);\n\n                if (json.error) {\n                  await setErrorCL(true);\n                } else if (json.blocked) {\n                  setBlocked(true);\n                }\n              });\n\n              if (!errorCL && !blocked) {\n                setTransactionSuccess(true);\n              }\n            }\n          });\n        }\n\n        await setUpdateData(!updateData);\n        setLoading(false);\n      } else if (destiny === \"On hold\") {\n        setCommentAlert(false);\n        localStorage.setItem(\"update\", true);\n        let deleted,\n            hold = 0;\n\n        if (destiny === \"Recycle bin\") {\n          deleted = 1;\n        }\n\n        if (destiny === \"On hold\") {\n          hold = 1;\n        }\n\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            fileName: selected[i],\n            to: destiny,\n            role: secureStorage.getItem(\"role\"),\n            comment: comments,\n            deleted: deleted,\n            onhold: hold\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/transaction\", options).then(response => response.json()).then(json => {\n            if (json.blocked) {\n              setBlocked(true);\n            } else {\n              setTransactionSuccess(true);\n            }\n          });\n        }\n      } else {\n        setCommentAlert(false);\n        localStorage.setItem(\"update\", true);\n        let deleted,\n            hold = 0;\n\n        if (destiny === \"Recycle bin\") {\n          deleted = 1;\n        }\n\n        if (destiny === \"On hold\") {\n          hold = 1;\n        }\n\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            fileName: selected[i],\n            to: destiny,\n            role: secureStorage.getItem(\"role\"),\n            comment: null,\n            deleted: deleted,\n            onhold: hold\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/transaction\", options).then(response => response.json()).then(json => {\n            if (json.blocked) {\n              setBlocked(true);\n            } else {\n              setTransactionSuccess(true);\n            }\n          });\n        }\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  async function returnLead(destiny) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setWarningSelected(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setErrorUnclaimR(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        setLoading(true);\n        const body = {\n          user: currentUser,\n          fileName: selected[i],\n          to: destiny,\n          from: currentTab\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/returnLead\", options).then(response => response.json()).then(json => {\n          if (json.blocked) {\n            setBlocked(true);\n          } else {\n            setTransactionSuccess(true);\n          }\n        });\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  async function returnLeadStress() {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setErrorUnclaimR(false);\n    setWarningSelected(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          comments: comment\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/returnLeadStress\", options).then(response => response.json()).then(json => {\n          if (json.blocked) {\n            setBlocked(true);\n          } else {\n            setTransactionSuccess(true);\n          }\n        });\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  function handleComment(event) {\n    setComment(event.target.value);\n  }\n\n  async function restore() {\n    setErrorReports(false);\n    setErrorUnclaimR(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setWarningSelected(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          fileName: selected[i],\n          user: currentUser,\n          role: currentRole,\n          deleted: 0,\n          onhold: 0\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/restore\", options);\n        setTransactionSuccess(true);\n      }\n\n      await setUpdateData(!updateData);\n      console.log(\"restored\");\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  function procOrInst(tab) {\n    if (tab === \"Process\" || tab === \"Instrument\") {\n      setCurrentTab(tab);\n    } else if (currentRole === \"Process\") {\n      setCurrentTab(\"Process\");\n    } else {\n      setCurrentTab(\"Instrument\");\n    }\n  }\n\n  async function sendProcessClick(fileName) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setLoading(true);\n    setWarningSelected(false);\n    setBlocked(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/process\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n    setSelected([]);\n  }\n\n  async function sendInstrumentClick(fileName) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorUnclaimR(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setLoading(true);\n    setWarningSelected(false);\n    setBlocked(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/instrument\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n    setSelected([]);\n  }\n\n  async function sendCancelProcessClick(fileName) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorUnclaimR(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setLoading(true);\n    setWarningSelected(false);\n    setBlocked(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      file: fileName\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/cancelProc\", options);\n    await setUpdateData(!updateData);\n    await setLoading(false);\n    setSelected([]);\n  }\n\n  async function sendCancelInstrumentClick(fileName) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorUnclaimR(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setWarningSelected(false);\n    setLoading(true);\n    setBlocked(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      file: fileName\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/cancelInst\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n    setSelected([]);\n  }\n\n  function updateD() {\n    setUpdateData(!updateData);\n  }\n\n  async function downloadFiles() {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n      /*\r\n      if(selected.length === 1){\r\n          localStorage.setItem(\"update\", true)\r\n          for (let i = 0; i < selected.length; i++){\r\n              const options = {\r\n                  method: \"GET\",\r\n                  headers: {\r\n                      \"Content-Type\": \"application/pdf\"\r\n                  }\r\n              }\r\n              await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n              .then(res => res.blob())\r\n                  .then(response =>{\r\n                      console.log(\"Se descarga\")\r\n                      download(new Blob([response]), selected[i], \"application/pdf\")\r\n                  })\r\n          }\r\n      }else if (selected.length > 1){\r\n          localStorage.setItem(\"update\", true)\r\n          for (let i = 0; i < selected.length; i++){\r\n                const options = {\r\n                  method: \"GET\",\r\n                  headers: {\r\n                      \"Content-Type\": \"application/pdf\"\r\n                  }\r\n              }\r\n              await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n              .then(res => res.blob())\r\n                  .then(response =>{\r\n                      setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                  })\r\n          }\r\n          const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n          downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n              saveAs(blob,  zipname)\r\n          })\r\n          \r\n      }\r\n      await setUpdateData(!updateData)\r\n      await setDownloadzip(new JSZip())   \r\n      setLoading(false)\r\n      */\n\n      for (let i = 0; i < selected.length; i++) {\n        const options = {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/pdf\"\n          }\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getAttach/\" + selected[i], options).then(response => response.json()).then(async json => {\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/download/\" + selected[i], options).then(res => res.blob()).then(async response => {\n            setDownloadzip(downloadZip.file(selected[i], new Blob([response]), {\n              binary: true\n            }));\n\n            for (let i = 0; i < json.length; i++) {\n              await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/download/\" + json[i], options).then(res => res.blob()).then(response => {\n                setDownloadzip(downloadZip.file(json[i], new Blob([response]), {\n                  binary: true\n                }));\n              });\n            }\n          });\n        });\n      }\n\n      const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1));\n      downloadZip.generateAsync({\n        type: \"blob\"\n      }).then(function (blob) {\n        // 1) generate the zip file\n        saveAs(blob, zipname);\n      });\n      await setDownloadzip(new JSZip()); //await setAttachFiles(null)\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  async function downloadHistory() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadHistory/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"FROM\", \"TO\", \"DATE\", \"COMMENT\", \"USER\"];\n      exportToExcel(JSON.parse(json), \"Comments\", headers);\n    });\n  }\n\n  async function downloadStatus() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadStatus/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"START_DATE\", \"CURRENT_DATE\", \"CONDITION\", \"TRAY\"];\n      exportToExcel(JSON.parse(json), \"Status\", headers);\n    });\n  }\n\n  async function downloadPI() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadPI/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"PROCESS\", \"INSTRUMENTATION\", \"UPDATED_AT\"];\n      exportToExcel(JSON.parse(json), \"IsoStatusSIT-SPO\", headers);\n    });\n  }\n\n  async function downloadIssued() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadIssued/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"REV0\", \"REV1\", \"REV2\", \"REV3\", \"REV4\"];\n      exportToExcel(JSON.parse(json), \"IsoStatusIssued\", headers);\n    });\n  }\n\n  async function downloadStatus3D() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadStatus3D/\").then(response => response.json()).then(json => {\n      let output = JSON.stringify(json.log);\n      output = output.substring(1, output.length - 1);\n      output = output.replaceAll(\",\", \"\\n\");\n      output = output.replaceAll(/['\"]+/g, \"\");\n      const data = new Blob([output], {\n        type: 'txt'\n      });\n      FileSaver.saveAs(data, \"fromIsoTrackerTo3d.mac\");\n    });\n  }\n\n  async function downloadModelled() {\n    setErrorReports(false);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/downloadModelled/\").then(response => response.json()).then(json => {\n      const headers = [\"TAG\", \"ISO_ID\", \"TYPE\"];\n      exportToExcel(JSON.parse(json), \"Modelled\", headers);\n    });\n  }\n\n  const exportToExcel = (apiData, fileName, headers) => {\n    setErrorReports(false);\n    const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1'];\n    const fileExtension = \".xlsx\";\n    let wscols = [];\n\n    for (let i = 0; i < headers.length; i++) {\n      wscols.push({\n        width: 35\n      });\n    }\n\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    ws[\"!cols\"] = wscols;\n\n    for (let i = 0; i < headers.length; i++) {\n      ws[header_cells[i]].v = headers[i];\n    }\n\n    const wb = {\n      Sheets: {\n        data: ws\n      },\n      SheetNames: [\"data\"]\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  async function setUploading(active) {\n    setErrorReports(false);\n    setLoading(active);\n\n    if (!active) {\n      setTransactionSuccess(true);\n    }\n  }\n\n  async function setErrorReport() {\n    setErrorReports(true);\n  }\n\n  async function issue(transmittal, date) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole,\n          transmittal: transmittal,\n          date: date\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/toIssue\", options).then(response => response.json()).then(json => {\n          if (json.blocked) {\n            setBlocked(true);\n          } else {\n            setTransactionSuccess(true);\n          }\n        });\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    }\n  }\n\n  async function newRev() {\n    setErrorReports(false);\n    setErrorUnclaimR(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/newRev\", options).then(response => response.json()).then(json => {\n          if (json.blocked) {\n            setBlocked(true);\n          } else {\n            setTransactionSuccess(true);\n          }\n        });\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n      setSelected([]);\n    }\n  }\n\n  async function request() {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/request\", options);\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      setSelected([]);\n    }\n  }\n\n  async function returnIso(destiny, comments) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      if (comments.length < 1) {\n        comments = comment;\n      }\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole,\n          from: currentTab,\n          destiny: destiny,\n          comments: comments\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/returnIso\", options).then(response => response.json()).then(json => {\n          console.log(json);\n\n          if (json.blocked) {\n            setBlocked(true);\n          } else {\n            setTransactionSuccess(true);\n          }\n        });\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      setComment(\"\");\n      setSelected([]);\n    } else {\n      setWarningSelected(true);\n    }\n  }\n\n  async function success() {\n    setTransactionSuccess(true);\n  }\n\n  async function unlock(filename) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      fileName: filename\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/unlock\", options).then(response => console.log(\"Unlocked\"));\n    setUpdateData(!updateData);\n  }\n\n  async function rename(newName, oldName) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setWarningSelected(false);\n    setBlocked(false);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      oldName: oldName,\n      newName: newName\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/rename\", options).then(response => console.log(\"Cambiado\"));\n    setTransactionSuccess(true);\n    setUpdateData(!updateData);\n  }\n\n  if (currentTab === \"Upload IsoFiles\") {\n    secureStorage.setItem(\"tab\", \"Upload IsoFiles\");\n    uploadButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info btn-lg\",\n      style: {\n        backgroundColor: \"#17a2b8\",\n        width: \"180px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1361,\n        columnNumber: 127\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1361,\n      columnNumber: 24\n    }, this);\n    tableContent = /*#__PURE__*/_jsxDEV(DragAndDrop, {\n      mode: \"upload\",\n      role: currentRole,\n      user: currentUser,\n      uploaded: getProgress.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1362,\n      columnNumber: 24\n    }, this);\n    pageSelector = null;\n  }\n\n  if (currentTab === \"Design\" && currentRole === \"Design\") {\n    uploadButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info btn-lg\",\n      style: {\n        backgroundColor: \"lightblue\",\n        width: \"180px\"\n      },\n      onClick: () => setCurrentTab(\"Upload IsoFiles\"),\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 182\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1365,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"CheckBy\") {\n    tableContent = /*#__PURE__*/_jsxDEV(CheckInTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1367,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"My Tray\") {\n    tableContent = /*#__PURE__*/_jsxDEV(MyTrayTable, {\n      updateData: updateData,\n      onChange: value => setSelected(value),\n      cancelVerifyClick: cancelVerifyClick.bind(this),\n      sendProcessClick: sendProcessClick.bind(this),\n      success: success.bind(this),\n      sendInstrumentClick: sendInstrumentClick.bind(this),\n      sendCancelProcessClick: sendCancelProcessClick.bind(this),\n      sendCancelInstrumentClick: sendCancelInstrumentClick.bind(this),\n      updateD: updateD.bind(this),\n      pagination: pagination,\n      currentRole: currentRole,\n      currentUser: currentUser,\n      selected: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1369,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Recycle bin\") {\n    tableContent = /*#__PURE__*/_jsxDEV(BinTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1371,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"On hold\") {\n    tableContent = /*#__PURE__*/_jsxDEV(OnHoldTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1373,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Status\") {\n    tableContent = /*#__PURE__*/_jsxDEV(StatusDataTable, {\n      onChange: value => setSelected(value),\n      pagination: pagination,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1375,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"History\") {\n    tableContent = /*#__PURE__*/_jsxDEV(HistoryDataTable, {\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentRole === \"Process\" || currentRole === \"Instrument\" || currentRole === \"SpecialityLead\") {\n    procInsBtn = /*#__PURE__*/_jsxDEV(ProcInsBtn, {\n      onChange: value => procOrInst(value),\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1379,\n      columnNumber: 22\n    }, this);\n  }\n\n  if (currentTab === \"Process\" || currentTab === \"Instrument\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ProcInstTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1381,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Reports\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ReportBoxBtns, {\n      user: currentUser,\n      downloadHistory: downloadHistory.bind(this),\n      downloadStatus: downloadStatus.bind(this),\n      downloadPI: downloadPI.bind(this),\n      downloadIssued: downloadIssued.bind(this),\n      setErrorReport: setErrorReport.bind(this),\n      setUploading: setUploading.bind(this),\n      downloadStatus3D: downloadStatus3D.bind(this),\n      downloadModelled: downloadModelled.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (process.env.REACT_APP_PROGRESS === \"1\") {\n    progressBtn = /*#__PURE__*/_jsxDEV(ProgressBtn, {\n      onChange: value => setCurrentTab(\"Progress\"),\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1385,\n      columnNumber: 23\n    }, this);\n    modelledBtn = /*#__PURE__*/_jsxDEV(ModelledBtn, {\n      onChange: value => setCurrentTab(\"Modelled\"),\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1386,\n      columnNumber: 23\n    }, this);\n  }\n\n  if (currentTab === \"Progress\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ProgressPlot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1388,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Modelled\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ModelledDataTable, {\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1390,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentRole !== \"Review\") {\n    myTrayBtn = /*#__PURE__*/_jsxDEV(MyTrayBtn, {\n      onChange: value => setCurrentTab(value),\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1392,\n      columnNumber: 21\n    }, this);\n  }\n\n  if (currentTab === \"My Tray\" || currentTab === \"LDE/IsoControl\") {\n    commentBox = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Comments\",\n        class: \"comments\",\n        cols: \"100\",\n        rows: \"2\",\n        required: \"\",\n        maxlength: \"400\",\n        name: \"comments\",\n        value: comment,\n        onChange: handleComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1397,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1396,\n      columnNumber: 22\n    }, this);\n  }\n\n  if ((currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Design\" || (currentRole === \"Stress\" || currentRole === \"StressLead\") && currentTab === \"Stress\" || (currentRole === \"Supports\" || currentRole === \"SupportsLead\") && currentTab === \"Supports\" || currentRole === \"Materials\" && currentTab === \"Materials\" || currentRole === \"Issuer\" && currentTab === \"Issuer\" || currentRole === \"SpecialityLead\" && currentTab === \"SpecialityLead\" || currentTab === \"My Tray\" || (currentTab === \"Recycle bin\" || currentTab === \"On hold\") && currentRole === \"DesignLead\" || currentRole === \"SpecialityLead\" && currentTab !== \"Progress\" || currentTab === \"Process\" && currentRole === \"Process\" || currentRole === \"Instrument\" && currentTab === \"Instrument\" || (currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Issued\") {\n    actionText = /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"progress__text\",\n      children: \"Click an action for selected IsoFiles:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1413,\n      columnNumber: 22\n    }, this);\n    actionButtons = /*#__PURE__*/_jsxDEV(ActionButtons, {\n      claimClick: claim.bind(this),\n      verifyClick: verifyClick.bind(this),\n      unclaimClick: unclaim.bind(this),\n      transaction: transaction.bind(this),\n      restoreClick: restore.bind(this),\n      returnLead: returnLead.bind(this),\n      returnLeadStress: returnLeadStress.bind(this),\n      downloadFiles: downloadFiles.bind(this),\n      forceClaim: forceClaim.bind(this),\n      issue: issue.bind(this),\n      newRev: newRev.bind(this),\n      request: request.bind(this),\n      returnIso: returnIso.bind(this),\n      onlyDownload: false,\n      currentTab: currentTab,\n      user: currentUser,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1414,\n      columnNumber: 25\n    }, this);\n  } else if (currentTab !== \"History\" && currentTab !== \"Upload IsoFiles\" && currentTab !== \"Recycle bin\" && currentTab !== \"Reports\" && currentTab != \"Progress\" && currentTab !== \"Modelled\") {\n    actionText = /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"progress__text\",\n      children: \"Click an action for selected IsoFiles:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1416,\n      columnNumber: 22\n    }, this);\n    actionButtons = /*#__PURE__*/_jsxDEV(ActionButtons, {\n      claimClick: claim.bind(this),\n      verifyClick: verifyClick.bind(this),\n      unclaimClick: unclaim.bind(this),\n      transaction: transaction.bind(this),\n      restoreClick: restore.bind(this),\n      returnLead: returnLead.bind(this),\n      returnLeadStress: returnLeadStress.bind(this),\n      downloadFiles: downloadFiles.bind(this),\n      forceClaim: forceClaim.bind(this),\n      issue: issue.bind(this),\n      newRev: newRev.bind(this),\n      request: request.bind(this),\n      returnIso: returnIso.bind(this),\n      onlyDownload: true,\n      currentTab: currentTab,\n      user: currentUser,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1417,\n      columnNumber: 25\n    }, this);\n  }\n\n  if (currentTab === \"Modelled\") {\n    actionText = null;\n    actionButtons = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-sm btn-success\",\n      style: {\n        marginTop: \"40px\"\n      },\n      onClick: () => downloadModelled(),\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1421,\n      columnNumber: 25\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onChange: value => setCurrentTab(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1428,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isoCtrl__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(Collapse, {\n          in: loading,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"info\",\n            children: \"Processing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1433,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1432,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorPI,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"At least one isometric was on revision and wasn't sent to LDE/Isocontrol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1439,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1438,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: transactionSuccess,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"success\",\n            children: \"Successful!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1444,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorUnclaim,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"Can't unclaim an iso assigned by LOS!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1451,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1450,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorUnclaimR,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"Can't unclaim a returned ISO!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1457,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1456,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorReports,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"Missing columns!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1463,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorCL,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"Missing clean!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1468,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: warningSelected,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"warning\",\n            children: \"Select at least one isometric!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1475,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: blocked,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"The isometric has been locked! Contact the administrator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1481,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roleSelector__container\",\n            children: /*#__PURE__*/_jsxDEV(RoleDropDown, {\n              style: {\n                paddingLeft: \"2px\"\n              },\n              onChange: value => setCurrentRole(value),\n              roles: roles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1488,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iso__title\",\n              children: \"IsoTracker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1491,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1490,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"iso__subtitle\",\n          children: currentTabText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1494,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1431,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline\"\n            },\n            children: [myTrayBtn, /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"reportBtns__container\",\n              style: {\n                width: \"380px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ReportBtns, {\n                onChange: value => setCurrentTab(value),\n                currentTab: currentTab\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1503,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1501,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: uploadButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1506,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stateTable__container\",\n              children: /*#__PURE__*/_jsxDEV(StateTable, {\n                updateData: updateData,\n                currentRole: currentRole,\n                progress: progress,\n                realProgress: realProgress,\n                progressISO: progressISO,\n                realProgressISO: realProgressISO\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1511,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1509,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1499,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1498,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1497,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          width: \"600px\"\n        },\n        children: [pageSelector, /*#__PURE__*/_jsxDEV(BinBtn, {\n          onChange: value => setCurrentTab(\"Recycle bin\"),\n          currentTab: currentTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1522,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(OnHoldBtn, {\n          onChange: value => setCurrentTab(\"On hold\"),\n          currentTab: currentTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1523,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(IssuedBtn, {\n          onChange: value => setCurrentTab(\"Issued\"),\n          currentTab: currentTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1524,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ReportsBtn, {\n          onChange: value => setCurrentTab(\"Reports\"),\n          currentTab: currentTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1525,\n          columnNumber: 19\n        }, this), progressBtn, modelledBtn, procInsBtn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1520,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: dataTableHeight\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1535,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1536,\n          columnNumber: 21\n        }, this), tableContent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1534,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom__container\",\n        children: [/*#__PURE__*/_jsxDEV(Collapse, {\n          in: commentAlert,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: \"Add a comment before sending the isos back to design!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1541,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1540,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          className: \"actionBtns__container\",\n          children: [actionText, actionButtons]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1547,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1551,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          className: \"commentBox__container\",\n          children: commentBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1552,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1539,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1430,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      className: \"navBtns__center\",\n      children: /*#__PURE__*/_jsxDEV(NavBtns, {\n        onChange: value => setCurrentTab(value),\n        currentTab: currentTab,\n        currentRole: currentRole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1560,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1559,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1562,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1426,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IsoCtrl, \"kqhZ+2aNHyXnTQHWZDPDq+fZ2+o=\");\n\n_c = IsoCtrl;\nexport default IsoCtrl;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsoCtrl\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/isoCtrl/isoCtrl.js"],"names":["DataTable","ReportBtns","StateTable","NavBtns","DragAndDrop","React","useState","useEffect","ActionButtons","SelectPag","CheckInTable","NavBar","MyTrayBtn","MyTrayTable","BinBtn","BinTable","OnHoldTable","StatusDataTable","HistoryDataTable","RoleDropDown","Alert","Collapse","OnHoldBtn","ProcInsBtn","ReportsBtn","ProcInstTable","JSZip","saveAs","FileSaver","XLSX","ReportBoxBtns","IssuedBtn","ProgressBtn","ProgressPlot","ModelledBtn","ModelledDataTable","IsoCtrl","document","body","style","zoom","title","process","env","REACT_APP_APP_NAMEPROJ","pagination","setPagination","currentRole","setCurrentRole","roles","setRoles","selected","setSelected","updateData","setUpdateData","comment","setComment","commentAlert","setCommentAlert","downloadZip","setDownloadzip","loading","setLoading","errorUnclaim","setErrorUnclaim","errorPI","setErrorPI","errorCL","setErrorCL","transactionSuccess","setTransactionSuccess","errorReports","setErrorReports","errorUnclaimR","setErrorUnclaimR","warningSelected","setWarningSelected","blocked","setBlocked","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","currentTab","setCurrentTab","getItem","dataTableHeight","uploadButton","actionButtons","actionText","commentBox","tableContent","procInsBtn","progressBtn","modelledBtn","myTrayBtn","currentTabText","forceUnclaim","bind","value","unlock","rename","pageSelector","currentUser","user","options","method","headers","JSON","stringify","fetch","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","setItem","catch","error","console","log","getProgress","claim","event","length","i","file","role","forceClaim","username","los","unclaim","err","fileName","verifyClick","cancelVerifyClick","filename","transaction","destiny","comments","to","deleted","onhold","sit","spo","hold","returnLead","from","returnLeadStress","handleComment","target","restore","procOrInst","tab","sendProcessClick","sendInstrumentClick","sendCancelProcessClick","sendCancelInstrumentClick","updateD","downloadFiles","res","blob","Blob","binary","zipname","String","Date","toLocaleString","replace","split","slice","generateAsync","type","downloadHistory","exportToExcel","parse","downloadStatus","downloadPI","downloadIssued","downloadStatus3D","output","substring","replaceAll","downloadModelled","apiData","fileType","header_cells","fileExtension","wscols","push","width","ws","utils","json_to_sheet","v","wb","Sheets","SheetNames","excelBuffer","write","bookType","setUploading","active","setErrorReport","issue","transmittal","date","newRev","request","returnIso","success","newName","oldName","backgroundColor","REACT_APP_PROGRESS","marginTop","fontSize","position","left","top","transform","zIndex","paddingLeft","display","progress","realProgress","progressISO","realProgressISO","height"],"mappings":"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","sourcesContent":["import DataTable from \"../../components/datatable/datatable\"\r\nimport ReportBtns from \"../../components/reportBtns/reportBtns\"\r\nimport StateTable from \"../../components/stateTable/stateTable\"\r\nimport NavBtns from \"../../components/navBtns/navBtns\"\r\nimport DragAndDrop from \"../../components/dragAndDrop/dragAndDrop\"\r\nimport \"./isoCtrl.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport ActionButtons from \"../../components/actionBtns/actionBtns\"\r\nimport SelectPag from \"../../components/selectPag/selectPag\"\r\nimport CheckInTable from \"../../components/checkInTable/checkInTable\"\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport MyTrayBtn from \"../../components/myTrayBtn/myTrayBtn\"\r\nimport MyTrayTable from \"../../components/myTrayTable/myTrayTable\"\r\nimport BinBtn from '../../components/binBtn/binBtn'\r\nimport BinTable from \"../../components/binTable/binTable\"\r\nimport OnHoldTable from \"../../components/onHoldTable/onHoldTable\"\r\nimport StatusDataTable from \"../../components/statusDataTable/statusDataTable\"\r\nimport HistoryDataTable from \"../../components/historyDataTable/historyDataTable\"\r\nimport RoleDropDown from \"../../components/roleDropDown/roleDropDown\"\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport OnHoldBtn from \"../../components/onHoldBtn/onHoldBtn\"\r\nimport ProcInsBtn from \"../../components/procInsBtn/procInsBtn\"\r\nimport ReportsBtn from \"../../components/reportsBtn/reportsBtn\"\r\nimport ProcInstTable from \"../../components/procInstTable/procInstTable\"\r\nimport JSZip from 'jszip'\r\nimport { saveAs } from 'file-saver';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport ReportBoxBtns from \"../../components/reportBoxBtns/reportBoxBtns\"\r\nimport IssuedBtn from \"../../components/issuedBtn/issuedBtn\"\r\nimport ProgressBtn from \"../../components/progressBtn/progressBtn\"\r\nimport ProgressPlot from \"../../components/progressPlot/progressPlot\"\r\nimport ModelledBtn from \"../../components/modelledBtn/modelledBtn\"\r\nimport ModelledDataTable from \"../../components/modelledDataTable/modelledDataTable\"\r\n\r\n\r\nconst IsoCtrl = () => {\r\n   \r\n    document.body.style.zoom = 0.9\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const[pagination, setPagination] = useState(8) //Controla el numero de entradas por pagina de la tabla\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const [selected, setSelected] = useState([]);\r\n    const [updateData, setUpdateData] = useState();\r\n    const [comment, setComment] = useState(\" \");\r\n    const [commentAlert, setCommentAlert] = useState(false);\r\n    const [downloadZip, setDownloadzip] = useState(new JSZip());\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorUnclaim, setErrorUnclaim] = useState(false);\r\n    const [errorPI, setErrorPI] = useState(false);\r\n    const [errorCL, setErrorCL] = useState(false);\r\n    const [transactionSuccess, setTransactionSuccess] = useState(false);\r\n    const [errorReports, setErrorReports] = useState(false);\r\n    const [errorUnclaimR, setErrorUnclaimR] = useState(false);\r\n    const [warningSelected, setWarningSelected] = useState(false);\r\n    const [blocked, setBlocked] = useState(false);\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"tab\")) //Controla la tabla y botones que se muestran\r\n    //La altura de la tabla es fija en funcion de la paginacion para evitar que los botones se muevan\r\n    var dataTableHeight = 8\r\n\r\n    if (pagination === 8){\r\n        dataTableHeight = \"550px\"\r\n    }if(pagination === 25){\r\n        dataTableHeight = \"1250px\"\r\n    }if(pagination === 50){\r\n        dataTableHeight = \"2250px\"\r\n    }if(pagination === 100){\r\n        dataTableHeight = \"4330px\"\r\n    }\r\n\r\n    //Componentes de la pagina que varian en funcion del estado\r\n    var uploadButton, actionButtons, actionText, commentBox, tableContent, procInsBtn, progressBtn, modelledBtn, myTrayBtn\r\n    var currentTabText = currentTab\r\n    if(currentTabText === \"LDE/IsoControl\"){\r\n        currentTabText = \"LOS/IsoControl\"\r\n    }\r\n    tableContent = <DataTable forceUnclaim = {forceUnclaim.bind(this)} onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} currentRole={currentRole} updateData = {updateData} unlock = {unlock.bind(this)} rename = {rename.bind(this)}/>\r\n    var pageSelector = <SelectPag onChange={value => setPagination(value)} pagination = {pagination}/>\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    \r\n    \r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            setErrorPI(false)\r\n            setErrorUnclaimR(false)\r\n            setErrorCL(false)\r\n            setUpdateData(!updateData)\r\n            setTransactionSuccess(false);\r\n            setErrorUnclaim(false)\r\n            setErrorReports(false)\r\n            setLoading(false)\r\n            setWarningSelected(false)\r\n            setBlocked(false)\r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n        setErrorUnclaimR(false)\r\n        setErrorPI(false);\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false)\r\n        setErrorUnclaim(false)\r\n        setLoading(false)\r\n        setErrorReports(false)\r\n        setSelected([])\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n    }, [currentTab])\r\n\r\n    const getProgress = () =>{\r\n        setUpdateData(!updateData)\r\n\r\n    }\r\n\r\n    const claim = async(event) => {\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setWarningSelected(false)\r\n        setErrorPI(false)\r\n        setBlocked(false)\r\n        console.log(selected)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if(currentTab === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claimProc\", options)\r\n                }\r\n            }else if(currentTab === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/claim\", options)\r\n                }\r\n            \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n            \r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n     \r\n    }   \r\n    \r\n    const forceClaim = async(username) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : username,\r\n                    file: selected[i],\r\n                    los: currentUser\r\n                }\r\n                console.log(body)\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/forceClaim\", options)\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    const unclaim = async (event) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if (currentRole === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaimProc\", options)\r\n                }\r\n            }else if(currentRole === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    console.log(body)\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unclaim\", options)\r\n                    .then(response => response.json())\r\n                    .then(json=>{\r\n                        if(json.error === \"forced\"){\r\n                            setErrorUnclaim(true)\r\n                        }else if(json.error === \"returned\"){\r\n                            setErrorUnclaimR(true)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                    });\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n        \r\n    }\r\n\r\n    async function forceUnclaim(fileName){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        localStorage.setItem(\"update\", true)\r\n        const body ={\r\n            user : currentUser,\r\n            file: fileName,\r\n            role: currentRole\r\n        }\r\n        console.log(body)\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        console.log(body)\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/forceUnclaim\", options)\r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n\r\n    const verifyClick = async(event) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/verify\", options)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function cancelVerifyClick(filename){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: filename,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelVerify\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function transaction(destiny, comments){\r\n        \r\n        if(selected.length > 0){\r\n            setErrorUnclaimR(false)\r\n            setWarningSelected(false)\r\n            setErrorReports(false)\r\n            setErrorCL(false)\r\n            setErrorUnclaim(false)\r\n            setErrorPI(false);\r\n            setTransactionSuccess(false);\r\n            setLoading(true)\r\n            setBlocked(false)\r\n            if(destiny === \"Design\"){\r\n                if(comment.length > 1){\r\n                    setComment(\" \")\r\n                    setCommentAlert(false)\r\n                    localStorage.setItem(\"update\", true)\r\n                    for (let i = 0; i < selected.length; i++){\r\n                        const body ={\r\n                            user : currentUser,\r\n                            fileName: selected[i],\r\n                            to: destiny,\r\n                            role: secureStorage.getItem(\"role\"),\r\n                            comment: comment,\r\n                            deleted: 0,\r\n                            onhold: 0\r\n                        }\r\n                        const options = {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            body: JSON.stringify(body)\r\n                        }\r\n                        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                        .then(response => response.json())\r\n                        .then(json =>{\r\n                            console.log(json)\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n                        \r\n                    }\r\n                }else{\r\n                    setCommentAlert(true)\r\n                }\r\n            }else if (destiny === \"LDE/Isocontrol\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/piStatus/\"+selected[i], options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                        if(json.sit === 1 || json.sit === 4 || json.sit === 5|| json.spo === 1 || json.spo === 4 || json.spo === 5){\r\n                            localStorage.setItem(\"update\", true)\r\n                            setErrorPI(true);\r\n                            setTransactionSuccess(false);\r\n                        }else{\r\n                            setCommentAlert(false)\r\n                            localStorage.setItem(\"update\", true)\r\n                            let deleted, hold = 0\r\n                    \r\n                            const body ={\r\n                                user : currentUser,\r\n                                fileName: selected[i],\r\n                                to: destiny,\r\n                                role: secureStorage.getItem(\"role\"),\r\n                                comment: null,\r\n                                deleted: deleted,\r\n                                onhold: hold\r\n                            }\r\n                            const options = {\r\n                                method: \"POST\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                },\r\n                                body: JSON.stringify(body)\r\n                            }\r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                            .then(response => response.json())\r\n                            .then(async json=>{\r\n                                console.log(json)\r\n                                if(json.error){\r\n                                    await setErrorCL(true) \r\n                                }else if(json.blocked){\r\n                                    setBlocked(true)\r\n                                }\r\n                            })\r\n                            if(!errorCL && !blocked){\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                            \r\n                        }\r\n                    })\r\n                }\r\n                await setUpdateData(!updateData)\r\n                setLoading(false)\r\n            }else if(destiny === \"On hold\"){\r\n                setCommentAlert(false)\r\n                localStorage.setItem(\"update\", true)\r\n                let deleted, hold = 0\r\n\r\n                if(destiny === \"Recycle bin\"){\r\n                    deleted = 1\r\n                }\r\n\r\n                if(destiny === \"On hold\"){\r\n                    hold = 1\r\n                }\r\n                for (let i = 0; i < selected.length; i++){\r\n                    \r\n                    const body ={\r\n                        user : currentUser,\r\n                        fileName: selected[i],\r\n                        to: destiny,\r\n                        role: secureStorage.getItem(\"role\"),\r\n                        comment: comments,\r\n                        deleted: deleted,\r\n                        onhold: hold\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                    .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n                }\r\n            }else{\r\n                setCommentAlert(false)\r\n                localStorage.setItem(\"update\", true)\r\n                let deleted, hold = 0\r\n\r\n                if(destiny === \"Recycle bin\"){\r\n                    deleted = 1\r\n                }\r\n\r\n                if(destiny === \"On hold\"){\r\n                    hold = 1\r\n                }\r\n                for (let i = 0; i < selected.length; i++){\r\n                    \r\n                    const body ={\r\n                        user : currentUser,\r\n                        fileName: selected[i],\r\n                        to: destiny,\r\n                        role: secureStorage.getItem(\"role\"),\r\n                        comment: null,\r\n                        deleted: deleted,\r\n                        onhold: hold\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/transaction\", options)\r\n                    .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }    \r\n    }\r\n\r\n    async function returnLead(destiny){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setWarningSelected(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setErrorUnclaimR(false)\r\n        setBlocked(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                setLoading(true)\r\n                const body ={\r\n                    user : currentUser,\r\n                    fileName: selected[i],\r\n                    to: destiny,\r\n                    from: currentTab\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/returnLead\", options)\r\n                .then(response => response.json())\r\n                        .then(json =>{\r\n                            if(json.blocked){\r\n                                setBlocked(true)\r\n                            }else{\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                        })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n    \r\n    async function returnLeadStress(){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setErrorUnclaimR(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                        \r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    comments: comment\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/returnLeadStress\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    function handleComment(event){\r\n        setComment(event.target.value)\r\n    }\r\n\r\n    async function restore(){\r\n        setErrorReports(false)\r\n        setErrorUnclaimR(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    fileName: selected[i],\r\n                    user: currentUser,\r\n                    role: currentRole,\r\n                    deleted: 0,\r\n                    onhold: 0\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/restore\", options)\r\n                setTransactionSuccess(true)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            console.log(\"restored\")\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    function procOrInst(tab) {\r\n        if(tab === \"Process\" || tab === \"Instrument\"){\r\n            setCurrentTab(tab)\r\n        }else if (currentRole === \"Process\"){\r\n            setCurrentTab(\"Process\")\r\n        }else{\r\n            setCurrentTab(\"Instrument\")\r\n        }\r\n    }\r\n\r\n    async function sendProcessClick(fileName){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/process\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendInstrumentClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/instrument\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendCancelProcessClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setLoading(true)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body ={\r\n            file: fileName\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelProc\", options)\r\n    \r\n        await setUpdateData(!updateData)\r\n        await setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    async function sendCancelInstrumentClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setWarningSelected(false)\r\n        setLoading(true)\r\n        setBlocked(false)\r\n        localStorage.setItem(\"update\", true)\r\n        const body ={\r\n            file: fileName\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelInst\", options)\r\n    \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        setSelected([])\r\n    }\r\n\r\n    function updateD(){\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function downloadFiles(){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            /*\r\n            if(selected.length === 1){\r\n                localStorage.setItem(\"update\", true)\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/pdf\"\r\n                        }\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n                    .then(res => res.blob())\r\n                        .then(response =>{\r\n                            console.log(\"Se descarga\")\r\n                            download(new Blob([response]), selected[i], \"application/pdf\")\r\n                        })\r\n                }\r\n            }else if (selected.length > 1){\r\n                localStorage.setItem(\"update\", true)\r\n                for (let i = 0; i < selected.length; i++){\r\n\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/pdf\"\r\n                        }\r\n                    }\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n                    .then(res => res.blob())\r\n                        .then(response =>{\r\n                            setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                        })\r\n                }\r\n                const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n                downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n                    saveAs(blob,  zipname)\r\n                })\r\n                \r\n            }\r\n            await setUpdateData(!updateData)\r\n            await setDownloadzip(new JSZip())   \r\n            setLoading(false)\r\n            */\r\n            for (let i = 0; i < selected.length; i++){\r\n\r\n                const options = {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/pdf\"\r\n                    }\r\n                }\r\n                \r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getAttach/\"+selected[i], options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+selected[i], options)\r\n                    .then(res => res.blob())\r\n                    .then( async response =>{\r\n                        setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                        for(let i = 0; i < json.length; i++){\r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/download/\"+json[i], options)\r\n                            .then(res => res.blob())\r\n                            .then(response =>{\r\n                                setDownloadzip(downloadZip.file(json[i], new Blob([response]),{binary:true}))   \r\n                            })\r\n                        }\r\n                        \r\n                    })\r\n                })\r\n            \r\n\r\n                \r\n        \r\n            }\r\n            const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n            downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n                saveAs(blob,  zipname)\r\n            })  \r\n            \r\n            await setDownloadzip(new JSZip())   \r\n            //await setAttachFiles(null)\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function downloadHistory(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadHistory/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"FROM\", \"TO\", \"DATE\", \"COMMENT\", \"USER\"]\r\n            exportToExcel(JSON.parse(json), \"Comments\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadStatus(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadStatus/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"START_DATE\", \"CURRENT_DATE\", \"CONDITION\", \"TRAY\"]\r\n            exportToExcel(JSON.parse(json), \"Status\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadPI(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadPI/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"PROCESS\", \"INSTRUMENTATION\", \"UPDATED_AT\"]\r\n            exportToExcel(JSON.parse(json), \"IsoStatusSIT-SPO\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadIssued(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadIssued/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"REV0\", \"REV1\", \"REV2\", \"REV3\", \"REV4\"]\r\n            exportToExcel(JSON.parse(json), \"IsoStatusIssued\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadStatus3D(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadStatus3D/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            let output = JSON.stringify(json.log)\r\n            output = output.substring(1,output.length-1)\r\n            output = output.replaceAll(\",\", \"\\n\")\r\n            output = output.replaceAll(/['\"]+/g, \"\")\r\n\r\n\r\n            const data = new Blob([output], { type: 'txt' });\r\n            FileSaver.saveAs(data, \"fromIsoTrackerTo3d.mac\");\r\n        })\r\n    }\r\n\r\n    async function downloadModelled(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/downloadModelled/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"TAG\", \"ISO_ID\", \"TYPE\"]\r\n            exportToExcel(JSON.parse(json), \"Modelled\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        setErrorReports(false)\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n\r\n        let wscols = []\r\n        for(let i = 0; i < headers.length; i++){\r\n            wscols.push({width:35})\r\n        }\r\n\r\n        const ws = XLSX.utils.json_to_sheet(apiData);   \r\n        ws[\"!cols\"] = wscols\r\n        for(let i = 0; i < headers.length; i++){\r\n            ws[header_cells[i]].v = headers[i]\r\n        }\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n    async function setUploading(active){\r\n        setErrorReports(false)\r\n        setLoading(active)\r\n        if(!active){\r\n            setTransactionSuccess(true)\r\n        }\r\n    }\r\n\r\n    async function setErrorReport(){\r\n        setErrorReports(true)\r\n    }\r\n\r\n    async function issue(transmittal, date){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                    transmittal: transmittal,\r\n                    date: date\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/toIssue\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    async function newRev() {\r\n        setErrorReports(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/newRev\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    \r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n            setSelected([])\r\n        }\r\n    }\r\n\r\n    async function request() {\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/request\", options)\r\n                \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setSelected([])\r\n        }\r\n\r\n    }\r\n\r\n    async function returnIso(destiny, comments){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        if (selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if(comments.length < 1){\r\n                comments = comment\r\n            }\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                    from: currentTab,\r\n                    destiny: destiny,\r\n                    comments: comments\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/returnIso\", options)\r\n                .then(response => response.json())\r\n                .then(json =>{\r\n                    console.log(json)\r\n                    if(json.blocked){\r\n                        setBlocked(true)\r\n                    }else{\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                })\r\n                \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            setComment(\"\")\r\n            setSelected([])\r\n        }else{\r\n            setWarningSelected(true)\r\n        }\r\n    }\r\n\r\n    async function success(){\r\n        setTransactionSuccess(true)\r\n    }\r\n\r\n    async function unlock(filename){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            fileName: filename\r\n          }\r\n      \r\n          const options = {\r\n              method: \"POST\",\r\n              headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify(body)\r\n          }\r\n      \r\n          fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/unlock\", options)\r\n          .then(response => console.log(\"Unlocked\"))\r\n\r\n          setUpdateData(!updateData)\r\n    }\r\n\r\n    async function rename(newName, oldName){\r\n\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setWarningSelected(false)\r\n        setBlocked(false)\r\n        localStorage.setItem(\"update\", true)\r\n\r\n        const body = {\r\n            oldName: oldName,\r\n            newName: newName\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/rename\", options)\r\n        .then(response => console.log(\"Cambiado\"))\r\n\r\n        setTransactionSuccess(true)\r\n        \r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    if(currentTab === \"Upload IsoFiles\"){\r\n        secureStorage.setItem(\"tab\", \"Upload IsoFiles\")\r\n        uploadButton = <button  type=\"button\" class=\"btn btn-info btn-lg\" style={{backgroundColor: \"#17a2b8\", width:\"180px\"}}><b>Upload</b></button>\r\n        tableContent = <DragAndDrop mode={\"upload\"} role={currentRole} user={currentUser}  uploaded={getProgress.bind(this)}/>\r\n        pageSelector = null\r\n    }if(currentTab === \"Design\" && currentRole === \"Design\"){\r\n        uploadButton = <button  type=\"button\" className=\"btn btn-info btn-lg\" style={{backgroundColor: \"lightblue\", width:\"180px\"}} onClick={() => setCurrentTab(\"Upload IsoFiles\")}><b>Upload</b></button>\r\n    }if(currentTab === \"CheckBy\"){\r\n        tableContent = <CheckInTable/>\r\n    }if(currentTab === \"My Tray\"){\r\n        tableContent = <MyTrayTable  updateData = {updateData} onChange={value=> setSelected(value)} cancelVerifyClick={cancelVerifyClick.bind(this)} sendProcessClick={sendProcessClick.bind(this)} success={success.bind(this)} sendInstrumentClick = {sendInstrumentClick.bind(this)} sendCancelProcessClick={sendCancelProcessClick.bind(this)} sendCancelInstrumentClick={sendCancelInstrumentClick.bind(this)} updateD = {updateD.bind(this)} pagination = {pagination} currentRole = {currentRole} currentUser = {currentUser} selected={selected} />\r\n    }if(currentTab === \"Recycle bin\"){\r\n        tableContent = <BinTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"On hold\"){\r\n        tableContent = <OnHoldTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"Status\"){\r\n        tableContent = <StatusDataTable onChange={value=> setSelected(value)} pagination = {pagination} role = {currentRole}/>\r\n    }if(currentTab === \"History\"){\r\n        tableContent = <HistoryDataTable pagination = {pagination}/>   \r\n    }if(currentRole === \"Process\" || currentRole === \"Instrument\" || currentRole === \"SpecialityLead\"){\r\n        procInsBtn = <ProcInsBtn onChange={value => procOrInst(value)} currentTab = {currentTab} />\r\n    }if(currentTab === \"Process\" || currentTab === \"Instrument\"){\r\n        tableContent = <ProcInstTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData} />\r\n    }if(currentTab === \"Reports\"){\r\n        tableContent = <ReportBoxBtns user={currentUser} downloadHistory={downloadHistory.bind(this)} downloadStatus={downloadStatus.bind(this)} downloadPI={downloadPI.bind(this)} downloadIssued={downloadIssued.bind(this)} setErrorReport={setErrorReport.bind(this)} setUploading={setUploading.bind(this)} downloadStatus3D={downloadStatus3D.bind(this)} downloadModelled={downloadModelled.bind(this)}/>\r\n    }if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n        progressBtn = <ProgressBtn onChange={value => setCurrentTab(\"Progress\")} currentTab = {currentTab}></ProgressBtn>\r\n        modelledBtn = <ModelledBtn onChange={value => setCurrentTab(\"Modelled\")} currentTab = {currentTab}></ModelledBtn>\r\n    }if(currentTab === \"Progress\"){\r\n        tableContent = <ProgressPlot></ProgressPlot>\r\n    }if(currentTab === \"Modelled\"){\r\n        tableContent = <ModelledDataTable  pagination = {pagination}></ModelledDataTable>\r\n    }if(currentRole !== \"Review\"){\r\n        myTrayBtn = <MyTrayBtn onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n    }\r\n\r\n    if(currentTab === \"My Tray\" || currentTab === \"LDE/IsoControl\"){\r\n        commentBox = <div>\r\n            <textarea placeholder=\"Comments\" class=\"comments\" cols=\"100\" rows=\"2\" required=\"\" maxlength=\"400\" name=\"comments\" value={comment} onChange={handleComment}></textarea>\r\n        </div>\r\n    }\r\n\r\n    \r\n\r\n    if(((currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Design\") || \r\n    ((currentRole === \"Stress\" || currentRole === \"StressLead\") && currentTab === \"Stress\") ||\r\n    ((currentRole === \"Supports\" || currentRole === \"SupportsLead\") && currentTab === \"Supports\") ||\r\n    ((currentRole === \"Materials\") && currentTab === \"Materials\") ||\r\n    ((currentRole === \"Issuer\") && currentTab === \"Issuer\") ||\r\n    ((currentRole === \"SpecialityLead\" && currentTab ===\"SpecialityLead\") ||\r\n    (currentTab=== \"My Tray\")) || (((currentTab === \"Recycle bin\" || currentTab === \"On hold\") && currentRole === \"DesignLead\") || \r\n    currentRole === \"SpecialityLead\" && currentTab !== \"Progress\") || (currentTab === \"Process\" && currentRole === \"Process\") ||\r\n    (currentRole === \"Instrument\" && currentTab === \"Instrument\") ||\r\n    (currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Issued\"){\r\n        actionText = <b className=\"progress__text\">Click an action for selected IsoFiles:</b>\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} returnLeadStress={returnLeadStress.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} issue={issue.bind(this)} newRev={newRev.bind(this)} request={request.bind(this)} returnIso={returnIso.bind(this)} onlyDownload = {false} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }else if(currentTab !== \"History\" && currentTab !== \"Upload IsoFiles\" && currentTab !== \"Recycle bin\" && currentTab !== \"Reports\" && currentTab != \"Progress\" && currentTab !== \"Modelled\"){\r\n        actionText = <b className=\"progress__text\">Click an action for selected IsoFiles:</b>\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} returnLeadStress={returnLeadStress.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} issue={issue.bind(this)} newRev={newRev.bind(this)} request={request.bind(this)} returnIso={returnIso.bind(this)} onlyDownload = {true} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }\r\n    if(currentTab === \"Modelled\"){\r\n        actionText = null\r\n        actionButtons = <button className=\"btn btn-sm btn-success\" style={{marginTop:\"40px\"}} onClick={()=>downloadModelled()}>Export</button>\r\n    }\r\n    \r\n    return (\r\n        \r\n        <body>\r\n            \r\n            <NavBar onChange={value => setCurrentTab(value)}/>\r\n\r\n            <div className=\"isoCtrl__container\">     \r\n                <center>\r\n                    <Collapse in={loading}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\",zIndex:\"3\"}} severity=\"info\"\r\n                            >\r\n                            Processing...\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorPI}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            At least one isometric was on revision and wasn't sent to LDE/Isocontrol\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={transactionSuccess}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"success\"\r\n                            >\r\n                            Successful!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorUnclaim}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Can't unclaim an iso assigned by LOS!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorUnclaimR}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Can't unclaim a returned ISO!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorReports}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Missing columns!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorCL}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Missing clean!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={warningSelected}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"warning\"\r\n                            >\r\n                            Select at least one isometric!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={blocked}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            The isometric has been locked! Contact the administrator\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <h2 className=\"title__container\">\r\n                        <div className=\"roleSelector__container\">\r\n                            <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                         </div>\r\n                        <b >      \r\n                            <i className=\"iso__title\">IsoTracker</i>\r\n                        </b>\r\n                    </h2>\r\n                    <h3 className=\"iso__subtitle\">{currentTabText}</h3>\r\n                </center>\r\n                \r\n                <div>\r\n                    <div>\r\n                        <div style={{display:\"inline\"}}>\r\n                        {myTrayBtn}\r\n                            <td className=\"reportBtns__container\" style={{width:\"380px\"}}>\r\n                                \r\n                                <ReportBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n                                \r\n                            </td>\r\n                            <td>\r\n                                {uploadButton}\r\n                            </td>   \r\n                            <div className=\"stateTable__container\">\r\n                                \r\n                                <StateTable updateData={updateData} currentRole = {currentRole} progress={progress} realProgress={realProgress} progressISO={progressISO} realProgressISO={realProgressISO}/>\r\n                               \r\n                            </div>            \r\n\r\n                        </div>\r\n                    </div>\r\n                </div>              \r\n                \r\n                \r\n                <div style={{position: \"relative\", width:\"600px\"}}>\r\n                  {pageSelector}\r\n                  <BinBtn onChange={value => setCurrentTab(\"Recycle bin\")} currentTab = {currentTab}/>\r\n                  <OnHoldBtn onChange={value => setCurrentTab(\"On hold\")} currentTab = {currentTab}/>\r\n                  <IssuedBtn onChange={value => setCurrentTab(\"Issued\")} currentTab = {currentTab}/>\r\n                  <ReportsBtn onChange={value => setCurrentTab(\"Reports\")} currentTab = {currentTab}/>\r\n                  {progressBtn}\r\n                  {modelledBtn}\r\n                  {procInsBtn}\r\n                  \r\n\r\n                </div>\r\n                    \r\n                \r\n                <div style={{height: dataTableHeight}}>\r\n                    <br></br>\r\n                    <br></br> \r\n                    {tableContent}\r\n                </div>\r\n                <div className=\"bottom__container\">\r\n                    <Collapse in={commentAlert}>\r\n                        <Alert severity=\"error\"\r\n                            >\r\n                            Add a comment before sending the isos back to design!\r\n\r\n                            </Alert>\r\n                    </Collapse>\r\n                    <center className=\"actionBtns__container\">\r\n                        {actionText}\r\n                        {actionButtons}\r\n                    </center>\r\n                    <br></br>\r\n                    <center className=\"commentBox__container\">\r\n                        {commentBox}\r\n                    </center>\r\n                 \r\n                    \r\n                </div>\r\n            </div>\r\n            <center className=\"navBtns__center\">              \r\n                <NavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole}/>               \r\n            </center>\r\n            <br></br>\r\n        </body>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default IsoCtrl;\r\n"]},"metadata":{},"sourceType":"module"}