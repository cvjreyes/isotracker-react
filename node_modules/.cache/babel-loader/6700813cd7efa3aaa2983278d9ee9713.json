{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"breakpoints\", \"palette\", \"spacing\", \"shape\"];\nimport { deepmerge } from '@mui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\n\nfunction createTheme() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _options$breakpoints = options.breakpoints,\n      breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints,\n      _options$palette = options.palette,\n      paletteInput = _options$palette === void 0 ? {} : _options$palette,\n      spacingInput = options.spacing,\n      _options$shape = options.shape,\n      shapeInput = _options$shape === void 0 ? {} : _options$shape,\n      other = _objectWithoutPropertiesLoose(options, _excluded);\n\n  var breakpoints = createBreakpoints(breakpointsInput);\n  var spacing = createSpacing(spacingInput);\n  var muiTheme = deepmerge({\n    breakpoints: breakpoints,\n    direction: 'ltr',\n    components: {},\n    // Inject component definitions.\n    palette: _extends({\n      mode: 'light'\n    }, paletteInput),\n    spacing: spacing,\n    shape: _extends({}, shape, shapeInput)\n  }, other);\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  muiTheme = args.reduce(function (acc, argument) {\n    return deepmerge(acc, argument);\n  }, muiTheme);\n  return muiTheme;\n}\n\nexport default createTheme;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@mui/system/esm/createTheme/createTheme.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","deepmerge","createBreakpoints","shape","createSpacing","createTheme","options","breakpoints","breakpointsInput","palette","paletteInput","spacingInput","spacing","shapeInput","other","muiTheme","direction","components","mode","args","reduce","acc","argument"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,IAAMC,SAAS,GAAG,CAAC,aAAD,EAAgB,SAAhB,EAA2B,SAA3B,EAAsC,OAAtC,CAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,WAAT,GAA4C;AAAA,MAAvBC,OAAuB,uEAAb,EAAa;;AAAA,6BAMtCA,OANsC,CAExCC,WAFwC;AAAA,MAE3BC,gBAF2B,qCAER,EAFQ;AAAA,yBAMtCF,OANsC,CAGxCG,OAHwC;AAAA,MAG/BC,YAH+B,iCAGhB,EAHgB;AAAA,MAI/BC,YAJ+B,GAMtCL,OANsC,CAIxCM,OAJwC;AAAA,uBAMtCN,OANsC,CAKxCH,KALwC;AAAA,MAKjCU,UALiC,+BAKpB,EALoB;AAAA,MAOpCC,KAPoC,GAO5Bf,6BAA6B,CAACO,OAAD,EAAUN,SAAV,CAPD;;AAS1C,MAAMO,WAAW,GAAGL,iBAAiB,CAACM,gBAAD,CAArC;AACA,MAAMI,OAAO,GAAGR,aAAa,CAACO,YAAD,CAA7B;AACA,MAAII,QAAQ,GAAGd,SAAS,CAAC;AACvBM,IAAAA,WAAW,EAAXA,WADuB;AAEvBS,IAAAA,SAAS,EAAE,KAFY;AAGvBC,IAAAA,UAAU,EAAE,EAHW;AAIvB;AACAR,IAAAA,OAAO,EAAEX,QAAQ,CAAC;AAChBoB,MAAAA,IAAI,EAAE;AADU,KAAD,EAEdR,YAFc,CALM;AAQvBE,IAAAA,OAAO,EAAPA,OARuB;AASvBT,IAAAA,KAAK,EAAEL,QAAQ,CAAC,EAAD,EAAKK,KAAL,EAAYU,UAAZ;AATQ,GAAD,EAUrBC,KAVqB,CAAxB;;AAX0C,oCAANK,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAsB1CJ,EAAAA,QAAQ,GAAGI,IAAI,CAACC,MAAL,CAAY,UAACC,GAAD,EAAMC,QAAN;AAAA,WAAmBrB,SAAS,CAACoB,GAAD,EAAMC,QAAN,CAA5B;AAAA,GAAZ,EAAyDP,QAAzD,CAAX;AACA,SAAOA,QAAP;AACD;;AAED,eAAeV,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"breakpoints\", \"palette\", \"spacing\", \"shape\"];\r\nimport { deepmerge } from '@mui/utils';\r\nimport createBreakpoints from './createBreakpoints';\r\nimport shape from './shape';\r\nimport createSpacing from './createSpacing';\r\n\r\nfunction createTheme(options = {}, ...args) {\r\n  const {\r\n    breakpoints: breakpointsInput = {},\r\n    palette: paletteInput = {},\r\n    spacing: spacingInput,\r\n    shape: shapeInput = {}\r\n  } = options,\r\n        other = _objectWithoutPropertiesLoose(options, _excluded);\r\n\r\n  const breakpoints = createBreakpoints(breakpointsInput);\r\n  const spacing = createSpacing(spacingInput);\r\n  let muiTheme = deepmerge({\r\n    breakpoints,\r\n    direction: 'ltr',\r\n    components: {},\r\n    // Inject component definitions.\r\n    palette: _extends({\r\n      mode: 'light'\r\n    }, paletteInput),\r\n    spacing,\r\n    shape: _extends({}, shape, shapeInput)\r\n  }, other);\r\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\r\n  return muiTheme;\r\n}\r\n\r\nexport default createTheme;"]},"metadata":{},"sourceType":"module"}