{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\csptrackerKeyParams\\\\csptrackerKeyParams.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CSPTrackerKeyParams extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      ratingData: [],\n      specData: [],\n      endPreparationData: [],\n      boltTypesData: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker/ratings\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"Name\": json.rows[i].rating\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        ratingData: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker/specs\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"Name\": json.rows[i].spec\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        specData: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker/endPreparations\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"Name\": json.rows[i].state\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        endPreparationData: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker/boltTypes\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"Name\": json.rows[i].type\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        boltTypesData: rows,\n        selectedRows: []\n      });\n    });\n  }\n\n  addRowRatings() {\n    let rows = this.state.ratingData;\n    rows.push({\n      \"Name\": \"\"\n    });\n    this.setState({\n      ratingData: rows\n    });\n  }\n\n  submitChangesTypes() {\n    const body = {\n      rows: this.state.typesData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/equipments/types\", options).then(response => response.json()).then(json => {});\n    this.props.success();\n  }\n\n  addRowSpecs() {\n    let rows = this.state.specData;\n    rows.push({\n      \"Name\": \"\"\n    });\n    this.setState({\n      specData: rows\n    });\n  }\n\n  submitChangesSteps() {\n    const body = {\n      rows: this.state.stepsData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/equipments/steps\", options).then(response => response.json()).then(json => {});\n    this.props.success();\n  }\n\n  addRowEndPreparations() {\n    let rows = this.state.endPreparationData;\n    rows.push({\n      \"Name\": \"\"\n    });\n    this.setState({\n      endPreparationData: rows\n    });\n  }\n\n  submitChangesProgress() {\n    const body = {\n      rows: this.state.progressData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/equipments/progress\", options).then(response => response.json()).then(json => {});\n    this.props.success();\n  }\n\n  addRowBoltTypes() {\n    let rows = this.state.boltTypesData;\n    rows.push({\n      \"Name\": \"\"\n    });\n    this.setState({\n      endPreparationData: rows\n    });\n  }\n\n  submitChangesProgress() {\n    const body = {\n      rows: this.state.progressData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/equipments/progress\", options).then(response => response.json()).then(json => {});\n    this.props.success();\n  }\n\n  render() {\n    const typesSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 200 //... other options\n\n    };\n    const stepsSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 200 //... other options\n\n    };\n    const progressSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 195 //... other options\n\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        float: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"300px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.ratingData,\n            colHeaders: [\"<b>RATINGS</b>\"],\n            rowHeaders: true,\n            width: \"250\",\n            height: \"470\",\n            settings: stepsSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Name\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowRatings(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesRatings(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"170px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.specData,\n            colHeaders: [\"<b>SPECS</b>\"],\n            rowHeaders: true,\n            width: \"250\",\n            height: \"470\",\n            settings: typesSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Name\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowSpecs(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesSpecs(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"170px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.endPreparationData,\n            colHeaders: [\"<b>END PREPARATIONS</b>\"],\n            rowHeaders: true,\n            width: \"250\",\n            height: \"470\",\n            settings: progressSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Name\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowEndPreparations(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesEndPreparations(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"170px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.boltTypesData,\n            colHeaders: [\"<b>BOLT TYPES</b>\"],\n            rowHeaders: true,\n            width: \"250\",\n            height: \"470\",\n            settings: typesSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Name\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowBoltTypes(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesBoltTypes(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CSPTrackerKeyParams;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/csptrackerKeyParams/csptrackerKeyParams.js"],"names":["React","HotTable","CSPTrackerKeyParams","Component","state","searchText","searchedColumn","ratingData","specData","endPreparationData","boltTypesData","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","row","i","length","rating","push","setState","spec","type","addRowRatings","submitChangesTypes","body","typesData","JSON","stringify","success","addRowSpecs","submitChangesSteps","stepsData","addRowEndPreparations","submitChangesProgress","progressData","addRowBoltTypes","render","typesSettings","licenseKey","colWidths","stepsSettings","progressSettings","float","marginLeft","data","marginRight","fontSize","width","borderRadius","submitChangesRatings","submitChangesSpecs","submitChangesEndPreparations","submitChangesBoltTypes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\n\r\nclass CSPTrackerKeyParams extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    ratingData: [],\r\n    specData: [],\r\n    endPreparationData: [],\r\n    boltTypesData: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: []\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker/ratings\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      for(let i = 0; i < json.rows.length; i++){\r\n\r\n          row = {\"Name\": json.rows[i].rating}\r\n          rows.push(row)\r\n      }\r\n      this.setState({ratingData : rows, selectedRows: []});\r\n\r\n    }) \r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker/specs\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      for(let i = 0; i < json.rows.length; i++){\r\n\r\n          row = {\"Name\": json.rows[i].spec}\r\n          rows.push(row)\r\n      }\r\n      this.setState({specData : rows, selectedRows: []});\r\n\r\n    }) \r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker/endPreparations\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      for(let i = 0; i < json.rows.length; i++){\r\n\r\n          row = {\"Name\": json.rows[i].state}\r\n          rows.push(row)\r\n      }\r\n      this.setState({endPreparationData : rows, selectedRows: []});\r\n\r\n    })\r\n    \r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker/boltTypes\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      for(let i = 0; i < json.rows.length; i++){\r\n\r\n          row = {\"Name\": json.rows[i].type}\r\n          rows.push(row)\r\n      }\r\n      this.setState({boltTypesData : rows, selectedRows: []});\r\n\r\n    }) \r\n  }\r\n\r\n  addRowRatings(){\r\n    let rows = this.state.ratingData\r\n    rows.push({\"Name\":\"\"})\r\n    this.setState({ratingData: rows})\r\n  }\r\n  \r\n  submitChangesTypes(){\r\n    const body = {\r\n      rows: this.state.typesData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/equipments/types\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n\r\n    })\r\n    this.props.success()\r\n  }\r\n\r\n  addRowSpecs(){\r\n    let rows = this.state.specData\r\n    rows.push({\"Name\": \"\"})\r\n    this.setState({specData: rows})\r\n  }\r\n\r\n  submitChangesSteps(){\r\n    const body = {\r\n      rows: this.state.stepsData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/equipments/steps\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n\r\n    })\r\n    this.props.success()\r\n  }\r\n\r\n  addRowEndPreparations(){\r\n    let rows = this.state.endPreparationData\r\n    rows.push({\"Name\": \"\"})\r\n    this.setState({endPreparationData: rows})\r\n  }\r\n\r\n  submitChangesProgress(){\r\n    const body = {\r\n      rows: this.state.progressData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/equipments/progress\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n\r\n    })\r\n    this.props.success()\r\n  }\r\n\r\n  addRowBoltTypes(){\r\n    let rows = this.state.boltTypesData\r\n    rows.push({\"Name\": \"\"})\r\n    this.setState({endPreparationData: rows})\r\n  }\r\n\r\n  submitChangesProgress(){\r\n    const body = {\r\n      rows: this.state.progressData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/equipments/progress\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n\r\n    })\r\n    this.props.success()\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n\r\n    const typesSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 200,\r\n        //... other options\r\n      }\r\n  \r\n      const stepsSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 200,\r\n        //... other options\r\n      }\r\n  \r\n      const progressSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 195,\r\n        //... other options\r\n      }\r\n\r\n      return (\r\n        <div className=\"row\" style={{float:\"left\"}}>\r\n           <div className=\"column\" style={{marginLeft:\"300px\"}}>\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.ratingData}\r\n                colHeaders = {[\"<b>RATINGS</b>\"]}\r\n                rowHeaders={true}\r\n                width=\"250\"\r\n                height=\"470\"\r\n                settings={stepsSettings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Name\"}]}\r\n              />\r\n              <br></br>\r\n              <center>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowRatings()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesRatings()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\"}}>Save</button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n          <div className=\"column\" style={{marginLeft:\"170px\"}}>\r\n\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.specData}\r\n                colHeaders = {[\"<b>SPECS</b>\"]}\r\n                rowHeaders={true}\r\n                width=\"250\"\r\n                height=\"470\"\r\n                settings={typesSettings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Name\"}]}\r\n              />\r\n              <br></br>\r\n              <center>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowSpecs()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesSpecs()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\"}}>Save</button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n         \r\n          <div className=\"column\" style={{marginLeft:\"170px\"}}>\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.endPreparationData}\r\n                colHeaders = {[\"<b>END PREPARATIONS</b>\"]}\r\n                rowHeaders={true}\r\n                width=\"250\"\r\n                height=\"470\"\r\n                settings={progressSettings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Name\"}]}\r\n              />\r\n              <br></br>\r\n              <center>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowEndPreparations()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesEndPreparations()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\"}}>Save</button>\r\n              </center>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n          <div className=\"column\" style={{marginLeft:\"170px\"}}>\r\n\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.boltTypesData}\r\n                colHeaders = {[\"<b>BOLT TYPES</b>\"]}\r\n                rowHeaders={true}\r\n                width=\"250\"\r\n                height=\"470\"\r\n                settings={typesSettings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Name\"}]}\r\n              />\r\n              <br></br>\r\n              <center>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowBoltTypes()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesBoltTypes()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\"}}>Save</button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default CSPTrackerKeyParams;"]},"metadata":{},"sourceType":"module"}