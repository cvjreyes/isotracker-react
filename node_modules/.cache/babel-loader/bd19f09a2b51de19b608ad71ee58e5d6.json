{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\equipTypesDataTable\\\\equipTypesDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\n\nclass EquipTypesDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/equipments/types\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        let mod = 0;\n\n        if (json.rows[i].modelled) {\n          mod = json.rows[i].modelled;\n        }\n\n        if (i % 2 === 0) {\n          row = {\n            key: i,\n            code: json.rows[i].code,\n            name: json.rows[i].name,\n            weight: json.rows[i].weight,\n            color: \"#fff\"\n          };\n        } else {\n          row = {\n            key: i,\n            code: json.rows[i].code,\n            name: json.rows[i].name,\n            weight: json.rows[i].weight,\n            color: \"#eee\"\n          };\n        }\n\n        for (let j = 0; j < this.state.steps.length; j++) {\n          let currentStep = this.state.steps[j].toString();\n          row[currentStep] = json.rows[i][currentStep];\n        }\n\n        rows.push(row);\n      }\n\n      this.setState({\n        data: rows,\n        selectedRows: []\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hot-app\",\n      children: /*#__PURE__*/_jsxDEV(HotTable, {\n        data: hotData,\n        colHeaders: true,\n        rowHeaders: true,\n        width: \"1000\",\n        height: \"400\",\n        settings: settings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EquipTypesDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/equipTypesDataTable/equipTypesDataTable.js"],"names":["React","Table","Input","Button","Space","SearchOutlined","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","EquipTypesDataTable","Component","state","searchText","searchedColumn","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","row","i","length","mod","modelled","code","name","weight","color","j","currentStep","push","setState","render","hotData","settings"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass EquipTypesDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: []\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/types\", options)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        var rows = []\r\n        var row = null\r\n        \r\n        for(let i = 0; i < json.rows.length; i++){\r\n            let mod = 0\r\n            if(json.rows[i].modelled){\r\n              mod = json.rows[i].modelled\r\n            }\r\n            if(i % 2 === 0){\r\n              row = {key:i, code: json.rows[i].code, name: json.rows[i].name, weight: json.rows[i].weight, color: \"#fff\"}\r\n            }else{\r\n                row = {key:i, code: json.rows[i].code, name: json.rows[i].name, weight: json.rows[i].weight, color: \"#eee\"}\r\n            }\r\n            \r\n            for(let j = 0; j < this.state.steps.length; j++){\r\n              let currentStep = this.state.steps[j].toString()\r\n              row[currentStep] = json.rows[i][currentStep]\r\n            }\r\n            rows.push(row)\r\n        }\r\n        this.setState({data : rows, selectedRows: []});\r\n\r\n    }) \r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n    \r\n\r\n    return (\r\n      <div id=\"hot-app\">\r\n      <HotTable\r\n        data={hotData}\r\n        colHeaders={true}\r\n        rowHeaders={true}\r\n        width=\"1000\"\r\n        height=\"400\"\r\n        settings={settings} \r\n      />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EquipTypesDataTable;"]},"metadata":{},"sourceType":"module"}