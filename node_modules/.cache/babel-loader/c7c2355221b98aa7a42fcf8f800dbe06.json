{"ast":null,"code":"var toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar replace = ''.replace;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g; // https://tc39.es/ecma262/#sec-getsubstitution\n\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n\n  return replace.call(replacement, symbols, function (match, ch) {\n    var capture;\n\n    switch (ch.charAt(0)) {\n      case '$':\n        return '$';\n\n      case '&':\n        return matched;\n\n      case '`':\n        return str.slice(0, position);\n\n      case \"'\":\n        return str.slice(tailPos);\n\n      case '<':\n        capture = namedCaptures[ch.slice(1, -1)];\n        break;\n\n      default:\n        // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n          return match;\n        }\n\n        capture = captures[n - 1];\n    }\n\n    return capture === undefined ? '' : capture;\n  });\n};","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/core-js/internals/get-substitution.js"],"names":["toObject","require","floor","Math","replace","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","matched","str","position","captures","namedCaptures","replacement","tailPos","length","m","symbols","undefined","call","match","ch","capture","charAt","slice","n","f"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AAEA,IAAIC,KAAK,GAAGC,IAAI,CAACD,KAAjB;AACA,IAAIE,OAAO,GAAG,GAAGA,OAAjB;AACA,IAAIC,oBAAoB,GAAG,2BAA3B;AACA,IAAIC,6BAA6B,GAAG,mBAApC,C,CAEA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmBC,GAAnB,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,aAA5C,EAA2DC,WAA3D,EAAwE;AACvF,MAAIC,OAAO,GAAGJ,QAAQ,GAAGF,OAAO,CAACO,MAAjC;AACA,MAAIC,CAAC,GAAGL,QAAQ,CAACI,MAAjB;AACA,MAAIE,OAAO,GAAGZ,6BAAd;;AACA,MAAIO,aAAa,KAAKM,SAAtB,EAAiC;AAC/BN,IAAAA,aAAa,GAAGb,QAAQ,CAACa,aAAD,CAAxB;AACAK,IAAAA,OAAO,GAAGb,oBAAV;AACD;;AACD,SAAOD,OAAO,CAACgB,IAAR,CAAaN,WAAb,EAA0BI,OAA1B,EAAmC,UAAUG,KAAV,EAAiBC,EAAjB,EAAqB;AAC7D,QAAIC,OAAJ;;AACA,YAAQD,EAAE,CAACE,MAAH,CAAU,CAAV,CAAR;AACE,WAAK,GAAL;AAAU,eAAO,GAAP;;AACV,WAAK,GAAL;AAAU,eAAOf,OAAP;;AACV,WAAK,GAAL;AAAU,eAAOC,GAAG,CAACe,KAAJ,CAAU,CAAV,EAAad,QAAb,CAAP;;AACV,WAAK,GAAL;AAAU,eAAOD,GAAG,CAACe,KAAJ,CAAUV,OAAV,CAAP;;AACV,WAAK,GAAL;AACEQ,QAAAA,OAAO,GAAGV,aAAa,CAACS,EAAE,CAACG,KAAH,CAAS,CAAT,EAAY,CAAC,CAAb,CAAD,CAAvB;AACA;;AACF;AAAS;AACP,YAAIC,CAAC,GAAG,CAACJ,EAAT;AACA,YAAII,CAAC,KAAK,CAAV,EAAa,OAAOL,KAAP;;AACb,YAAIK,CAAC,GAAGT,CAAR,EAAW;AACT,cAAIU,CAAC,GAAGzB,KAAK,CAACwB,CAAC,GAAG,EAAL,CAAb;AACA,cAAIC,CAAC,KAAK,CAAV,EAAa,OAAON,KAAP;AACb,cAAIM,CAAC,IAAIV,CAAT,EAAY,OAAOL,QAAQ,CAACe,CAAC,GAAG,CAAL,CAAR,KAAoBR,SAApB,GAAgCG,EAAE,CAACE,MAAH,CAAU,CAAV,CAAhC,GAA+CZ,QAAQ,CAACe,CAAC,GAAG,CAAL,CAAR,GAAkBL,EAAE,CAACE,MAAH,CAAU,CAAV,CAAxE;AACZ,iBAAOH,KAAP;AACD;;AACDE,QAAAA,OAAO,GAAGX,QAAQ,CAACc,CAAC,GAAG,CAAL,CAAlB;AAjBJ;;AAmBA,WAAOH,OAAO,KAAKJ,SAAZ,GAAwB,EAAxB,GAA6BI,OAApC;AACD,GAtBM,CAAP;AAuBD,CA/BD","sourcesContent":["var toObject = require('../internals/to-object');\r\n\r\nvar floor = Math.floor;\r\nvar replace = ''.replace;\r\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\r\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\r\n\r\n// https://tc39.es/ecma262/#sec-getsubstitution\r\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\r\n  var tailPos = position + matched.length;\r\n  var m = captures.length;\r\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\r\n  if (namedCaptures !== undefined) {\r\n    namedCaptures = toObject(namedCaptures);\r\n    symbols = SUBSTITUTION_SYMBOLS;\r\n  }\r\n  return replace.call(replacement, symbols, function (match, ch) {\r\n    var capture;\r\n    switch (ch.charAt(0)) {\r\n      case '$': return '$';\r\n      case '&': return matched;\r\n      case '`': return str.slice(0, position);\r\n      case \"'\": return str.slice(tailPos);\r\n      case '<':\r\n        capture = namedCaptures[ch.slice(1, -1)];\r\n        break;\r\n      default: // \\d\\d?\r\n        var n = +ch;\r\n        if (n === 0) return match;\r\n        if (n > m) {\r\n          var f = floor(n / 10);\r\n          if (f === 0) return match;\r\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\r\n          return match;\r\n        }\r\n        capture = captures[n - 1];\r\n    }\r\n    return capture === undefined ? '' : capture;\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"script"}