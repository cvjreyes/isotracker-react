{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\changePassword\\\\changePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router\";\nimport './changePassword.css'; //Página de home con el menú para ir a las aplicaciones de isotracker\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\n\nconst ChangePasswordPage = () => {\n  _s();\n\n  document.title = process.env.REACT_APP_APP_NAMEPROJ;\n  document.body.style.zoom = 1;\n  const [password, setPassword] = useState();\n  const [newPassword, setNewPassword] = useState();\n  const [passwordConf, setPasswordConf] = useState();\n  const [error, setError] = useState(false);\n  const history = useHistory();\n  const body = {\n    email: email,\n    password: password\n  };\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home__background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangePasswordPage, \"ODhumRBFAwcgTBLXQP46osEzmEw=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChangePasswordPage;\nexport default ChangePasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePasswordPage\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/changePassword/changePassword.js"],"names":["React","useState","useHistory","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","ChangePasswordPage","document","title","process","env","REACT_APP_APP_NAMEPROJ","body","style","zoom","password","setPassword","newPassword","setNewPassword","passwordConf","setPasswordConf","error","setError","history","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAO,sBAAP,C,CACA;;;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAIE,UAAU,GAAG,iBAAjB;AAEA,IAAIC,aAAa,GAAG,IAAIF,aAAJ,CAAkBG,YAAlB,EAAgC;AAChDC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,GAAd,EAAmB;AACrBA,IAAAA,GAAG,GAAGP,QAAQ,CAACQ,MAAT,CAAgBD,GAAhB,EAAqBJ,UAArB,CAAN;AAEA,WAAOI,GAAG,CAACE,QAAJ,EAAP;AACH,GAL+C;AAMhDC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC5BA,IAAAA,IAAI,GAAGX,QAAQ,CAACY,GAAT,CAAaF,OAAb,CAAqBC,IAArB,EAA2BR,UAA3B,CAAP;AAEAQ,IAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,EAAP;AAEA,WAAOE,IAAP;AACH,GAZ+C;AAahDE,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBF,IAAjB,EAAuB;AAC5BA,IAAAA,IAAI,GAAGX,QAAQ,CAACY,GAAT,CAAaC,OAAb,CAAqBF,IAArB,EAA2BR,UAA3B,CAAP;AAEAQ,IAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,CAAcT,QAAQ,CAACc,GAAT,CAAaC,IAA3B,CAAP;AAEA,WAAOJ,IAAP;AACH;AAnB+C,CAAhC,CAApB;;AAsBA,MAAMK,kBAAkB,GAAG,MAAK;AAAA;;AAC5BC,EAAAA,QAAQ,CAACC,KAAT,GAAgBC,OAAO,CAACC,GAAR,CAAYC,sBAA5B;AACAJ,EAAAA,QAAQ,CAACK,IAAT,CAAcC,KAAd,CAAoBC,IAApB,GAA2B,CAA3B;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,EAAxC;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,EAA9C;AACA,QAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,EAAhD;AACA,QAAM,CAACiC,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMmC,OAAO,GAAGlC,UAAU,EAA1B;AAEA,QAAMuB,IAAI,GAAG;AACTY,IAAAA,KAAK,EAAEA,KADE;AAETT,IAAAA,QAAQ,EAAEA;AAFD,GAAb;AAMA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAxBD;;GAAMT,kB;UAQcjB,U;;;KARdiB,kB;AA0BN,eAAeA,kBAAf","sourcesContent":["import React, { useState} from 'react'\r\nimport {useHistory} from \"react-router\";\r\nimport './changePassword.css';\r\n//Página de home con el menú para ir a las aplicaciones de isotracker\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst SecureStorage = require(\"secure-web-storage\");\r\nvar SECRET_KEY = 'sanud2ha8shd72h';\r\n \r\nvar secureStorage = new SecureStorage(localStorage, {\r\n    hash: function hash(key) {\r\n        key = CryptoJS.SHA256(key, SECRET_KEY);\r\n \r\n        return key.toString();\r\n    },\r\n    encrypt: function encrypt(data) {\r\n        data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n \r\n        data = data.toString();\r\n \r\n        return data;\r\n    },\r\n    decrypt: function decrypt(data) {\r\n        data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n \r\n        data = data.toString(CryptoJS.enc.Utf8);\r\n \r\n        return data;\r\n    }\r\n});\r\n\r\nconst ChangePasswordPage = () =>{\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    document.body.style.zoom = 1\r\n\r\n    const [password, setPassword] = useState();\r\n    const [newPassword, setNewPassword] = useState();\r\n    const [passwordConf, setPasswordConf] = useState();\r\n    const [error, setError] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const body = {\r\n        email: email,\r\n        password: password\r\n    }\r\n\r\n\r\n    return(\r\n        <body>\r\n            <div className=\"home__background\">\r\n                \r\n\r\n            </div>          \r\n        </body>\r\n    );\r\n};\r\n\r\nexport default ChangePasswordPage;"]},"metadata":{},"sourceType":"module"}