{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\updateDrawingPopUp\\\\updateDrawingPopUp.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-awesome-modal';\nimport '../uploadReportPopUp/uploadReportPopUp.css';\nimport readXlsxFile from 'read-excel-file';\nimport { readString } from 'react-papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UpdateDrawingPopUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      file: null,\n      error: false\n    };\n    this.id = props.id;\n  }\n\n  openModal() {\n    this.setState({\n      visible: true,\n      error: false,\n      file: null\n    });\n  }\n\n  closeModal() {\n    document.getElementById(\"fileToUpload\").value = null;\n    this.setState({\n      visible: false,\n      file: null\n    });\n  }\n\n  async handleChange(event) {\n    await this.setState({\n      file: event.target.files[0]\n    });\n  }\n\n  async updateDrawing() {\n    const file = new FormData();\n    file.append('file', this.state.file);\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/updateDrawing\", {\n      method: 'POST',\n      body: file\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log(\"ya existe\");\n      } else {\n        const body = {\n          description_plan_code: this.props.description_plan_code,\n          filename: this.state.file.name\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/updateDrawingDB\", options).then(response => response.json()).then(json => {});\n        this.setState({\n          file: null,\n          error: false\n        });\n      }\n    });\n    this.closeModal();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        float: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"a\",\n        class: \"update__btn btn-sm btn-info\",\n        onClick: () => this.openModal()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          visible: this.state.visible,\n          width: \"650\",\n          height: \"180\",\n          effect: \"fadeInUp\",\n          onClickAway: () => this.closeModal(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popUp__container\",\n            children: /*#__PURE__*/_jsxDEV(\"center\", {\n              className: \"popUp__title\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Update the drawing for \", this.props.description_plan_code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".pdf,.png\",\n              name: \"fileToUpload\",\n              id: \"fileToUpload\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginLeft: \"10px\"\n              },\n              className: \"btn btn-sm btn-success\",\n              onClick: () => this.updateDrawing(),\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/updateDrawingPopUp/updateDrawingPopUp.js"],"names":["React","Component","Modal","readXlsxFile","readString","UpdateDrawingPopUp","constructor","props","state","visible","file","error","id","openModal","setState","closeModal","document","getElementById","value","handleChange","event","target","files","updateDrawing","FormData","append","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","method","body","then","response","status","console","log","description_plan_code","filename","name","options","headers","JSON","stringify","json","render","float","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport '../uploadReportPopUp/uploadReportPopUp.css'\r\nimport readXlsxFile from 'read-excel-file'\r\nimport { readString } from 'react-papaparse'\r\n\r\nexport default class UpdateDrawingPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false,\r\n            file: null,\r\n            error: false\r\n        }\r\n        this.id = props.id;\r\n        \r\n    }\r\n   \r\n\r\n    openModal() {      \r\n        this.setState({\r\n            visible : true,\r\n            error: false,\r\n            file: null\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        document.getElementById(\"fileToUpload\").value = null\r\n        this.setState({\r\n            visible : false,\r\n            file: null,\r\n        });\r\n    }\r\n\r\n    async handleChange(event){\r\n        await this.setState({file: event.target.files[0]})\r\n    }\r\n\r\n    async updateDrawing(){\r\n        const file  = new FormData(); \r\n        file.append('file', this.state.file);\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/updateDrawing\", {\r\n            method: 'POST',\r\n            body: file,\r\n            })\r\n            .then(response =>{\r\n                if (response.status !== 200){\r\n                    console.log(\"ya existe\")\r\n                }else{\r\n                    const body = {\r\n                        description_plan_code: this.props.description_plan_code,\r\n                        filename: this.state.file.name\r\n                      }\r\n                  \r\n                      const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/updateDrawingDB\", options)\r\n                    .then(response => response.json())\r\n                    .then(json=>{\r\n\r\n                    }) \r\n                    this.setState({\r\n                        file: null,\r\n                        error: false\r\n                    })\r\n                }\r\n \r\n            })\r\n\r\n        this.closeModal()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section style={{float:\"left\"}}>\r\n                <input type=\"button\"  value=\"a\" class=\"update__btn btn-sm btn-info\"  onClick={() => this.openModal()} />\r\n                <div>\r\n                    <Modal visible={this.state.visible} width=\"650\" height=\"180\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                        <div className=\"popUp__container\" >\r\n                            <center className=\"popUp__title\"><h2>Update the drawing for {this.props.description_plan_code}</h2></center>\r\n                                \r\n                        </div>\r\n                        <div className=\"select__container\">\r\n\r\n                            <input type=\"file\" accept=\".pdf,.png\" name=\"fileToUpload\" id=\"fileToUpload\" onChange={this.handleChange}/>\r\n                            <button style={{marginLeft:\"10px\"}} className=\"btn btn-sm btn-success\" onClick={()=>this.updateDrawing()}>Submit</button>\r\n                            \r\n                        </div> \r\n\r\n                        \r\n                    </Modal>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}