{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\myTrayTable\\\\myTrayTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport './myTrayTable.css';\nimport UploadPopUp from '../uploadPopUp/uploadPopUp';\nimport { useState } from 'react';\n/*\r\nconst data = [\r\n    { key:2, id: 1, date: '01/02/2021', from: 'Jon', to: 'Adrian', user: 'tec_Jon', actions:<UploadPopUp id={1} /> },\r\n    { key:1, id: 3, date: '02/02/2021', from: 'Jon', to: 'Laura', user: 'tec_Jon', actions:<UploadPopUp id={3}/> },\r\n    { key:3, id: 23, date: '07/02/2021', from: 'Rick', to: 'Adrian', user: 'tec_Rick', actions:<UploadPopUp id={23}/> },\r\n    { key:4, id: 12, date: '23/01/2021', from: 'Maria', to: 'Laura', user: 'tec_Laura', actions:<UploadPopUp id={12}/> },\r\n    { key:5, id: 1, date: '01/02/2021', from: 'Jon', to: 'Adrian', user: 'tec_Jon', actions:<UploadPopUp id={1}/> },\r\n    { key:6, id: 3, date: '02/02/2021', from: 'Jon', to: 'Laura', user: 'tec_Jon', actions:<UploadPopUp id={3}/> },\r\n    { key:7, id: 23, date: '07/02/2021', from: 'Rick', to: 'Adrian', user: 'tec_Rick', actions:<UploadPopUp id={23}/> },\r\n    { key:8, id: 12, date: '23/01/2021', from: 'Maria', to: 'Laura', user: 'tec_Laura', actions:<UploadPopUp id={12}/> },\r\n    { key:9, id: 3, date: '01/02/2021', from: 'Carl', to: 'Bob', user: 'sup_Bob', actions:<UploadPopUp id={1}/> },\r\n    { key:10, id: 1, date: '01/02/2021', from: 'Jon', to: 'Adrian', user: 'tec_Jon', actions:<UploadPopUp id={3}/>},\r\n    { key:11, id: 3, date: '02/02/2021', from: 'Jon', to: 'Laura', user: 'tec_Jon', actions:<UploadPopUp id={12}/>},\r\n    { key:12, id: 23, date: '07/02/2021', from: 'Rick', to: 'Adrian', user: 'tec_Rick', actions:<UploadPopUp id={23}/> },\r\n    { key:13, id: 12, date: '23/01/2021', from: 'Maria', to: 'Laura', user: 'tec_Laura', actions:<UploadPopUp id={12}/> },\r\n    { key:14, id: 3, date: '01/02/2021', from: 'Carl', to: 'Bob', user: 'sup_Bob', actions:<UploadPopUp id={3}/> },\r\n    { key:15, id: 41, date: '05/02/2021', from: 'Michael', to: 'Carlos', user: 'tec_Michael', actions:<UploadPopUp id={41}/> }\r\n];\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: record => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name\n  })\n};\n\nclass MyTrayTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }, this),\n      onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text ? text.toString() : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const body = {\n      currentRole: this.props.currentRole.match(/[A-Z]+[^A-Z]*|[^A-Z]+/g)[0]\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://localhost:5000/api/myTrayFiles/myFiles\", options).then(response => response.json()).then(json => {\n      var rows = [];\n\n      for (let i = 0; i < json.files.length; i++) {\n        var row = {\n          key: i,\n          id: json.files[i],\n          date: '01/02/2021',\n          from: 'Jon',\n          to: 'Adrian',\n          user: 'tec_Jon',\n          actions: /*#__PURE__*/_jsxDEV(UploadPopUp, {\n            id: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 129\n          }, this)\n        }.push(row);\n      }\n\n      this.setState({\n        data: rows\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(this.state.data);\n  }\n\n  render() {\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"ISO ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'id',\n      key: 'id',\n      width: '20%',\n      ...this.getColumnSearchProps('id'),\n      sorter: {\n        compare: (a, b) => a.id - b.id\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'date',\n      key: 'date',\n      width: '20%',\n      ...this.getColumnSearchProps('date'),\n      sorter: {\n        compare: (a, b) => moment(a.date, 'DD/MM/YYYY') - moment(b.date, 'DD/MM/YYYY')\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"From\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'from',\n      key: 'from',\n      ...this.getColumnSearchProps('from'),\n      sorter: {\n        compare: (a, b) => {\n          return a.from.localeCompare(b.from);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"To\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'to',\n      key: 'to',\n      ...this.getColumnSearchProps('to'),\n      sorter: {\n        compare: (a, b) => {\n          return a.to.localeCompare(b.to);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'user',\n      key: 'user',\n      ...this.getColumnSearchProps('user'),\n      sorter: {\n        compare: (a, b) => {\n          return a.user.localeCompare(b.user);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'actions',\n      key: 'actions',\n      ...this.getColumnSearchProps('actions'),\n      sorter: {\n        compare: (a, b) => a.actions - b.actions\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.data, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          rowSelection: {\n            type: 'checkbox',\n            ...rowSelection\n          },\n          columns: columns,\n          dataSource: this.state.data,\n          pagination: {\n            pageSize: this.props.pagination\n          },\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            bottom: 25,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Total elements: \", this.state.data.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyTrayTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/myTrayTable/myTrayTable.js"],"names":["React","Table","Input","Button","Space","Highlighter","SearchOutlined","moment","UploadPopUp","useState","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","name","MyTrayTable","Component","constructor","props","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","searchText","searchedColumn","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","backgroundColor","data","componentDidMount","body","currentRole","match","options","method","headers","JSON","stringify","fetch","then","response","json","rows","i","files","length","row","key","id","date","from","to","user","actions","push","catch","error","columns","title","sorter","compare","a","b","localeCompare","type","pageSize","pagination","position","bottom","left"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport './myTrayTable.css'\r\nimport UploadPopUp from '../uploadPopUp/uploadPopUp';\r\nimport { useState } from 'react';\r\n\r\n/*\r\nconst data = [\r\n    { key:2, id: 1, date: '01/02/2021', from: 'Jon', to: 'Adrian', user: 'tec_Jon', actions:<UploadPopUp id={1} /> },\r\n    { key:1, id: 3, date: '02/02/2021', from: 'Jon', to: 'Laura', user: 'tec_Jon', actions:<UploadPopUp id={3}/> },\r\n    { key:3, id: 23, date: '07/02/2021', from: 'Rick', to: 'Adrian', user: 'tec_Rick', actions:<UploadPopUp id={23}/> },\r\n    { key:4, id: 12, date: '23/01/2021', from: 'Maria', to: 'Laura', user: 'tec_Laura', actions:<UploadPopUp id={12}/> },\r\n    { key:5, id: 1, date: '01/02/2021', from: 'Jon', to: 'Adrian', user: 'tec_Jon', actions:<UploadPopUp id={1}/> },\r\n    { key:6, id: 3, date: '02/02/2021', from: 'Jon', to: 'Laura', user: 'tec_Jon', actions:<UploadPopUp id={3}/> },\r\n    { key:7, id: 23, date: '07/02/2021', from: 'Rick', to: 'Adrian', user: 'tec_Rick', actions:<UploadPopUp id={23}/> },\r\n    { key:8, id: 12, date: '23/01/2021', from: 'Maria', to: 'Laura', user: 'tec_Laura', actions:<UploadPopUp id={12}/> },\r\n    { key:9, id: 3, date: '01/02/2021', from: 'Carl', to: 'Bob', user: 'sup_Bob', actions:<UploadPopUp id={1}/> },\r\n    { key:10, id: 1, date: '01/02/2021', from: 'Jon', to: 'Adrian', user: 'tec_Jon', actions:<UploadPopUp id={3}/>},\r\n    { key:11, id: 3, date: '02/02/2021', from: 'Jon', to: 'Laura', user: 'tec_Jon', actions:<UploadPopUp id={12}/>},\r\n    { key:12, id: 23, date: '07/02/2021', from: 'Rick', to: 'Adrian', user: 'tec_Rick', actions:<UploadPopUp id={23}/> },\r\n    { key:13, id: 12, date: '23/01/2021', from: 'Maria', to: 'Laura', user: 'tec_Laura', actions:<UploadPopUp id={12}/> },\r\n    { key:14, id: 3, date: '01/02/2021', from: 'Carl', to: 'Bob', user: 'sup_Bob', actions:<UploadPopUp id={3}/> },\r\n    { key:15, id: 41, date: '05/02/2021', from: 'Michael', to: 'Carlos', user: 'tec_Michael', actions:<UploadPopUp id={41}/> }\r\n];\r\n*/\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\nclass MyTrayTable extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searchText: '',\r\n      searchedColumn: '',\r\n      data: []\r\n    };\r\n  }\r\n  \r\n\r\n  \r\n  \r\n  componentDidMount(){\r\n    const body ={\r\n      currentRole : this.props.currentRole.match(/[A-Z]+[^A-Z]*|[^A-Z]+/g)[0]\r\n    }\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n  }\r\n    fetch(\"http://localhost:5000/api/myTrayFiles/myFiles\", options)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n                var rows = []\r\n                for(let i = 0; i < json.files.length; i++){\r\n                  var row = {key:i, id: json.files[i] , date: '01/02/2021', from: 'Jon', to: 'Adrian', user: 'tec_Jon', actions:<UploadPopUp id={i} /> }\r\n                  .push(row)\r\n                }\r\n                this.setState({data : rows});\r\n\r\n            }\r\n        )\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n        console.log(this.state.data)\r\n  }\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">ISO ID</center>,\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('id'),\r\n        sorter:{\r\n          compare: (a, b) => a.id - b.id,\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Date</div>,\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('date'),\r\n        sorter: {\r\n          compare: (a, b) => moment(a.date, 'DD/MM/YYYY') - moment(b.date, 'DD/MM/YYYY'),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">From</div>,\r\n        dataIndex: 'from',\r\n        key: 'from',\r\n        ...this.getColumnSearchProps('from'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.from.localeCompare(b.from)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">To</div>,\r\n        dataIndex: 'to',\r\n        key: 'to',\r\n        ...this.getColumnSearchProps('to'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.to.localeCompare(b.to)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">User</div>,\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        ...this.getColumnSearchProps('user'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.user.localeCompare(b.user)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Actions</div>,\r\n        dataIndex: 'actions',\r\n        key: 'actions',\r\n        ...this.getColumnSearchProps('actions'),\r\n        sorter: {\r\n          compare: (a, b) => a.actions - b.actions,\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        {this.state.data}\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} columns={columns} dataSource={this.state.data} pagination={{ pageSize: this.props.pagination  }} size=\"small\"/>\r\n          <div style={{position: \"absolute\", bottom:25, left:0}}>\r\n            <b>Total elements: {this.state.data.length}</b>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyTrayTable;"]},"metadata":{},"sourceType":"module"}