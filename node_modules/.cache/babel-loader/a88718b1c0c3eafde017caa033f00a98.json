{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport { MapCollection } from \"./mapCollection.mjs\";\nimport { arrayMap } from \"../../helpers/array.mjs\";\nimport { isDefined } from \"../../helpers/mixed.mjs\";\n/**\r\n * Collection of maps. This collection aggregate maps with the same type of values. Values from the registered maps\r\n * can be used to calculate a single result for particular index.\r\n */\n\nexport var AggregatedCollection = /*#__PURE__*/function (_MapCollection) {\n  _inherits(AggregatedCollection, _MapCollection);\n\n  var _super = _createSuper(AggregatedCollection);\n\n  function AggregatedCollection(aggregationFunction, fallbackValue) {\n    var _this;\n\n    _classCallCheck(this, AggregatedCollection);\n\n    _this = _super.call(this);\n    /**\r\n     * List of merged values. Value for each index is calculated using values inside registered maps.\r\n     *\r\n     * @type {Array}\r\n     */\n\n    _this.mergedValuesCache = [];\n    /**\r\n     * Function which do aggregation on the values for particular index.\r\n     */\n\n    _this.aggregationFunction = aggregationFunction;\n    /**\r\n     * Fallback value when there is no calculated value for particular index.\r\n     */\n\n    _this.fallbackValue = fallbackValue;\n    return _this;\n  }\n  /**\r\n   * Get merged values for all indexes.\r\n   *\r\n   * @param {boolean} [readFromCache=true] Determine if read results from the cache.\r\n   * @returns {Array}\r\n   */\n\n\n  _createClass(AggregatedCollection, [{\n    key: \"getMergedValues\",\n    value: function getMergedValues() {\n      var readFromCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (readFromCache === true) {\n        return this.mergedValuesCache;\n      }\n\n      if (this.getLength() === 0) {\n        return [];\n      } // Below variable stores values for every particular map. Example describing situation when we have 2 registered maps,\n      // with length equal to 5.\n      //\n      // +---------+---------------------------------------------+\n      // |         |                  indexes                    |\n      // +---------+---------------------------------------------+\n      // |   maps  |     0    |   1   |    2  |   3   |    4     |\n      // +---------+----------+-------+-------+-------+----------+\n      // |    0    | [[ value,  value,  value,  value,  value ], |\n      // |    1    | [  value,  value,  value,  value,  value ]] |\n      // +---------+----------+-------+-------+-------+----------+\n\n\n      var mapsValuesMatrix = arrayMap(this.get(), function (map) {\n        return map.getValues();\n      }); // Below variable stores values for every particular index. Example describing situation when we have 2 registered maps,\n      // with length equal to 5.\n      //\n      // +---------+---------------------+\n      // |         |         maps        |\n      // +---------+---------------------+\n      // | indexes |     0    |    1     |\n      // +---------+----------+----------+\n      // |    0    | [[ value,  value ], |\n      // |    1    | [  value,  value ], |\n      // |    2    | [  value,  value ], |\n      // |    3    | [  value,  value ], |\n      // |    4    | [  value,  value ]] |\n      // +---------+----------+----------+\n\n      var indexesValuesMatrix = [];\n      var mapsLength = isDefined(mapsValuesMatrix[0]) && mapsValuesMatrix[0].length || 0;\n\n      for (var index = 0; index < mapsLength; index += 1) {\n        var valuesForIndex = [];\n\n        for (var mapIndex = 0; mapIndex < this.getLength(); mapIndex += 1) {\n          valuesForIndex.push(mapsValuesMatrix[mapIndex][index]);\n        }\n\n        indexesValuesMatrix.push(valuesForIndex);\n      }\n\n      return arrayMap(indexesValuesMatrix, this.aggregationFunction);\n    }\n    /**\r\n     * Get merged value for particular index.\r\n     *\r\n     * @param {number} index Index for which we calculate single result.\r\n     * @param {boolean} [readFromCache=true] Determine if read results from the cache.\r\n     * @returns {*}\r\n     */\n\n  }, {\n    key: \"getMergedValueAtIndex\",\n    value: function getMergedValueAtIndex(index, readFromCache) {\n      var valueAtIndex = this.getMergedValues(readFromCache)[index];\n      return isDefined(valueAtIndex) ? valueAtIndex : this.fallbackValue;\n    }\n    /**\r\n     * Rebuild cache for the collection.\r\n     */\n\n  }, {\n    key: \"updateCache\",\n    value: function updateCache() {\n      this.mergedValuesCache = this.getMergedValues(false);\n    }\n  }]);\n\n  return AggregatedCollection;\n}(MapCollection);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/translations/mapCollections/aggregatedCollection.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","MapCollection","arrayMap","isDefined","AggregatedCollection","_MapCollection","_super","aggregationFunction","fallbackValue","_this","mergedValuesCache","getMergedValues","readFromCache","undefined","getLength","mapsValuesMatrix","get","map","getValues","indexesValuesMatrix","mapsLength","index","valuesForIndex","mapIndex","push","getMergedValueAtIndex","valueAtIndex","updateCache"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\r\n\r\nimport \"core-js/modules/es.object.set-prototype-of.js\";\r\nimport \"core-js/modules/es.object.get-prototype-of.js\";\r\nimport \"core-js/modules/es.reflect.construct.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.symbol.iterator.js\";\r\nimport \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\r\n\r\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\r\n\r\nimport { MapCollection } from \"./mapCollection.mjs\";\r\nimport { arrayMap } from \"../../helpers/array.mjs\";\r\nimport { isDefined } from \"../../helpers/mixed.mjs\";\r\n/**\r\n * Collection of maps. This collection aggregate maps with the same type of values. Values from the registered maps\r\n * can be used to calculate a single result for particular index.\r\n */\r\n\r\nexport var AggregatedCollection = /*#__PURE__*/function (_MapCollection) {\r\n  _inherits(AggregatedCollection, _MapCollection);\r\n\r\n  var _super = _createSuper(AggregatedCollection);\r\n\r\n  function AggregatedCollection(aggregationFunction, fallbackValue) {\r\n    var _this;\r\n\r\n    _classCallCheck(this, AggregatedCollection);\r\n\r\n    _this = _super.call(this);\r\n    /**\r\n     * List of merged values. Value for each index is calculated using values inside registered maps.\r\n     *\r\n     * @type {Array}\r\n     */\r\n\r\n    _this.mergedValuesCache = [];\r\n    /**\r\n     * Function which do aggregation on the values for particular index.\r\n     */\r\n\r\n    _this.aggregationFunction = aggregationFunction;\r\n    /**\r\n     * Fallback value when there is no calculated value for particular index.\r\n     */\r\n\r\n    _this.fallbackValue = fallbackValue;\r\n    return _this;\r\n  }\r\n  /**\r\n   * Get merged values for all indexes.\r\n   *\r\n   * @param {boolean} [readFromCache=true] Determine if read results from the cache.\r\n   * @returns {Array}\r\n   */\r\n\r\n\r\n  _createClass(AggregatedCollection, [{\r\n    key: \"getMergedValues\",\r\n    value: function getMergedValues() {\r\n      var readFromCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\r\n\r\n      if (readFromCache === true) {\r\n        return this.mergedValuesCache;\r\n      }\r\n\r\n      if (this.getLength() === 0) {\r\n        return [];\r\n      } // Below variable stores values for every particular map. Example describing situation when we have 2 registered maps,\r\n      // with length equal to 5.\r\n      //\r\n      // +---------+---------------------------------------------+\r\n      // |         |                  indexes                    |\r\n      // +---------+---------------------------------------------+\r\n      // |   maps  |     0    |   1   |    2  |   3   |    4     |\r\n      // +---------+----------+-------+-------+-------+----------+\r\n      // |    0    | [[ value,  value,  value,  value,  value ], |\r\n      // |    1    | [  value,  value,  value,  value,  value ]] |\r\n      // +---------+----------+-------+-------+-------+----------+\r\n\r\n\r\n      var mapsValuesMatrix = arrayMap(this.get(), function (map) {\r\n        return map.getValues();\r\n      }); // Below variable stores values for every particular index. Example describing situation when we have 2 registered maps,\r\n      // with length equal to 5.\r\n      //\r\n      // +---------+---------------------+\r\n      // |         |         maps        |\r\n      // +---------+---------------------+\r\n      // | indexes |     0    |    1     |\r\n      // +---------+----------+----------+\r\n      // |    0    | [[ value,  value ], |\r\n      // |    1    | [  value,  value ], |\r\n      // |    2    | [  value,  value ], |\r\n      // |    3    | [  value,  value ], |\r\n      // |    4    | [  value,  value ]] |\r\n      // +---------+----------+----------+\r\n\r\n      var indexesValuesMatrix = [];\r\n      var mapsLength = isDefined(mapsValuesMatrix[0]) && mapsValuesMatrix[0].length || 0;\r\n\r\n      for (var index = 0; index < mapsLength; index += 1) {\r\n        var valuesForIndex = [];\r\n\r\n        for (var mapIndex = 0; mapIndex < this.getLength(); mapIndex += 1) {\r\n          valuesForIndex.push(mapsValuesMatrix[mapIndex][index]);\r\n        }\r\n\r\n        indexesValuesMatrix.push(valuesForIndex);\r\n      }\r\n\r\n      return arrayMap(indexesValuesMatrix, this.aggregationFunction);\r\n    }\r\n    /**\r\n     * Get merged value for particular index.\r\n     *\r\n     * @param {number} index Index for which we calculate single result.\r\n     * @param {boolean} [readFromCache=true] Determine if read results from the cache.\r\n     * @returns {*}\r\n     */\r\n\r\n  }, {\r\n    key: \"getMergedValueAtIndex\",\r\n    value: function getMergedValueAtIndex(index, readFromCache) {\r\n      var valueAtIndex = this.getMergedValues(readFromCache)[index];\r\n      return isDefined(valueAtIndex) ? valueAtIndex : this.fallbackValue;\r\n    }\r\n    /**\r\n     * Rebuild cache for the collection.\r\n     */\r\n\r\n  }, {\r\n    key: \"updateCache\",\r\n    value: function updateCache() {\r\n      this.mergedValuesCache = this.getMergedValues(false);\r\n    }\r\n  }]);\r\n\r\n  return AggregatedCollection;\r\n}(MapCollection);"]},"metadata":{},"sourceType":"module"}