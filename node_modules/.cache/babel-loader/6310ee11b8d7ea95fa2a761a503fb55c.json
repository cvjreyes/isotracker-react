{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\qtrackerViewDataTable\\\\qtrackerViewDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\nimport QtrackerNWCSpecPopUp from '../qtrackerNWCSpecPopUp/qtrackerNWCSpecPopUp';\nimport QtrackerNVNSpecPopUp from '../qtrackerNVNSpecPopUp/qtrackerNVNSpecPopUp';\nimport QtrackerNRISpecPopUp from '../qtrackerNRISpecPopUp/qtrackerNRISpecPopUp';\nimport QtrackerNRBSpecPopUp from '../qtrackerNRBSpecPopUp/qtrackerNRBSpecPopUp';\nimport QtrackerNRIDSSpecPopUp from '../qtrackerNRIDSSpecPopUp/qtrackerNRIDSSpecPopUp';\nimport QtrackerRPSpecPopUp from '../qtrackerRPSpecPopUp/qtrackerRPSpecPopUp';\nimport './qtrackerViewDataTable.css';\nimport AttachIcon from \"../../assets/images/attach.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\n\nclass QTrackerViewDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      displayData: [],\n      filterData: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      observations: {},\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: [],\n      filters: []\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      render: text => text\n    });\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id.props.children);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }); //this.setState({ selectedRows: selectedRows });\n\n      this.props.onChange(ids);\n    };\n  }\n\n  async statusChange(incidence_number, status, type) {\n    let status_id;\n\n    if (status === \"pending\") {\n      status_id = 0;\n    } else if (status === \"progress\") {\n      status_id = 1;\n    } else if (status === \"ready\") {\n      status_id = 2;\n    } else if (status === \"rejected\") {\n      status_id = 3;\n    }\n\n    await this.props.updateStatus([incidence_number, status_id, type]);\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNWC\", options).then(response => response.json()).then(async json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        if (json.rows[i].attach === 1) {\n          if (json.rows[i].accept_reject_date != null) {\n            row = {\n              incidence_number: json.rows[i].incidence_number,\n              user: json.rows[i].user,\n              description: json.rows[i].description,\n              created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n              specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(QtrackerNWCSpecPopUp, {\n                  incidence_number: json.rows[i].incidence_number,\n                  spref: json.rows[i].spref,\n                  description: json.rows[i].description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 285\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: AttachIcon,\n                  alt: \"att\",\n                  className: \"attach__icon\",\n                  style: {\n                    marginRight: \"0px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 423\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 280\n              }, this),\n              ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19).toString().substring(0, 10)\n            };\n          } else {\n            row = {\n              incidence_number: json.rows[i].incidence_number,\n              user: json.rows[i].user,\n              description: json.rows[i].description,\n              created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n              specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(QtrackerNWCSpecPopUp, {\n                  incidence_number: json.rows[i].incidence_number,\n                  spref: json.rows[i].spref,\n                  description: json.rows[i].description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 285\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: AttachIcon,\n                  alt: \"att\",\n                  className: \"attach__icon\",\n                  style: {\n                    marginRight: \"0px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 423\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 280\n              }, this),\n              ar_date: \"\"\n            };\n          }\n        } else {\n          if (json.rows[i].accept_reject_date != null) {\n            row = {\n              incidence_number: json.rows[i].incidence_number,\n              user: json.rows[i].user,\n              description: json.rows[i].description,\n              created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n              specifications: /*#__PURE__*/_jsxDEV(QtrackerNWCSpecPopUp, {\n                incidence_number: json.rows[i].incidence_number,\n                spref: json.rows[i].spref,\n                description: json.rows[i].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 280\n              }, this),\n              ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n            };\n          } else {\n            row = {\n              incidence_number: json.rows[i].incidence_number,\n              user: json.rows[i].user,\n              description: json.rows[i].description,\n              created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n              specifications: /*#__PURE__*/_jsxDEV(QtrackerNWCSpecPopUp, {\n                incidence_number: json.rows[i].incidence_number,\n                spref: json.rows[i].spref,\n                description: json.rows[i].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 280\n              }, this),\n              ar_date: \"\"\n            };\n          }\n        }\n\n        if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n          if (json.rows[i].status === 0) {\n            row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"status\",\n              id: \"status\",\n              onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\"),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"pending\",\n                selected: true,\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"progress\",\n                children: \"In progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ready\",\n                children: \"Ready\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"rejected\",\n                children: \"Rejected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 36\n            }, this);\n            row.color = \"#www\";\n          } else if (json.rows[i].status === 1) {\n            row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"status\",\n              id: \"status\",\n              onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\"),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"progress\",\n                selected: true,\n                style: {\n                  backgroundColor: \"#yyy\"\n                },\n                children: \"In progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ready\",\n                children: \"Ready\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"rejected\",\n                children: \"Rejected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 34\n            }, this);\n            row.color = \"#yyy\";\n          } else if (json.rows[i].status === 2) {\n            row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"status\",\n              id: \"status\",\n              onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\"),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"progress\",\n                children: \"In progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ready\",\n                selected: true,\n                children: \"Ready\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"rejected\",\n                children: \"Rejected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 34\n            }, this);\n            row.color = \"#ggg\";\n          } else {\n            row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"status\",\n              id: \"status\",\n              onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\"),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"progress\",\n                children: \"In progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ready\",\n                children: \"Ready\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"rejected\",\n                selected: true,\n                children: \"Rejected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 34\n            }, this);\n            row.color = \"#rrr\";\n          }\n\n          row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: \"310px\"\n            },\n            type: \"text\",\n            defaultValue: json.rows[i].observations,\n            style: {\n              width: \"310px\"\n            },\n            onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 38\n          }, this);\n        } else {\n          if (json.rows[i].status === 0) {\n            row.status = \"Pending\";\n            row.color = \"#www\";\n          } else if (json.rows[i].status === 1) {\n            row.status = \"In progress\";\n            row.color = \"#yyy\";\n          } else if (json.rows[i].status === 2) {\n            row.status = \"Ready\";\n            row.color = \"#ggg\";\n          } else {\n            row.status = \"Rejected\";\n            row.color = \"#rrr\";\n          }\n\n          row.observations = json.rows[i].observations;\n        }\n\n        rows.push(row);\n      }\n\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNVN\", options).then(response => response.json()).then(async json => {\n        var row = null;\n\n        for (let i = 0; i < json.rows.length; i++) {\n          if (json.rows[i].attach === 1) {\n            if (json.rows[i].accept_reject_date != null) {\n              row = {\n                incidence_number: json.rows[i].incidence_number,\n                user: json.rows[i].user,\n                description: json.rows[i].description,\n                created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(QtrackerNVNSpecPopUp, {\n                    name: json.rows[i].name,\n                    incidence_number: json.rows[i].incidence_number,\n                    spref: json.rows[i].spref,\n                    description: json.rows[i].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 287\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: AttachIcon,\n                    alt: \"att\",\n                    className: \"attach__icon\",\n                    style: {\n                      marginRight: \"0px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 450\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 282\n                }, this),\n                ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19).toString().substring(0, 10)\n              };\n            } else {\n              row = {\n                incidence_number: json.rows[i].incidence_number,\n                user: json.rows[i].user,\n                description: json.rows[i].description,\n                created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(QtrackerNVNSpecPopUp, {\n                    name: json.rows[i].name,\n                    incidence_number: json.rows[i].incidence_number,\n                    spref: json.rows[i].spref,\n                    description: json.rows[i].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 287\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: AttachIcon,\n                    alt: \"att\",\n                    className: \"attach__icon\",\n                    style: {\n                      marginRight: \"0px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 450\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 282\n                }, this),\n                ar_date: \"\"\n              };\n            }\n          } else {\n            if (json.rows[i].accept_reject_date != null) {\n              row = {\n                incidence_number: json.rows[i].incidence_number,\n                user: json.rows[i].user,\n                description: json.rows[i].description,\n                created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                specifications: /*#__PURE__*/_jsxDEV(QtrackerNVNSpecPopUp, {\n                  name: json.rows[i].name,\n                  incidence_number: json.rows[i].incidence_number,\n                  spref: json.rows[i].spref,\n                  description: json.rows[i].description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 282\n                }, this),\n                ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n              };\n            } else {\n              row = {\n                incidence_number: json.rows[i].incidence_number,\n                user: json.rows[i].user,\n                description: json.rows[i].description,\n                created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                specifications: /*#__PURE__*/_jsxDEV(QtrackerNVNSpecPopUp, {\n                  name: json.rows[i].name,\n                  incidence_number: json.rows[i].incidence_number,\n                  spref: json.rows[i].spref,\n                  description: json.rows[i].description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 282\n                }, this),\n                ar_date: \"\"\n              };\n            }\n          }\n\n          if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n            if (json.rows[i].status === 0) {\n              row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"status\",\n                id: \"status\",\n                onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pending\",\n                  selected: true,\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"progress\",\n                  children: \"In progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ready\",\n                  children: \"Ready\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"rejected\",\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 40\n              }, this);\n              row.color = \"#www\";\n            } else if (json.rows[i].status === 1) {\n              row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"status\",\n                id: \"status\",\n                onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"progress\",\n                  selected: true,\n                  style: {\n                    backgroundColor: \"#yyy\"\n                  },\n                  children: \"In progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ready\",\n                  children: \"Ready\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"rejected\",\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 38\n              }, this);\n              row.color = \"#yyy\";\n            } else if (json.rows[i].status === 2) {\n              row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"status\",\n                id: \"status\",\n                onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"progress\",\n                  children: \"In progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ready\",\n                  selected: true,\n                  children: \"Ready\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"rejected\",\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 38\n              }, this);\n              row.color = \"#ggg\";\n            } else {\n              row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"status\",\n                id: \"status\",\n                onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"progress\",\n                  children: \"In progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ready\",\n                  children: \"Ready\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"rejected\",\n                  selected: true,\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 38\n              }, this);\n              row.color = \"#rrr\";\n            }\n\n            row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: json.rows[i].observations,\n              style: {\n                width: \"310px\"\n              },\n              onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 42\n            }, this);\n          } else {\n            if (json.rows[i].status === 0) {\n              row.status = \"Pending\";\n              row.color = \"#www\";\n            } else if (json.rows[i].status === 1) {\n              row.status = \"In progress\";\n              row.color = \"#yyy\";\n            } else if (json.rows[i].status === 2) {\n              row.status = \"Ready\";\n              row.color = \"#ggg\";\n            } else {\n              row.status = \"Rejected\";\n              row.color = \"#rrr\";\n            }\n\n            row.observations = json.rows[i].observations;\n          }\n\n          rows.push(row);\n        }\n\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNRI\", options).then(response => response.json()).then(async json => {\n          var row = null;\n\n          for (let i = 0; i < json.rows.length; i++) {\n            if (json.rows[i].attach === 1) {\n              if (json.rows[i].accept_reject_date != null) {\n                row = {\n                  incidence_number: json.rows[i].incidence_number,\n                  user: json.rows[i].user,\n                  description: json.rows[i].description,\n                  created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                  specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(QtrackerNRISpecPopUp, {\n                      incidence_number: json.rows[i].incidence_number,\n                      pipe: json.rows[i].pipe,\n                      description: json.rows[i].description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 291\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: AttachIcon,\n                      alt: \"att\",\n                      className: \"attach__icon\",\n                      style: {\n                        marginRight: \"0px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 427\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 286\n                  }, this),\n                  ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19).toString().substring(0, 10)\n                };\n              } else {\n                row = {\n                  incidence_number: json.rows[i].incidence_number,\n                  user: json.rows[i].user,\n                  description: json.rows[i].description,\n                  created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                  specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(QtrackerNRISpecPopUp, {\n                      incidence_number: json.rows[i].incidence_number,\n                      pipe: json.rows[i].pipe,\n                      description: json.rows[i].description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 291\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: AttachIcon,\n                      alt: \"att\",\n                      className: \"attach__icon\",\n                      style: {\n                        marginRight: \"0px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 427\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 286\n                  }, this),\n                  ar_date: \"\"\n                };\n              }\n            } else {\n              if (json.rows[i].accept_reject_date != null) {\n                row = {\n                  incidence_number: json.rows[i].incidence_number,\n                  user: json.rows[i].user,\n                  description: json.rows[i].description,\n                  created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                  specifications: /*#__PURE__*/_jsxDEV(QtrackerNRISpecPopUp, {\n                    incidence_number: json.rows[i].incidence_number,\n                    spref: json.rows[i].pipe,\n                    description: json.rows[i].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 286\n                  }, this),\n                  ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n                };\n              } else {\n                row = {\n                  incidence_number: json.rows[i].incidence_number,\n                  user: json.rows[i].user,\n                  description: json.rows[i].description,\n                  created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                  specifications: /*#__PURE__*/_jsxDEV(QtrackerNRISpecPopUp, {\n                    incidence_number: json.rows[i].incidence_number,\n                    spref: json.rows[i].spref,\n                    description: json.rows[i].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 286\n                  }, this),\n                  ar_date: \"\"\n                };\n              }\n            }\n\n            if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n              if (json.rows[i].status === 0) {\n                row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"status\",\n                  id: \"status\",\n                  onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pending\",\n                    selected: true,\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"progress\",\n                    children: \"In progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ready\",\n                    children: \"Ready\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rejected\",\n                    children: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 44\n                }, this);\n                row.color = \"#www\";\n              } else if (json.rows[i].status === 1) {\n                row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"status\",\n                  id: \"status\",\n                  onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"progress\",\n                    selected: true,\n                    style: {\n                      backgroundColor: \"#yyy\"\n                    },\n                    children: \"In progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ready\",\n                    children: \"Ready\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rejected\",\n                    children: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 42\n                }, this);\n                row.color = \"#yyy\";\n              } else if (json.rows[i].status === 2) {\n                row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"status\",\n                  id: \"status\",\n                  onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"progress\",\n                    children: \"In progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ready\",\n                    selected: true,\n                    children: \"Ready\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rejected\",\n                    children: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 42\n                }, this);\n                row.color = \"#ggg\";\n              } else {\n                row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"status\",\n                  id: \"status\",\n                  onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"progress\",\n                    children: \"In progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ready\",\n                    children: \"Ready\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rejected\",\n                    selected: true,\n                    children: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 42\n                }, this);\n                row.color = \"#rrr\";\n              }\n\n              row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: json.rows[i].observations,\n                style: {\n                  width: \"310px\"\n                },\n                onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 46\n              }, this);\n            } else {\n              if (json.rows[i].status === 0) {\n                row.status = \"Pending\";\n                row.color = \"#www\";\n              } else if (json.rows[i].status === 1) {\n                row.status = \"In progress\";\n                row.color = \"#yyy\";\n              } else if (json.rows[i].status === 2) {\n                row.status = \"Ready\";\n                row.color = \"#ggg\";\n              } else {\n                row.status = \"Rejected\";\n                row.color = \"#rrr\";\n              }\n\n              row.observations = json.rows[i].observations;\n            }\n\n            rows.push(row);\n          }\n\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNRB\", options).then(response => response.json()).then(async json => {\n            var row = null;\n\n            for (let i = 0; i < json.rows.length; i++) {\n              if (json.rows[i].attach === 1) {\n                if (json.rows[i].accept_reject_date != null) {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    description: json.rows[i].description,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(QtrackerNRBSpecPopUp, {\n                        incidence_number: json.rows[i].incidence_number,\n                        spref: json.rows[i].spref,\n                        description: json.rows[i].description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 295\n                      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: AttachIcon,\n                        alt: \"att\",\n                        className: \"attach__icon\",\n                        style: {\n                          marginRight: \"0px\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 433\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 290\n                    }, this),\n                    ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19).toString().substring(0, 10)\n                  };\n                } else {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    description: json.rows[i].description,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(QtrackerNRBSpecPopUp, {\n                        incidence_number: json.rows[i].incidence_number,\n                        spref: json.rows[i].spref,\n                        description: json.rows[i].description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 295\n                      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: AttachIcon,\n                        alt: \"att\",\n                        className: \"attach__icon\",\n                        style: {\n                          marginRight: \"0px\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 433\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 290\n                    }, this),\n                    ar_date: \"\"\n                  };\n                }\n              } else {\n                if (json.rows[i].accept_reject_date != null) {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    description: json.rows[i].description,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    specifications: /*#__PURE__*/_jsxDEV(QtrackerNRBSpecPopUp, {\n                      incidence_number: json.rows[i].incidence_number,\n                      spref: json.rows[i].spref,\n                      description: json.rows[i].description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 290\n                    }, this),\n                    ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n                  };\n                } else {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    description: json.rows[i].description,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    specifications: /*#__PURE__*/_jsxDEV(QtrackerNRBSpecPopUp, {\n                      incidence_number: json.rows[i].incidence_number,\n                      spref: json.rows[i].spref,\n                      description: json.rows[i].description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 290\n                    }, this),\n                    ar_date: \"\"\n                  };\n                }\n              }\n\n              if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n                if (json.rows[i].status === 0) {\n                  row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"status\",\n                    id: \"status\",\n                    onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"pending\",\n                      selected: true,\n                      children: \"Pending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"progress\",\n                      children: \"In progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ready\",\n                      children: \"Ready\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"rejected\",\n                      children: \"Rejected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 48\n                  }, this);\n                  row.color = \"#www\";\n                } else if (json.rows[i].status === 1) {\n                  row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"status\",\n                    id: \"status\",\n                    onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"pending\",\n                      children: \"Pending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"progress\",\n                      selected: true,\n                      style: {\n                        backgroundColor: \"#yyy\"\n                      },\n                      children: \"In progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ready\",\n                      children: \"Ready\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"rejected\",\n                      children: \"Rejected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 46\n                  }, this);\n                  row.color = \"#yyy\";\n                } else if (json.rows[i].status === 2) {\n                  row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"status\",\n                    id: \"status\",\n                    onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"pending\",\n                      children: \"Pending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"progress\",\n                      children: \"In progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ready\",\n                      selected: true,\n                      children: \"Ready\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"rejected\",\n                      children: \"Rejected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 46\n                  }, this);\n                  row.color = \"#ggg\";\n                } else {\n                  row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"status\",\n                    id: \"status\",\n                    onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"pending\",\n                      children: \"Pending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"progress\",\n                      children: \"In progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ready\",\n                      children: \"Ready\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"rejected\",\n                      selected: true,\n                      children: \"Rejected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 46\n                  }, this);\n                  row.color = \"#rrr\";\n                }\n\n                row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  defaultValue: json.rows[i].observations,\n                  style: {\n                    width: \"310px\"\n                  },\n                  onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 50\n                }, this);\n              } else {\n                if (json.rows[i].status === 0) {\n                  row.status = \"Pending\";\n                  row.color = \"#www\";\n                } else if (json.rows[i].status === 1) {\n                  row.status = \"In progress\";\n                  row.color = \"#yyy\";\n                } else if (json.rows[i].status === 2) {\n                  row.status = \"Ready\";\n                  row.color = \"#ggg\";\n                } else {\n                  row.status = \"Rejected\";\n                  row.color = \"#rrr\";\n                }\n\n                row.observations = json.rows[i].observations;\n              }\n\n              rows.push(row);\n            }\n\n            await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNRIDS\", options).then(response => response.json()).then(async json => {\n              var row = null;\n\n              for (let i = 0; i < json.rows.length; i++) {\n                if (json.rows[i].accept_reject_date != null) {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    description: json.rows[i].description,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    specifications: /*#__PURE__*/_jsxDEV(QtrackerNRIDSSpecPopUp, {\n                      incidence_number: json.rows[i].incidence_number,\n                      name: json.rows[i].name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 292\n                    }, this),\n                    ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n                  };\n                } else {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    description: json.rows[i].description,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    specifications: /*#__PURE__*/_jsxDEV(QtrackerNRIDSSpecPopUp, {\n                      incidence_number: json.rows[i].incidence_number,\n                      name: json.rows[i].name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 292\n                    }, this),\n                    ar_date: \"\"\n                  };\n                }\n\n                if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n                  if (json.rows[i].status === 0) {\n                    row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"status\",\n                      id: \"status\",\n                      onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"pending\",\n                        selected: true,\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"progress\",\n                        children: \"In progress\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"ready\",\n                        children: \"Ready\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 397,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"rejected\",\n                        children: \"Rejected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 398,\n                        columnNumber: 39\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 394,\n                      columnNumber: 52\n                    }, this);\n                    row.color = \"#www\";\n                  } else if (json.rows[i].status === 1) {\n                    row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"status\",\n                      id: \"status\",\n                      onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"progress\",\n                        selected: true,\n                        style: {\n                          backgroundColor: \"#yyy\"\n                        },\n                        children: \"In progress\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"ready\",\n                        children: \"Ready\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 405,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"rejected\",\n                        children: \"Rejected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 50\n                    }, this);\n                    row.color = \"#yyy\";\n                  } else if (json.rows[i].status === 2) {\n                    row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"status\",\n                      id: \"status\",\n                      onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 411,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"progress\",\n                        children: \"In progress\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 412,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"ready\",\n                        selected: true,\n                        children: \"Ready\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 413,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"rejected\",\n                        children: \"Rejected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 414,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 50\n                    }, this);\n                    row.color = \"#ggg\";\n                  } else {\n                    row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"status\",\n                      id: \"status\",\n                      onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 419,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"progress\",\n                        children: \"In progress\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"ready\",\n                        children: \"Ready\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"rejected\",\n                        selected: true,\n                        children: \"Rejected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 422,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 50\n                    }, this);\n                    row.color = \"#rrr\";\n                  }\n\n                  row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    defaultValue: json.rows[i].observations,\n                    style: {\n                      width: \"310px\"\n                    },\n                    onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 54\n                  }, this);\n                } else {\n                  if (json.rows[i].status === 0) {\n                    row.status = \"Pending\";\n                    row.color = \"#www\";\n                  } else if (json.rows[i].status === 1) {\n                    row.status = \"In progress\";\n                    row.color = \"#yyy\";\n                  } else if (json.rows[i].status === 2) {\n                    row.status = \"Ready\";\n                    row.color = \"#ggg\";\n                  } else {\n                    row.status = \"Rejected\";\n                    row.color = \"#rrr\";\n                  }\n\n                  row.observations = json.rows[i].observations;\n                }\n\n                rows.push(row);\n              }\n\n              await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getRP\", options).then(response => response.json()).then(async json => {\n                var row = null;\n\n                for (let i = 0; i < json.rows.length; i++) {\n                  if (json.rows[i].accept_reject_date != null) {\n                    row = {\n                      incidence_number: json.rows[i].incidence_number,\n                      user: json.rows[i].user,\n                      description: json.rows[i].description,\n                      created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                      specifications: /*#__PURE__*/_jsxDEV(QtrackerRPSpecPopUp, {\n                        incidence_number: json.rows[i].incidence_number,\n                        items: json.rows[i].items_to_report,\n                        scope: json.rows[i].scope,\n                        description: json.rows[i].description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 453,\n                        columnNumber: 296\n                      }, this),\n                      ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n                    };\n                  } else {\n                    row = {\n                      incidence_number: json.rows[i].incidence_number,\n                      user: json.rows[i].user,\n                      description: json.rows[i].description,\n                      created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                      specifications: /*#__PURE__*/_jsxDEV(QtrackerRPSpecPopUp, {\n                        incidence_number: json.rows[i].incidence_number,\n                        items: json.rows[i].items_to_report,\n                        scope: json.rows[i].scope,\n                        description: json.rows[i].description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 455,\n                        columnNumber: 296\n                      }, this),\n                      ar_date: \"\"\n                    };\n                  }\n\n                  if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n                    if (json.rows[i].status === 0) {\n                      row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                        name: \"status\",\n                        id: \"status\",\n                        onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"pending\",\n                          selected: true,\n                          children: \"Pending\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 460,\n                          columnNumber: 43\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"progress\",\n                          children: \"In progress\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 461,\n                          columnNumber: 43\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"ready\",\n                          children: \"Ready\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 462,\n                          columnNumber: 43\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"rejected\",\n                          children: \"Rejected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 463,\n                          columnNumber: 43\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 459,\n                        columnNumber: 56\n                      }, this);\n                      row.color = \"#www\";\n                    } else if (json.rows[i].status === 1) {\n                      row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                        name: \"status\",\n                        id: \"status\",\n                        onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"pending\",\n                          children: \"Pending\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 468,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"progress\",\n                          selected: true,\n                          style: {\n                            backgroundColor: \"#yyy\"\n                          },\n                          children: \"In progress\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 469,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"ready\",\n                          children: \"Ready\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 470,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"rejected\",\n                          children: \"Rejected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 471,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 467,\n                        columnNumber: 54\n                      }, this);\n                      row.color = \"#yyy\";\n                    } else if (json.rows[i].status === 2) {\n                      row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                        name: \"status\",\n                        id: \"status\",\n                        onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"pending\",\n                          children: \"Pending\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 476,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"progress\",\n                          children: \"In progress\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 477,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"ready\",\n                          selected: true,\n                          children: \"Ready\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 478,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"rejected\",\n                          children: \"Rejected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 479,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 475,\n                        columnNumber: 54\n                      }, this);\n                      row.color = \"#ggg\";\n                    } else {\n                      row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                        name: \"status\",\n                        id: \"status\",\n                        onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"pending\",\n                          children: \"Pending\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 484,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"progress\",\n                          children: \"In progress\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 485,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"ready\",\n                          children: \"Ready\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 486,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"rejected\",\n                          selected: true,\n                          children: \"Rejected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 487,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 483,\n                        columnNumber: 54\n                      }, this);\n                      row.color = \"#rrr\";\n                    }\n\n                    row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      defaultValue: json.rows[i].observations,\n                      style: {\n                        width: \"310px\"\n                      },\n                      onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 58\n                    }, this);\n                  } else {\n                    if (json.rows[i].status === 0) {\n                      row.status = \"Pending\";\n                      row.color = \"#www\";\n                    } else if (json.rows[i].status === 1) {\n                      row.status = \"In progress\";\n                      row.color = \"#yyy\";\n                    } else if (json.rows[i].status === 2) {\n                      row.status = \"Ready\";\n                      row.color = \"#ggg\";\n                    } else {\n                      row.status = \"Rejected\";\n                      row.color = \"#rrr\";\n                    }\n\n                    row.observations = json.rows[i].observations;\n                  }\n\n                  rows.push(row);\n                } // Sort the array based on the second element\n\n\n                rows.sort(function (first, second) {\n                  return second.created_at.localeCompare(first.created_at);\n                });\n                const filterRow = [{\n                  incidence_number: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"filter__input\",\n                      placeholder: \"Reference\",\n                      onChange: e => this.filter(0, e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 76\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 71\n                  }, this),\n                  user: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"filter__input\",\n                      placeholder: \"User\",\n                      onChange: e => this.filter(1, e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 214\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 209\n                  }, this),\n                  created_at: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"filter__input\",\n                      placeholder: \"Date\",\n                      onChange: e => this.filter(2, e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 353\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 348\n                  }, this),\n                  status: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"filter__input\",\n                      placeholder: \"Status\",\n                      onChange: e => this.filter(3, e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 487\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 482\n                  }, this)\n                }];\n                this.setState({\n                  data: rows,\n                  displayData: rows\n                });\n                await this.setState({\n                  filters: filterRow\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNWC\", options).then(response => response.json()).then(async json => {\n        var rows = [];\n        var row = null;\n\n        for (let i = 0; i < json.rows.length; i++) {\n          if (json.rows[i].attach === 1) {\n            if (json.rows[i].accept_reject_date != null) {\n              row = {\n                incidence_number: json.rows[i].incidence_number,\n                user: json.rows[i].user,\n                description: json.rows[i].description,\n                created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(QtrackerNWCSpecPopUp, {\n                    incidence_number: json.rows[i].incidence_number,\n                    spref: json.rows[i].spref,\n                    description: json.rows[i].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 285\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: AttachIcon,\n                    alt: \"att\",\n                    className: \"attach__icon\",\n                    style: {\n                      marginRight: \"0px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 423\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 280\n                }, this),\n                ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19).toString().substring(0, 10)\n              };\n            } else {\n              row = {\n                incidence_number: json.rows[i].incidence_number,\n                user: json.rows[i].user,\n                description: json.rows[i].description,\n                created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(QtrackerNWCSpecPopUp, {\n                    incidence_number: json.rows[i].incidence_number,\n                    spref: json.rows[i].spref,\n                    description: json.rows[i].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 285\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: AttachIcon,\n                    alt: \"att\",\n                    className: \"attach__icon\",\n                    style: {\n                      marginRight: \"0px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 423\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 280\n                }, this),\n                ar_date: \"\"\n              };\n            }\n          } else {\n            if (json.rows[i].accept_reject_date != null) {\n              row = {\n                incidence_number: json.rows[i].incidence_number,\n                user: json.rows[i].user,\n                description: json.rows[i].description,\n                created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                specifications: /*#__PURE__*/_jsxDEV(QtrackerNWCSpecPopUp, {\n                  incidence_number: json.rows[i].incidence_number,\n                  spref: json.rows[i].spref,\n                  description: json.rows[i].description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 280\n                }, this),\n                ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n              };\n            } else {\n              row = {\n                incidence_number: json.rows[i].incidence_number,\n                user: json.rows[i].user,\n                description: json.rows[i].description,\n                created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                specifications: /*#__PURE__*/_jsxDEV(QtrackerNWCSpecPopUp, {\n                  incidence_number: json.rows[i].incidence_number,\n                  spref: json.rows[i].spref,\n                  description: json.rows[i].description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 280\n                }, this),\n                ar_date: \"\"\n              };\n            }\n          }\n\n          if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n            if (json.rows[i].status === 0) {\n              row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"status\",\n                id: \"status\",\n                onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pending\",\n                  selected: true,\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"progress\",\n                  children: \"In progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ready\",\n                  children: \"Ready\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"rejected\",\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 36\n              }, this);\n              row.color = \"#www\";\n            } else if (json.rows[i].status === 1) {\n              row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"status\",\n                id: \"status\",\n                onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"progress\",\n                  selected: true,\n                  style: {\n                    backgroundColor: \"#yyy\"\n                  },\n                  children: \"In progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ready\",\n                  children: \"Ready\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"rejected\",\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 34\n              }, this);\n              row.color = \"#yyy\";\n            } else if (json.rows[i].status === 2) {\n              row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"status\",\n                id: \"status\",\n                onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"progress\",\n                  children: \"In progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ready\",\n                  selected: true,\n                  children: \"Ready\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"rejected\",\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 34\n              }, this);\n              row.color = \"#ggg\";\n            } else {\n              row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"status\",\n                id: \"status\",\n                onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"progress\",\n                  children: \"In progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ready\",\n                  children: \"Ready\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"rejected\",\n                  selected: true,\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 34\n              }, this);\n              row.color = \"#rrr\";\n            }\n\n            row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: json.rows[i].observations,\n              style: {\n                width: \"310px\"\n              },\n              onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 38\n            }, this);\n          } else {\n            if (json.rows[i].status === 0) {\n              row.status = \"Pending\";\n              row.color = \"#www\";\n            } else if (json.rows[i].status === 1) {\n              row.status = \"In progress\";\n              row.color = \"#yyy\";\n            } else if (json.rows[i].status === 2) {\n              row.status = \"Ready\";\n              row.color = \"#ggg\";\n            } else {\n              row.status = \"Rejected\";\n              row.color = \"#rrr\";\n            }\n\n            row.observations = json.rows[i].observations;\n          }\n\n          rows.push(row);\n        }\n\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNVN\", options).then(response => response.json()).then(async json => {\n          var row = null;\n\n          for (let i = 0; i < json.rows.length; i++) {\n            if (json.rows[i].attach === 1) {\n              if (json.rows[i].accept_reject_date != null) {\n                row = {\n                  incidence_number: json.rows[i].incidence_number,\n                  user: json.rows[i].user,\n                  description: json.rows[i].description,\n                  created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                  specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(QtrackerNVNSpecPopUp, {\n                      name: json.rows[i].name,\n                      incidence_number: json.rows[i].incidence_number,\n                      spref: json.rows[i].spref,\n                      description: json.rows[i].description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 287\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: AttachIcon,\n                      alt: \"att\",\n                      className: \"attach__icon\",\n                      style: {\n                        marginRight: \"0px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 450\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 282\n                  }, this),\n                  ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19).toString().substring(0, 10)\n                };\n              } else {\n                row = {\n                  incidence_number: json.rows[i].incidence_number,\n                  user: json.rows[i].user,\n                  description: json.rows[i].description,\n                  created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                  specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(QtrackerNVNSpecPopUp, {\n                      name: json.rows[i].name,\n                      incidence_number: json.rows[i].incidence_number,\n                      spref: json.rows[i].spref,\n                      description: json.rows[i].description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 631,\n                      columnNumber: 287\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: AttachIcon,\n                      alt: \"att\",\n                      className: \"attach__icon\",\n                      style: {\n                        marginRight: \"0px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 631,\n                      columnNumber: 450\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 282\n                  }, this),\n                  ar_date: \"\"\n                };\n              }\n            } else {\n              if (json.rows[i].accept_reject_date != null) {\n                row = {\n                  incidence_number: json.rows[i].incidence_number,\n                  user: json.rows[i].user,\n                  description: json.rows[i].description,\n                  created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                  specifications: /*#__PURE__*/_jsxDEV(QtrackerNVNSpecPopUp, {\n                    name: json.rows[i].name,\n                    incidence_number: json.rows[i].incidence_number,\n                    spref: json.rows[i].spref,\n                    description: json.rows[i].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 282\n                  }, this),\n                  ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n                };\n              } else {\n                row = {\n                  incidence_number: json.rows[i].incidence_number,\n                  user: json.rows[i].user,\n                  description: json.rows[i].description,\n                  created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                  specifications: /*#__PURE__*/_jsxDEV(QtrackerNVNSpecPopUp, {\n                    name: json.rows[i].name,\n                    incidence_number: json.rows[i].incidence_number,\n                    spref: json.rows[i].spref,\n                    description: json.rows[i].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 282\n                  }, this),\n                  ar_date: \"\"\n                };\n              }\n            }\n\n            if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n              if (json.rows[i].status === 0) {\n                row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"status\",\n                  id: \"status\",\n                  onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pending\",\n                    selected: true,\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"progress\",\n                    children: \"In progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ready\",\n                    children: \"Ready\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rejected\",\n                    children: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 40\n                }, this);\n                row.color = \"#www\";\n              } else if (json.rows[i].status === 1) {\n                row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"status\",\n                  id: \"status\",\n                  onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"progress\",\n                    selected: true,\n                    style: {\n                      backgroundColor: \"#yyy\"\n                    },\n                    children: \"In progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ready\",\n                    children: \"Ready\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rejected\",\n                    children: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 654,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 38\n                }, this);\n                row.color = \"#yyy\";\n              } else if (json.rows[i].status === 2) {\n                row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"status\",\n                  id: \"status\",\n                  onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"progress\",\n                    children: \"In progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ready\",\n                    selected: true,\n                    children: \"Ready\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rejected\",\n                    children: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 38\n                }, this);\n                row.color = \"#ggg\";\n              } else {\n                row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"status\",\n                  id: \"status\",\n                  onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"progress\",\n                    children: \"In progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ready\",\n                    children: \"Ready\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rejected\",\n                    selected: true,\n                    children: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 38\n                }, this);\n                row.color = \"#rrr\";\n              }\n\n              row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: json.rows[i].observations,\n                style: {\n                  width: \"310px\"\n                },\n                onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 42\n              }, this);\n            } else {\n              if (json.rows[i].status === 0) {\n                row.status = \"Pending\";\n                row.color = \"#www\";\n              } else if (json.rows[i].status === 1) {\n                row.status = \"In progress\";\n                row.color = \"#yyy\";\n              } else if (json.rows[i].status === 2) {\n                row.status = \"Ready\";\n                row.color = \"#ggg\";\n              } else {\n                row.status = \"Rejected\";\n                row.color = \"#rrr\";\n              }\n\n              row.observations = json.rows[i].observations;\n            }\n\n            rows.push(row);\n          }\n\n          await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNRI\", options).then(response => response.json()).then(async json => {\n            var row = null;\n\n            for (let i = 0; i < json.rows.length; i++) {\n              if (json.rows[i].attach === 1) {\n                if (json.rows[i].accept_reject_date != null) {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    description: json.rows[i].description,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(QtrackerNRISpecPopUp, {\n                        incidence_number: json.rows[i].incidence_number,\n                        spref: json.rows[i].spref,\n                        description: json.rows[i].description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 702,\n                        columnNumber: 291\n                      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: AttachIcon,\n                        alt: \"att\",\n                        className: \"attach__icon\",\n                        style: {\n                          marginRight: \"0px\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 702,\n                        columnNumber: 429\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 702,\n                      columnNumber: 286\n                    }, this),\n                    ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19).toString().substring(0, 10)\n                  };\n                } else {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    description: json.rows[i].description,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(QtrackerNRISpecPopUp, {\n                        incidence_number: json.rows[i].incidence_number,\n                        spref: json.rows[i].spref,\n                        description: json.rows[i].description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 704,\n                        columnNumber: 291\n                      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: AttachIcon,\n                        alt: \"att\",\n                        className: \"attach__icon\",\n                        style: {\n                          marginRight: \"0px\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 704,\n                        columnNumber: 429\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 704,\n                      columnNumber: 286\n                    }, this),\n                    ar_date: \"\"\n                  };\n                }\n              } else {\n                if (json.rows[i].accept_reject_date != null) {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    description: json.rows[i].description,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    specifications: /*#__PURE__*/_jsxDEV(QtrackerNRISpecPopUp, {\n                      incidence_number: json.rows[i].incidence_number,\n                      spref: json.rows[i].spref,\n                      description: json.rows[i].description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 708,\n                      columnNumber: 286\n                    }, this),\n                    ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n                  };\n                } else {\n                  row = {\n                    incidence_number: json.rows[i].incidence_number,\n                    user: json.rows[i].user,\n                    description: json.rows[i].description,\n                    created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                    specifications: /*#__PURE__*/_jsxDEV(QtrackerNRISpecPopUp, {\n                      incidence_number: json.rows[i].incidence_number,\n                      spref: json.rows[i].spref,\n                      description: json.rows[i].description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 710,\n                      columnNumber: 286\n                    }, this),\n                    ar_date: \"\"\n                  };\n                }\n              }\n\n              if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n                if (json.rows[i].status === 0) {\n                  row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"status\",\n                    id: \"status\",\n                    onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"pending\",\n                      selected: true,\n                      children: \"Pending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 716,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"progress\",\n                      children: \"In progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 717,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ready\",\n                      children: \"Ready\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 718,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"rejected\",\n                      children: \"Rejected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 719,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 44\n                  }, this);\n                  row.color = \"#www\";\n                } else if (json.rows[i].status === 1) {\n                  row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"status\",\n                    id: \"status\",\n                    onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"pending\",\n                      children: \"Pending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 724,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"progress\",\n                      selected: true,\n                      style: {\n                        backgroundColor: \"#yyy\"\n                      },\n                      children: \"In progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ready\",\n                      children: \"Ready\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"rejected\",\n                      children: \"Rejected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 727,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 723,\n                    columnNumber: 42\n                  }, this);\n                  row.color = \"#yyy\";\n                } else if (json.rows[i].status === 2) {\n                  row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"status\",\n                    id: \"status\",\n                    onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"pending\",\n                      children: \"Pending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"progress\",\n                      children: \"In progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 733,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ready\",\n                      selected: true,\n                      children: \"Ready\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 734,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"rejected\",\n                      children: \"Rejected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 735,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 42\n                  }, this);\n                  row.color = \"#ggg\";\n                } else {\n                  row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"status\",\n                    id: \"status\",\n                    onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"pending\",\n                      children: \"Pending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 740,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"progress\",\n                      children: \"In progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 741,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ready\",\n                      children: \"Ready\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 742,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"rejected\",\n                      selected: true,\n                      children: \"Rejected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 743,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 42\n                  }, this);\n                  row.color = \"#rrr\";\n                }\n\n                row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  defaultValue: json.rows[i].observations,\n                  style: {\n                    width: \"310px\"\n                  },\n                  onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 46\n                }, this);\n              } else {\n                if (json.rows[i].status === 0) {\n                  row.status = \"Pending\";\n                  row.color = \"#www\";\n                } else if (json.rows[i].status === 1) {\n                  row.status = \"In progress\";\n                  row.color = \"#yyy\";\n                } else if (json.rows[i].status === 2) {\n                  row.status = \"Ready\";\n                  row.color = \"#ggg\";\n                } else {\n                  row.status = \"Rejected\";\n                  row.color = \"#rrr\";\n                }\n\n                row.observations = json.rows[i].observations;\n              }\n\n              rows.push(row);\n            }\n\n            await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNRB\", options).then(response => response.json()).then(async json => {\n              var row = null;\n\n              for (let i = 0; i < json.rows.length; i++) {\n                if (json.rows[i].attach === 1) {\n                  if (json.rows[i].accept_reject_date != null) {\n                    row = {\n                      incidence_number: json.rows[i].incidence_number,\n                      user: json.rows[i].user,\n                      description: json.rows[i].description,\n                      created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                      specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(QtrackerNRBSpecPopUp, {\n                          incidence_number: json.rows[i].incidence_number,\n                          spref: json.rows[i].spref,\n                          description: json.rows[i].description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 775,\n                          columnNumber: 295\n                        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: AttachIcon,\n                          alt: \"att\",\n                          className: \"attach__icon\",\n                          style: {\n                            marginRight: \"0px\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 775,\n                          columnNumber: 433\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 775,\n                        columnNumber: 290\n                      }, this),\n                      ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19).toString().substring(0, 10)\n                    };\n                  } else {\n                    row = {\n                      incidence_number: json.rows[i].incidence_number,\n                      user: json.rows[i].user,\n                      description: json.rows[i].description,\n                      created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                      specifications: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(QtrackerNRBSpecPopUp, {\n                          incidence_number: json.rows[i].incidence_number,\n                          spref: json.rows[i].spref,\n                          description: json.rows[i].description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 777,\n                          columnNumber: 295\n                        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: AttachIcon,\n                          alt: \"att\",\n                          className: \"attach__icon\",\n                          style: {\n                            marginRight: \"0px\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 777,\n                          columnNumber: 433\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 777,\n                        columnNumber: 290\n                      }, this),\n                      ar_date: \"\"\n                    };\n                  }\n                } else {\n                  if (json.rows[i].accept_reject_date != null) {\n                    row = {\n                      incidence_number: json.rows[i].incidence_number,\n                      user: json.rows[i].user,\n                      description: json.rows[i].description,\n                      created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                      specifications: /*#__PURE__*/_jsxDEV(QtrackerNRBSpecPopUp, {\n                        incidence_number: json.rows[i].incidence_number,\n                        spref: json.rows[i].spref,\n                        description: json.rows[i].description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 781,\n                        columnNumber: 290\n                      }, this),\n                      ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n                    };\n                  } else {\n                    row = {\n                      incidence_number: json.rows[i].incidence_number,\n                      user: json.rows[i].user,\n                      description: json.rows[i].description,\n                      created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                      specifications: /*#__PURE__*/_jsxDEV(QtrackerNRBSpecPopUp, {\n                        incidence_number: json.rows[i].incidence_number,\n                        spref: json.rows[i].spref,\n                        description: json.rows[i].description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 783,\n                        columnNumber: 290\n                      }, this),\n                      ar_date: \"\"\n                    };\n                  }\n                }\n\n                if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n                  if (json.rows[i].status === 0) {\n                    row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"status\",\n                      id: \"status\",\n                      onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"pending\",\n                        selected: true,\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 789,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"progress\",\n                        children: \"In progress\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 790,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"ready\",\n                        children: \"Ready\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 791,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"rejected\",\n                        children: \"Rejected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 792,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 788,\n                      columnNumber: 48\n                    }, this);\n                    row.color = \"#www\";\n                  } else if (json.rows[i].status === 1) {\n                    row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"status\",\n                      id: \"status\",\n                      onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 797,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"progress\",\n                        selected: true,\n                        style: {\n                          backgroundColor: \"#yyy\"\n                        },\n                        children: \"In progress\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 798,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"ready\",\n                        children: \"Ready\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 799,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"rejected\",\n                        children: \"Rejected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 800,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 796,\n                      columnNumber: 46\n                    }, this);\n                    row.color = \"#yyy\";\n                  } else if (json.rows[i].status === 2) {\n                    row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"status\",\n                      id: \"status\",\n                      onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 805,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"progress\",\n                        children: \"In progress\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 806,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"ready\",\n                        selected: true,\n                        children: \"Ready\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 807,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"rejected\",\n                        children: \"Rejected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 808,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 804,\n                      columnNumber: 46\n                    }, this);\n                    row.color = \"#ggg\";\n                  } else {\n                    row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"status\",\n                      id: \"status\",\n                      onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 813,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"progress\",\n                        children: \"In progress\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 814,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"ready\",\n                        children: \"Ready\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 815,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"rejected\",\n                        selected: true,\n                        children: \"Rejected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 816,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 812,\n                      columnNumber: 46\n                    }, this);\n                    row.color = \"#rrr\";\n                  }\n\n                  row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    defaultValue: json.rows[i].observations,\n                    style: {\n                      width: \"310px\"\n                    },\n                    onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 820,\n                    columnNumber: 50\n                  }, this);\n                } else {\n                  if (json.rows[i].status === 0) {\n                    row.status = \"Pending\";\n                    row.color = \"#www\";\n                  } else if (json.rows[i].status === 1) {\n                    row.status = \"In progress\";\n                    row.color = \"#yyy\";\n                  } else if (json.rows[i].status === 2) {\n                    row.status = \"Ready\";\n                    row.color = \"#ggg\";\n                  } else {\n                    row.status = \"Rejected\";\n                    row.color = \"#rrr\";\n                  }\n\n                  row.observations = json.rows[i].observations;\n                }\n\n                rows.push(row);\n              }\n\n              await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getNRIDS\", options).then(response => response.json()).then(async json => {\n                var row = null;\n\n                for (let i = 0; i < json.rows.length; i++) {\n                  if (json.rows[i].accept_reject_date != null) {\n                    row = {\n                      incidence_number: json.rows[i].incidence_number,\n                      user: json.rows[i].user,\n                      description: json.rows[i].description,\n                      created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                      specifications: /*#__PURE__*/_jsxDEV(QtrackerNRIDSSpecPopUp, {\n                        incidence_number: json.rows[i].incidence_number,\n                        name: json.rows[i].name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 847,\n                        columnNumber: 292\n                      }, this),\n                      ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n                    };\n                  } else {\n                    row = {\n                      incidence_number: json.rows[i].incidence_number,\n                      user: json.rows[i].user,\n                      description: json.rows[i].description,\n                      created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                      specifications: /*#__PURE__*/_jsxDEV(QtrackerNRIDSSpecPopUp, {\n                        incidence_number: json.rows[i].incidence_number,\n                        name: json.rows[i].name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 849,\n                        columnNumber: 292\n                      }, this),\n                      ar_date: \"\"\n                    };\n                  }\n\n                  if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n                    if (json.rows[i].status === 0) {\n                      row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                        name: \"status\",\n                        id: \"status\",\n                        onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"pending\",\n                          selected: true,\n                          children: \"Pending\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 854,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"progress\",\n                          children: \"In progress\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 855,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"ready\",\n                          children: \"Ready\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 856,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"rejected\",\n                          children: \"Rejected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 857,\n                          columnNumber: 39\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 853,\n                        columnNumber: 52\n                      }, this);\n                      row.color = \"#www\";\n                    } else if (json.rows[i].status === 1) {\n                      row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                        name: \"status\",\n                        id: \"status\",\n                        onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"pending\",\n                          children: \"Pending\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 862,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"progress\",\n                          selected: true,\n                          style: {\n                            backgroundColor: \"#yyy\"\n                          },\n                          children: \"In progress\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 863,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"ready\",\n                          children: \"Ready\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 864,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"rejected\",\n                          children: \"Rejected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 865,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 861,\n                        columnNumber: 50\n                      }, this);\n                      row.color = \"#yyy\";\n                    } else if (json.rows[i].status === 2) {\n                      row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                        name: \"status\",\n                        id: \"status\",\n                        onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"pending\",\n                          children: \"Pending\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 870,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"progress\",\n                          children: \"In progress\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 871,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"ready\",\n                          selected: true,\n                          children: \"Ready\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 872,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"rejected\",\n                          children: \"Rejected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 873,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 869,\n                        columnNumber: 50\n                      }, this);\n                      row.color = \"#ggg\";\n                    } else {\n                      row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                        name: \"status\",\n                        id: \"status\",\n                        onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"pending\",\n                          children: \"Pending\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 878,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"progress\",\n                          children: \"In progress\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 879,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"ready\",\n                          children: \"Ready\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 880,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"rejected\",\n                          selected: true,\n                          children: \"Rejected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 881,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 877,\n                        columnNumber: 50\n                      }, this);\n                      row.color = \"#rrr\";\n                    }\n\n                    row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      defaultValue: json.rows[i].observations,\n                      style: {\n                        width: \"310px\"\n                      },\n                      onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 885,\n                      columnNumber: 54\n                    }, this);\n                  } else {\n                    if (json.rows[i].status === 0) {\n                      row.status = \"Pending\";\n                      row.color = \"#www\";\n                    } else if (json.rows[i].status === 1) {\n                      row.status = \"In progress\";\n                      row.color = \"#yyy\";\n                    } else if (json.rows[i].status === 2) {\n                      row.status = \"Ready\";\n                      row.color = \"#ggg\";\n                    } else {\n                      row.status = \"Rejected\";\n                      row.color = \"#rrr\";\n                    }\n\n                    row.observations = json.rows[i].observations;\n                  }\n\n                  rows.push(row);\n                }\n\n                await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/qtracker/getRP\", options).then(response => response.json()).then(async json => {\n                  var row = null;\n\n                  for (let i = 0; i < json.rows.length; i++) {\n                    if (json.rows[i].accept_reject_date != null) {\n                      row = {\n                        incidence_number: json.rows[i].incidence_number,\n                        user: json.rows[i].user,\n                        description: json.rows[i].description,\n                        created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                        specifications: /*#__PURE__*/_jsxDEV(QtrackerRPSpecPopUp, {\n                          incidence_number: json.rows[i].incidence_number,\n                          items: json.rows[i].items_to_report,\n                          scope: json.rows[i].scope,\n                          description: json.rows[i].description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 912,\n                          columnNumber: 296\n                        }, this),\n                        ar_date: json.rows[i].accept_reject_date.toString().substring(0, 10) + \" \" + json.rows[i].accept_reject_date.toString().substring(11, 19)\n                      };\n                    } else {\n                      row = {\n                        incidence_number: json.rows[i].incidence_number,\n                        user: json.rows[i].user,\n                        description: json.rows[i].description,\n                        created_at: json.rows[i].created_at.toString().substring(0, 10) + \" \" + json.rows[i].created_at.toString().substring(11, 19),\n                        specifications: /*#__PURE__*/_jsxDEV(QtrackerRPSpecPopUp, {\n                          incidence_number: json.rows[i].incidence_number,\n                          items: json.rows[i].items_to_report,\n                          scope: json.rows[i].scope,\n                          description: json.rows[i].description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 914,\n                          columnNumber: 296\n                        }, this),\n                        ar_date: \"\"\n                      };\n                    }\n\n                    if (secureStorage.getItem(\"role\") === \"3D Admin\") {\n                      if (json.rows[i].status === 0) {\n                        row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                          name: \"status\",\n                          id: \"status\",\n                          onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"pending\",\n                            selected: true,\n                            children: \"Pending\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 919,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"progress\",\n                            children: \"In progress\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 920,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"ready\",\n                            children: \"Ready\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 921,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"rejected\",\n                            children: \"Rejected\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 922,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 918,\n                          columnNumber: 56\n                        }, this);\n                        row.color = \"#www\";\n                      } else if (json.rows[i].status === 1) {\n                        row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                          name: \"status\",\n                          id: \"status\",\n                          onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"pending\",\n                            children: \"Pending\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 927,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"progress\",\n                            selected: true,\n                            style: {\n                              backgroundColor: \"#yyy\"\n                            },\n                            children: \"In progress\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 928,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"ready\",\n                            children: \"Ready\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 929,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"rejected\",\n                            children: \"Rejected\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 930,\n                            columnNumber: 41\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 926,\n                          columnNumber: 54\n                        }, this);\n                        row.color = \"#yyy\";\n                      } else if (json.rows[i].status === 2) {\n                        row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                          name: \"status\",\n                          id: \"status\",\n                          onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"pending\",\n                            children: \"Pending\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 935,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"progress\",\n                            children: \"In progress\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 936,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"ready\",\n                            selected: true,\n                            children: \"Ready\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 937,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"rejected\",\n                            children: \"Rejected\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 938,\n                            columnNumber: 41\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 934,\n                          columnNumber: 54\n                        }, this);\n                        row.color = \"#ggg\";\n                      } else {\n                        row.status = /*#__PURE__*/_jsxDEV(\"select\", {\n                          name: \"status\",\n                          id: \"status\",\n                          onChange: event => this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"pending\",\n                            children: \"Pending\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 943,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"progress\",\n                            children: \"In progress\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 944,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"ready\",\n                            children: \"Ready\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 945,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"rejected\",\n                            selected: true,\n                            children: \"Rejected\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 946,\n                            columnNumber: 41\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 942,\n                          columnNumber: 54\n                        }, this);\n                        row.color = \"#rrr\";\n                      }\n\n                      row.observations = /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        defaultValue: json.rows[i].observations,\n                        style: {\n                          width: \"310px\"\n                        },\n                        onChange: event => this.updateObservations(json.rows[i].incidence_number, event.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 950,\n                        columnNumber: 58\n                      }, this);\n                    } else {\n                      if (json.rows[i].status === 0) {\n                        row.status = \"Pending\";\n                        row.color = \"#www\";\n                      } else if (json.rows[i].status === 1) {\n                        row.status = \"In progress\";\n                        row.color = \"#yyy\";\n                      } else if (json.rows[i].status === 2) {\n                        row.status = \"Ready\";\n                        row.color = \"#ggg\";\n                      } else {\n                        row.status = \"Rejected\";\n                        row.color = \"#rrr\";\n                      }\n\n                      row.observations = json.rows[i].observations;\n                    }\n\n                    rows.push(row);\n                  } // Sort the array based on the second element\n\n\n                  rows.sort(function (first, second) {\n                    return second.created_at.localeCompare(first.created_at);\n                  });\n                  const filterRow = [{\n                    incidence_number: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        className: \"filter__input\",\n                        placeholder: \"Reference\",\n                        onChange: e => this.filter(0, e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 975,\n                        columnNumber: 76\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 975,\n                      columnNumber: 71\n                    }, this),\n                    user: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        className: \"filter__input\",\n                        placeholder: \"User\",\n                        onChange: e => this.filter(1, e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 975,\n                        columnNumber: 214\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 975,\n                      columnNumber: 209\n                    }, this),\n                    created_at: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        className: \"filter__input\",\n                        placeholder: \"Date\",\n                        onChange: e => this.filter(2, e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 975,\n                        columnNumber: 353\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 975,\n                      columnNumber: 348\n                    }, this),\n                    status: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        className: \"filter__input\",\n                        placeholder: \"Status\",\n                        onChange: e => this.filter(3, e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 975,\n                        columnNumber: 487\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 975,\n                      columnNumber: 482\n                    }, this)\n                  }];\n                  this.setState({\n                    data: rows,\n                    displayData: rows\n                  });\n                  await this.setState({\n                    filters: filterRow\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    }\n  }\n\n  async filter(column, value) {\n    let fd = this.state.filterData;\n    fd[column] = value;\n    await this.setState({\n      filterData: fd\n    });\n    let auxDisplayData = this.state.data;\n    let resultData = [];\n    let fil,\n        exists = null;\n\n    for (let i = 0; i < auxDisplayData.length; i++) {\n      exists = true;\n\n      for (let column = 0; column < Object.keys(auxDisplayData[i]).length - 1; column++) {\n        fil = Object.keys(auxDisplayData[i])[column];\n\n        if (fil === \"specifications\") {\n          fil = \"status\";\n        }\n\n        if (fil === \"status\") {\n          if (auxDisplayData[i][fil].props) {\n            for (let p = 0; p < auxDisplayData[i][fil].props.children.length; p++) {\n              if (auxDisplayData[i][fil].props.children[p].props.selected) {\n                console.log(auxDisplayData[i][fil].props.children[p].props);\n\n                if (this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].props.children[p].props.children.includes(this.state.filterData[column])) {\n                  exists = false;\n                }\n              }\n            }\n          } else if (auxDisplayData[i][fil]) {\n            if (this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])) {\n              exists = false;\n            }\n          } else {\n            if (this.state.filterData[column] !== \"\" && this.state.filterData[column]) {\n              exists = false;\n            }\n          }\n        } else {\n          if (auxDisplayData[i][fil]) {\n            if (this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])) {\n              exists = false;\n            }\n          }\n        }\n      }\n\n      if (exists) {\n        resultData.push(auxDisplayData[i]);\n      }\n    }\n\n    await this.setState({\n      displayData: resultData\n    });\n  }\n\n  async updateObservations(incidence_number, observations) {\n    let observationsAux = this.state.observations;\n    observationsAux[incidence_number] = observations;\n    await this.setState({\n      observations: observationsAux\n    });\n    this.props.updateObservations(this.state.observations);\n  }\n\n  render() {\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Reference\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'incidence_number',\n      key: 'incidence_number',\n      ...this.getColumnSearchProps('incidence_number'),\n      sorter: {\n        compare: (a, b) => a.incidence_number.localeCompare(b.incidence_number)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'user',\n      key: 'user',\n      ...this.getColumnSearchProps('user'),\n      sorter: {\n        compare: (a, b) => a.user.localeCompare(b.user)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'description',\n      key: 'description',\n      ...this.getColumnSearchProps('description'),\n      sorter: {\n        compare: (a, b) => a.description.localeCompare(b.description)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      ...this.getColumnSearchProps('created_at'),\n      sorter: {\n        compare: (a, b) => {\n          return a.created_at.localeCompare(b.created_at);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'specifications',\n      key: 'specifications',\n      ...this.getColumnSearchProps('specifications'),\n      width: \"120px\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Observations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'observations',\n      key: 'observations',\n      ...this.getColumnSearchProps('observations')\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Accepted/Rejected Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'ar_date',\n      key: 'ar_date',\n      ...this.getColumnSearchProps('ar_date'),\n      width: \"250px\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'status',\n      key: 'status',\n      ...this.getColumnSearchProps('status'),\n      sorter: {\n        compare: (a, b) => a.status.localeCompare(b.status)\n      },\n      width: '160px'\n    }];\n    var totalElements = null;\n\n    if (this.state.data.length === 0) {\n      totalElements = null;\n    } else {\n      totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"estimatedDataTable__container\",\n        style: {\n          width: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.displayData,\n          style: {\n            height: '540px'\n          },\n          scroll: {\n            y: 437\n          },\n          pagination: {\n            disabled: true,\n            defaultPageSize: 5000\n          },\n          size: \"small\",\n          rowClassName: record => record.color.replace('#', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"filter__table\",\n          pagination: {\n            disabled: true\n          },\n          scroll: {\n            y: 437\n          },\n          showHeader: false,\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.filters,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 11\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default QTrackerViewDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/qtrackerViewDataTable/qtrackerViewDataTable.js"],"names":["React","Table","QtrackerNWCSpecPopUp","QtrackerNVNSpecPopUp","QtrackerNRISpecPopUp","QtrackerNRBSpecPopUp","QtrackerNRIDSSpecPopUp","QtrackerRPSpecPopUp","AttachIcon","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","QTrackerViewDataTable","Component","state","searchText","searchedColumn","displayData","filterData","observations","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","filters","getColumnSearchProps","dataIndex","render","text","handleReset","clearFilters","setState","onSelectChange","selectedRowKeys","ids","i","length","push","id","children","onChange","statusChange","incidence_number","status","type","status_id","updateStatus","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","row","attach","accept_reject_date","user","description","created_at","substring","specifications","spref","marginRight","ar_date","getItem","event","target","value","color","backgroundColor","width","updateObservations","name","pipe","items_to_report","scope","sort","first","second","localeCompare","filterRow","e","filter","componentDidUpdate","prevProps","prevState","column","fd","auxDisplayData","resultData","fil","exists","Object","keys","p","selected","console","log","includes","observationsAux","columns","title","sorter","compare","a","b","totalElements","position","bottom","left","height","y","disabled","defaultPageSize","record","replace"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\nimport QtrackerNWCSpecPopUp from '../qtrackerNWCSpecPopUp/qtrackerNWCSpecPopUp';\r\nimport QtrackerNVNSpecPopUp from '../qtrackerNVNSpecPopUp/qtrackerNVNSpecPopUp';\r\nimport QtrackerNRISpecPopUp from '../qtrackerNRISpecPopUp/qtrackerNRISpecPopUp';\r\nimport QtrackerNRBSpecPopUp from '../qtrackerNRBSpecPopUp/qtrackerNRBSpecPopUp';\r\nimport QtrackerNRIDSSpecPopUp from '../qtrackerNRIDSSpecPopUp/qtrackerNRIDSSpecPopUp';\r\nimport QtrackerRPSpecPopUp from '../qtrackerRPSpecPopUp/qtrackerRPSpecPopUp';\r\nimport './qtrackerViewDataTable.css'\r\nimport AttachIcon from \"../../assets/images/attach.png\"\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass QTrackerViewDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    displayData: [],\r\n    filterData: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    observations: {},\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: [],\r\n    filters: []\r\n  };\r\n\r\n  async statusChange(incidence_number, status, type){\r\n    let status_id\r\n    if(status === \"pending\"){\r\n      status_id = 0\r\n    }else if(status === \"progress\"){\r\n      status_id = 1\r\n    }else if(status === \"ready\"){\r\n      status_id = 2\r\n    }else if(status === \"rejected\"){\r\n      status_id = 3\r\n    }\r\n\r\n   await this.props.updateStatus([incidence_number, status_id, type])  \r\n  }\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNWC\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n          var rows = []\r\n          var row = null\r\n            for(let i = 0; i < json.rows.length; i++){\r\n\r\n                if(json.rows[i].attach === 1){\r\n                  if(json.rows[i].accept_reject_date != null){\r\n                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNWCSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19).toString().substring(0,10)}\r\n                  }else{\r\n                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNWCSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: \"\"}\r\n                  }\r\n                }else{\r\n                  if(json.rows[i].accept_reject_date != null){\r\n                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNWCSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                  }else{\r\n                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNWCSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: \"\"}\r\n                  }\r\n                }\r\n\r\n                if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                  if(json.rows[i].status === 0){\r\n                      row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\")} >\r\n                      <option value=\"pending\" selected>Pending</option>\r\n                      <option value=\"progress\">In progress</option>\r\n                      <option value=\"ready\">Ready</option>\r\n                      <option value=\"rejected\">Rejected</option>\r\n                    </select>\r\n                      row.color = \"#www\"\r\n                  }else if(json.rows[i].status === 1){\r\n                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\")}>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                    <option value=\"ready\">Ready</option>\r\n                    <option value=\"rejected\">Rejected</option>\r\n                  </select>\r\n                      row.color = \"#yyy\"\r\n                  }else if(json.rows[i].status === 2){\r\n                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\")}>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"progress\">In progress</option>\r\n                    <option value=\"ready\" selected>Ready</option>\r\n                    <option value=\"rejected\">Rejected</option>\r\n                    </select>\r\n                      row.color = \"#ggg\"\r\n                  }else{\r\n                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\")}>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"progress\">In progress</option>\r\n                    <option value=\"ready\">Ready</option>\r\n                    <option value=\"rejected\" selected>Rejected</option>\r\n                   </select>\r\n                      row.color = \"#rrr\"\r\n                  }\r\n\r\n                  row.observations = <input style={{width: \"310px\"}} type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                }else{\r\n                  if(json.rows[i].status === 0){\r\n                    row.status = \"Pending\"\r\n                    row.color = \"#www\"\r\n                  }else if(json.rows[i].status === 1){\r\n                      row.status = \"In progress\"\r\n                      row.color = \"#yyy\"\r\n                  }else if(json.rows[i].status === 2){\r\n                      row.status = \"Ready\"\r\n                      row.color = \"#ggg\"\r\n                  }else{\r\n                      row.status = \"Rejected\"\r\n                      row.color = \"#rrr\"\r\n                  }\r\n\r\n                  row.observations = json.rows[i].observations\r\n                }\r\n                \r\n                rows.push(row)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNVN\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n            var row = null\r\n                for(let i = 0; i < json.rows.length; i++){\r\n                  if(json.rows[i].attach === 1){\r\n                    if(json.rows[i].accept_reject_date != null){\r\n                      row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNVNSpecPopUp name={json.rows[i].name} incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19).toString().substring(0,10)}\r\n                    }else{\r\n                      row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNVNSpecPopUp name={json.rows[i].name} incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: \"\"}\r\n                    }\r\n                  }else{\r\n                    if(json.rows[i].accept_reject_date != null){\r\n                      row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNVNSpecPopUp name={json.rows[i].name} incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                    }else{\r\n                      row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNVNSpecPopUp name={json.rows[i].name} incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: \"\"}\r\n                    }\r\n                  }\r\n                    if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                      if(json.rows[i].status === 0){\r\n                          row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\")} >\r\n                          <option value=\"pending\" selected>Pending</option>\r\n                          <option value=\"progress\">In progress</option>\r\n                          <option value=\"ready\">Ready</option>\r\n                          <option value=\"rejected\">Rejected</option>\r\n                        </select>\r\n                          row.color = \"#www\"\r\n                      }else if(json.rows[i].status === 1){\r\n                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\")}>\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                        <option value=\"ready\">Ready</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                      </select>\r\n                          row.color = \"#yyy\"\r\n                      }else if(json.rows[i].status === 2){\r\n                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\")}>\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"progress\">In progress</option>\r\n                        <option value=\"ready\" selected>Ready</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                        </select>\r\n                          row.color = \"#ggg\"\r\n                      }else{\r\n                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\")}>\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"progress\">In progress</option>\r\n                        <option value=\"ready\">Ready</option>\r\n                        <option value=\"rejected\" selected>Rejected</option>\r\n                       </select>\r\n                          row.color = \"#rrr\"\r\n                      }\r\n                      row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                    }else{\r\n                      if(json.rows[i].status === 0){\r\n                        row.status = \"Pending\"\r\n                        row.color = \"#www\"\r\n                      }else if(json.rows[i].status === 1){\r\n                          row.status = \"In progress\"\r\n                          row.color = \"#yyy\"\r\n                      }else if(json.rows[i].status === 2){\r\n                          row.status = \"Ready\"\r\n                          row.color = \"#ggg\"\r\n                      }else{\r\n                          row.status = \"Rejected\"\r\n                          row.color = \"#rrr\"\r\n                      }\r\n\r\n                      row.observations = json.rows[i].observations\r\n                    }\r\n                    rows.push(row)\r\n                }\r\n                \r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNRI\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                var row = null\r\n                    for(let i = 0; i < json.rows.length; i++){\r\n                      if(json.rows[i].attach === 1){\r\n                        if(json.rows[i].accept_reject_date != null){\r\n                          row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNRISpecPopUp incidence_number={json.rows[i].incidence_number} pipe={json.rows[i].pipe} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19).toString().substring(0,10)}\r\n                        }else{\r\n                          row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNRISpecPopUp incidence_number={json.rows[i].incidence_number} pipe={json.rows[i].pipe} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: \"\"}\r\n                        }\r\n                      }else{\r\n                        if(json.rows[i].accept_reject_date != null){\r\n                          row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRISpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].pipe} description={json.rows[i].description}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                        }else{\r\n                          row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRISpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: \"\"}\r\n                        }\r\n                      }\r\n                        if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                          if(json.rows[i].status === 0){\r\n                              row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\")} >\r\n                              <option value=\"pending\" selected>Pending</option>\r\n                              <option value=\"progress\">In progress</option>\r\n                              <option value=\"ready\">Ready</option>\r\n                              <option value=\"rejected\">Rejected</option>\r\n                            </select>\r\n                              row.color = \"#www\"\r\n                          }else if(json.rows[i].status === 1){\r\n                            row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\")}>\r\n                            <option value=\"pending\">Pending</option>\r\n                            <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                            <option value=\"ready\">Ready</option>\r\n                            <option value=\"rejected\">Rejected</option>\r\n                          </select>\r\n                              row.color = \"#yyy\"\r\n                          }else if(json.rows[i].status === 2){\r\n                            row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\")}>\r\n                            <option value=\"pending\">Pending</option>\r\n                            <option value=\"progress\">In progress</option>\r\n                            <option value=\"ready\" selected>Ready</option>\r\n                            <option value=\"rejected\">Rejected</option>\r\n                            </select>\r\n                              row.color = \"#ggg\"\r\n                          }else{\r\n                            row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\")}>\r\n                            <option value=\"pending\">Pending</option>\r\n                            <option value=\"progress\">In progress</option>\r\n                            <option value=\"ready\">Ready</option>\r\n                            <option value=\"rejected\" selected>Rejected</option>\r\n                           </select>\r\n                              row.color = \"#rrr\"\r\n                          }\r\n                          row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                        }else{\r\n                          if(json.rows[i].status === 0){\r\n                            row.status = \"Pending\"\r\n                            row.color = \"#www\"\r\n                          }else if(json.rows[i].status === 1){\r\n                              row.status = \"In progress\"\r\n                              row.color = \"#yyy\"\r\n                          }else if(json.rows[i].status === 2){\r\n                              row.status = \"Ready\"\r\n                              row.color = \"#ggg\"\r\n                          }else{\r\n                              row.status = \"Rejected\"\r\n                              row.color = \"#rrr\"\r\n                          }\r\n\r\n                          row.observations = json.rows[i].observations\r\n                        }\r\n                        rows.push(row)\r\n                    }\r\n                    \r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNRB\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json => {\r\n                    var row = null\r\n                        for(let i = 0; i < json.rows.length; i++){\r\n                          if(json.rows[i].attach === 1){\r\n                            if(json.rows[i].accept_reject_date != null){\r\n                              row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNRBSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19).toString().substring(0,10)}\r\n                            }else{\r\n                              row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNRBSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: \"\"}\r\n                            }\r\n                          }else{\r\n                            if(json.rows[i].accept_reject_date != null){\r\n                              row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRBSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                            }else{\r\n                              row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRBSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: \"\"}\r\n                            }\r\n                          }\r\n                            if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                              if(json.rows[i].status === 0){\r\n                                  row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\")} >\r\n                                  <option value=\"pending\" selected>Pending</option>\r\n                                  <option value=\"progress\">In progress</option>\r\n                                  <option value=\"ready\">Ready</option>\r\n                                  <option value=\"rejected\">Rejected</option>\r\n                                </select>\r\n                                  row.color = \"#www\"\r\n                              }else if(json.rows[i].status === 1){\r\n                                row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\")}>\r\n                                <option value=\"pending\">Pending</option>\r\n                                <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                                <option value=\"ready\">Ready</option>\r\n                                <option value=\"rejected\">Rejected</option>\r\n                              </select>\r\n                                  row.color = \"#yyy\"\r\n                              }else if(json.rows[i].status === 2){\r\n                                row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\")}>\r\n                                <option value=\"pending\">Pending</option>\r\n                                <option value=\"progress\">In progress</option>\r\n                                <option value=\"ready\" selected>Ready</option>\r\n                                <option value=\"rejected\">Rejected</option>\r\n                                </select>\r\n                                  row.color = \"#ggg\"\r\n                              }else{\r\n                                row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\")}>\r\n                                <option value=\"pending\">Pending</option>\r\n                                <option value=\"progress\">In progress</option>\r\n                                <option value=\"ready\">Ready</option>\r\n                                <option value=\"rejected\" selected>Rejected</option>\r\n                               </select>\r\n                                  row.color = \"#rrr\"\r\n                              }\r\n\r\n                              row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n                            \r\n                            }else{\r\n                              if(json.rows[i].status === 0){\r\n                                row.status = \"Pending\"\r\n                                row.color = \"#www\"\r\n                              }else if(json.rows[i].status === 1){\r\n                                  row.status = \"In progress\"\r\n                                  row.color = \"#yyy\"\r\n                              }else if(json.rows[i].status === 2){\r\n                                  row.status = \"Ready\"\r\n                                  row.color = \"#ggg\"\r\n                              }else{\r\n                                  row.status = \"Rejected\"\r\n                                  row.color = \"#rrr\"\r\n                              }\r\n\r\n                              row.observations = json.rows[i].observations\r\n                            }\r\n                            rows.push(row)\r\n                        }\r\n                        \r\n                        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNRIDS\", options)\r\n                        .then(response => response.json())\r\n                        .then(async json => {\r\n                        var row = null\r\n                            for(let i = 0; i < json.rows.length; i++){\r\n                              if(json.rows[i].accept_reject_date != null){\r\n                                row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRIDSSpecPopUp incidence_number={json.rows[i].incidence_number} name={json.rows[i].name}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                              }else{\r\n                                row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRIDSSpecPopUp incidence_number={json.rows[i].incidence_number} name={json.rows[i].name}/>, ar_date: \"\"}\r\n                              }\r\n                                if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                                  if(json.rows[i].status === 0){\r\n                                      row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\")} >\r\n                                      <option value=\"pending\" selected>Pending</option>\r\n                                      <option value=\"progress\">In progress</option>\r\n                                      <option value=\"ready\">Ready</option>\r\n                                      <option value=\"rejected\">Rejected</option>\r\n                                    </select>\r\n                                      row.color = \"#www\"\r\n                                  }else if(json.rows[i].status === 1){\r\n                                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\")}>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                                    <option value=\"ready\">Ready</option>\r\n                                    <option value=\"rejected\">Rejected</option>\r\n                                  </select>\r\n                                      row.color = \"#yyy\"\r\n                                  }else if(json.rows[i].status === 2){\r\n                                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\")}>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"progress\">In progress</option>\r\n                                    <option value=\"ready\" selected>Ready</option>\r\n                                    <option value=\"rejected\">Rejected</option>\r\n                                    </select>\r\n                                      row.color = \"#ggg\"\r\n                                  }else{\r\n                                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\")}>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"progress\">In progress</option>\r\n                                    <option value=\"ready\">Ready</option>\r\n                                    <option value=\"rejected\" selected>Rejected</option>\r\n                                   </select>\r\n                                      row.color = \"#rrr\"\r\n                                  }\r\n                                  row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                                }else{\r\n                                  if(json.rows[i].status === 0){\r\n                                    row.status = \"Pending\"\r\n                                    row.color = \"#www\"\r\n                                  }else if(json.rows[i].status === 1){\r\n                                      row.status = \"In progress\"\r\n                                      row.color = \"#yyy\"\r\n                                  }else if(json.rows[i].status === 2){\r\n                                      row.status = \"Ready\"\r\n                                      row.color = \"#ggg\"\r\n                                  }else{\r\n                                      row.status = \"Rejected\"\r\n                                      row.color = \"#rrr\"\r\n                                  }\r\n                                  row.observations = json.rows[i].observations\r\n                                }\r\n                                rows.push(row)\r\n                            }\r\n                            \r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getRP\", options)\r\n                            .then(response => response.json())\r\n                            .then(async json => {\r\n                            var row = null\r\n                                for(let i = 0; i < json.rows.length; i++){\r\n                                  if(json.rows[i].accept_reject_date != null){\r\n                                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerRPSpecPopUp incidence_number={json.rows[i].incidence_number} items={json.rows[i].items_to_report} scope={json.rows[i].scope} description={json.rows[i].description}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                                  }else{\r\n                                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerRPSpecPopUp incidence_number={json.rows[i].incidence_number} items={json.rows[i].items_to_report} scope={json.rows[i].scope} description={json.rows[i].description}/>, ar_date: \"\"}\r\n                                  }\r\n                                    if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                                      if(json.rows[i].status === 0){\r\n                                          row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\")} >\r\n                                          <option value=\"pending\" selected>Pending</option>\r\n                                          <option value=\"progress\">In progress</option>\r\n                                          <option value=\"ready\">Ready</option>\r\n                                          <option value=\"rejected\">Rejected</option>\r\n                                        </select>\r\n                                          row.color = \"#www\"\r\n                                      }else if(json.rows[i].status === 1){\r\n                                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\")}>\r\n                                        <option value=\"pending\">Pending</option>\r\n                                        <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                                        <option value=\"ready\">Ready</option>\r\n                                        <option value=\"rejected\">Rejected</option>\r\n                                      </select>\r\n                                          row.color = \"#yyy\"\r\n                                      }else if(json.rows[i].status === 2){\r\n                                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\")}>\r\n                                        <option value=\"pending\">Pending</option>\r\n                                        <option value=\"progress\">In progress</option>\r\n                                        <option value=\"ready\" selected>Ready</option>\r\n                                        <option value=\"rejected\">Rejected</option>\r\n                                        </select>\r\n                                          row.color = \"#ggg\"\r\n                                      }else{\r\n                                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\")}>\r\n                                        <option value=\"pending\">Pending</option>\r\n                                        <option value=\"progress\">In progress</option>\r\n                                        <option value=\"ready\">Ready</option>\r\n                                        <option value=\"rejected\" selected>Rejected</option>\r\n                                       </select>\r\n                                          row.color = \"#rrr\"\r\n                                      }\r\n                                      row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                                    }else{\r\n                                      if(json.rows[i].status === 0){\r\n                                        row.status = \"Pending\"\r\n                                        row.color = \"#www\"\r\n                                      }else if(json.rows[i].status === 1){\r\n                                          row.status = \"In progress\"\r\n                                          row.color = \"#yyy\"\r\n                                      }else if(json.rows[i].status === 2){\r\n                                          row.status = \"Ready\"\r\n                                          row.color = \"#ggg\"\r\n                                      }else{\r\n                                          row.status = \"Rejected\"\r\n                                          row.color = \"#rrr\"\r\n                                      }\r\n                                      row.observations = json.rows[i].observations\r\n                                    }\r\n                                    rows.push(row)\r\n                                }\r\n\r\n                                // Sort the array based on the second element\r\n                                rows.sort(function(first, second) {\r\n                                  return second.created_at.localeCompare(first.created_at);\r\n                                });\r\n                                const filterRow = [{incidence_number: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Reference\" onChange={(e) => this.filter(0, e.target.value)}/></div>, user: <div><input type=\"text\" className=\"filter__input\" placeholder=\"User\" onChange={(e) => this.filter(1, e.target.value)}/></div>, created_at: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Date\" onChange={(e) => this.filter(2,e.target.value)}/></div>, status: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Status\" onChange={(e) => this.filter(3,e.target.value)}/></div>}]\r\n                \r\n                                this.setState({data : rows, displayData: rows});\r\n                                await this.setState({filters : filterRow})\r\n\r\n                            })\r\n\r\n                        })\r\n\r\n                    })\r\n\r\n                })\r\n\r\n            })\r\n            \r\n        })\r\n\r\n  }\r\n\r\n\r\n  async componentDidUpdate(prevProps, prevState){\r\n    \r\n    if(prevProps !== this.props){\r\n\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNWC\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n          var rows = []\r\n          var row = null\r\n            for(let i = 0; i < json.rows.length; i++){\r\n                if(json.rows[i].attach === 1){\r\n                  if(json.rows[i].accept_reject_date != null){\r\n                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNWCSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19).toString().substring(0,10)}\r\n                  }else{\r\n                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNWCSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: \"\"}\r\n                  }\r\n                }else{\r\n                  if(json.rows[i].accept_reject_date != null){\r\n                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNWCSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                  }else{\r\n                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNWCSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: \"\"}\r\n                  }\r\n                }\r\n\r\n                if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                  if(json.rows[i].status === 0){\r\n                      row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\")} >\r\n                      <option value=\"pending\" selected>Pending</option>\r\n                      <option value=\"progress\">In progress</option>\r\n                      <option value=\"ready\">Ready</option>\r\n                      <option value=\"rejected\">Rejected</option>\r\n                    </select>\r\n                      row.color = \"#www\"\r\n                  }else if(json.rows[i].status === 1){\r\n                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\")}>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                    <option value=\"ready\">Ready</option>\r\n                    <option value=\"rejected\">Rejected</option>\r\n                  </select>\r\n                      row.color = \"#yyy\"\r\n                  }else if(json.rows[i].status === 2){\r\n                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\")}>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"progress\">In progress</option>\r\n                    <option value=\"ready\" selected>Ready</option>\r\n                    <option value=\"rejected\">Rejected</option>\r\n                    </select>\r\n                      row.color = \"#ggg\"\r\n                  }else{\r\n                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NWC\")}>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"progress\">In progress</option>\r\n                    <option value=\"ready\">Ready</option>\r\n                    <option value=\"rejected\" selected>Rejected</option>\r\n                   </select>\r\n                      row.color = \"#rrr\"\r\n                  }\r\n                  row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                }else{\r\n                  if(json.rows[i].status === 0){\r\n                    row.status = \"Pending\"\r\n                    row.color = \"#www\"\r\n                  }else if(json.rows[i].status === 1){\r\n                      row.status = \"In progress\"\r\n                      row.color = \"#yyy\"\r\n                  }else if(json.rows[i].status === 2){\r\n                      row.status = \"Ready\"\r\n                      row.color = \"#ggg\"\r\n                  }else{\r\n                      row.status = \"Rejected\"\r\n                      row.color = \"#rrr\"\r\n                  }\r\n                  row.observations = json.rows[i].observations\r\n                }\r\n                \r\n                rows.push(row)\r\n            }\r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNVN\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n            var row = null\r\n                for(let i = 0; i < json.rows.length; i++){\r\n                  if(json.rows[i].attach === 1){\r\n                    if(json.rows[i].accept_reject_date != null){\r\n                      row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNVNSpecPopUp name={json.rows[i].name} incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19).toString().substring(0,10)}\r\n                    }else{\r\n                      row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNVNSpecPopUp name={json.rows[i].name} incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: \"\"}\r\n                    }\r\n                  }else{\r\n                    if(json.rows[i].accept_reject_date != null){\r\n                      row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNVNSpecPopUp name={json.rows[i].name} incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                    }else{\r\n                      row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNVNSpecPopUp name={json.rows[i].name} incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: \"\"}\r\n                    }\r\n                  }\r\n                    if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                      if(json.rows[i].status === 0){\r\n                          row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\")} >\r\n                          <option value=\"pending\" selected>Pending</option>\r\n                          <option value=\"progress\">In progress</option>\r\n                          <option value=\"ready\">Ready</option>\r\n                          <option value=\"rejected\">Rejected</option>\r\n                        </select>\r\n                          row.color = \"#www\"\r\n                      }else if(json.rows[i].status === 1){\r\n                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\")}>\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                        <option value=\"ready\">Ready</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                      </select>\r\n                          row.color = \"#yyy\"\r\n                      }else if(json.rows[i].status === 2){\r\n                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\")}>\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"progress\">In progress</option>\r\n                        <option value=\"ready\" selected>Ready</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                        </select>\r\n                          row.color = \"#ggg\"\r\n                      }else{\r\n                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NVN\")}>\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"progress\">In progress</option>\r\n                        <option value=\"ready\">Ready</option>\r\n                        <option value=\"rejected\" selected>Rejected</option>\r\n                       </select>\r\n                          row.color = \"#rrr\"\r\n                      }\r\n                      row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                    }else{\r\n                      if(json.rows[i].status === 0){\r\n                        row.status = \"Pending\"\r\n                        row.color = \"#www\"\r\n                      }else if(json.rows[i].status === 1){\r\n                          row.status = \"In progress\"\r\n                          row.color = \"#yyy\"\r\n                      }else if(json.rows[i].status === 2){\r\n                          row.status = \"Ready\"\r\n                          row.color = \"#ggg\"\r\n                      }else{\r\n                          row.status = \"Rejected\"\r\n                          row.color = \"#rrr\"\r\n                      }\r\n                      row.observations = json.rows[i].observations\r\n                    }\r\n                    rows.push(row)\r\n                }\r\n                \r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNRI\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                var row = null\r\n                    for(let i = 0; i < json.rows.length; i++){\r\n                      if(json.rows[i].attach === 1){\r\n                        if(json.rows[i].accept_reject_date != null){\r\n                          row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNRISpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19).toString().substring(0,10)}\r\n                        }else{\r\n                          row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNRISpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: \"\"}\r\n                        }\r\n                      }else{\r\n                        if(json.rows[i].accept_reject_date != null){\r\n                          row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRISpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                        }else{\r\n                          row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRISpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: \"\"}\r\n                        }\r\n                      }\r\n                        if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                          if(json.rows[i].status === 0){\r\n                              row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\")} >\r\n                              <option value=\"pending\" selected>Pending</option>\r\n                              <option value=\"progress\">In progress</option>\r\n                              <option value=\"ready\">Ready</option>\r\n                              <option value=\"rejected\">Rejected</option>\r\n                            </select>\r\n                              row.color = \"#www\"\r\n                          }else if(json.rows[i].status === 1){\r\n                            row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\")}>\r\n                            <option value=\"pending\">Pending</option>\r\n                            <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                            <option value=\"ready\">Ready</option>\r\n                            <option value=\"rejected\">Rejected</option>\r\n                          </select>\r\n                              row.color = \"#yyy\"\r\n                          }else if(json.rows[i].status === 2){\r\n                            row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\")}>\r\n                            <option value=\"pending\">Pending</option>\r\n                            <option value=\"progress\">In progress</option>\r\n                            <option value=\"ready\" selected>Ready</option>\r\n                            <option value=\"rejected\">Rejected</option>\r\n                            </select>\r\n                              row.color = \"#ggg\"\r\n                          }else{\r\n                            row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRI\")}>\r\n                            <option value=\"pending\">Pending</option>\r\n                            <option value=\"progress\">In progress</option>\r\n                            <option value=\"ready\">Ready</option>\r\n                            <option value=\"rejected\" selected>Rejected</option>\r\n                           </select>\r\n                              row.color = \"#rrr\"\r\n                          }\r\n                          row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                        }else{\r\n                          if(json.rows[i].status === 0){\r\n                            row.status = \"Pending\"\r\n                            row.color = \"#www\"\r\n                          }else if(json.rows[i].status === 1){\r\n                              row.status = \"In progress\"\r\n                              row.color = \"#yyy\"\r\n                          }else if(json.rows[i].status === 2){\r\n                              row.status = \"Ready\"\r\n                              row.color = \"#ggg\"\r\n                          }else{\r\n                              row.status = \"Rejected\"\r\n                              row.color = \"#rrr\"\r\n                          }\r\n                          row.observations = json.rows[i].observations\r\n                        }\r\n                        rows.push(row)\r\n                    }\r\n                    \r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNRB\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json => {\r\n                    var row = null\r\n                        for(let i = 0; i < json.rows.length; i++){\r\n                          if(json.rows[i].attach === 1){\r\n                            if(json.rows[i].accept_reject_date != null){\r\n                              row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNRBSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19).toString().substring(0,10)}\r\n                            }else{\r\n                              row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <div><QtrackerNRBSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/><img src={AttachIcon} alt=\"att\" className=\"attach__icon\" style={{marginRight:\"0px\"}}></img></div>, ar_date: \"\"}\r\n                            }\r\n                          }else{\r\n                            if(json.rows[i].accept_reject_date != null){\r\n                              row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRBSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                            }else{\r\n                              row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRBSpecPopUp incidence_number={json.rows[i].incidence_number} spref={json.rows[i].spref} description={json.rows[i].description}/>, ar_date: \"\"}\r\n                            }\r\n                          }\r\n                            if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                              if(json.rows[i].status === 0){\r\n                                  row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\")} >\r\n                                  <option value=\"pending\" selected>Pending</option>\r\n                                  <option value=\"progress\">In progress</option>\r\n                                  <option value=\"ready\">Ready</option>\r\n                                  <option value=\"rejected\">Rejected</option>\r\n                                </select>\r\n                                  row.color = \"#www\"\r\n                              }else if(json.rows[i].status === 1){\r\n                                row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\")}>\r\n                                <option value=\"pending\">Pending</option>\r\n                                <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                                <option value=\"ready\">Ready</option>\r\n                                <option value=\"rejected\">Rejected</option>\r\n                              </select>\r\n                                  row.color = \"#yyy\"\r\n                              }else if(json.rows[i].status === 2){\r\n                                row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\")}>\r\n                                <option value=\"pending\">Pending</option>\r\n                                <option value=\"progress\">In progress</option>\r\n                                <option value=\"ready\" selected>Ready</option>\r\n                                <option value=\"rejected\">Rejected</option>\r\n                                </select>\r\n                                  row.color = \"#ggg\"\r\n                              }else{\r\n                                row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRB\")}>\r\n                                <option value=\"pending\">Pending</option>\r\n                                <option value=\"progress\">In progress</option>\r\n                                <option value=\"ready\">Ready</option>\r\n                                <option value=\"rejected\" selected>Rejected</option>\r\n                               </select>\r\n                                  row.color = \"#rrr\"\r\n                              }\r\n                              row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                            }else{\r\n                              if(json.rows[i].status === 0){\r\n                                row.status = \"Pending\"\r\n                                row.color = \"#www\"\r\n                              }else if(json.rows[i].status === 1){\r\n                                  row.status = \"In progress\"\r\n                                  row.color = \"#yyy\"\r\n                              }else if(json.rows[i].status === 2){\r\n                                  row.status = \"Ready\"\r\n                                  row.color = \"#ggg\"\r\n                              }else{\r\n                                  row.status = \"Rejected\"\r\n                                  row.color = \"#rrr\"\r\n                              }\r\n                              row.observations = json.rows[i].observations\r\n                            }\r\n                            rows.push(row)\r\n                        }\r\n                        \r\n                        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getNRIDS\", options)\r\n                        .then(response => response.json())\r\n                        .then(async json => {\r\n                        var row = null\r\n                            for(let i = 0; i < json.rows.length; i++){\r\n                              if(json.rows[i].accept_reject_date != null){\r\n                                row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRIDSSpecPopUp incidence_number={json.rows[i].incidence_number} name={json.rows[i].name}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                              }else{\r\n                                row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerNRIDSSpecPopUp incidence_number={json.rows[i].incidence_number} name={json.rows[i].name}/>, ar_date: \"\"}\r\n                              }\r\n                                if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                                  if(json.rows[i].status === 0){\r\n                                      row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\")} >\r\n                                      <option value=\"pending\" selected>Pending</option>\r\n                                      <option value=\"progress\">In progress</option>\r\n                                      <option value=\"ready\">Ready</option>\r\n                                      <option value=\"rejected\">Rejected</option>\r\n                                    </select>\r\n                                      row.color = \"#www\"\r\n                                  }else if(json.rows[i].status === 1){\r\n                                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\")}>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                                    <option value=\"ready\">Ready</option>\r\n                                    <option value=\"rejected\">Rejected</option>\r\n                                  </select>\r\n                                      row.color = \"#yyy\"\r\n                                  }else if(json.rows[i].status === 2){\r\n                                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\")}>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"progress\">In progress</option>\r\n                                    <option value=\"ready\" selected>Ready</option>\r\n                                    <option value=\"rejected\">Rejected</option>\r\n                                    </select>\r\n                                      row.color = \"#ggg\"\r\n                                  }else{\r\n                                    row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"NRIDS\")}>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"progress\">In progress</option>\r\n                                    <option value=\"ready\">Ready</option>\r\n                                    <option value=\"rejected\" selected>Rejected</option>\r\n                                   </select>\r\n                                      row.color = \"#rrr\"\r\n                                  }\r\n                                  row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                                }else{\r\n                                  if(json.rows[i].status === 0){\r\n                                    row.status = \"Pending\"\r\n                                    row.color = \"#www\"\r\n                                  }else if(json.rows[i].status === 1){\r\n                                      row.status = \"In progress\"\r\n                                      row.color = \"#yyy\"\r\n                                  }else if(json.rows[i].status === 2){\r\n                                      row.status = \"Ready\"\r\n                                      row.color = \"#ggg\"\r\n                                  }else{\r\n                                      row.status = \"Rejected\"\r\n                                      row.color = \"#rrr\"\r\n                                  }\r\n                                  row.observations = json.rows[i].observations\r\n                                }\r\n                                rows.push(row)\r\n                            }\r\n                            \r\n                            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/qtracker/getRP\", options)\r\n                            .then(response => response.json())\r\n                            .then(async json => {\r\n                            var row = null\r\n                                for(let i = 0; i < json.rows.length; i++){\r\n                                  if(json.rows[i].accept_reject_date != null){\r\n                                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerRPSpecPopUp incidence_number={json.rows[i].incidence_number} items={json.rows[i].items_to_report} scope={json.rows[i].scope} description={json.rows[i].description}/>, ar_date: json.rows[i].accept_reject_date.toString().substring(0,10) + \" \"+ json.rows[i].accept_reject_date.toString().substring(11,19)}\r\n                                  }else{\r\n                                    row = {incidence_number: json.rows[i].incidence_number, user: json.rows[i].user, description: json.rows[i].description, created_at: json.rows[i].created_at.toString().substring(0,10) + \" \"+ json.rows[i].created_at.toString().substring(11,19), specifications: <QtrackerRPSpecPopUp incidence_number={json.rows[i].incidence_number} items={json.rows[i].items_to_report} scope={json.rows[i].scope} description={json.rows[i].description}/>, ar_date: \"\"}\r\n                                  }\r\n                                    if(secureStorage.getItem(\"role\") === \"3D Admin\"){\r\n                                      if(json.rows[i].status === 0){\r\n                                          row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\")} >\r\n                                          <option value=\"pending\" selected>Pending</option>\r\n                                          <option value=\"progress\">In progress</option>\r\n                                          <option value=\"ready\">Ready</option>\r\n                                          <option value=\"rejected\">Rejected</option>\r\n                                        </select>\r\n                                          row.color = \"#www\"\r\n                                      }else if(json.rows[i].status === 1){\r\n                                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\")}>\r\n                                        <option value=\"pending\">Pending</option>\r\n                                        <option value=\"progress\" selected style={{backgroundColor:\"#yyy\"}}>In progress</option>\r\n                                        <option value=\"ready\">Ready</option>\r\n                                        <option value=\"rejected\">Rejected</option>\r\n                                      </select>\r\n                                          row.color = \"#yyy\"\r\n                                      }else if(json.rows[i].status === 2){\r\n                                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\")}>\r\n                                        <option value=\"pending\">Pending</option>\r\n                                        <option value=\"progress\">In progress</option>\r\n                                        <option value=\"ready\" selected>Ready</option>\r\n                                        <option value=\"rejected\">Rejected</option>\r\n                                        </select>\r\n                                          row.color = \"#ggg\"\r\n                                      }else{\r\n                                        row.status = <select name=\"status\" id=\"status\" onChange={(event)=> this.statusChange(json.rows[i].incidence_number, event.target.value, \"RP\")}>\r\n                                        <option value=\"pending\">Pending</option>\r\n                                        <option value=\"progress\">In progress</option>\r\n                                        <option value=\"ready\">Ready</option>\r\n                                        <option value=\"rejected\" selected>Rejected</option>\r\n                                       </select>\r\n                                          row.color = \"#rrr\"\r\n                                      }\r\n                                      row.observations = <input type=\"text\" defaultValue={json.rows[i].observations} style={{width: \"310px\"}} onChange={(event)=>this.updateObservations(json.rows[i].incidence_number, event.target.value)}/>\r\n\r\n                                    }else{\r\n                                      if(json.rows[i].status === 0){\r\n                                        row.status = \"Pending\"\r\n                                        row.color = \"#www\"\r\n                                      }else if(json.rows[i].status === 1){\r\n                                          row.status = \"In progress\"\r\n                                          row.color = \"#yyy\"\r\n                                      }else if(json.rows[i].status === 2){\r\n                                          row.status = \"Ready\"\r\n                                          row.color = \"#ggg\"\r\n                                      }else{\r\n                                          row.status = \"Rejected\"\r\n                                          row.color = \"#rrr\"\r\n                                      }\r\n                                      row.observations = json.rows[i].observations\r\n                                    }\r\n                                    rows.push(row)\r\n                                }\r\n\r\n                                // Sort the array based on the second element\r\n                                rows.sort(function(first, second) {\r\n                                  return second.created_at.localeCompare(first.created_at);\r\n                                });\r\n                                const filterRow = [{incidence_number: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Reference\" onChange={(e) => this.filter(0, e.target.value)}/></div>, user: <div><input type=\"text\" className=\"filter__input\" placeholder=\"User\" onChange={(e) => this.filter(1, e.target.value)}/></div>, created_at: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Date\" onChange={(e) => this.filter(2,e.target.value)}/></div>, status: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Status\" onChange={(e) => this.filter(3,e.target.value)}/></div>}]\r\n                \r\n                                this.setState({data : rows, displayData: rows});\r\n                                await this.setState({filters : filterRow})\r\n\r\n                            })\r\n\r\n                        })\r\n\r\n                    })\r\n\r\n                })\r\n\r\n            })\r\n            \r\n        })\r\n\r\n      }\r\n    \r\n\r\n  }\r\n  \r\n\r\n  async filter(column, value){\r\n    let fd = this.state.filterData\r\n    fd[column] = value\r\n    await this.setState({filterData: fd})\r\n\r\n    let auxDisplayData = this.state.data\r\n    let resultData = []\r\n    let fil, exists = null\r\n    for(let i = 0; i < auxDisplayData.length; i++){\r\n      exists = true\r\n      for(let column = 0; column < Object.keys(auxDisplayData[i]).length-1; column ++){\r\n        \r\n        fil = Object.keys(auxDisplayData[i])[column]\r\n        if(fil === \"specifications\"){\r\n          fil = \"status\"\r\n        }\r\n        if(fil === \"status\"){\r\n          if(auxDisplayData[i][fil].props){\r\n            for(let p = 0; p < auxDisplayData[i][fil].props.children.length; p++){\r\n              if(auxDisplayData[i][fil].props.children[p].props.selected){\r\n                console.log(auxDisplayData[i][fil].props.children[p].props)\r\n                if(this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].props.children[p].props.children.includes(this.state.filterData[column])){\r\n                  exists = false\r\n                }\r\n              }\r\n            }\r\n          }else if(auxDisplayData[i][fil]){\r\n            if(this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])){\r\n              exists = false\r\n            }\r\n          }else{\r\n            if(this.state.filterData[column] !== \"\" && this.state.filterData[column]){\r\n              exists = false\r\n            }\r\n          }\r\n          \r\n        }else{\r\n          if(auxDisplayData[i][fil]){\r\n            if(this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])){\r\n              exists = false\r\n            }\r\n          }\r\n          \r\n        }\r\n        \r\n      }\r\n      if(exists){\r\n        resultData.push(auxDisplayData[i])\r\n      }\r\n    }\r\n    await this.setState({displayData: resultData})\r\n  }\r\n\r\n  async updateObservations(incidence_number, observations){\r\n    let observationsAux = this.state.observations\r\n    observationsAux[incidence_number] = observations\r\n    await this.setState({observations: observationsAux})\r\n    this.props.updateObservations(this.state.observations)\r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    \r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Reference</center>,\r\n        dataIndex: 'incidence_number',\r\n        key: 'incidence_number',\r\n        ...this.getColumnSearchProps('incidence_number'),\r\n        sorter:{\r\n          compare: (a, b) => a.incidence_number.localeCompare(b.incidence_number),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">User</center>,\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        ...this.getColumnSearchProps('user'),\r\n        sorter:{\r\n          compare: (a, b) => a.user.localeCompare(b.user),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Description</center>,\r\n        dataIndex: 'description',\r\n        key: 'description',\r\n        ...this.getColumnSearchProps('description'),\r\n        sorter:{\r\n          compare: (a, b) => a.description.localeCompare(b.description),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Date</div>,\r\n        dataIndex: 'created_at',\r\n        key: 'created_at',\r\n        ...this.getColumnSearchProps('created_at'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.created_at.localeCompare(b.created_at)},\r\n        },\r\n        \r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Actions</center>,\r\n        dataIndex: 'specifications',\r\n        key: 'specifications',\r\n        ...this.getColumnSearchProps('specifications'),\r\n        width: \"120px\"\r\n      },  \r\n      {\r\n        title: <center className=\"dataTable__header__text\">Observations</center>,\r\n        dataIndex: 'observations',\r\n        key: 'observations',\r\n        ...this.getColumnSearchProps('observations'),\r\n      },  \r\n      {\r\n        title: <center className=\"dataTable__header__text\">Accepted/Rejected Date</center>,\r\n        dataIndex: 'ar_date',\r\n        key: 'ar_date',\r\n        ...this.getColumnSearchProps('ar_date'),\r\n        width: \"250px\"\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Status</center>,\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        ...this.getColumnSearchProps('status'),\r\n        sorter:{\r\n          compare: (a, b) => a.status.localeCompare(b.status),\r\n        },\r\n        width: '160px'\r\n      },\r\n    ]\r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"estimatedDataTable__container\" style={{width:\"auto\"}}>\r\n        <Table className=\"customTable\" bordered = {true} columns={columns} dataSource={this.state.displayData} style={{ height: '540px' }} scroll={{y:437}} pagination={{disabled:true, defaultPageSize:5000}} size=\"small\"\r\n         rowClassName= {(record) => record.color.replace('#', '')}/>\r\n          <Table className=\"filter__table\" pagination={{disabled:true}} scroll={{y:437}} showHeader = {false} bordered = {true} columns={columns} dataSource={this.state.filters} size=\"small\"/> \r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QTrackerViewDataTable;"]},"metadata":{},"sourceType":"module"}