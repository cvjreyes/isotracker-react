{"ast":null,"code":"import { getDecreasedIndexes, getIncreasedIndexes } from \"./actionsOnIndexes.mjs\";\nimport { getListWithInsertedItems as sequenceStrategyInsert, getListWithRemovedItems as sequenceStrategyRemove } from \"./indexesSequence.mjs\";\nimport { getListWithInsertedItems as physicalStrategyInsert, getListWithRemovedItems as physicalStrategyRemove } from \"./physicallyIndexed.mjs\";\nvar alterStrategies = new Map([['indexesSequence', {\n  getListWithInsertedItems: sequenceStrategyInsert,\n  getListWithRemovedItems: sequenceStrategyRemove\n}], ['physicallyIndexed', {\n  getListWithInsertedItems: physicalStrategyInsert,\n  getListWithRemovedItems: physicalStrategyRemove\n}]]);\n\nvar alterUtilsFactory = function alterUtilsFactory(indexationStrategy) {\n  if (alterStrategies.has(indexationStrategy) === false) {\n    throw new Error(\"Alter strategy with ID '\".concat(indexationStrategy, \"' does not exist.\"));\n  }\n\n  return alterStrategies.get(indexationStrategy);\n};\n\nexport { getDecreasedIndexes, getIncreasedIndexes, alterUtilsFactory };","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/translations/maps/utils/index.mjs"],"names":["getDecreasedIndexes","getIncreasedIndexes","getListWithInsertedItems","sequenceStrategyInsert","getListWithRemovedItems","sequenceStrategyRemove","physicalStrategyInsert","physicalStrategyRemove","alterStrategies","Map","alterUtilsFactory","indexationStrategy","has","Error","concat","get"],"mappings":"AAKA,SAASA,mBAAT,EAA8BC,mBAA9B,QAAyD,wBAAzD;AACA,SAASC,wBAAwB,IAAIC,sBAArC,EAA6DC,uBAAuB,IAAIC,sBAAxF,QAAsH,uBAAtH;AACA,SAASH,wBAAwB,IAAII,sBAArC,EAA6DF,uBAAuB,IAAIG,sBAAxF,QAAsH,yBAAtH;AACA,IAAIC,eAAe,GAAG,IAAIC,GAAJ,CAAQ,CAAC,CAAC,iBAAD,EAAoB;AACjDP,EAAAA,wBAAwB,EAAEC,sBADuB;AAEjDC,EAAAA,uBAAuB,EAAEC;AAFwB,CAApB,CAAD,EAG1B,CAAC,mBAAD,EAAsB;AACxBH,EAAAA,wBAAwB,EAAEI,sBADF;AAExBF,EAAAA,uBAAuB,EAAEG;AAFD,CAAtB,CAH0B,CAAR,CAAtB;;AAQA,IAAIG,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,kBAA3B,EAA+C;AACrE,MAAIH,eAAe,CAACI,GAAhB,CAAoBD,kBAApB,MAA4C,KAAhD,EAAuD;AACrD,UAAM,IAAIE,KAAJ,CAAU,2BAA2BC,MAA3B,CAAkCH,kBAAlC,EAAsD,mBAAtD,CAAV,CAAN;AACD;;AAED,SAAOH,eAAe,CAACO,GAAhB,CAAoBJ,kBAApB,CAAP;AACD,CAND;;AAQA,SAASX,mBAAT,EAA8BC,mBAA9B,EAAmDS,iBAAnD","sourcesContent":["import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { getDecreasedIndexes, getIncreasedIndexes } from \"./actionsOnIndexes.mjs\";\nimport { getListWithInsertedItems as sequenceStrategyInsert, getListWithRemovedItems as sequenceStrategyRemove } from \"./indexesSequence.mjs\";\nimport { getListWithInsertedItems as physicalStrategyInsert, getListWithRemovedItems as physicalStrategyRemove } from \"./physicallyIndexed.mjs\";\nvar alterStrategies = new Map([['indexesSequence', {\n  getListWithInsertedItems: sequenceStrategyInsert,\n  getListWithRemovedItems: sequenceStrategyRemove\n}], ['physicallyIndexed', {\n  getListWithInsertedItems: physicalStrategyInsert,\n  getListWithRemovedItems: physicalStrategyRemove\n}]]);\n\nvar alterUtilsFactory = function alterUtilsFactory(indexationStrategy) {\n  if (alterStrategies.has(indexationStrategy) === false) {\n    throw new Error(\"Alter strategy with ID '\".concat(indexationStrategy, \"' does not exist.\"));\n  }\n\n  return alterStrategies.get(indexationStrategy);\n};\n\nexport { getDecreasedIndexes, getIncreasedIndexes, alterUtilsFactory };"]},"metadata":{},"sourceType":"module"}