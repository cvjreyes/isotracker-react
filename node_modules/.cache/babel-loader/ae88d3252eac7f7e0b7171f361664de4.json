{"ast":null,"code":"import moment from 'moment';\nimport * as C from \"../../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../../conditionRegisterer.mjs\";\nexport var CONDITION_NAME = 'date_tomorrow';\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @returns {boolean}\n */\n\nexport function condition(dataRow) {\n  var date = moment(dataRow.value, dataRow.meta.dateFormat);\n\n  if (!date.isValid()) {\n    return false;\n  }\n\n  return date.isSame(moment().subtract(-1, 'days').startOf('day'), 'd');\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_TOMORROW,\n  inputsCount: 0\n});","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/filters/condition/date/tomorrow.mjs"],"names":["moment","C","registerCondition","CONDITION_NAME","condition","dataRow","date","value","meta","dateFormat","isValid","isSame","subtract","startOf","name","FILTERS_CONDITIONS_TOMORROW","inputsCount"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,CAAZ,MAAmB,gCAAnB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAO,IAAIC,cAAc,GAAG,eAArB;AACP;AACA;AACA;AACA;;AAEA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AACjC,MAAIC,IAAI,GAAGN,MAAM,CAACK,OAAO,CAACE,KAAT,EAAgBF,OAAO,CAACG,IAAR,CAAaC,UAA7B,CAAjB;;AAEA,MAAI,CAACH,IAAI,CAACI,OAAL,EAAL,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,SAAOJ,IAAI,CAACK,MAAL,CAAYX,MAAM,GAAGY,QAAT,CAAkB,CAAC,CAAnB,EAAsB,MAAtB,EAA8BC,OAA9B,CAAsC,KAAtC,CAAZ,EAA0D,GAA1D,CAAP;AACD;AACDX,iBAAiB,CAACC,cAAD,EAAiBC,SAAjB,EAA4B;AAC3CU,EAAAA,IAAI,EAAEb,CAAC,CAACc,2BADmC;AAE3CC,EAAAA,WAAW,EAAE;AAF8B,CAA5B,CAAjB","sourcesContent":["import moment from 'moment';\nimport * as C from \"../../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../../conditionRegisterer.mjs\";\nexport var CONDITION_NAME = 'date_tomorrow';\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @returns {boolean}\n */\n\nexport function condition(dataRow) {\n  var date = moment(dataRow.value, dataRow.meta.dateFormat);\n\n  if (!date.isValid()) {\n    return false;\n  }\n\n  return date.isSame(moment().subtract(-1, 'days').startOf('day'), 'd');\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_TOMORROW,\n  inputsCount: 0\n});"]},"metadata":{},"sourceType":"module"}