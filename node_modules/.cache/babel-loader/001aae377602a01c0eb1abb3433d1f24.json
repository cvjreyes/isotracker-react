{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\isoControlHoldsDataTable\\\\isoControlHoldsDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\nimport IsoControlHoldsPopUp from '../isoControlHoldsPopUp/isoControlHoldsPopUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IsoControlHoldsDataTable extends React.Component {\n  constructor(props) {\n    this.update = this.update.bind(this);\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/modelledEstimatedHolds\", options).then(response => response.json()).then(async json => {\n      let rows = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        rows.push({\n          tag: json.rows[i].tag,\n          holds: /*#__PURE__*/_jsxDEV(IsoControlHoldsPopUp, {\n            tag: json.rows[i].tag,\n            updateData: this.state.updateData,\n            update: this.setState({\n              updateData: !this.state.updateData\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 52\n          }, this)\n        });\n        /*\r\n        if(!json.has_roles && !json.description){\r\n          row[\"holds\"] = <IsoControlHoldsPopUp tag={json.rows[i].tag} holds = {holds} descriptions = {descriptions}/>\r\n        }else if(json.has_roles && !json.description){\r\n          }else if(!json.has_roles && json.description){\r\n          }else{\r\n          }*/\n      }\n\n      const filterRow = [{\n        key: 0,\n        tag: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"TAG\",\n            onChange: e => this.filter(0, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 40\n        }, this)\n      }];\n      await this.setState({\n        data: rows,\n        displayData: rows,\n        filters: filterRow\n      });\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/modelledEstimatedHolds\", options).then(response => response.json()).then(async json => {\n        let rows = [];\n\n        for (let i = 0; i < json.rows.length; i++) {\n          rows.push({\n            tag: json.rows[i].tag,\n            holds: /*#__PURE__*/_jsxDEV(IsoControlHoldsPopUp, {\n              tag: json.rows[i].tag,\n              update: update.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 56\n            }, this)\n          });\n          /*\r\n          if(!json.has_roles && !json.description){\r\n            row[\"holds\"] = <IsoControlHoldsPopUp tag={json.rows[i].tag} holds = {holds} descriptions = {descriptions}/>\r\n          }else if(json.has_roles && !json.description){\r\n                }else if(!json.has_roles && json.description){\r\n                }else{\r\n                }*/\n        }\n\n        const filterRow = [{\n          key: 0,\n          tag: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"filter__input\",\n              placeholder: \"TAG\",\n              onChange: e => this.filter(0, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 44\n          }, this)\n        }];\n        await this.setState({\n          data: rows,\n          displayData: rows,\n          filters: filterRow\n        });\n      });\n    }\n  }\n\n  async update() {\n    this.setState({\n      updateData: !this.state.updateData\n    });\n  }\n\n  async filter(column, value) {\n    let fd = this.state.filterData;\n    fd[column] = value;\n    await this.setState({\n      filterData: fd\n    });\n    let auxDisplayData = this.state.data;\n    let resultData = [];\n    let fil,\n        exists = null;\n\n    for (let i = 0; i < auxDisplayData.length; i++) {\n      exists = true;\n\n      for (let column = 0; column < Object.keys(auxDisplayData[i]).length; column++) {\n        fil = Object.keys(auxDisplayData[i])[column];\n\n        if (auxDisplayData[i][fil]) {\n          if (this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])) {\n            exists = false;\n          }\n        }\n      }\n\n      if (exists) {\n        resultData.push(auxDisplayData[i]);\n      }\n    }\n\n    await this.setState({\n      displayData: resultData\n    });\n  }\n\n  render() {\n    const selectedRows = this.state.selectedRows;\n    const selectedRowsKeys = this.state.selectedRowsKeys;\n    const rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => ({\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n    const rowSelectionFilter = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => ({\n        disabled: true,\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n\n    if (localStorage.getItem(\"update\") === \"true\") {\n      this.setState({\n        selectedRows: [],\n        selectedRowsKeys: []\n      });\n      rowSelection.selectedRowKeys = [];\n      rowSelection.selectedRows = [];\n      localStorage.setItem(\"update\", false);\n    } else {\n      rowSelection.selectedRowKeys = selectedRowsKeys;\n      rowSelection.selectedRows = selectedRows;\n    }\n\n    let columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"TAG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'tag',\n      key: 'tag',\n      ...this.getColumnSearchProps('tag')\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Holds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'holds',\n      key: 'holds',\n      width: \"150px\"\n    }];\n    var totalElements = null;\n\n    if (this.state.data.length === 0) {\n      totalElements = null;\n    } else {\n      totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 24\n      }, this);\n    }\n\n    let table = null;\n\n    if (process.env.REACT_APP_PROGRESS === \"1\") {\n      table = /*#__PURE__*/_jsxDEV(Table, {\n        className: \"customTable\",\n        bordered: true,\n        columns: columns,\n        style: {\n          height: '540px'\n        },\n        dataSource: this.state.displayData,\n        scroll: {\n          y: 437\n        },\n        pagination: {\n          disabled: true,\n          defaultPageSize: 5000\n        },\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }, this);\n    } else {\n      table = /*#__PURE__*/_jsxDEV(Table, {\n        className: \"customTable\",\n        bordered: true,\n        rowSelection: {\n          type: 'checkbox',\n          ...rowSelection\n        },\n        columns: columns,\n        style: {\n          height: '540px'\n        },\n        dataSource: this.state.displayData,\n        scroll: {\n          y: 437\n        },\n        pagination: {\n          disabled: true,\n          defaultPageSize: 5000\n        },\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [table, /*#__PURE__*/_jsxDEV(Table, {\n          className: \"filter__table\",\n          pagination: {\n            disabled: true\n          },\n          scroll: {\n            y: 437\n          },\n          showHeader: false,\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.filters,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default IsoControlHoldsDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/isoControlHoldsDataTable/isoControlHoldsDataTable.js"],"names":["React","Table","IsoControlHoldsPopUp","IsoControlHoldsDataTable","Component","constructor","props","update","bind","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","i","length","push","tag","holds","state","updateData","setState","filterRow","key","e","filter","target","value","data","displayData","filters","componentDidUpdate","prevProps","prevState","column","fd","filterData","auxDisplayData","resultData","fil","exists","Object","keys","includes","render","selectedRows","selectedRowsKeys","rowSelection","onChange","selectedRowKeys","onSelectChange","getCheckboxProps","record","name","rowSelectionFilter","disabled","localStorage","getItem","setItem","columns","title","dataIndex","getColumnSearchProps","width","totalElements","position","bottom","left","table","REACT_APP_PROGRESS","height","y","defaultPageSize","type"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\nimport IsoControlHoldsPopUp from '../isoControlHoldsPopUp/isoControlHoldsPopUp';\r\n\r\nclass IsoControlHoldsDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    displayData: [],\r\n    filterData: [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    filters: [],\r\n    currentRole: this.props.currentRole,\r\n  };\r\n\r\n  constructor(props){\r\n    this.update = this.update.bind(this)\r\n  }\r\n\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/modelledEstimatedHolds\", options)\r\n    .then(response => response.json())\r\n    .then(async json => {\r\n      let rows = [] \r\n      for(let i = 0; i < json.rows.length; i++){\r\n          rows.push({tag: json.rows[i].tag, holds: <IsoControlHoldsPopUp tag = {json.rows[i].tag} updateData={this.state.updateData} update={this.setState({updateData: !this.state.updateData})}/>})\r\n          /*\r\n          if(!json.has_roles && !json.description){\r\n            row[\"holds\"] = <IsoControlHoldsPopUp tag={json.rows[i].tag} holds = {holds} descriptions = {descriptions}/>\r\n          }else if(json.has_roles && !json.description){\r\n\r\n          }else if(!json.has_roles && json.description){\r\n\r\n          }else{\r\n\r\n          }*/\r\n      }\r\n      const filterRow = [{key: 0, tag: <div><input type=\"text\" className=\"filter__input\" placeholder=\"TAG\" onChange={(e) => this.filter(0, e.target.value)}/></div>}]\r\n      await this.setState({data: rows, displayData: rows, filters: filterRow})\r\n    })\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState){\r\n\r\n    if(prevProps !== this.props){\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n    \r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/modelledEstimatedHolds\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n          let rows = [] \r\n          for(let i = 0; i < json.rows.length; i++){\r\n              rows.push({tag: json.rows[i].tag, holds: <IsoControlHoldsPopUp tag = {json.rows[i].tag} update={update.bind(this)}/>})\r\n              /*\r\n              if(!json.has_roles && !json.description){\r\n                row[\"holds\"] = <IsoControlHoldsPopUp tag={json.rows[i].tag} holds = {holds} descriptions = {descriptions}/>\r\n              }else if(json.has_roles && !json.description){\r\n    \r\n              }else if(!json.has_roles && json.description){\r\n    \r\n              }else{\r\n    \r\n              }*/\r\n          }\r\n          const filterRow = [{key: 0, tag: <div><input type=\"text\" className=\"filter__input\" placeholder=\"TAG\" onChange={(e) => this.filter(0, e.target.value)}/></div>}]\r\n          await this.setState({data: rows, displayData: rows, filters: filterRow})\r\n        })\r\n      }\r\n\r\n  }\r\n\r\n  async update(){\r\n    this.setState({updateData: !this.state.updateData})\r\n  }\r\n\r\n  async filter(column, value){\r\n    let fd = this.state.filterData\r\n    fd[column] = value\r\n    await this.setState({filterData: fd})\r\n\r\n    let auxDisplayData = this.state.data\r\n    let resultData = []\r\n    let fil, exists = null\r\n    for(let i = 0; i < auxDisplayData.length; i++){\r\n      exists = true\r\n      for(let column = 0; column < Object.keys(auxDisplayData[i]).length; column ++){\r\n          \r\n        fil = Object.keys(auxDisplayData[i])[column]\r\n       \r\n        if(auxDisplayData[i][fil]){\r\n            if(this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])){\r\n                exists = false\r\n            }\r\n        }\r\n        \r\n      }\r\n      if(exists){\r\n        resultData.push(auxDisplayData[i])\r\n      }\r\n    }\r\n    await this.setState({displayData: resultData})\r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    \r\n    render: text => \r\n    text\r\n      \r\n  });\r\n\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n    const selectedRows = this.state.selectedRows;\r\n    const selectedRowsKeys = this.state.selectedRowsKeys;\r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => (      \r\n        {\r\n        \r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n\r\n    const rowSelectionFilter = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => ({\r\n        disabled: true,\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n    if(localStorage.getItem(\"update\") === \"true\"){\r\n      this.setState({\r\n        selectedRows: [],\r\n        selectedRowsKeys: []\r\n      })\r\n      rowSelection.selectedRowKeys = []\r\n      rowSelection.selectedRows = []\r\n      localStorage.setItem(\"update\", false)\r\n    }else{\r\n      rowSelection.selectedRowKeys = selectedRowsKeys \r\n      rowSelection.selectedRows = selectedRows;\r\n    }  \r\n    \r\n    \r\n    let columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">TAG</center>,\r\n        dataIndex: 'tag',\r\n        key: 'tag',\r\n        ...this.getColumnSearchProps('tag'),\r\n        \r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Holds</div>,\r\n        dataIndex: 'holds',\r\n        key: 'holds',\r\n        width: \"150px\"\r\n      },\r\n    ];    \r\n\r\n    var totalElements = null\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    let table = null\r\n    if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n      table = <Table className=\"customTable\" bordered = {true} columns={columns} style={{ height: '540px' }}  dataSource={this.state.displayData} scroll={{y:437}} pagination={{disabled:true, defaultPageSize:5000}} size=\"small\"/>\r\n    }else{\r\n      table = <Table className=\"customTable\" bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} columns={columns} style={{ height: '540px' }}  dataSource={this.state.displayData} scroll={{y:437}} pagination={{disabled:true, defaultPageSize:5000}} size=\"small\"/>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"dataTable__container\">\r\n          {table}\r\n          <Table className=\"filter__table\" pagination={{disabled:true}}  scroll={{y:437}} showHeader = {false} bordered = {true} columns={columns} dataSource={this.state.filters} size=\"small\"/> \r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IsoControlHoldsDataTable;"]},"metadata":{},"sourceType":"module"}