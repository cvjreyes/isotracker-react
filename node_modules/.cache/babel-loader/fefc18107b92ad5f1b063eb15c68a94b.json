{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\issuedBtn\\\\issuedBtn.js\";\nimport Issued from \"../../assets/images/issued.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\n\nconst IssuedBtn = props => {\n  if (props.currentTab === \"Issued\") {\n    secureStorage.setItem(\"tab\", \"Issued\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"image\",\n      src: Issued,\n      alt: \"issued\",\n      style: {\n        width: \"40px\",\n        marginTop: \"20px\",\n        marginLeft: \"15x\",\n        float: \"left\"\n      },\n      onClick: () => {\n        props.onChange(\"Issued\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = IssuedBtn;\nexport default IssuedBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"IssuedBtn\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/issuedBtn/issuedBtn.js"],"names":["Issued","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","IssuedBtn","props","currentTab","setItem","width","marginTop","marginLeft","float","onChange"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,gCAAnB;;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AACI,MAAMC,aAAa,GAAGD,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAIE,UAAU,GAAG,iBAAjB;AAEA,IAAIC,aAAa,GAAG,IAAIF,aAAJ,CAAkBG,YAAlB,EAAgC;AAChDC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,GAAd,EAAmB;AACrBA,IAAAA,GAAG,GAAGP,QAAQ,CAACQ,MAAT,CAAgBD,GAAhB,EAAqBJ,UAArB,CAAN;AAEA,WAAOI,GAAG,CAACE,QAAJ,EAAP;AACH,GAL+C;AAMhDC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC5BA,IAAAA,IAAI,GAAGX,QAAQ,CAACY,GAAT,CAAaF,OAAb,CAAqBC,IAArB,EAA2BR,UAA3B,CAAP;AAEAQ,IAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,EAAP;AAEA,WAAOE,IAAP;AACH,GAZ+C;AAahDE,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBF,IAAjB,EAAuB;AAC5BA,IAAAA,IAAI,GAAGX,QAAQ,CAACY,GAAT,CAAaC,OAAb,CAAqBF,IAArB,EAA2BR,UAA3B,CAAP;AAEAQ,IAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,CAAcT,QAAQ,CAACc,GAAT,CAAaC,IAA3B,CAAP;AAEA,WAAOJ,IAAP;AACH;AAnB+C,CAAhC,CAApB;;AAsBJ,MAAMK,SAAS,GAAGC,KAAK,IAAG;AACtB,MAAGA,KAAK,CAACC,UAAN,KAAqB,QAAxB,EAAiC;AAC7Bd,IAAAA,aAAa,CAACe,OAAd,CAAsB,KAAtB,EAA6B,QAA7B;AACH;;AACD,sBACI;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,GAAG,EAAEpB,MAAzB;AAAiC,MAAA,GAAG,EAAC,QAArC;AAA8C,MAAA,KAAK,EAAE;AAACqB,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,SAAS,EAAC,MAAzB;AAAiCC,QAAAA,UAAU,EAAC,KAA5C;AAAmDC,QAAAA,KAAK,EAAC;AAAzD,OAArD;AAAuH,MAAA,OAAO,EAAE,MAAM;AAACN,QAAAA,KAAK,CAACO,QAAN,CAAe,QAAf;AAAyB;AAAhK;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CATD;;KAAMR,S;AAWN,eAAeA,SAAf","sourcesContent":["import Issued from \"../../assets/images/issued.png\"\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nconst IssuedBtn = props =>{\r\n    if(props.currentTab === \"Issued\"){\r\n        secureStorage.setItem(\"tab\", \"Issued\")\r\n    }\r\n    return(\r\n        <div>\r\n            <input type=\"image\" src={Issued} alt=\"issued\" style={{width:\"40px\", marginTop:\"20px\", marginLeft:\"15x\", float:\"left\"}} onClick={() => {props.onChange(\"Issued\")}} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IssuedBtn;"]},"metadata":{},"sourceType":"module"}