{"ast":null,"code":"import { arrayMap } from \"../../../helpers/array.mjs\";\n/**\n * Transform mappings after removal.\n *\n * @private\n * @param {Array} indexedValues List of values for particular indexes.\n * @param {Array} removedIndexes List of removed indexes.\n * @returns {Array} List with decreased indexes.\n */\n\nexport function getDecreasedIndexes(indexedValues, removedIndexes) {\n  return arrayMap(indexedValues, function (index) {\n    return index - removedIndexes.filter(function (removedIndex) {\n      return removedIndex < index;\n    }).length;\n  });\n}\n/**\n * Transform mappings after insertion.\n *\n * @private\n * @param {Array} indexedValues List of values for particular indexes.\n * @param {Array} insertedIndexes List of inserted indexes.\n * @returns {Array} List with increased indexes.\n */\n\nexport function getIncreasedIndexes(indexedValues, insertedIndexes) {\n  var firstInsertedIndex = insertedIndexes[0];\n  var amountOfIndexes = insertedIndexes.length;\n  return arrayMap(indexedValues, function (index) {\n    if (index >= firstInsertedIndex) {\n      return index + amountOfIndexes;\n    }\n\n    return index;\n  });\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/translations/maps/utils/actionsOnIndexes.mjs"],"names":["arrayMap","getDecreasedIndexes","indexedValues","removedIndexes","index","filter","removedIndex","length","getIncreasedIndexes","insertedIndexes","firstInsertedIndex","amountOfIndexes"],"mappings":"AACA,SAASA,QAAT,QAAyB,4BAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,mBAAT,CAA6BC,aAA7B,EAA4CC,cAA5C,EAA4D;AACjE,SAAOH,QAAQ,CAACE,aAAD,EAAgB,UAAUE,KAAV,EAAiB;AAC9C,WAAOA,KAAK,GAAGD,cAAc,CAACE,MAAf,CAAsB,UAAUC,YAAV,EAAwB;AAC3D,aAAOA,YAAY,GAAGF,KAAtB;AACD,KAFc,EAEZG,MAFH;AAGD,GAJc,CAAf;AAKD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,mBAAT,CAA6BN,aAA7B,EAA4CO,eAA5C,EAA6D;AAClE,MAAIC,kBAAkB,GAAGD,eAAe,CAAC,CAAD,CAAxC;AACA,MAAIE,eAAe,GAAGF,eAAe,CAACF,MAAtC;AACA,SAAOP,QAAQ,CAACE,aAAD,EAAgB,UAAUE,KAAV,EAAiB;AAC9C,QAAIA,KAAK,IAAIM,kBAAb,EAAiC;AAC/B,aAAON,KAAK,GAAGO,eAAf;AACD;;AAED,WAAOP,KAAP;AACD,GANc,CAAf;AAOD","sourcesContent":["import \"core-js/modules/es.array.filter.js\";\nimport { arrayMap } from \"../../../helpers/array.mjs\";\n/**\n * Transform mappings after removal.\n *\n * @private\n * @param {Array} indexedValues List of values for particular indexes.\n * @param {Array} removedIndexes List of removed indexes.\n * @returns {Array} List with decreased indexes.\n */\n\nexport function getDecreasedIndexes(indexedValues, removedIndexes) {\n  return arrayMap(indexedValues, function (index) {\n    return index - removedIndexes.filter(function (removedIndex) {\n      return removedIndex < index;\n    }).length;\n  });\n}\n/**\n * Transform mappings after insertion.\n *\n * @private\n * @param {Array} indexedValues List of values for particular indexes.\n * @param {Array} insertedIndexes List of inserted indexes.\n * @returns {Array} List with increased indexes.\n */\n\nexport function getIncreasedIndexes(indexedValues, insertedIndexes) {\n  var firstInsertedIndex = insertedIndexes[0];\n  var amountOfIndexes = insertedIndexes.length;\n  return arrayMap(indexedValues, function (index) {\n    if (index >= firstInsertedIndex) {\n      return index + amountOfIndexes;\n    }\n\n    return index;\n  });\n}"]},"metadata":{},"sourceType":"module"}