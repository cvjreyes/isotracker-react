{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\n\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n\n  _classApplyDescriptorSet(receiver, descriptor, value);\n\n  return value;\n}\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport hideColumnItem from \"./contextMenuItem/hideColumn.mjs\";\nimport showColumnItem from \"./contextMenuItem/showColumn.mjs\";\nimport { HidingMap } from \"../../translations/index.mjs\";\nHooks.getSingleton().register('beforeHideColumns');\nHooks.getSingleton().register('afterHideColumns');\nHooks.getSingleton().register('beforeUnhideColumns');\nHooks.getSingleton().register('afterUnhideColumns');\nexport var PLUGIN_KEY = 'hiddenColumns';\nexport var PLUGIN_PRIORITY = 310;\n/**\r\n * @plugin HiddenColumns\r\n *\r\n * @description\r\n * Plugin allows to hide certain columns. The hiding is achieved by not rendering the columns. The plugin not modifies\r\n * the source data and do not participate in data transformation (the shape of data returned by `getData*` methods stays intact).\r\n *\r\n * Possible plugin settings:\r\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\r\n *  * `columns` as `Array`\r\n *  * `indicators` as `Boolean` (default `false`).\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const container = document.getElementById('example');\r\n * const hot = new Handsontable(container, {\r\n *   data: getData(),\r\n *   hiddenColumns: {\r\n *     copyPasteEnabled: true,\r\n *     indicators: true,\r\n *     columns: [1, 2, 5]\r\n *   }\r\n * });\r\n *\r\n * // access to hiddenColumns plugin instance:\r\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\r\n *\r\n * // show single column\r\n * hiddenColumnsPlugin.showColumn(1);\r\n *\r\n * // show multiple columns\r\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\r\n *\r\n * // or as an array\r\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\r\n *\r\n * // hide single column\r\n * hiddenColumnsPlugin.hideColumn(1);\r\n *\r\n * // hide multiple columns\r\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\r\n *\r\n * // or as an array\r\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\r\n *\r\n * // rerender the table to see all changes\r\n * hot.render();\r\n * ```\r\n */\n\nvar _settings = /*#__PURE__*/new WeakMap();\n\nvar _hiddenColumnsMap = /*#__PURE__*/new WeakMap();\n\nexport var HiddenColumns = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(HiddenColumns, _BasePlugin);\n\n  var _super = _createSuper(HiddenColumns);\n\n  function HiddenColumns() {\n    var _this;\n\n    _classCallCheck(this, HiddenColumns);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _settings.set(_assertThisInitialized(_this), {\n      writable: true,\n      value: {}\n    });\n\n    _hiddenColumnsMap.set(_assertThisInitialized(_this), {\n      writable: true,\n      value: null\n    });\n\n    return _this;\n  }\n\n  _createClass(HiddenColumns, [{\n    key: \"isEnabled\",\n    value:\n    /**\r\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\r\n     * hook and if it returns `true` than the {@link HiddenColumns#enablePlugin} method is called.\r\n     *\r\n     * @returns {boolean}\r\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\r\n     * Enables the plugin functionality for this Handsontable instance.\r\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (isObject(pluginSettings)) {\n        _classPrivateFieldSet(this, _settings, pluginSettings);\n\n        if (isUndefined(pluginSettings.copyPasteEnabled)) {\n          pluginSettings.copyPasteEnabled = true;\n        }\n      }\n\n      _classPrivateFieldSet(this, _hiddenColumnsMap, new HidingMap());\n\n      _classPrivateFieldGet(this, _hiddenColumnsMap).addLocalHook('init', function () {\n        return _this2.onMapInit();\n      });\n\n      this.hot.columnIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _hiddenColumnsMap));\n      this.addHook('afterContextMenuDefaultOptions', function () {\n        return _this2.onAfterContextMenuDefaultOptions.apply(_this2, arguments);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyColWidth', function (width, col) {\n        return _this2.onModifyColWidth(width, col);\n      });\n      this.addHook('afterGetColHeader', function () {\n        return _this2.onAfterGetColHeader.apply(_this2, arguments);\n      });\n      this.addHook('modifyCopyableRange', function (ranges) {\n        return _this2.onModifyCopyableRange(ranges);\n      });\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\r\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\r\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\r\n     * Disables the plugin functionality for this Handsontable instance.\r\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hot.columnIndexMapper.unregisterMap(this.pluginName);\n\n      _classPrivateFieldSet(this, _settings, {});\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"disablePlugin\", this).call(this);\n\n      this.resetCellsMeta();\n    }\n    /**\r\n     * Shows the provided columns.\r\n     *\r\n     * @param {number[]} columns Array of visual column indexes.\r\n     */\n\n  }, {\n    key: \"showColumns\",\n    value: function showColumns(columns) {\n      var _this3 = this;\n\n      var currentHideConfig = this.getHiddenColumns();\n      var isValidConfig = this.isValidConfig(columns);\n      var destinationHideConfig = currentHideConfig;\n\n      var hidingMapValues = _classPrivateFieldGet(this, _hiddenColumnsMap).getValues().slice();\n\n      var isAnyColumnShowed = columns.length > 0;\n\n      if (isValidConfig && isAnyColumnShowed) {\n        var physicalColumns = columns.map(function (visualColumn) {\n          return _this3.hot.toPhysicalColumn(visualColumn);\n        }); // Preparing new values for hiding map.\n\n        arrayEach(physicalColumns, function (physicalColumn) {\n          hidingMapValues[physicalColumn] = false;\n        }); // Preparing new hiding config.\n\n        destinationHideConfig = arrayReduce(hidingMapValues, function (hiddenIndexes, isHidden, physicalIndex) {\n          if (isHidden) {\n            hiddenIndexes.push(_this3.hot.toVisualColumn(physicalIndex));\n          }\n\n          return hiddenIndexes;\n        }, []);\n      }\n\n      var continueHiding = this.hot.runHooks('beforeUnhideColumns', currentHideConfig, destinationHideConfig, isValidConfig && isAnyColumnShowed);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (isValidConfig && isAnyColumnShowed) {\n        _classPrivateFieldGet(this, _hiddenColumnsMap).setValues(hidingMapValues);\n      } // @TODO Should call once per render cycle, currently fired separately in different plugins\n\n\n      this.hot.view.adjustElementsSize();\n      this.hot.runHooks('afterUnhideColumns', currentHideConfig, destinationHideConfig, isValidConfig && isAnyColumnShowed, isValidConfig && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\r\n     * Shows a single column.\r\n     *\r\n     * @param {...number} column Visual column index.\r\n     */\n\n  }, {\n    key: \"showColumn\",\n    value: function showColumn() {\n      for (var _len2 = arguments.length, column = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        column[_key2] = arguments[_key2];\n      }\n\n      this.showColumns(column);\n    }\n    /**\r\n     * Hides the columns provided in the array.\r\n     *\r\n     * @param {number[]} columns Array of visual column indexes.\r\n     */\n\n  }, {\n    key: \"hideColumns\",\n    value: function hideColumns(columns) {\n      var _this4 = this;\n\n      var currentHideConfig = this.getHiddenColumns();\n      var isConfigValid = this.isValidConfig(columns);\n      var destinationHideConfig = currentHideConfig;\n\n      if (isConfigValid) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(columns)));\n      }\n\n      var continueHiding = this.hot.runHooks('beforeHideColumns', currentHideConfig, destinationHideConfig, isConfigValid);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (isConfigValid) {\n        this.hot.batchExecution(function () {\n          arrayEach(columns, function (visualColumn) {\n            _classPrivateFieldGet(_this4, _hiddenColumnsMap).setValueAtIndex(_this4.hot.toPhysicalColumn(visualColumn), true);\n          });\n        }, true);\n      }\n\n      this.hot.runHooks('afterHideColumns', currentHideConfig, destinationHideConfig, isConfigValid, isConfigValid && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\r\n     * Hides a single column.\r\n     *\r\n     * @param {...number} column Visual column index.\r\n     */\n\n  }, {\n    key: \"hideColumn\",\n    value: function hideColumn() {\n      for (var _len3 = arguments.length, column = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        column[_key3] = arguments[_key3];\n      }\n\n      this.hideColumns(column);\n    }\n    /**\r\n     * Returns an array of visual indexes of hidden columns.\r\n     *\r\n     * @returns {number[]}\r\n     */\n\n  }, {\n    key: \"getHiddenColumns\",\n    value: function getHiddenColumns() {\n      var _this5 = this;\n\n      return arrayMap(_classPrivateFieldGet(this, _hiddenColumnsMap).getHiddenIndexes(), function (physicalColumnIndex) {\n        return _this5.hot.toVisualColumn(physicalColumnIndex);\n      });\n    }\n    /**\r\n     * Checks if the provided column is hidden.\r\n     *\r\n     * @param {number} column Visual column index.\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(column) {\n      return _classPrivateFieldGet(this, _hiddenColumnsMap).getValueAtIndex(this.hot.toPhysicalColumn(column)) || false;\n    }\n    /**\r\n     * Get if trim config is valid. Check whether all of the provided column indexes are within the bounds of the table.\r\n     *\r\n     * @param {Array} hiddenColumns List of hidden column indexes.\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isValidConfig\",\n    value: function isValidConfig(hiddenColumns) {\n      var nrOfColumns = this.hot.countCols();\n\n      if (Array.isArray(hiddenColumns) && hiddenColumns.length > 0) {\n        return hiddenColumns.every(function (visualColumn) {\n          return Number.isInteger(visualColumn) && visualColumn >= 0 && visualColumn < nrOfColumns;\n        });\n      }\n\n      return false;\n    }\n    /**\r\n     * Reset all rendered cells meta.\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipColumnOnPaste = false;\n        }\n      });\n    }\n    /**\r\n     * Adds the additional column width for the hidden column indicators.\r\n     *\r\n     * @private\r\n     * @param {number|undefined} width Column width.\r\n     * @param {number} column Visual column index.\r\n     * @returns {number}\r\n     */\n\n  }, {\n    key: \"onModifyColWidth\",\n    value: function onModifyColWidth(width, column) {\n      // Hook is triggered internally only for the visible columns. Conditional will be handled for the API\n      // calls of the `getColWidth` function on not visible indexes.\n      if (this.isHidden(column)) {\n        return 0;\n      }\n\n      if (_classPrivateFieldGet(this, _settings).indicators && (this.isHidden(column + 1) || this.isHidden(column - 1))) {\n        // Add additional space for hidden column indicator.\n        if (typeof width === 'number' && this.hot.hasColHeaders()) {\n          return width + 15;\n        }\n      }\n    }\n    /**\r\n     * Sets the copy-related cell meta.\r\n     *\r\n     * @private\r\n     * @param {number} row Visual row index.\r\n     * @param {number} column Visual column index.\r\n     * @param {object} cellProperties Object containing the cell properties.\r\n     */\n\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, column, cellProperties) {\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled === false && this.isHidden(column)) {\n        // Cell property handled by the `Autofill` and the `CopyPaste` plugins.\n        cellProperties.skipColumnOnPaste = true;\n      }\n\n      if (this.isHidden(column - 1)) {\n        cellProperties.className = cellProperties.className || '';\n\n        if (cellProperties.className.indexOf('afterHiddenColumn') === -1) {\n          cellProperties.className += ' afterHiddenColumn';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n\n        if (classArr.length > 0) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenColumn');\n\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\r\n     * Modifies the copyable range, accordingly to the provided config.\r\n     *\r\n     * @private\r\n     * @param {Array} ranges An array of objects defining copyable cells.\r\n     * @returns {Array}\r\n     */\n\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this; // Ranges shouldn't be modified when `copyPasteEnabled` option is set to `true` (by default).\n\n\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled) {\n        return ranges;\n      }\n\n      var newRanges = [];\n\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startCol, range.endCol, function (visualColumn) {\n          if (_this6.isHidden(visualColumn)) {\n            if (!isHidden) {\n              pushRange(range.startRow, range.endRow, rangeStart, visualColumn - 1);\n            }\n\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = visualColumn;\n            }\n\n            if (visualColumn === range.endCol) {\n              pushRange(range.startRow, range.endRow, rangeStart, visualColumn);\n            }\n\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\r\n     * Adds the needed classes to the headers.\r\n     *\r\n     * @private\r\n     * @param {number} column Visual column index.\r\n     * @param {HTMLElement} TH Header's TH element.\r\n     */\n\n  }, {\n    key: \"onAfterGetColHeader\",\n    value: function onAfterGetColHeader(column, TH) {\n      if (!_classPrivateFieldGet(this, _settings).indicators || column < 0) {\n        return;\n      }\n\n      var classList = [];\n\n      if (column >= 1 && this.isHidden(column - 1)) {\n        classList.push('afterHiddenColumn');\n      }\n\n      if (column < this.hot.countCols() - 1 && this.isHidden(column + 1)) {\n        classList.push('beforeHiddenColumn');\n      }\n\n      addClass(TH, classList);\n    }\n    /**\r\n     * Add Show-hide columns to context menu.\r\n     *\r\n     * @private\r\n     * @param {object} options An array of objects containing information about the pre-defined Context Menu items.\r\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideColumnItem(this), showColumnItem(this));\n    }\n    /**\r\n     * On map initialized hook callback.\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"onMapInit\",\n    value: function onMapInit() {\n      if (Array.isArray(_classPrivateFieldGet(this, _settings).columns)) {\n        this.hideColumns(_classPrivateFieldGet(this, _settings).columns);\n      }\n    }\n    /**\r\n     * Destroys the plugin instance.\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _classPrivateFieldSet(this, _settings, null);\n\n      _classPrivateFieldSet(this, _hiddenColumnsMap, null);\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n    /**\r\n     * Cached plugin settings.\r\n     *\r\n     * @private\r\n     * @type {object}\r\n     */\n\n  }]);\n\n  return HiddenColumns;\n}(BasePlugin);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/hiddenColumns/hiddenColumns.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","call","value","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_classPrivateFieldGet","privateMap","_classExtractFieldDescriptor","_classApplyDescriptorGet","_classPrivateFieldSet","_classApplyDescriptorSet","action","has","set","BasePlugin","addClass","rangeEach","arrayEach","arrayMap","arrayReduce","isObject","isUndefined","SEPARATOR","Hooks","hideColumnItem","showColumnItem","HidingMap","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","_settings","WeakMap","_hiddenColumnsMap","HiddenColumns","_BasePlugin","_super","_this","_len","args","Array","_key","concat","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","pluginSettings","copyPasteEnabled","addLocalHook","onMapInit","columnIndexMapper","registerMap","pluginName","addHook","onAfterContextMenuDefaultOptions","row","col","cellProperties","onAfterGetCellMeta","width","onModifyColWidth","onAfterGetColHeader","ranges","onModifyCopyableRange","updatePlugin","disablePlugin","unregisterMap","resetCellsMeta","showColumns","columns","_this3","currentHideConfig","getHiddenColumns","isValidConfig","destinationHideConfig","hidingMapValues","getValues","slice","isAnyColumnShowed","physicalColumns","map","visualColumn","toPhysicalColumn","physicalColumn","hiddenIndexes","isHidden","physicalIndex","push","toVisualColumn","continueHiding","runHooks","setValues","view","adjustElementsSize","showColumn","_len2","column","_key2","hideColumns","_this4","isConfigValid","from","Set","batchExecution","setValueAtIndex","hideColumn","_len3","_key3","_this5","getHiddenIndexes","physicalColumnIndex","getValueAtIndex","hiddenColumns","nrOfColumns","countCols","isArray","every","Number","isInteger","getCellsMeta","meta","skipColumnOnPaste","indicators","hasColHeaders","className","indexOf","classArr","split","containAfterHiddenColumn","splice","join","_this6","newRanges","pushRange","startRow","endRow","startCol","endCol","range","rangeStart","TH","classList","options","items","name","destroy"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\r\n\r\nimport \"core-js/modules/es.array.concat.js\";\r\nimport \"core-js/modules/es.array.slice.js\";\r\nimport \"core-js/modules/es.array.map.js\";\r\nimport \"core-js/modules/es.array.from.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.set.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\nimport \"core-js/modules/es.number.is-integer.js\";\r\nimport \"core-js/modules/es.number.constructor.js\";\r\nimport \"core-js/modules/es.array.index-of.js\";\r\nimport \"core-js/modules/es.regexp.exec.js\";\r\nimport \"core-js/modules/es.string.split.js\";\r\nimport \"core-js/modules/es.array.splice.js\";\r\nimport \"core-js/modules/es.array.join.js\";\r\nimport \"core-js/modules/es.weak-map.js\";\r\nimport \"core-js/modules/es.object.set-prototype-of.js\";\r\nimport \"core-js/modules/es.object.get-prototype-of.js\";\r\nimport \"core-js/modules/es.reflect.construct.js\";\r\nimport \"core-js/modules/es.reflect.get.js\";\r\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.symbol.iterator.js\";\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\r\n\r\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\r\n\r\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\r\n\r\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\r\n\r\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\r\n\r\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\r\n\r\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\r\n\r\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\r\n\r\nimport { BasePlugin } from \"../base/index.mjs\";\r\nimport { addClass } from \"../../helpers/dom/element.mjs\";\r\nimport { rangeEach } from \"../../helpers/number.mjs\";\r\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\r\nimport { isObject } from \"../../helpers/object.mjs\";\r\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\r\nimport { SEPARATOR } from \"../contextMenu/predefinedItems.mjs\";\r\nimport Hooks from \"../../pluginHooks.mjs\";\r\nimport hideColumnItem from \"./contextMenuItem/hideColumn.mjs\";\r\nimport showColumnItem from \"./contextMenuItem/showColumn.mjs\";\r\nimport { HidingMap } from \"../../translations/index.mjs\";\r\nHooks.getSingleton().register('beforeHideColumns');\r\nHooks.getSingleton().register('afterHideColumns');\r\nHooks.getSingleton().register('beforeUnhideColumns');\r\nHooks.getSingleton().register('afterUnhideColumns');\r\nexport var PLUGIN_KEY = 'hiddenColumns';\r\nexport var PLUGIN_PRIORITY = 310;\r\n/**\r\n * @plugin HiddenColumns\r\n *\r\n * @description\r\n * Plugin allows to hide certain columns. The hiding is achieved by not rendering the columns. The plugin not modifies\r\n * the source data and do not participate in data transformation (the shape of data returned by `getData*` methods stays intact).\r\n *\r\n * Possible plugin settings:\r\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\r\n *  * `columns` as `Array`\r\n *  * `indicators` as `Boolean` (default `false`).\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const container = document.getElementById('example');\r\n * const hot = new Handsontable(container, {\r\n *   data: getData(),\r\n *   hiddenColumns: {\r\n *     copyPasteEnabled: true,\r\n *     indicators: true,\r\n *     columns: [1, 2, 5]\r\n *   }\r\n * });\r\n *\r\n * // access to hiddenColumns plugin instance:\r\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\r\n *\r\n * // show single column\r\n * hiddenColumnsPlugin.showColumn(1);\r\n *\r\n * // show multiple columns\r\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\r\n *\r\n * // or as an array\r\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\r\n *\r\n * // hide single column\r\n * hiddenColumnsPlugin.hideColumn(1);\r\n *\r\n * // hide multiple columns\r\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\r\n *\r\n * // or as an array\r\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\r\n *\r\n * // rerender the table to see all changes\r\n * hot.render();\r\n * ```\r\n */\r\n\r\nvar _settings = /*#__PURE__*/new WeakMap();\r\n\r\nvar _hiddenColumnsMap = /*#__PURE__*/new WeakMap();\r\n\r\nexport var HiddenColumns = /*#__PURE__*/function (_BasePlugin) {\r\n  _inherits(HiddenColumns, _BasePlugin);\r\n\r\n  var _super = _createSuper(HiddenColumns);\r\n\r\n  function HiddenColumns() {\r\n    var _this;\r\n\r\n    _classCallCheck(this, HiddenColumns);\r\n\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    _this = _super.call.apply(_super, [this].concat(args));\r\n\r\n    _settings.set(_assertThisInitialized(_this), {\r\n      writable: true,\r\n      value: {}\r\n    });\r\n\r\n    _hiddenColumnsMap.set(_assertThisInitialized(_this), {\r\n      writable: true,\r\n      value: null\r\n    });\r\n\r\n    return _this;\r\n  }\r\n\r\n  _createClass(HiddenColumns, [{\r\n    key: \"isEnabled\",\r\n    value:\r\n    /**\r\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\r\n     * hook and if it returns `true` than the {@link HiddenColumns#enablePlugin} method is called.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    function isEnabled() {\r\n      return !!this.hot.getSettings()[PLUGIN_KEY];\r\n    }\r\n    /**\r\n     * Enables the plugin functionality for this Handsontable instance.\r\n     */\r\n\r\n  }, {\r\n    key: \"enablePlugin\",\r\n    value: function enablePlugin() {\r\n      var _this2 = this;\r\n\r\n      if (this.enabled) {\r\n        return;\r\n      }\r\n\r\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\r\n\r\n      if (isObject(pluginSettings)) {\r\n        _classPrivateFieldSet(this, _settings, pluginSettings);\r\n\r\n        if (isUndefined(pluginSettings.copyPasteEnabled)) {\r\n          pluginSettings.copyPasteEnabled = true;\r\n        }\r\n      }\r\n\r\n      _classPrivateFieldSet(this, _hiddenColumnsMap, new HidingMap());\r\n\r\n      _classPrivateFieldGet(this, _hiddenColumnsMap).addLocalHook('init', function () {\r\n        return _this2.onMapInit();\r\n      });\r\n\r\n      this.hot.columnIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _hiddenColumnsMap));\r\n      this.addHook('afterContextMenuDefaultOptions', function () {\r\n        return _this2.onAfterContextMenuDefaultOptions.apply(_this2, arguments);\r\n      });\r\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\r\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\r\n      });\r\n      this.addHook('modifyColWidth', function (width, col) {\r\n        return _this2.onModifyColWidth(width, col);\r\n      });\r\n      this.addHook('afterGetColHeader', function () {\r\n        return _this2.onAfterGetColHeader.apply(_this2, arguments);\r\n      });\r\n      this.addHook('modifyCopyableRange', function (ranges) {\r\n        return _this2.onModifyCopyableRange(ranges);\r\n      });\r\n\r\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"enablePlugin\", this).call(this);\r\n    }\r\n    /**\r\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\r\n     */\r\n\r\n  }, {\r\n    key: \"updatePlugin\",\r\n    value: function updatePlugin() {\r\n      this.disablePlugin();\r\n      this.enablePlugin();\r\n\r\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"updatePlugin\", this).call(this);\r\n    }\r\n    /**\r\n     * Disables the plugin functionality for this Handsontable instance.\r\n     */\r\n\r\n  }, {\r\n    key: \"disablePlugin\",\r\n    value: function disablePlugin() {\r\n      this.hot.columnIndexMapper.unregisterMap(this.pluginName);\r\n\r\n      _classPrivateFieldSet(this, _settings, {});\r\n\r\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"disablePlugin\", this).call(this);\r\n\r\n      this.resetCellsMeta();\r\n    }\r\n    /**\r\n     * Shows the provided columns.\r\n     *\r\n     * @param {number[]} columns Array of visual column indexes.\r\n     */\r\n\r\n  }, {\r\n    key: \"showColumns\",\r\n    value: function showColumns(columns) {\r\n      var _this3 = this;\r\n\r\n      var currentHideConfig = this.getHiddenColumns();\r\n      var isValidConfig = this.isValidConfig(columns);\r\n      var destinationHideConfig = currentHideConfig;\r\n\r\n      var hidingMapValues = _classPrivateFieldGet(this, _hiddenColumnsMap).getValues().slice();\r\n\r\n      var isAnyColumnShowed = columns.length > 0;\r\n\r\n      if (isValidConfig && isAnyColumnShowed) {\r\n        var physicalColumns = columns.map(function (visualColumn) {\r\n          return _this3.hot.toPhysicalColumn(visualColumn);\r\n        }); // Preparing new values for hiding map.\r\n\r\n        arrayEach(physicalColumns, function (physicalColumn) {\r\n          hidingMapValues[physicalColumn] = false;\r\n        }); // Preparing new hiding config.\r\n\r\n        destinationHideConfig = arrayReduce(hidingMapValues, function (hiddenIndexes, isHidden, physicalIndex) {\r\n          if (isHidden) {\r\n            hiddenIndexes.push(_this3.hot.toVisualColumn(physicalIndex));\r\n          }\r\n\r\n          return hiddenIndexes;\r\n        }, []);\r\n      }\r\n\r\n      var continueHiding = this.hot.runHooks('beforeUnhideColumns', currentHideConfig, destinationHideConfig, isValidConfig && isAnyColumnShowed);\r\n\r\n      if (continueHiding === false) {\r\n        return;\r\n      }\r\n\r\n      if (isValidConfig && isAnyColumnShowed) {\r\n        _classPrivateFieldGet(this, _hiddenColumnsMap).setValues(hidingMapValues);\r\n      } // @TODO Should call once per render cycle, currently fired separately in different plugins\r\n\r\n\r\n      this.hot.view.adjustElementsSize();\r\n      this.hot.runHooks('afterUnhideColumns', currentHideConfig, destinationHideConfig, isValidConfig && isAnyColumnShowed, isValidConfig && destinationHideConfig.length < currentHideConfig.length);\r\n    }\r\n    /**\r\n     * Shows a single column.\r\n     *\r\n     * @param {...number} column Visual column index.\r\n     */\r\n\r\n  }, {\r\n    key: \"showColumn\",\r\n    value: function showColumn() {\r\n      for (var _len2 = arguments.length, column = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        column[_key2] = arguments[_key2];\r\n      }\r\n\r\n      this.showColumns(column);\r\n    }\r\n    /**\r\n     * Hides the columns provided in the array.\r\n     *\r\n     * @param {number[]} columns Array of visual column indexes.\r\n     */\r\n\r\n  }, {\r\n    key: \"hideColumns\",\r\n    value: function hideColumns(columns) {\r\n      var _this4 = this;\r\n\r\n      var currentHideConfig = this.getHiddenColumns();\r\n      var isConfigValid = this.isValidConfig(columns);\r\n      var destinationHideConfig = currentHideConfig;\r\n\r\n      if (isConfigValid) {\r\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(columns)));\r\n      }\r\n\r\n      var continueHiding = this.hot.runHooks('beforeHideColumns', currentHideConfig, destinationHideConfig, isConfigValid);\r\n\r\n      if (continueHiding === false) {\r\n        return;\r\n      }\r\n\r\n      if (isConfigValid) {\r\n        this.hot.batchExecution(function () {\r\n          arrayEach(columns, function (visualColumn) {\r\n            _classPrivateFieldGet(_this4, _hiddenColumnsMap).setValueAtIndex(_this4.hot.toPhysicalColumn(visualColumn), true);\r\n          });\r\n        }, true);\r\n      }\r\n\r\n      this.hot.runHooks('afterHideColumns', currentHideConfig, destinationHideConfig, isConfigValid, isConfigValid && destinationHideConfig.length > currentHideConfig.length);\r\n    }\r\n    /**\r\n     * Hides a single column.\r\n     *\r\n     * @param {...number} column Visual column index.\r\n     */\r\n\r\n  }, {\r\n    key: \"hideColumn\",\r\n    value: function hideColumn() {\r\n      for (var _len3 = arguments.length, column = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n        column[_key3] = arguments[_key3];\r\n      }\r\n\r\n      this.hideColumns(column);\r\n    }\r\n    /**\r\n     * Returns an array of visual indexes of hidden columns.\r\n     *\r\n     * @returns {number[]}\r\n     */\r\n\r\n  }, {\r\n    key: \"getHiddenColumns\",\r\n    value: function getHiddenColumns() {\r\n      var _this5 = this;\r\n\r\n      return arrayMap(_classPrivateFieldGet(this, _hiddenColumnsMap).getHiddenIndexes(), function (physicalColumnIndex) {\r\n        return _this5.hot.toVisualColumn(physicalColumnIndex);\r\n      });\r\n    }\r\n    /**\r\n     * Checks if the provided column is hidden.\r\n     *\r\n     * @param {number} column Visual column index.\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"isHidden\",\r\n    value: function isHidden(column) {\r\n      return _classPrivateFieldGet(this, _hiddenColumnsMap).getValueAtIndex(this.hot.toPhysicalColumn(column)) || false;\r\n    }\r\n    /**\r\n     * Get if trim config is valid. Check whether all of the provided column indexes are within the bounds of the table.\r\n     *\r\n     * @param {Array} hiddenColumns List of hidden column indexes.\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"isValidConfig\",\r\n    value: function isValidConfig(hiddenColumns) {\r\n      var nrOfColumns = this.hot.countCols();\r\n\r\n      if (Array.isArray(hiddenColumns) && hiddenColumns.length > 0) {\r\n        return hiddenColumns.every(function (visualColumn) {\r\n          return Number.isInteger(visualColumn) && visualColumn >= 0 && visualColumn < nrOfColumns;\r\n        });\r\n      }\r\n\r\n      return false;\r\n    }\r\n    /**\r\n     * Reset all rendered cells meta.\r\n     *\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: \"resetCellsMeta\",\r\n    value: function resetCellsMeta() {\r\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\r\n        if (meta) {\r\n          meta.skipColumnOnPaste = false;\r\n        }\r\n      });\r\n    }\r\n    /**\r\n     * Adds the additional column width for the hidden column indicators.\r\n     *\r\n     * @private\r\n     * @param {number|undefined} width Column width.\r\n     * @param {number} column Visual column index.\r\n     * @returns {number}\r\n     */\r\n\r\n  }, {\r\n    key: \"onModifyColWidth\",\r\n    value: function onModifyColWidth(width, column) {\r\n      // Hook is triggered internally only for the visible columns. Conditional will be handled for the API\r\n      // calls of the `getColWidth` function on not visible indexes.\r\n      if (this.isHidden(column)) {\r\n        return 0;\r\n      }\r\n\r\n      if (_classPrivateFieldGet(this, _settings).indicators && (this.isHidden(column + 1) || this.isHidden(column - 1))) {\r\n        // Add additional space for hidden column indicator.\r\n        if (typeof width === 'number' && this.hot.hasColHeaders()) {\r\n          return width + 15;\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Sets the copy-related cell meta.\r\n     *\r\n     * @private\r\n     * @param {number} row Visual row index.\r\n     * @param {number} column Visual column index.\r\n     * @param {object} cellProperties Object containing the cell properties.\r\n     */\r\n\r\n  }, {\r\n    key: \"onAfterGetCellMeta\",\r\n    value: function onAfterGetCellMeta(row, column, cellProperties) {\r\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled === false && this.isHidden(column)) {\r\n        // Cell property handled by the `Autofill` and the `CopyPaste` plugins.\r\n        cellProperties.skipColumnOnPaste = true;\r\n      }\r\n\r\n      if (this.isHidden(column - 1)) {\r\n        cellProperties.className = cellProperties.className || '';\r\n\r\n        if (cellProperties.className.indexOf('afterHiddenColumn') === -1) {\r\n          cellProperties.className += ' afterHiddenColumn';\r\n        }\r\n      } else if (cellProperties.className) {\r\n        var classArr = cellProperties.className.split(' ');\r\n\r\n        if (classArr.length > 0) {\r\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenColumn');\r\n\r\n          if (containAfterHiddenColumn > -1) {\r\n            classArr.splice(containAfterHiddenColumn, 1);\r\n          }\r\n\r\n          cellProperties.className = classArr.join(' ');\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Modifies the copyable range, accordingly to the provided config.\r\n     *\r\n     * @private\r\n     * @param {Array} ranges An array of objects defining copyable cells.\r\n     * @returns {Array}\r\n     */\r\n\r\n  }, {\r\n    key: \"onModifyCopyableRange\",\r\n    value: function onModifyCopyableRange(ranges) {\r\n      var _this6 = this;\r\n\r\n      // Ranges shouldn't be modified when `copyPasteEnabled` option is set to `true` (by default).\r\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled) {\r\n        return ranges;\r\n      }\r\n\r\n      var newRanges = [];\r\n\r\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\r\n        newRanges.push({\r\n          startRow: startRow,\r\n          endRow: endRow,\r\n          startCol: startCol,\r\n          endCol: endCol\r\n        });\r\n      };\r\n\r\n      arrayEach(ranges, function (range) {\r\n        var isHidden = true;\r\n        var rangeStart = 0;\r\n        rangeEach(range.startCol, range.endCol, function (visualColumn) {\r\n          if (_this6.isHidden(visualColumn)) {\r\n            if (!isHidden) {\r\n              pushRange(range.startRow, range.endRow, rangeStart, visualColumn - 1);\r\n            }\r\n\r\n            isHidden = true;\r\n          } else {\r\n            if (isHidden) {\r\n              rangeStart = visualColumn;\r\n            }\r\n\r\n            if (visualColumn === range.endCol) {\r\n              pushRange(range.startRow, range.endRow, rangeStart, visualColumn);\r\n            }\r\n\r\n            isHidden = false;\r\n          }\r\n        });\r\n      });\r\n      return newRanges;\r\n    }\r\n    /**\r\n     * Adds the needed classes to the headers.\r\n     *\r\n     * @private\r\n     * @param {number} column Visual column index.\r\n     * @param {HTMLElement} TH Header's TH element.\r\n     */\r\n\r\n  }, {\r\n    key: \"onAfterGetColHeader\",\r\n    value: function onAfterGetColHeader(column, TH) {\r\n      if (!_classPrivateFieldGet(this, _settings).indicators || column < 0) {\r\n        return;\r\n      }\r\n\r\n      var classList = [];\r\n\r\n      if (column >= 1 && this.isHidden(column - 1)) {\r\n        classList.push('afterHiddenColumn');\r\n      }\r\n\r\n      if (column < this.hot.countCols() - 1 && this.isHidden(column + 1)) {\r\n        classList.push('beforeHiddenColumn');\r\n      }\r\n\r\n      addClass(TH, classList);\r\n    }\r\n    /**\r\n     * Add Show-hide columns to context menu.\r\n     *\r\n     * @private\r\n     * @param {object} options An array of objects containing information about the pre-defined Context Menu items.\r\n     */\r\n\r\n  }, {\r\n    key: \"onAfterContextMenuDefaultOptions\",\r\n    value: function onAfterContextMenuDefaultOptions(options) {\r\n      options.items.push({\r\n        name: SEPARATOR\r\n      }, hideColumnItem(this), showColumnItem(this));\r\n    }\r\n    /**\r\n     * On map initialized hook callback.\r\n     *\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: \"onMapInit\",\r\n    value: function onMapInit() {\r\n      if (Array.isArray(_classPrivateFieldGet(this, _settings).columns)) {\r\n        this.hideColumns(_classPrivateFieldGet(this, _settings).columns);\r\n      }\r\n    }\r\n    /**\r\n     * Destroys the plugin instance.\r\n     */\r\n\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      _classPrivateFieldSet(this, _settings, null);\r\n\r\n      _classPrivateFieldSet(this, _hiddenColumnsMap, null);\r\n\r\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"destroy\", this).call(this);\r\n    }\r\n  }], [{\r\n    key: \"PLUGIN_KEY\",\r\n    get: function get() {\r\n      return PLUGIN_KEY;\r\n    }\r\n  }, {\r\n    key: \"PLUGIN_PRIORITY\",\r\n    get: function get() {\r\n      return PLUGIN_PRIORITY;\r\n    }\r\n    /**\r\n     * Cached plugin settings.\r\n     *\r\n     * @private\r\n     * @type {object}\r\n     */\r\n\r\n  }]);\r\n\r\n  return HiddenColumns;\r\n}(BasePlugin);"]},"metadata":{},"sourceType":"module"}