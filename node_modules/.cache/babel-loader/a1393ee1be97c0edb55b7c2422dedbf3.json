{"ast":null,"code":"import staticRegister from \"../utils/staticRegister.mjs\";\n\nvar _staticRegister = staticRegister('renderers'),\n    register = _staticRegister.register,\n    getItem = _staticRegister.getItem,\n    hasItem = _staticRegister.hasItem,\n    getNames = _staticRegister.getNames,\n    getValues = _staticRegister.getValues;\n/**\r\n * Retrieve renderer function.\r\n *\r\n * @param {string} name Renderer identification.\r\n * @returns {Function} Returns renderer function.\r\n */\n\n\nfunction _getItem(name) {\n  if (typeof name === 'function') {\n    return name;\n  }\n\n  if (!hasItem(name)) {\n    throw Error(\"No registered renderer found under \\\"\".concat(name, \"\\\" name\"));\n  }\n\n  return getItem(name);\n}\n/**\r\n * Register renderer under its alias.\r\n *\r\n * @param {string|Function} name Renderer's alias or renderer function with its descriptor.\r\n * @param {Function} [renderer] Renderer function.\r\n */\n\n\nfunction _register(name, renderer) {\n  if (typeof name !== 'string') {\n    renderer = name;\n    name = renderer.RENDERER_TYPE;\n  }\n\n  register(name, renderer);\n}\n\nexport { _register as registerRenderer, _getItem as getRenderer, hasItem as hasRenderer, getNames as getRegisteredRendererNames, getValues as getRegisteredRenderers };","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/renderers/registry.mjs"],"names":["staticRegister","_staticRegister","register","getItem","hasItem","getNames","getValues","_getItem","name","Error","concat","_register","renderer","RENDERER_TYPE","registerRenderer","getRenderer","hasRenderer","getRegisteredRendererNames","getRegisteredRenderers"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,6BAA3B;;AAEA,IAAIC,eAAe,GAAGD,cAAc,CAAC,WAAD,CAApC;AAAA,IACIE,QAAQ,GAAGD,eAAe,CAACC,QAD/B;AAAA,IAEIC,OAAO,GAAGF,eAAe,CAACE,OAF9B;AAAA,IAGIC,OAAO,GAAGH,eAAe,CAACG,OAH9B;AAAA,IAIIC,QAAQ,GAAGJ,eAAe,CAACI,QAJ/B;AAAA,IAKIC,SAAS,GAAGL,eAAe,CAACK,SALhC;AAMA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAOA,IAAP;AACD;;AAED,MAAI,CAACJ,OAAO,CAACI,IAAD,CAAZ,EAAoB;AAClB,UAAMC,KAAK,CAAC,wCAAwCC,MAAxC,CAA+CF,IAA/C,EAAqD,SAArD,CAAD,CAAX;AACD;;AAED,SAAOL,OAAO,CAACK,IAAD,CAAd;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASG,SAAT,CAAmBH,IAAnB,EAAyBI,QAAzB,EAAmC;AACjC,MAAI,OAAOJ,IAAP,KAAgB,QAApB,EAA8B;AAC5BI,IAAAA,QAAQ,GAAGJ,IAAX;AACAA,IAAAA,IAAI,GAAGI,QAAQ,CAACC,aAAhB;AACD;;AAEDX,EAAAA,QAAQ,CAACM,IAAD,EAAOI,QAAP,CAAR;AACD;;AAED,SAASD,SAAS,IAAIG,gBAAtB,EAAwCP,QAAQ,IAAIQ,WAApD,EAAiEX,OAAO,IAAIY,WAA5E,EAAyFX,QAAQ,IAAIY,0BAArG,EAAiIX,SAAS,IAAIY,sBAA9I","sourcesContent":["import staticRegister from \"../utils/staticRegister.mjs\";\r\n\r\nvar _staticRegister = staticRegister('renderers'),\r\n    register = _staticRegister.register,\r\n    getItem = _staticRegister.getItem,\r\n    hasItem = _staticRegister.hasItem,\r\n    getNames = _staticRegister.getNames,\r\n    getValues = _staticRegister.getValues;\r\n/**\r\n * Retrieve renderer function.\r\n *\r\n * @param {string} name Renderer identification.\r\n * @returns {Function} Returns renderer function.\r\n */\r\n\r\n\r\nfunction _getItem(name) {\r\n  if (typeof name === 'function') {\r\n    return name;\r\n  }\r\n\r\n  if (!hasItem(name)) {\r\n    throw Error(\"No registered renderer found under \\\"\".concat(name, \"\\\" name\"));\r\n  }\r\n\r\n  return getItem(name);\r\n}\r\n/**\r\n * Register renderer under its alias.\r\n *\r\n * @param {string|Function} name Renderer's alias or renderer function with its descriptor.\r\n * @param {Function} [renderer] Renderer function.\r\n */\r\n\r\n\r\nfunction _register(name, renderer) {\r\n  if (typeof name !== 'string') {\r\n    renderer = name;\r\n    name = renderer.RENDERER_TYPE;\r\n  }\r\n\r\n  register(name, renderer);\r\n}\r\n\r\nexport { _register as registerRenderer, _getItem as getRenderer, hasItem as hasRenderer, getNames as getRegisteredRendererNames, getValues as getRegisteredRenderers };"]},"metadata":{},"sourceType":"module"}