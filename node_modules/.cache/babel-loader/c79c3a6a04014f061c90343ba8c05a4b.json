{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\csptrackerDataTable\\\\csptrackerDataTable.js\";\nimport React from 'react';\nimport './csptrackerDataTable.css';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport UploadDrawingPopUp from '../uploadDrawingPopUp/uploadDrawingPopUp';\nimport UpdateDrawingPopUp from '../updateDrawingPopUp/updateDrawingPopUp';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CSPTrackerdDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: []\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 29\n      }, this),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id.props.children);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }); //this.setState({ selectedRows: selectedRows });\n\n      this.props.onChange(ids);\n    };\n  }\n\n  async readyE3D(tag) {\n    const body = {\n      tag: tag\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/readye3d\", options).then(response => response.json()).then(this.props.updateDataMethod());\n  }\n\n  async cancelReadyE3D(tag) {\n    const body = {\n      tag: tag\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/cancelreadye3d\", options).then(response => response.json()).then(this.props.updateDataMethod());\n  }\n\n  async updateData() {\n    this.props.updateDataMethod();\n  }\n\n  async uploadDrawingSuccess() {\n    this.props.uploadDrawingSuccess();\n  }\n\n  async updateDrawingSuccess() {\n    this.props.updateDrawingSuccess();\n  }\n\n  async drawingUploadError() {\n    this.props.drawingUploadError();\n  }\n\n  async getDrawing(fileName) {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/pdf\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getDrawing/\" + fileName, options).then(res => res.blob()).then(response => {\n      const file = new Blob([response], {\n        type: \"application/pdf\"\n      }); //Build a URL from the file\n\n      const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n      let w = window.open(fileURL);\n      w.addEventListener(\"load\", function () {\n        setTimeout(() => w.document.title = fileName, 300);\n      }); // create <a> tag dinamically\n\n      var fileLink = document.createElement('a');\n      fileLink.href = fileURL; // it forces the name of the downloaded file\n\n      fileLink.download = fileName; // triggers the click event\n\n      fileLink.click();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker\", options).then(response => response.json()).then(async json => {\n      var rows = [];\n      var row = null;\n\n      if (process.env.REACT_APP_MMDN === \"1\") {\n        for (let i = 0; i < json.rows.length; i++) {\n          row = {\n            key: i,\n            tag: json.rows[i].tag,\n            quantity: json.rows[i].quantity,\n            type: json.rows[i].type,\n            description: json.rows[i].description,\n            description_plane: json.rows[i].description_plan_code,\n            description_iso: json.rows[i].description_iso,\n            ident: json.rows[i].ident,\n            p1bore: json.rows[i].p1diameter_nps,\n            p2bore: json.rows[i].p2diameter_nps,\n            p3bore: json.rows[i].p3diameter_nps,\n            rating: json.rows[i].rating,\n            end_preparation: json.rows[i].end_preparation,\n            spec: json.rows[i].spec,\n            descrition_plane: json.rows[i].description_drawing,\n            face_to_face: json.rows[i].face_to_face,\n            bolts_type: json.rows[i].bolt_type,\n            ready_load: json.rows[i].ready_load,\n            ready_e3d: json.rows[i].ready_e3d,\n            comments: json.rows[i].comments,\n            pid: json.rows[i].pid,\n            line_id: json.rows[i].line_id,\n            requisition: json.rows[i].requisition,\n            equipnozz: json.rows[i].equipnozz,\n            utility_station: json.rows[i].utility_station,\n            request_date: json.rows[i].request_date.toString().substring(0, 10) + \" \" + json.rows[i].request_date.toString().substring(11, 19)\n          };\n\n          if (json.rows[i].ready_load_date) {\n            row.ready_load_date = json.rows[i].ready_load_date.toString().substring(0, 10) + \" \" + json.rows[i].ready_load_date.toString().substring(11, 19);\n          } else {\n            row.ready_load_date = \"\";\n          }\n\n          if (json.rows[i].ready_e3d_date) {\n            row.ready_e3d_date = json.rows[i].ready_e3d_date.toString().substring(0, 10) + \" \" + json.rows[i].ready_e3d_date.toString().substring(11, 19);\n          } else {\n            row.ready_e3d_date = \"\";\n          }\n\n          if (json.rows[i].drawing_filename !== null && row.description_plane !== null) {\n            if (this.props.currentRole === \"Materials\") {\n              row.drawing = /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"drawing__column\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => this.getDrawing(json.rows[i].drawing_filename),\n                  children: json.rows[i].drawing_filename + \" R\" + json.rows[i].revision\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 66\n                }, this), /*#__PURE__*/_jsxDEV(UpdateDrawingPopUp, {\n                  description_plan_code: row.description_plane,\n                  updateDrawingSuccess: this.updateDrawingSuccess.bind(this),\n                  drawingUploadError: this.drawingUploadError.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 204\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this);\n            } else {\n              row.drawing = /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"drawing__column\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => this.getDrawing(json.rows[i].drawing_filename),\n                  children: json.rows[i].drawing_filename + \" R\" + json.rows[i].revision\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this);\n            }\n          } else if (json.rows[i].drawing_filename === null && row.description_plane !== null) {\n            if (this.props.currentRole === \"Materials\") {\n              row.drawing = /*#__PURE__*/_jsxDEV(UploadDrawingPopUp, {\n                description_plan_code: row.description_plane,\n                updateDataMethod: this.updateData.bind(this),\n                uploadDrawingSuccess: this.uploadDrawingSuccess.bind(this),\n                drawingUploadError: this.drawingUploadError.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this);\n            } else {\n              row.drawing = null;\n            }\n          } else {\n            row.drawing = null;\n          }\n\n          if (row.ready_load === 1 && json.rows[i].drawing_filename !== null && json.rows[i].updated === 1) {\n            row.ready_load = \"UPDATED\";\n            row.color = \"#bbb\";\n\n            if (this.props.currentRole === \"3D Admin\") {\n              row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"ready__btn btn-sm btn-success\",\n                onClick: () => this.readyE3D(json.rows[i].tag),\n                children: \"READY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this);\n            } else {\n              row.ready_e3d = \"UPDATED\";\n            }\n          } else if (row.ready_load === 1 && json.rows[i].drawing_filename !== null) {\n            row.ready_load = \"READY\";\n\n            if (row.ready_e3d === 1) {\n              row.color = \"#ggg\";\n\n              if (this.props.currentRole === \"3D Admin\") {\n                row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"csp__cancel__btn btn-sm btn-danger\",\n                  onClick: () => this.cancelReadyE3D(json.rows[i].tag),\n                  children: \"CANCEL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this);\n              } else {\n                row.ready_e3d = \"READY\";\n              }\n            } else {\n              row.color = \"#yyy\";\n\n              if (this.props.currentRole === \"3D Admin\") {\n                row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"ready__btn btn-sm btn-success\",\n                  onClick: () => this.readyE3D(json.rows[i].tag),\n                  children: \"READY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this);\n              } else {\n                row.ready_e3d = \"NOT READY\";\n              }\n            }\n          } else {\n            row.ready_load = \"NOT READY\";\n            row.color = \"white\";\n\n            if (this.props.currentRole === \"3D Admin\") {\n              row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: true,\n                class: \"ready__disabled btn-sm btn-success\",\n                children: \"READY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 35\n              }, this);\n            } else {\n              row.ready_e3d = \"NOT READY\";\n            }\n          }\n\n          for (const [key, value] of Object.entries(row)) {\n            if (!value) {\n              row[key] = \"\";\n            }\n          }\n\n          rows.push(row);\n        }\n      } else {\n        for (let i = 0; i < json.rows.length; i++) {\n          row = {\n            key: i,\n            tag: json.rows[i].tag,\n            quantity: json.rows[i].quantity,\n            type: json.rows[i].type,\n            description: json.rows[i].description,\n            description_plane: json.rows[i].description_plan_code,\n            description_iso: json.rows[i].description_iso,\n            ident: json.rows[i].ident,\n            p1bore: json.rows[i].p1diameter_dn,\n            p2bore: json.rows[i].p2diameter_dn,\n            p3bore: json.rows[i].p3diameter_dn,\n            rating: json.rows[i].rating,\n            end_preparation: json.rows[i].end_preparation,\n            spec: json.rows[i].spec,\n            descrition_plane: json.rows[i].description_drawing,\n            face_to_face: json.rows[i].face_to_face,\n            bolts_type: json.rows[i].bolt_type,\n            ready_load: json.rows[i].ready_load,\n            ready_e3d: json.rows[i].ready_e3d,\n            comments: json.rows[i].comments,\n            pid: json.rows[i].pid,\n            line_id: json.rows[i].line_id,\n            requisition: json.rows[i].requisition,\n            equipnozz: json.rows[i].equipnozz,\n            utility_station: json.rows[i].utility_station,\n            request_date: json.rows[i].request_date.toString().substring(0, 10) + \" \" + json.rows[i].request_date.toString().substring(11, 19)\n          };\n\n          if (json.rows[i].ready_load_date) {\n            row.ready_load_date = json.rows[i].ready_load_date.toString().substring(0, 10) + \" \" + json.rows[i].ready_load_date.toString().substring(11, 19);\n          } else {\n            row.ready_load_date = \"\";\n          }\n\n          if (json.rows[i].ready_e3d_date) {\n            row.ready_e3d_date = json.rows[i].ready_e3d_date.toString().substring(0, 10) + \" \" + json.rows[i].ready_e3d_date.toString().substring(11, 19);\n          } else {\n            row.ready_e3d_date = \"\";\n          }\n\n          if (json.rows[i].drawing_filename !== null && row.description_plane !== null) {\n            if (this.props.currentRole === \"Materials\") {\n              row.drawing = /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"drawing__column\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => this.getDrawing(json.rows[i].drawing_filename),\n                  children: json.rows[i].drawing_filename + \" R\" + json.rows[i].revision\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 66\n                }, this), /*#__PURE__*/_jsxDEV(UpdateDrawingPopUp, {\n                  description_plan_code: row.description_plane,\n                  updateDrawingSuccess: this.updateDrawingSuccess.bind(this),\n                  drawingUploadError: this.drawingUploadError.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 204\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this);\n            } else {\n              row.drawing = /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"drawing__column\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => this.getDrawing(json.rows[i].drawing_filename),\n                  children: json.rows[i].drawing_filename + \" R\" + json.rows[i].revision\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this);\n            }\n          } else if (json.rows[i].drawing_filename === null && row.description_plane !== null) {\n            if (this.props.currentRole === \"Materials\") {\n              row.drawing = /*#__PURE__*/_jsxDEV(UploadDrawingPopUp, {\n                description_plan_code: row.description_plane,\n                updateDataMethod: this.updateData.bind(this),\n                uploadDrawingSuccess: this.uploadDrawingSuccess.bind(this),\n                drawingUploadError: this.drawingUploadError.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this);\n            } else {\n              row.drawing = null;\n            }\n          } else {\n            row.drawing = null;\n          }\n\n          if (row.ready_load === 1 && json.rows[i].drawing_filename !== null && json.rows[i].updated === 1) {\n            row.ready_load = \"UPDATED\";\n            row.color = \"#bbb\";\n\n            if (this.props.currentRole === \"3D Admin\") {\n              row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"ready__btn btn-sm btn-success\",\n                onClick: () => this.readyE3D(json.rows[i].tag),\n                children: \"READY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 37\n              }, this);\n            } else {\n              row.ready_e3d = \"UPDATED\";\n            }\n          } else if (row.ready_load === 1 && json.rows[i].drawing_filename !== null) {\n            row.ready_load = \"READY\";\n\n            if (row.ready_e3d === 1) {\n              row.color = \"#ggg\";\n\n              if (this.props.currentRole === \"3D Admin\") {\n                row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"csp__cancel__btn btn-sm btn-danger\",\n                  onClick: () => this.cancelReadyE3D(json.rows[i].tag),\n                  children: \"CANCEL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }, this);\n              } else {\n                row.ready_e3d = \"READY\";\n              }\n            } else {\n              row.color = \"#yyy\";\n\n              if (this.props.currentRole === \"3D Admin\") {\n                row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"ready__btn btn-sm btn-success\",\n                  onClick: () => this.readyE3D(json.rows[i].tag),\n                  children: \"READY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 37\n                }, this);\n              } else {\n                row.ready_e3d = \"NOT READY\";\n              }\n            }\n          } else {\n            row.ready_load = \"NOT READY\";\n            row.color = \"white\";\n\n            if (this.props.currentRole === \"3D Admin\") {\n              row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: true,\n                class: \"ready__disabled btn-sm btn-success\",\n                children: \"READY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 35\n              }, this);\n            } else {\n              row.ready_e3d = \"NOT READY\";\n            }\n          }\n\n          for (const [key, value] of Object.entries(row)) {\n            if (!value) {\n              row[key] = \"\";\n            }\n          }\n\n          json.rows[i].sptag = /*#__PURE__*/_jsxDEV(\"b\", {\n            children: json.rows[i].sptag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 36\n          }, this);\n          json.rows[i].type = /*#__PURE__*/_jsxDEV(\"b\", {\n            children: json.rows[i].type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 35\n          }, this);\n          rows.push(row);\n        }\n      }\n\n      this.setState({\n        data: rows\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker\", options).then(response => response.json()).then(async json => {\n        var rows = [];\n        var row = null;\n\n        if (process.env.REACT_APP_MMDN === \"1\") {\n          for (let i = 0; i < json.rows.length; i++) {\n            row = {\n              key: i,\n              tag: json.rows[i].tag,\n              quantity: json.rows[i].quantity,\n              type: json.rows[i].type,\n              description: json.rows[i].description,\n              description_plane: json.rows[i].description_plan_code,\n              description_iso: json.rows[i].description_iso,\n              ident: json.rows[i].ident,\n              p1bore: json.rows[i].p1diameter_nps,\n              p2bore: json.rows[i].p2diameter_nps,\n              p3bore: json.rows[i].p3diameter_nps,\n              rating: json.rows[i].rating,\n              end_preparation: json.rows[i].end_preparation,\n              spec: json.rows[i].spec,\n              descrition_plane: json.rows[i].description_drawing,\n              face_to_face: json.rows[i].face_to_face,\n              bolts_type: json.rows[i].bolt_type,\n              ready_load: json.rows[i].ready_load,\n              ready_e3d: json.rows[i].ready_e3d,\n              comments: json.rows[i].comments,\n              pid: json.rows[i].pid,\n              line_id: json.rows[i].line_id,\n              requisition: json.rows[i].requisition,\n              equipnozz: json.rows[i].equipnozz,\n              utility_station: json.rows[i].utility_station,\n              request_date: json.rows[i].request_date.toString().substring(0, 10) + \" \" + json.rows[i].request_date.toString().substring(11, 19)\n            };\n\n            if (json.rows[i].ready_load_date) {\n              row.ready_load_date = json.rows[i].ready_load_date.toString().substring(0, 10) + \" \" + json.rows[i].ready_load_date.toString().substring(11, 19);\n            } else {\n              row.ready_load_date = \"\";\n            }\n\n            if (json.rows[i].ready_e3d_date) {\n              row.ready_e3d_date = json.rows[i].ready_e3d_date.toString().substring(0, 10) + \" \" + json.rows[i].ready_e3d_date.toString().substring(11, 19);\n            } else {\n              row.ready_e3d_date = \"\";\n            }\n\n            if (json.rows[i].drawing_filename !== null && row.description_plane !== null) {\n              if (this.props.currentRole === \"Materials\") {\n                row.drawing = /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"drawing__column\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    onClick: () => this.getDrawing(json.rows[i].drawing_filename),\n                    children: json.rows[i].drawing_filename + \" R\" + json.rows[i].revision\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 68\n                  }, this), /*#__PURE__*/_jsxDEV(UpdateDrawingPopUp, {\n                    description_plan_code: row.description_plane,\n                    updateDrawingSuccess: this.updateDrawingSuccess.bind(this),\n                    drawingUploadError: this.drawingUploadError.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 206\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 35\n                }, this);\n              } else {\n                row.drawing = /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"drawing__column\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    onClick: () => this.getDrawing(json.rows[i].drawing_filename),\n                    children: json.rows[i].drawing_filename + \" R\" + json.rows[i].revision\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 68\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 35\n                }, this);\n              }\n            } else if (json.rows[i].drawing_filename === null && row.description_plane !== null) {\n              if (this.props.currentRole === \"Materials\") {\n                row.drawing = /*#__PURE__*/_jsxDEV(UploadDrawingPopUp, {\n                  description_plan_code: row.description_plane,\n                  updateDataMethod: this.updateData.bind(this),\n                  uploadDrawingSuccess: this.uploadDrawingSuccess.bind(this),\n                  drawingUploadError: this.drawingUploadError.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 35\n                }, this);\n              } else {\n                row.drawing = null;\n              }\n            } else {\n              row.drawing = null;\n            }\n\n            if (row.ready_load === 1 && json.rows[i].drawing_filename !== null && json.rows[i].updated === 1) {\n              row.ready_load = \"UPDATED\";\n              row.color = \"#bbb\";\n\n              if (this.props.currentRole === \"3D Admin\") {\n                row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"ready__btn btn-sm btn-success\",\n                  onClick: () => this.readyE3D(json.rows[i].tag),\n                  children: \"READY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 39\n                }, this);\n              } else {\n                row.ready_e3d = \"UPDATED\";\n              }\n            } else if (row.ready_load === 1 && json.rows[i].drawing_filename !== null) {\n              row.ready_load = \"READY\";\n\n              if (row.ready_e3d === 1) {\n                row.color = \"#ggg\";\n\n                if (this.props.currentRole === \"3D Admin\") {\n                  row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"csp__cancel__btn btn-sm btn-danger\",\n                    onClick: () => this.cancelReadyE3D(json.rows[i].tag),\n                    children: \"CANCEL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 39\n                  }, this);\n                } else {\n                  row.ready_e3d = \"READY\";\n                }\n              } else {\n                row.color = \"#yyy\";\n\n                if (this.props.currentRole === \"3D Admin\") {\n                  row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"ready__btn btn-sm btn-success\",\n                    onClick: () => this.readyE3D(json.rows[i].tag),\n                    children: \"READY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 39\n                  }, this);\n                } else {\n                  row.ready_e3d = \"NOT READY\";\n                }\n              }\n            } else {\n              row.ready_load = \"NOT READY\";\n              row.color = \"white\";\n\n              if (this.props.currentRole === \"3D Admin\") {\n                row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: true,\n                  class: \"ready__disabled btn-sm btn-success\",\n                  children: \"READY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 37\n                }, this);\n              } else {\n                row.ready_e3d = \"NOT READY\";\n              }\n            }\n\n            for (const [key, value] of Object.entries(row)) {\n              if (!value) {\n                row[key] = \"\";\n              }\n            }\n\n            json.rows[i].sptag = /*#__PURE__*/_jsxDEV(\"b\", {\n              children: json.rows[i].sptag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 38\n            }, this);\n            json.rows[i].type = /*#__PURE__*/_jsxDEV(\"b\", {\n              children: json.rows[i].type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 37\n            }, this);\n            rows.push(row);\n          }\n        } else {\n          for (let i = 0; i < json.rows.length; i++) {\n            row = {\n              key: i,\n              tag: json.rows[i].tag,\n              quantity: json.rows[i].quantity,\n              type: json.rows[i].type,\n              description: json.rows[i].description,\n              description_plane: json.rows[i].description_plan_code,\n              description_iso: json.rows[i].description_iso,\n              ident: json.rows[i].ident,\n              p1bore: json.rows[i].p1diameter_dn,\n              p2bore: json.rows[i].p2diameter_dn,\n              p3bore: json.rows[i].p3diameter_dn,\n              rating: json.rows[i].rating,\n              end_preparation: json.rows[i].end_preparation,\n              spec: json.rows[i].spec,\n              descrition_plane: json.rows[i].description_drawing,\n              face_to_face: json.rows[i].face_to_face,\n              bolts_type: json.rows[i].bolt_type,\n              ready_load: json.rows[i].ready_load,\n              ready_e3d: json.rows[i].ready_e3d,\n              comments: json.rows[i].comments,\n              pid: json.rows[i].pid,\n              line_id: json.rows[i].line_id,\n              requisition: json.rows[i].requisition,\n              equipnozz: json.rows[i].equipnozz,\n              utility_station: json.rows[i].utility_station,\n              request_date: json.rows[i].request_date.toString().substring(0, 10) + \" \" + json.rows[i].request_date.toString().substring(11, 19)\n            };\n\n            if (json.rows[i].ready_load_date) {\n              row.ready_load_date = json.rows[i].ready_load_date.toString().substring(0, 10) + \" \" + json.rows[i].ready_load_date.toString().substring(11, 19);\n            } else {\n              row.ready_load_date = \"\";\n            }\n\n            if (json.rows[i].ready_e3d_date) {\n              row.ready_e3d_date = json.rows[i].ready_e3d_date.toString().substring(0, 10) + \" \" + json.rows[i].ready_e3d_date.toString().substring(11, 19);\n            } else {\n              row.ready_e3d_date = \"\";\n            }\n\n            if (json.rows[i].drawing_filename !== null && row.description_plane !== null) {\n              if (this.props.currentRole === \"Materials\") {\n                row.drawing = /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"drawing__column\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    onClick: () => this.getDrawing(json.rows[i].drawing_filename),\n                    children: json.rows[i].drawing_filename + \" R\" + json.rows[i].revision\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 68\n                  }, this), /*#__PURE__*/_jsxDEV(UpdateDrawingPopUp, {\n                    description_plan_code: row.description_plane,\n                    updateDrawingSuccess: this.updateDrawingSuccess.bind(this),\n                    drawingUploadError: this.drawingUploadError.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 206\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 35\n                }, this);\n              } else {\n                row.drawing = /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"drawing__column\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    onClick: () => this.getDrawing(json.rows[i].drawing_filename),\n                    children: json.rows[i].drawing_filename + \" R\" + json.rows[i].revision\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 68\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 35\n                }, this);\n              }\n            } else if (json.rows[i].drawing_filename === null && row.description_plane !== null) {\n              if (this.props.currentRole === \"Materials\") {\n                row.drawing = /*#__PURE__*/_jsxDEV(UploadDrawingPopUp, {\n                  description_plan_code: row.description_plane,\n                  updateDataMethod: this.updateData.bind(this),\n                  uploadDrawingSuccess: this.uploadDrawingSuccess.bind(this),\n                  drawingUploadError: this.drawingUploadError.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 35\n                }, this);\n              } else {\n                row.drawing = null;\n              }\n            } else {\n              row.drawing = null;\n            }\n\n            if (row.ready_load === 1 && json.rows[i].drawing_filename !== null && json.rows[i].updated === 1) {\n              row.ready_load = \"UPDATED\";\n              row.color = \"#bbb\";\n\n              if (this.props.currentRole === \"3D Admin\") {\n                row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"ready__btn btn-sm btn-success\",\n                  onClick: () => this.readyE3D(json.rows[i].tag),\n                  children: \"READY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 39\n                }, this);\n              } else {\n                row.ready_e3d = \"UPDATED\";\n              }\n            } else if (row.ready_load === 1 && json.rows[i].drawing_filename !== null) {\n              row.ready_load = \"READY\";\n\n              if (row.ready_e3d === 1) {\n                row.color = \"#ggg\";\n\n                if (this.props.currentRole === \"3D Admin\") {\n                  row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"csp__cancel__btn btn-sm btn-danger\",\n                    onClick: () => this.cancelReadyE3D(json.rows[i].tag),\n                    children: \"CANCEL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 41\n                  }, this);\n                } else {\n                  row.ready_e3d = \"READY\";\n                }\n              } else {\n                row.color = \"#yyy\";\n\n                if (this.props.currentRole === \"3D Admin\") {\n                  row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"ready__btn btn-sm btn-success\",\n                    onClick: () => this.readyE3D(json.rows[i].tag),\n                    children: \"READY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 41\n                  }, this);\n                } else {\n                  row.ready_e3d = \"NOT READY\";\n                }\n              }\n            } else {\n              row.ready_load = \"NOT READY\";\n              row.color = \"white\";\n\n              if (this.props.currentRole === \"3D Admin\") {\n                row.ready_e3d = /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: true,\n                  class: \"ready__disabled btn-sm btn-success\",\n                  children: \"READY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 39\n                }, this);\n              } else {\n                row.ready_e3d = \"NOT READY\";\n              }\n            }\n\n            for (const [key, value] of Object.entries(row)) {\n              if (!value) {\n                row[key] = \"\";\n              }\n            }\n\n            json.rows[i].sptag = /*#__PURE__*/_jsxDEV(\"b\", {\n              children: json.rows[i].sptag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 38\n            }, this);\n            json.rows[i].type = /*#__PURE__*/_jsxDEV(\"b\", {\n              children: json.rows[i].type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 37\n            }, this);\n            rows.push(row);\n          }\n        }\n\n        await this.setState({\n          data: rows\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'tag',\n      key: 'tag',\n      ...this.getColumnSearchProps('tag'),\n      sorter: {\n        compare: (a, b) => a.tag.localeCompare(b.tag)\n      },\n      fixed: \"left\",\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'type',\n      key: 'type',\n      ...this.getColumnSearchProps('type'),\n      sorter: {\n        compare: (a, b) => a.type.localeCompare(b.type)\n      },\n      fixed: \"left\",\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Spec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'spec',\n      key: 'spec',\n      ...this.getColumnSearchProps('spec'),\n      sorter: {\n        compare: (a, b) => a.spec.localeCompare(b.spec)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"P1Bore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'p1bore',\n      key: 'p1bore',\n      ...this.getColumnSearchProps('p1bore'),\n      sorter: {\n        compare: (a, b) => a.p1bore - b.p1bore\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"P2Bore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'p2bore',\n      key: 'p2bore',\n      ...this.getColumnSearchProps('p2bore'),\n      sorter: {\n        compare: (a, b) => a.p2bore - b.p2bore\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"P3Bore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'p3bore',\n      key: 'p3bore',\n      ...this.getColumnSearchProps('p3bore'),\n      sorter: {\n        compare: (a, b) => a.p3bore - b.p3bore\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'rating',\n      key: 'rating',\n      ...this.getColumnSearchProps('rating'),\n      sorter: {\n        compare: (a, b) => a.rating.localeCompare(b.rating)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"End Preparation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'end_preparation',\n      key: 'end_preparation',\n      ...this.getColumnSearchProps('end_preparation'),\n      sorter: {\n        compare: (a, b) => a.end_preparation.localeCompare(b.end_preparation)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"LINE ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'line_id',\n      key: 'line_id',\n      ...this.getColumnSearchProps('line_id'),\n      sorter: {\n        compare: (a, b) => a.line_id.localeCompare(b.line_id)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"P&ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'pid',\n      key: 'pid',\n      ...this.getColumnSearchProps('pid'),\n      sorter: {\n        compare: (a, b) => a.pid.localeCompare(b.pid)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Drawing Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'description_plane',\n      key: 'description_plane',\n      ...this.getColumnSearchProps('description_plane'),\n      sorter: {\n        compare: (a, b) => a.description_plane.localeCompare(b.description_plane)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Drawing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'drawing',\n      key: 'drawing',\n      ...this.getColumnSearchProps('drawing'),\n      width: \"400px\",\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'quantity',\n      key: 'quantity',\n      ...this.getColumnSearchProps('quantity'),\n      sorter: {\n        compare: (a, b) => a.quantity - b.quantity\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Requisition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'requisition',\n      key: 'requisition',\n      ...this.getColumnSearchProps('requisition'),\n      sorter: {\n        compare: (a, b) => a.requisition - b.requisition\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'description',\n      key: 'description',\n      ...this.getColumnSearchProps('description'),\n      width: \"400px\",\n      sorter: {\n        compare: (a, b) => a.description.localeCompare(b.description)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Iso Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'description_iso',\n      key: 'description_iso',\n      ...this.getColumnSearchProps('description_iso'),\n      width: \"400px\",\n      sorter: {\n        compare: (a, b) => a.description_iso.localeCompare(b.description_iso)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Ident\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'ident',\n      key: 'ident',\n      ...this.getColumnSearchProps('ident'),\n      sorter: {\n        compare: (a, b) => a.ident.localeCompare(b.ident)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Face to Face\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'face_to_face',\n      key: 'face_to_face',\n      ...this.getColumnSearchProps('face_to_face'),\n      sorter: {\n        compare: (a, b) => a.face_to_face.localeCompare(b.face_to_face)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"FLG Short Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'bolts_type',\n      key: 'bolts_type',\n      ...this.getColumnSearchProps('bolts_type'),\n      sorter: {\n        compare: (a, b) => a.bolts_type.localeCompare(b.bolts_type)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Equipment + Nozzle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'equipnozz',\n      key: 'equipnozz',\n      ...this.getColumnSearchProps('equipnozz'),\n      sorter: {\n        compare: (a, b) => a.equipnozz.localeCompare(b.equipnozz)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Utility Station\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'utility_station',\n      key: 'utility_station',\n      ...this.getColumnSearchProps('utility_station'),\n      sorter: {\n        compare: (a, b) => a.utility_station.localeCompare(b.utility_station)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Request date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'request_date',\n      key: 'request_date',\n      ...this.getColumnSearchProps('request_date'),\n      sorter: {\n        compare: (a, b) => a.request_date.localeCompare(b.request_date)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Ready to load date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'ready_load_date',\n      key: 'ready_load_date',\n      ...this.getColumnSearchProps('ready_load_date'),\n      sorter: {\n        compare: (a, b) => a.ready_load_date.localeCompare(b.ready_load_date)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Ready in 3D date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'ready_e3d_date',\n      key: 'ready_e3d_date',\n      ...this.getColumnSearchProps('ready_e3d_date'),\n      sorter: {\n        compare: (a, b) => a.ready_e3d_date.localeCompare(b.ready_e3d_date)\n      },\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'comments',\n      key: 'comments',\n      ...this.getColumnSearchProps('comments')\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Ready to Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'ready_load',\n      key: 'ready_load',\n      ...this.getColumnSearchProps('ready_load'),\n      sorter: {\n        compare: (a, b) => a.ready_load.localeCompare(b.ready_load)\n      },\n      fixed: \"right\",\n      align: \"center\"\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Ready in 3D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'ready_e3d',\n      key: 'ready_e3d',\n      ...this.getColumnSearchProps('ready_e3d'),\n      fixed: \"right\",\n      align: \"center\"\n    }];\n    var totalElements = null;\n\n    if (this.state.data.length === 0) {\n      totalElements = null;\n    } else {\n      totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"estimatedDataTable__container\",\n        style: {\n          width: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.data,\n          pagination: {\n            disabled: true,\n            defaultPageSize: 5000\n          },\n          size: \"small\",\n          rowClassName: record => record.color.replace('#', ''),\n          scroll: {\n            x: 8000,\n            y: 437\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 9\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CSPTrackerdDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/csptrackerDataTable/csptrackerDataTable.js"],"names":["React","Table","Input","Button","Space","SearchOutlined","UploadDrawingPopUp","UpdateDrawingPopUp","Link","CSPTrackerdDataTable","Component","state","searchText","searchedColumn","data","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","onSelectChange","selectedRowKeys","ids","i","length","push","id","children","onChange","readyE3D","tag","body","options","method","headers","JSON","stringify","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","updateDataMethod","cancelReadyE3D","uploadDrawingSuccess","updateDrawingSuccess","drawingUploadError","getDrawing","fileName","res","blob","file","Blob","type","fileURL","URL","createObjectURL","w","window","open","addEventListener","document","title","fileLink","createElement","href","download","click","catch","error","console","log","componentDidMount","rows","row","REACT_APP_MMDN","key","quantity","description","description_plane","description_plan_code","description_iso","ident","p1bore","p1diameter_nps","p2bore","p2diameter_nps","p3bore","p3diameter_nps","rating","end_preparation","spec","descrition_plane","description_drawing","face_to_face","bolts_type","bolt_type","ready_load","ready_e3d","comments","pid","line_id","requisition","equipnozz","utility_station","request_date","substring","ready_load_date","ready_e3d_date","drawing_filename","currentRole","drawing","revision","bind","updated","Object","entries","p1diameter_dn","p2diameter_dn","p3diameter_dn","sptag","componentDidUpdate","prevProps","prevState","columns","sorter","compare","a","b","localeCompare","fixed","align","totalElements","position","bottom","left","disabled","defaultPageSize","replace","x","y"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './csptrackerDataTable.css'\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport UploadDrawingPopUp from '../uploadDrawingPopUp/uploadDrawingPopUp';\r\nimport UpdateDrawingPopUp from '../updateDrawingPopUp/updateDrawingPopUp';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CSPTrackerdDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: []\r\n  };\r\n\r\n  async readyE3D(tag){\r\n    const body = {\r\n      tag: tag\r\n    }\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n  }\r\n\r\n\r\n  fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/readye3d\", options)\r\n      .then(response => response.json())\r\n      .then(\r\n        this.props.updateDataMethod()\r\n      )\r\n  }\r\n\r\n  async cancelReadyE3D(tag){\r\n    const body = {\r\n      tag: tag\r\n    }\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n  }\r\n\r\n\r\n  fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/cancelreadye3d\", options)\r\n      .then(response => response.json())\r\n      .then(\r\n        this.props.updateDataMethod()\r\n        )\r\n  }\r\n\r\n  async updateData(){\r\n    this.props.updateDataMethod()\r\n  }\r\n\r\n  async uploadDrawingSuccess(){\r\n    this.props.uploadDrawingSuccess()\r\n  }\r\n\r\n  async updateDrawingSuccess(){\r\n    this.props.updateDrawingSuccess()\r\n  }\r\n\r\n  async drawingUploadError(){\r\n    this.props.drawingUploadError()\r\n  }\r\n\r\n  async getDrawing(fileName){\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n          \"Content-Type\": \"application/pdf\"\r\n      }\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getDrawing/\"+fileName, options)\r\n    .then(res => res.blob())\r\n    .then(response => {\r\n      const file = new Blob([response], {\r\n        type: \"application/pdf\"\r\n      });\r\n      //Build a URL from the file\r\n      const fileURL = URL.createObjectURL(file);\r\n      //Open the URL on new Window\r\n      let w = window.open(fileURL);\r\n\r\n        w.addEventListener(\"load\", function() {\r\n          setTimeout(()=> w.document.title = fileName\r\n          , 300);\r\n\r\n\r\n        });\r\n\r\n        // create <a> tag dinamically\r\n        var fileLink = document.createElement('a');\r\n        fileLink.href = fileURL;\r\n\r\n        // it forces the name of the downloaded file\r\n        fileLink.download = fileName;\r\n\r\n        // triggers the click event\r\n        fileLink.click();\r\n\r\n\r\n      \r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n          var rows = []\r\n          var row = null\r\n          if(process.env.REACT_APP_MMDN === \"1\"){\r\n            for(let i = 0; i < json.rows.length; i++){\r\n              row = {key:i, tag: json.rows[i].tag, quantity: json.rows[i].quantity, type: json.rows[i].type, description: json.rows[i].description, description_plane: json.rows[i].description_plan_code, description_iso: json.rows[i].description_iso, ident: json.rows[i].ident, p1bore: json.rows[i].p1diameter_nps, p2bore: json.rows[i].p2diameter_nps, p3bore: json.rows[i].p3diameter_nps, rating: json.rows[i].rating, end_preparation: json.rows[i].end_preparation, spec: json.rows[i].spec, descrition_plane: json.rows[i].description_drawing, face_to_face: json.rows[i].face_to_face, bolts_type: json.rows[i].bolt_type, ready_load: json.rows[i].ready_load, ready_e3d: json.rows[i].ready_e3d, comments: json.rows[i].comments, pid: json.rows[i].pid, line_id: json.rows[i].line_id, requisition: json.rows[i].requisition, equipnozz: json.rows[i].equipnozz, utility_station: json.rows[i].utility_station, request_date: json.rows[i].request_date.toString().substring(0,10) + \" \"+ json.rows[i].request_date.toString().substring(11,19)}\r\n\r\n              if(json.rows[i].ready_load_date){\r\n                row.ready_load_date = json.rows[i].ready_load_date.toString().substring(0,10) + \" \"+ json.rows[i].ready_load_date.toString().substring(11,19)\r\n              }else{\r\n                row.ready_load_date = \"\"\r\n              }\r\n\r\n              if(json.rows[i].ready_e3d_date){\r\n                row.ready_e3d_date = json.rows[i].ready_e3d_date.toString().substring(0,10) + \" \"+ json.rows[i].ready_e3d_date.toString().substring(11,19)\r\n              }else{\r\n                row.ready_e3d_date = \"\"\r\n              }\r\n\r\n              \r\n              \r\n              if(json.rows[i].drawing_filename !== null && row.description_plane !== null){\r\n                if(this.props.currentRole === \"Materials\"){\r\n                  row.drawing = <div className=\"drawing__column\"><Link onClick={() => this.getDrawing(json.rows[i].drawing_filename)}>{json.rows[i].drawing_filename + \" R\" + json.rows[i].revision}</Link><UpdateDrawingPopUp description_plan_code={row.description_plane} updateDrawingSuccess={this.updateDrawingSuccess.bind(this)} drawingUploadError={this.drawingUploadError.bind(this)}/></div>\r\n                }else{\r\n                  row.drawing = <div className=\"drawing__column\"><Link onClick={() => this.getDrawing(json.rows[i].drawing_filename)}>{json.rows[i].drawing_filename + \" R\" + json.rows[i].revision}</Link></div>\r\n                }\r\n              }else if(json.rows[i].drawing_filename === null && row.description_plane !== null){\r\n                if(this.props.currentRole === \"Materials\"){\r\n                  row.drawing = <UploadDrawingPopUp description_plan_code={row.description_plane} updateDataMethod = {this.updateData.bind(this)} uploadDrawingSuccess={this.uploadDrawingSuccess.bind(this)} drawingUploadError={this.drawingUploadError.bind(this)}/>\r\n                }else{\r\n                  row.drawing = null\r\n                }\r\n              }else{\r\n                row.drawing = null\r\n              }\r\n          \r\n              if(row.ready_load === 1 && json.rows[i].drawing_filename !== null && json.rows[i].updated === 1){\r\n                row.ready_load = \"UPDATED\"\r\n                row.color = \"#bbb\"\r\n                  if(this.props.currentRole === \"3D Admin\"){\r\n                    row.ready_e3d = <button class=\"ready__btn btn-sm btn-success\" onClick={() => this.readyE3D(json.rows[i].tag)}>READY</button>\r\n                  }else{\r\n                    row.ready_e3d = \"UPDATED\"\r\n                  }\r\n              }else if(row.ready_load === 1 && json.rows[i].drawing_filename !== null){\r\n                row.ready_load = \"READY\"\r\n                if(row.ready_e3d === 1){\r\n                  row.color = \"#ggg\"\r\n                  if(this.props.currentRole === \"3D Admin\"){\r\n                    row.ready_e3d = <button class=\"csp__cancel__btn btn-sm btn-danger\" onClick={() => this.cancelReadyE3D(json.rows[i].tag)}>CANCEL</button>\r\n                  }else{\r\n                    row.ready_e3d = \"READY\"\r\n                  }\r\n                }else{\r\n                  row.color = \"#yyy\"\r\n                  if(this.props.currentRole === \"3D Admin\"){\r\n                    row.ready_e3d = <button class=\"ready__btn btn-sm btn-success\" onClick={() => this.readyE3D(json.rows[i].tag)}>READY</button>\r\n                  }else{\r\n                    row.ready_e3d = \"NOT READY\"\r\n                  }\r\n                }\r\n                \r\n              }else{\r\n                row.ready_load = \"NOT READY\"\r\n                row.color = \"white\"\r\n                if(this.props.currentRole === \"3D Admin\"){\r\n                  row.ready_e3d = <button disabled class=\"ready__disabled btn-sm btn-success\">READY</button>\r\n                }else{\r\n                  row.ready_e3d = \"NOT READY\"\r\n                }\r\n              }\r\n\r\n              for (const [key, value] of Object.entries(row)) {\r\n                if(!value){\r\n                  row[key] = \"\"\r\n                }\r\n              }\r\n\r\n              rows.push(row)\r\n            }\r\n          }else{\r\n            for(let i = 0; i < json.rows.length; i++){\r\n              row = {key:i, tag: json.rows[i].tag, quantity: json.rows[i].quantity, type: json.rows[i].type, description: json.rows[i].description, description_plane: json.rows[i].description_plan_code, description_iso: json.rows[i].description_iso, ident: json.rows[i].ident, p1bore: json.rows[i].p1diameter_dn, p2bore: json.rows[i].p2diameter_dn, p3bore: json.rows[i].p3diameter_dn, rating: json.rows[i].rating, end_preparation: json.rows[i].end_preparation, spec: json.rows[i].spec, descrition_plane: json.rows[i].description_drawing, face_to_face: json.rows[i].face_to_face, bolts_type: json.rows[i].bolt_type, ready_load: json.rows[i].ready_load, ready_e3d: json.rows[i].ready_e3d, comments: json.rows[i].comments, pid: json.rows[i].pid, line_id: json.rows[i].line_id, requisition: json.rows[i].requisition, equipnozz: json.rows[i].equipnozz, utility_station: json.rows[i].utility_station, request_date: json.rows[i].request_date.toString().substring(0,10) + \" \"+ json.rows[i].request_date.toString().substring(11,19)}\r\n\r\n              if(json.rows[i].ready_load_date){\r\n                row.ready_load_date = json.rows[i].ready_load_date.toString().substring(0,10) + \" \"+ json.rows[i].ready_load_date.toString().substring(11,19)\r\n              }else{\r\n                row.ready_load_date = \"\"\r\n              }\r\n\r\n              if(json.rows[i].ready_e3d_date){\r\n                row.ready_e3d_date = json.rows[i].ready_e3d_date.toString().substring(0,10) + \" \"+ json.rows[i].ready_e3d_date.toString().substring(11,19)\r\n              }else{\r\n                row.ready_e3d_date = \"\"\r\n              }\r\n              \r\n              if(json.rows[i].drawing_filename !== null && row.description_plane !== null){\r\n                if(this.props.currentRole === \"Materials\"){\r\n                  row.drawing = <div className=\"drawing__column\"><Link onClick={() => this.getDrawing(json.rows[i].drawing_filename)}>{json.rows[i].drawing_filename + \" R\" + json.rows[i].revision}</Link><UpdateDrawingPopUp description_plan_code={row.description_plane} updateDrawingSuccess={this.updateDrawingSuccess.bind(this)} drawingUploadError={this.drawingUploadError.bind(this)}/></div>\r\n                }else{\r\n                  row.drawing = <div className=\"drawing__column\"><Link onClick={() => this.getDrawing(json.rows[i].drawing_filename)}>{json.rows[i].drawing_filename + \" R\" + json.rows[i].revision}</Link></div>\r\n                }\r\n              }else if(json.rows[i].drawing_filename === null && row.description_plane !== null){\r\n                if(this.props.currentRole === \"Materials\"){\r\n                  row.drawing = <UploadDrawingPopUp description_plan_code={row.description_plane} updateDataMethod = {this.updateData.bind(this)} uploadDrawingSuccess={this.uploadDrawingSuccess.bind(this)} drawingUploadError={this.drawingUploadError.bind(this)}/>\r\n                }else{\r\n                  row.drawing = null\r\n                }\r\n              }else{\r\n                row.drawing = null\r\n              }\r\n\r\n              if(row.ready_load === 1 && json.rows[i].drawing_filename !== null && json.rows[i].updated === 1){\r\n                row.ready_load = \"UPDATED\"\r\n                row.color = \"#bbb\"\r\n                  if(this.props.currentRole === \"3D Admin\"){\r\n                    row.ready_e3d = <button class=\"ready__btn btn-sm btn-success\" onClick={() => this.readyE3D(json.rows[i].tag)}>READY</button>\r\n                  }else{\r\n                    row.ready_e3d = \"UPDATED\"\r\n                  }\r\n                }else if(row.ready_load === 1 && json.rows[i].drawing_filename !== null){\r\n                  row.ready_load = \"READY\"\r\n                if(row.ready_e3d === 1){\r\n                  row.color = \"#ggg\"\r\n                  if(this.props.currentRole === \"3D Admin\"){\r\n                    row.ready_e3d = <button class=\"csp__cancel__btn btn-sm btn-danger\" onClick={() => this.cancelReadyE3D(json.rows[i].tag)}>CANCEL</button>\r\n                  }else{\r\n                    row.ready_e3d = \"READY\"\r\n                  }\r\n                }else{\r\n                  row.color = \"#yyy\"\r\n                  if(this.props.currentRole === \"3D Admin\"){\r\n                    row.ready_e3d = <button class=\"ready__btn btn-sm btn-success\" onClick={() => this.readyE3D(json.rows[i].tag)}>READY</button>\r\n                  }else{\r\n                    row.ready_e3d = \"NOT READY\"\r\n                  }\r\n                }\r\n                \r\n              }else{\r\n                row.ready_load = \"NOT READY\"\r\n                row.color = \"white\"\r\n                if(this.props.currentRole === \"3D Admin\"){\r\n                  row.ready_e3d = <button disabled class=\"ready__disabled btn-sm btn-success\">READY</button>\r\n                }else{\r\n                  row.ready_e3d = \"NOT READY\"\r\n                }\r\n              }\r\n\r\n              for (const [key, value] of Object.entries(row)) {\r\n                if(!value){\r\n                  row[key] = \"\"\r\n                }\r\n              }\r\n\r\n              json.rows[i].sptag = <b>{json.rows[i].sptag}</b>\r\n              json.rows[i].type = <b>{json.rows[i].type}</b>\r\n\r\n\r\n              rows.push(row)\r\n            }\r\n          }\r\n          this.setState({data: rows})\r\n          \r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })       \r\n\r\n  }\r\n\r\n\r\n  async componentDidUpdate(prevProps, prevState){\r\n\r\n    \r\n    if(prevProps !== this.props){\r\n      const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n      }\r\n\r\n\r\n      await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker\", options)\r\n          .then(response => response.json())\r\n          .then(async json => {\r\n            var rows = []\r\n            var row = null\r\n            if(process.env.REACT_APP_MMDN === \"1\"){\r\n              for(let i = 0; i < json.rows.length; i++){\r\n                row = {key:i, tag: json.rows[i].tag, quantity: json.rows[i].quantity, type: json.rows[i].type, description: json.rows[i].description, description_plane: json.rows[i].description_plan_code, description_iso: json.rows[i].description_iso, ident: json.rows[i].ident, p1bore: json.rows[i].p1diameter_nps, p2bore: json.rows[i].p2diameter_nps, p3bore: json.rows[i].p3diameter_nps, rating: json.rows[i].rating, end_preparation: json.rows[i].end_preparation, spec: json.rows[i].spec, descrition_plane: json.rows[i].description_drawing, face_to_face: json.rows[i].face_to_face, bolts_type: json.rows[i].bolt_type, ready_load: json.rows[i].ready_load, ready_e3d: json.rows[i].ready_e3d, comments: json.rows[i].comments, pid: json.rows[i].pid, line_id: json.rows[i].line_id, requisition: json.rows[i].requisition, equipnozz: json.rows[i].equipnozz, utility_station: json.rows[i].utility_station, request_date: json.rows[i].request_date.toString().substring(0,10) + \" \"+ json.rows[i].request_date.toString().substring(11,19)}\r\n\r\n                if(json.rows[i].ready_load_date){\r\n                  row.ready_load_date = json.rows[i].ready_load_date.toString().substring(0,10) + \" \"+ json.rows[i].ready_load_date.toString().substring(11,19)\r\n                }else{\r\n                  row.ready_load_date = \"\"\r\n                }\r\n\r\n                if(json.rows[i].ready_e3d_date){\r\n                  row.ready_e3d_date = json.rows[i].ready_e3d_date.toString().substring(0,10) + \" \"+ json.rows[i].ready_e3d_date.toString().substring(11,19)\r\n                }else{\r\n                  row.ready_e3d_date = \"\"\r\n                }\r\n\r\n                if(json.rows[i].drawing_filename !== null && row.description_plane !== null){\r\n                  if(this.props.currentRole === \"Materials\"){\r\n                    row.drawing = <div className=\"drawing__column\"><Link onClick={() => this.getDrawing(json.rows[i].drawing_filename)}>{json.rows[i].drawing_filename + \" R\" + json.rows[i].revision}</Link><UpdateDrawingPopUp description_plan_code={row.description_plane} updateDrawingSuccess={this.updateDrawingSuccess.bind(this)} drawingUploadError={this.drawingUploadError.bind(this)}/></div>\r\n                  }else{\r\n                    row.drawing = <div className=\"drawing__column\"><Link onClick={() => this.getDrawing(json.rows[i].drawing_filename)}>{json.rows[i].drawing_filename + \" R\" + json.rows[i].revision}</Link></div>\r\n                  }\r\n                }else if(json.rows[i].drawing_filename === null && row.description_plane !== null){\r\n                  if(this.props.currentRole === \"Materials\"){\r\n                    row.drawing = <UploadDrawingPopUp description_plan_code={row.description_plane} updateDataMethod = {this.updateData.bind(this)} uploadDrawingSuccess={this.uploadDrawingSuccess.bind(this)} drawingUploadError={this.drawingUploadError.bind(this)}/>\r\n                  }else{\r\n                    row.drawing = null\r\n                  }\r\n                }else{\r\n                  row.drawing = null\r\n                }\r\n\r\n                if(row.ready_load === 1 && json.rows[i].drawing_filename !== null && json.rows[i].updated === 1){\r\n                  row.ready_load = \"UPDATED\"\r\n                  row.color = \"#bbb\"\r\n                    if(this.props.currentRole === \"3D Admin\"){\r\n                      row.ready_e3d = <button class=\"ready__btn btn-sm btn-success\" onClick={() => this.readyE3D(json.rows[i].tag)}>READY</button>\r\n                    }else{\r\n                      row.ready_e3d = \"UPDATED\"\r\n                    }\r\n                  }else if(row.ready_load === 1 && json.rows[i].drawing_filename !== null){\r\n                    row.ready_load = \"READY\"\r\n                  if(row.ready_e3d === 1){\r\n                    row.color = \"#ggg\"\r\n                    if(this.props.currentRole === \"3D Admin\"){\r\n                      row.ready_e3d = <button class=\"csp__cancel__btn btn-sm btn-danger\" onClick={() => this.cancelReadyE3D(json.rows[i].tag)}>CANCEL</button>\r\n                    }else{\r\n                      row.ready_e3d = \"READY\"\r\n                    }\r\n                  }else{\r\n                    row.color = \"#yyy\"\r\n                    if(this.props.currentRole === \"3D Admin\"){\r\n                      row.ready_e3d = <button class=\"ready__btn btn-sm btn-success\" onClick={() => this.readyE3D(json.rows[i].tag)}>READY</button>\r\n                    }else{\r\n                      row.ready_e3d = \"NOT READY\"\r\n                    }\r\n                  }\r\n                  \r\n                }else{\r\n                  row.ready_load = \"NOT READY\"\r\n                  row.color = \"white\"\r\n                  if(this.props.currentRole === \"3D Admin\"){\r\n                    row.ready_e3d = <button disabled class=\"ready__disabled btn-sm btn-success\">READY</button>\r\n                  }else{\r\n                    row.ready_e3d = \"NOT READY\"\r\n                  }\r\n                }\r\n\r\n                for (const [key, value] of Object.entries(row)) {\r\n                  if(!value){\r\n                    row[key] = \"\"\r\n                  }\r\n                }\r\n                json.rows[i].sptag = <b>{json.rows[i].sptag}</b>\r\n                json.rows[i].type = <b>{json.rows[i].type}</b>\r\n\r\n                rows.push(row)\r\n              }\r\n            }else{\r\n              for(let i = 0; i < json.rows.length; i++){\r\n                row = {key:i, tag: json.rows[i].tag, quantity: json.rows[i].quantity, type: json.rows[i].type, description: json.rows[i].description, description_plane: json.rows[i].description_plan_code, description_iso: json.rows[i].description_iso, ident: json.rows[i].ident, p1bore: json.rows[i].p1diameter_dn, p2bore: json.rows[i].p2diameter_dn, p3bore: json.rows[i].p3diameter_dn, rating: json.rows[i].rating, end_preparation: json.rows[i].end_preparation, spec: json.rows[i].spec, descrition_plane: json.rows[i].description_drawing, face_to_face: json.rows[i].face_to_face, bolts_type: json.rows[i].bolt_type, ready_load: json.rows[i].ready_load, ready_e3d: json.rows[i].ready_e3d, comments: json.rows[i].comments, pid: json.rows[i].pid, line_id: json.rows[i].line_id, requisition: json.rows[i].requisition, equipnozz: json.rows[i].equipnozz, utility_station: json.rows[i].utility_station, request_date: json.rows[i].request_date.toString().substring(0,10) + \" \"+ json.rows[i].request_date.toString().substring(11,19)}\r\n                \r\n                if(json.rows[i].ready_load_date){\r\n                  row.ready_load_date = json.rows[i].ready_load_date.toString().substring(0,10) + \" \"+ json.rows[i].ready_load_date.toString().substring(11,19)\r\n                }else{\r\n                  row.ready_load_date = \"\"\r\n                }\r\n\r\n                if(json.rows[i].ready_e3d_date){\r\n                  row.ready_e3d_date = json.rows[i].ready_e3d_date.toString().substring(0,10) + \" \"+ json.rows[i].ready_e3d_date.toString().substring(11,19)\r\n                }else{\r\n                  row.ready_e3d_date = \"\"\r\n                }\r\n                \r\n                if(json.rows[i].drawing_filename !== null && row.description_plane !== null){\r\n                  if(this.props.currentRole === \"Materials\"){\r\n                    row.drawing = <div className=\"drawing__column\"><Link onClick={() => this.getDrawing(json.rows[i].drawing_filename)}>{json.rows[i].drawing_filename + \" R\" + json.rows[i].revision}</Link><UpdateDrawingPopUp description_plan_code={row.description_plane} updateDrawingSuccess={this.updateDrawingSuccess.bind(this)} drawingUploadError={this.drawingUploadError.bind(this)}/></div>\r\n                  }else{\r\n                    row.drawing = <div className=\"drawing__column\"><Link onClick={() => this.getDrawing(json.rows[i].drawing_filename)}>{json.rows[i].drawing_filename + \" R\" + json.rows[i].revision}</Link></div>\r\n                  }\r\n                }else if(json.rows[i].drawing_filename === null && row.description_plane !== null){\r\n                  if(this.props.currentRole === \"Materials\"){\r\n                    row.drawing = <UploadDrawingPopUp description_plan_code={row.description_plane} updateDataMethod = {this.updateData.bind(this)} uploadDrawingSuccess={this.uploadDrawingSuccess.bind(this)} drawingUploadError={this.drawingUploadError.bind(this)}/>\r\n                  }else{\r\n                    row.drawing = null\r\n                  }\r\n                }else{\r\n                  row.drawing = null\r\n                }\r\n\r\n                if(row.ready_load === 1 && json.rows[i].drawing_filename !== null && json.rows[i].updated === 1){\r\n                  row.ready_load = \"UPDATED\"\r\n                  row.color = \"#bbb\"\r\n                    if(this.props.currentRole === \"3D Admin\"){\r\n                      row.ready_e3d = <button class=\"ready__btn btn-sm btn-success\" onClick={() => this.readyE3D(json.rows[i].tag)}>READY</button>\r\n                    }else{\r\n                      row.ready_e3d = \"UPDATED\"\r\n                    }\r\n                  }else if(row.ready_load === 1 && json.rows[i].drawing_filename !== null){\r\n                    row.ready_load = \"READY\"\r\n                    if(row.ready_e3d === 1){\r\n                      row.color = \"#ggg\"\r\n                      if(this.props.currentRole === \"3D Admin\"){\r\n                        row.ready_e3d = <button class=\"csp__cancel__btn btn-sm btn-danger\" onClick={() => this.cancelReadyE3D(json.rows[i].tag)}>CANCEL</button>\r\n                      }else{\r\n                        row.ready_e3d = \"READY\"\r\n                      }\r\n                    }else{\r\n                      row.color = \"#yyy\"\r\n                      if(this.props.currentRole === \"3D Admin\"){\r\n                        row.ready_e3d = <button class=\"ready__btn btn-sm btn-success\" onClick={() => this.readyE3D(json.rows[i].tag)}>READY</button>\r\n                      }else{\r\n                        row.ready_e3d = \"NOT READY\"\r\n                      }\r\n                    }\r\n                    \r\n                  }else{\r\n                    row.ready_load = \"NOT READY\"\r\n                    row.color = \"white\"\r\n                    if(this.props.currentRole === \"3D Admin\"){\r\n                      row.ready_e3d = <button disabled class=\"ready__disabled btn-sm btn-success\">READY</button>\r\n                    }else{\r\n                      row.ready_e3d = \"NOT READY\"\r\n                    }\r\n                  }\r\n\r\n                  for (const [key, value] of Object.entries(row)) {\r\n                    if(!value){\r\n                      row[key] = \"\"\r\n                    }\r\n                  }\r\n                  \r\n                json.rows[i].sptag = <b>{json.rows[i].sptag}</b>\r\n                json.rows[i].type = <b>{json.rows[i].type}</b>\r\n\r\n                rows.push(row)\r\n              }\r\n            }\r\n            await this.setState({data: rows})\r\n            \r\n          })\r\n          .catch(error => {\r\n              console.log(error);\r\n          })       \r\n      }\r\n\r\n  }\r\n  \r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n\r\n\r\n      \r\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n          \r\n\r\n\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Tag</center>,\r\n        dataIndex: 'tag',\r\n        key: 'tag',\r\n        ...this.getColumnSearchProps('tag'),\r\n        sorter:{\r\n          compare: (a, b) => a.tag.localeCompare(b.tag),\r\n        },\r\n        fixed: \"left\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Type</div>,\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n        ...this.getColumnSearchProps('type'),\r\n        sorter: {\r\n            compare: (a, b) => a.type.localeCompare(b.type),\r\n        },\r\n        fixed: \"left\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Spec</div>,\r\n        dataIndex: 'spec',\r\n        key: 'spec',\r\n        ...this.getColumnSearchProps('spec'),\r\n        sorter: {\r\n            compare: (a, b) => a.spec.localeCompare(b.spec),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">P1Bore</div>,\r\n        dataIndex: 'p1bore',\r\n        key: 'p1bore',\r\n        ...this.getColumnSearchProps('p1bore'),\r\n        sorter: {\r\n          compare: (a, b) => a.p1bore-b.p1bore,\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">P2Bore</div>,\r\n        dataIndex: 'p2bore',\r\n        key: 'p2bore',\r\n        ...this.getColumnSearchProps('p2bore'),\r\n        sorter: {\r\n          compare: (a, b) => a.p2bore-b.p2bore,\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">P3Bore</div>,\r\n        dataIndex: 'p3bore',\r\n        key: 'p3bore',\r\n        ...this.getColumnSearchProps('p3bore'),\r\n        sorter: {\r\n          compare: (a, b) => a.p3bore-b.p3bore,\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Rating</div>,\r\n        dataIndex: 'rating',\r\n        key: 'rating',\r\n        ...this.getColumnSearchProps('rating'),\r\n        sorter: {\r\n            compare: (a, b) => a.rating.localeCompare(b.rating),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">End Preparation</div>,\r\n        dataIndex: 'end_preparation',\r\n        key: 'end_preparation',\r\n        ...this.getColumnSearchProps('end_preparation'),\r\n        sorter: {\r\n            compare: (a, b) => a.end_preparation.localeCompare(b.end_preparation),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">LINE ID</div>,\r\n        dataIndex: 'line_id',\r\n        key: 'line_id',\r\n        ...this.getColumnSearchProps('line_id'),\r\n        sorter: {\r\n            compare: (a, b) => a.line_id.localeCompare(b.line_id),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">P&ID</div>,\r\n        dataIndex: 'pid',\r\n        key: 'pid',\r\n        ...this.getColumnSearchProps('pid'),\r\n        sorter: {\r\n            compare: (a, b) => a.pid.localeCompare(b.pid),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      \r\n      {\r\n        title: <div className=\"dataTable__header__text\">Drawing Description</div>,\r\n        dataIndex: 'description_plane',\r\n        key: 'description_plane',\r\n        ...this.getColumnSearchProps('description_plane'),\r\n        sorter: {\r\n          compare: (a, b) => a.description_plane.localeCompare(b.description_plane),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Drawing</div>,\r\n        dataIndex: 'drawing',\r\n        key: 'drawing',\r\n        ...this.getColumnSearchProps('drawing'),\r\n        width: \"400px\",\r\n        align: \"center\"\r\n      },\r\n      \r\n      {\r\n        title: <center className=\"dataTable__header__text\">Quantity</center>,\r\n        dataIndex: 'quantity',\r\n        key: 'quantity',\r\n        ...this.getColumnSearchProps('quantity'),\r\n        sorter:{\r\n          compare: (a, b) => a.quantity - b.quantity,\r\n        },\r\n        align: \"center\"\r\n      },    \r\n      {\r\n        title: <center className=\"dataTable__header__text\">Requisition</center>,\r\n        dataIndex: 'requisition',\r\n        key: 'requisition',\r\n        ...this.getColumnSearchProps('requisition'),\r\n        sorter:{\r\n          compare: (a, b) => a.requisition - b.requisition,\r\n        },\r\n        align: \"center\"\r\n      }, \r\n      {\r\n        title: <center className=\"dataTable__header__text\">Description</center>,\r\n        dataIndex: 'description',\r\n        key: 'description',\r\n        ...this.getColumnSearchProps('description'),\r\n        width: \"400px\",\r\n        sorter:{\r\n          compare: (a, b) => a.description.localeCompare(b.description),\r\n        },\r\n      },\r\n      \r\n      {\r\n        title: <div className=\"dataTable__header__text\">Iso Description</div>,\r\n        dataIndex: 'description_iso',\r\n        key: 'description_iso',\r\n        ...this.getColumnSearchProps('description_iso'),\r\n        width: \"400px\",\r\n        sorter: {\r\n          compare: (a, b) => a.description_iso.localeCompare(b.description_iso),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Ident</div>,\r\n        dataIndex: 'ident',\r\n        key: 'ident',\r\n        ...this.getColumnSearchProps('ident'),\r\n        sorter: {\r\n          compare: (a, b) => a.ident.localeCompare(b.ident),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Face to Face</div>,\r\n        dataIndex: 'face_to_face',\r\n        key: 'face_to_face',\r\n        ...this.getColumnSearchProps('face_to_face'),\r\n        sorter: {\r\n            compare: (a, b) => a.face_to_face.localeCompare(b.face_to_face),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">FLG Short Code</div>,\r\n        dataIndex: 'bolts_type',\r\n        key: 'bolts_type',\r\n        ...this.getColumnSearchProps('bolts_type'),\r\n        sorter: {\r\n            compare: (a, b) => a.bolts_type.localeCompare(b.bolts_type),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Equipment + Nozzle</div>,\r\n        dataIndex: 'equipnozz',\r\n        key: 'equipnozz',\r\n        ...this.getColumnSearchProps('equipnozz'),\r\n        sorter: {\r\n            compare: (a, b) => a.equipnozz.localeCompare(b.equipnozz),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Utility Station</div>,\r\n        dataIndex: 'utility_station',\r\n        key: 'utility_station',\r\n        ...this.getColumnSearchProps('utility_station'),\r\n        sorter: {\r\n            compare: (a, b) => a.utility_station.localeCompare(b.utility_station),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Request date</div>,\r\n        dataIndex: 'request_date',\r\n        key: 'request_date',\r\n        ...this.getColumnSearchProps('request_date'),\r\n        sorter: {\r\n            compare: (a, b) => a.request_date.localeCompare(b.request_date),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Ready to load date</div>,\r\n        dataIndex: 'ready_load_date',\r\n        key: 'ready_load_date',\r\n        ...this.getColumnSearchProps('ready_load_date'),\r\n        sorter: {\r\n            compare: (a, b) => a.ready_load_date.localeCompare(b.ready_load_date),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Ready in 3D date</div>,\r\n        dataIndex: 'ready_e3d_date',\r\n        key: 'ready_e3d_date',\r\n        ...this.getColumnSearchProps('ready_e3d_date'),\r\n        sorter: {\r\n            compare: (a, b) => a.ready_e3d_date.localeCompare(b.ready_e3d_date),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Comments</div>,\r\n        dataIndex: 'comments',\r\n        key: 'comments',\r\n        ...this.getColumnSearchProps('comments'),\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Ready to Load</div>,\r\n        dataIndex: 'ready_load',\r\n        key: 'ready_load',\r\n        ...this.getColumnSearchProps('ready_load'),\r\n        sorter: {\r\n            compare: (a, b) => a.ready_load.localeCompare(b.ready_load),\r\n        },\r\n        fixed: \"right\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Ready in 3D</div>,\r\n        dataIndex: 'ready_e3d',\r\n        key: 'ready_e3d',\r\n        ...this.getColumnSearchProps('ready_e3d'),\r\n        fixed: \"right\",\r\n        align: \"center\"\r\n      },\r\n    ];\r\n    \r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"estimatedDataTable__container\" style={{width:\"auto\"}}>\r\n        <Table className=\"customTable\" bordered = {true} columns={columns} dataSource={this.state.data} pagination={{disabled:true, defaultPageSize:5000}} size=\"small\"\r\n         rowClassName= {(record) => record.color.replace('#', '')} scroll={{x:8000, y: 437}}/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CSPTrackerdDataTable;"]},"metadata":{},"sourceType":"module"}