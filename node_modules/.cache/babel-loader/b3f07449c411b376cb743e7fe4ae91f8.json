{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\sptracker\\\\sptracker.js\",\n    _s = $RefreshSig$();\n\nimport \"./sptracker.css\";\nimport React, { useState, useEffect } from 'react';\nimport NavBar from '../../components/navBar/navBar';\nimport IdleTimer from 'react-idle-timer';\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SPTracker = () => {\n  _s();\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const [currentRole, setCurrentRole] = useState();\n  const [roles, setRoles] = useState();\n  const [pagination, setPagination] = useState(10);\n  const [successAlert, setSuccessAlert] = useState(false);\n  const history = useHistory();\n  var currentUser = secureStorage.getItem('user');\n  useEffect(() => {\n    const body = {\n      user: currentUser\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/roles/user\", options).then(response => response.json()).then(json => {\n      setRoles(json.roles);\n\n      if (secureStorage.getItem('role') !== null) {\n        setCurrentRole(secureStorage.getItem('role'));\n      } else {\n        secureStorage.setItem('role', json.roles[0]);\n        setCurrentRole(secureStorage.getItem('role'));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [currentRole]);\n\n  function success() {\n    setSuccessAlert(true);\n    setTimeout(function () {\n      setSuccessAlert(false);\n    }, 1000);\n  }\n\n  function handleOnIdle() {\n    secureStorage.clear();\n    history.push(\"/\" + process.env.REACT_APP_APP_NAMEPROJ);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(IdleTimer, {\n      timeout: 1000 * 60 * 15,\n      onIdle: handleOnIdle,\n      debounce: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      onChange: value => setCurrentTab(currentTab)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SPTracker, \"gxNKVEM93fhCvhW1dOgntGCtpQw=\", false, function () {\n  return [useHistory];\n});\n\n_c = SPTracker;\nexport default SPTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"SPTracker\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/sptracker/sptracker.js"],"names":["React","useState","useEffect","NavBar","IdleTimer","useHistory","SPTracker","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","currentRole","setCurrentRole","roles","setRoles","pagination","setPagination","successAlert","setSuccessAlert","history","currentUser","getItem","body","user","options","method","headers","JSON","stringify","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","setItem","catch","error","console","log","success","setTimeout","handleOnIdle","clear","push","REACT_APP_APP_NAMEPROJ","value","setCurrentTab","currentTab"],"mappings":"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","sourcesContent":["import \"./sptracker.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst SPTracker = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const[pagination, setPagination] = useState(10)\r\n    const[successAlert, setSuccessAlert] = useState(false);\r\n    \r\n\r\n    const history = useHistory()\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    function success(){\r\n        setSuccessAlert(true)\r\n        setTimeout(function () {\r\n            setSuccessAlert(false)\r\n        }, 1000);\r\n    }\r\n    \r\n    function handleOnIdle(){\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_APP_NAMEPROJ)\r\n    }\r\n    \r\n\r\n\r\n\r\n    return(\r\n        \r\n        <body>\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default SPTracker;"]},"metadata":{},"sourceType":"module"}