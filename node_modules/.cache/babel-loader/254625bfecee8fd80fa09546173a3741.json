{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\r\n * Row utils class contains all necessary information about sizes of the rows.\r\n *\r\n * @class {RowUtils}\r\n */\n\n\nvar RowUtils = /*#__PURE__*/function () {\n  function RowUtils(wot) {\n    _classCallCheck(this, RowUtils);\n\n    this.wot = wot;\n  }\n  /**\r\n   * Returns row height based on passed source index.\r\n   *\r\n   * @param {number} sourceIndex Row source index.\r\n   * @returns {number}\r\n   */\n\n\n  _createClass(RowUtils, [{\n    key: \"getHeight\",\n    value: function getHeight(sourceIndex) {\n      var height = this.wot.wtSettings.settings.rowHeight(sourceIndex);\n      var oversizedHeight = this.wot.wtViewport.oversizedRows[sourceIndex];\n\n      if (oversizedHeight !== void 0) {\n        height = height === void 0 ? oversizedHeight : Math.max(height, oversizedHeight);\n      }\n\n      return height;\n    }\n  }]);\n\n  return RowUtils;\n}();\n\nexport { RowUtils as default };","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/3rdparty/walkontable/src/utils/row.mjs"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","RowUtils","wot","value","getHeight","sourceIndex","height","wtSettings","settings","rowHeight","oversizedHeight","wtViewport","oversizedRows","Math","max","default"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BC,IAAAA,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AAA4D;AAAE;;AAE7T,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACiB,SAAb,EAAwBF,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;AAA6C,SAAOhB,WAAP;AAAqB;AAEvN;AACA;AACA;AACA;AACA;;;AACA,IAAIkB,QAAQ,GAAG,aAAa,YAAY;AACtC,WAASA,QAAT,CAAkBC,GAAlB,EAAuB;AACrBrB,IAAAA,eAAe,CAAC,IAAD,EAAOoB,QAAP,CAAf;;AAEA,SAAKC,GAAL,GAAWA,GAAX;AACD;AACD;AACF;AACA;AACA;AACA;AACA;;;AAGEL,EAAAA,YAAY,CAACI,QAAD,EAAW,CAAC;AACtBL,IAAAA,GAAG,EAAE,WADiB;AAEtBO,IAAAA,KAAK,EAAE,SAASC,SAAT,CAAmBC,WAAnB,EAAgC;AACrC,UAAIC,MAAM,GAAG,KAAKJ,GAAL,CAASK,UAAT,CAAoBC,QAApB,CAA6BC,SAA7B,CAAuCJ,WAAvC,CAAb;AACA,UAAIK,eAAe,GAAG,KAAKR,GAAL,CAASS,UAAT,CAAoBC,aAApB,CAAkCP,WAAlC,CAAtB;;AAEA,UAAIK,eAAe,KAAK,KAAK,CAA7B,EAAgC;AAC9BJ,QAAAA,MAAM,GAAGA,MAAM,KAAK,KAAK,CAAhB,GAAoBI,eAApB,GAAsCG,IAAI,CAACC,GAAL,CAASR,MAAT,EAAiBI,eAAjB,CAA/C;AACD;;AAED,aAAOJ,MAAP;AACD;AAXqB,GAAD,CAAX,CAAZ;;AAcA,SAAOL,QAAP;AACD,CA7B2B,EAA5B;;AA+BA,SAASA,QAAQ,IAAIc,OAArB","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n/**\r\n * Row utils class contains all necessary information about sizes of the rows.\r\n *\r\n * @class {RowUtils}\r\n */\r\nvar RowUtils = /*#__PURE__*/function () {\r\n  function RowUtils(wot) {\r\n    _classCallCheck(this, RowUtils);\r\n\r\n    this.wot = wot;\r\n  }\r\n  /**\r\n   * Returns row height based on passed source index.\r\n   *\r\n   * @param {number} sourceIndex Row source index.\r\n   * @returns {number}\r\n   */\r\n\r\n\r\n  _createClass(RowUtils, [{\r\n    key: \"getHeight\",\r\n    value: function getHeight(sourceIndex) {\r\n      var height = this.wot.wtSettings.settings.rowHeight(sourceIndex);\r\n      var oversizedHeight = this.wot.wtViewport.oversizedRows[sourceIndex];\r\n\r\n      if (oversizedHeight !== void 0) {\r\n        height = height === void 0 ? oversizedHeight : Math.max(height, oversizedHeight);\r\n      }\r\n\r\n      return height;\r\n    }\r\n  }]);\r\n\r\n  return RowUtils;\r\n}();\r\n\r\nexport { RowUtils as default };"]},"metadata":{},"sourceType":"module"}