{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ssaez1\\\\technip-repositories\\\\isotracker\\\\isotracker-react\\\\src\\\\components\\\\progressPlotEquipments\\\\progressPlotEquipments.js\";\nimport React from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const data = [[{\n  type: \"number\",\n  label: \"x\"\n}, {\n  type: \"number\",\n  label: \"values\"\n}, {\n  id: \"i0\",\n  type: \"number\",\n  role: \"interval\"\n}, {\n  id: \"i1\",\n  type: \"number\",\n  role: \"interval\"\n}, {\n  id: \"i2\",\n  type: \"number\",\n  role: \"interval\"\n}, {\n  id: \"i2\",\n  type: \"number\",\n  role: \"interval\"\n}, {\n  id: \"i2\",\n  type: \"number\",\n  role: \"interval\"\n}, {\n  id: \"i2\",\n  type: \"number\",\n  role: \"interval\"\n}], [1, 100, 90, 110, 85, 96, 104, 120], [2, 120, 95, 130, 90, 113, 124, 140], [3, 130, 105, 140, 100, 117, 133, 139], [4, 90, 85, 95, 85, 88, 92, 95], [5, 70, 74, 63, 67, 69, 70, 72], [6, 30, 39, 22, 21, 28, 34, 40], [7, 80, 77, 83, 70, 77, 85, 90], [8, 100, 90, 110, 85, 95, 102, 110]];\nexport const options = {\n  title: \"Line intervals, default\",\n  curveType: \"function\",\n  lineWidth: 4,\n  intervals: {\n    style: \"line\"\n  },\n  legend: \"none\"\n};\nexport default class ProgressPlotEquipments extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/gequips\", options).then(response => response.json()).then(async json => {\n      let weeks = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        weeks.push({\n          name: \"W\" + json.rows[i].week,\n          estimated: json.rows[i].estimated,\n          progress: json.rows[i].progress\n        });\n      }\n\n      await this.setState({\n        data: weeks\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"LineChart\",\n      width: \"100%\",\n      height: \"400px\",\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this)\n    /*<ResponsiveContainer width=\"90%\" height=\"90%\">\r\n      <LineChart\r\n    \twidth={500}\r\n    \theight={400}\r\n    \tdata={this.state.data}\r\n    \tmargin={{\r\n    \t  top: 35,\r\n    \t  right: 30,\r\n    \t  left: 20,\r\n    \t  bottom: -15,\r\n    \t}}\r\n      >\r\n    \t<CartesianGrid strokeDasharray=\"3 3\" />\r\n    \t<XAxis dataKey=\"name\" />\r\n    \t<YAxis label={{ value: \"Progress(%)\", position: \"insideLeft\", angle: -90,   dy: 30}} />\r\n    \t<Tooltip />\r\n    \t<Legend />\r\n    \t<Line type=\"monotone\" dataKey=\"progress\" stroke=\"blue\" activeDot={{ r: 8 }} />\r\n    \t<Line type=\"monotone\" dataKey=\"estimated\" stroke=\"red\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>*/\n    ;\n  }\n\n}\nProgressPlotEquipments.demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';","map":{"version":3,"sources":["C:/Users/ssaez1/technip-repositories/isotracker/isotracker-react/src/components/progressPlotEquipments/progressPlotEquipments.js"],"names":["React","CartesianGrid","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","Chart","data","type","label","id","role","options","title","curveType","lineWidth","intervals","style","legend","ProgressPlotEquipments","PureComponent","state","componentDidMount","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","weeks","i","rows","length","push","name","week","estimated","progress","setState","render","demoUrl"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport const data = [\r\n\t[\r\n\t{ type: \"number\", label: \"x\" },\r\n\t{ type: \"number\", label: \"values\" },\r\n\t{ id: \"i0\", type: \"number\", role: \"interval\" },\r\n\t{ id: \"i1\", type: \"number\", role: \"interval\" },\r\n\t{ id: \"i2\", type: \"number\", role: \"interval\" },\r\n\t{ id: \"i2\", type: \"number\", role: \"interval\" },\r\n\t{ id: \"i2\", type: \"number\", role: \"interval\" },\r\n\t{ id: \"i2\", type: \"number\", role: \"interval\" },\r\n\t],\r\n\t[1, 100, 90, 110, 85, 96, 104, 120],\r\n\t[2, 120, 95, 130, 90, 113, 124, 140],\r\n\t[3, 130, 105, 140, 100, 117, 133, 139],\r\n\t[4, 90, 85, 95, 85, 88, 92, 95],\r\n\t[5, 70, 74, 63, 67, 69, 70, 72],\r\n\t[6, 30, 39, 22, 21, 28, 34, 40],\r\n\t[7, 80, 77, 83, 70, 77, 85, 90],\r\n\t[8, 100, 90, 110, 85, 95, 102, 110],\r\n\t];\r\n\t\r\n\texport const options = {\r\n\ttitle: \"Line intervals, default\",\r\n\tcurveType: \"function\",\r\n\tlineWidth: 4,\r\n\tintervals: { style: \"line\" },\r\n\tlegend: \"none\",\r\n\t};\r\n\r\n  export default class ProgressPlotEquipments extends React.PureComponent {\r\n\tstatic demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';\r\n\t\r\n\r\n\tstate = {\r\n\t\tdata: []\r\n\t  };\r\n\r\n\t\r\n\r\n\tasync componentDidMount (){\r\n\r\n\t\tconst options = {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/gequips\", options)\r\n\t\t.then(response => response.json())\r\n\t\t.then(async json=>{\r\n\t\t\tlet weeks = []\r\n\t\t\tfor(let i = 0; i < json.rows.length; i++){\r\n\t\t\t\tweeks.push({name: \"W\"+json.rows[i].week, estimated: json.rows[i].estimated, progress: json.rows[i].progress})\r\n\t\t\t}\r\n\t\t\tawait this.setState({data: weeks})\r\n\t\t})\r\n\t}\r\n\r\n\t\r\n\r\n\trender() {\r\n\t  return (\r\n\r\n\t\t<Chart\r\n\t\t\tchartType=\"LineChart\"\r\n\t\t\twidth=\"100%\"\r\n\t\t\theight=\"400px\"\r\n\t\t\tdata={data}\r\n\t\t\toptions={options}\r\n\t\t/>\r\n\t\t/*<ResponsiveContainer width=\"90%\" height=\"90%\">\r\n\t\t  <LineChart\r\n\t\t\twidth={500}\r\n\t\t\theight={400}\r\n\t\t\tdata={this.state.data}\r\n\t\t\tmargin={{\r\n\t\t\t  top: 35,\r\n\t\t\t  right: 30,\r\n\t\t\t  left: 20,\r\n\t\t\t  bottom: -15,\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t<XAxis dataKey=\"name\" />\r\n\t\t\t<YAxis label={{ value: \"Progress(%)\", position: \"insideLeft\", angle: -90,   dy: 30}} />\r\n\t\t\t<Tooltip />\r\n\t\t\t<Legend />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"progress\" stroke=\"blue\" activeDot={{ r: 8 }} />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"estimated\" stroke=\"red\" />\r\n\t\t  </LineChart>\r\n\t\t</ResponsiveContainer>*/\r\n\t  );\r\n\t}\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}