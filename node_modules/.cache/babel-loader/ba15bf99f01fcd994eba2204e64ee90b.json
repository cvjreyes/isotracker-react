{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\estimatedPipesExcel\\\\estimatedPipesExcel.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport \"./estimatedPipesExcel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EstimatedPipesExcel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      diameters: [],\n      areas: [],\n      trains: [\"01\", \"02\", \"03\", \"04\", \"05\"],\n      line_refs: [],\n      new_data: {},\n      warning: false,\n      empty: false,\n      tags: [],\n      designers: [],\n      owners: [[\"\", \"\", \"\"]]\n    };\n\n    this.handleChange = async (changes, source) => {\n      if (source !== 'loadData') {\n        let data_aux = this.state.data;\n\n        for (let i = 0; i < changes.length; i += 4) {\n          if (changes[i][1] === \"Owner IFC\") {\n            let owners = this.state.owners;\n            owners.push([\"IFC\", this.state.data[changes[i][0]].Tag, changes[0][3]]);\n            this.setState({\n              owners: owners\n            });\n          } else if (changes[i][1] === \"Owner IsoTracker\") {\n            let owners = this.state.owners;\n            owners.push([\"ISO\", this.state.data[changes[i][0]].Tag, changes[0][3]]);\n            this.setState({\n              owners: owners\n            });\n          } else {\n            let row_id = changes[i][0];\n\n            if (this.state.data[row_id].Status === \"MODELLED*\" || this.state.data[row_id].Status === \"MODELLED\") {\n              data_aux[row_id][changes[0][1]] = \"##########\";\n              await this.setState({\n                data: data_aux,\n                warning: true\n              });\n            } else {\n              let row = this.state.data[row_id];\n\n              if (changes[i][1] === 'Line reference') {\n                const options = {\n                  method: \"GET\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                };\n                await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getDataByRef/\" + changes[i][3], options).then(response => response.json()).then(async json => {\n                  if (json.pipe) {\n                    data_aux[row_id].Unit = json.pipe[0].unit;\n                    data_aux[row_id].Fluid = json.pipe[0].fluid;\n                    data_aux[row_id].Seq = json.pipe[0].seq;\n                    data_aux[row_id].Spec = json.pipe[0].spec_code;\n                    data_aux[row_id].Insulation = json.pipe[0].insulation;\n\n                    if (json.pipe[0].calc_notes !== \"NA\") {\n                      data_aux[row_id].Type = \"TL3\";\n                    } else if (process.env.NODE_MMDN === \"0\") {\n                      if (data_aux[row_id].Diameter < 2.00) {\n                        data_aux[row_id].Type = \"TL1\";\n                      } else {\n                        data_aux[row_id].Type = \"TL2\";\n                      }\n                    } else {\n                      if (data_aux[row_id].Diameter < 50) {\n                        data_aux[row_id].Type = \"TL1\";\n                      } else {\n                        data_aux[row_id].Type = \"TL2\";\n                      }\n                    }\n\n                    await this.setState({\n                      data: data_aux\n                    });\n                  }\n                });\n              }\n\n              if (row.Area && row.Diameter && row.Train && row[\"Line reference\"]) {\n                let tag_order = process.env.REACT_APP_TAG_ORDER.split(/[ -]+/);\n                data_aux[row_id].Tag = row[tag_order[0]] + \"-\" + row[tag_order[1]] + \"-\" + row[tag_order[2]] + \"-\" + row[tag_order[3]] + \"-\" + row[tag_order[4]] + \"-\" + row[tag_order[5]] + \"-\" + row[tag_order[6]] + \"_\" + row[tag_order[7]];\n              }\n\n              let new_data = this.state.new_data;\n\n              if (this.state.tags.indexOf(data_aux[row_id].Tag) > -1 && this.state.tags.indexOf(data_aux[row_id].Tag) !== row_id) {\n                data_aux[row_id].Tag = \"ALREADY EXISTS\";\n                data_aux[row_id].Area = \"\";\n                data_aux[row_id].Diameter = \"\";\n                data_aux[row_id].Train = \"\";\n                data_aux[row_id].Status = \"\";\n              } else {\n                data_aux[row_id].Status = \"ESTIMATED\";\n\n                if (data_aux[row_id].Type !== \"TL3\") {\n                  if (process.env.NODE_MMDN === \"0\") {\n                    if (data_aux[row_id].Diameter < 2.00) {\n                      data_aux[row_id].Type = \"TL1\";\n                    } else {\n                      data_aux[row_id].Type = \"TL2\";\n                    }\n                  } else {\n                    if (data_aux[row_id].Diameter < 50) {\n                      data_aux[row_id].Type = \"TL1\";\n                    } else {\n                      data_aux[row_id].Type = \"TL2\";\n                    }\n                  }\n                }\n\n                new_data[row_id] = row;\n              }\n\n              await this.setState({\n                data: data_aux,\n                new_data: new_data\n              });\n\n              if (!row[\"Line reference\"] && row.id) {\n                let new_data = this.state.new_data;\n                new_data[row_id] = {\n                  \"Line reference\": \"deleted\",\n                  id: row.id\n                };\n                await this.setState({\n                  data: data_aux,\n                  new_data: new_data\n                });\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/areas\", options).then(response => response.json()).then(json => {\n      let areas_options = [];\n\n      for (let i = 0; i < json.length; i++) {\n        areas_options.push(json[i].name);\n      }\n\n      this.setState({\n        areas: areas_options\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/diameters\", options).then(response => response.json()).then(json => {\n      let diameters = [];\n\n      for (let i = 0; i < json.diameters.length; i++) {\n        diameters.push(json.diameters[i].diameter);\n      }\n\n      this.setState({\n        diameters: diameters\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/lineRefs\", options).then(response => response.json()).then(json => {\n      let line_refs = [];\n\n      for (let i = 0; i < json.line_refs.length; i++) {\n        line_refs.push(json.line_refs[i].line_ref);\n      }\n\n      this.setState({\n        line_refs: line_refs\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/designers\", options).then(response => response.json()).then(json => {\n      let designers = [];\n\n      for (let i = 0; i < json.designers.length; i++) {\n        designers.push(json.designers[i].name);\n      }\n\n      this.setState({\n        designers: designers\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/modelledEstimatedPipes\", options).then(response => response.json()).then(async json => {\n      let rows = [];\n      let tags = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        rows.push({\n          \"Line reference\": json.rows[i].line_reference,\n          \"Tag\": json.rows[i].tag,\n          \"Owner IFC\": json.rows[i].owner_ifc,\n          \"Owner IsoTracker\": json.rows[i].owner_iso,\n          \"Unit\": json.rows[i].unit,\n          \"Area\": json.rows[i].area,\n          \"Fluid\": json.rows[i].fluid,\n          \"Seq\": json.rows[i].seq,\n          \"Spec\": json.rows[i].spec,\n          \"Type\": json.rows[i].type,\n          \"Diameter\": json.rows[i].diameter,\n          \"Insulation\": json.rows[i].insulation,\n          \"Train\": json.rows[i].train,\n          \"Status\": json.rows[i].status,\n          \"id\": json.rows[i].id\n        });\n        tags.push(json.rows[i].tag);\n      }\n\n      await this.setState({\n        data: rows,\n        tags: tags\n      });\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/modelledEstimatedPipes\", options).then(response => response.json()).then(async json => {\n        let rows = [];\n\n        for (let i = 0; i < json.rows.length; i++) {\n          rows.push({\n            \"Line reference\": json.rows[i].line_reference,\n            \"Tag\": json.rows[i].tag,\n            \"Owner IFC\": json.rows[i].owner_ifc,\n            \"Owner IsoTracker\": json.rows[i].owner_iso,\n            \"Unit\": json.rows[i].unit,\n            \"Area\": json.rows[i].area,\n            \"Fluid\": json.rows[i].fluid,\n            \"Seq\": json.rows[i].seq,\n            \"Spec\": json.rows[i].spec,\n            \"Type\": json.rows[i].type,\n            \"Diameter\": json.rows[i].diameter,\n            \"Insulation\": json.rows[i].insulation,\n            \"Train\": json.rows[i].train,\n            \"Status\": json.rows[i].status,\n            \"id\": json.rows[i].id\n          });\n        }\n\n        await this.setState({\n          data: rows\n        });\n      });\n    }\n  }\n\n  addRow() {\n    let rows = this.state.data;\n    rows.push({\n      \"Line reference\": \"\",\n      \"Tag\": \"\",\n      \"Owner IFC\": \"\",\n      \"Owner IsoTracker\": \"\",\n      \"Unit\": \"\",\n      \"Area\": \"\",\n      \"Fluid\": \"\",\n      \"Seq\": \"\",\n      \"Spec\": \"\",\n      \"Type\": \"\",\n      \"Diameter\": \"\",\n      \"Insulation\": \"\",\n      \"Train\": \"\",\n      \"Status\": \"\"\n    });\n    this.setState({\n      data: rows\n    });\n  }\n\n  async submitChanges() {\n    let new_rows = [];\n    Object.entries(this.state.new_data).map(([key, value]) => new_rows.push(value));\n\n    for (let i = 0; i < new_rows.length; i++) {\n      if (new_rows[i][\"Line reference\"] === \"\" || new_rows[i].Tag === \"\" || new_rows[i].Unit === \"\" || new_rows[i].Area === \"\" || new_rows[i].Fluid === \"\" || new_rows[i].Seq === \"\" || new_rows[i].Spec === \"\" || new_rows[i].Diameter === \"\" || new_rows[i].Insulation === \"\" || new_rows[i].Train === \"\" || new_rows[i][\"Line reference\"] === null || new_rows[i].Tag === null || new_rows[i].Unit === null || new_rows[i].Area === null || new_rows[i].Fluid === null || new_rows[i].Seq === null || new_rows[i].Spec === null || new_rows[i].Diameter === null || new_rows[i].Insulation === null || new_rows[i].Train === null) {\n        await this.setState({\n          empty: true\n        });\n        new_rows.splice(i, 1);\n      }\n    }\n\n    const body = {\n      rows: new_rows,\n      owners: this.state.owners\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitModelledEstimatedPipes\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        this.props.success();\n      }\n\n      if (this.state.warning) {\n        this.props.estimatedWarning();\n      }\n\n      if (this.state.empty) {\n        this.props.estimatedEmpty();\n      }\n\n      this.setState({\n        new_data: [],\n        warning: false,\n        empty: false\n      });\n    });\n    await this.props.updateData();\n  }\n\n  render() {\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: [180, 400, 240, 240, 70, 70, 70, 100, 95, 80, 105, 110, 70, 120],\n      fontSize: 24 //... other options\n\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hot-app\",\n        children: [/*#__PURE__*/_jsxDEV(HotTable, {\n          data: this.state.data,\n          colHeaders: [\"<b className='header'>Line reference</b>\", \"<b>Tag</b>\", \"<b>Owner IFC</b>\", \"<b>Owner IsoTracker</b>\", \"<b>Unit</b>\", \"<b>Area</b>\", \"<b>Fluid</b>\", \"<b>Seq</b>\", \"<b>Spec</b>\", \"<b>Type</b>\", \"<b>Diameter</b>\", \"<b>Insulation</b>\", \"<b>Train</b>\", \"<b>Status</b>\"],\n          rowHeaders: true,\n          rowHeights: \"30px\",\n          columnHeaderHeight: 30,\n          width: \"100%\",\n          height: \"520\",\n          settings: settings,\n          manualColumnResize: true,\n          manualRowResize: true,\n          columns: [{\n            data: \"Line reference\",\n            type: 'dropdown',\n            source: this.state.line_refs,\n            strict: true\n          }, {\n            data: \"Tag\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Owner IFC\",\n            type: 'dropdown',\n            source: this.state.designers,\n            strict: true\n          }, {\n            data: \"Owner IsoTracker\",\n            type: 'dropdown',\n            source: this.state.designers,\n            strict: true\n          }, {\n            data: \"Unit\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Area\",\n            type: 'dropdown',\n            source: this.state.areas,\n            strict: true\n          }, {\n            data: \"Fluid\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Seq\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Spec\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Type\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Diameter\",\n            type: 'dropdown',\n            source: this.state.diameters,\n            strict: true\n          }, {\n            data: \"Insulation\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Train\",\n            type: 'dropdown',\n            source: this.state.trains,\n            strict: true\n          }, {\n            data: \"Status\",\n            type: 'text',\n            readOnly: true\n          }],\n          filters: true,\n          dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar'],\n          afterChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"695px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-info\",\n            onClick: () => this.addRow(),\n            style: {\n              marginRight: \"25px\",\n              fontSize: \"16px\",\n              width: \"160px\",\n              borderRadius: \"10px\"\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-success\",\n            onClick: () => this.submitChanges(),\n            style: {\n              marginRight: \"5px\",\n              fontSize: \"16px\",\n              width: \"160px\",\n              borderRadius: \"10px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default EstimatedPipesExcel;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/estimatedPipesExcel/estimatedPipesExcel.js"],"names":["React","HotTable","EstimatedPipesExcel","Component","state","searchText","searchedColumn","data","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","diameters","areas","trains","line_refs","new_data","warning","empty","tags","designers","owners","handleChange","changes","source","data_aux","i","length","push","Tag","setState","row_id","Status","row","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","pipe","Unit","unit","Fluid","fluid","Seq","seq","Spec","spec_code","Insulation","insulation","calc_notes","Type","NODE_MMDN","Diameter","Area","Train","tag_order","REACT_APP_TAG_ORDER","split","indexOf","id","componentDidMount","areas_options","name","diameter","line_ref","rows","line_reference","tag","owner_ifc","owner_iso","area","spec","type","train","status","componentDidUpdate","prevProps","prevState","addRow","submitChanges","new_rows","Object","entries","map","key","value","splice","body","JSON","stringify","success","estimatedWarning","estimatedEmpty","render","settings","licenseKey","colWidths","fontSize","strict","readOnly","marginLeft","marginRight","width","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport \"./estimatedPipesExcel.css\"\r\n\r\nclass EstimatedPipesExcel extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    diameters: [],\r\n    areas: [],\r\n    trains: [\"01\", \"02\", \"03\", \"04\", \"05\"],\r\n    line_refs: [],\r\n    new_data: {},\r\n    warning: false,\r\n    empty: false,\r\n    tags: [],\r\n    designers: [],\r\n    owners: [[\"\", \"\", \"\"]]\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n\r\n  fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/areas\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      let areas_options = []\r\n      for(let i = 0; i < json.length; i++){\r\n        areas_options.push(json[i].name)\r\n      }\r\n      this.setState({areas : areas_options});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/diameters\", options)\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    let diameters = []\r\n    for(let i = 0; i < json.diameters.length; i++){\r\n      diameters.push(json.diameters[i].diameter)\r\n    }\r\n    this.setState({diameters : diameters});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/lineRefs\", options)\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    let line_refs = []\r\n    for(let i = 0; i < json.line_refs.length; i++){\r\n      line_refs.push(json.line_refs[i].line_ref)\r\n    }\r\n    this.setState({line_refs : line_refs});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/designers\", options)\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    let designers = []\r\n    for(let i = 0; i < json.designers.length; i++){\r\n      designers.push(json.designers[i].name)\r\n    }\r\n    this.setState({designers : designers});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/modelledEstimatedPipes\", options)\r\n  .then(response => response.json())\r\n  .then(async json => {\r\n    let rows = [] \r\n    let tags = []\r\n    for(let i = 0; i < json.rows.length; i++){\r\n      rows.push({\"Line reference\": json.rows[i].line_reference, \"Tag\": json.rows[i].tag, \"Owner IFC\":json.rows[i].owner_ifc, \"Owner IsoTracker\":json.rows[i].owner_iso, \"Unit\": json.rows[i].unit, \"Area\": json.rows[i].area, \"Fluid\": json.rows[i].fluid, \"Seq\": json.rows[i].seq, \"Spec\": json.rows[i].spec, \"Type\": json.rows[i].type, \"Diameter\": json.rows[i].diameter, \"Insulation\": json.rows[i].insulation, \"Train\": json.rows[i].train, \"Status\": json.rows[i].status, \"id\":json.rows[i].id})\r\n      tags.push(json.rows[i].tag)\r\n    }\r\n    await this.setState({data: rows, tags: tags})\r\n  })\r\n}\r\n\r\nasync componentDidUpdate(prevProps, prevState){\r\n\r\n  if(prevProps !== this.props){\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n    }\r\n\r\n\r\n    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/modelledEstimatedPipes\", options)\r\n    .then(response => response.json())\r\n    .then(async json => {\r\n      let rows = [] \r\n      for(let i = 0; i < json.rows.length; i++){\r\n        rows.push({\"Line reference\": json.rows[i].line_reference, \"Tag\": json.rows[i].tag, \"Owner IFC\":json.rows[i].owner_ifc, \"Owner IsoTracker\":json.rows[i].owner_iso, \"Unit\": json.rows[i].unit, \"Area\": json.rows[i].area, \"Fluid\": json.rows[i].fluid, \"Seq\": json.rows[i].seq, \"Spec\": json.rows[i].spec, \"Type\": json.rows[i].type, \"Diameter\": json.rows[i].diameter, \"Insulation\": json.rows[i].insulation, \"Train\": json.rows[i].train, \"Status\": json.rows[i].status, \"id\":json.rows[i].id})\r\n      }\r\n      await this.setState({data: rows})\r\n    })\r\n  }\r\n\r\n}\r\n\r\n  addRow(){\r\n    let rows = this.state.data\r\n    rows.push({\"Line reference\": \"\", \"Tag\": \"\", \"Owner IFC\": \"\", \"Owner IsoTracker\": \"\", \"Unit\": \"\", \"Area\": \"\", \"Fluid\": \"\", \"Seq\": \"\", \"Spec\": \"\", \"Type\": \"\", \"Diameter\": \"\", \"Insulation\": \"\", \"Train\": \"\", \"Status\": \"\"})\r\n    this.setState({data: rows})\r\n  }\r\n  \r\n  async submitChanges(){\r\n    \r\n    let new_rows = []\r\n    Object.entries(this.state.new_data)\r\n    .map( ([key, value]) => new_rows.push(value))\r\n    for(let i = 0; i < new_rows.length; i++){\r\n      if(new_rows[i][\"Line reference\"] === \"\" || new_rows[i].Tag === \"\" || new_rows[i].Unit === \"\" || new_rows[i].Area === \"\" || new_rows[i].Fluid === \"\" || new_rows[i].Seq === \"\" || new_rows[i].Spec === \"\" || new_rows[i].Diameter === \"\" || new_rows[i].Insulation === \"\" || new_rows[i].Train === \"\" || new_rows[i][\"Line reference\"] === null || new_rows[i].Tag === null || new_rows[i].Unit === null || new_rows[i].Area === null || new_rows[i].Fluid === null || new_rows[i].Seq === null || new_rows[i].Spec === null || new_rows[i].Diameter === null || new_rows[i].Insulation === null || new_rows[i].Train === null){\r\n        await this.setState({empty: true})\r\n        new_rows.splice(i, 1)\r\n      }\r\n    }\r\n\r\n    const body = {\r\n      rows: new_rows,\r\n      owners: this.state.owners\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitModelledEstimatedPipes\", options)\r\n    .then(response => response.json())\r\n    .then(async json => {\r\n      if(json.success){\r\n        this.props.success()\r\n        \r\n      }\r\n      if(this.state.warning){\r\n        this.props.estimatedWarning()\r\n      }\r\n      if(this.state.empty){\r\n        this.props.estimatedEmpty()\r\n      }\r\n      this.setState({new_data: [], warning: false, empty: false})\r\n    })\r\n\r\n    await this.props.updateData()\r\n  }\r\n\r\n  handleChange = async(changes, source) =>{\r\n    if (source !== 'loadData'){\r\n      let data_aux = this.state.data\r\n      for(let i = 0; i < changes.length; i+=4){\r\n        if(changes[i][1] === \"Owner IFC\"){\r\n          let owners = this.state.owners\r\n          owners.push([\"IFC\", this.state.data[changes[i][0]].Tag, changes[0][3]])\r\n          this.setState({owners: owners})\r\n        }else if(changes[i][1] === \"Owner IsoTracker\"){\r\n          let owners = this.state.owners\r\n          owners.push([\"ISO\",this.state.data[changes[i][0]].Tag, changes[0][3]])\r\n          this.setState({owners: owners})\r\n        }else{\r\n          let row_id = changes[i][0]\r\n          if(this.state.data[row_id].Status === \"MODELLED*\" || this.state.data[row_id].Status === \"MODELLED\"){\r\n            data_aux[row_id][changes[0][1]] = \"##########\"\r\n            await this.setState({data: data_aux, warning: true})\r\n          }else{\r\n          let row = this.state.data[row_id]\r\n          if (changes[i][1] === 'Line reference'){\r\n            const options = {\r\n              method: \"GET\",\r\n              headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n              },\r\n            }\r\n          \r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getDataByRef/\" + changes[i][3], options)\r\n              .then(response => response.json())\r\n              .then(async json => {\r\n                if(json.pipe){\r\n                  data_aux[row_id].Unit = json.pipe[0].unit\r\n                  data_aux[row_id].Fluid = json.pipe[0].fluid\r\n                  data_aux[row_id].Seq = json.pipe[0].seq\r\n                  data_aux[row_id].Spec = json.pipe[0].spec_code\r\n                  data_aux[row_id].Insulation = json.pipe[0].insulation\r\n  \r\n                    if(json.pipe[0].calc_notes !== \"NA\"){\r\n                      data_aux[row_id].Type = \"TL3\"\r\n                    }else if(process.env.NODE_MMDN === \"0\"){\r\n                      if(data_aux[row_id].Diameter < 2.00){\r\n                        data_aux[row_id].Type = \"TL1\"\r\n                      }else{\r\n                        data_aux[row_id].Type = \"TL2\"\r\n                      }\r\n                    }else{\r\n                      if(data_aux[row_id].Diameter < 50){\r\n                        data_aux[row_id].Type = \"TL1\"\r\n                      }else{\r\n                        data_aux[row_id].Type = \"TL2\"\r\n                      }\r\n                    }\r\n  \r\n                await this.setState({data : data_aux})\r\n                }\r\n            })\r\n    \r\n          }\r\n          if(row.Area && row.Diameter && row.Train && row[\"Line reference\"]){\r\n            let tag_order = process.env.REACT_APP_TAG_ORDER.split(/[ -]+/)        \r\n            data_aux[row_id].Tag = row[tag_order[0]] + \"-\" + row[tag_order[1]] + \"-\" + row[tag_order[2]] + \"-\" + row[tag_order[3]] + \"-\" + row[tag_order[4]] + \"-\" + row[tag_order[5]] + \"-\" + row[tag_order[6]] + \"_\" + row[tag_order[7]]  \r\n          }\r\n          let new_data = this.state.new_data\r\n          if(this.state.tags.indexOf(data_aux[row_id].Tag) > -1 && this.state.tags.indexOf(data_aux[row_id].Tag) !== row_id){\r\n            data_aux[row_id].Tag = \"ALREADY EXISTS\"\r\n            data_aux[row_id].Area = \"\"\r\n            data_aux[row_id].Diameter = \"\"\r\n            data_aux[row_id].Train = \"\"\r\n            data_aux[row_id].Status = \"\"\r\n          }else{\r\n              data_aux[row_id].Status = \"ESTIMATED\"\r\n              if(data_aux[row_id].Type !== \"TL3\"){\r\n                if(process.env.NODE_MMDN === \"0\"){\r\n                  if(data_aux[row_id].Diameter < 2.00){\r\n                    data_aux[row_id].Type = \"TL1\"\r\n                  }else{\r\n                    data_aux[row_id].Type = \"TL2\"\r\n                  }\r\n                }else{\r\n                  if(data_aux[row_id].Diameter < 50){\r\n                    data_aux[row_id].Type = \"TL1\"\r\n                  }else{\r\n                    data_aux[row_id].Type = \"TL2\"\r\n                  }\r\n                }\r\n              }\r\n            \r\n            new_data[row_id] = row\r\n          }\r\n        \r\n          \r\n          await this.setState({data : data_aux, new_data: new_data})\r\n        \r\n          if(!row[\"Line reference\"] && row.id){\r\n            let new_data = this.state.new_data\r\n            new_data[row_id] = {\"Line reference\": \"deleted\", id: row.id}\r\n            await this.setState({data : data_aux, new_data: new_data})\r\n          }\r\n        }\r\n        }\r\n        \r\n    }\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const settings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: [180, 400, 240, 240, 70, 70, 70, 100, 95, 80, 105, 110, 70, 120],\r\n        fontSize: 24\r\n        //... other options\r\n      }\r\n  \r\n\r\n      return (\r\n          <div>\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.data}\r\n                colHeaders={[\"<b className='header'>Line reference</b>\", \"<b>Tag</b>\", \"<b>Owner IFC</b>\", \"<b>Owner IsoTracker</b>\", \"<b>Unit</b>\", \"<b>Area</b>\", \"<b>Fluid</b>\", \"<b>Seq</b>\", \"<b>Spec</b>\", \"<b>Type</b>\", \"<b>Diameter</b>\", \"<b>Insulation</b>\", \"<b>Train</b>\", \"<b>Status</b>\"]}\r\n                rowHeaders={true}\r\n                rowHeights=\"30px\"\r\n                columnHeaderHeight={30}\r\n                width=\"100%\"\r\n                height=\"520\"\r\n                settings={settings}\r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Line reference\", type:'dropdown', source: this.state.line_refs, strict: true}, { data: \"Tag\", type:'text', readOnly: true}, { data: \"Owner IFC\", type:'dropdown', source: this.state.designers, strict: true}, { data: \"Owner IsoTracker\", type:'dropdown', source: this.state.designers, strict: true}, { data: \"Unit\", type:'text', readOnly: true},{ data: \"Area\", type:'dropdown', source: this.state.areas, strict: true }, { data: \"Fluid\", type:'text', readOnly: true}, { data: \"Seq\", type:'text', readOnly: true}, { data: \"Spec\", type:'text', readOnly: true},  { data: \"Type\", type:'text', readOnly: true}, { data: \"Diameter\", type:'dropdown', source: this.state.diameters, strict: true}, { data: \"Insulation\", type:'text', readOnly: true},{ data: \"Train\", type:'dropdown', source: this.state.trains, strict: true},{ data: \"Status\", type:'text', readOnly: true}]}\r\n                filters={true}\r\n                dropdownMenu= {[\r\n                    'make_read_only',\r\n                    '---------',\r\n                    'alignment',\r\n                    '---------',\r\n                    'filter_by_condition',\r\n                    '---------',\r\n                    'filter_operators',\r\n                    '---------',\r\n                    'filter_by_condition2',\r\n                    '---------',\r\n                    'filter_by_value',\r\n                    '---------',\r\n                    'filter_action_bar',\r\n                  ]}\r\n                  afterChange={this.handleChange}\r\n              />\r\n              <br></br>\r\n              <div style={{marginLeft:\"695px\"}}>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRow()} style={{marginRight:\"25px\", fontSize:\"16px\", width:\"160px\", borderRadius:\"10px\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChanges()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"160px\", borderRadius:\"10px\"}}>Save</button>\r\n              </div>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default EstimatedPipesExcel;"]},"metadata":{},"sourceType":"module"}