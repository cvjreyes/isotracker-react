{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { IndexMap } from \"./indexMap.mjs\";\nimport { getListWithRemovedItems, getListWithInsertedItems } from \"./utils/physicallyIndexed.mjs\";\nimport { getListWithRemovedItems as getListWithoutIndexes } from \"./utils/indexesSequence.mjs\";\nimport { getDecreasedIndexes, getIncreasedIndexes } from \"./utils/actionsOnIndexes.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\n/**\n * Map for storing mappings from an physical index to a value. Those entries are linked and stored in a certain order.\n *\n * It does not update stored values on remove/add row or column action. Otherwise, order of entries is updated after\n * such changes.\n */\n\nexport var LinkedPhysicalIndexToValueMap = /*#__PURE__*/function (_IndexMap) {\n  _inherits(LinkedPhysicalIndexToValueMap, _IndexMap);\n\n  var _super = _createSuper(LinkedPhysicalIndexToValueMap);\n\n  function LinkedPhysicalIndexToValueMap() {\n    var _this;\n\n    _classCallCheck(this, LinkedPhysicalIndexToValueMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"orderOfIndexes\", []);\n\n    return _this;\n  }\n\n  _createClass(LinkedPhysicalIndexToValueMap, [{\n    key: \"getValues\",\n    value:\n    /**\n     * Get full list of ordered values for particular indexes.\n     *\n     * @returns {Array}\n     */\n    function getValues() {\n      var _this2 = this;\n\n      return this.orderOfIndexes.map(function (physicalIndex) {\n        return _this2.indexedValues[physicalIndex];\n      });\n    }\n    /**\n     * Set new values for particular indexes. Entries are linked and stored in a certain order.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @param {Array} values List of set values.\n     */\n\n  }, {\n    key: \"setValues\",\n    value: function setValues(values) {\n      this.orderOfIndexes = _toConsumableArray(Array(values.length).keys());\n\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValues\", this).call(this, values);\n    }\n    /**\n     * Set value at index and add it to the linked list of entries. Entries are stored in a certain order.\n     *\n     * Note: Value will be added at the end of the queue.\n     *\n     * @param {number} index The index.\n     * @param {*} value The value to save.\n     * @param {number} position Position to which entry will be added.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"setValueAtIndex\",\n    value: function setValueAtIndex(index, value) {\n      var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.orderOfIndexes.length;\n\n      if (index < this.indexedValues.length) {\n        this.indexedValues[index] = value;\n\n        if (this.orderOfIndexes.includes(index) === false) {\n          this.orderOfIndexes.splice(position, 0, index);\n        }\n\n        this.runLocalHooks('change');\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Clear value for particular index.\n     *\n     * @param {number} physicalIndex Physical index.\n     */\n\n  }, {\n    key: \"clearValue\",\n    value: function clearValue(physicalIndex) {\n      this.orderOfIndexes = getListWithoutIndexes(this.orderOfIndexes, [physicalIndex]);\n\n      if (isFunction(this.initValueOrFn)) {\n        _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValueAtIndex\", this).call(this, physicalIndex, this.initValueOrFn(physicalIndex));\n      } else {\n        _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValueAtIndex\", this).call(this, physicalIndex, this.initValueOrFn);\n      }\n    }\n    /**\n     * Get length of the index map.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.orderOfIndexes.length;\n    }\n    /**\n     * Set default values for elements from `0` to `n`, where `n` is equal to the handled variable.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @private\n     * @param {number} [length] Length of list.\n     */\n\n  }, {\n    key: \"setDefaultValues\",\n    value: function setDefaultValues() {\n      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.indexedValues.length;\n      this.orderOfIndexes.length = 0;\n\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setDefaultValues\", this).call(this, length);\n    }\n    /**\n     * Add values to list and reorganize. It updates list of indexes related to ordered values.\n     *\n     * @private\n     * @param {number} insertionIndex Position inside the list.\n     * @param {Array} insertedIndexes List of inserted indexes.\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(insertionIndex, insertedIndexes) {\n      this.indexedValues = getListWithInsertedItems(this.indexedValues, insertionIndex, insertedIndexes, this.initValueOrFn);\n      this.orderOfIndexes = getIncreasedIndexes(this.orderOfIndexes, insertedIndexes);\n\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"insert\", this).call(this, insertionIndex, insertedIndexes);\n    }\n    /**\n     * Remove values from the list and reorganize. It updates list of indexes related to ordered values.\n     *\n     * @private\n     * @param {Array} removedIndexes List of removed indexes.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(removedIndexes) {\n      this.indexedValues = getListWithRemovedItems(this.indexedValues, removedIndexes);\n      this.orderOfIndexes = getListWithoutIndexes(this.orderOfIndexes, removedIndexes);\n      this.orderOfIndexes = getDecreasedIndexes(this.orderOfIndexes, removedIndexes);\n\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"remove\", this).call(this, removedIndexes);\n    }\n    /**\n     * Get every entry containing index and value, respecting order of indexes.\n     *\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getEntries\",\n    value: function getEntries() {\n      var _this3 = this;\n\n      return this.orderOfIndexes.map(function (physicalIndex) {\n        return [physicalIndex, _this3.getValueAtIndex(physicalIndex)];\n      });\n    }\n  }]);\n\n  return LinkedPhysicalIndexToValueMap;\n}(IndexMap);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/translations/maps/linkedPhysicalIndexToValueMap.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","IndexMap","getListWithRemovedItems","getListWithInsertedItems","getListWithoutIndexes","getDecreasedIndexes","getIncreasedIndexes","isFunction","LinkedPhysicalIndexToValueMap","_IndexMap","_super","_this","_len","args","_key","concat","getValues","_this2","orderOfIndexes","map","physicalIndex","indexedValues","setValues","values","keys","setValueAtIndex","index","position","undefined","includes","splice","runLocalHooks","clearValue","initValueOrFn","getLength","setDefaultValues","insert","insertionIndex","insertedIndexes","remove","removedIndexes","getEntries","_this3","getValueAtIndex"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { IndexMap } from \"./indexMap.mjs\";\nimport { getListWithRemovedItems, getListWithInsertedItems } from \"./utils/physicallyIndexed.mjs\";\nimport { getListWithRemovedItems as getListWithoutIndexes } from \"./utils/indexesSequence.mjs\";\nimport { getDecreasedIndexes, getIncreasedIndexes } from \"./utils/actionsOnIndexes.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\n/**\n * Map for storing mappings from an physical index to a value. Those entries are linked and stored in a certain order.\n *\n * It does not update stored values on remove/add row or column action. Otherwise, order of entries is updated after\n * such changes.\n */\n\nexport var LinkedPhysicalIndexToValueMap = /*#__PURE__*/function (_IndexMap) {\n  _inherits(LinkedPhysicalIndexToValueMap, _IndexMap);\n\n  var _super = _createSuper(LinkedPhysicalIndexToValueMap);\n\n  function LinkedPhysicalIndexToValueMap() {\n    var _this;\n\n    _classCallCheck(this, LinkedPhysicalIndexToValueMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"orderOfIndexes\", []);\n\n    return _this;\n  }\n\n  _createClass(LinkedPhysicalIndexToValueMap, [{\n    key: \"getValues\",\n    value:\n    /**\n     * Get full list of ordered values for particular indexes.\n     *\n     * @returns {Array}\n     */\n    function getValues() {\n      var _this2 = this;\n\n      return this.orderOfIndexes.map(function (physicalIndex) {\n        return _this2.indexedValues[physicalIndex];\n      });\n    }\n    /**\n     * Set new values for particular indexes. Entries are linked and stored in a certain order.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @param {Array} values List of set values.\n     */\n\n  }, {\n    key: \"setValues\",\n    value: function setValues(values) {\n      this.orderOfIndexes = _toConsumableArray(Array(values.length).keys());\n\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValues\", this).call(this, values);\n    }\n    /**\n     * Set value at index and add it to the linked list of entries. Entries are stored in a certain order.\n     *\n     * Note: Value will be added at the end of the queue.\n     *\n     * @param {number} index The index.\n     * @param {*} value The value to save.\n     * @param {number} position Position to which entry will be added.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"setValueAtIndex\",\n    value: function setValueAtIndex(index, value) {\n      var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.orderOfIndexes.length;\n\n      if (index < this.indexedValues.length) {\n        this.indexedValues[index] = value;\n\n        if (this.orderOfIndexes.includes(index) === false) {\n          this.orderOfIndexes.splice(position, 0, index);\n        }\n\n        this.runLocalHooks('change');\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Clear value for particular index.\n     *\n     * @param {number} physicalIndex Physical index.\n     */\n\n  }, {\n    key: \"clearValue\",\n    value: function clearValue(physicalIndex) {\n      this.orderOfIndexes = getListWithoutIndexes(this.orderOfIndexes, [physicalIndex]);\n\n      if (isFunction(this.initValueOrFn)) {\n        _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValueAtIndex\", this).call(this, physicalIndex, this.initValueOrFn(physicalIndex));\n      } else {\n        _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValueAtIndex\", this).call(this, physicalIndex, this.initValueOrFn);\n      }\n    }\n    /**\n     * Get length of the index map.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.orderOfIndexes.length;\n    }\n    /**\n     * Set default values for elements from `0` to `n`, where `n` is equal to the handled variable.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @private\n     * @param {number} [length] Length of list.\n     */\n\n  }, {\n    key: \"setDefaultValues\",\n    value: function setDefaultValues() {\n      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.indexedValues.length;\n      this.orderOfIndexes.length = 0;\n\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setDefaultValues\", this).call(this, length);\n    }\n    /**\n     * Add values to list and reorganize. It updates list of indexes related to ordered values.\n     *\n     * @private\n     * @param {number} insertionIndex Position inside the list.\n     * @param {Array} insertedIndexes List of inserted indexes.\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(insertionIndex, insertedIndexes) {\n      this.indexedValues = getListWithInsertedItems(this.indexedValues, insertionIndex, insertedIndexes, this.initValueOrFn);\n      this.orderOfIndexes = getIncreasedIndexes(this.orderOfIndexes, insertedIndexes);\n\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"insert\", this).call(this, insertionIndex, insertedIndexes);\n    }\n    /**\n     * Remove values from the list and reorganize. It updates list of indexes related to ordered values.\n     *\n     * @private\n     * @param {Array} removedIndexes List of removed indexes.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(removedIndexes) {\n      this.indexedValues = getListWithRemovedItems(this.indexedValues, removedIndexes);\n      this.orderOfIndexes = getListWithoutIndexes(this.orderOfIndexes, removedIndexes);\n      this.orderOfIndexes = getDecreasedIndexes(this.orderOfIndexes, removedIndexes);\n\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"remove\", this).call(this, removedIndexes);\n    }\n    /**\n     * Get every entry containing index and value, respecting order of indexes.\n     *\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getEntries\",\n    value: function getEntries() {\n      var _this3 = this;\n\n      return this.orderOfIndexes.map(function (physicalIndex) {\n        return [physicalIndex, _this3.getValueAtIndex(physicalIndex)];\n      });\n    }\n  }]);\n\n  return LinkedPhysicalIndexToValueMap;\n}(IndexMap);"]},"metadata":{},"sourceType":"module"}