{"ast":null,"code":"import _slicedToArray from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport Collapse from '@mui/material/Collapse';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport { ownerDocument, useForkRef, unsupportedProp } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\nimport TreeItemContent from './TreeItemContent';\nimport treeItemClasses, { getTreeItemUtilityClass } from './treeItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    content: ['content'],\n    expanded: ['expanded'],\n    selected: ['selected'],\n    focused: ['focused'],\n    disabled: ['disabled'],\n    iconContainer: ['iconContainer'],\n    label: ['label'],\n    group: ['group']\n  };\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\n};\n\nvar TreeItemRoot = styled('li', {\n  name: 'MuiTreeItem',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  outline: 0\n});\nvar StyledTreeItemContent = styled(TreeItemContent, {\n  name: 'MuiTreeItem',\n  slot: 'Content',\n  overridesResolver: function overridesResolver(props, styles) {\n    return [styles.content, styles.iconContainer && _defineProperty({}, \"& .\".concat(treeItemClasses.iconContainer), styles.iconContainer), styles.label && _defineProperty({}, \"& .\".concat(treeItemClasses.label), styles.label)];\n  }\n})(function (_ref3) {\n  var _ref4;\n\n  var theme = _ref3.theme;\n  return _ref4 = {\n    padding: '0 8px',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    WebkitTapHighlightColor: 'transparent',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }, _defineProperty(_ref4, \"&.\".concat(treeItemClasses.disabled), {\n    opacity: theme.palette.action.disabledOpacity,\n    backgroundColor: 'transparent'\n  }), _defineProperty(_ref4, \"&.\".concat(treeItemClasses.focused), {\n    backgroundColor: theme.palette.action.focus\n  }), _defineProperty(_ref4, \"&.\".concat(treeItemClasses.selected), _defineProperty({\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    }\n  }, \"&.\".concat(treeItemClasses.focused), {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  })), _defineProperty(_ref4, \"& .\".concat(treeItemClasses.iconContainer), {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  }), _defineProperty(_ref4, \"& .\".concat(treeItemClasses.label), _extends({\n    width: '100%',\n    // fixes overflow - see https://github.com/mui-org/material-ui/issues/27372\n    minWidth: 0,\n    paddingLeft: 4,\n    position: 'relative'\n  }, theme.typography.body1)), _ref4;\n});\nvar TreeItemGroup = styled(Collapse, {\n  name: 'MuiTreeItem',\n  slot: 'Group',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.group;\n  }\n})({\n  margin: 0,\n  padding: 0,\n  marginLeft: 17\n});\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeItem'\n  });\n\n  var children = props.children,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      _props$ContentCompone = props.ContentComponent,\n      ContentComponent = _props$ContentCompone === void 0 ? TreeItemContent : _props$ContentCompone,\n      ContentProps = props.ContentProps,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      idProp = props.id,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      _React$useContext$ico = _React$useContext.icons,\n      contextIcons = _React$useContext$ico === void 0 ? {} : _React$useContext$ico,\n      focus = _React$useContext.focus,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isDisabled = _React$useContext.isDisabled,\n      multiSelect = _React$useContext.multiSelect,\n      disabledItemsFocusable = _React$useContext.disabledItemsFocusable,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      unMapFirstChar = _React$useContext.unMapFirstChar,\n      registerNode = _React$useContext.registerNode,\n      unregisterNode = _React$useContext.unregisterNode,\n      treeId = _React$useContext.treeId;\n\n  var id = null;\n\n  if (idProp != null) {\n    id = idProp;\n  } else if (treeId && nodeId) {\n    id = \"\".concat(treeId, \"-\").concat(nodeId);\n  }\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      treeitemElement = _React$useState2[0],\n      setTreeitemElement = _React$useState2[1];\n\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(setTreeitemElement, ref);\n  var descendant = React.useMemo(function () {\n    return {\n      element: treeitemElement,\n      id: nodeId\n    };\n  }, [nodeId, treeitemElement]);\n\n  var _useDescendant = useDescendant(descendant),\n      index = _useDescendant.index,\n      parentId = _useDescendant.parentId;\n\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var disabled = isDisabled ? isDisabled(nodeId) : false;\n\n  var ownerState = _extends({}, props, {\n    expanded: expanded,\n    focused: focused,\n    selected: selected,\n    disabled: disabled\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var displayIcon;\n  var expansionIcon;\n\n  if (expandable) {\n    if (!expanded) {\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\n    } else {\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\n    }\n  }\n\n  if (expandable) {\n    displayIcon = contextIcons.defaultParentIcon;\n  } else {\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\n  }\n\n  React.useEffect(function () {\n    // On the first render a node's index will be -1. We want to wait for the real index.\n    if (registerNode && unregisterNode && index !== -1) {\n      registerNode({\n        id: nodeId,\n        idAttribute: id,\n        index: index,\n        parentId: parentId,\n        expandable: expandable,\n        disabled: disabledProp\n      });\n      return function () {\n        unregisterNode(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\n  React.useEffect(function () {\n    if (mapFirstChar && unMapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n      return function () {\n        unMapFirstChar(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    /* single-selection trees unset aria-selected on un-selected items.\r\n     *\r\n     * If the tree does not support multiple selection, aria-selected\r\n     * is set to true for the selected node and it is not present on any other node in the tree.\r\n     * Source: https://www.w3.org/TR/wai-aria-practices/#TreeView\r\n     */\n    ariaSelected = true;\n  }\n\n  function handleFocus(event) {\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\n    if (event.target === event.currentTarget) {\n      ownerDocument(event.target).getElementById(treeId).focus({\n        preventScroll: true\n      });\n    }\n\n    var unfocusable = !disabledItemsFocusable && disabled;\n\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\n      focus(event, nodeId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\n    className: clsx(classes.root, className),\n    role: \"treeitem\",\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    \"aria-disabled\": disabled || null,\n    ref: handleRef,\n    id: id,\n    tabIndex: -1\n  }, other, {\n    ownerState: ownerState,\n    onFocus: handleFocus,\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\n      as: ContentComponent,\n      ref: contentRef,\n      classes: {\n        root: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        disabled: classes.disabled,\n        iconContainer: classes.iconContainer,\n        label: classes.label\n      },\n      label: label,\n      nodeId: nodeId,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      icon: icon,\n      expansionIcon: expansionIcon,\n      displayIcon: displayIcon,\n      ownerState: ownerState\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\n      id: nodeId,\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\n        as: TransitionComponent,\n        unmountOnExit: true,\n        className: classes.group,\n        in: expanded,\n        component: \"ul\",\n        role: \"group\"\n      }, TransitionProps, {\n        children: children\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The icon used to collapse the node.\r\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\r\n   * The component used for the content node.\r\n   * @default TreeItemContent\r\n   */\n  ContentComponent: elementTypeAcceptingRef,\n\n  /**\r\n   * Props applied to ContentComponent\r\n   */\n  ContentProps: PropTypes.object,\n\n  /**\r\n   * If `true`, the node is disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * The icon displayed next to a end node.\r\n   */\n  endIcon: PropTypes.node,\n\n  /**\r\n   * The icon used to expand the node.\r\n   */\n  expandIcon: PropTypes.node,\n\n  /**\r\n   * The icon to display next to the tree node's label.\r\n   */\n  icon: PropTypes.node,\n\n  /**\r\n   * @ignore\r\n   */\n  id: PropTypes.string,\n\n  /**\r\n   * The tree node label.\r\n   */\n  label: PropTypes.node,\n\n  /**\r\n   * The id of the node.\r\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  onClick: PropTypes.func,\n\n  /**\r\n   * This prop isn't supported.\r\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\r\n   */\n  onFocus: unsupportedProp,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object,\n\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   * @default Collapse\r\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition) component.\r\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default TreeItem;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@mui/lab/TreeItem/TreeItem.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","clsx","PropTypes","elementTypeAcceptingRef","Collapse","alpha","styled","useThemeProps","ownerDocument","useForkRef","unsupportedProp","unstable_composeClasses","composeClasses","TreeViewContext","DescendantProvider","useDescendant","TreeItemContent","treeItemClasses","getTreeItemUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","slots","root","content","expanded","selected","focused","disabled","iconContainer","label","group","TreeItemRoot","name","slot","overridesResolver","props","styles","listStyle","margin","padding","outline","StyledTreeItemContent","theme","width","display","alignItems","cursor","WebkitTapHighlightColor","backgroundColor","palette","action","hover","opacity","disabledOpacity","focus","primary","main","selectedOpacity","hoverOpacity","focusOpacity","marginRight","flexShrink","justifyContent","fontSize","minWidth","paddingLeft","position","typography","body1","TreeItemGroup","marginLeft","TreeItem","forwardRef","inProps","ref","children","className","collapseIcon","ContentComponent","ContentProps","endIcon","expandIcon","disabledProp","icon","idProp","id","nodeId","onClick","onMouseDown","TransitionComponent","TransitionProps","other","useContext","icons","contextIcons","isExpanded","isFocused","isSelected","isDisabled","multiSelect","disabledItemsFocusable","mapFirstChar","unMapFirstChar","registerNode","unregisterNode","treeId","useState","treeitemElement","setTreeitemElement","contentRef","useRef","handleRef","descendant","useMemo","element","index","parentId","expandable","Boolean","Array","isArray","length","displayIcon","expansionIcon","defaultExpandIcon","defaultCollapseIcon","defaultParentIcon","defaultEndIcon","useEffect","idAttribute","undefined","current","textContent","substring","toLowerCase","ariaSelected","handleFocus","event","target","currentTarget","getElementById","preventScroll","unfocusable","role","tabIndex","onFocus","as","unmountOnExit","in","component","process","env","NODE_ENV","propTypes","node","object","string","bool","isRequired","func","sx","elementType"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\r\nimport * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { elementTypeAcceptingRef } from '@mui/utils';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\r\nimport { ownerDocument, useForkRef, unsupportedProp } from '@mui/material/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\r\nimport TreeViewContext from '../TreeView/TreeViewContext';\r\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\r\nimport TreeItemContent from './TreeItemContent';\r\nimport treeItemClasses, { getTreeItemUtilityClass } from './treeItemClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    content: ['content'],\r\n    expanded: ['expanded'],\r\n    selected: ['selected'],\r\n    focused: ['focused'],\r\n    disabled: ['disabled'],\r\n    iconContainer: ['iconContainer'],\r\n    label: ['label'],\r\n    group: ['group']\r\n  };\r\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\r\n};\r\n\r\nconst TreeItemRoot = styled('li', {\r\n  name: 'MuiTreeItem',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => styles.root\r\n})({\r\n  listStyle: 'none',\r\n  margin: 0,\r\n  padding: 0,\r\n  outline: 0\r\n});\r\nconst StyledTreeItemContent = styled(TreeItemContent, {\r\n  name: 'MuiTreeItem',\r\n  slot: 'Content',\r\n  overridesResolver: (props, styles) => {\r\n    return [styles.content, styles.iconContainer && {\r\n      [`& .${treeItemClasses.iconContainer}`]: styles.iconContainer\r\n    }, styles.label && {\r\n      [`& .${treeItemClasses.label}`]: styles.label\r\n    }];\r\n  }\r\n})(({\r\n  theme\r\n}) => ({\r\n  padding: '0 8px',\r\n  width: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  cursor: 'pointer',\r\n  WebkitTapHighlightColor: 'transparent',\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.action.hover,\r\n    // Reset on touch devices, it doesn't add specificity\r\n    '@media (hover: none)': {\r\n      backgroundColor: 'transparent'\r\n    }\r\n  },\r\n  [`&.${treeItemClasses.disabled}`]: {\r\n    opacity: theme.palette.action.disabledOpacity,\r\n    backgroundColor: 'transparent'\r\n  },\r\n  [`&.${treeItemClasses.focused}`]: {\r\n    backgroundColor: theme.palette.action.focus\r\n  },\r\n  [`&.${treeItemClasses.selected}`]: {\r\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\r\n      // Reset on touch devices, it doesn't add specificity\r\n      '@media (hover: none)': {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\r\n      }\r\n    },\r\n    [`&.${treeItemClasses.focused}`]: {\r\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\r\n    }\r\n  },\r\n  [`& .${treeItemClasses.iconContainer}`]: {\r\n    marginRight: 4,\r\n    width: 15,\r\n    display: 'flex',\r\n    flexShrink: 0,\r\n    justifyContent: 'center',\r\n    '& svg': {\r\n      fontSize: 18\r\n    }\r\n  },\r\n  [`& .${treeItemClasses.label}`]: _extends({\r\n    width: '100%',\r\n    // fixes overflow - see https://github.com/mui-org/material-ui/issues/27372\r\n    minWidth: 0,\r\n    paddingLeft: 4,\r\n    position: 'relative'\r\n  }, theme.typography.body1)\r\n}));\r\nconst TreeItemGroup = styled(Collapse, {\r\n  name: 'MuiTreeItem',\r\n  slot: 'Group',\r\n  overridesResolver: (props, styles) => styles.group\r\n})({\r\n  margin: 0,\r\n  padding: 0,\r\n  marginLeft: 17\r\n});\r\nconst TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiTreeItem'\r\n  });\r\n\r\n  const {\r\n    children,\r\n    className,\r\n    collapseIcon,\r\n    ContentComponent = TreeItemContent,\r\n    ContentProps,\r\n    endIcon,\r\n    expandIcon,\r\n    disabled: disabledProp,\r\n    icon,\r\n    id: idProp,\r\n    label,\r\n    nodeId,\r\n    onClick,\r\n    onMouseDown,\r\n    TransitionComponent = Collapse,\r\n    TransitionProps\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const {\r\n    icons: contextIcons = {},\r\n    focus,\r\n    isExpanded,\r\n    isFocused,\r\n    isSelected,\r\n    isDisabled,\r\n    multiSelect,\r\n    disabledItemsFocusable,\r\n    mapFirstChar,\r\n    unMapFirstChar,\r\n    registerNode,\r\n    unregisterNode,\r\n    treeId\r\n  } = React.useContext(TreeViewContext);\r\n  let id = null;\r\n\r\n  if (idProp != null) {\r\n    id = idProp;\r\n  } else if (treeId && nodeId) {\r\n    id = `${treeId}-${nodeId}`;\r\n  }\r\n\r\n  const [treeitemElement, setTreeitemElement] = React.useState(null);\r\n  const contentRef = React.useRef(null);\r\n  const handleRef = useForkRef(setTreeitemElement, ref);\r\n  const descendant = React.useMemo(() => ({\r\n    element: treeitemElement,\r\n    id: nodeId\r\n  }), [nodeId, treeitemElement]);\r\n  const {\r\n    index,\r\n    parentId\r\n  } = useDescendant(descendant);\r\n  const expandable = Boolean(Array.isArray(children) ? children.length : children);\r\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\r\n  const focused = isFocused ? isFocused(nodeId) : false;\r\n  const selected = isSelected ? isSelected(nodeId) : false;\r\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\r\n\r\n  const ownerState = _extends({}, props, {\r\n    expanded,\r\n    focused,\r\n    selected,\r\n    disabled\r\n  });\r\n\r\n  const classes = useUtilityClasses(ownerState);\r\n  let displayIcon;\r\n  let expansionIcon;\r\n\r\n  if (expandable) {\r\n    if (!expanded) {\r\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\r\n    } else {\r\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\r\n    }\r\n  }\r\n\r\n  if (expandable) {\r\n    displayIcon = contextIcons.defaultParentIcon;\r\n  } else {\r\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // On the first render a node's index will be -1. We want to wait for the real index.\r\n    if (registerNode && unregisterNode && index !== -1) {\r\n      registerNode({\r\n        id: nodeId,\r\n        idAttribute: id,\r\n        index,\r\n        parentId,\r\n        expandable,\r\n        disabled: disabledProp\r\n      });\r\n      return () => {\r\n        unregisterNode(nodeId);\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\r\n  React.useEffect(() => {\r\n    if (mapFirstChar && unMapFirstChar && label) {\r\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\r\n      return () => {\r\n        unMapFirstChar(nodeId);\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\r\n  let ariaSelected;\r\n\r\n  if (multiSelect) {\r\n    ariaSelected = selected;\r\n  } else if (selected) {\r\n    /* single-selection trees unset aria-selected on un-selected items.\r\n     *\r\n     * If the tree does not support multiple selection, aria-selected\r\n     * is set to true for the selected node and it is not present on any other node in the tree.\r\n     * Source: https://www.w3.org/TR/wai-aria-practices/#TreeView\r\n     */\r\n    ariaSelected = true;\r\n  }\r\n\r\n  function handleFocus(event) {\r\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\r\n    if (event.target === event.currentTarget) {\r\n      ownerDocument(event.target).getElementById(treeId).focus({\r\n        preventScroll: true\r\n      });\r\n    }\r\n\r\n    const unfocusable = !disabledItemsFocusable && disabled;\r\n\r\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\r\n      focus(event, nodeId);\r\n    }\r\n  }\r\n\r\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\r\n    className: clsx(classes.root, className),\r\n    role: \"treeitem\",\r\n    \"aria-expanded\": expandable ? expanded : null,\r\n    \"aria-selected\": ariaSelected,\r\n    \"aria-disabled\": disabled || null,\r\n    ref: handleRef,\r\n    id: id,\r\n    tabIndex: -1\r\n  }, other, {\r\n    ownerState: ownerState,\r\n    onFocus: handleFocus,\r\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\r\n      as: ContentComponent,\r\n      ref: contentRef,\r\n      classes: {\r\n        root: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        focused: classes.focused,\r\n        disabled: classes.disabled,\r\n        iconContainer: classes.iconContainer,\r\n        label: classes.label\r\n      },\r\n      label: label,\r\n      nodeId: nodeId,\r\n      onClick: onClick,\r\n      onMouseDown: onMouseDown,\r\n      icon: icon,\r\n      expansionIcon: expansionIcon,\r\n      displayIcon: displayIcon,\r\n      ownerState: ownerState\r\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\r\n      id: nodeId,\r\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\r\n        as: TransitionComponent,\r\n        unmountOnExit: true,\r\n        className: classes.group,\r\n        in: expanded,\r\n        component: \"ul\",\r\n        role: \"group\"\r\n      }, TransitionProps, {\r\n        children: children\r\n      }))\r\n    })]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The icon used to collapse the node.\r\n   */\r\n  collapseIcon: PropTypes.node,\r\n\r\n  /**\r\n   * The component used for the content node.\r\n   * @default TreeItemContent\r\n   */\r\n  ContentComponent: elementTypeAcceptingRef,\r\n\r\n  /**\r\n   * Props applied to ContentComponent\r\n   */\r\n  ContentProps: PropTypes.object,\r\n\r\n  /**\r\n   * If `true`, the node is disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * The icon displayed next to a end node.\r\n   */\r\n  endIcon: PropTypes.node,\r\n\r\n  /**\r\n   * The icon used to expand the node.\r\n   */\r\n  expandIcon: PropTypes.node,\r\n\r\n  /**\r\n   * The icon to display next to the tree node's label.\r\n   */\r\n  icon: PropTypes.node,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  id: PropTypes.string,\r\n\r\n  /**\r\n   * The tree node label.\r\n   */\r\n  label: PropTypes.node,\r\n\r\n  /**\r\n   * The id of the node.\r\n   */\r\n  nodeId: PropTypes.string.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onClick: PropTypes.func,\r\n\r\n  /**\r\n   * This prop isn't supported.\r\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\r\n   */\r\n  onFocus: unsupportedProp,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onMouseDown: PropTypes.func,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object,\r\n\r\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   * @default Collapse\r\n   */\r\n  TransitionComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition) component.\r\n   */\r\n  TransitionProps: PropTypes.object\r\n} : void 0;\r\nexport default TreeItem;"]},"metadata":{},"sourceType":"module"}