{"ast":null,"code":"import _slicedToArray from \"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"BackdropComponent\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"closeAfterTransition\", \"component\", \"components\", \"componentsProps\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"theme\", \"onTransitionEnter\", \"onTransitionExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var open = ownerState.open,\n      exited = ownerState.exited,\n      classes = ownerState.classes;\n  var slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * - [Dialog](/api/dialog/)\r\n * - [Drawer](/api/drawer/)\r\n * - [Menu](/api/menu/)\r\n * - [Popover](/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n */\n\nvar ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var BackdropComponent = props.BackdropComponent,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      classesProp = props.classes,\n      className = props.className,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onKeyDown = props.onKeyDown,\n      open = props.open,\n      theme = props.theme,\n      onTransitionEnter = props.onTransitionEnter,\n      onTransitionExited = props.onTransitionExited,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      exited = _React$useState2[0],\n      setExited = _React$useState2[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  var ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition: closeAfterTransition,\n    disableAutoFocus: disableAutoFocus,\n    disableEnforceFocus: disableEnforceFocus,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    disablePortal: disablePortal,\n    disableRestoreFocus: disableRestoreFocus,\n    disableScrollLock: disableScrollLock,\n    exited: exited,\n    hideBackdrop: hideBackdrop,\n    keepMounted: keepMounted\n  });\n\n  var classes = useUtilityClasses(ownerState);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  var Root = components.Root || component;\n  var rootProps = componentsProps.root || {};\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({\n      role: \"presentation\"\n    }, rootProps, !isHostComponent(Root) && {\n      as: component,\n      ownerState: _extends({}, ownerState, rootProps.ownerState),\n      theme: theme\n    }, other, {\n      ref: handleRef,\n      onKeyDown: handleKeyDown,\n      className: clsx(classes.root, rootProps.className, className),\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({\n        open: open,\n        onClick: handleBackdropClick\n      }, BackdropProps)) : null, /*#__PURE__*/_jsx(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * A backdrop component. This prop enables custom backdrop rendering.\r\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`BackdropUnstyled`](/api/backdrop-unstyled/) element.\r\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\r\n   * A single child content element.\r\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   * @default false\r\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * The components used for each slot inside the Modal.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\r\n   * The props used for each slot inside the Modal.\r\n   * @default {}\r\n   */\n  componentsProps: PropTypes.object,\n\n  /**\r\n   * An HTML element or function that returns one.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, hitting escape will not fire the `onClose` callback.\r\n   * @default false\r\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\r\n   * The `children` will be under the DOM hierarchy of the parent component.\r\n   * @default false\r\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   * @default false\r\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\r\n   * Disable the scroll lock behavior.\r\n   * @default false\r\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   * @default false\r\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   * @default false\r\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default ModalUnstyled;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@mui/core/ModalUnstyled/ModalUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","elementAcceptingRef","HTMLElementType","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_createChainedFunction","createChainedFunction","unstable_useEventCallback","useEventCallback","composeClasses","isHostComponent","Portal","ModalManager","ariaHidden","TrapFocus","getModalUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","classes","slots","root","getContainer","container","getHasTransition","props","children","hasOwnProperty","defaultManager","ModalUnstyled","forwardRef","ref","BackdropComponent","BackdropProps","classesProp","className","closeAfterTransition","component","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","theme","onTransitionEnter","onTransitionExited","other","useState","setExited","modal","useRef","mountNodeRef","modalRef","handleRef","hasTransition","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","role","as","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","elementType","object","isRequired","string","bool","shape","oneOfType","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"BackdropComponent\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"closeAfterTransition\", \"component\", \"components\", \"componentsProps\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"theme\", \"onTransitionEnter\", \"onTransitionExited\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\r\nimport composeClasses from '../composeClasses';\r\nimport isHostComponent from '../utils/isHostComponent';\r\nimport Portal from '../Portal';\r\nimport ModalManager, { ariaHidden } from './ModalManager';\r\nimport TrapFocus from '../Unstable_TrapFocus';\r\nimport { getModalUtilityClass } from './modalUnstyledClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    open,\r\n    exited,\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', !open && exited && 'hidden']\r\n  };\r\n  return composeClasses(slots, getModalUtilityClass, classes);\r\n};\r\n\r\nfunction getContainer(container) {\r\n  return typeof container === 'function' ? container() : container;\r\n}\r\n\r\nfunction getHasTransition(props) {\r\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\r\n} // A modal manager used to track and manage the state of open Modals.\r\n// Modals don't open on the server so this won't conflict with concurrent requests.\r\n\r\n\r\nconst defaultManager = new ModalManager();\r\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * - [Dialog](/api/dialog/)\r\n * - [Drawer](/api/drawer/)\r\n * - [Menu](/api/menu/)\r\n * - [Popover](/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n */\r\n\r\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\r\n  const {\r\n    BackdropComponent,\r\n    BackdropProps,\r\n    children,\r\n    classes: classesProp,\r\n    className,\r\n    closeAfterTransition = false,\r\n    component = 'div',\r\n    components = {},\r\n    componentsProps = {},\r\n    container,\r\n    disableAutoFocus = false,\r\n    disableEnforceFocus = false,\r\n    disableEscapeKeyDown = false,\r\n    disablePortal = false,\r\n    disableRestoreFocus = false,\r\n    disableScrollLock = false,\r\n    hideBackdrop = false,\r\n    keepMounted = false,\r\n    // private\r\n    // eslint-disable-next-line react/prop-types\r\n    manager = defaultManager,\r\n    onBackdropClick,\r\n    onClose,\r\n    onKeyDown,\r\n    open,\r\n\r\n    /* eslint-disable react/prop-types */\r\n    theme,\r\n    onTransitionEnter,\r\n    onTransitionExited\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const [exited, setExited] = React.useState(true);\r\n  const modal = React.useRef({});\r\n  const mountNodeRef = React.useRef(null);\r\n  const modalRef = React.useRef(null);\r\n  const handleRef = useForkRef(modalRef, ref);\r\n  const hasTransition = getHasTransition(props);\r\n\r\n  const getDoc = () => ownerDocument(mountNodeRef.current);\r\n\r\n  const getModal = () => {\r\n    modal.current.modalRef = modalRef.current;\r\n    modal.current.mountNode = mountNodeRef.current;\r\n    return modal.current;\r\n  };\r\n\r\n  const handleMounted = () => {\r\n    manager.mount(getModal(), {\r\n      disableScrollLock\r\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\r\n\r\n    modalRef.current.scrollTop = 0;\r\n  };\r\n\r\n  const handleOpen = useEventCallback(() => {\r\n    const resolvedContainer = getContainer(container) || getDoc().body;\r\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\r\n\r\n    if (modalRef.current) {\r\n      handleMounted();\r\n    }\r\n  });\r\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\r\n  const handlePortalRef = useEventCallback(node => {\r\n    mountNodeRef.current = node;\r\n\r\n    if (!node) {\r\n      return;\r\n    }\r\n\r\n    if (open && isTopModal()) {\r\n      handleMounted();\r\n    } else {\r\n      ariaHidden(modalRef.current, true);\r\n    }\r\n  });\r\n  const handleClose = React.useCallback(() => {\r\n    manager.remove(getModal());\r\n  }, [manager]);\r\n  React.useEffect(() => {\r\n    return () => {\r\n      handleClose();\r\n    };\r\n  }, [handleClose]);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      handleOpen();\r\n    } else if (!hasTransition || !closeAfterTransition) {\r\n      handleClose();\r\n    }\r\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\r\n\r\n  const ownerState = _extends({}, props, {\r\n    classes: classesProp,\r\n    closeAfterTransition,\r\n    disableAutoFocus,\r\n    disableEnforceFocus,\r\n    disableEscapeKeyDown,\r\n    disablePortal,\r\n    disableRestoreFocus,\r\n    disableScrollLock,\r\n    exited,\r\n    hideBackdrop,\r\n    keepMounted\r\n  });\r\n\r\n  const classes = useUtilityClasses(ownerState);\r\n\r\n  if (!keepMounted && !open && (!hasTransition || exited)) {\r\n    return null;\r\n  }\r\n\r\n  const handleEnter = () => {\r\n    setExited(false);\r\n\r\n    if (onTransitionEnter) {\r\n      onTransitionEnter();\r\n    }\r\n  };\r\n\r\n  const handleExited = () => {\r\n    setExited(true);\r\n\r\n    if (onTransitionExited) {\r\n      onTransitionExited();\r\n    }\r\n\r\n    if (closeAfterTransition) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.target !== event.currentTarget) {\r\n      return;\r\n    }\r\n\r\n    if (onBackdropClick) {\r\n      onBackdropClick(event);\r\n    }\r\n\r\n    if (onClose) {\r\n      onClose(event, 'backdropClick');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = event => {\r\n    if (onKeyDown) {\r\n      onKeyDown(event);\r\n    } // The handler doesn't take event.defaultPrevented into account:\r\n    //\r\n    // event.preventDefault() is meant to stop default behaviors like\r\n    // clicking a checkbox to check it, hitting a button to submit a form,\r\n    // and hitting left arrow to move the cursor in a text input etc.\r\n    // Only special HTML elements have these default behaviors.\r\n\r\n\r\n    if (event.key !== 'Escape' || !isTopModal()) {\r\n      return;\r\n    }\r\n\r\n    if (!disableEscapeKeyDown) {\r\n      // Swallow the event, in case someone is listening for the escape key on the body.\r\n      event.stopPropagation();\r\n\r\n      if (onClose) {\r\n        onClose(event, 'escapeKeyDown');\r\n      }\r\n    }\r\n  };\r\n\r\n  const childProps = {};\r\n\r\n  if (children.props.tabIndex === undefined) {\r\n    childProps.tabIndex = '-1';\r\n  } // It's a Transition like component\r\n\r\n\r\n  if (hasTransition) {\r\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\r\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\r\n  }\r\n\r\n  const Root = components.Root || component;\r\n  const rootProps = componentsProps.root || {};\r\n  return /*#__PURE__*/_jsx(Portal, {\r\n    ref: handlePortalRef,\r\n    container: container,\r\n    disablePortal: disablePortal,\r\n    children: /*#__PURE__*/_jsxs(Root, _extends({\r\n      role: \"presentation\"\r\n    }, rootProps, !isHostComponent(Root) && {\r\n      as: component,\r\n      ownerState: _extends({}, ownerState, rootProps.ownerState),\r\n      theme\r\n    }, other, {\r\n      ref: handleRef,\r\n      onKeyDown: handleKeyDown,\r\n      className: clsx(classes.root, rootProps.className, className),\r\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({\r\n        open: open,\r\n        onClick: handleBackdropClick\r\n      }, BackdropProps)) : null, /*#__PURE__*/_jsx(TrapFocus, {\r\n        disableEnforceFocus: disableEnforceFocus,\r\n        disableAutoFocus: disableAutoFocus,\r\n        disableRestoreFocus: disableRestoreFocus,\r\n        isEnabled: isTopModal,\r\n        open: open,\r\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\r\n      })]\r\n    }))\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * A backdrop component. This prop enables custom backdrop rendering.\r\n   */\r\n  BackdropComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the [`BackdropUnstyled`](/api/backdrop-unstyled/) element.\r\n   */\r\n  BackdropProps: PropTypes.object,\r\n\r\n  /**\r\n   * A single child content element.\r\n   */\r\n  children: elementAcceptingRef.isRequired,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   * @default false\r\n   */\r\n  closeAfterTransition: PropTypes.bool,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * The components used for each slot inside the Modal.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  components: PropTypes.shape({\r\n    Root: PropTypes.elementType\r\n  }),\r\n\r\n  /**\r\n   * The props used for each slot inside the Modal.\r\n   * @default {}\r\n   */\r\n  componentsProps: PropTypes.object,\r\n\r\n  /**\r\n   * An HTML element or function that returns one.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\r\n  container: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([HTMLElementType, PropTypes.func]),\r\n\r\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\r\n  disableAutoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\r\n  disableEnforceFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, hitting escape will not fire the `onClose` callback.\r\n   * @default false\r\n   */\r\n  disableEscapeKeyDown: PropTypes.bool,\r\n\r\n  /**\r\n   * The `children` will be under the DOM hierarchy of the parent component.\r\n   * @default false\r\n   */\r\n  disablePortal: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   * @default false\r\n   */\r\n  disableRestoreFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Disable the scroll lock behavior.\r\n   * @default false\r\n   */\r\n  disableScrollLock: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   * @default false\r\n   */\r\n  hideBackdrop: PropTypes.bool,\r\n\r\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   * @default false\r\n   */\r\n  keepMounted: PropTypes.bool,\r\n\r\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\r\n  onBackdropClick: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onKeyDown: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool.isRequired\r\n} : void 0;\r\nexport default ModalUnstyled;"]},"metadata":{},"sourceType":"module"}