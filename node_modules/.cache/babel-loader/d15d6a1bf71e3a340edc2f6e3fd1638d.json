{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\pipingProduction\\\\pipingProduction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport IdleTimer from 'react-idle-timer';\nimport { useHistory } from \"react-router\";\nimport BackIcon from \"../../assets/images/back.svg\";\nimport AlertF from \"../../components/alert/alert\";\nimport './pipingProduction.css';\nimport SaveIcon from \"../../assets/images/save.svg\";\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport NavBarProdCurve from '../../components/navBarProdCurve/navBarProdCurve'; //Página de home con el menú para ir a las aplicaciones de isotracker\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PITRequests = () => {\n  _s();\n\n  const history = useHistory();\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const [updateData, setUpdateData] = useState(false);\n  const [updateRows, setUpdateRows] = useState(false);\n  const [tables, setTables] = useState([]);\n  const [materials, setMaterials] = useState();\n  const [materialsList, setMaterialsList] = useState([]);\n  const [materialsIDList, setMaterialsIDList] = useState([]);\n  const [piping, setPiping] = useState();\n  const [management, setManagement] = useState([]);\n  const [estimatedData, setEstimatedData] = useState({});\n  const [forecastData, setForecastData] = useState({});\n  const [estimatedMaterialData, setEstimatedMaterialData] = useState({});\n  const [overallTable, setOverallTable] = useState();\n  const [success, setSuccess] = useState(false);\n  const [spanAlert, setSpanAlert] = useState(false);\n  const [pipingAlert, setPipingAlert] = useState(false);\n  const [materialsAlert, setMaterialsAlert] = useState(false);\n  const [lineChart, setLineChart] = useState();\n  document.body.style.zoom = 1;\n\n  function handleOnIdle() {\n    const body = {\n      user: secureStorage.getItem(\"user\")\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {});\n    secureStorage.clear();\n    history.push(\"/\" + process.env.REACT_APP_PROJECT);\n  }\n\n  useEffect(async () => {\n    const colors = [\"rgb(0,0,255)\", \"rgb(176,224,230)\", \"rgb(0,191,255)\", \"rgb(0,128,0)\", \"rgb(124,252,0)\", \"rgb(50,205,50)\", \"rgb(255,140,0)\", \"rgb(255,215,0)\", \"rgb(255,165,0)\", \"rgb(255,20,147)\", \"rgb(255,105,180)\", \"rgb(255,192,203)\", \"rgb(112,128,144)\", \"rgb(169,169,169)\", \"rgb(220,220,220)\", \"rgb(128,0,0)\", \"rgb(205,92,92)\", \"rgb(240,128,128)\"];\n    const table_class = [\"mat1__table\"];\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getMaterialsPipingClass\", options).then(response => response.json()).then(async json => {\n      const materials = json.materials;\n      let piping = [];\n\n      for (let i = 0; i < materials.length; i++) {\n        piping.push({\n          \"id\": materials[i].piping_id,\n          \"PipingClass\": materials[i].piping,\n          \"Material\": materials[i].material\n        });\n      }\n\n      await setPiping(piping);\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getProjectSpan\", options).then(response => response.json()).then(async json => {\n      const span = json.span;\n      await setManagement({\n        \"Starting date\": span[0].starting_date.toString().substring(8, 10) + \"/\" + span[0].starting_date.toString().substring(5, 7) + \"/\" + span[0].starting_date.toString().substring(0, 4),\n        \"Finishing date\": span[0].finishing_date.toString().substring(8, 10) + \"/\" + span[0].finishing_date.toString().substring(5, 7) + \"/\" + span[0].finishing_date.toString().substring(0, 4)\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getEstimatedByMaterial\", options).then(response => response.json()).then(async json => {\n      let est = estimatedMaterialData;\n\n      for (let i = 0; i < json.estimated.length; i++) {\n        est[json.estimated[i].id] = json.estimated[i].estimated;\n      }\n\n      await setEstimatedMaterialData(est);\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getMaterials\", options).then(response => response.json()).then(async json => {\n      const materials = json.materials;\n      let mat = [];\n      let matList = [];\n      let matIDList = [];\n\n      for (let i = 0; i < materials.length; i++) {\n        mat.push({\n          \"id\": materials[i].id,\n          \"Material\": materials[i].name\n        });\n        matList.push(materials[i].name);\n        matIDList.push(materials[i].id);\n      }\n\n      await setMaterialsIDList(matIDList);\n      await setMaterials(mat);\n      await setMaterialsList(matList);\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getIssuedByMatWeek\", options).then(response => response.json()).then(async json => {\n        const issued = json.issued;\n        await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getEstimatedMatWeek\", options).then(response => response.json()).then(async json => {\n          const estimated = json.estimated;\n          fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getForecastMatWeek\", options).then(response => response.json()).then(async json => {\n            const forecast = json.forecast;\n            let tables = [];\n            let material = estimated[0].material_id;\n            const settings = {\n              licenseKey: 'non-commercial-and-evaluation',\n              colWidths: 40,\n              rowHeaderWidth: 190 //... other options\n\n            };\n            let weeks = [];\n            let graphData = [];\n            let est = {};\n            let sumEst = {};\n            let sumReal = {};\n            let sumForc = {};\n            let sumEstGraph = [];\n            let sumRealGraph = [];\n            let sumForcGraph = [];\n            let countEst = 0;\n            let countReal = 0;\n            let countForc = 0;\n            let forc = {};\n            let col = [];\n            let sumEstCells = [];\n\n            for (let i = 0; i < estimated.length; i++) {\n              if (estimated[i].material_id === material) {\n                weeks.push(estimated[i].week.toString());\n                est[estimated[i].week.toString()] = estimated[i].estimated;\n                forc[forecast[i].week.toString()] = forecast[i].estimated;\n                countForc += forecast[i].estimated;\n                countEst += estimated[i].estimated;\n                sumEst[estimated[i].week.toString()] = countEst;\n\n                if (issued[material]) {\n                  if (issued[material][estimated[i].week]) {\n                    countReal += issued[material][estimated[i].week];\n                  }\n                }\n\n                sumReal[estimated[i].week.toString()] = countReal;\n                sumForc[estimated[i].week.toString()] = countForc;\n                col.push({\n                  data: estimated[i].week.toString(),\n                  type: \"numeric\"\n                });\n                sumEstCells.push({\n                  row: 1,\n                  col: i,\n                  readOnly: true\n                });\n                sumEstCells.push({\n                  row: 3,\n                  col: i,\n                  readOnly: true\n                });\n                sumEstCells.push({\n                  row: 4,\n                  col: i,\n                  readOnly: true\n                });\n              } else {\n                let estData = estimatedData;\n                estData[material] = est;\n                await setEstimatedData(estData);\n                let forcData = forecastData;\n                forcData[material] = forc;\n                await setForecastData(forcData);\n                let totalEst = estimatedMaterialData[estimated[i - 1].material_id];\n\n                if (!totalEst) {\n                  totalEst = 0;\n                }\n\n                let diff = countEst - totalEst;\n                let warning = null;\n\n                if (totalEst < countEst) {\n                  warning = /*#__PURE__*/_jsxDEV(\"text\", {\n                    className: \"warning__text\",\n                    children: [\"*Estimated exceeded by \", diff, \"!\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 59\n                  }, this);\n                }\n\n                if (!totalEst) {\n                  totalEst = \"(0 estimated)\";\n                } else {\n                  totalEst = \"(\" + totalEst.toString() + \" estimated)\";\n                }\n\n                await tables.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"hot-app\",\n                  children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                    className: \"materials__title\",\n                    children: [estimated[i - 1].name.toUpperCase(), \" Isometrics \", /*#__PURE__*/_jsxDEV(\"text\", {\n                      style: {\n                        fontSize: \"17px\"\n                      },\n                      children: totalEst\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 163\n                    }, this), \" \", warning]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 81\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"save__button\",\n                    onClick: () => submitEstimatedForecast(estimated[i - 1].material_id),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SaveIcon,\n                      alt: \"save\",\n                      className: \"save__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 329\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 229\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: \"10px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(HotTable, {\n                      data: [est, issued[material], forc, sumEst, sumReal],\n                      colHeaders: weeks,\n                      rowHeaders: [\"Estimated\", \"Real\", \"Forecast\", \"Estimated progress\", \"Real progress\"],\n                      width: \"1800\",\n                      height: \"200\",\n                      settings: settings,\n                      manualColumnResize: true,\n                      manualRowResize: true,\n                      columns: col,\n                      filters: true,\n                      cell: sumEstCells\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 77\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 63\n                }, this));\n                Object.keys(sumEst).map(function (key, index) {\n                  sumEstGraph.push(sumEst[key]);\n                });\n                Object.keys(sumReal).map(function (key, index) {\n                  sumRealGraph.push(sumReal[key]);\n                });\n                Object.keys(sumForc).map(function (key, index) {\n                  sumForcGraph.push(sumForc[key]);\n                });\n                let color_index = matIDList.indexOf(material) * 3;\n                graphData.push({\n                  label: 'Estimated ' + estimated[i - 1].name,\n                  fill: false,\n                  lineTension: 0.2,\n                  backgroundColor: colors[color_index],\n                  borderColor: colors[color_index],\n                  borderWidth: 1,\n                  data: sumEstGraph\n                });\n                graphData.push({\n                  label: 'Forecast ' + estimated[i - 1].name,\n                  fill: false,\n                  lineTension: 0.2,\n                  backgroundColor: colors[color_index + 2],\n                  borderColor: colors[color_index + 2],\n                  borderWidth: 1,\n                  data: sumForcGraph\n                });\n                graphData.push({\n                  label: 'Real ' + estimated[i - 1].name,\n                  fill: false,\n                  lineTension: 0.2,\n                  backgroundColor: colors[color_index + 1],\n                  borderColor: colors[color_index + 1],\n                  borderWidth: 1,\n                  data: sumRealGraph\n                });\n                weeks = [estimated[i].week.toString()];\n                est = {};\n                forc = {};\n                sumEst = {};\n                sumReal = {};\n                sumForc = {};\n                sumEstGraph = [];\n                sumRealGraph = [];\n                sumForcGraph = [];\n                est[estimated[i].week.toString()] = estimated[i].estimated;\n                forc[forecast[i].week.toString()] = forecast[i].estimated;\n\n                if (issued[estimated[i].material_id]) {\n                  if (issued[estimated[i].material_id][\"1\"]) {\n                    countReal = issued[estimated[i].material_id][estimated[i].week];\n                  } else {\n                    countReal = 0;\n                  }\n                } else {\n                  countReal = 0;\n                }\n\n                sumReal[estimated[i].week.toString()] = countReal;\n\n                if (estimated[i].estimated) {\n                  countEst = estimated[i].estimated;\n                } else {\n                  countEst = 0;\n                }\n\n                if (forecast[i].estimated) {\n                  countForc = forecast[i].estimated;\n                } else {\n                  countForc = 0;\n                }\n\n                sumForc[forecast[i].week.toString()] = countForc;\n                sumEst[estimated[i].week.toString()] = countEst;\n                col = [{\n                  data: estimated[i].week.toString(),\n                  type: \"numeric\"\n                }];\n                material = estimated[i].material_id;\n              }\n            }\n\n            let estData = estimatedData;\n            estData[material] = est;\n            await setEstimatedData(estData);\n            let forcData = forecastData;\n            forcData[material] = forc;\n            await setForecastData(forcData);\n            let totalEst = estimatedMaterialData[material];\n\n            if (!totalEst) {\n              totalEst = 0;\n            }\n\n            let diff = countEst - totalEst;\n            let warning = null;\n\n            if (totalEst < countEst) {\n              warning = /*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"warning__text\",\n                children: [\"*Estimated exceeded by \", diff, \"!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 51\n              }, this);\n            }\n\n            if (!totalEst) {\n              totalEst = \"(0 estimated)\";\n            } else {\n              totalEst = \"(\" + totalEst.toString() + \" estimated)\";\n            }\n\n            await tables.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"hot-app\",\n              children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"materials__title\",\n                children: [estimated[estimated.length - 1].name.toUpperCase(), \" Isometrics \", /*#__PURE__*/_jsxDEV(\"text\", {\n                  style: {\n                    fontSize: \"17px\"\n                  },\n                  children: totalEst\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 170\n                }, this), \" \", warning]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 73\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save__button\",\n                onClick: () => submitEstimatedForecast(material),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: SaveIcon,\n                  alt: \"save\",\n                  className: \"save__icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 318\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 236\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: \"10px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(HotTable, {\n                  data: [est, issued[material], forc, sumEst, sumReal],\n                  colHeaders: weeks,\n                  rowHeaders: [\"Estimated\", \"Real\", \"Forecast\", \"Estimated progress\", \"Real progress\"],\n                  width: \"1800\",\n                  height: \"200\",\n                  settings: settings,\n                  manualColumnResize: true,\n                  manualRowResize: true,\n                  columns: col,\n                  filters: true,\n                  cell: sumEstCells\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 69\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 55\n            }, this));\n            setTables(tables);\n            Object.keys(sumEst).map(function (key, index) {\n              sumEstGraph.push(sumEst[key]);\n            });\n            Object.keys(sumReal).map(function (key, index) {\n              sumRealGraph.push(sumReal[key]);\n            });\n            Object.keys(sumForc).map(function (key, index) {\n              sumForcGraph.push(sumForc[key]);\n            });\n            let color_index = matIDList.indexOf(material) * 3;\n            graphData.push({\n              label: 'Estimated ' + estimated[estimated.length - 1].name,\n              fill: false,\n              lineTension: 0.2,\n              backgroundColor: colors[color_index],\n              borderColor: colors[color_index],\n              borderWidth: 1,\n              data: sumEstGraph\n            });\n            graphData.push({\n              label: 'Forecast ' + estimated[estimated.length - 1].name,\n              fill: false,\n              lineTension: 0.2,\n              backgroundColor: colors[color_index + 2],\n              borderColor: colors[color_index + 2],\n              borderWidth: 1,\n              data: sumForcGraph\n            });\n            graphData.push({\n              label: 'Real ' + estimated[estimated.length - 1].name,\n              fill: false,\n              lineTension: 0.2,\n              backgroundColor: colors[color_index + 1],\n              borderColor: colors[color_index + 1],\n              borderWidth: 1,\n              data: sumRealGraph\n            });\n            let overallTable = [];\n            let totalEstimated = 0;\n            let estimatedOverall = {};\n            let esimatedOverallSum = {};\n            let estimatedOverallCount = 0;\n            let estimatedOverallGraph = [];\n            let realOverall = {};\n            let realOverallSum = {};\n            let realOverallCount = 0;\n            let realOverallGraph = [];\n            Object.keys(estimatedMaterialData).map(function (key, index) {\n              totalEstimated += estimatedMaterialData[key];\n            });\n            Object.keys(issued).map(function (key, index) {\n              Object.keys(issued[key]).map(function (k, index) {\n                if (realOverall[k]) {\n                  realOverall[k] += issued[key][k];\n                } else {\n                  realOverall[k] = issued[key][k];\n                }\n              });\n            });\n            Object.keys(estimated).map(function (key, index) {\n              if (estimatedOverall[estimated[key].week]) {\n                estimatedOverall[estimated[key].week] += estimated[key].estimated;\n              } else {\n                estimatedOverall[estimated[key].week] = estimated[key].estimated;\n              }\n            });\n            let labels = [];\n            let overallCells = [];\n            await Object.keys(estimatedOverall).map(function (key, index) {\n              if (realOverall[key]) {\n                realOverallCount += realOverall[key];\n              }\n\n              realOverallSum[key] = realOverallCount;\n              estimatedOverallCount += estimatedOverall[key];\n              esimatedOverallSum[key] = estimatedOverallCount;\n              estimatedOverallGraph.push(estimatedOverallCount);\n              realOverallGraph.push(realOverallCount);\n              overallCells.push({\n                row: 2,\n                col: index,\n                className: \"overallCell__estSum\"\n              });\n              overallCells.push({\n                row: 3,\n                col: index,\n                className: \"overallCell__realSum\"\n              });\n              labels.push(\"W\" + key.toString());\n            });\n            graphData.push({\n              label: 'Estimated Overall',\n              fill: false,\n              lineTension: 0.2,\n              backgroundColor: 'rgb(147,112,219)',\n              borderColor: 'rgb(147,112,219)',\n              borderWidth: 1,\n              data: estimatedOverallGraph\n            });\n            graphData.push({\n              label: 'Real Overall',\n              fill: false,\n              lineTension: 0.2,\n              backgroundColor: 'rgb(255,80,80)',\n              borderColor: 'rgb(255,80,80)',\n              borderWidth: 1,\n              data: realOverallGraph\n            });\n            warning = null;\n\n            if (totalEstimated < estimatedOverallCount) {\n              warning = /*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"warning__text\",\n                children: [\"*Estimated exceeded by \", estimatedOverallCount - totalEstimated, \"!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 51\n              }, this);\n            }\n\n            console.log(overallCells);\n            await overallTable.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"hot-app\",\n              children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"materials__title\",\n                children: [\"OVERALL Isometrics \", /*#__PURE__*/_jsxDEV(\"text\", {\n                  style: {\n                    fontSize: \"17px\"\n                  },\n                  children: [\"(\", totalEstimated, \" estimated)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 133\n                }, this), \" \", warning]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 79\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: \"10px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(HotTable, {\n                  data: [estimatedOverall, realOverall, esimatedOverallSum, realOverallSum],\n                  colHeaders: weeks,\n                  rowHeaders: [\"Estimated\", \"Real\", \"Estimated progress\", \"Real progress\"],\n                  width: \"1800\",\n                  height: \"200\",\n                  settings: settings,\n                  manualColumnResize: true,\n                  manualRowResize: true,\n                  columns: col,\n                  filters: true,\n                  readOnly: true,\n                  className: \"overall-table\",\n                  cell: overallCells\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 69\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 61\n            }, this));\n            await setOverallTable(overallTable);\n            await setLineChart( /*#__PURE__*/_jsxDEV(Line, {\n              data: {\n                labels: labels,\n                datasets: graphData\n              },\n              options: {\n                hover: {\n                  mode: 'new mode'\n                },\n                plugins: {\n                  title: {\n                    display: true,\n                    text: \"ISOMETRICS IFC\",\n                    font: {\n                      size: \"22px\"\n                    }\n                  },\n                  legend: {\n                    display: true,\n                    position: \"left\"\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 56\n            }, this));\n          });\n        });\n      });\n    });\n  }, [updateData]);\n\n  async function addRowMaterials() {\n    let m = materials;\n    m.push({\n      \"id\": \"\",\n      \"Material\": \"\"\n    });\n    await setMaterials(m);\n    await setUpdateRows(!updateRows);\n  }\n\n  async function addRowPiping() {\n    let p = piping;\n    p.push({\n      \"id\": \"\",\n      \"Material\": \"\"\n    });\n    await setPiping(p);\n    await setUpdateRows(!updateRows);\n  }\n\n  async function submitChangesMaterials() {\n    const body = {\n      materials: materials\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitMaterials\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setMaterialsAlert(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function submitChangesPiping() {\n    const body = {\n      piping: piping\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitPipingClass\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setPipingAlert(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function submitManagement() {\n    const body = {\n      span: management\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitProjectSpan\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setSpanAlert(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function submitEstimatedForecast(material_id) {\n    const body = {\n      material_id: material_id,\n      estimated: estimatedData[material_id],\n      forecast: forecastData[material_id]\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitEstimatedForecast\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setSuccess(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  const matSettings = {\n    licenseKey: 'non-commercial-and-evaluation',\n    colWidths: 400 //... other options\n\n  };\n  const pipingSettings = {\n    licenseKey: 'non-commercial-and-evaluation',\n    colWidths: 200 //... other options\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [updateData, updateRows, /*#__PURE__*/_jsxDEV(IdleTimer, {\n      timeout: 1000 * 60 * 15,\n      onIdle: handleOnIdle,\n      debounce: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBarProdCurve, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${spanAlert ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setSpanAlert(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Project week span saved!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${pipingAlert ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setPipingAlert(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Piping classes saved!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${materialsAlert ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setMaterialsAlert(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Materials saved!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${success ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setSuccess(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Changes saved!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back__button\",\n      onClick: () => history.push('/' + process.env.REACT_APP_PROJECT + '/piping'),\n      style: {\n        width: \"175px\",\n        marginLeft: \"100px\",\n        marginTop: \"120px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: BackIcon,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 182\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"back__button__text\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 272\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph__container\",\n        children: lineChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"materials__pc__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(HotTable, {\n            data: materials,\n            colHeaders: [\"<b>Material</b>\"],\n            rowHeaders: true,\n            width: \"450\",\n            height: \"200\",\n            settings: matSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Material\"\n            }],\n            filters: true,\n            dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-sm btn-info\",\n          onClick: () => addRowMaterials(),\n          style: {\n            marginRight: \"5px\",\n            fontSize: \"16px\",\n            width: \"60px\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#338DF1\",\n            marginLeft: \"165px\"\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-sm btn-success\",\n          onClick: () => submitChangesMaterials(),\n          style: {\n            marginRight: \"5px\",\n            fontSize: \"16px\",\n            width: \"60px\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#7BD36D\"\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          style: {\n            marginBottom: \"20px\",\n            marginTop: \"40px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(HotTable, {\n            data: piping,\n            colHeaders: [\"<b>Piping class</b>\", \"<b>Material</b>\"],\n            rowHeaders: true,\n            width: \"500\",\n            height: \"200\",\n            settings: pipingSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"PipingClass\"\n            }, {\n              data: \"Material\",\n              type: \"dropdown\",\n              strict: \"true\",\n              source: materialsList\n            }],\n            filters: true,\n            dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-sm btn-info\",\n          onClick: () => addRowPiping(),\n          style: {\n            marginRight: \"5px\",\n            fontSize: \"16px\",\n            width: \"60px\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#338DF1\",\n            marginLeft: \"165px\"\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-sm btn-success\",\n          onClick: () => submitChangesPiping(),\n          style: {\n            marginRight: \"5px\",\n            fontSize: \"16px\",\n            width: \"60px\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#7BD36D\"\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"management__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"materials__title\",\n        children: \"Project Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save__button\",\n        onClick: () => submitManagement(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: SaveIcon,\n          alt: \"save\",\n          className: \"save__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 84\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(HotTable, {\n          data: management,\n          colHeaders: [\"<b>Starting date</b>\", \"<b>Finishing date</b>\"],\n          rowHeaders: true,\n          width: \"500\",\n          height: \"120\",\n          settings: pipingSettings,\n          manualColumnResize: true,\n          manualRowResize: true,\n          columns: [{\n            data: \"Starting date\",\n            type: \"date\"\n          }, {\n            data: \"Finishing date\",\n            type: \"date\"\n          }],\n          filters: true,\n          dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"materials__tables__container\",\n      children: [overallTable, tables]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 654,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PITRequests, \"7+P0+LjgW7xp1OZeAegA2YtCwlY=\", false, function () {\n  return [useHistory];\n});\n\n_c = PITRequests;\nexport default PITRequests;\n\nvar _c;\n\n$RefreshReg$(_c, \"PITRequests\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/pipingProduction/pipingProduction.js"],"names":["React","useState","useEffect","HotTable","IdleTimer","useHistory","AlertF","Line","Chart","NavBarProdCurve","PITRequests","history","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","updateData","setUpdateData","updateRows","setUpdateRows","tables","setTables","materials","setMaterials","materialsList","setMaterialsList","materialsIDList","setMaterialsIDList","piping","setPiping","management","setManagement","estimatedData","setEstimatedData","forecastData","setForecastData","estimatedMaterialData","setEstimatedMaterialData","overallTable","setOverallTable","success","setSuccess","spanAlert","setSpanAlert","pipingAlert","setPipingAlert","materialsAlert","setMaterialsAlert","lineChart","setLineChart","document","body","style","zoom","handleOnIdle","user","getItem","options","method","headers","JSON","stringify","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","clear","push","REACT_APP_PROJECT","colors","table_class","i","length","piping_id","material","span","starting_date","substring","finishing_date","est","estimated","id","mat","matList","matIDList","name","issued","forecast","material_id","settings","licenseKey","colWidths","rowHeaderWidth","weeks","graphData","sumEst","sumReal","sumForc","sumEstGraph","sumRealGraph","sumForcGraph","countEst","countReal","countForc","forc","col","sumEstCells","week","type","row","readOnly","estData","forcData","totalEst","diff","warning","toUpperCase","fontSize","submitEstimatedForecast","SaveIcon","marginTop","Object","keys","map","index","color_index","indexOf","label","fill","lineTension","backgroundColor","borderColor","borderWidth","totalEstimated","estimatedOverall","esimatedOverallSum","estimatedOverallCount","estimatedOverallGraph","realOverall","realOverallSum","realOverallCount","realOverallGraph","k","labels","overallCells","className","console","log","datasets","hover","mode","plugins","title","display","text","font","size","legend","position","addRowMaterials","m","addRowPiping","p","submitChangesMaterials","submitChangesPiping","submitManagement","matSettings","pipingSettings","width","marginLeft","BackIcon","marginRight","marginBottom","borderRadius","strict","source"],"mappings":"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","sourcesContent":["\r\nimport React, { useState , useEffect} from 'react'\r\nimport { HotTable } from '@handsontable/react';\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\nimport BackIcon from \"../../assets/images/back.svg\"\r\n\r\nimport AlertF from \"../../components/alert/alert\"\r\n\r\nimport './pipingProduction.css'\r\nimport SaveIcon from \"../../assets/images/save.svg\"\r\nimport { Line } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport NavBarProdCurve from '../../components/navBarProdCurve/navBarProdCurve';\r\n//Página de home con el menú para ir a las aplicaciones de isotracker\r\n\r\nconst PITRequests = () =>{\r\n\r\n    const history = useHistory();\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const [updateData, setUpdateData] = useState(false)\r\n    const [updateRows, setUpdateRows] = useState(false)\r\n    const [tables, setTables] = useState([])\r\n    const [materials, setMaterials] = useState()\r\n    const [materialsList, setMaterialsList] = useState([])\r\n    const [materialsIDList, setMaterialsIDList] = useState([])\r\n    const [piping, setPiping] = useState()\r\n    const [management, setManagement] = useState([])\r\n\r\n    const [estimatedData, setEstimatedData] = useState({})\r\n    const [forecastData, setForecastData] = useState({})\r\n    const [estimatedMaterialData, setEstimatedMaterialData] = useState({})\r\n    const [overallTable, setOverallTable] = useState()\r\n\r\n    const [success, setSuccess] = useState(false)\r\n    const [spanAlert, setSpanAlert] = useState(false)\r\n    const [pipingAlert, setPipingAlert] = useState(false)\r\n    const [materialsAlert, setMaterialsAlert] = useState(false)\r\n\r\n    const [lineChart, setLineChart] = useState()\r\n\r\n    document.body.style.zoom = 1\r\n\r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: secureStorage.getItem(\"user\"),\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n\r\n    useEffect(async() =>{\r\n\r\n        const colors = [\"rgb(0,0,255)\", \"rgb(176,224,230)\", \"rgb(0,191,255)\", \"rgb(0,128,0)\", \"rgb(124,252,0)\", \"rgb(50,205,50)\", \"rgb(255,140,0)\", \"rgb(255,215,0)\", \"rgb(255,165,0)\", \"rgb(255,20,147)\", \"rgb(255,105,180)\", \"rgb(255,192,203)\", \"rgb(112,128,144)\", \"rgb(169,169,169)\", \"rgb(220,220,220)\", \"rgb(128,0,0)\", \"rgb(205,92,92)\", \"rgb(240,128,128)\"]\r\n        \r\n        const table_class = [\"mat1__table\", ]\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getMaterialsPipingClass\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                const materials = json.materials                        \r\n                let piping = []\r\n                for(let i = 0; i < materials.length; i++){\r\n                    piping.push({\"id\": materials[i].piping_id, \"PipingClass\": materials[i].piping, \"Material\": materials[i].material})\r\n                }\r\n                \r\n                await setPiping(piping)\r\n        })\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getProjectSpan\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                const span = json.span\r\n                await setManagement({\"Starting date\": span[0].starting_date.toString().substring(8,10) + \"/\" + span[0].starting_date.toString().substring(5,7) + \"/\" + span[0].starting_date.toString().substring(0,4), \"Finishing date\": span[0].finishing_date.toString().substring(8,10) + \"/\" + span[0].finishing_date.toString().substring(5,7) + \"/\" + span[0].finishing_date.toString().substring(0,4)})\r\n            })\r\n\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getEstimatedByMaterial\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                let est = estimatedMaterialData\r\n                for(let i = 0; i < json.estimated.length; i++){\r\n                    est[json.estimated[i].id] = json.estimated[i].estimated\r\n                }\r\n                await setEstimatedMaterialData(est)\r\n            })\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getMaterials\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                const materials = json.materials\r\n                let mat = []\r\n                let matList = []\r\n                let matIDList = []\r\n                for(let i = 0; i < materials.length; i++){\r\n                    mat.push({\"id\": materials[i].id, \"Material\": materials[i].name})\r\n                    matList.push(materials[i].name)\r\n                    matIDList.push(materials[i].id)\r\n                }\r\n                await setMaterialsIDList(matIDList)\r\n                await setMaterials(mat)\r\n                await setMaterialsList(matList)\r\n                await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getIssuedByMatWeek\", options)\r\n                .then(response => response.json())\r\n                .then(async json => {\r\n                    const issued = json.issued\r\n                    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getEstimatedMatWeek\", options)\r\n                        .then(response => response.json())\r\n                        .then(async json => {\r\n\r\n                            const estimated = json.estimated\r\n                            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getForecastMatWeek\", options)\r\n                                .then(response => response.json())\r\n                                .then(async json => {\r\n                                    const forecast = json.forecast\r\n                                    let tables = []\r\n                                    let material = estimated[0].material_id\r\n                                    const settings = {\r\n                                        licenseKey: 'non-commercial-and-evaluation',\r\n                                        colWidths: 40,\r\n                                        rowHeaderWidth: 190\r\n                                        //... other options\r\n                                    }\r\n\r\n                                    let weeks = []\r\n                                    let graphData = []\r\n                                    let est = {}\r\n                                    let sumEst = {}\r\n                                    let sumReal = {}\r\n                                    let sumForc = {}\r\n                                    let sumEstGraph = []\r\n                                    let sumRealGraph = []\r\n                                    let sumForcGraph = []\r\n                                    let countEst = 0\r\n                                    let countReal = 0\r\n                                    let countForc = 0\r\n                                    let forc = {}\r\n                                    let col = []\r\n                                    let sumEstCells = []\r\n\r\n                                    for(let i = 0; i < estimated.length; i++){\r\n                                        if(estimated[i].material_id === material){\r\n                                            weeks.push(estimated[i].week.toString())\r\n                                            est[estimated[i].week.toString()] = estimated[i].estimated\r\n                                            forc[forecast[i].week.toString()] = forecast[i].estimated\r\n                                            countForc += forecast[i].estimated\r\n                                            countEst += estimated[i].estimated\r\n                                            sumEst[estimated[i].week.toString()] = countEst\r\n                                            if(issued[material]){\r\n                                                if(issued[material][estimated[i].week]){\r\n                                                    countReal += issued[material][estimated[i].week]\r\n                                                }\r\n                                            }\r\n                                            sumReal[estimated[i].week.toString()] = countReal\r\n                                            sumForc[estimated[i].week.toString()] = countForc\r\n                                            col.push({ data: estimated[i].week.toString(), type: \"numeric\"})\r\n                                            sumEstCells.push({row: 1, col: i, readOnly:true})\r\n                                            sumEstCells.push({row: 3, col: i, readOnly:true})\r\n                                            sumEstCells.push({row: 4, col: i, readOnly:true})\r\n                                        }else{\r\n                                            let estData = estimatedData\r\n                                            estData[material] = est\r\n                                            await setEstimatedData(estData)\r\n                                            let forcData = forecastData\r\n                                            forcData[material] = forc\r\n                                            await setForecastData(forcData)\r\n                                            let totalEst = estimatedMaterialData[estimated[i-1].material_id]\r\n                                            if(!totalEst){\r\n                                                totalEst = 0\r\n                                            }\r\n                                            let diff = countEst - totalEst\r\n                                            let warning = null\r\n                                            if(totalEst < countEst){\r\n                                                warning = <text className=\"warning__text\">*Estimated exceeded by {diff}!</text>\r\n                                            }\r\n                                            if(!totalEst){\r\n                                                totalEst = \"(0 estimated)\"\r\n                                            }else{\r\n                                                totalEst = \"(\" + totalEst.toString() + \" estimated)\"\r\n                                            }\r\n\r\n                                            await tables.push(<div id=\"hot-app\"><text className=\"materials__title\">{estimated[i-1].name.toUpperCase()} Isometrics <text style={{fontSize:\"17px\"}}>{totalEst}</text> {warning}</text><button className=\"save__button\" onClick={()=> submitEstimatedForecast(estimated[i-1].material_id)}><img src={SaveIcon} alt=\"save\" className=\"save__icon\"></img></button>\r\n                                            <div style={{marginTop:\"10px\"}}><HotTable\r\n                                            data={[est, issued[material], forc, sumEst, sumReal]}\r\n                                            colHeaders={weeks}\r\n                                            rowHeaders={[\"Estimated\", \"Real\", \"Forecast\", \"Estimated progress\", \"Real progress\"]}\r\n                                            width=\"1800\"\r\n                                            height=\"200\"\r\n                                            settings={settings} \r\n                                            manualColumnResize={true}\r\n                                            manualRowResize={true}\r\n                                            columns= {col}\r\n                                            filters={true}\r\n                                            cell = {sumEstCells}\r\n                                        /></div></div>)\r\n\r\n                                        Object.keys(sumEst).map(function(key, index) {\r\n                                            sumEstGraph.push(sumEst[key])\r\n                                        });\r\n\r\n                                        Object.keys(sumReal).map(function(key, index) {\r\n                                            sumRealGraph.push(sumReal[key])\r\n                                        });\r\n\r\n                                        Object.keys(sumForc).map(function(key, index) {\r\n                                            sumForcGraph.push(sumForc[key])\r\n                                        });\r\n\r\n                                        let color_index = ((matIDList.indexOf(material)) * 3)\r\n\r\n                                        graphData.push({\r\n                                            label: 'Estimated ' + estimated[i-1].name,\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: colors[color_index],\r\n                                            borderColor: colors[color_index],\r\n                                            borderWidth: 1,\r\n                                            data: sumEstGraph\r\n                                        })\r\n\r\n                                        graphData.push({\r\n                                            label: 'Forecast ' + estimated[i-1].name,\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: colors[color_index + 2],\r\n                                            borderColor: colors[color_index + 2],\r\n                                            borderWidth: 1,\r\n                                            data: sumForcGraph\r\n                                        })\r\n\r\n                                        graphData.push({\r\n                                            label: 'Real ' + estimated[i-1].name,\r\n                                            fill: false,\r\n                                            lineTension: 0.2,\r\n                                            backgroundColor: colors[color_index + 1],\r\n                                            borderColor: colors[color_index + 1],\r\n                                            borderWidth: 1,\r\n                                            data: sumRealGraph\r\n                                        })\r\n            \r\n                                        weeks = [estimated[i].week.toString()]\r\n                                        est = {}\r\n                                        forc = {}\r\n                                        sumEst = {}\r\n                                        sumReal = {}\r\n                                        sumForc = {}\r\n                                        sumEstGraph = []\r\n                                        sumRealGraph = []\r\n                                        sumForcGraph = []\r\n                                        est[estimated[i].week.toString()] = estimated[i].estimated\r\n                                        forc[forecast[i].week.toString()] = forecast[i].estimated\r\n                                        if(issued[estimated[i].material_id]){\r\n                                            if(issued[estimated[i].material_id][\"1\"]){\r\n                                                countReal = issued[estimated[i].material_id][estimated[i].week]\r\n                                            }else{\r\n                                                countReal = 0\r\n                                            }\r\n                                        }else{\r\n                                            countReal = 0\r\n                                        }\r\n                                        sumReal[estimated[i].week.toString()] = countReal\r\n\r\n                                        if(estimated[i].estimated){\r\n                                            countEst = estimated[i].estimated\r\n                                        }else{\r\n                                            countEst = 0\r\n                                        }\r\n\r\n                                        if(forecast[i].estimated){\r\n                                            countForc = forecast[i].estimated\r\n                                        }else{\r\n                                            countForc = 0\r\n                                        }\r\n                                        sumForc[forecast[i].week.toString()] = countForc\r\n                                        sumEst[estimated[i].week.toString()] = countEst\r\n                                        \r\n                                        col = [{ data: estimated[i].week.toString(), type: \"numeric\"}]\r\n                                        material = estimated[i].material_id\r\n                                        }\r\n                                    }\r\n                                    let estData = estimatedData\r\n                                    estData[material] = est\r\n                                    await setEstimatedData(estData)\r\n                                    let forcData = forecastData\r\n                                    forcData[material] = forc\r\n                                    await setForecastData(forcData)\r\n                                    let totalEst = estimatedMaterialData[material]\r\n                                    if(!totalEst){\r\n                                        totalEst = 0\r\n                                    }\r\n                                    let diff = countEst - totalEst\r\n                                    let warning = null\r\n                                    if(totalEst < countEst){\r\n                                        warning = <text className=\"warning__text\">*Estimated exceeded by {diff}!</text>\r\n                                    }\r\n                                    if(!totalEst){\r\n                                        totalEst = \"(0 estimated)\"\r\n                                    }else{\r\n                                        totalEst = \"(\" + totalEst.toString() + \" estimated)\"\r\n                                    }\r\n\r\n                                    await tables.push(<div id=\"hot-app\"><text className=\"materials__title\">{estimated[estimated.length-1].name.toUpperCase()} Isometrics <text style={{fontSize:\"17px\"}}>{totalEst}</text> {warning}</text><button className=\"save__button\" onClick={()=> submitEstimatedForecast(material)}><img src={SaveIcon} alt=\"save\" className=\"save__icon\"></img></button>\r\n                                    <div style={{marginTop:\"10px\"}}><HotTable\r\n                                            data={[est, issued[material], forc, sumEst, sumReal]}\r\n                                            colHeaders={weeks}\r\n                                            rowHeaders={[\"Estimated\", \"Real\", \"Forecast\", \"Estimated progress\", \"Real progress\"]}\r\n                                            width=\"1800\"\r\n                                            height=\"200\"\r\n                                            settings={settings} \r\n                                            manualColumnResize={true}\r\n                                            manualRowResize={true}\r\n                                            columns= {col}\r\n                                            filters={true}\r\n                                            cell = {sumEstCells}\r\n                                        /></div></div>)\r\n\r\n                                    setTables(tables)\r\n\r\n                                    Object.keys(sumEst).map(function(key, index) {\r\n                                        sumEstGraph.push(sumEst[key])\r\n                                    });\r\n\r\n                                    Object.keys(sumReal).map(function(key, index) {\r\n                                        sumRealGraph.push(sumReal[key])\r\n                                    });\r\n                                    Object.keys(sumForc).map(function(key, index) {\r\n                                        sumForcGraph.push(sumForc[key])\r\n                                    });\r\n\r\n                                    let color_index = (matIDList.indexOf(material)) * 3\r\n                                    \r\n                                    graphData.push({\r\n                                        label: 'Estimated ' + estimated[estimated.length-1].name,\r\n                                        fill: false,\r\n                                        lineTension: 0.2,\r\n                                        backgroundColor: colors[color_index],\r\n                                        borderColor: colors[color_index],\r\n                                        borderWidth: 1,\r\n                                        data: sumEstGraph\r\n                                    })\r\n\r\n                                    graphData.push({\r\n                                        label: 'Forecast ' + estimated[estimated.length-1].name,\r\n                                        fill: false,\r\n                                        lineTension: 0.2,\r\n                                        backgroundColor: colors[color_index + 2],\r\n                                        borderColor: colors[color_index + 2],\r\n                                        borderWidth: 1,\r\n                                        data: sumForcGraph\r\n                                    })\r\n\r\n                                    graphData.push({\r\n                                        label: 'Real ' + estimated[estimated.length-1].name,\r\n                                        fill: false,\r\n                                        lineTension: 0.2,\r\n                                        backgroundColor: colors[color_index + 1],\r\n                                        borderColor: colors[color_index + 1],\r\n                                        borderWidth: 1,\r\n                                        data: sumRealGraph\r\n                                    })\r\n\r\n                                \r\n                                    let overallTable = []\r\n                                    let totalEstimated = 0\r\n\r\n                                    let estimatedOverall = {}\r\n                                    let esimatedOverallSum = {}\r\n                                    let estimatedOverallCount = 0\r\n                                    let estimatedOverallGraph = []\r\n\r\n                                    let realOverall = {}\r\n                                    let realOverallSum = {}\r\n                                    let realOverallCount = 0\r\n                                    let realOverallGraph = []\r\n\r\n                                    Object.keys(estimatedMaterialData).map(function(key, index) {\r\n                                        totalEstimated += estimatedMaterialData[key]\r\n                                    });\r\n\r\n                                    Object.keys(issued).map(function(key, index) {\r\n                                        Object.keys(issued[key]).map(function(k, index) {\r\n                                            if(realOverall[k]){\r\n                                                realOverall[k] += issued[key][k]\r\n                                            }else{\r\n                                                realOverall[k] = issued[key][k]\r\n                                            }\r\n                                        })\r\n                                    });\r\n\r\n                                    Object.keys(estimated).map(function(key, index) {\r\n                                        if(estimatedOverall[estimated[key].week]){\r\n                                            estimatedOverall[estimated[key].week] += estimated[key].estimated\r\n                                        }else{\r\n                                            estimatedOverall[estimated[key].week] = estimated[key].estimated\r\n                                        }\r\n                                    });\r\n\r\n                                    let labels = []\r\n                                    let overallCells = []\r\n                                    await Object.keys(estimatedOverall).map(function(key, index) {\r\n                                        if(realOverall[key]){\r\n                                            realOverallCount += realOverall[key]\r\n                                        }\r\n                                        realOverallSum[key] = realOverallCount\r\n                                        estimatedOverallCount += estimatedOverall[key]\r\n                                        esimatedOverallSum[key] = estimatedOverallCount\r\n                                        estimatedOverallGraph.push(estimatedOverallCount)\r\n                                        realOverallGraph.push(realOverallCount)\r\n\r\n                                        overallCells.push({row: 2, col: index, className: \"overallCell__estSum\"})\r\n                                        overallCells.push({row: 3, col: index, className: \"overallCell__realSum\"})\r\n\r\n                                        labels.push(\"W\" + key.toString())\r\n                                    });\r\n\r\n                                    graphData.push({\r\n                                        label: 'Estimated Overall',\r\n                                        fill: false,\r\n                                        lineTension: 0.2,\r\n                                        backgroundColor: 'rgb(147,112,219)',\r\n                                        borderColor: 'rgb(147,112,219)',\r\n                                        borderWidth: 1,\r\n                                        data: estimatedOverallGraph\r\n                                    })\r\n\r\n                                    graphData.push({\r\n                                        label: 'Real Overall',\r\n                                        fill: false,\r\n                                        lineTension: 0.2,\r\n                                        backgroundColor: 'rgb(255,80,80)',\r\n                                        borderColor: 'rgb(255,80,80)',\r\n                                        borderWidth: 1,\r\n                                        data: realOverallGraph\r\n                                    })\r\n\r\n                                    warning = null\r\n                                    if(totalEstimated < estimatedOverallCount){\r\n                                        warning = <text className=\"warning__text\">*Estimated exceeded by {estimatedOverallCount-totalEstimated}!</text>\r\n                                    }\r\n\r\n                                    console.log(overallCells)\r\n                                    await overallTable.push(<div id=\"hot-app\"><text className=\"materials__title\">OVERALL Isometrics <text style={{fontSize:\"17px\"}}>({totalEstimated} estimated)</text> {warning}</text>\r\n                                    <div style={{marginTop:\"10px\"}}><HotTable\r\n                                            data={[estimatedOverall, realOverall, esimatedOverallSum, realOverallSum]}\r\n                                            colHeaders={weeks}\r\n                                            rowHeaders={[\"Estimated\", \"Real\", \"Estimated progress\", \"Real progress\"]}\r\n                                            width=\"1800\"\r\n                                            height=\"200\"\r\n                                            settings={settings} \r\n                                            manualColumnResize={true}\r\n                                            manualRowResize={true}\r\n                                            columns= {col}\r\n                                            filters={true}\r\n                                            readOnly= {true}\r\n                                            className='overall-table'\r\n                                            cell = {overallCells}\r\n                                        /></div></div>)\r\n\r\n                                    await setOverallTable(overallTable)\r\n                                    await setLineChart(<Line\r\n                                        data={{\r\n                                            labels: labels,\r\n                                            datasets: graphData\r\n                                        }}\r\n                                        options={{\r\n                                            hover: {\r\n                                                mode: 'new mode'\r\n                                            },\r\n                                            plugins: {\r\n                                                title: {\r\n                                                    display: true,\r\n                                                    text: \"ISOMETRICS IFC\",\r\n                                                    font: {size: \"22px\"}\r\n                                                },\r\n                                                legend: {\r\n                                                    display: true,\r\n                                                    position: \"left\"\r\n                                                },\r\n                                                \r\n                                            }\r\n                                            \r\n                                        }}\r\n                                    />)\r\n                                })\r\n                        })\r\n                })  \r\n            })\r\n\r\n    }, [updateData])\r\n\r\n    async function addRowMaterials(){\r\n        let m = materials\r\n        m.push({\"id\": \"\", \"Material\": \"\"})\r\n        await setMaterials(m)\r\n        await setUpdateRows(!updateRows)\r\n    }\r\n\r\n    async function addRowPiping(){\r\n        let p = piping\r\n        p.push({\"id\": \"\", \"Material\": \"\"})\r\n        await setPiping(p)\r\n        await setUpdateRows(!updateRows)\r\n    }\r\n\r\n    async function submitChangesMaterials(){\r\n        const body ={\r\n            materials : materials\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitMaterials\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setMaterialsAlert(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function submitChangesPiping(){\r\n        const body ={\r\n            piping : piping\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitPipingClass\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setPipingAlert(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function submitManagement(){\r\n        const body ={\r\n            span : management\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitProjectSpan\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setSpanAlert(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function submitEstimatedForecast(material_id){\r\n        const body ={\r\n            material_id : material_id,\r\n            estimated: estimatedData[material_id],\r\n            forecast: forecastData[material_id]\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitEstimatedForecast\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setSuccess(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })        \r\n    }\r\n    \r\n    const matSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 400,\r\n        //... other options\r\n    }\r\n\r\n    const pipingSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 200,\r\n        //... other options\r\n    }\r\n    \r\n    return(\r\n\r\n        <body>\r\n            {updateData}\r\n            {updateRows}\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBarProdCurve/>\r\n            <div className={`alert alert-success ${spanAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setSpanAlert(false)}>\r\n                <AlertF type=\"success\" text=\"Project week span saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div className={`alert alert-success ${pipingAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setPipingAlert(false)}>\r\n                <AlertF type=\"success\" text=\"Piping classes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div className={`alert alert-success ${materialsAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setMaterialsAlert(false)}>\r\n                <AlertF type=\"success\" text=\"Materials saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div className={`alert alert-success ${success ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setSuccess(false)}>\r\n                <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <button className=\"back__button\" onClick={()=>history.push('/'+process.env.REACT_APP_PROJECT+'/piping')} style={{width:\"175px\", marginLeft:\"100px\", marginTop: \"120px\"}}><img src={BackIcon} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"back__button__text\">Back</p></button>\r\n            <div className=\"top__container\">\r\n                <div className=\"graph__container\">\r\n                {lineChart}\r\n                </div>\r\n                <div className=\"materials__pc__container\">\r\n                <div id=\"hot-app\" style={{marginBottom:\"20px\"}}>\r\n                    <HotTable\r\n                        data={materials}\r\n                        colHeaders = {[\"<b>Material</b>\"]}\r\n                        rowHeaders={true}\r\n                        width=\"450\"\r\n                        height=\"200\"\r\n                        settings={matSettings} \r\n                        manualColumnResize={true}\r\n                        manualRowResize={true}\r\n                        columns= {[{ data: \"Material\"}]}\r\n                        filters={true}\r\n                        dropdownMenu= {[\r\n                            'make_read_only',\r\n                            '---------',\r\n                            'alignment',\r\n                            '---------',\r\n                            'filter_by_condition',\r\n                            '---------',\r\n                            'filter_operators',\r\n                            '---------',\r\n                            'filter_by_condition2',\r\n                            '---------',\r\n                            'filter_by_value',\r\n                            '---------',\r\n                            'filter_action_bar',\r\n                        ]}\r\n                    />\r\n                    </div>\r\n                        <button class=\"btn btn-sm btn-info\" onClick={() => addRowMaterials()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\", marginLeft:\"165px\"}}>Add</button>\r\n                        <button class=\"btn btn-sm btn-success\" onClick={() => submitChangesMaterials()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#7BD36D\"}}>Save</button>\r\n                    <div id=\"hot-app\" style={{marginBottom:\"20px\", marginTop:\"40px\"}}>\r\n                    <HotTable\r\n                        data={piping}\r\n                        colHeaders = {[\"<b>Piping class</b>\", \"<b>Material</b>\"]}\r\n                        rowHeaders={true}\r\n                        width=\"500\"\r\n                        height=\"200\"\r\n                        settings={pipingSettings} \r\n                        manualColumnResize={true}\r\n                        manualRowResize={true}\r\n                        columns= {[{ data: \"PipingClass\"}, { data: \"Material\", type:\"dropdown\",strict:\"true\", source: materialsList}]}\r\n                        filters={true}\r\n                        dropdownMenu= {[\r\n                            'make_read_only',\r\n                            '---------',\r\n                            'alignment',\r\n                            '---------',\r\n                            'filter_by_condition',\r\n                            '---------',\r\n                            'filter_operators',\r\n                            '---------',\r\n                            'filter_by_condition2',\r\n                            '---------',\r\n                            'filter_by_value',\r\n                            '---------',\r\n                            'filter_action_bar',\r\n                        ]}\r\n                    />\r\n                    </div>\r\n                    <button class=\"btn btn-sm btn-info\" onClick={() => addRowPiping()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\", marginLeft:\"165px\"}}>Add</button>\r\n                    <button class=\"btn btn-sm btn-success\" onClick={() => submitChangesPiping()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#7BD36D\"}}>Save</button>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"management__container\">\r\n                <text className=\"materials__title\">Project Management</text>\r\n                <button className=\"save__button\" onClick={()=> submitManagement()}><img src={SaveIcon} alt=\"save\" className=\"save__icon\"></img></button>\r\n \r\n                <div style={{marginTop:\"10px\"}}>\r\n                    <HotTable\r\n                        data={management}\r\n                        colHeaders = {[\"<b>Starting date</b>\", \"<b>Finishing date</b>\"]}\r\n                        rowHeaders={true}\r\n                        width=\"500\"\r\n                        height=\"120\"\r\n                        settings={pipingSettings} \r\n                        manualColumnResize={true}\r\n                        manualRowResize={true}\r\n                        columns= {[{ data: \"Starting date\", type:\"date\"}, { data: \"Finishing date\", type:\"date\"}]}\r\n                        filters={true}\r\n                        dropdownMenu= {[\r\n                            'make_read_only',\r\n                            '---------',\r\n                            'alignment',\r\n                            '---------',\r\n                            'filter_by_condition',\r\n                            '---------',\r\n                            'filter_operators',\r\n                            '---------',\r\n                            'filter_by_condition2',\r\n                            '---------',\r\n                            'filter_by_value',\r\n                            '---------',\r\n                            'filter_action_bar',\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"materials__tables__container\">\r\n                {overallTable}\r\n                {tables}\r\n            </div>\r\n        </body>\r\n    );\r\n};\r\n\r\nexport default PITRequests;"]},"metadata":{},"sourceType":"module"}