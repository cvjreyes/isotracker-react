{"ast":null,"code":"import CanvasJSObject from './canvasjs';\nimport TextBlock from './text_block';\nimport { extend, numberFormat, getLineDashArray } from '../helpers/utils';\n\nfunction Axis(chart, options, type, position) {\n  Axis.base.constructor.call(this, \"Axis\", options, chart.theme);\n  this.chart = chart;\n  this.canvas = chart.canvas;\n  this.ctx = chart.ctx;\n  this.maxWidth = 0;\n  this.maxHeight = 0;\n  this.intervalStartPosition = 0;\n  this.labels = [];\n  this._labels = null; //Processed information about the data that gets plotted against this axis\n\n  this.dataInfo = {\n    min: Infinity,\n    max: -Infinity,\n    viewPortMin: Infinity,\n    viewPortMax: -Infinity,\n    minDiff: Infinity // Used only in case of axisX\n\n  };\n\n  if (type === \"axisX\") {\n    this.sessionVariables = this.chart.sessionVariables[type];\n    if (!this._options.interval) this.intervalType = null;\n  } else {\n    if (position === \"left\" || position === \"top\") this.sessionVariables = this.chart.sessionVariables[\"axisY\"];else {\n      this.sessionVariables = this.chart.sessionVariables[\"axisY2\"];\n    }\n  }\n\n  if (typeof this._options.titleFontSize === \"undefined\") {\n    this.titleFontSize = this.chart.getAutoFontSize(this.titleFontSize); //window.console.log(\"titleFontSize: \" + this.titleFontSize);\n  }\n\n  if (typeof this._options.labelFontSize === \"undefined\") {\n    this.labelFontSize = this.chart.getAutoFontSize(this.labelFontSize); //window.console.log(\"labelFontSize: \" + this.labelFontSize);\n  } //Axis Type : axisX, axisY\n\n\n  this.type = type;\n  if (type === \"axisX\" && (!options || typeof options.gridThickness === \"undefined\")) this.gridThickness = 0;\n  this._position = position;\n  this.lineCoordinates = {\n    x1: null,\n    y1: null,\n    x2: null,\n    y2: null,\n    width: null\n  }; //{x1:, y1:, x2:, y2:, width:}\n  //\n\n  {\n    this.labelAngle = (this.labelAngle % 360 + 360) % 360;\n    if (this.labelAngle > 90 && this.labelAngle <= 270) this.labelAngle -= 180;else if (this.labelAngle > 180 && this.labelAngle <= 270) this.labelAngle -= 180;else if (this.labelAngle > 270 && this.labelAngle <= 360) this.labelAngle -= 360;\n  }\n\n  if (this._options.stripLines && this._options.stripLines.length > 0) {\n    this.stripLines = [];\n\n    for (var i = 0; i < this._options.stripLines.length; i++) {\n      this.stripLines.push(new StripLine(this.chart, this._options.stripLines[i], chart.theme, ++this.chart._eventManager.lastObjectId, this));\n    }\n  }\n\n  this._titleTextBlock = null;\n  if (!this.hasOptionChanged(\"viewportMinimum\") && !isNaN(this.sessionVariables.newViewportMinimum) && this.sessionVariables.newViewportMinimum !== null) this.viewportMinimum = this.sessionVariables.newViewportMinimum;else this.sessionVariables.newViewportMinimum = null;\n  if (!this.hasOptionChanged(\"viewportMaximum\") && !isNaN(this.sessionVariables.newViewportMaximum) && this.sessionVariables.newViewportMaximum !== null) this.viewportMaximum = this.sessionVariables.newViewportMaximum;else this.sessionVariables.newViewportMaximum = null;\n  if (this.minimum !== null && this.viewportMinimum !== null) this.viewportMinimum = Math.max(this.viewportMinimum, this.minimum);\n  if (this.maximum !== null && this.viewportMaximum !== null) this.viewportMaximum = Math.min(this.viewportMaximum, this.maximum);\n  this.trackChanges(\"viewportMinimum\");\n  this.trackChanges(\"viewportMaximum\");\n}\n\nextend(Axis, CanvasJSObject);\n\nAxis.prototype.createLabels = function () {\n  var textBlock;\n  var i = 0;\n  var endPoint;\n  var labelMaxWidth = 0;\n  var labelMaxHeight = 0;\n  var intervalInPixels = 0; //var intervalInPixels = this.conversionParameters.pixelPerUnit * this.interval;\n\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    intervalInPixels = this.lineCoordinates.width / Math.abs(this.viewportMaximum - this.viewportMinimum) * this.interval;\n\n    if (this.labelAutoFit) {\n      labelMaxWidth = typeof this._options.labelMaxWidth === \"undefined\" ? intervalInPixels * .9 >> 0 : this.labelMaxWidth;\n    } else {\n      labelMaxWidth = typeof this._options.labelMaxWidth === \"undefined\" ? this.chart.width * .7 >> 0 : this.labelMaxWidth;\n    }\n\n    labelMaxHeight = typeof this._options.labelWrap === \"undefined\" || this.labelWrap ? this.chart.height * .5 >> 0 : this.labelFontSize * 1.5;\n  } else if (this._position === \"left\" || this._position === \"right\") {\n    intervalInPixels = this.lineCoordinates.height / Math.abs(this.viewportMaximum - this.viewportMinimum) * this.interval;\n\n    if (this.labelAutoFit) {\n      labelMaxWidth = typeof this._options.labelMaxWidth === \"undefined\" ? this.chart.width * .3 >> 0 : this.labelMaxWidth;\n    } else {\n      labelMaxWidth = typeof this._options.labelMaxWidth === \"undefined\" ? this.chart.width * .5 >> 0 : this.labelMaxWidth;\n    }\n\n    labelMaxHeight = typeof this._options.labelWrap === \"undefined\" || this.labelWrap ? intervalInPixels * 2 >> 0 : this.labelFontSize * 1.5;\n  }\n\n  if (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\n    endPoint = addToDateTime(new Date(this.viewportMaximum), this.interval, this.intervalType); //endPoint = this.viewportMaximum;\n\n    for (i = this.intervalStartPosition; i < endPoint; addToDateTime(i, this.interval, this.intervalType)) {\n      //var text = dateFormat(i, this.valueFormatString);\n      var timeInMilliseconds = i.getTime();\n      var text = this.labelFormatter ? this.labelFormatter({\n        chart: this.chart,\n        axis: this._options,\n        value: i,\n        label: this.labels[i] ? this.labels[i] : null\n      }) : this.type === \"axisX\" && this.labels[timeInMilliseconds] ? this.labels[timeInMilliseconds] : dateFormat(i, this.valueFormatString, this.chart._cultureInfo);\n      textBlock = new TextBlock(this.ctx, {\n        x: 0,\n        y: 0,\n        //maxWidth: this.maxHeight,\n        //maxHeight: this.labelFontSize,\n        maxWidth: labelMaxWidth,\n        maxHeight: labelMaxHeight,\n        angle: this.labelAngle,\n        text: this.prefix + text + this.suffix,\n        horizontalAlign: \"left\",\n        //left, center, right\n        fontSize: this.labelFontSize,\n        //in pixels\n        fontFamily: this.labelFontFamily,\n        fontWeight: this.labelFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.labelFontColor,\n        fontStyle: this.labelFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"middle\"\n      });\n\n      this._labels.push({\n        position: i.getTime(),\n        textBlock: textBlock,\n        effectiveHeight: null\n      });\n    }\n  } else {\n    endPoint = this.viewportMaximum; //if ((Math.floor(this.interval) < this.interval && !this._options.interval) || true) {\n    //Check if it should be rendered as a category axis. If yes, then ceil the interval\n\n    if (this.labels && this.labels.length) {\n      var tempInterval = Math.ceil(this.interval);\n      var tempStartPoint = Math.ceil(this.intervalStartPosition);\n      var hasAllLabels = false;\n\n      for (i = tempStartPoint; i < this.viewportMaximum; i += tempInterval) {\n        if (this.labels[i]) {\n          hasAllLabels = true;\n        } else {\n          hasAllLabels = false;\n          break;\n        }\n      }\n\n      if (hasAllLabels) {\n        this.interval = tempInterval;\n        this.intervalStartPosition = tempStartPoint;\n      }\n    } //parseFloat & toPrecision are being used to avoid issues related to precision.\n\n\n    for (i = this.intervalStartPosition; i <= endPoint; i = parseFloat((i + this.interval).toFixed(14))) {\n      var text = this.labelFormatter ? this.labelFormatter({\n        chart: this.chart,\n        axis: this._options,\n        value: i,\n        label: this.labels[i] ? this.labels[i] : null\n      }) : this.type === \"axisX\" && this.labels[i] ? this.labels[i] : numberFormat(i, this.valueFormatString, this.chart._cultureInfo);\n      textBlock = new TextBlock(this.ctx, {\n        x: 0,\n        y: 0,\n        //maxWidth: this.maxHeight,\n        //maxHeight: this.labelFontSize,\n        maxWidth: labelMaxWidth,\n        maxHeight: labelMaxHeight,\n        angle: this.labelAngle,\n        text: this.prefix + text + this.suffix,\n        horizontalAlign: \"left\",\n        //left, center, right\n        fontSize: this.labelFontSize,\n        //in pixels\n        fontFamily: this.labelFontFamily,\n        fontWeight: this.labelFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.labelFontColor,\n        fontStyle: this.labelFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"middle\",\n        borderThickness: 0\n      });\n\n      this._labels.push({\n        position: i,\n        textBlock: textBlock,\n        effectiveHeight: null\n      });\n    }\n  }\n\n  for (var i = 0; i < this.stripLines.length; i++) {\n    var stripLine = this.stripLines[i];\n    textBlock = new TextBlock(this.ctx, {\n      x: 0,\n      y: 0,\n      //maxWidth: this.maxHeight,\n      //maxHeight: this.labelFontSize,\n      backgroundColor: stripLine.labelBackgroundColor,\n      maxWidth: labelMaxWidth,\n      maxHeight: labelMaxHeight,\n      angle: this.labelAngle,\n      text: stripLine.labelFormatter ? stripLine.labelFormatter({\n        chart: this.chart,\n        axis: this,\n        stripLine: stripLine\n      }) : stripLine.label,\n      horizontalAlign: \"left\",\n      //left, center, right\n      fontSize: stripLine.labelFontSize,\n      //in pixels\n      fontFamily: stripLine.labelFontFamily,\n      fontWeight: stripLine.labelFontWeight,\n      //normal, bold, bolder, lighter,\n      fontColor: stripLine._options.labelFontColor || stripLine.color,\n      fontStyle: stripLine.labelFontStyle,\n      // normal, italic, oblique\n      textBaseline: \"middle\",\n      borderThickness: 0\n    });\n\n    this._labels.push({\n      position: stripLine.value,\n      textBlock: textBlock,\n      effectiveHeight: null,\n      stripLine: stripLine\n    });\n  }\n};\n\nAxis.prototype.createLabelsAndCalculateWidth = function () {\n  var maxLabelEffectiveWidth = 0;\n  this._labels = [];\n\n  if (this._position === \"left\" || this._position === \"right\") {\n    this.createLabels();\n\n    for (var i = 0; i < this._labels.length; i++) {\n      var textBlock = this._labels[i].textBlock;\n      var size = textBlock.measureText(); //var hypotenuse = Math.sqrt(Math.pow(size.height / 2, 2) + Math.pow(size.width, 2));\n      //labelEffectiveWidth = hypotenuse * Math.cos(Math.abs(Math.PI / 180 * this.labelAngle) - Math.abs(Math.acos(size.width / hypotenuse)));\n\n      var labelEffectiveWidth = 0;\n      if (this.labelAngle === 0) labelEffectiveWidth = size.width;else labelEffectiveWidth = size.width * Math.cos(Math.PI / 180 * Math.abs(this.labelAngle)) + size.height / 2 * Math.sin(Math.PI / 180 * Math.abs(this.labelAngle));\n      if (maxLabelEffectiveWidth < labelEffectiveWidth) maxLabelEffectiveWidth = labelEffectiveWidth;\n      this._labels[i].effectiveWidth = labelEffectiveWidth;\n    }\n  }\n\n  var titleHeight = this.title ? getFontHeightInPixels(this.titleFontFamily, this.titleFontSize, this.titleFontWeight) + 2 : 0;\n  var axisWidth = titleHeight + maxLabelEffectiveWidth + this.tickLength + 5; //if (isDebugMode && window.console) {\n  //\twindow.console.log(this.type + \"--- axisWidth: \" + axisWidth);\n  //}\n\n  return axisWidth;\n};\n\nAxis.prototype.createLabelsAndCalculateHeight = function () {\n  var maxLabelEffectiveHeight = 0;\n  this._labels = [];\n  var textBlock;\n  var i = 0;\n  this.createLabels();\n\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    for (i = 0; i < this._labels.length; i++) {\n      textBlock = this._labels[i].textBlock;\n      var size = textBlock.measureText(); //var diagonal = Math.sqrt(Math.pow(size.height, 2) + Math.pow(size.width, 2));\n      //var hypotenuse = Math.sqrt(Math.pow(size.height / 2, 2) + Math.pow(size.width, 2));\n      //var labelEffectiveHeight = hypotenuse * Math.cos(Math.PI / 2 - (Math.abs(Math.PI / 180 * this.labelAngle) + Math.abs(Math.acos(size.width / hypotenuse))));\n\n      var labelEffectiveHeight = 0;\n      if (this.labelAngle === 0) labelEffectiveHeight = size.height;else labelEffectiveHeight = size.width * Math.sin(Math.PI / 180 * Math.abs(this.labelAngle)) + size.height / 2 * Math.cos(Math.PI / 180 * Math.abs(this.labelAngle));\n      if (maxLabelEffectiveHeight < labelEffectiveHeight) maxLabelEffectiveHeight = labelEffectiveHeight;\n      this._labels[i].effectiveHeight = labelEffectiveHeight;\n    }\n  } //var titleHeight = this.title ? this.titleFontSize + 5 : 0;\n\n\n  var titleHeight = this.title ? getFontHeightInPixels(this.titleFontFamily, this.titleFontSize, this.titleFontWeight) + 2 : 0;\n  return titleHeight + maxLabelEffectiveHeight + this.tickLength + 5;\n}; //Static Method that co-ordinates between axisX, axisY and renders them\n\n\nAxis.setLayoutAndRender = function (axisX, axisY, axisY2, axisPlacement, freeSpace) {\n  var x1, y1, x2, y2;\n  var chart = axisX.chart;\n  var ctx = chart.ctx;\n  axisX.calculateAxisParameters();\n  if (axisY) axisY.calculateAxisParameters();\n  if (axisY2) axisY2.calculateAxisParameters(); //if (axisY && axisY2 && typeof (axisY._options.viewportMaximum) === \"undefined\" && typeof (axisY._options.viewportMinimum) === \"undefined\" && typeof (axisY._options.interval) === \"undefined\"\n  //\t\t&& typeof (axisY2._options.viewportMaximum) === \"undefined\" && typeof (axisY2._options.viewportMinimum) === \"undefined\" && typeof (axisY2._options.interval) === \"undefined\") {\n  //\tvar noTicksY = (axisY.viewportMaximum - axisY.viewportMinimum) / axisY.interval;\n  //\tvar noTicksY2 = (axisY2.viewportMaximum - axisY2.viewportMinimum) / axisY2.interval;\n  //\tif (noTicksY > noTicksY2) {\n  //\t\taxisY2.viewportMaximum = axisY2.interval * noTicksY + axisY2.viewportMinimum;\n  //\t} else if (noTicksY2 > noTicksY) {\n  //\t\taxisY.viewportMaximum = axisY.interval * noTicksY2 + axisY.viewportMinimum;\n  //\t}\n  //}\n\n  var axisYlineThickness = axisY ? axisY.lineThickness ? axisY.lineThickness : 0 : 0;\n  var axisY2lineThickness = axisY2 ? axisY2.lineThickness ? axisY2.lineThickness : 0 : 0;\n  var axisYGridThickness = axisY ? axisY.gridThickness ? axisY.gridThickness : 0 : 0;\n  var axisY2GridThickness = axisY2 ? axisY2.gridThickness ? axisY2.gridThickness : 0 : 0;\n  var axisYMargin = axisY ? axisY.margin : 0;\n  var axisY2Margin = axisY ? axisY.margin : 0;\n\n  if (axisPlacement === \"normal\") {\n    axisX.lineCoordinates = {};\n    var axisYWidth = Math.ceil(axisY ? axisY.createLabelsAndCalculateWidth() : 0);\n    x1 = Math.round(freeSpace.x1 + axisYWidth + axisYMargin);\n    axisX.lineCoordinates.x1 = x1;\n    var axisY2Width = Math.ceil(axisY2 ? axisY2.createLabelsAndCalculateWidth() : 0);\n    x2 = Math.round(freeSpace.x2 - axisY2Width > axisX.chart.width - 10 ? axisX.chart.width - 10 : freeSpace.x2 - axisY2Width);\n    axisX.lineCoordinates.x2 = x2;\n    axisX.lineCoordinates.width = Math.abs(x2 - x1); // required early on inside createLabels of axisX\n\n    var axisXHeight = Math.ceil(axisX.createLabelsAndCalculateHeight()); // Position axisX based on the available free space, Margin and its height\n    //x1 = freeSpace.x1 + axisYWidth + axisYMargin + axisYlineThickness / 2;\n\n    y1 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\n    y2 = Math.round(freeSpace.y2 - axisX.margin); //axisX.lineCoordinates = { x1: x1, y1: y1, x2: x2, y2: y1, width: Math.abs(x2 - x1) }\n\n    axisX.lineCoordinates.y1 = y1;\n    axisX.lineCoordinates.y2 = y1;\n    axisX.boundingRect = {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      width: x2 - x1,\n      height: y2 - y1\n    }; //if (isDebugMode) {\n    //\taxisX.ctx.rect(axisX.boundingRect.x1, axisX.boundingRect.y1, axisX.boundingRect.width, axisX.boundingRect.height);\n    //\taxisX.ctx.stroke();\n    //}\n    // Position axisY based on the available free space, Margin and its height\n\n    if (axisY) {\n      x1 = Math.round(freeSpace.x1 + axisY.margin);\n      y1 = Math.round(freeSpace.y1 < 10 ? 10 : freeSpace.y1);\n      x2 = Math.round(freeSpace.x1 + axisYWidth + axisY.margin); //y2 = freeSpace.y2 - axisXHeight - axisX.margin - axisX.lineThickness / 2;\n\n      y2 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\n      axisY.lineCoordinates = {\n        x1: x2,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        height: Math.abs(y2 - y1)\n      };\n      axisY.boundingRect = {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        width: x2 - x1,\n        height: y2 - y1\n      };\n    } //if (isDebugMode && axisY) {\n    //\taxisY.ctx.rect(axisY.boundingRect.x1, axisY.boundingRect.y1, axisY.boundingRect.width, axisY.boundingRect.height);\n    //\taxisY.ctx.stroke();\n    //}\n    // Position axisY2 based on the available free space, Margin and its height\n\n\n    if (axisY2) {\n      x1 = Math.round(axisX.lineCoordinates.x2);\n      y1 = Math.round(freeSpace.y1 < 10 ? 10 : freeSpace.y1);\n      x2 = Math.round(x1 + axisY2Width + axisY2.margin); //y2 = freeSpace.y2 - axisXHeight - axisX.margin - axisX.lineThickness / 2;\n\n      y2 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\n      axisY2.lineCoordinates = {\n        x1: x1,\n        y1: y1,\n        x2: x1,\n        y2: y2,\n        height: Math.abs(y2 - y1)\n      };\n      axisY2.boundingRect = {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        width: x2 - x1,\n        height: y2 - y1\n      };\n    }\n\n    axisX.calculateValueToPixelConversionParameters();\n    if (axisY) axisY.calculateValueToPixelConversionParameters();\n    if (axisY2) axisY2.calculateValueToPixelConversionParameters();\n    ctx.save();\n    ctx.rect(5, axisX.boundingRect.y1, axisX.chart.width - 10, axisX.boundingRect.height);\n    ctx.clip();\n    axisX.renderLabelsTicksAndTitle();\n    ctx.restore();\n    if (axisY) axisY.renderLabelsTicksAndTitle();\n    if (axisY2) axisY2.renderLabelsTicksAndTitle();\n    chart.preparePlotArea();\n    var plotArea = axisX.chart.plotArea;\n    ctx.save();\n    ctx.rect(plotArea.x1, plotArea.y1, Math.abs(plotArea.x2 - plotArea.x1), Math.abs(plotArea.y2 - plotArea.y1));\n    ctx.clip();\n    axisX.renderStripLinesOfThicknessType(\"value\");\n    if (axisY) axisY.renderStripLinesOfThicknessType(\"value\");\n    if (axisY2) axisY2.renderStripLinesOfThicknessType(\"value\");\n    axisX.renderInterlacedColors();\n    if (axisY) axisY.renderInterlacedColors();\n    if (axisY2) axisY2.renderInterlacedColors();\n    ctx.restore();\n    axisX.renderGrid();\n    if (axisY) axisY.renderGrid();\n    if (axisY2) axisY2.renderGrid();\n    axisX.renderAxisLine();\n    if (axisY) axisY.renderAxisLine();\n    if (axisY2) axisY2.renderAxisLine(); //No need to clip to plotArea because stripLines need to render on top of gridlines\n\n    axisX.renderStripLinesOfThicknessType(\"pixel\");\n    if (axisY) axisY.renderStripLinesOfThicknessType(\"pixel\");\n    if (axisY2) axisY2.renderStripLinesOfThicknessType(\"pixel\");\n  } else {\n    var axisXWidth = Math.ceil(axisX.createLabelsAndCalculateWidth());\n\n    if (axisY) {\n      axisY.lineCoordinates = {};\n      x1 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\n      x2 = Math.round(freeSpace.x2 > axisY.chart.width - 10 ? axisY.chart.width - 10 : freeSpace.x2);\n      axisY.lineCoordinates.x1 = x1;\n      axisY.lineCoordinates.x2 = x2;\n      axisY.lineCoordinates.width = Math.abs(x2 - x1);\n    }\n\n    if (axisY2) {\n      axisY2.lineCoordinates = {};\n      x1 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\n      x2 = Math.round(freeSpace.x2 > axisY2.chart.width - 10 ? axisY2.chart.width - 10 : freeSpace.x2);\n      axisY2.lineCoordinates.x1 = x1;\n      axisY2.lineCoordinates.x2 = x2;\n      axisY2.lineCoordinates.width = Math.abs(x2 - x1);\n    }\n\n    var axisYHeight = Math.ceil(axisY ? axisY.createLabelsAndCalculateHeight() : 0);\n    var axisY2Height = Math.ceil(axisY2 ? axisY2.createLabelsAndCalculateHeight() : 0); // Position axisY based on the available free space, Margin and its height\n\n    if (axisY) {\n      //x1 = freeSpace.x1 + axisXWidth + axisX.margin + axisX.lineThickness / 2;\n      //x2 = freeSpace.x2 > axisY.chart.width - 10 ? axisY.chart.width - 10 : freeSpace.x2;\n      y1 = Math.round(freeSpace.y2 - axisYHeight - axisY.margin);\n      y2 = Math.round(freeSpace.y2 - axisYMargin > axisY.chart.height - 10 ? axisY.chart.height - 10 : freeSpace.y2 - axisYMargin); //axisY.lineCoordinates = { x1: x1, y1: y1, x2: x2, y2: y1, width: Math.abs(x2 - x1) }\n\n      axisY.lineCoordinates.y1 = y1;\n      axisY.lineCoordinates.y2 = y1;\n      axisY.boundingRect = {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        width: x2 - x1,\n        height: axisYHeight\n      };\n    } // Position axisY based on the available free space, Margin and its height\n\n\n    if (axisY2) {\n      //x1 = freeSpace.x1 + axisXWidth + axisX.margin + axisX.lineThickness / 2;\n      //x2 = freeSpace.x2 > axisY2.chart.width - 10 ? axisY2.chart.width - 10 : freeSpace.x2;\n      y1 = Math.round(freeSpace.y1 + axisY2.margin);\n      y2 = freeSpace.y1 + axisY2.margin + axisY2Height; //axisY2.lineCoordinates = { x1: x1, y1: y2, x2: x2, y2: y2, width: Math.abs(x2 - x1) }\n\n      axisY2.lineCoordinates.y1 = y2;\n      axisY2.lineCoordinates.y2 = y2;\n      axisY2.boundingRect = {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        width: x2 - x1,\n        height: axisY2Height\n      };\n    } //axisY.ctx.rect(axisY.boundingRect.x1, axisY.boundingRect.y1, axisY.boundingRect.width, axisY.boundingRect.height);\n    //axisY.ctx.stroke();\n    // Position axisX based on the available free space, Margin and its height\n\n\n    x1 = Math.round(freeSpace.x1 + axisX.margin);\n    y1 = Math.round(axisY2 ? axisY2.lineCoordinates.y2 : freeSpace.y1 < 10 ? 10 : freeSpace.y1);\n    x2 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\n    y2 = Math.round(axisY ? axisY.lineCoordinates.y1 : freeSpace.y2 - axisYMargin > axisX.chart.height - 10 ? axisX.chart.height - 10 : freeSpace.y2 - axisYMargin);\n    axisX.lineCoordinates = {\n      x1: x2,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      height: Math.abs(y2 - y1)\n    };\n    axisX.boundingRect = {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      width: x2 - x1,\n      height: y2 - y1\n    }; //axisX.ctx.rect(axisX.boundingRect.x1, axisX.boundingRect.y1, axisX.boundingRect.width, axisX.boundingRect.height);\n    //axisX.ctx.stroke();\n\n    axisX.calculateValueToPixelConversionParameters();\n    if (axisY) axisY.calculateValueToPixelConversionParameters();\n    if (axisY2) axisY2.calculateValueToPixelConversionParameters(); //ctx.save();\n    //ctx.rect(axisY.boundingRect.x1 - 30, axisY.boundingRect.y1, axisY.boundingRect.width + 60, axisY.boundingRect.height);\n    //ctx.clip();\n\n    if (axisY) axisY.renderLabelsTicksAndTitle();\n    if (axisY2) axisY2.renderLabelsTicksAndTitle(); //ctx.restore();\n\n    axisX.renderLabelsTicksAndTitle();\n    chart.preparePlotArea();\n    var plotArea = axisX.chart.plotArea;\n    ctx.save();\n    ctx.rect(plotArea.x1, plotArea.y1, Math.abs(plotArea.x2 - plotArea.x1), Math.abs(plotArea.y2 - plotArea.y1));\n    ctx.clip(); //No need to clip to plotArea because stripLines need to render on top of gridlines\n\n    axisX.renderStripLinesOfThicknessType(\"value\");\n    if (axisY) axisY.renderStripLinesOfThicknessType(\"value\");\n    if (axisY2) axisY2.renderStripLinesOfThicknessType(\"value\");\n    axisX.renderInterlacedColors();\n    if (axisY) axisY.renderInterlacedColors();\n    if (axisY2) axisY2.renderInterlacedColors();\n    ctx.restore();\n    axisX.renderGrid();\n    if (axisY) axisY.renderGrid();\n    if (axisY2) axisY2.renderGrid();\n    axisX.renderAxisLine();\n    if (axisY) axisY.renderAxisLine();\n    if (axisY2) axisY2.renderAxisLine();\n    axisX.renderStripLinesOfThicknessType(\"pixel\");\n    if (axisY) axisY.renderStripLinesOfThicknessType(\"pixel\");\n    if (axisY2) axisY2.renderStripLinesOfThicknessType(\"pixel\");\n  }\n};\n\nAxis.prototype.renderLabelsTicksAndTitle = function () {\n  var skipLabels = false;\n  var totalLabelWidth = 0;\n  var thresholdRatio = 1;\n  var labelCount = 0;\n  var intervalInPixels = this.conversionParameters.pixelPerUnit * this.interval;\n  if (this.labelAngle !== 0 && this.labelAngle !== 360) thresholdRatio = 1.2; //Don't skip labels when interval is explicitely set\n\n  if (typeof this._options.interval === \"undefined\") {\n    if (this._position === \"bottom\" || this._position === \"top\") {\n      //thresholdRatio = .9;// More space is preferred between labels when axis is horizontally aligned\n      for (i = 0; i < this._labels.length; i++) {\n        label = this._labels[i];\n        if (label.position < this.viewportMinimum || label.stripLine) // don't consider stripLine's lable\n          continue;\n        var width = label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle) + label.textBlock.height * Math.sin(Math.PI / 180 * this.labelAngle);\n        totalLabelWidth += width;\n      }\n\n      if (totalLabelWidth > this.lineCoordinates.width * thresholdRatio) {\n        skipLabels = true;\n      }\n    }\n\n    if (this._position === \"left\" || this._position === \"right\") {\n      for (i = 0; i < this._labels.length; i++) {\n        label = this._labels[i];\n        if (label.position < this.viewportMinimum || label.stripLine) // don't consider stripLine's lable\n          continue;\n        var width = label.textBlock.height * Math.cos(Math.PI / 180 * this.labelAngle) + label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle);\n        totalLabelWidth += width;\n      }\n\n      if (totalLabelWidth > this.lineCoordinates.height * thresholdRatio) {\n        skipLabels = true;\n      }\n    }\n  }\n\n  if (this._position === \"bottom\") {\n    var i = 0;\n    var label;\n    var xy;\n\n    for (i = 0; i < this._labels.length; i++) {\n      label = this._labels[i];\n      if (label.position < this.viewportMinimum || label.position > this.viewportMaximum) continue;\n      xy = this.getPixelCoordinatesOnAxis(label.position);\n\n      if (this.tickThickness && !this._labels[i].stripLine || this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\") {\n        if (this._labels[i].stripLine) {\n          stripLine = this._labels[i].stripLine;\n          this.ctx.lineWidth = stripLine.thickness;\n          this.ctx.strokeStyle = stripLine.color;\n        } else {\n          this.ctx.lineWidth = this.tickThickness;\n          this.ctx.strokeStyle = this.tickColor;\n        }\n\n        var tickX = this.ctx.lineWidth % 2 === 1 ? (xy.x << 0) + .5 : xy.x << 0;\n        this.ctx.beginPath();\n        this.ctx.moveTo(tickX, xy.y << 0);\n        this.ctx.lineTo(tickX, xy.y + this.tickLength << 0);\n        this.ctx.stroke();\n      } //Don't skip stripLine's labels\n\n\n      if (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine) continue;\n\n      if (label.textBlock.angle === 0) {\n        xy.x -= label.textBlock.width / 2; //xy.y += this.tickLength + label.textBlock.height / 2;\n\n        xy.y += this.tickLength + label.textBlock.fontSize / 2;\n      } else {\n        xy.x -= this.labelAngle < 0 ? label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle) : 0;\n        xy.y += this.tickLength + Math.abs(this.labelAngle < 0 ? label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle) - 5 : 5);\n      }\n\n      label.textBlock.x = xy.x;\n      label.textBlock.y = xy.y;\n      label.textBlock.render(true);\n    }\n\n    if (this.title) {\n      this._titleTextBlock = new TextBlock(this.ctx, {\n        x: this.lineCoordinates.x1,\n        // This is recalculated again\n        y: this.boundingRect.y2 - this.titleFontSize - 5,\n        // This is recalculated again\n        maxWidth: this.lineCoordinates.width,\n        maxHeight: this.titleFontSize * 1.5,\n        angle: 0,\n        text: this.title,\n        horizontalAlign: \"center\",\n        //left, center, right\n        fontSize: this.titleFontSize,\n        //in pixels\n        fontFamily: this.titleFontFamily,\n        fontWeight: this.titleFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.titleFontColor,\n        fontStyle: this.titleFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"top\"\n      });\n\n      this._titleTextBlock.measureText();\n\n      this._titleTextBlock.x = this.lineCoordinates.x1 + this.lineCoordinates.width / 2 - this._titleTextBlock.width / 2;\n      this._titleTextBlock.y = this.boundingRect.y2 - this._titleTextBlock.height - 3;\n\n      this._titleTextBlock.render(true);\n    }\n  } else if (this._position === \"top\") {\n    var i = 0;\n    var label;\n    var xy;\n    var stripLine;\n\n    for (i = 0; i < this._labels.length; i++) {\n      label = this._labels[i];\n      if (label.position < this.viewportMinimum || label.position > this.viewportMaximum) continue;\n      xy = this.getPixelCoordinatesOnAxis(label.position);\n\n      if (this.tickThickness && !this._labels[i].stripLine || this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\") {\n        if (this._labels[i].stripLine) {\n          stripLine = this._labels[i].stripLine;\n          this.ctx.lineWidth = stripLine.thickness;\n          this.ctx.strokeStyle = stripLine.color;\n        } else {\n          this.ctx.lineWidth = this.tickThickness;\n          this.ctx.strokeStyle = this.tickColor;\n        }\n\n        var tickX = this.ctx.lineWidth % 2 === 1 ? (xy.x << 0) + .5 : xy.x << 0;\n        this.ctx.beginPath();\n        this.ctx.moveTo(tickX, xy.y << 0);\n        this.ctx.lineTo(tickX, xy.y - this.tickLength << 0);\n        this.ctx.stroke();\n      } //Don't skip stripLine's labels\n\n\n      if (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine) continue;\n\n      if (label.textBlock.angle === 0) {\n        xy.x -= label.textBlock.width / 2;\n        xy.y -= this.tickLength + label.textBlock.height / 2;\n      } else {\n        xy.x -= this.labelAngle > 0 ? label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle) : 0;\n        xy.y -= this.tickLength + Math.abs(this.labelAngle > 0 ? label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle) + 5 : 5);\n      }\n\n      label.textBlock.x = xy.x;\n      label.textBlock.y = xy.y;\n      label.textBlock.render(true);\n    }\n\n    if (this.title) {\n      this._titleTextBlock = new TextBlock(this.ctx, {\n        x: this.lineCoordinates.x1,\n        // This is recalculated again\n        y: this.boundingRect.y1 + 1,\n        maxWidth: this.lineCoordinates.width,\n        maxHeight: this.titleFontSize * 1.5,\n        angle: 0,\n        text: this.title,\n        horizontalAlign: \"center\",\n        //left, center, right\n        fontSize: this.titleFontSize,\n        //in pixels\n        fontFamily: this.titleFontFamily,\n        fontWeight: this.titleFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.titleFontColor,\n        fontStyle: this.titleFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"top\"\n      });\n\n      this._titleTextBlock.measureText();\n\n      this._titleTextBlock.x = this.lineCoordinates.x1 + this.lineCoordinates.width / 2 - this._titleTextBlock.width / 2;\n\n      this._titleTextBlock.render(true);\n    }\n  } else if (this._position === \"left\") {\n    var label;\n    var xy;\n\n    for (var i = 0; i < this._labels.length; i++) {\n      label = this._labels[i];\n      if (label.position < this.viewportMinimum || label.position > this.viewportMaximum) continue;\n      xy = this.getPixelCoordinatesOnAxis(label.position);\n\n      if (this.tickThickness && !this._labels[i].stripLine || this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\") {\n        if (this._labels[i].stripLine) {\n          stripLine = this._labels[i].stripLine;\n          this.ctx.lineWidth = stripLine.thickness;\n          this.ctx.strokeStyle = stripLine.color;\n        } else {\n          this.ctx.lineWidth = this.tickThickness;\n          this.ctx.strokeStyle = this.tickColor;\n        }\n\n        var tickY = this.ctx.lineWidth % 2 === 1 ? (xy.y << 0) + .5 : xy.y << 0;\n        this.ctx.beginPath();\n        this.ctx.moveTo(xy.x << 0, tickY);\n        this.ctx.lineTo(xy.x - this.tickLength << 0, tickY);\n        this.ctx.stroke();\n      } //Don't skip stripLine's labels\n\n\n      if (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine) continue;\n      label.textBlock.x = xy.x - label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle) - this.tickLength - 5;\n\n      if (this.labelAngle === 0) {\n        label.textBlock.y = xy.y;\n      } else label.textBlock.y = xy.y - label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle);\n\n      label.textBlock.render(true);\n    }\n\n    if (this.title) {\n      this._titleTextBlock = new TextBlock(this.ctx, {\n        x: this.boundingRect.x1 + 1,\n        y: this.lineCoordinates.y2,\n        maxWidth: this.lineCoordinates.height,\n        maxHeight: this.titleFontSize * 1.5,\n        angle: -90,\n        text: this.title,\n        horizontalAlign: \"center\",\n        //left, center, right\n        fontSize: this.titleFontSize,\n        //in pixels\n        fontFamily: this.titleFontFamily,\n        fontWeight: this.titleFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.titleFontColor,\n        fontStyle: this.titleFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"top\"\n      });\n\n      var size = this._titleTextBlock.measureText(); //this._titleTextBlock.x -= 4;\n\n\n      this._titleTextBlock.y = this.lineCoordinates.height / 2 + this._titleTextBlock.width / 2 + this.lineCoordinates.y1;\n\n      this._titleTextBlock.render(true); //if (isDebugMode) {\n      //\twindow.console.log(\"titleFontSize: \" + this.titleFontSize + \"; width: \" + size.width + \"; height: \" + size.height);\n      //\twindow.console.log(\"this.boundingRect.x1: \" + this.boundingRect.x1);\n      //\t//this.ctx.rect(this._titleTextBlock.x, this._titleTextBlock.y, this._titleTextBlock.height, -this._titleTextBlock.width);\n      //\t//this.ctx.stroke();\n      //}\n\n    }\n  } else if (this._position === \"right\") {\n    var label;\n    var xy;\n\n    for (var i = 0; i < this._labels.length; i++) {\n      label = this._labels[i];\n      if (label.position < this.viewportMinimum || label.position > this.viewportMaximum) continue;\n      xy = this.getPixelCoordinatesOnAxis(label.position);\n\n      if (this.tickThickness && !this._labels[i].stripLine || this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\") {\n        if (this._labels[i].stripLine) {\n          stripLine = this._labels[i].stripLine;\n          this.ctx.lineWidth = stripLine.thickness;\n          this.ctx.strokeStyle = stripLine.color;\n        } else {\n          this.ctx.lineWidth = this.tickThickness;\n          this.ctx.strokeStyle = this.tickColor;\n        }\n\n        var tickY = this.ctx.lineWidth % 2 === 1 ? (xy.y << 0) + .5 : xy.y << 0;\n        this.ctx.beginPath();\n        this.ctx.moveTo(xy.x << 0, tickY);\n        this.ctx.lineTo(xy.x + this.tickLength << 0, tickY);\n        this.ctx.stroke();\n      } //Don't skip stripLine's labels\n\n\n      if (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine) continue;\n      label.textBlock.x = xy.x + this.tickLength + 5; //label.textBlock.y = xy.y - (label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle));\n\n      if (this.labelAngle === 0) {\n        label.textBlock.y = xy.y;\n      } else label.textBlock.y = xy.y;\n\n      label.textBlock.render(true);\n    }\n\n    if (this.title) {\n      this._titleTextBlock = new TextBlock(this.ctx, {\n        x: this.boundingRect.x2 - 1,\n        y: this.lineCoordinates.y2,\n        maxWidth: this.lineCoordinates.height,\n        maxHeight: this.titleFontSize * 1.5,\n        angle: 90,\n        text: this.title,\n        horizontalAlign: \"center\",\n        //left, center, right\n        fontSize: this.titleFontSize,\n        //in pixels\n        fontFamily: this.titleFontFamily,\n        fontWeight: this.titleFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.titleFontColor,\n        fontStyle: this.titleFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"top\"\n      });\n\n      this._titleTextBlock.measureText();\n\n      this._titleTextBlock.y = this.lineCoordinates.height / 2 - this._titleTextBlock.width / 2 + this.lineCoordinates.y1;\n\n      this._titleTextBlock.render(true);\n    }\n  }\n};\n\nAxis.prototype.renderInterlacedColors = function () {\n  var ctx = this.chart.plotArea.ctx; //return;\n\n  var interlacedGridStartPoint;\n  var interlacedGridEndPoint;\n  var plotAreaCoordinates = this.chart.plotArea;\n  var i = 0,\n      renderInterlacedGrid = true;\n\n  if ((this._position === \"bottom\" || this._position === \"top\") && this.interlacedColor) {\n    ctx.fillStyle = this.interlacedColor;\n\n    for (i = 0; i < this._labels.length; i++) {\n      if (this._labels[i].stripLine) continue;\n\n      if (renderInterlacedGrid) {\n        //So that the interlaced color alternates\n        interlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this._labels[i].position);\n        if (i + 1 >= this._labels.length - 1) interlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this.viewportMaximum);else interlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this._labels[i + 1].position);\n        ctx.fillRect(interlacedGridStartPoint.x, plotAreaCoordinates.y1, Math.abs(interlacedGridEndPoint.x - interlacedGridStartPoint.x), Math.abs(plotAreaCoordinates.y1 - plotAreaCoordinates.y2));\n        renderInterlacedGrid = false;\n      } else renderInterlacedGrid = true;\n    }\n  } else if ((this._position === \"left\" || this._position === \"right\") && this.interlacedColor) {\n    ctx.fillStyle = this.interlacedColor;\n\n    for (i = 0; i < this._labels.length; i++) {\n      if (this._labels[i].stripLine) continue;\n\n      if (renderInterlacedGrid) {\n        //So that the interlaced color alternates\n        interlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this._labels[i].position);\n        if (i + 1 >= this._labels.length - 1) interlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this.viewportMaximum);else interlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this._labels[i + 1].position);\n        ctx.fillRect(plotAreaCoordinates.x1, interlacedGridStartPoint.y, Math.abs(plotAreaCoordinates.x1 - plotAreaCoordinates.x2), Math.abs(interlacedGridStartPoint.y - interlacedGridEndPoint.y));\n        renderInterlacedGrid = false;\n      } else renderInterlacedGrid = true;\n    } //throw \"123\";\n\n  }\n\n  ctx.beginPath();\n}; //Renders stripLines of given thickness type.\n\n\nAxis.prototype.renderStripLinesOfThicknessType = function (thicknessType) {\n  if (!(this.stripLines && this.stripLines.length > 0) || !thicknessType) return;\n\n  var _this = this;\n\n  var i = 0;\n\n  for (i = 0; i < this.stripLines.length; i++) {\n    var stripLine = this.stripLines[i];\n    if (stripLine._thicknessType !== thicknessType) continue; //Should be skipped only if thicknessType is \"pixel\". If it is \"value\" then clipping is automatically applied before calling.\n\n    if (thicknessType === \"pixel\" && (stripLine.value < this.viewportMinimum || stripLine.value > this.viewportMaximum)) continue;\n\n    if (stripLine.showOnTop) {\n      this.chart.addEventListener(\"dataAnimationIterationEnd\", stripLine.render, stripLine);\n    } else stripLine.render();\n  }\n};\n\nAxis.prototype.renderGrid = function () {\n  if (!(this.gridThickness && this.gridThickness > 0)) return; //var ctx = this.chart.plotArea.ctx;\n\n  var ctx = this.chart.ctx;\n  var xy;\n  var plotAreaCoordinates = this.chart.plotArea;\n  var stripLine;\n  var tempLineWidth, tempStrokeStyle; //return;\n\n  ctx.lineWidth = this.gridThickness;\n  ctx.strokeStyle = this.gridColor;\n\n  if (ctx.setLineDash) {\n    ctx.setLineDash(getLineDashArray(this.gridDashType, this.gridThickness));\n  }\n\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    for (i = 0; i < this._labels.length && !this._labels[i].stripLine; i++) {\n      if (this._labels[i].position < this.viewportMinimum || this._labels[i].position > this.viewportMaximum) continue;\n      ctx.beginPath();\n      xy = this.getPixelCoordinatesOnAxis(this._labels[i].position);\n      var gridX = ctx.lineWidth % 2 === 1 ? (xy.x << 0) + .5 : xy.x << 0;\n      ctx.moveTo(gridX, plotAreaCoordinates.y1 << 0);\n      ctx.lineTo(gridX, plotAreaCoordinates.y2 << 0);\n      ctx.stroke();\n    }\n  } else if (this._position === \"left\" || this._position === \"right\") {\n    for (var i = 0; i < this._labels.length && !this._labels[i].stripLine; i++) {\n      if (i === 0 && this.type === \"axisY\" && this.chart.axisX && this.chart.axisX.lineThickness) continue;\n      if (this._labels[i].position < this.viewportMinimum || this._labels[i].position > this.viewportMaximum) continue;\n      ctx.beginPath();\n      xy = this.getPixelCoordinatesOnAxis(this._labels[i].position);\n      var gridY = ctx.lineWidth % 2 === 1 ? (xy.y << 0) + .5 : xy.y << 0;\n      ctx.moveTo(plotAreaCoordinates.x1 << 0, gridY);\n      ctx.lineTo(plotAreaCoordinates.x2 << 0, gridY);\n      ctx.stroke();\n    }\n  }\n};\n\nAxis.prototype.renderAxisLine = function () {\n  //var ctx = this.chart.plotArea.ctx;\n  var ctx = this.chart.ctx;\n\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    if (this.lineThickness) {\n      ctx.lineWidth = this.lineThickness;\n      ctx.strokeStyle = this.lineColor ? this.lineColor : \"black\";\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(getLineDashArray(this.lineDashType, this.lineThickness));\n      }\n\n      var lineY = this.lineThickness % 2 === 1 ? (this.lineCoordinates.y1 << 0) + .5 : this.lineCoordinates.y1 << 0;\n      ctx.beginPath();\n      ctx.moveTo(this.lineCoordinates.x1, lineY);\n      ctx.lineTo(this.lineCoordinates.x2, lineY);\n      ctx.stroke();\n    }\n  } else if (this._position === \"left\" || this._position === \"right\") {\n    if (this.lineThickness) {\n      ctx.lineWidth = this.lineThickness;\n      ctx.strokeStyle = this.lineColor;\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(getLineDashArray(this.lineDashType, this.lineThickness));\n      }\n\n      var lineX = this.lineThickness % 2 === 1 ? (this.lineCoordinates.x1 << 0) + .5 : this.lineCoordinates.x1 << 0;\n      ctx.beginPath();\n      ctx.moveTo(lineX, this.lineCoordinates.y1);\n      ctx.lineTo(lineX, this.lineCoordinates.y2);\n      ctx.stroke();\n    }\n  }\n};\n\nAxis.prototype.getPixelCoordinatesOnAxis = function (value) {\n  var xy = {};\n  var width = this.lineCoordinates.width;\n  var height = this.lineCoordinates.height;\n\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    //var pixelPerUnit = width / Math.abs(this.viewportMaximum - this.viewportMinimum);\n    var pixelPerUnit = this.conversionParameters.pixelPerUnit; //xy.x = this.lineCoordinates.x1 + (pixelPerUnit * (value - this.viewportMinimum));\n\n    xy.x = this.conversionParameters.reference + pixelPerUnit * (value - this.viewportMinimum);\n    xy.y = this.lineCoordinates.y1;\n  }\n\n  if (this._position === \"left\" || this._position === \"right\") {\n    //var pixelPerUnit = height / Math.abs(this.viewportMaximum - this.viewportMinimum);\n    var pixelPerUnit = -this.conversionParameters.pixelPerUnit; //xy.y = this.lineCoordinates.y2 - (pixelPerUnit * (value - this.viewportMinimum));\n\n    xy.y = this.conversionParameters.reference - pixelPerUnit * (value - this.viewportMinimum);\n    xy.x = this.lineCoordinates.x2;\n  }\n\n  return xy;\n};\n\nAxis.prototype.convertPixelToValue = function (pixel) {\n  if (!pixel) return null;\n  var value = 0;\n  var p = this._position === \"left\" || this._position === \"right\" ? pixel.y : pixel.x;\n  value = this.conversionParameters.minimum + (p - this.conversionParameters.reference) / this.conversionParameters.pixelPerUnit;\n  return value;\n};\n\nAxis.prototype.setViewPortRange = function (viewportMinimum, viewportMaximum) {\n  this.sessionVariables.newViewportMinimum = this.viewportMinimum = Math.min(viewportMinimum, viewportMaximum);\n  this.sessionVariables.newViewportMaximum = this.viewportMaximum = Math.max(viewportMinimum, viewportMaximum);\n};\n\nAxis.prototype.getXValueAt = function (pixel) {\n  if (!pixel) return null;\n  var xval = null;\n\n  if (this._position === \"left\") {\n    xval = (this.chart.axisX.viewportMaximum - this.chart.axisX.viewportMinimum) / this.chart.axisX.lineCoordinates.height * (this.chart.axisX.lineCoordinates.y2 - pixel.y) + this.chart.axisX.viewportMinimum;\n  } else if (this._position === \"bottom\") {\n    xval = (this.chart.axisX.viewportMaximum - this.chart.axisX.viewportMinimum) / this.chart.axisX.lineCoordinates.width * (pixel.x - this.chart.axisX.lineCoordinates.x1) + this.chart.axisX.viewportMinimum;\n  }\n\n  return xval;\n};\n\nAxis.prototype.calculateValueToPixelConversionParameters = function (value) {\n  this.reversed = false;\n  var conversionParameters = {\n    pixelPerUnit: null,\n    minimum: null,\n    reference: null\n  };\n  var width = this.lineCoordinates.width;\n  var height = this.lineCoordinates.height;\n  conversionParameters.minimum = this.viewportMinimum;\n\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    conversionParameters.pixelPerUnit = (this.reversed ? -1 : 1) * width / Math.abs(this.viewportMaximum - this.viewportMinimum);\n    conversionParameters.reference = this.reversed ? this.lineCoordinates.x2 : this.lineCoordinates.x1;\n  }\n\n  if (this._position === \"left\" || this._position === \"right\") {\n    conversionParameters.pixelPerUnit = (this.reversed ? 1 : -1) * height / Math.abs(this.viewportMaximum - this.viewportMinimum);\n    conversionParameters.reference = this.reversed ? this.lineCoordinates.y1 : this.lineCoordinates.y2;\n  }\n\n  this.conversionParameters = conversionParameters;\n};\n\nAxis.prototype.calculateAxisParameters = function () {\n  var freeSpace = this.chart.layoutManager.getFreeSpace();\n  var availableWidth = 0;\n  var availableHeight = 0;\n  var isLessThanTwoDataPoints = false;\n\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    this.maxWidth = freeSpace.width;\n    this.maxHeight = freeSpace.height;\n  } else {\n    this.maxWidth = freeSpace.height;\n    this.maxHeight = freeSpace.width;\n  }\n\n  var noTicks = this.type === \"axisX\" ? this.maxWidth < 500 ? 8 : Math.max(6, Math.floor(this.maxWidth / 62)) : Math.max(Math.floor(this.maxWidth / 40), 2);\n  var min, max;\n  var minDiff;\n  var range;\n  var rangePadding = 0;\n  if (this.viewportMinimum === null || isNaN(this.viewportMinimum)) this.viewportMinimum = this.minimum;\n  if (this.viewportMaximum === null || isNaN(this.viewportMaximum)) this.viewportMaximum = this.maximum;\n\n  if (this.type === \"axisX\") {\n    min = this.viewportMinimum !== null ? this.viewportMinimum : this.dataInfo.viewPortMin;\n    max = this.viewportMaximum !== null ? this.viewportMaximum : this.dataInfo.viewPortMax;\n\n    if (max - min === 0) {\n      rangePadding = typeof this._options.interval === \"undefined\" ? .4 : this._options.interval;\n      max += rangePadding;\n      min -= rangePadding;\n    }\n\n    if (this.dataInfo.minDiff !== Infinity) minDiff = this.dataInfo.minDiff;else if (max - min > 1) {\n      minDiff = Math.abs(max - min) * .5;\n    } else {\n      minDiff = 1;\n      if (this.chart.plotInfo.axisXValueType === \"dateTime\") isLessThanTwoDataPoints = true;\n    }\n  } else if (this.type === \"axisY\") {\n    //min = typeof (this._options.viewportMinimum) === \"undefined\" || this._options.viewportMinimum === null ? this.dataInfo.viewPortMin : this._options.viewportMinimum;\n    //max = typeof (this._options.viewportMaximum) === \"undefined\" || this._options.viewportMaximum === null ? this.dataInfo.viewPortMax : this._options.viewportMaximum;\n    min = this.viewportMinimum !== null ? this.viewportMinimum : this.dataInfo.viewPortMin;\n    max = this.viewportMaximum !== null ? this.viewportMaximum : this.dataInfo.viewPortMax;\n\n    if (!isFinite(min) && !isFinite(max)) {\n      max = typeof this._options.interval === \"undefined\" ? -Infinity : this._options.interval;\n      min = 0;\n    } else if (!isFinite(min)) {\n      min = max;\n    } else if (!isFinite(max)) {\n      max = min;\n    }\n\n    if (min === 0 && max === 0) {\n      // When all dataPoints are zero\n      max += 9;\n      min = 0;\n    } else if (max - min === 0) {\n      // When there is only a single dataPoint or when all dataPoints have same Y Value\n      rangePadding = Math.min(Math.abs(Math.abs(max) * .01), 5);\n      max += rangePadding;\n      min -= rangePadding;\n    } else if (min > max) {\n      rangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), 5);\n      if (max >= 0) min = max - rangePadding;else max = min + rangePadding;\n    } else {\n      rangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), .05);\n      if (max !== 0) max += rangePadding;\n      if (min !== 0) min -= rangePadding;\n    }\n\n    if (this.dataInfo.minDiff !== Infinity) minDiff = this.dataInfo.minDiff;else if (max - min > 1) {\n      minDiff = Math.abs(max - min) * .5;\n    } else {\n      minDiff = 1;\n    } //Apply includeZero\n\n    if (this.includeZero && (this.viewportMinimum === null || isNaN(this.viewportMinimum))) {\n      if (min > 0) min = 0;\n    }\n\n    if (this.includeZero && (this.viewportMaximum === null || isNaN(this.viewportMaximum))) {\n      if (max < 0) max = 0;\n    }\n  }\n\n  range = (isNaN(this.viewportMaximum) || this.viewportMaximum === null ? max : this.viewportMaximum) - (isNaN(this.viewportMinimum) || this.viewportMinimum === null ? min : this.viewportMinimum);\n\n  if (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\n    if (!this.intervalType) {\n      if (range / (1 * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 5) <= noTicks) {\n        this.interval = 5;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 10) <= noTicks) {\n        this.interval = 10;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 20) <= noTicks) {\n        this.interval = 20;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 50) <= noTicks) {\n        this.interval = 50;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 100) <= noTicks) {\n        this.interval = 100;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 200) <= noTicks) {\n        this.interval = 200;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 250) <= noTicks) {\n        this.interval = 250;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 300) <= noTicks) {\n        this.interval = 300;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 400) <= noTicks) {\n        this.interval = 400;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 500) <= noTicks) {\n        this.interval = 500;\n        this.intervalType = \"millisecond\";\n      } else if (range / (constants.secondDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 5) <= noTicks) {\n        this.interval = 5;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 10) <= noTicks) {\n        this.interval = 10;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 15) <= noTicks) {\n        this.interval = 15;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 20) <= noTicks) {\n        this.interval = 20;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 30) <= noTicks) {\n        this.interval = 30;\n        this.intervalType = \"second\";\n      } else if (range / (constants.minuteDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 5) <= noTicks) {\n        this.interval = 5;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 10) <= noTicks) {\n        this.interval = 10;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 15) <= noTicks) {\n        this.interval = 15;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 20) <= noTicks) {\n        this.interval = 20;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 30) <= noTicks) {\n        this.interval = 30;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.hourDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"hour\";\n      } else if (range / (constants.hourDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"hour\";\n      } else if (range / (constants.hourDuration * 3) <= noTicks) {\n        this.interval = 3;\n        this.intervalType = \"hour\";\n      } else if (range / (constants.hourDuration * 6) <= noTicks) {\n        this.interval = 6;\n        this.intervalType = \"hour\";\n      } else if (range / (constants.dayDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"day\";\n      } else if (range / (constants.dayDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"day\";\n      } else if (range / (constants.dayDuration * 4) <= noTicks) {\n        this.interval = 4;\n        this.intervalType = \"day\";\n      } else if (range / (constants.weekDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"week\";\n      } else if (range / (constants.weekDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"week\";\n      } else if (range / (constants.weekDuration * 3) <= noTicks) {\n        this.interval = 3;\n        this.intervalType = \"week\";\n      } else if (range / (constants.monthDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"month\";\n      } else if (range / (constants.monthDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"month\";\n      } else if (range / (constants.monthDuration * 3) <= noTicks) {\n        this.interval = 3;\n        this.intervalType = \"month\";\n      } else if (range / (constants.monthDuration * 6) <= noTicks) {\n        this.interval = 6;\n        this.intervalType = \"month\";\n      } else if (range / (constants.yearDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"year\";\n      } else if (range / (constants.yearDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"year\";\n      } else if (range / (constants.yearDuration * 4) <= noTicks) {\n        this.interval = 4;\n        this.intervalType = \"year\";\n      } else {\n        this.interval = Math.floor(Axis.getNiceNumber(range / (noTicks - 1), true) / constants.yearDuration);\n        this.intervalType = \"year\";\n      }\n    }\n\n    if (this.viewportMinimum === null || isNaN(this.viewportMinimum)) this.viewportMinimum = min - minDiff / 2;\n    if (this.viewportMaximum === null || isNaN(this.viewportMaximum)) this.viewportMaximum = max + minDiff / 2;\n\n    if (!this.valueFormatString) {\n      if (isLessThanTwoDataPoints) {\n        this.valueFormatString = \"MMM DD YYYY HH:mm\";\n      } else if (this.intervalType === \"year\") {\n        this.valueFormatString = \"YYYY\";\n      } else if (this.intervalType === \"month\") {\n        this.valueFormatString = \"MMM YYYY\";\n      } else if (this.intervalType === \"week\") {\n        this.valueFormatString = \"MMM DD YYYY\";\n      } else if (this.intervalType === \"day\") {\n        this.valueFormatString = \"MMM DD YYYY\";\n      } else if (this.intervalType === \"hour\") {\n        this.valueFormatString = \"hh:mm TT\";\n      } else if (this.intervalType === \"minute\") {\n        this.valueFormatString = \"hh:mm TT\";\n      } else if (this.intervalType === \"second\") {\n        this.valueFormatString = \"hh:mm:ss TT\";\n      } else if (this.intervalType === \"millisecond\") {\n        this.valueFormatString = \"fff'ms'\";\n      }\n    }\n  } else {\n    this.intervalType = \"number\";\n    range = Axis.getNiceNumber(range, false);\n    if (this._options && this._options.interval) this.interval = this._options.interval;else {\n      this.interval = Axis.getNiceNumber(range / (noTicks - 1), true);\n    }\n\n    if (this.viewportMinimum === null || isNaN(this.viewportMinimum)) {\n      if (this.type === \"axisX\") this.viewportMinimum = min - minDiff / 2;else this.viewportMinimum = Math.floor(min / this.interval) * this.interval;\n    }\n\n    if (this.viewportMaximum === null || isNaN(this.viewportMaximum)) {\n      if (this.type === \"axisX\") this.viewportMaximum = max + minDiff / 2;else this.viewportMaximum = Math.ceil(max / this.interval) * this.interval;\n    }\n\n    if (this.viewportMaximum === 0 && this.viewportMinimum === 0) {\n      if (this._options.viewportMinimum === 0) {\n        this.viewportMaximum += 10;\n      } else if (this._options.viewportMaximum === 0) {\n        this.viewportMinimum -= 10;\n      }\n\n      if (this._options && typeof this._options.interval === \"undefined\") {\n        this.interval = Axis.getNiceNumber((this.viewportMaximum - this.viewportMinimum) / (noTicks - 1), true);\n      }\n    }\n  } //Calculate minimum and maximum if not provided by the user\n\n\n  if (this.minimum === null || this.maximum === null) {\n    if (this.type === \"axisX\") {\n      min = this.minimum !== null ? this.minimum : this.dataInfo.min;\n      max = this.maximum !== null ? this.maximum : this.dataInfo.max;\n\n      if (max - min === 0) {\n        rangePadding = typeof this._options.interval === \"undefined\" ? .4 : this._options.interval;\n        max += rangePadding;\n        min -= rangePadding;\n      }\n\n      if (this.dataInfo.minDiff !== Infinity) minDiff = this.dataInfo.minDiff;else if (max - min > 1) {\n        minDiff = Math.abs(max - min) * .5;\n      } else {\n        minDiff = 1;\n      }\n    } else if (this.type === \"axisY\") {\n      min = this.minimum !== null ? this.minimum : this.dataInfo.min;\n      max = this.maximum !== null ? this.maximum : this.dataInfo.max;\n\n      if (!isFinite(min) && !isFinite(max)) {\n        max = typeof this._options.interval === \"undefined\" ? -Infinity : this._options.interval;\n        min = 0;\n      } else if (min === 0 && max === 0) {\n        // When all dataPoints are zero\n        max += 9;\n        min = 0;\n      } else if (max - min === 0) {\n        // When there is only a single dataPoint or when all dataPoints have same Y Value\n        rangePadding = Math.min(Math.abs(Math.abs(max) * .01), 5);\n        max += rangePadding;\n        min -= rangePadding;\n      } else if (min > max) {\n        rangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), 5);\n        if (max >= 0) min = max - rangePadding;else max = min + rangePadding;\n      } else {\n        rangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), .05);\n        if (max !== 0) max += rangePadding;\n        if (min !== 0) min -= rangePadding;\n      }\n\n      if (this.dataInfo.minDiff !== Infinity) minDiff = this.dataInfo.minDiff;else if (max - min > 1) {\n        minDiff = Math.abs(max - min) * .5;\n      } else {\n        minDiff = 1;\n      } //Apply includeZero\n\n      if (this.includeZero && (this.minimum === null || isNaN(this.minimum))) {\n        if (min > 0) min = 0;\n      }\n\n      if (this.includeZero && (this.maximum === null || isNaN(this.maximum))) {\n        if (max < 0) max = 0;\n      }\n    }\n\n    range = max - min;\n\n    if (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\n      if (this.minimum === null || isNaN(this.minimum)) this.minimum = min - minDiff / 2;\n      if (this.maximum === null || isNaN(this.maximum)) this.maximum = max + minDiff / 2;\n    } else {\n      this.intervalType = \"number\";\n\n      if (this.minimum === null) {\n        if (this.type === \"axisX\") this.minimum = min - minDiff / 2;else this.minimum = Math.floor(min / this.interval) * this.interval;\n        this.minimum = Math.min(this.minimum, this.sessionVariables.viewportMinimum === null || isNaN(this.sessionVariables.viewportMinimum) ? Infinity : this.sessionVariables.viewportMinimum);\n      }\n\n      if (this.maximum === null) {\n        if (this.type === \"axisX\") this.maximum = max + minDiff / 2;else this.maximum = Math.ceil(max / this.interval) * this.interval;\n        this.maximum = Math.max(this.maximum, this.sessionVariables.viewportMaximum === null || isNaN(this.sessionVariables.viewportMaximum) ? -Infinity : this.sessionVariables.viewportMaximum);\n      } //var nfrac = Math.max(-Math.floor(Math.log(d)/Math.LN10), 0); //number of fractional digits to show\n\n\n      if (this.maximum === 0 && this.minimum === 0) {\n        if (this._options.minimum === 0) {\n          this.maximum += 10;\n        } else if (this._options.maximum === 0) {\n          this.minimum -= 10;\n        }\n      }\n    }\n  }\n\n  this.viewportMinimum = Math.max(this.viewportMinimum, this.minimum);\n  this.viewportMaximum = Math.min(this.viewportMaximum, this.maximum);\n  if (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") this.intervalStartPosition = this.getLabelStartPoint(new Date(this.viewportMinimum), this.intervalType, this.interval);else this.intervalStartPosition = Math.floor((this.viewportMinimum + this.interval * .2) / this.interval) * this.interval; //Set valueFormatString\n\n  if (!this.valueFormatString) {\n    this.valueFormatString = \"#,##0.##\";\n    range = Math.abs(this.viewportMaximum - this.viewportMinimum);\n\n    if (range < 1) {\n      var numberOfDecimals = Math.floor(Math.abs(Math.log(range) / Math.LN10)) + 2;\n      if (isNaN(numberOfDecimals) || !isFinite(numberOfDecimals)) numberOfDecimals = 2;\n\n      if (numberOfDecimals > 2) {\n        for (var i = 0; i < numberOfDecimals - 2; i++) this.valueFormatString += \"#\";\n      }\n    }\n  } //if (isDebugMode && window.console) {\n  //    window.console.log(this.type + \": Min = \" + this.viewportMinimum);\n  //    window.console.log(this.type + \": Max = \" + this.viewportMaximum);\n  //    window.console.log(this.type + \": Interval = \" + this.interval);\n  //}\n\n};\n\nAxis.getNiceNumber = function (x, round) {\n  var exp = Math.floor(Math.log(x) / Math.LN10);\n  var f = x / Math.pow(10, exp);\n  var nf;\n\n  if (round) {\n    if (f < 1.5) nf = 1;else if (f < 3) nf = 2;else if (f < 7) nf = 5;else nf = 10;\n  } else {\n    if (f <= 1) nf = 1;else if (f <= 2) nf = 2;else if (f <= 5) nf = 5;else nf = 10;\n  }\n\n  return Number((nf * Math.pow(10, exp)).toFixed(20));\n};\n\nAxis.prototype.getLabelStartPoint = function () {\n  var intervalInMilliseconds = convertToNumber(this.interval, this.intervalType);\n  var minimum = Math.floor(this.viewportMinimum / intervalInMilliseconds) * intervalInMilliseconds;\n  var dateTime = new Date(minimum);\n\n  if (this.intervalType === \"millisecond\") {//millisecond = dateTime.getMilliSecond();\n    //millisecond = Math.floor((millisecond + this.interval) / this.interval) * this.interval;\n  } else if (this.intervalType === \"second\") {\n    if (dateTime.getMilliseconds() > 0) {\n      dateTime.setSeconds(dateTime.getSeconds() + 1);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"minute\") {\n    if (dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setMinutes(dateTime.getMinutes() + 1);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"hour\") {\n    if (dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setHours(dateTime.getHours() + 1);\n      dateTime.setMinutes(0);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"day\") {\n    if (dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setDate(dateTime.getDate() + 1);\n      dateTime.setHours(0);\n      dateTime.setMinutes(0);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"week\") {\n    if (dateTime.getDay() > 0 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setDate(dateTime.getDate() + (7 - dateTime.getDay()));\n      dateTime.setHours(0);\n      dateTime.setMinutes(0);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"month\") {\n    if (dateTime.getDate() > 1 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setMonth(dateTime.getMonth() + 1);\n      dateTime.setDate(1);\n      dateTime.setHours(0);\n      dateTime.setMinutes(0);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"year\") {\n    if (dateTime.getMonth() > 0 || dateTime.getDate() > 1 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setFullYear(dateTime.getFullYear() + 1);\n      dateTime.setMonth(0);\n      dateTime.setDate(1);\n      dateTime.setHours(0);\n      dateTime.setMinutes(0);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  }\n\n  return dateTime;\n};\n\nexport default Axis;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/canvasjs/src/core/axis.js"],"names":["CanvasJSObject","TextBlock","extend","numberFormat","getLineDashArray","Axis","chart","options","type","position","base","constructor","call","theme","canvas","ctx","maxWidth","maxHeight","intervalStartPosition","labels","_labels","dataInfo","min","Infinity","max","viewPortMin","viewPortMax","minDiff","sessionVariables","_options","interval","intervalType","titleFontSize","getAutoFontSize","labelFontSize","gridThickness","_position","lineCoordinates","x1","y1","x2","y2","width","labelAngle","stripLines","length","i","push","StripLine","_eventManager","lastObjectId","_titleTextBlock","hasOptionChanged","isNaN","newViewportMinimum","viewportMinimum","newViewportMaximum","viewportMaximum","minimum","Math","maximum","trackChanges","prototype","createLabels","textBlock","endPoint","labelMaxWidth","labelMaxHeight","intervalInPixels","abs","labelAutoFit","labelWrap","height","plotInfo","axisXValueType","addToDateTime","Date","timeInMilliseconds","getTime","text","labelFormatter","axis","value","label","dateFormat","valueFormatString","_cultureInfo","x","y","angle","prefix","suffix","horizontalAlign","fontSize","fontFamily","labelFontFamily","fontWeight","labelFontWeight","fontColor","labelFontColor","fontStyle","labelFontStyle","textBaseline","effectiveHeight","tempInterval","ceil","tempStartPoint","hasAllLabels","parseFloat","toFixed","borderThickness","stripLine","backgroundColor","labelBackgroundColor","color","createLabelsAndCalculateWidth","maxLabelEffectiveWidth","size","measureText","labelEffectiveWidth","cos","PI","sin","effectiveWidth","titleHeight","title","getFontHeightInPixels","titleFontFamily","titleFontWeight","axisWidth","tickLength","createLabelsAndCalculateHeight","maxLabelEffectiveHeight","labelEffectiveHeight","setLayoutAndRender","axisX","axisY","axisY2","axisPlacement","freeSpace","calculateAxisParameters","axisYlineThickness","lineThickness","axisY2lineThickness","axisYGridThickness","axisY2GridThickness","axisYMargin","margin","axisY2Margin","axisYWidth","round","axisY2Width","axisXHeight","boundingRect","calculateValueToPixelConversionParameters","save","rect","clip","renderLabelsTicksAndTitle","restore","preparePlotArea","plotArea","renderStripLinesOfThicknessType","renderInterlacedColors","renderGrid","renderAxisLine","axisXWidth","axisYHeight","axisY2Height","skipLabels","totalLabelWidth","thresholdRatio","labelCount","conversionParameters","pixelPerUnit","xy","getPixelCoordinatesOnAxis","tickThickness","_thicknessType","lineWidth","thickness","strokeStyle","tickColor","tickX","beginPath","moveTo","lineTo","stroke","render","titleFontColor","titleFontStyle","tickY","interlacedGridStartPoint","interlacedGridEndPoint","plotAreaCoordinates","renderInterlacedGrid","interlacedColor","fillStyle","fillRect","thicknessType","_this","showOnTop","addEventListener","tempLineWidth","tempStrokeStyle","gridColor","setLineDash","gridDashType","gridX","gridY","lineColor","lineDashType","lineY","lineX","reference","convertPixelToValue","pixel","p","setViewPortRange","getXValueAt","xval","reversed","layoutManager","getFreeSpace","availableWidth","availableHeight","isLessThanTwoDataPoints","noTicks","floor","range","rangePadding","isFinite","includeZero","constants","secondDuration","minuteDuration","hourDuration","dayDuration","weekDuration","monthDuration","yearDuration","getNiceNumber","getLabelStartPoint","numberOfDecimals","log","LN10","exp","f","pow","nf","Number","intervalInMilliseconds","convertToNumber","dateTime","getMilliseconds","setSeconds","getSeconds","setMilliseconds","setMinutes","getMinutes","setHours","getHours","setDate","getDate","getDay","setMonth","getMonth","setFullYear","getFullYear"],"mappings":"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","sourcesContent":["\r\nimport CanvasJSObject from './canvasjs';\r\nimport TextBlock from './text_block';\r\nimport {extend, numberFormat, getLineDashArray} from '../helpers/utils';\r\n\r\nfunction Axis(chart, options, type, position) {\r\n\r\n\tAxis.base.constructor.call(this, \"Axis\", options, chart.theme);\r\n\r\n\tthis.chart = chart;\r\n\tthis.canvas = chart.canvas;\r\n\tthis.ctx = chart.ctx;\r\n\tthis.maxWidth = 0;\r\n\tthis.maxHeight = 0;\r\n\tthis.intervalStartPosition = 0;\r\n\tthis.labels = [];\r\n\tthis._labels = null;\r\n\r\n\t//Processed information about the data that gets plotted against this axis\r\n\tthis.dataInfo = {\r\n\t\tmin: Infinity,\r\n\t\tmax: -Infinity,\r\n\t\tviewPortMin: Infinity,\r\n\t\tviewPortMax: -Infinity,\r\n\t\tminDiff: Infinity // Used only in case of axisX\r\n\t};\r\n\r\n\tif (type === \"axisX\") {\r\n\t\tthis.sessionVariables = this.chart.sessionVariables[type];\r\n\r\n\t\tif (!this._options.interval)\r\n\t\t\tthis.intervalType = null;\r\n\t} else {\r\n\t\tif (position === \"left\" || position === \"top\")\r\n\t\t\tthis.sessionVariables = this.chart.sessionVariables[\"axisY\"];\r\n\t\telse {\r\n\t\t\tthis.sessionVariables = this.chart.sessionVariables[\"axisY2\"];\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tif (typeof (this._options.titleFontSize) === \"undefined\") {\r\n\r\n\t\tthis.titleFontSize = this.chart.getAutoFontSize(this.titleFontSize);\r\n\r\n\t\t//window.console.log(\"titleFontSize: \" + this.titleFontSize);\r\n\t}\r\n\r\n\tif (typeof (this._options.labelFontSize) === \"undefined\") {\r\n\r\n\t\tthis.labelFontSize = this.chart.getAutoFontSize(this.labelFontSize);\r\n\r\n\t\t//window.console.log(\"labelFontSize: \" + this.labelFontSize);\r\n\r\n\t}\r\n\r\n\t//Axis Type : axisX, axisY\r\n\tthis.type = type;\r\n\tif (type === \"axisX\" && (!options || typeof (options.gridThickness) === \"undefined\"))\r\n\t\tthis.gridThickness = 0;\r\n\r\n\tthis._position = position;\r\n\r\n\tthis.lineCoordinates = {\r\n\t\tx1: null, y1: null, x2: null, y2: null, width: null\r\n\t};//{x1:, y1:, x2:, y2:, width:}\r\n\t//\r\n\t{\r\n\t\tthis.labelAngle = ((this.labelAngle % 360) + 360) % 360;\r\n\r\n\t\tif (this.labelAngle > 90 && this.labelAngle <= 270)\r\n\t\t\tthis.labelAngle -= 180;\r\n\t\telse if (this.labelAngle > 180 && this.labelAngle <= 270)\r\n\t\t\tthis.labelAngle -= 180\r\n\t\telse if (this.labelAngle > 270 && this.labelAngle <= 360)\r\n\t\t\tthis.labelAngle -= 360\r\n\t}\r\n\r\n\tif (this._options.stripLines && this._options.stripLines.length > 0) {\r\n\r\n\t\tthis.stripLines = [];\r\n\r\n\t\tfor (var i = 0; i < this._options.stripLines.length; i++) {\r\n\t\t\tthis.stripLines.push(new StripLine(this.chart, this._options.stripLines[i], chart.theme, ++this.chart._eventManager.lastObjectId, this));\r\n\t\t}\r\n\t}\r\n\r\n\tthis._titleTextBlock = null;\r\n\r\n\tif (!this.hasOptionChanged(\"viewportMinimum\") && !isNaN(this.sessionVariables.newViewportMinimum) && this.sessionVariables.newViewportMinimum !== null)\r\n\t\tthis.viewportMinimum = this.sessionVariables.newViewportMinimum;\r\n\telse\r\n\t\tthis.sessionVariables.newViewportMinimum = null;\r\n\r\n\tif (!this.hasOptionChanged(\"viewportMaximum\") && !isNaN(this.sessionVariables.newViewportMaximum) && this.sessionVariables.newViewportMaximum !== null)\r\n\t\tthis.viewportMaximum = this.sessionVariables.newViewportMaximum;\r\n\telse\r\n\t\tthis.sessionVariables.newViewportMaximum = null;\r\n\r\n\tif (this.minimum !== null && this.viewportMinimum !== null)\r\n\t\tthis.viewportMinimum = Math.max(this.viewportMinimum, this.minimum);\r\n\r\n\tif (this.maximum !== null && this.viewportMaximum !== null)\r\n\t\tthis.viewportMaximum = Math.min(this.viewportMaximum, this.maximum);\r\n\r\n\tthis.trackChanges(\"viewportMinimum\");\r\n\tthis.trackChanges(\"viewportMaximum\");\r\n}\r\n\r\nextend(Axis, CanvasJSObject);\r\n\r\nAxis.prototype.createLabels = function () {\r\n\r\n\tvar textBlock;\r\n\tvar i = 0;\r\n\tvar endPoint;\r\n\r\n\tvar labelMaxWidth = 0;\r\n\tvar labelMaxHeight = 0;\r\n\tvar intervalInPixels = 0;\r\n\r\n\t//var intervalInPixels = this.conversionParameters.pixelPerUnit * this.interval;\r\n\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\t\tintervalInPixels = this.lineCoordinates.width / Math.abs(this.viewportMaximum - this.viewportMinimum) * this.interval;\r\n\r\n\t\tif (this.labelAutoFit) {\r\n\t\t\tlabelMaxWidth = typeof (this._options.labelMaxWidth) === \"undefined\" ? intervalInPixels * .9 >> 0 : this.labelMaxWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabelMaxWidth = typeof (this._options.labelMaxWidth) === \"undefined\" ? this.chart.width * .7 >> 0 : this.labelMaxWidth;\r\n\t\t}\r\n\r\n\t\tlabelMaxHeight = typeof (this._options.labelWrap) === \"undefined\" || this.labelWrap ? this.chart.height * .5 >> 0 : this.labelFontSize * 1.5;\r\n\t}\r\n\telse if (this._position === \"left\" || this._position === \"right\") {\r\n\r\n\t\tintervalInPixels = this.lineCoordinates.height / Math.abs(this.viewportMaximum - this.viewportMinimum) * this.interval;\r\n\r\n\r\n\t\tif (this.labelAutoFit) {\r\n\t\t\tlabelMaxWidth = typeof (this._options.labelMaxWidth) === \"undefined\" ? this.chart.width * .3 >> 0 : this.labelMaxWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabelMaxWidth = typeof (this._options.labelMaxWidth) === \"undefined\" ? this.chart.width * .5 >> 0 : this.labelMaxWidth;\r\n\t\t}\r\n\r\n\t\tlabelMaxHeight = typeof (this._options.labelWrap) === \"undefined\" || this.labelWrap ? intervalInPixels * 2 >> 0 : this.labelFontSize * 1.5;\r\n\t}\r\n\r\n\tif (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\r\n\t\tendPoint = addToDateTime(new Date(this.viewportMaximum), this.interval, this.intervalType)\r\n\t\t//endPoint = this.viewportMaximum;\r\n\r\n\t\tfor (i = this.intervalStartPosition; i < endPoint; addToDateTime(i, this.interval, this.intervalType)) {\r\n\r\n\t\t\t//var text = dateFormat(i, this.valueFormatString);\r\n\t\t\tvar timeInMilliseconds = i.getTime();\r\n\t\t\tvar text = this.labelFormatter ? this.labelFormatter({ chart: this.chart, axis: this._options, value: i, label: this.labels[i] ? this.labels[i] : null })\r\n\t\t\t\t: this.type === \"axisX\" && this.labels[timeInMilliseconds] ? this.labels[timeInMilliseconds] : dateFormat(i, this.valueFormatString, this.chart._cultureInfo);\r\n\r\n\t\t\ttextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\t//maxWidth: this.maxHeight,\r\n\t\t\t\t//maxHeight: this.labelFontSize,\r\n\t\t\t\tmaxWidth: labelMaxWidth,\r\n\t\t\t\tmaxHeight: labelMaxHeight,\r\n\t\t\t\tangle: this.labelAngle,\r\n\t\t\t\ttext: this.prefix + text + this.suffix,\r\n\t\t\t\thorizontalAlign: \"left\",//left, center, right\r\n\t\t\t\tfontSize: this.labelFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.labelFontFamily,\r\n\t\t\t\tfontWeight: this.labelFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.labelFontColor,\r\n\t\t\t\tfontStyle: this.labelFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"middle\"\r\n\t\t\t});\r\n\r\n\t\t\tthis._labels.push({ position: i.getTime(), textBlock: textBlock, effectiveHeight: null });\r\n\t\t}\r\n\r\n\t}\r\n\telse {\r\n\t\tendPoint = this.viewportMaximum;\r\n\r\n\t\t//if ((Math.floor(this.interval) < this.interval && !this._options.interval) || true) {\r\n\r\n\t\t//Check if it should be rendered as a category axis. If yes, then ceil the interval\r\n\t\tif (this.labels && this.labels.length) {\r\n\t\t\tvar tempInterval = Math.ceil(this.interval);\r\n\t\t\tvar tempStartPoint = Math.ceil(this.intervalStartPosition);\r\n\t\t\tvar hasAllLabels = false;\r\n\t\t\tfor (i = tempStartPoint; i < this.viewportMaximum; i += tempInterval) {\r\n\t\t\t\tif (this.labels[i]) {\r\n\t\t\t\t\thasAllLabels = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\thasAllLabels = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasAllLabels) {\r\n\t\t\t\tthis.interval = tempInterval;\r\n\t\t\t\tthis.intervalStartPosition = tempStartPoint;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//parseFloat & toPrecision are being used to avoid issues related to precision.\r\n\t\tfor (i = this.intervalStartPosition; i <= endPoint; i = parseFloat((i + this.interval).toFixed(14))) {\r\n\r\n\t\t\tvar text = this.labelFormatter ? this.labelFormatter({ chart: this.chart, axis: this._options, value: i, label: this.labels[i] ? this.labels[i] : null })\r\n\t\t\t\t: this.type === \"axisX\" && this.labels[i] ? this.labels[i] : numberFormat(i, this.valueFormatString, this.chart._cultureInfo);\r\n\r\n\t\t\ttextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\t//maxWidth: this.maxHeight,\r\n\t\t\t\t//maxHeight: this.labelFontSize,\r\n\t\t\t\tmaxWidth: labelMaxWidth,\r\n\t\t\t\tmaxHeight: labelMaxHeight,\r\n\t\t\t\tangle: this.labelAngle,\r\n\t\t\t\ttext: this.prefix + text + this.suffix,\r\n\t\t\t\thorizontalAlign: \"left\",//left, center, right\r\n\t\t\t\tfontSize: this.labelFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.labelFontFamily,\r\n\t\t\t\tfontWeight: this.labelFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.labelFontColor,\r\n\t\t\t\tfontStyle: this.labelFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"middle\",\r\n\t\t\t\tborderThickness: 0\r\n\t\t\t});\r\n\r\n\t\t\tthis._labels.push({ position: i, textBlock: textBlock, effectiveHeight: null });\r\n\t\t}\r\n\t}\r\n\r\n\tfor (var i = 0; i < this.stripLines.length; i++) {\r\n\r\n\t\tvar stripLine = this.stripLines[i];\r\n\r\n\t\ttextBlock = new TextBlock(this.ctx, {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\t//maxWidth: this.maxHeight,\r\n\t\t\t//maxHeight: this.labelFontSize,\r\n\t\t\tbackgroundColor: stripLine.labelBackgroundColor,\r\n\t\t\tmaxWidth: labelMaxWidth,\r\n\t\t\tmaxHeight: labelMaxHeight,\r\n\t\t\tangle: this.labelAngle,\r\n\t\t\ttext: stripLine.labelFormatter ? stripLine.labelFormatter({ chart: this.chart, axis: this, stripLine: stripLine }) : stripLine.label,\r\n\t\t\thorizontalAlign: \"left\",//left, center, right\r\n\t\t\tfontSize: stripLine.labelFontSize,//in pixels\r\n\t\t\tfontFamily: stripLine.labelFontFamily,\r\n\t\t\tfontWeight: stripLine.labelFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\tfontColor: stripLine._options.labelFontColor || stripLine.color,\r\n\t\t\tfontStyle: stripLine.labelFontStyle, // normal, italic, oblique\r\n\t\t\ttextBaseline: \"middle\",\r\n\t\t\tborderThickness: 0\r\n\t\t});\r\n\r\n\t\tthis._labels.push({ position: stripLine.value, textBlock: textBlock, effectiveHeight: null, stripLine: stripLine });\r\n\t}\r\n\r\n}\r\n\r\nAxis.prototype.createLabelsAndCalculateWidth = function () {\r\n\r\n\tvar maxLabelEffectiveWidth = 0;\r\n\tthis._labels = [];\r\n\r\n\tif (this._position === \"left\" || this._position === \"right\") {\r\n\r\n\t\tthis.createLabels();\r\n\r\n\t\tfor (var i = 0; i < this._labels.length; i++) {\r\n\r\n\t\t\tvar textBlock = this._labels[i].textBlock;\r\n\r\n\t\t\tvar size = textBlock.measureText();\r\n\r\n\t\t\t//var hypotenuse = Math.sqrt(Math.pow(size.height / 2, 2) + Math.pow(size.width, 2));\r\n\t\t\t//labelEffectiveWidth = hypotenuse * Math.cos(Math.abs(Math.PI / 180 * this.labelAngle) - Math.abs(Math.acos(size.width / hypotenuse)));\r\n\r\n\t\t\tvar labelEffectiveWidth = 0;\r\n\r\n\t\t\tif (this.labelAngle === 0)\r\n\t\t\t\tlabelEffectiveWidth = size.width;\r\n\t\t\telse\r\n\t\t\t\tlabelEffectiveWidth = (size.width * Math.cos(Math.PI / 180 * Math.abs(this.labelAngle))) + (size.height / 2 * Math.sin(Math.PI / 180 * Math.abs(this.labelAngle)));\r\n\r\n\r\n\t\t\tif (maxLabelEffectiveWidth < labelEffectiveWidth)\r\n\t\t\t\tmaxLabelEffectiveWidth = labelEffectiveWidth;\r\n\r\n\t\t\tthis._labels[i].effectiveWidth = labelEffectiveWidth;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tvar titleHeight = this.title ? getFontHeightInPixels(this.titleFontFamily, this.titleFontSize, this.titleFontWeight) + 2 : 0;\r\n\r\n\tvar axisWidth = titleHeight + maxLabelEffectiveWidth + this.tickLength + 5;\r\n\r\n\t//if (isDebugMode && window.console) {\r\n\t//\twindow.console.log(this.type + \"--- axisWidth: \" + axisWidth);\r\n\t//}\r\n\r\n\treturn axisWidth;\r\n}\r\n\r\nAxis.prototype.createLabelsAndCalculateHeight = function () {\r\n\tvar maxLabelEffectiveHeight = 0;\r\n\tthis._labels = [];\r\n\tvar textBlock;\r\n\tvar i = 0;\r\n\r\n\tthis.createLabels();\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\r\n\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\r\n\t\t\ttextBlock = this._labels[i].textBlock;\r\n\r\n\t\t\tvar size = textBlock.measureText();\r\n\t\t\t//var diagonal = Math.sqrt(Math.pow(size.height, 2) + Math.pow(size.width, 2));\r\n\r\n\t\t\t//var hypotenuse = Math.sqrt(Math.pow(size.height / 2, 2) + Math.pow(size.width, 2));\r\n\t\t\t//var labelEffectiveHeight = hypotenuse * Math.cos(Math.PI / 2 - (Math.abs(Math.PI / 180 * this.labelAngle) + Math.abs(Math.acos(size.width / hypotenuse))));\r\n\r\n\t\t\tvar labelEffectiveHeight = 0;\r\n\r\n\t\t\tif (this.labelAngle === 0)\r\n\t\t\t\tlabelEffectiveHeight = size.height;\r\n\t\t\telse\r\n\t\t\t\tlabelEffectiveHeight = (size.width * Math.sin(Math.PI / 180 * Math.abs(this.labelAngle))) + (size.height / 2 * Math.cos(Math.PI / 180 * Math.abs(this.labelAngle)));\r\n\r\n\t\t\tif (maxLabelEffectiveHeight < labelEffectiveHeight)\r\n\t\t\t\tmaxLabelEffectiveHeight = labelEffectiveHeight;\r\n\r\n\t\t\tthis._labels[i].effectiveHeight = labelEffectiveHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//var titleHeight = this.title ? this.titleFontSize + 5 : 0;\r\n\tvar titleHeight = this.title ? getFontHeightInPixels(this.titleFontFamily, this.titleFontSize, this.titleFontWeight) + 2 : 0;\r\n\r\n\treturn titleHeight + maxLabelEffectiveHeight + this.tickLength + 5;\r\n}\r\n\r\n//Static Method that co-ordinates between axisX, axisY and renders them\r\nAxis.setLayoutAndRender = function (axisX, axisY, axisY2, axisPlacement, freeSpace) {\r\n\tvar x1, y1, x2, y2;\r\n\tvar chart = axisX.chart;\r\n\tvar ctx = chart.ctx;\r\n\r\n\taxisX.calculateAxisParameters();\r\n\r\n\tif (axisY)\r\n\t\taxisY.calculateAxisParameters();\r\n\r\n\tif (axisY2)\r\n\t\taxisY2.calculateAxisParameters();\r\n\r\n\t//if (axisY && axisY2 && typeof (axisY._options.viewportMaximum) === \"undefined\" && typeof (axisY._options.viewportMinimum) === \"undefined\" && typeof (axisY._options.interval) === \"undefined\"\r\n\t//\t\t&& typeof (axisY2._options.viewportMaximum) === \"undefined\" && typeof (axisY2._options.viewportMinimum) === \"undefined\" && typeof (axisY2._options.interval) === \"undefined\") {\r\n\r\n\t//\tvar noTicksY = (axisY.viewportMaximum - axisY.viewportMinimum) / axisY.interval;\r\n\r\n\t//\tvar noTicksY2 = (axisY2.viewportMaximum - axisY2.viewportMinimum) / axisY2.interval;\r\n\r\n\t//\tif (noTicksY > noTicksY2) {\r\n\t//\t\taxisY2.viewportMaximum = axisY2.interval * noTicksY + axisY2.viewportMinimum;\r\n\t//\t} else if (noTicksY2 > noTicksY) {\r\n\t//\t\taxisY.viewportMaximum = axisY.interval * noTicksY2 + axisY.viewportMinimum;\r\n\t//\t}\r\n\t//}\r\n\r\n\tvar axisYlineThickness = axisY ? axisY.lineThickness ? axisY.lineThickness : 0 : 0;\r\n\tvar axisY2lineThickness = axisY2 ? axisY2.lineThickness ? axisY2.lineThickness : 0 : 0;\r\n\r\n\tvar axisYGridThickness = axisY ? axisY.gridThickness ? axisY.gridThickness : 0 : 0;\r\n\tvar axisY2GridThickness = axisY2 ? axisY2.gridThickness ? axisY2.gridThickness : 0 : 0;\r\n\r\n\tvar axisYMargin = axisY ? axisY.margin : 0;\r\n\tvar axisY2Margin = axisY ? axisY.margin : 0;\r\n\r\n\tif (axisPlacement === \"normal\") {\r\n\r\n\t\taxisX.lineCoordinates = {\r\n\t\t};\r\n\r\n\t\tvar axisYWidth = Math.ceil(axisY ? axisY.createLabelsAndCalculateWidth() : 0);\r\n\t\tx1 = Math.round(freeSpace.x1 + axisYWidth + axisYMargin);\r\n\t\taxisX.lineCoordinates.x1 = x1;\r\n\r\n\t\tvar axisY2Width = Math.ceil(axisY2 ? axisY2.createLabelsAndCalculateWidth() : 0);\r\n\t\tx2 = Math.round(freeSpace.x2 - axisY2Width > axisX.chart.width - 10 ? axisX.chart.width - 10 : freeSpace.x2 - axisY2Width);\r\n\t\taxisX.lineCoordinates.x2 = x2;\r\n\r\n\t\taxisX.lineCoordinates.width = Math.abs(x2 - x1); // required early on inside createLabels of axisX\r\n\r\n\t\tvar axisXHeight = Math.ceil(axisX.createLabelsAndCalculateHeight());\r\n\r\n\t\t// Position axisX based on the available free space, Margin and its height\r\n\t\t//x1 = freeSpace.x1 + axisYWidth + axisYMargin + axisYlineThickness / 2;\r\n\t\ty1 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\r\n\t\ty2 = Math.round(freeSpace.y2 - axisX.margin);\r\n\r\n\t\t//axisX.lineCoordinates = { x1: x1, y1: y1, x2: x2, y2: y1, width: Math.abs(x2 - x1) }\r\n\t\taxisX.lineCoordinates.y1 = y1;\r\n\t\taxisX.lineCoordinates.y2 = y1;\r\n\r\n\t\taxisX.boundingRect = {\r\n\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: y2 - y1\r\n\t\t};\r\n\r\n\t\t//if (isDebugMode) {\r\n\t\t//\taxisX.ctx.rect(axisX.boundingRect.x1, axisX.boundingRect.y1, axisX.boundingRect.width, axisX.boundingRect.height);\r\n\t\t//\taxisX.ctx.stroke();\r\n\t\t//}\r\n\r\n\t\t// Position axisY based on the available free space, Margin and its height\r\n\t\tif (axisY) {\r\n\t\t\tx1 = Math.round(freeSpace.x1 + axisY.margin);\r\n\t\t\ty1 = Math.round(freeSpace.y1 < 10 ? 10 : freeSpace.y1);\r\n\t\t\tx2 = Math.round(freeSpace.x1 + axisYWidth + axisY.margin);\r\n\t\t\t//y2 = freeSpace.y2 - axisXHeight - axisX.margin - axisX.lineThickness / 2;\r\n\t\t\ty2 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\r\n\r\n\t\t\taxisY.lineCoordinates = {\r\n\t\t\t\tx1: x2, y1: y1, x2: x2, y2: y2, height: Math.abs(y2 - y1)\r\n\t\t\t}\r\n\r\n\t\t\taxisY.boundingRect = {\r\n\t\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: y2 - y1\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t//if (isDebugMode && axisY) {\r\n\t\t//\taxisY.ctx.rect(axisY.boundingRect.x1, axisY.boundingRect.y1, axisY.boundingRect.width, axisY.boundingRect.height);\r\n\t\t//\taxisY.ctx.stroke();\r\n\t\t//}\r\n\r\n\t\t// Position axisY2 based on the available free space, Margin and its height\r\n\t\tif (axisY2) {\r\n\t\t\tx1 = Math.round(axisX.lineCoordinates.x2);\r\n\t\t\ty1 = Math.round(freeSpace.y1 < 10 ? 10 : freeSpace.y1);\r\n\t\t\tx2 = Math.round(x1 + axisY2Width + axisY2.margin);\r\n\t\t\t//y2 = freeSpace.y2 - axisXHeight - axisX.margin - axisX.lineThickness / 2;\r\n\t\t\ty2 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\r\n\r\n\t\t\taxisY2.lineCoordinates = {\r\n\t\t\t\tx1: x1, y1: y1, x2: x1, y2: y2, height: Math.abs(y2 - y1)\r\n\t\t\t}\r\n\r\n\t\t\taxisY2.boundingRect = {\r\n\t\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: y2 - y1\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\taxisX.calculateValueToPixelConversionParameters();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.calculateValueToPixelConversionParameters();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.calculateValueToPixelConversionParameters();\r\n\r\n\r\n\t\tctx.save();\r\n\t\tctx.rect(5, axisX.boundingRect.y1, axisX.chart.width - 10, axisX.boundingRect.height);\r\n\t\tctx.clip();\r\n\r\n\t\taxisX.renderLabelsTicksAndTitle();\r\n\t\tctx.restore();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderLabelsTicksAndTitle();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderLabelsTicksAndTitle();\r\n\r\n\r\n\t\tchart.preparePlotArea();\r\n\t\tvar plotArea = axisX.chart.plotArea;\r\n\r\n\t\tctx.save();\r\n\r\n\t\tctx.rect(plotArea.x1, plotArea.y1, Math.abs(plotArea.x2 - plotArea.x1), Math.abs(plotArea.y2 - plotArea.y1));\r\n\r\n\t\tctx.clip();\r\n\r\n\t\taxisX.renderStripLinesOfThicknessType(\"value\");\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderStripLinesOfThicknessType(\"value\");\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderStripLinesOfThicknessType(\"value\");\r\n\r\n\r\n\t\taxisX.renderInterlacedColors();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderInterlacedColors();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderInterlacedColors();\r\n\r\n\t\tctx.restore();\r\n\r\n\r\n\t\taxisX.renderGrid();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderGrid();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderGrid();\r\n\r\n\r\n\t\taxisX.renderAxisLine();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderAxisLine();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderAxisLine();\r\n\r\n\r\n\t\t//No need to clip to plotArea because stripLines need to render on top of gridlines\r\n\t\taxisX.renderStripLinesOfThicknessType(\"pixel\");\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderStripLinesOfThicknessType(\"pixel\");\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderStripLinesOfThicknessType(\"pixel\");\r\n\t}\r\n\telse {\r\n\t\tvar axisXWidth = Math.ceil(axisX.createLabelsAndCalculateWidth());\r\n\r\n\t\tif (axisY) {\r\n\t\t\taxisY.lineCoordinates = {\r\n\t\t\t};\r\n\r\n\t\t\tx1 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\r\n\t\t\tx2 = Math.round(freeSpace.x2 > axisY.chart.width - 10 ? axisY.chart.width - 10 : freeSpace.x2);\r\n\r\n\t\t\taxisY.lineCoordinates.x1 = x1;\r\n\t\t\taxisY.lineCoordinates.x2 = x2;\r\n\t\t\taxisY.lineCoordinates.width = Math.abs(x2 - x1);\r\n\t\t}\r\n\r\n\t\tif (axisY2) {\r\n\t\t\taxisY2.lineCoordinates = {\r\n\t\t\t};\r\n\t\t\tx1 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\r\n\t\t\tx2 = Math.round(freeSpace.x2 > axisY2.chart.width - 10 ? axisY2.chart.width - 10 : freeSpace.x2);\r\n\r\n\t\t\taxisY2.lineCoordinates.x1 = x1;\r\n\t\t\taxisY2.lineCoordinates.x2 = x2;\r\n\t\t\taxisY2.lineCoordinates.width = Math.abs(x2 - x1);\r\n\t\t}\r\n\r\n\r\n\r\n\t\tvar axisYHeight = Math.ceil(axisY ? axisY.createLabelsAndCalculateHeight() : 0);\r\n\t\tvar axisY2Height = Math.ceil(axisY2 ? axisY2.createLabelsAndCalculateHeight() : 0);\r\n\r\n\r\n\t\t// Position axisY based on the available free space, Margin and its height\r\n\t\tif (axisY) {\r\n\t\t\t//x1 = freeSpace.x1 + axisXWidth + axisX.margin + axisX.lineThickness / 2;\r\n\t\t\t//x2 = freeSpace.x2 > axisY.chart.width - 10 ? axisY.chart.width - 10 : freeSpace.x2;\r\n\r\n\t\t\ty1 = Math.round(freeSpace.y2 - axisYHeight - axisY.margin);\r\n\t\t\ty2 = Math.round(freeSpace.y2 - axisYMargin > axisY.chart.height - 10 ? axisY.chart.height - 10 : freeSpace.y2 - axisYMargin);\r\n\r\n\t\t\t//axisY.lineCoordinates = { x1: x1, y1: y1, x2: x2, y2: y1, width: Math.abs(x2 - x1) }\r\n\t\t\taxisY.lineCoordinates.y1 = y1;\r\n\t\t\taxisY.lineCoordinates.y2 = y1;\r\n\r\n\t\t\taxisY.boundingRect = {\r\n\t\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: axisYHeight\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Position axisY based on the available free space, Margin and its height\r\n\t\tif (axisY2) {\r\n\t\t\t//x1 = freeSpace.x1 + axisXWidth + axisX.margin + axisX.lineThickness / 2;\r\n\t\t\t//x2 = freeSpace.x2 > axisY2.chart.width - 10 ? axisY2.chart.width - 10 : freeSpace.x2;\r\n\r\n\t\t\ty1 = Math.round(freeSpace.y1 + axisY2.margin);\r\n\t\t\ty2 = (freeSpace.y1 + axisY2.margin + axisY2Height);\r\n\r\n\t\t\t//axisY2.lineCoordinates = { x1: x1, y1: y2, x2: x2, y2: y2, width: Math.abs(x2 - x1) }\r\n\t\t\taxisY2.lineCoordinates.y1 = y2;\r\n\t\t\taxisY2.lineCoordinates.y2 = y2;\r\n\r\n\t\t\taxisY2.boundingRect = {\r\n\t\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: axisY2Height\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t//axisY.ctx.rect(axisY.boundingRect.x1, axisY.boundingRect.y1, axisY.boundingRect.width, axisY.boundingRect.height);\r\n\t\t//axisY.ctx.stroke();\r\n\r\n\t\t// Position axisX based on the available free space, Margin and its height\r\n\t\tx1 = Math.round(freeSpace.x1 + axisX.margin);\r\n\t\ty1 = Math.round(axisY2 ? axisY2.lineCoordinates.y2 : (freeSpace.y1 < 10 ? 10 : freeSpace.y1));\r\n\t\tx2 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\r\n\t\ty2 = Math.round(axisY ? axisY.lineCoordinates.y1 : (freeSpace.y2 - axisYMargin > axisX.chart.height - 10 ? axisX.chart.height - 10 : freeSpace.y2 - axisYMargin));\r\n\r\n\r\n\t\taxisX.lineCoordinates = {\r\n\t\t\tx1: x2, y1: y1, x2: x2, y2: y2, height: Math.abs(y2 - y1)\r\n\t\t};\r\n\r\n\t\taxisX.boundingRect = {\r\n\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: y2 - y1\r\n\t\t};\r\n\r\n\t\t//axisX.ctx.rect(axisX.boundingRect.x1, axisX.boundingRect.y1, axisX.boundingRect.width, axisX.boundingRect.height);\r\n\t\t//axisX.ctx.stroke();\r\n\r\n\t\taxisX.calculateValueToPixelConversionParameters();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.calculateValueToPixelConversionParameters();\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.calculateValueToPixelConversionParameters();\r\n\r\n\r\n\t\t//ctx.save();\r\n\t\t//ctx.rect(axisY.boundingRect.x1 - 30, axisY.boundingRect.y1, axisY.boundingRect.width + 60, axisY.boundingRect.height);\r\n\t\t//ctx.clip();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderLabelsTicksAndTitle();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderLabelsTicksAndTitle();\r\n\r\n\t\t//ctx.restore();\r\n\r\n\t\taxisX.renderLabelsTicksAndTitle();\r\n\r\n\t\tchart.preparePlotArea();\r\n\t\tvar plotArea = axisX.chart.plotArea;\r\n\r\n\t\tctx.save();\r\n\t\tctx.rect(plotArea.x1, plotArea.y1, Math.abs(plotArea.x2 - plotArea.x1), Math.abs(plotArea.y2 - plotArea.y1));\r\n\r\n\t\tctx.clip();\r\n\r\n\r\n\t\t//No need to clip to plotArea because stripLines need to render on top of gridlines\r\n\t\taxisX.renderStripLinesOfThicknessType(\"value\");\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderStripLinesOfThicknessType(\"value\");\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderStripLinesOfThicknessType(\"value\");\r\n\r\n\t\taxisX.renderInterlacedColors();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderInterlacedColors();\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderInterlacedColors();\r\n\r\n\t\tctx.restore();\r\n\r\n\r\n\t\taxisX.renderGrid();\r\n\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderGrid();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderGrid();\r\n\r\n\r\n\t\taxisX.renderAxisLine();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderAxisLine();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderAxisLine();\r\n\r\n\r\n\t\taxisX.renderStripLinesOfThicknessType(\"pixel\");\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderStripLinesOfThicknessType(\"pixel\");\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderStripLinesOfThicknessType(\"pixel\");\r\n\t}\r\n\r\n}\r\n\r\nAxis.prototype.renderLabelsTicksAndTitle = function () {\r\n\r\n\tvar skipLabels = false;\r\n\tvar totalLabelWidth = 0;\r\n\tvar thresholdRatio = 1;\r\n\tvar labelCount = 0;\r\n\r\n\tvar intervalInPixels = this.conversionParameters.pixelPerUnit * this.interval;\r\n\r\n\tif (this.labelAngle !== 0 && this.labelAngle !== 360)\r\n\t\tthresholdRatio = 1.2;\r\n\r\n\t//Don't skip labels when interval is explicitely set\r\n\tif (typeof (this._options.interval) === \"undefined\") {\r\n\t\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\r\n\t\t\t//thresholdRatio = .9;// More space is preferred between labels when axis is horizontally aligned\r\n\r\n\t\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\t\t\t\tlabel = this._labels[i];\r\n\t\t\t\tif (label.position < this.viewportMinimum || label.stripLine)// don't consider stripLine's lable\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar width = label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle) + label.textBlock.height * Math.sin(Math.PI / 180 * this.labelAngle);\r\n\r\n\t\t\t\ttotalLabelWidth += width;\r\n\t\t\t}\r\n\r\n\t\t\tif (totalLabelWidth > this.lineCoordinates.width * thresholdRatio) {\r\n\t\t\t\tskipLabels = true;\r\n\t\t\t}\r\n\t\t} if (this._position === \"left\" || this._position === \"right\") {\r\n\t\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\t\t\t\tlabel = this._labels[i];\r\n\t\t\t\tif (label.position < this.viewportMinimum || label.stripLine)// don't consider stripLine's lable\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar width = label.textBlock.height * Math.cos(Math.PI / 180 * this.labelAngle) + label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle);\r\n\r\n\t\t\t\ttotalLabelWidth += width;\r\n\t\t\t}\r\n\r\n\t\t\tif (totalLabelWidth > this.lineCoordinates.height * thresholdRatio) {\r\n\t\t\t\tskipLabels = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (this._position === \"bottom\") {\r\n\t\tvar i = 0;\r\n\r\n\t\tvar label;\r\n\t\tvar xy;\r\n\r\n\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\r\n\t\t\tlabel = this._labels[i];\r\n\t\t\tif (label.position < this.viewportMinimum || label.position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(label.position);\r\n\r\n\t\t\tif ((this.tickThickness && !this._labels[i].stripLine) || (this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\")) {\r\n\r\n\t\t\t\tif (this._labels[i].stripLine) {\r\n\t\t\t\t\tstripLine = this._labels[i].stripLine;\r\n\t\t\t\t\tthis.ctx.lineWidth = stripLine.thickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = stripLine.color;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ctx.lineWidth = this.tickThickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = this.tickColor;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvar tickX = (this.ctx.lineWidth % 2 === 1) ? (xy.x << 0) + .5 : (xy.x << 0);\r\n\t\t\t\tthis.ctx.beginPath();\r\n\t\t\t\tthis.ctx.moveTo(tickX, xy.y << 0);\r\n\t\t\t\tthis.ctx.lineTo(tickX, (xy.y + this.tickLength) << 0);\r\n\t\t\t\tthis.ctx.stroke();\r\n\t\t\t}\r\n\r\n\t\t\t//Don't skip stripLine's labels\r\n\t\t\tif (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (label.textBlock.angle === 0) {\r\n\t\t\t\txy.x -= label.textBlock.width / 2;\r\n\t\t\t\t//xy.y += this.tickLength + label.textBlock.height / 2;\r\n\t\t\t\txy.y += this.tickLength + label.textBlock.fontSize / 2;\r\n\r\n\t\t\t} else {\r\n\t\t\t\txy.x -= (this.labelAngle < 0 ? (label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle)) : 0);\r\n\t\t\t\txy.y += this.tickLength + Math.abs((this.labelAngle < 0 ? label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle) - 5 : 5));\r\n\t\t\t}\r\n\t\t\tlabel.textBlock.x = xy.x;\r\n\t\t\tlabel.textBlock.y = xy.y;\r\n\r\n\t\t\tlabel.textBlock.render(true);\r\n\t\t}\r\n\r\n\t\tif (this.title) {\r\n\r\n\t\t\tthis._titleTextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: this.lineCoordinates.x1,// This is recalculated again\r\n\t\t\t\ty: this.boundingRect.y2 - this.titleFontSize - 5,// This is recalculated again\r\n\t\t\t\tmaxWidth: this.lineCoordinates.width,\r\n\t\t\t\tmaxHeight: this.titleFontSize * 1.5,\r\n\t\t\t\tangle: 0,\r\n\t\t\t\ttext: this.title,\r\n\t\t\t\thorizontalAlign: \"center\",//left, center, right\r\n\t\t\t\tfontSize: this.titleFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.titleFontFamily,\r\n\t\t\t\tfontWeight: this.titleFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.titleFontColor,\r\n\t\t\t\tfontStyle: this.titleFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"top\"\r\n\t\t\t});\r\n\r\n\t\t\tthis._titleTextBlock.measureText();\r\n\t\t\tthis._titleTextBlock.x = this.lineCoordinates.x1 + this.lineCoordinates.width / 2 - this._titleTextBlock.width / 2;\r\n\t\t\tthis._titleTextBlock.y = this.boundingRect.y2 - this._titleTextBlock.height - 3;\r\n\t\t\tthis._titleTextBlock.render(true);\r\n\t\t}\r\n\t}\r\n\telse if (this._position === \"top\") {\r\n\t\tvar i = 0;\r\n\r\n\t\tvar label;\r\n\t\tvar xy;\r\n\t\tvar stripLine;\r\n\r\n\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\t\t\tlabel = this._labels[i];\r\n\t\t\tif (label.position < this.viewportMinimum || label.position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(label.position);\r\n\r\n\t\t\tif ((this.tickThickness && !this._labels[i].stripLine) || (this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\")) {\r\n\r\n\r\n\t\t\t\tif (this._labels[i].stripLine) {\r\n\t\t\t\t\tstripLine = this._labels[i].stripLine;\r\n\r\n\t\t\t\t\tthis.ctx.lineWidth = stripLine.thickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = stripLine.color;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ctx.lineWidth = this.tickThickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = this.tickColor;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tickX = (this.ctx.lineWidth % 2 === 1) ? (xy.x << 0) + .5 : (xy.x << 0);\r\n\t\t\t\tthis.ctx.beginPath();\r\n\t\t\t\tthis.ctx.moveTo(tickX, xy.y << 0);\r\n\t\t\t\tthis.ctx.lineTo(tickX, (xy.y - this.tickLength) << 0);\r\n\t\t\t\tthis.ctx.stroke();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//Don't skip stripLine's labels\r\n\t\t\tif (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (label.textBlock.angle === 0) {\r\n\t\t\t\txy.x -= label.textBlock.width / 2;\r\n\t\t\t\txy.y -= this.tickLength + label.textBlock.height / 2;\r\n\t\t\t} else {\r\n\t\t\t\txy.x -= (this.labelAngle > 0 ? (label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle)) : 0);\r\n\t\t\t\txy.y -= this.tickLength + Math.abs((this.labelAngle > 0 ? label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle) + 5 : 5));\r\n\t\t\t}\r\n\t\t\tlabel.textBlock.x = xy.x;\r\n\t\t\tlabel.textBlock.y = xy.y;\r\n\r\n\t\t\tlabel.textBlock.render(true);\r\n\t\t}\r\n\r\n\t\tif (this.title) {\r\n\r\n\t\t\tthis._titleTextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: this.lineCoordinates.x1,// This is recalculated again\r\n\t\t\t\ty: this.boundingRect.y1 + 1,\r\n\t\t\t\tmaxWidth: this.lineCoordinates.width,\r\n\t\t\t\tmaxHeight: this.titleFontSize * 1.5,\r\n\t\t\t\tangle: 0,\r\n\t\t\t\ttext: this.title,\r\n\t\t\t\thorizontalAlign: \"center\",//left, center, right\r\n\t\t\t\tfontSize: this.titleFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.titleFontFamily,\r\n\t\t\t\tfontWeight: this.titleFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.titleFontColor,\r\n\t\t\t\tfontStyle: this.titleFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"top\"\r\n\t\t\t});\r\n\r\n\t\t\tthis._titleTextBlock.measureText();\r\n\t\t\tthis._titleTextBlock.x = this.lineCoordinates.x1 + this.lineCoordinates.width / 2 - this._titleTextBlock.width / 2;\r\n\t\t\tthis._titleTextBlock.render(true);\r\n\t\t}\r\n\t}\r\n\telse if (this._position === \"left\") {\r\n\r\n\r\n\t\tvar label;\r\n\t\tvar xy;\r\n\t\tfor (var i = 0; i < this._labels.length; i++) {\r\n\t\t\tlabel = this._labels[i];\r\n\t\t\tif (label.position < this.viewportMinimum || label.position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(label.position);\r\n\r\n\t\t\tif ((this.tickThickness && !this._labels[i].stripLine) || (this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\")) {\r\n\r\n\t\t\t\tif (this._labels[i].stripLine) {\r\n\t\t\t\t\tstripLine = this._labels[i].stripLine;\r\n\r\n\t\t\t\t\tthis.ctx.lineWidth = stripLine.thickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = stripLine.color;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ctx.lineWidth = this.tickThickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = this.tickColor;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tickY = (this.ctx.lineWidth % 2 === 1) ? (xy.y << 0) + .5 : (xy.y << 0);\r\n\t\t\t\tthis.ctx.beginPath();\r\n\t\t\t\tthis.ctx.moveTo(xy.x << 0, tickY);\r\n\t\t\t\tthis.ctx.lineTo((xy.x - this.tickLength) << 0, tickY);\r\n\t\t\t\tthis.ctx.stroke();\r\n\t\t\t}\r\n\r\n\t\t\t//Don't skip stripLine's labels\r\n\t\t\tif (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tlabel.textBlock.x = xy.x - (label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle)) - this.tickLength - 5;\r\n\r\n\t\t\tif (this.labelAngle === 0) {\r\n\t\t\t\tlabel.textBlock.y = xy.y;\r\n\t\t\t} else\r\n\t\t\t\tlabel.textBlock.y = xy.y - (label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle));\r\n\r\n\t\t\tlabel.textBlock.render(true);\r\n\t\t}\r\n\r\n\t\tif (this.title) {\r\n\r\n\t\t\tthis._titleTextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: this.boundingRect.x1 + 1,\r\n\t\t\t\ty: this.lineCoordinates.y2,\r\n\t\t\t\tmaxWidth: this.lineCoordinates.height,\r\n\t\t\t\tmaxHeight: this.titleFontSize * 1.5,\r\n\t\t\t\tangle: -90,\r\n\t\t\t\ttext: this.title,\r\n\t\t\t\thorizontalAlign: \"center\",//left, center, right\r\n\t\t\t\tfontSize: this.titleFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.titleFontFamily,\r\n\t\t\t\tfontWeight: this.titleFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.titleFontColor,\r\n\t\t\t\tfontStyle: this.titleFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"top\"\r\n\t\t\t});\r\n\r\n\t\t\tvar size = this._titleTextBlock.measureText();\r\n\r\n\t\t\t//this._titleTextBlock.x -= 4;\r\n\r\n\t\t\tthis._titleTextBlock.y = (this.lineCoordinates.height / 2 + this._titleTextBlock.width / 2 + this.lineCoordinates.y1);\r\n\t\t\tthis._titleTextBlock.render(true);\r\n\r\n\t\t\t//if (isDebugMode) {\r\n\t\t\t//\twindow.console.log(\"titleFontSize: \" + this.titleFontSize + \"; width: \" + size.width + \"; height: \" + size.height);\r\n\t\t\t//\twindow.console.log(\"this.boundingRect.x1: \" + this.boundingRect.x1);\r\n\r\n\t\t\t//\t//this.ctx.rect(this._titleTextBlock.x, this._titleTextBlock.y, this._titleTextBlock.height, -this._titleTextBlock.width);\r\n\t\t\t//\t//this.ctx.stroke();\r\n\r\n\t\t\t//}\r\n\r\n\t\t}\r\n\t}\r\n\telse if (this._position === \"right\") {\r\n\r\n\r\n\t\tvar label;\r\n\t\tvar xy;\r\n\r\n\t\tfor (var i = 0; i < this._labels.length; i++) {\r\n\t\t\tlabel = this._labels[i];\r\n\t\t\tif (label.position < this.viewportMinimum || label.position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(label.position);\r\n\r\n\t\t\tif ((this.tickThickness && !this._labels[i].stripLine) || (this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\")) {\r\n\r\n\t\t\t\tif (this._labels[i].stripLine) {\r\n\t\t\t\t\tstripLine = this._labels[i].stripLine;\r\n\r\n\t\t\t\t\tthis.ctx.lineWidth = stripLine.thickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = stripLine.color;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ctx.lineWidth = this.tickThickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = this.tickColor;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tickY = (this.ctx.lineWidth % 2 === 1) ? (xy.y << 0) + .5 : (xy.y << 0);\r\n\t\t\t\tthis.ctx.beginPath();\r\n\t\t\t\tthis.ctx.moveTo(xy.x << 0, tickY);\r\n\t\t\t\tthis.ctx.lineTo((xy.x + this.tickLength) << 0, tickY);\r\n\t\t\t\tthis.ctx.stroke();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//Don't skip stripLine's labels\r\n\t\t\tif (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tlabel.textBlock.x = xy.x + this.tickLength + 5;\r\n\t\t\t//label.textBlock.y = xy.y - (label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle));\r\n\t\t\tif (this.labelAngle === 0) {\r\n\t\t\t\tlabel.textBlock.y = xy.y;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tlabel.textBlock.y = xy.y;\r\n\r\n\t\t\tlabel.textBlock.render(true);\r\n\t\t}\r\n\r\n\t\tif (this.title) {\r\n\r\n\t\t\tthis._titleTextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: this.boundingRect.x2 - 1,\r\n\t\t\t\ty: this.lineCoordinates.y2,\r\n\t\t\t\tmaxWidth: this.lineCoordinates.height,\r\n\t\t\t\tmaxHeight: this.titleFontSize * 1.5,\r\n\t\t\t\tangle: 90,\r\n\t\t\t\ttext: this.title,\r\n\t\t\t\thorizontalAlign: \"center\",//left, center, right\r\n\t\t\t\tfontSize: this.titleFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.titleFontFamily,\r\n\t\t\t\tfontWeight: this.titleFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.titleFontColor,\r\n\t\t\t\tfontStyle: this.titleFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"top\"\r\n\t\t\t});\r\n\r\n\t\t\tthis._titleTextBlock.measureText();\r\n\t\t\tthis._titleTextBlock.y = (this.lineCoordinates.height / 2 - this._titleTextBlock.width / 2 + this.lineCoordinates.y1);\r\n\t\t\tthis._titleTextBlock.render(true);\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\nAxis.prototype.renderInterlacedColors = function () {\r\n\tvar ctx = this.chart.plotArea.ctx;\r\n\t//return;\r\n\r\n\tvar interlacedGridStartPoint;\r\n\tvar interlacedGridEndPoint;\r\n\tvar plotAreaCoordinates = this.chart.plotArea;\r\n\tvar i = 0, renderInterlacedGrid = true;\r\n\r\n\tif ((this._position === \"bottom\" || this._position === \"top\") && this.interlacedColor) {\r\n\r\n\t\tctx.fillStyle = this.interlacedColor;\r\n\r\n\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\r\n\t\t\tif (this._labels[i].stripLine)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (renderInterlacedGrid) {//So that the interlaced color alternates\r\n\t\t\t\tinterlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this._labels[i].position);\r\n\r\n\t\t\t\tif (i + 1 >= this._labels.length - 1)\r\n\t\t\t\t\tinterlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this.viewportMaximum);\r\n\t\t\t\telse\r\n\t\t\t\t\tinterlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this._labels[i + 1].position);\r\n\r\n\t\t\t\tctx.fillRect(interlacedGridStartPoint.x, plotAreaCoordinates.y1, Math.abs(interlacedGridEndPoint.x - interlacedGridStartPoint.x), Math.abs(plotAreaCoordinates.y1 - plotAreaCoordinates.y2));\r\n\t\t\t\trenderInterlacedGrid = false;\r\n\t\t\t} else\r\n\t\t\t\trenderInterlacedGrid = true;\r\n\r\n\t\t}\r\n\r\n\t} else if ((this._position === \"left\" || this._position === \"right\") && this.interlacedColor) {\r\n\r\n\t\tctx.fillStyle = this.interlacedColor;\r\n\r\n\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\t\t        if (this._labels[i].stripLine)\r\n\t\t            continue;\r\n\r\n\t\t\tif (renderInterlacedGrid) {//So that the interlaced color alternates\r\n\r\n\t\t\t\tinterlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this._labels[i].position);\r\n\r\n\t\t\t\tif (i + 1 >= this._labels.length - 1)\r\n\t\t\t\t\tinterlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this.viewportMaximum);\r\n\t\t\t\telse\r\n\t\t\t\t\tinterlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this._labels[i + 1].position);\r\n\r\n\t\t\t\tctx.fillRect(plotAreaCoordinates.x1, interlacedGridStartPoint.y, Math.abs(plotAreaCoordinates.x1 - plotAreaCoordinates.x2), Math.abs(interlacedGridStartPoint.y - interlacedGridEndPoint.y));\r\n\t\t\t\trenderInterlacedGrid = false;\r\n\t\t\t} else\r\n\t\t\t\trenderInterlacedGrid = true;\r\n\t\t}\r\n\t\t    //throw \"123\";\r\n\t}\r\n\r\n\tctx.beginPath();\r\n}\r\n\r\n//Renders stripLines of given thickness type.\r\nAxis.prototype.renderStripLinesOfThicknessType = function (thicknessType) {\r\n\r\n\tif (!(this.stripLines && this.stripLines.length > 0) || !thicknessType)\r\n\t\treturn;\r\n\r\n\tvar _this = this;\r\n\r\n\tvar i = 0;\r\n\tfor (i = 0; i < this.stripLines.length; i++) {\r\n\r\n\t\tvar stripLine = this.stripLines[i];\r\n\r\n\t\tif (stripLine._thicknessType !== thicknessType)\r\n\t\t\tcontinue;\r\n\r\n\r\n\t\t//Should be skipped only if thicknessType is \"pixel\". If it is \"value\" then clipping is automatically applied before calling.\r\n\t\tif (thicknessType === \"pixel\" && (stripLine.value < this.viewportMinimum || stripLine.value > this.viewportMaximum))\r\n\t\t\tcontinue;\r\n\r\n\t\tif (stripLine.showOnTop) {\r\n\t\t\tthis.chart.addEventListener(\"dataAnimationIterationEnd\", stripLine.render, stripLine);\r\n\t\t}\r\n\t\telse\r\n\t\t\tstripLine.render();\r\n\t}\r\n};\r\n\r\nAxis.prototype.renderGrid = function () {\r\n\r\n\tif (!(this.gridThickness && this.gridThickness > 0))\r\n\t\treturn;\r\n\r\n\t//var ctx = this.chart.plotArea.ctx;\r\n\tvar ctx = this.chart.ctx;\r\n\r\n\tvar xy;\r\n\tvar plotAreaCoordinates = this.chart.plotArea;\r\n\tvar stripLine;\r\n\tvar tempLineWidth, tempStrokeStyle;\r\n\t//return;\r\n\r\n\tctx.lineWidth = this.gridThickness;\r\n\tctx.strokeStyle = this.gridColor;\r\n\r\n\tif (ctx.setLineDash) {\r\n\t\tctx.setLineDash(getLineDashArray(this.gridDashType, this.gridThickness));\r\n\t}\r\n\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\r\n\t\tfor (i = 0; i < this._labels.length && !this._labels[i].stripLine; i++) {\r\n\r\n\t\t\tif (this._labels[i].position < this.viewportMinimum || this._labels[i].position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(this._labels[i].position);\r\n\r\n\t\t\tvar gridX = (ctx.lineWidth % 2 === 1) ? (xy.x << 0) + .5 : (xy.x << 0);\r\n\r\n\t\t\tctx.moveTo(gridX, plotAreaCoordinates.y1 << 0);\r\n\t\t\tctx.lineTo(gridX, plotAreaCoordinates.y2 << 0);\r\n\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t}\r\n\telse if (this._position === \"left\" || this._position === \"right\") {\r\n\r\n\t\tfor (var i = 0; i < this._labels.length && !this._labels[i].stripLine; i++) {\r\n\r\n\t\t\tif (i === 0 && this.type === \"axisY\" && this.chart.axisX && this.chart.axisX.lineThickness)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (this._labels[i].position < this.viewportMinimum || this._labels[i].position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(this._labels[i].position);\r\n\r\n\t\t\tvar gridY = (ctx.lineWidth % 2 === 1) ? (xy.y << 0) + .5 : (xy.y << 0);\r\n\r\n\t\t\tctx.moveTo(plotAreaCoordinates.x1 << 0, gridY);\r\n\t\t\tctx.lineTo(plotAreaCoordinates.x2 << 0, gridY);\r\n\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nAxis.prototype.renderAxisLine = function () {\r\n\t//var ctx = this.chart.plotArea.ctx;\r\n\tvar ctx = this.chart.ctx;\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\t\tif (this.lineThickness) {\r\n\t\t\tctx.lineWidth = this.lineThickness;\r\n\t\t\tctx.strokeStyle = this.lineColor ? this.lineColor : \"black\";\r\n\r\n\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\tctx.setLineDash(getLineDashArray(this.lineDashType, this.lineThickness));\r\n\t\t\t}\r\n\r\n\t\t\tvar lineY = (this.lineThickness % 2 === 1) ? (this.lineCoordinates.y1 << 0) + .5 : (this.lineCoordinates.y1 << 0);\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(this.lineCoordinates.x1, lineY);\r\n\t\t\tctx.lineTo(this.lineCoordinates.x2, lineY);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t} else if (this._position === \"left\" || this._position === \"right\") {\r\n\t\tif (this.lineThickness) {\r\n\t\t\tctx.lineWidth = this.lineThickness;\r\n\t\t\tctx.strokeStyle = this.lineColor;\r\n\r\n\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\tctx.setLineDash(getLineDashArray(this.lineDashType, this.lineThickness));\r\n\t\t\t}\r\n\r\n\t\t\tvar lineX = (this.lineThickness % 2 === 1) ? (this.lineCoordinates.x1 << 0) + .5 : (this.lineCoordinates.x1 << 0);\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(lineX, this.lineCoordinates.y1);\r\n\t\t\tctx.lineTo(lineX, this.lineCoordinates.y2);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nAxis.prototype.getPixelCoordinatesOnAxis = function (value) {\r\n\tvar xy = {\r\n\t};\r\n\tvar width = this.lineCoordinates.width;\r\n\tvar height = this.lineCoordinates.height;\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\t\t//var pixelPerUnit = width / Math.abs(this.viewportMaximum - this.viewportMinimum);\r\n\t\tvar pixelPerUnit = this.conversionParameters.pixelPerUnit;\r\n\r\n\t\t//xy.x = this.lineCoordinates.x1 + (pixelPerUnit * (value - this.viewportMinimum));\r\n\t\txy.x = this.conversionParameters.reference + (pixelPerUnit * (value - this.viewportMinimum));\r\n\t\txy.y = this.lineCoordinates.y1;\r\n\t}\r\n\tif (this._position === \"left\" || this._position === \"right\") {\r\n\t\t//var pixelPerUnit = height / Math.abs(this.viewportMaximum - this.viewportMinimum);\r\n\t\tvar pixelPerUnit = -this.conversionParameters.pixelPerUnit;\r\n\r\n\t\t//xy.y = this.lineCoordinates.y2 - (pixelPerUnit * (value - this.viewportMinimum));\r\n\t\txy.y = this.conversionParameters.reference - (pixelPerUnit * (value - this.viewportMinimum));\r\n\t\txy.x = this.lineCoordinates.x2;\r\n\t}\r\n\r\n\treturn xy;\r\n}\r\n\r\nAxis.prototype.convertPixelToValue = function (pixel) {\r\n\r\n\tif (!pixel)\r\n\t\treturn null;\r\n\r\n\tvar value = 0;\r\n\tvar p = (this._position === \"left\" || this._position === \"right\") ? pixel.y : pixel.x;\r\n\r\n\tvalue = this.conversionParameters.minimum + (p - this.conversionParameters.reference) / this.conversionParameters.pixelPerUnit;\r\n\r\n\treturn value;\r\n}\r\n\r\nAxis.prototype.setViewPortRange = function (viewportMinimum, viewportMaximum) {\r\n\r\n\tthis.sessionVariables.newViewportMinimum = this.viewportMinimum = Math.min(viewportMinimum, viewportMaximum);\r\n\tthis.sessionVariables.newViewportMaximum = this.viewportMaximum = Math.max(viewportMinimum, viewportMaximum);\r\n\r\n}\r\n\r\nAxis.prototype.getXValueAt = function (pixel) {\r\n\tif (!pixel)\r\n\t\treturn null;\r\n\r\n\tvar xval = null;\r\n\r\n\tif (this._position === \"left\") {\r\n\t\txval = (this.chart.axisX.viewportMaximum - this.chart.axisX.viewportMinimum) / this.chart.axisX.lineCoordinates.height * ((this.chart.axisX.lineCoordinates.y2 - pixel.y)) + this.chart.axisX.viewportMinimum;\r\n\t}\r\n\telse if (this._position === \"bottom\") {\r\n\t\txval = (this.chart.axisX.viewportMaximum - this.chart.axisX.viewportMinimum) / this.chart.axisX.lineCoordinates.width * (pixel.x - this.chart.axisX.lineCoordinates.x1) + this.chart.axisX.viewportMinimum;\r\n\t}\r\n\r\n\treturn xval;\r\n}\r\n\r\nAxis.prototype.calculateValueToPixelConversionParameters = function (value) {\r\n\tthis.reversed = false;\r\n\r\n\tvar conversionParameters = {\r\n\t\tpixelPerUnit: null, minimum: null, reference: null\r\n\t};\r\n\r\n\tvar width = this.lineCoordinates.width;\r\n\tvar height = this.lineCoordinates.height;\r\n\r\n\tconversionParameters.minimum = this.viewportMinimum;\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\t\tconversionParameters.pixelPerUnit = (this.reversed ? -1 : 1) * width / Math.abs(this.viewportMaximum - this.viewportMinimum);\r\n\t\tconversionParameters.reference = (this.reversed ? this.lineCoordinates.x2 : this.lineCoordinates.x1);\r\n\t}\r\n\r\n\tif (this._position === \"left\" || this._position === \"right\") {\r\n\t\tconversionParameters.pixelPerUnit = (this.reversed ? 1 : -1) * height / Math.abs(this.viewportMaximum - this.viewportMinimum);\r\n\t\tconversionParameters.reference = (this.reversed ? this.lineCoordinates.y1 : this.lineCoordinates.y2);\r\n\t}\r\n\r\n\r\n\tthis.conversionParameters = conversionParameters;\r\n}\r\n\r\nAxis.prototype.calculateAxisParameters = function () {\r\n\r\n\tvar freeSpace = this.chart.layoutManager.getFreeSpace();\r\n\tvar availableWidth = 0;\r\n\tvar availableHeight = 0;\r\n\tvar isLessThanTwoDataPoints = false;\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\t\tthis.maxWidth = freeSpace.width;\r\n\t\tthis.maxHeight = freeSpace.height;\r\n\t} else {\r\n\t\tthis.maxWidth = freeSpace.height;\r\n\t\tthis.maxHeight = freeSpace.width;\r\n\t}\r\n\r\n\tvar noTicks = this.type === \"axisX\" ? (this.maxWidth < 500 ? 8 : Math.max(6, Math.floor(this.maxWidth / 62))) : Math.max(Math.floor(this.maxWidth / 40), 2);\r\n\tvar min, max;\r\n\tvar minDiff;\r\n\tvar range;\r\n\tvar rangePadding = 0;\r\n\r\n\r\n\tif (this.viewportMinimum === null || isNaN(this.viewportMinimum))\r\n\t\tthis.viewportMinimum = this.minimum;\r\n\r\n\tif (this.viewportMaximum === null || isNaN(this.viewportMaximum))\r\n\t\tthis.viewportMaximum = this.maximum;\r\n\r\n\tif (this.type === \"axisX\") {\r\n\t\tmin = (this.viewportMinimum !== null) ? this.viewportMinimum : this.dataInfo.viewPortMin;\r\n\t\tmax = (this.viewportMaximum !== null) ? this.viewportMaximum : this.dataInfo.viewPortMax;\r\n\r\n\t\tif (max - min === 0) {\r\n\t\t\trangePadding = typeof (this._options.interval) === \"undefined\" ? .4 : this._options.interval;\r\n\r\n\t\t\tmax += rangePadding;\r\n\t\t\tmin -= rangePadding;\r\n\t\t}\r\n\r\n\t\tif (this.dataInfo.minDiff !== Infinity)\r\n\t\t\tminDiff = this.dataInfo.minDiff;\r\n\t\telse if (max - min > 1) {\r\n\t\t\tminDiff = Math.abs(max - min) * .5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tminDiff = 1;\r\n\r\n\t\t\tif (this.chart.plotInfo.axisXValueType === \"dateTime\")\r\n\t\t\t\tisLessThanTwoDataPoints = true;\r\n\t\t}\r\n\r\n\t} else if (this.type === \"axisY\") {\r\n\r\n\t\t//min = typeof (this._options.viewportMinimum) === \"undefined\" || this._options.viewportMinimum === null ? this.dataInfo.viewPortMin : this._options.viewportMinimum;\r\n\t\t//max = typeof (this._options.viewportMaximum) === \"undefined\" || this._options.viewportMaximum === null ? this.dataInfo.viewPortMax : this._options.viewportMaximum;\r\n\t\tmin = (this.viewportMinimum !== null) ? this.viewportMinimum : this.dataInfo.viewPortMin;\r\n\t\tmax = (this.viewportMaximum !== null) ? this.viewportMaximum : this.dataInfo.viewPortMax;\r\n\r\n\t\tif (!isFinite(min) && !isFinite(max)) {\r\n\t\t\tmax = typeof (this._options.interval) === \"undefined\" ? -Infinity : this._options.interval;\r\n\t\t\tmin = 0;\r\n\t\t} else if (!isFinite(min)) {\r\n\t\t\tmin = max;\r\n\t\t} else if (!isFinite(max)) {\r\n\t\t\tmax = min;\r\n\t\t}\r\n\r\n\t\t\tif (min === 0 && max === 0) {// When all dataPoints are zero\r\n\t\t\t\tmax += 9;\r\n\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\telse if (max - min === 0) {// When there is only a single dataPoint or when all dataPoints have same Y Value\r\n\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max) * .01), 5);\r\n\t\t\t\tmax += rangePadding;\r\n\t\t\t\tmin -= rangePadding;\r\n\t\t\t}\r\n\t\t\telse if (min > max) {\r\n\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), 5);\r\n\r\n\t\t\t\tif (max >= 0)\r\n\t\t\t\t\tmin = max - rangePadding;\r\n\t\t\t\telse\r\n\t\t\t\t\tmax = min + rangePadding;\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), .05);\r\n\r\n\t\t\t\tif (max !== 0)\r\n\t\t\t\t\tmax += rangePadding;\r\n\t\t\t\tif (min !== 0)\r\n\t\t\t\t\tmin -= rangePadding;\r\n\t\t\t}\r\n\r\n\t\tif (this.dataInfo.minDiff !== Infinity)\r\n\t\t\tminDiff = this.dataInfo.minDiff;\r\n\t\telse if (max - min > 1) {\r\n\t\t\tminDiff = Math.abs(max - min) * .5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tminDiff = 1;\r\n\t\t}\r\n\r\n\r\n\t\t//Apply includeZero\r\n\t\tif (this.includeZero && (this.viewportMinimum === null || isNaN(this.viewportMinimum))) {\r\n\t\t\tif (min > 0)\r\n\t\t\t\tmin = 0;\r\n\t\t}\r\n\t\tif (this.includeZero && (this.viewportMaximum === null || isNaN(this.viewportMaximum))) {\r\n\t\t\tif (max < 0)\r\n\t\t\t\tmax = 0;\r\n\t\t}\r\n\t}\r\n\r\n\trange = (isNaN(this.viewportMaximum) || this.viewportMaximum === null ? max : this.viewportMaximum) - (isNaN(this.viewportMinimum) || this.viewportMinimum === null ? min : this.viewportMinimum);\r\n\r\n\tif (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\r\n\r\n\t\tif (!this.intervalType) {\r\n\r\n\t\t\tif (range / (1 * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 5) <= noTicks) {\r\n\t\t\t\tthis.interval = 5;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 10) <= noTicks) {\r\n\t\t\t\tthis.interval = 10;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 20) <= noTicks) {\r\n\t\t\t\tthis.interval = 20;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 50) <= noTicks) {\r\n\t\t\t\tthis.interval = 50;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 100) <= noTicks) {\r\n\t\t\t\tthis.interval = 100;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 200) <= noTicks) {\r\n\t\t\t\tthis.interval = 200;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 250) <= noTicks) {\r\n\t\t\t\tthis.interval = 250;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 300) <= noTicks) {\r\n\t\t\t\tthis.interval = 300;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 400) <= noTicks) {\r\n\t\t\t\tthis.interval = 400;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 500) <= noTicks) {\r\n\t\t\t\tthis.interval = 500;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (constants.secondDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 5) <= noTicks) {\r\n\t\t\t\tthis.interval = 5;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 10) <= noTicks) {\r\n\t\t\t\tthis.interval = 10;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 15) <= noTicks) {\r\n\t\t\t\tthis.interval = 15;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 20) <= noTicks) {\r\n\t\t\t\tthis.interval = 20;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 30) <= noTicks) {\r\n\t\t\t\tthis.interval = 30;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 5) <= noTicks) {\r\n\t\t\t\tthis.interval = 5;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 10) <= noTicks) {\r\n\t\t\t\tthis.interval = 10;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 15) <= noTicks) {\r\n\t\t\t\tthis.interval = 15;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 20) <= noTicks) {\r\n\t\t\t\tthis.interval = 20;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 30) <= noTicks) {\r\n\t\t\t\tthis.interval = 30;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.hourDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"hour\";\r\n\t\t\t} else if (range / (constants.hourDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"hour\";\r\n\t\t\t} else if (range / (constants.hourDuration * 3) <= noTicks) {\r\n\t\t\t\tthis.interval = 3;\r\n\t\t\t\tthis.intervalType = \"hour\";\r\n\t\t\t} else if (range / (constants.hourDuration * 6) <= noTicks) {\r\n\t\t\t\tthis.interval = 6;\r\n\t\t\t\tthis.intervalType = \"hour\";\r\n\t\t\t} else if (range / (constants.dayDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"day\";\r\n\t\t\t} else if (range / (constants.dayDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"day\";\r\n\t\t\t} else if (range / (constants.dayDuration * 4) <= noTicks) {\r\n\t\t\t\tthis.interval = 4;\r\n\t\t\t\tthis.intervalType = \"day\";\r\n\t\t\t} else if (range / (constants.weekDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"week\";\r\n\t\t\t} else if (range / (constants.weekDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"week\";\r\n\t\t\t} else if (range / (constants.weekDuration * 3) <= noTicks) {\r\n\t\t\t\tthis.interval = 3;\r\n\t\t\t\tthis.intervalType = \"week\";\r\n\t\t\t} else if (range / (constants.monthDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"month\";\r\n\t\t\t} else if (range / (constants.monthDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"month\";\r\n\t\t\t} else if (range / (constants.monthDuration * 3) <= noTicks) {\r\n\t\t\t\tthis.interval = 3;\r\n\t\t\t\tthis.intervalType = \"month\";\r\n\t\t\t} else if (range / (constants.monthDuration * 6) <= noTicks) {\r\n\t\t\t\tthis.interval = 6;\r\n\t\t\t\tthis.intervalType = \"month\";\r\n\t\t\t} else if (range / (constants.yearDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"year\";\r\n\t\t\t} else if (range / (constants.yearDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"year\";\r\n\t\t\t} else if (range / (constants.yearDuration * 4) <= noTicks) {\r\n\t\t\t\tthis.interval = 4;\r\n\t\t\t\tthis.intervalType = \"year\";\r\n\t\t\t} else {\r\n\t\t\t\tthis.interval = Math.floor(Axis.getNiceNumber(range / (noTicks - 1), true) / constants.yearDuration);\r\n\t\t\t\tthis.intervalType = \"year\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this.viewportMinimum === null || isNaN(this.viewportMinimum))\r\n\t\t\tthis.viewportMinimum = min - minDiff / 2;\r\n\r\n\t\tif (this.viewportMaximum === null || isNaN(this.viewportMaximum))\r\n\t\t\tthis.viewportMaximum = max + minDiff / 2;\r\n\r\n\r\n\t\tif (!this.valueFormatString) {\r\n\t\t\tif (isLessThanTwoDataPoints) {\r\n\t\t\t\tthis.valueFormatString = \"MMM DD YYYY HH:mm\";\r\n\t\t\t} else if (this.intervalType === \"year\") {\r\n\t\t\t\tthis.valueFormatString = \"YYYY\";\r\n\t\t\t} else if (this.intervalType === \"month\") {\r\n\t\t\t\tthis.valueFormatString = \"MMM YYYY\";\r\n\t\t\t} else if (this.intervalType === \"week\") {\r\n\t\t\t\tthis.valueFormatString = \"MMM DD YYYY\";\r\n\t\t\t} else if (this.intervalType === \"day\") {\r\n\t\t\t\tthis.valueFormatString = \"MMM DD YYYY\";\r\n\t\t\t} else if (this.intervalType === \"hour\") {\r\n\t\t\t\tthis.valueFormatString = \"hh:mm TT\";\r\n\t\t\t} else if (this.intervalType === \"minute\") {\r\n\t\t\t\tthis.valueFormatString = \"hh:mm TT\";\r\n\t\t\t} else if (this.intervalType === \"second\") {\r\n\t\t\t\tthis.valueFormatString = \"hh:mm:ss TT\";\r\n\t\t\t} else if (this.intervalType === \"millisecond\") {\r\n\t\t\t\tthis.valueFormatString = \"fff'ms'\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.intervalType = \"number\";\r\n\r\n\t\trange = Axis.getNiceNumber(range, false);\r\n\r\n\t\tif (this._options && this._options.interval)\r\n\t\t\tthis.interval = this._options.interval;\r\n\t\telse {\r\n\t\t\tthis.interval = Axis.getNiceNumber(range / (noTicks - 1), true);\r\n\t\t}\r\n\r\n\t\tif (this.viewportMinimum === null || isNaN(this.viewportMinimum)) {\r\n\t\t\tif (this.type === \"axisX\")\r\n\t\t\t\tthis.viewportMinimum = min - minDiff / 2;\r\n\t\t\telse\r\n\t\t\t\tthis.viewportMinimum = Math.floor(min / this.interval) * this.interval;\r\n\t\t}\r\n\r\n\t\tif (this.viewportMaximum === null || isNaN(this.viewportMaximum)) {\r\n\t\t\tif (this.type === \"axisX\")\r\n\t\t\t\tthis.viewportMaximum = max + minDiff / 2;\r\n\t\t\telse\r\n\t\t\t\tthis.viewportMaximum = Math.ceil(max / this.interval) * this.interval;\r\n\t\t}\r\n\r\n\t\tif (this.viewportMaximum === 0 && this.viewportMinimum === 0) {\r\n\r\n\t\t\tif (this._options.viewportMinimum === 0) {\r\n\t\t\t\tthis.viewportMaximum += 10;\r\n\t\t\t}\r\n\t\t\telse if (this._options.viewportMaximum === 0) {\r\n\t\t\t\tthis.viewportMinimum -= 10;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._options && typeof (this._options.interval) === \"undefined\") {\r\n\t\t\t\tthis.interval = Axis.getNiceNumber((this.viewportMaximum - this.viewportMinimum) / (noTicks - 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//Calculate minimum and maximum if not provided by the user\r\n\tif (this.minimum === null || this.maximum === null) {\r\n\t\tif (this.type === \"axisX\") {\r\n\t\t\tmin = (this.minimum !== null) ? this.minimum : this.dataInfo.min;\r\n\t\t\tmax = (this.maximum !== null) ? this.maximum : this.dataInfo.max;\r\n\r\n\t\t\tif (max - min === 0) {\r\n\t\t\t\trangePadding = typeof (this._options.interval) === \"undefined\" ? .4 : this._options.interval;\r\n\r\n\t\t\t\tmax += rangePadding;\r\n\t\t\t\tmin -= rangePadding;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.dataInfo.minDiff !== Infinity)\r\n\t\t\t\tminDiff = this.dataInfo.minDiff;\r\n\t\t\telse if (max - min > 1) {\r\n\t\t\t\tminDiff = Math.abs(max - min) * .5;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tminDiff = 1;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.type === \"axisY\") {\r\n\r\n\t\t\tmin = (this.minimum !== null) ? this.minimum : this.dataInfo.min;\r\n\t\t\tmax = (this.maximum !== null) ? this.maximum : this.dataInfo.max;\r\n\r\n\t\t\tif (!isFinite(min) && !isFinite(max)) {\r\n\t\t\t\tmax = typeof (this._options.interval) === \"undefined\" ? -Infinity : this._options.interval;\r\n\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tif (min === 0 && max === 0) {// When all dataPoints are zero\r\n\t\t\t\t\tmax += 9;\r\n\t\t\t\t\tmin = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (max - min === 0) {// When there is only a single dataPoint or when all dataPoints have same Y Value\r\n\t\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max) * .01), 5);\r\n\t\t\t\t\tmax += rangePadding;\r\n\t\t\t\t\tmin -= rangePadding;\r\n\t\t\t\t}\r\n\t\t\t\telse if (min > max) {\r\n\t\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), 5);\r\n\r\n\t\t\t\t\tif (max >= 0)\r\n\t\t\t\t\t\tmin = max - rangePadding;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tmax = min + rangePadding;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), .05);\r\n\r\n\t\t\t\t\tif (max !== 0)\r\n\t\t\t\t\t\tmax += rangePadding;\r\n\t\t\t\t\tif (min !== 0)\r\n\t\t\t\t\t\tmin -= rangePadding;\r\n\t\t\t\t}\r\n\r\n\t\t\tif (this.dataInfo.minDiff !== Infinity)\r\n\t\t\t\tminDiff = this.dataInfo.minDiff;\r\n\t\t\telse if (max - min > 1) {\r\n\t\t\t\tminDiff = Math.abs(max - min) * .5;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tminDiff = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//Apply includeZero\r\n\t\t\tif (this.includeZero && (this.minimum === null || isNaN(this.minimum))) {\r\n\t\t\t\tif (min > 0)\r\n\t\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\tif (this.includeZero && (this.maximum === null || isNaN(this.maximum))) {\r\n\t\t\t\tif (max < 0)\r\n\t\t\t\t\tmax = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trange = max - min;\r\n\r\n\t\tif (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\r\n\r\n\t\t\tif (this.minimum === null || isNaN(this.minimum))\r\n\t\t\t\tthis.minimum = min - minDiff / 2;\r\n\r\n\t\t\tif (this.maximum === null || isNaN(this.maximum))\r\n\t\t\t\tthis.maximum = max + minDiff / 2;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.intervalType = \"number\";\r\n\r\n\t\t\tif (this.minimum === null) {\r\n\t\t\t\tif (this.type === \"axisX\")\r\n\t\t\t\t\tthis.minimum = min - minDiff / 2;\r\n\t\telse\r\n\t\t\tthis.minimum = Math.floor(min / this.interval) * this.interval;\r\n\r\n\t\t\t\tthis.minimum = Math.min(this.minimum, this.sessionVariables.viewportMinimum === null || isNaN(this.sessionVariables.viewportMinimum) ? Infinity : this.sessionVariables.viewportMinimum);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.maximum === null) {\r\n\t\t\t\tif (this.type === \"axisX\")\r\n\t\t\t\t\tthis.maximum = max + minDiff / 2;\r\n\t\telse\r\n\t\t\tthis.maximum = Math.ceil(max / this.interval) * this.interval;\r\n\r\n\t\t\t\tthis.maximum = Math.max(this.maximum, this.sessionVariables.viewportMaximum === null || isNaN(this.sessionVariables.viewportMaximum) ? -Infinity : this.sessionVariables.viewportMaximum);\r\n\t\t\t}\r\n\r\n\t\t//var nfrac = Math.max(-Math.floor(Math.log(d)/Math.LN10), 0); //number of fractional digits to show\r\n\r\n\r\n\t\tif (this.maximum === 0 && this.minimum === 0) {\r\n\r\n\t\t\tif (this._options.minimum === 0) {\r\n\t\t\t\tthis.maximum += 10;\r\n\t\t\t}\r\n\t\t\telse if (this._options.maximum === 0) {\r\n\t\t\t\tthis.minimum -= 10;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\tthis.viewportMinimum = Math.max(this.viewportMinimum, this.minimum);\r\n\tthis.viewportMaximum = Math.min(this.viewportMaximum, this.maximum);\r\n\r\n\tif (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\")\r\n\t\tthis.intervalStartPosition = this.getLabelStartPoint(new Date(this.viewportMinimum), this.intervalType, this.interval);\r\n\telse\r\n\t\tthis.intervalStartPosition = Math.floor((this.viewportMinimum + (this.interval * .2)) / this.interval) * this.interval;\r\n\r\n\t//Set valueFormatString\r\n\tif (!this.valueFormatString) {\r\n\t\tthis.valueFormatString = \"#,##0.##\";\r\n\r\n\t\trange = Math.abs(this.viewportMaximum - this.viewportMinimum);\r\n\r\n\t\tif (range < 1) {\r\n\t\t\tvar numberOfDecimals = Math.floor(Math.abs(Math.log(range) / Math.LN10)) + 2;\r\n\r\n\t\t\tif (isNaN(numberOfDecimals) || !isFinite(numberOfDecimals))\r\n\t\t\t\tnumberOfDecimals = 2;\r\n\r\n\t\t\tif (numberOfDecimals > 2) {\r\n\t\t\t\tfor (var i = 0; i < numberOfDecimals - 2; i++)\r\n\t\t\t\t\tthis.valueFormatString += \"#\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//if (isDebugMode && window.console) {\r\n\t//    window.console.log(this.type + \": Min = \" + this.viewportMinimum);\r\n\t//    window.console.log(this.type + \": Max = \" + this.viewportMaximum);\r\n\t//    window.console.log(this.type + \": Interval = \" + this.interval);\r\n\t//}\r\n}\r\n\r\nAxis.getNiceNumber = function (x, round) {\r\n\r\n\tvar exp = Math.floor(Math.log(x) / Math.LN10);\r\n\tvar f = x / Math.pow(10, exp);\r\n\tvar nf;\r\n\r\n\tif (round) {\r\n\t\tif (f < 1.5)\r\n\t\t\tnf = 1;\r\n\t\telse if (f < 3)\r\n\t\t\tnf = 2;\r\n\t\telse if (f < 7)\r\n\t\t\tnf = 5;\r\n\t\telse\r\n\t\t\tnf = 10;\r\n\t}\r\n\telse {\r\n\t\tif (f <= 1)\r\n\t\t\tnf = 1;\r\n\t\telse if (f <= 2)\r\n\t\t\tnf = 2;\r\n\t\telse if (f <= 5)\r\n\t\t\tnf = 5;\r\n\t\telse nf = 10;\r\n\t}\r\n\r\n\treturn Number((nf * Math.pow(10, exp)).toFixed(20));\r\n}\r\n\r\nAxis.prototype.getLabelStartPoint = function () {\r\n\r\n\tvar intervalInMilliseconds = convertToNumber(this.interval, this.intervalType);\r\n\tvar minimum = Math.floor((this.viewportMinimum) / intervalInMilliseconds) * intervalInMilliseconds;\r\n\tvar dateTime = new Date(minimum);\r\n\r\n\tif (this.intervalType === \"millisecond\") {\r\n\t\t//millisecond = dateTime.getMilliSecond();\r\n\t\t//millisecond = Math.floor((millisecond + this.interval) / this.interval) * this.interval;\r\n\t}\r\n\telse if (this.intervalType === \"second\") {\r\n\t\tif (dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setSeconds(dateTime.getSeconds() + 1);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"minute\") {\r\n\t\tif (dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setMinutes(dateTime.getMinutes() + 1);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"hour\") {\r\n\t\tif (dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setHours(dateTime.getHours() + 1);\r\n\t\t\tdateTime.setMinutes(0);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"day\") {\r\n\t\tif (dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setDate(dateTime.getDate() + 1);\r\n\t\t\tdateTime.setHours(0);\r\n\t\t\tdateTime.setMinutes(0);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"week\") {\r\n\t\tif (dateTime.getDay() > 0 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setDate(dateTime.getDate() + (7 - dateTime.getDay()));\r\n\t\t\tdateTime.setHours(0);\r\n\t\t\tdateTime.setMinutes(0);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"month\") {\r\n\t\tif (dateTime.getDate() > 1 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setMonth(dateTime.getMonth() + 1);\r\n\t\t\tdateTime.setDate(1);\r\n\t\t\tdateTime.setHours(0);\r\n\t\t\tdateTime.setMinutes(0);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"year\") {\r\n\t\tif (dateTime.getMonth() > 0 || dateTime.getDate() > 1 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setFullYear(dateTime.getFullYear() + 1);\r\n\t\t\tdateTime.setMonth(0);\r\n\t\t\tdateTime.setDate(1);\r\n\t\t\tdateTime.setHours(0);\r\n\t\t\tdateTime.setMinutes(0);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\r\n\treturn dateTime;\r\n}\r\n\r\nexport default Axis;\r\n"]},"metadata":{},"sourceType":"module"}