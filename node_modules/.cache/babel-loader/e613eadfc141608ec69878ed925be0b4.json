{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\usersDataTable\\\\usersDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport './usersDataTable.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UsersDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      weights: [],\n      role: this.props.role,\n      selectedRows: [],\n      selectedRowsKeys: []\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }, this),\n      onFilter: (value, record) => this.state.searchedColumn === \"id\" ? record.id.props.children ? record.id.props.children.toString().toLowerCase().includes(value.toLowerCase()) : '' : record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => text != null ? text.props && text.type !== \"div\" ? /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => this.getMaster(text.props.children),\n        children: text.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this) : this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text ? text : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this) : text : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id.props.children);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      });\n      this.props.onChange(ids);\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/users\", options).then(response => response.json()).then(json => {\n      let rows = [];\n\n      for (let i = 0; i < json.length; i++) {\n        let row = {\n          username: json[i].name,\n          email: json[i].email,\n          roles: null\n        };\n\n        if (i % 2 === 0) {\n          row[\"color\"] = \"#fff\";\n        } else {\n          row[\"color\"] = \"#eee\";\n        }\n\n        rows.push(row);\n      }\n\n      this.setState({\n        data: rows\n      });\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/users\", options).then(response => response.json()).then(json => {\n        let rows = [];\n\n        for (let i = 0; i < json.length; i++) {\n          let row = {\n            username: json[i].name,\n            email: json[i].email,\n            roles: null\n          };\n\n          if (i % 2 === 0) {\n            row[\"color\"] = \"#fff\";\n          } else {\n            row[\"color\"] = \"#eee\";\n          }\n\n          rows.push(row);\n        }\n\n        this.setState({\n          data: rows\n        });\n      });\n    }\n  }\n\n  render() {\n    const rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => ({\n        disabled: record.name === 'Disabled User',\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 20\n      }, this),\n      dataIndex: 'username',\n      key: 'username',\n      width: '20%',\n      ...this.getColumnSearchProps('username'),\n      sorter: {\n        compare: (a, b) => {\n          return a.username.localeCompare(b.username);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'email',\n      key: 'email',\n      width: '20%',\n      ...this.getColumnSearchProps('email'),\n      sorter: {\n        compare: (a, b) => a.email.props.children.localeCompare(b.email.props.children)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'roles',\n      key: 'roles',\n      ...this.getColumnSearchProps('roles'),\n      sorter: {\n        compare: (a, b) => {\n          return a.roles.localeCompare(b.roles);\n        }\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          rowSelection: {\n            type: 'checkbox',\n            ...rowSelection\n          },\n          columns: columns,\n          dataSource: this.state.data,\n          pagination: {\n            pageSize: this.props.pagination\n          },\n          size: \"small\",\n          rowClassName: record => record.color.replace('#', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            bottom: 25,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Total elements: \", this.state.data.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UsersDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/usersDataTable/usersDataTable.js"],"names":["React","Table","Input","Button","Space","Highlighter","SearchOutlined","Link","UsersDataTable","Component","state","searchText","searchedColumn","data","weights","role","props","selectedRows","selectedRowsKeys","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","id","children","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","type","getMaster","backgroundColor","onSelectChange","selectedRowKeys","ids","i","length","push","onChange","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","row","username","name","email","roles","componentDidUpdate","prevProps","prevState","rowSelection","getCheckboxProps","disabled","columns","title","key","sorter","compare","a","b","localeCompare","pageSize","pagination","replace","position","bottom","left"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport './usersDataTable.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass UsersDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    weights: [],\r\n    role: this.props.role,\r\n    selectedRows: [],\r\n    selectedRowsKeys: []\r\n  };\r\n  \r\n\r\n  async componentDidMount(){\r\n\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n\r\n      }\r\n\r\n      fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/users\", options)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            let rows = []\r\n            for(let i = 0; i < json.length; i++){\r\n                let row = {username: json[i].name, email: json[i].email, roles: null}\r\n                if(i % 2 === 0){\r\n                    row[\"color\"] = \"#fff\"\r\n                }else{\r\n                    row[\"color\"] = \"#eee\"\r\n                }\r\n                rows.push(row)\r\n            }\r\n            this.setState({data: rows})\r\n        })\r\n    \r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState){\r\n\r\n    if(prevProps !== this.props){\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n    \r\n          }\r\n    \r\n          fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/users\", options)\r\n              .then(response => response.json())\r\n              .then(json => {\r\n                let rows = []\r\n                for(let i = 0; i < json.length; i++){\r\n                    let row = {username: json[i].name, email: json[i].email, roles: null}\r\n                    if(i % 2 === 0){\r\n                        row[\"color\"] = \"#fff\"\r\n                    }else{\r\n                        row[\"color\"] = \"#eee\"\r\n                    }\r\n                    rows.push(row)\r\n                }\r\n                this.setState({data: rows})\r\n            })\r\n    }\r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      this.state.searchedColumn === \"id\" ? (\r\n        record.id.props.children\r\n          ? record.id.props.children.toString().toLowerCase().includes(value.toLowerCase())\r\n          : ''\r\n        ) : (\r\n          record[dataIndex]\r\n            ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n            : ''\r\n        ),\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n    text != null ? (\r\n    text.props && text.type !== \"div\" ? (\r\n      <Link onClick={() => this.getMaster(text.props.children)}>{text.props.children}</Link>\r\n    ) : this.state.searchedColumn === dataIndex ? (\r\n      <Highlighter\r\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n        searchWords={[this.state.searchText]}\r\n        autoEscape\r\n        textToHighlight={text ? text : ''}\r\n      />\r\n    ) : (\r\n      text\r\n    )\r\n    ) : (\r\n      text\r\n    )\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    this.props.onChange(ids);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => ({\r\n        disabled: record.name === 'Disabled User',\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: <div className=\"dataTable__header__text\">Username</div>,\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n            width: '20%',\r\n            ...this.getColumnSearchProps('username'),\r\n            sorter: {\r\n                compare: (a, b) => { return a.username.localeCompare(b.username)},\r\n            },\r\n        },\r\n          \r\n      {\r\n        title: <center className=\"dataTable__header__text\">Email</center>,\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('email'),\r\n        sorter:{\r\n          compare: (a, b) => a.email.props.children.localeCompare(b.email.props.children),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Roles</div>,\r\n        dataIndex: 'roles',\r\n        key: 'roles',\r\n        ...this.getColumnSearchProps('roles'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.roles.localeCompare(b.roles)},\r\n        },\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} columns={columns} dataSource={this.state.data} pagination={{ pageSize: this.props.pagination  }} size=\"small\" rowClassName= {(record) => record.color.replace('#', '')}/>\r\n          <div style={{position: \"absolute\", bottom:25, left:0}}>\r\n            <b>Total elements: {this.state.data.length}</b>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UsersDataTable;"]},"metadata":{},"sourceType":"module"}