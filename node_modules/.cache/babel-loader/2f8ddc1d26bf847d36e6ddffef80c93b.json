{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\pipingProduction\\\\pipingProduction.js\",\n    _s = $RefreshSig$();\n\nimport NavBar from '../../components/navBar/navBar';\nimport React, { useState, useEffect } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport IdleTimer from 'react-idle-timer';\nimport { useHistory } from \"react-router\";\nimport BackIcon from \"../../assets/images/back.svg\";\nimport AlertF from \"../../components/alert/alert\";\nimport './pipingProduction.css'; //Página de home con el menú para ir a las aplicaciones de isotracker\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PITRequests = () => {\n  _s();\n\n  const history = useHistory();\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  document.body.style.zoom = 0.8;\n  const [tables, setTables] = useState([]);\n\n  function handleOnIdle() {\n    const body = {\n      user: secureStorage.getItem(\"user\")\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {});\n    secureStorage.clear();\n    history.push(\"/\" + process.env.REACT_APP_PROJECT);\n  }\n\n  useEffect(async () => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getEstimatedMatWeek\", options).then(response => response.json()).then(async json => {\n      const estimated = json.estimated;\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getForecastMatWeek\", options).then(response => response.json()).then(async json => {\n        const forecast = json.forecast;\n        let tables = [];\n        let material = estimated[0].material_id;\n        const settings = {\n          licenseKey: 'non-commercial-and-evaluation',\n          colWidths: 40,\n          rowHeaderWidth: 190 //... other options\n\n        };\n        let weeks = [];\n        let est = {};\n        let sumEst = {};\n        let countEst = 0;\n        let forc = {};\n        let col = [];\n        let sumEstCells = [];\n\n        for (let i = 0; i < estimated.length; i++) {\n          if (estimated[i].material_id === material) {\n            weeks.push(estimated[i].week.toString());\n            est[estimated[i].week.toString()] = estimated[i].estimated;\n            forc[forecast[i].week.toString()] = forecast[i].estimated;\n            countEst += estimated[i].estimated;\n            sumEst[estimated[i].week.toString()] = countEst;\n            col.push({\n              data: estimated[i].week.toString(),\n              type: \"numeric\"\n            });\n            sumEstCells.push({\n              row: 2,\n              col: i,\n              readOnly: true\n            });\n          } else {\n            tables.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"hot-app\",\n              children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                className: \"materials__title\",\n                children: [estimated[i - 1].name.toUpperCase(), \" Isometrics\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 63\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: \"10px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(HotTable, {\n                  data: [est, forc, sumEst],\n                  colHeaders: weeks,\n                  rowHeaders: [\"Estimated\", \"Forecast\", \"Estimated progress\"],\n                  width: \"2000\",\n                  height: \"200\",\n                  settings: settings,\n                  manualColumnResize: true,\n                  manualRowResize: true,\n                  columns: col,\n                  filters: true,\n                  cell: sumEstCells\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 183\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 151\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 45\n            }, this));\n            weeks = [estimated[i].week.toString()];\n            est = {};\n            forc = {};\n            sumEst = {};\n            countEst = estimated[i].estimated;\n            est[estimated[i].week.toString()] = estimated[i].estimated;\n            forc[forecast[i].week.toString()] = forecast[i].estimated;\n            sumEst[estimated[i].week.toString()] = countEst;\n            col = [{\n              data: estimated[i].week.toString(),\n              type: \"numeric\"\n            }];\n            material = estimated[i].material_id;\n          }\n        }\n\n        tables.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(\"text\", {\n            className: \"materials__title\",\n            children: [estimated[estimated.length - 1].name.toUpperCase(), \" Isometrics\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(HotTable, {\n              data: [est, forc, sumEst],\n              colHeaders: weeks,\n              rowHeaders: [\"Estimated\", \"Forecast\", \"Estimated progress\"],\n              width: \"2000\",\n              height: \"200\",\n              settings: settings,\n              manualColumnResize: true,\n              manualRowResize: true,\n              columns: col,\n              filters: true,\n              cell: sumEstCells\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 190\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 158\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }, this));\n        setTables(tables);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(IdleTimer, {\n      timeout: 1000 * 60 * 15,\n      onIdle: handleOnIdle,\n      debounce: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back__button\",\n      onClick: () => history.push('/' + process.env.REACT_APP_PROJECT + '/piping'),\n      style: {\n        width: \"175px\",\n        marginLeft: \"100px\",\n        marginTop: \"120px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: BackIcon,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 182\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"back__button__text\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 272\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph__container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"materials__pc__container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"materials__tables__container\",\n      children: tables\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PITRequests, \"fBy7gmoj2t2dqRydJO+uNw0K55k=\", false, function () {\n  return [useHistory];\n});\n\n_c = PITRequests;\nexport default PITRequests;\n\nvar _c;\n\n$RefreshReg$(_c, \"PITRequests\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/pipingProduction/pipingProduction.js"],"names":["NavBar","React","useState","useEffect","HotTable","IdleTimer","useHistory","AlertF","PITRequests","history","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","document","body","style","zoom","tables","setTables","handleOnIdle","user","getItem","options","method","headers","JSON","stringify","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","clear","push","REACT_APP_PROJECT","estimated","forecast","material","material_id","settings","licenseKey","colWidths","rowHeaderWidth","weeks","est","sumEst","countEst","forc","col","sumEstCells","i","length","week","type","row","readOnly","name","toUpperCase","marginTop","width","marginLeft","BackIcon","marginRight"],"mappings":"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","sourcesContent":["import NavBar from '../../components/navBar/navBar';\r\nimport React, { useState , useEffect} from 'react'\r\nimport { HotTable } from '@handsontable/react';\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\nimport BackIcon from \"../../assets/images/back.svg\"\r\n\r\nimport AlertF from \"../../components/alert/alert\"\r\n\r\nimport './pipingProduction.css'\r\n\r\n//Página de home con el menú para ir a las aplicaciones de isotracker\r\n\r\nconst PITRequests = () =>{\r\n\r\n    const history = useHistory();\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    document.body.style.zoom = 0.8\r\n\r\n    const[tables, setTables] = useState([])\r\n\r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: secureStorage.getItem(\"user\"),\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n\r\n    useEffect(async() =>{\r\n    \r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getEstimatedMatWeek\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n                const estimated = json.estimated\r\n                fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getForecastMatWeek\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json => {\r\n                        const forecast = json.forecast\r\n                        let tables = []\r\n                        let material = estimated[0].material_id\r\n                        const settings = {\r\n                            licenseKey: 'non-commercial-and-evaluation',\r\n                            colWidths: 40,\r\n                            rowHeaderWidth: 190\r\n                            //... other options\r\n                        }\r\n                        let weeks = []\r\n                        let est = {}\r\n                        let sumEst = {}\r\n                        let countEst = 0\r\n                        let forc = {}\r\n                        let col = []\r\n                        let sumEstCells = []\r\n                        for(let i = 0; i < estimated.length; i++){\r\n                            if(estimated[i].material_id === material){\r\n                                weeks.push(estimated[i].week.toString())\r\n                                est[estimated[i].week.toString()] = estimated[i].estimated\r\n                                forc[forecast[i].week.toString()] = forecast[i].estimated\r\n                                countEst += estimated[i].estimated\r\n                                sumEst[estimated[i].week.toString()] = countEst\r\n                                col.push({ data: estimated[i].week.toString(), type: \"numeric\"})\r\n                                sumEstCells.push({row: 2, col: i, readOnly:true})\r\n                            }else{\r\n                                tables.push(<div id=\"hot-app\"><text className=\"materials__title\">{estimated[i-1].name.toUpperCase()} Isometrics</text><div style={{marginTop:\"10px\"}}><HotTable\r\n                                data={[est, forc, sumEst]}\r\n                                colHeaders={weeks}\r\n                                rowHeaders={[\"Estimated\", \"Forecast\", \"Estimated progress\"]}\r\n                                width=\"2000\"\r\n                                height=\"200\"\r\n                                settings={settings} \r\n                                manualColumnResize={true}\r\n                                manualRowResize={true}\r\n                                columns= {col}\r\n                                filters={true}\r\n                                cell = {sumEstCells}\r\n                            /></div></div>)\r\n                            weeks = [estimated[i].week.toString()]\r\n                            est = {}\r\n                            forc = {}\r\n                            sumEst = {}\r\n                            countEst = estimated[i].estimated\r\n                            est[estimated[i].week.toString()] = estimated[i].estimated\r\n                            forc[forecast[i].week.toString()] = forecast[i].estimated\r\n                            sumEst[estimated[i].week.toString()] = countEst\r\n                            col = [{ data: estimated[i].week.toString(), type: \"numeric\"}]\r\n                            material = estimated[i].material_id\r\n                            }\r\n                        }\r\n                        tables.push(<div id=\"hot-app\"><text className=\"materials__title\">{estimated[estimated.length-1].name.toUpperCase()} Isometrics</text><div style={{marginTop:\"10px\"}}><HotTable\r\n                                data={[est, forc, sumEst]}\r\n                                colHeaders={weeks}\r\n                                rowHeaders={[\"Estimated\", \"Forecast\", \"Estimated progress\"]}\r\n                                width=\"2000\"\r\n                                height=\"200\"\r\n                                settings={settings} \r\n                                manualColumnResize={true}\r\n                                manualRowResize={true}\r\n                                columns= {col}\r\n                                filters={true}\r\n                                cell = {sumEstCells}\r\n                            /></div></div>)\r\n\r\n                        setTables(tables)\r\n                    })\r\n                })\r\n\r\n    }, [])\r\n\r\n    return(\r\n        <body>\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar/>\r\n            <button className=\"back__button\" onClick={()=>history.push('/'+process.env.REACT_APP_PROJECT+'/piping')} style={{width:\"175px\", marginLeft:\"100px\", marginTop: \"120px\"}}><img src={BackIcon} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"back__button__text\">Back</p></button>\r\n            <div className=\"graph__container\">\r\n                <div className=\"graph__container\">\r\n\r\n                </div>\r\n                <div className=\"materials__pc__container\">\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"materials__tables__container\">\r\n                {tables}\r\n            </div>\r\n        </body>\r\n    );\r\n};\r\n\r\nexport default PITRequests;"]},"metadata":{},"sourceType":"module"}