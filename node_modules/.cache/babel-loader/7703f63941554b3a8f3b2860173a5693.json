{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\isoControlGroupLineIdDataTable\\\\isoControlGroupLineIdDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IsoControlGroupLineIdDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      displayData: [],\n      filterData: [\"\", \"\", \"\"],\n      tab: this.props.currentTab,\n      role: this.props.currentRole,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      filters: []\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      render: text => text\n    });\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id.props.children);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }); //this.setState({ selectedRows: selectedRows });\n\n      this.props.onChange(ids);\n    };\n  }\n\n  unlock(filename) {\n    this.props.unlock(filename);\n  }\n\n  rename(newName, oldName) {\n    this.props.rename(newName, oldName);\n  }\n\n  componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/isoControlGroupLineId\", options).then(response => response.json()).then(async json => {\n      for (let i = 0; i < json.rows.length; i++) {\n        if (i % 2 === 0) {\n          json.rows[i].color = \"#fff\";\n        } else {\n          json.rows[i].color = \"#eee\";\n        }\n      }\n\n      let filterRow = [{\n        key: 0,\n        line_id: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Line ID\",\n            onChange: e => this.filter(0, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 43\n        }, this),\n        items: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Items\",\n            onChange: e => this.filter(1, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 185\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 180\n        }, this),\n        total_weight: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Total weight\",\n            onChange: e => this.filter(2, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 327\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 322\n        }, this)\n      }];\n      this.setState({\n        data: json.rows,\n        displayData: json.rows\n      });\n      await this.setState({\n        filters: filterRow\n      });\n    });\n  }\n\n  async filter(column, value) {\n    let fd = this.state.filterData;\n    fd[column] = value;\n    await this.setState({\n      filterData: fd\n    });\n    let auxDisplayData = this.state.data;\n    let resultData = [];\n    let fil,\n        exists = null;\n\n    for (let i = 0; i < auxDisplayData.length; i++) {\n      exists = true;\n\n      for (let column = 0; column < Object.keys(auxDisplayData[i]).length - 1; column++) {\n        fil = Object.keys(auxDisplayData[i])[column];\n\n        if (auxDisplayData[i][fil]) {\n          if (this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].toString().includes(this.state.filterData[column])) {\n            exists = false;\n            console.log(auxDisplayData[i][fil].toString(), this.state.filterData[column]);\n          }\n        } else {\n          exists = false;\n        }\n      }\n\n      if (exists) {\n        resultData.push(auxDisplayData[i]);\n      }\n    }\n\n    await this.setState({\n      displayData: resultData\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Line ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'line_id',\n      key: 'line_id',\n      ...this.getColumnSearchProps('line_id'),\n      sorter: {\n        compare: (a, b) => {\n          return a.line_id.localeCompare(b.line_id);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"ITEMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'num',\n      key: 'num',\n      ...this.getColumnSearchProps('num'),\n      sorter: {\n        compare: (a, b) => a.num.localeCompare(b.num)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Total weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'total_weight',\n      key: 'total_weight',\n      ...this.getColumnSearchProps('total_weight'),\n      sorter: {\n        compare: (a, b) => a.total_weight.localeCompare(b.total_weight)\n      }\n    }];\n    var totalElements = null;\n\n    if (this.state.data.length === 0) {\n      totalElements = null;\n    } else {\n      totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          columns: columns,\n          style: {\n            height: '540px'\n          },\n          dataSource: this.state.displayData,\n          scroll: {\n            y: 437\n          },\n          pagination: {\n            disabled: true,\n            defaultPageSize: 5000\n          },\n          size: \"small\",\n          rowClassName: record => record.color.replace('#', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"filter__table\",\n          pagination: {\n            disabled: true\n          },\n          scroll: {\n            y: 437\n          },\n          showHeader: false,\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.filters,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default IsoControlGroupLineIdDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/isoControlGroupLineIdDataTable/isoControlGroupLineIdDataTable.js"],"names":["React","Table","Input","Button","Space","SearchOutlined","IsoControlGroupLineIdDataTable","Component","state","searchText","searchedColumn","data","displayData","filterData","tab","props","currentTab","role","currentRole","selectedRows","selectedRowsKeys","updateData","username","acronyms","filters","getColumnSearchProps","dataIndex","render","text","handleReset","clearFilters","setState","onSelectChange","selectedRowKeys","ids","i","length","push","id","children","onChange","unlock","filename","rename","newName","oldName","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","color","filterRow","key","line_id","e","filter","target","value","items","total_weight","column","fd","auxDisplayData","resultData","fil","exists","Object","keys","toString","includes","console","log","columns","title","sorter","compare","a","b","localeCompare","num","totalElements","position","bottom","left","height","y","disabled","defaultPageSize","record","replace"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nclass IsoControlGroupLineIdDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    displayData: [],\r\n    filterData: [\"\", \"\", \"\"],\r\n    tab: this.props.currentTab,\r\n    role: this.props.currentRole,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    filters: []\r\n  };\r\n\r\n  unlock(filename){\r\n    this.props.unlock(filename)\r\n  }\r\n\r\n  rename(newName, oldName){\r\n    this.props.rename(newName, oldName)\r\n  }\r\n\r\n  componentDidMount(){\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/isoControlGroupLineId\", options)\r\n    .then(response => response.json())\r\n    .then(async json =>{\r\n        for(let i = 0; i < json.rows.length; i++){\r\n            if(i % 2 === 0){\r\n                json.rows[i].color = \"#fff\"\r\n            }else{\r\n                json.rows[i].color = \"#eee\"\r\n            }\r\n        }\r\n        let filterRow = [{key:0, line_id: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Line ID\" onChange={(e) => this.filter(0, e.target.value)}/></div>, items: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Items\" onChange={(e) => this.filter(1, e.target.value)}/></div>, total_weight: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Total weight\" onChange={(e) => this.filter(2,e.target.value)}/></div>}]\r\n             \r\n        this.setState({data : json.rows, displayData: json.rows});\r\n        await this.setState({filters : filterRow})\r\n    })\r\n        \r\n  }\r\n\r\n  async filter(column, value){\r\n    let fd = this.state.filterData\r\n    fd[column] = value\r\n    await this.setState({filterData: fd})\r\n\r\n    let auxDisplayData = this.state.data\r\n    let resultData = []\r\n    let fil, exists = null\r\n    for(let i = 0; i < auxDisplayData.length; i++){\r\n      exists = true\r\n      for(let column = 0; column < Object.keys(auxDisplayData[i]).length-1; column ++){\r\n        fil = Object.keys(auxDisplayData[i])[column]\r\n        if(auxDisplayData[i][fil]){\r\n          if(this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].toString().includes(this.state.filterData[column])){\r\n            exists = false\r\n            console.log(auxDisplayData[i][fil].toString(), this.state.filterData[column])\r\n          }\r\n        }else{\r\n          \r\n          exists = false\r\n        }\r\n          \r\n        \r\n      }\r\n      if(exists){\r\n        resultData.push(auxDisplayData[i])\r\n      }\r\n    }\r\n    await this.setState({displayData: resultData})\r\n  }\r\n\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    \r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n    \r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Line ID</center>,\r\n        dataIndex: 'line_id',\r\n        key: 'line_id',\r\n        ...this.getColumnSearchProps('line_id'),\r\n        sorter:{\r\n          compare: (a, b) => { return a.line_id.localeCompare(b.line_id)},\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">ITEMS</center>,\r\n        dataIndex: 'num',\r\n        key: 'num',\r\n        ...this.getColumnSearchProps('num'),\r\n        sorter:{\r\n          compare: (a, b) => a.num.localeCompare(b.num),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Total weight</div>,\r\n        dataIndex: 'total_weight',\r\n        key: 'total_weight',\r\n        ...this.getColumnSearchProps('total_weight'),\r\n        sorter: {\r\n          compare: (a, b) => a.total_weight.localeCompare(b.total_weight),\r\n        },\r\n      },\r\n    ];\r\n\r\n    \r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} columns={columns} style={{ height: '540px' }} dataSource={this.state.displayData} scroll={{y:437}}  pagination={{disabled:true, defaultPageSize:5000}} size=\"small\" rowClassName= {(record) => record.color.replace('#', '')}/>\r\n        <Table className=\"filter__table\" pagination={{disabled:true}} scroll={{y:437}} showHeader = {false} bordered = {true} columns={columns} dataSource={this.state.filters} size=\"small\"/>\r\n{\r\n          totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IsoControlGroupLineIdDataTable;"]},"metadata":{},"sourceType":"module"}