{"ast":null,"code":"function yScaleAnimation(fractionComplete, animationInfo) {\n  if (fractionComplete === 0) return;\n  const ctx = animationInfo.dest;\n  const sourceCanvas = animationInfo.source.canvas;\n  const base = animationInfo.animationBase;\n  const offsetY = base - base * fractionComplete;\n  ctx.drawImage(sourceCanvas, 0, 0, sourceCanvas.width, sourceCanvas.height, 0, offsetY, ctx.canvas.width / devicePixelBackingStoreRatio, fractionComplete * ctx.canvas.height / devicePixelBackingStoreRatio);\n}\n\nfunction xScaleAnimation(fractionComplete, animationInfo) {\n  if (fractionComplete === 0) return;\n  const ctx = animationInfo.dest;\n  const sourceCanvas = animationInfo.source.canvas;\n  const base = animationInfo.animationBase;\n  const offsetX = base - base * fractionComplete;\n  ctx.drawImage(sourceCanvas, 0, 0, sourceCanvas.width, sourceCanvas.height, offsetX, 0, fractionComplete * ctx.canvas.width / devicePixelBackingStoreRatio, ctx.canvas.height / devicePixelBackingStoreRatio);\n}\n\nfunction xClipAnimation(fractionComplete, animationInfo) {\n  if (fractionComplete === 0) return;\n  const ctx = animationInfo.dest;\n  const sourceCanvas = animationInfo.source.canvas;\n  ctx.save();\n  if (fractionComplete > 0) ctx.drawImage(sourceCanvas, 0, 0, sourceCanvas.width * fractionComplete, sourceCanvas.height, 0, 0, sourceCanvas.width * fractionComplete / devicePixelBackingStoreRatio, sourceCanvas.height / devicePixelBackingStoreRatio);\n  ctx.restore();\n}\n\nfunction fadeInAnimation(fractionComplete, animationInfo) {\n  if (fractionComplete === 0) return;\n  const ctx = animationInfo.dest;\n  const sourceCanvas = animationInfo.source.canvas;\n  ctx.save();\n  ctx.globalAlpha = fractionComplete;\n  ctx.drawImage(sourceCanvas, 0, 0, sourceCanvas.width, sourceCanvas.height, 0, 0, ctx.canvas.width / devicePixelBackingStoreRatio, ctx.canvas.height / devicePixelBackingStoreRatio);\n  ctx.restore();\n}\n\nconst easing = {\n  linear(t, b, c, d) {\n    return c * t / d + b;\n  },\n\n  easeOutQuad(t, b, c, d) {\n    return -c * (t /= d) * (t - 2) + b;\n  },\n\n  easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  },\n\n  easeInQuad(t, b, c, d) {\n    return c * (t /= d) * t + b;\n  },\n\n  easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n};\nexport default {\n  yScaleAnimation,\n  xScaleAnimation,\n  xClipAnimation,\n  fadeInAnimation,\n  easing\n};","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/canvasjs/src/helpers/animator.js"],"names":["yScaleAnimation","fractionComplete","animationInfo","ctx","dest","sourceCanvas","source","canvas","base","animationBase","offsetY","drawImage","width","height","devicePixelBackingStoreRatio","xScaleAnimation","offsetX","xClipAnimation","save","restore","fadeInAnimation","globalAlpha","easing","linear","t","b","c","d","easeOutQuad","easeOutQuart","easeInQuad","easeInQuart"],"mappings":"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","sourcesContent":["\r\nfunction yScaleAnimation(fractionComplete, animationInfo) {\r\n\r\n  if (fractionComplete === 0) return;\r\n\r\n  const ctx = animationInfo.dest;\r\n  const sourceCanvas = animationInfo.source.canvas;\r\n  const base = animationInfo.animationBase;\r\n\r\n  const offsetY = (base - base * fractionComplete);\r\n\r\n  ctx.drawImage(sourceCanvas, 0, 0, sourceCanvas.width, sourceCanvas.height, 0, offsetY,\r\n     ctx.canvas.width / devicePixelBackingStoreRatio, fractionComplete * ctx.canvas.height / devicePixelBackingStoreRatio);\r\n}\r\n\r\nfunction xScaleAnimation(fractionComplete, animationInfo) {\r\n\r\n  if (fractionComplete === 0) return;\r\n\r\n  const ctx = animationInfo.dest;\r\n  const sourceCanvas = animationInfo.source.canvas;\r\n  const base = animationInfo.animationBase;\r\n\r\n  const offsetX = (base - base * fractionComplete);\r\n\r\n  ctx.drawImage(sourceCanvas, 0, 0, sourceCanvas.width, sourceCanvas.height, offsetX, 0,\r\n    fractionComplete * ctx.canvas.width / devicePixelBackingStoreRatio, ctx.canvas.height / devicePixelBackingStoreRatio);\r\n}\r\n\r\nfunction xClipAnimation(fractionComplete, animationInfo) {\r\n\r\n  if (fractionComplete === 0) return;\r\n\r\n  const ctx = animationInfo.dest;\r\n  const sourceCanvas = animationInfo.source.canvas;\r\n\r\n  ctx.save();\r\n\r\n  if (fractionComplete > 0)\r\n    ctx.drawImage(sourceCanvas, 0, 0, sourceCanvas.width * fractionComplete, sourceCanvas.height, 0, 0,\r\n      sourceCanvas.width * fractionComplete / devicePixelBackingStoreRatio, sourceCanvas.height / devicePixelBackingStoreRatio);\r\n\r\n  ctx.restore();\r\n}\r\n\r\nfunction fadeInAnimation(fractionComplete, animationInfo) {\r\n\r\n  if (fractionComplete === 0) return;\r\n\r\n  const ctx = animationInfo.dest;\r\n  const sourceCanvas = animationInfo.source.canvas;\r\n\r\n  ctx.save();\r\n\r\n  ctx.globalAlpha = fractionComplete;\r\n\r\n  ctx.drawImage(sourceCanvas, 0, 0, sourceCanvas.width, sourceCanvas.height, 0, 0,\r\n    ctx.canvas.width / devicePixelBackingStoreRatio, ctx.canvas.height / devicePixelBackingStoreRatio);\r\n\r\n  ctx.restore();\r\n\r\n}\r\n\r\nconst easing = {\r\n\r\n  linear(t, b, c, d) {\r\n    return c * t / d + b;\r\n  },\r\n\r\n  easeOutQuad(t, b, c, d) {\r\n    return -c * (t /= d) * (t - 2) + b;\r\n  },\r\n\r\n  easeOutQuart (t, b, c, d) {\r\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n  },\r\n\r\n  easeInQuad(t, b, c, d) {\r\n    return c * (t /= d) * t + b;\r\n  },\r\n\r\n  easeInQuart(t, b, c, d) {\r\n    return c * (t /= d) * t * t * t + b;\r\n  }\r\n}\r\n\r\nexport default {\r\n\r\n  yScaleAnimation,\r\n  xScaleAnimation,\r\n  xClipAnimation,\r\n  fadeInAnimation,\r\n  easing\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}