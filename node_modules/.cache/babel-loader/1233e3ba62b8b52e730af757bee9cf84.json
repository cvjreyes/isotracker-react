{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { hasOwnProperty, objectEach } from \"../../helpers/object.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayReduce, arrayMap } from \"../../helpers/array.mjs\";\nimport { CellRange, CellCoords } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nimport { bottom, left, noBorders, right, top } from \"./contextMenuItem/index.mjs\";\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder } from \"./utils.mjs\";\nimport { detectSelectionType, normalizeSelectionFactory } from \"../../selection/index.mjs\";\nexport var PLUGIN_KEY = 'customBorders';\nexport var PLUGIN_PRIORITY = 90;\n/**\n * @class CustomBorders\n * @plugin CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [Custom Borders](https://handsontable.com/docs/demo-customizing-borders.html) demo for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    left: {},\n *    right: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     left: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     right: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\n\nexport var CustomBorders = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CustomBorders, _BasePlugin);\n\n  var _super = _createSuper(CustomBorders);\n\n  function CustomBorders(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CustomBorders);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.savedBorders = [];\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link CustomBorders#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(CustomBorders, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('init', function () {\n        return _this2.onAfterInit();\n      });\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hideBorders();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.changeBorderSettings();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Set custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {left: {width: 2, color: 'blue'}});\n     *\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * //  Selecting a cell range.\n     * hot.selectCell(0, 0, 2, 2);\n     * // Returning selected cells' range with the getSelectedRange method.\n     * customBordersPlugin.setBorders(hot.getSelectedRange(), {left: {hide: false, width: 2, color: 'blue'}});\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @param {object} borderObject Object with `top`, `right`, `bottom` and `left` properties.\n     */\n\n  }, {\n    key: \"setBorders\",\n    value: function setBorders(selectionRanges, borderObject) {\n      var _this3 = this;\n\n      var defaultBorderKeys = ['top', 'right', 'bottom', 'left'];\n      var borderKeys = borderObject ? Object.keys(borderObject) : defaultBorderKeys;\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma2 = _slicedToArray(_selectionSchemaNorma, 4),\n            rowStart = _selectionSchemaNorma2[0],\n            columnStart = _selectionSchemaNorma2[1],\n            rowEnd = _selectionSchemaNorma2[2],\n            columnEnd = _selectionSchemaNorma2[3];\n\n        var _loop = function _loop(row) {\n          var _loop2 = function _loop2(col) {\n            arrayEach(borderKeys, function (borderKey) {\n              _this3.prepareBorderFromCustomAdded(row, col, borderObject, borderKey);\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop2(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop(row);\n        }\n      });\n      /*\n      The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n      render, because that is the default for the TableView class.\n       The re-render is needed for borders on cells that did not have a border before.\n      The way this call works is that it calls Table.refreshSelections, which calls\n      Selection.getBorder, which creates a new instance of Border.\n       Seems wise to keep this single-direction flow of creating new Borders\n      */\n\n      this.hot.view.render();\n    }\n    /**\n     * Get custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.getBorders(hot.getSelectedRange());\n     * // Using without param - return all customBorders.\n     * customBordersPlugin.getBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @returns {object[]} Returns array of border objects.\n     */\n\n  }, {\n    key: \"getBorders\",\n    value: function getBorders(selectionRanges) {\n      var _this4 = this;\n\n      if (!Array.isArray(selectionRanges)) {\n        return this.savedBorders;\n      }\n\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      var selectedBorders = [];\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma3 = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma4 = _slicedToArray(_selectionSchemaNorma3, 4),\n            rowStart = _selectionSchemaNorma4[0],\n            columnStart = _selectionSchemaNorma4[1],\n            rowEnd = _selectionSchemaNorma4[2],\n            columnEnd = _selectionSchemaNorma4[3];\n\n        var _loop3 = function _loop3(row) {\n          var _loop4 = function _loop4(col) {\n            arrayEach(_this4.savedBorders, function (border) {\n              if (border.row === row && border.col === col) {\n                selectedBorders.push(border);\n              }\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop4(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop3(row);\n        }\n      });\n      return selectedBorders;\n    }\n    /**\n     * Clear custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.clearBorders(hot.getSelectedRange());\n     * // Using without param - clear all customBorders.\n     * customBordersPlugin.clearBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     */\n\n  }, {\n    key: \"clearBorders\",\n    value: function clearBorders(selectionRanges) {\n      var _this5 = this;\n\n      if (selectionRanges) {\n        this.setBorders(selectionRanges);\n      } else {\n        arrayEach(this.savedBorders, function (border) {\n          _this5.clearBordersFromSelectionSettings(border.id);\n\n          _this5.clearNullCellRange();\n\n          _this5.hot.removeCellMeta(border.row, border.col, 'borders');\n        });\n        this.savedBorders.length = 0;\n      }\n    }\n    /**\n     * Insert WalkontableSelection instance into Walkontable settings.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"insertBorderIntoSettings\",\n    value: function insertBorderIntoSettings(border, place) {\n      var hasSavedBorders = this.checkSavedBorders(border);\n\n      if (!hasSavedBorders) {\n        this.savedBorders.push(border);\n      }\n\n      var visualCellRange = new CellRange(new CellCoords(border.row, border.col));\n      var hasCustomSelections = this.checkCustomSelections(border, visualCellRange, place);\n\n      if (!hasCustomSelections) {\n        this.hot.selection.highlight.addCustomSelection({\n          border: border,\n          visualCellRange: visualCellRange\n        });\n      }\n    }\n    /**\n     * Prepare borders from setting (single cell).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} borderDescriptor Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAdded\",\n    value: function prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n      var nrOfRows = this.hot.countRows();\n      var nrOfColumns = this.hot.countCols();\n\n      if (row >= nrOfRows || column >= nrOfColumns) {\n        return;\n      }\n\n      var border = createEmptyBorders(row, column);\n\n      if (borderDescriptor) {\n        border = extendDefaultBorder(border, borderDescriptor);\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            Object.assign(customSelection.settings, borderDescriptor);\n            border.id = customSelection.settings.id;\n            border.left = customSelection.settings.left;\n            border.right = customSelection.settings.right;\n            border.top = customSelection.settings.top;\n            border.bottom = customSelection.settings.bottom;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      this.hot.setCellMeta(row, column, 'borders', border);\n      this.insertBorderIntoSettings(border, place);\n    }\n    /**\n     * Prepare borders from setting (object).\n     *\n     * @private\n     * @param {object} rowDecriptor Object with `range`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAddedRange\",\n    value: function prepareBorderFromCustomAddedRange(rowDecriptor) {\n      var _this6 = this;\n\n      var range = rowDecriptor.range;\n      var lastRowIndex = Math.min(range.to.row, this.hot.countRows() - 1);\n      var lastColumnIndex = Math.min(range.to.col, this.hot.countCols() - 1);\n      rangeEach(range.from.row, lastRowIndex, function (rowIndex) {\n        rangeEach(range.from.col, lastColumnIndex, function (colIndex) {\n          var border = createEmptyBorders(rowIndex, colIndex);\n          var add = 0;\n\n          if (rowIndex === range.from.row) {\n            if (hasOwnProperty(rowDecriptor, 'top')) {\n              add += 1;\n              border.top = rowDecriptor.top;\n            }\n          } // Please keep in mind that `range.to.row` may be beyond the table boundaries. The border won't be rendered.\n\n\n          if (rowIndex === range.to.row) {\n            if (hasOwnProperty(rowDecriptor, 'bottom')) {\n              add += 1;\n              border.bottom = rowDecriptor.bottom;\n            }\n          }\n\n          if (colIndex === range.from.col) {\n            if (hasOwnProperty(rowDecriptor, 'left')) {\n              add += 1;\n              border.left = rowDecriptor.left;\n            }\n          } // Please keep in mind that `range.to.col` may be beyond the table boundaries. The border won't be rendered.\n\n\n          if (colIndex === range.to.col) {\n            if (hasOwnProperty(rowDecriptor, 'right')) {\n              add += 1;\n              border.right = rowDecriptor.right;\n            }\n          }\n\n          if (add > 0) {\n            _this6.hot.setCellMeta(rowIndex, colIndex, 'borders', border);\n\n            _this6.insertBorderIntoSettings(border);\n          } else {// TODO sometimes it enters here. Why?\n          }\n        });\n      });\n    }\n    /**\n     * Remove border (triggered from context menu).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     */\n\n  }, {\n    key: \"removeAllBorders\",\n    value: function removeAllBorders(row, column) {\n      var borderId = createId(row, column);\n      this.spliceBorder(borderId);\n      this.clearBordersFromSelectionSettings(borderId);\n      this.clearNullCellRange();\n      this.hot.removeCellMeta(row, column, 'borders');\n    }\n    /**\n     * Set borders for each cell re. To border position.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"setBorder\",\n    value: function setBorder(row, column, place, remove) {\n      var bordersMeta = this.hot.getCellMeta(row, column).borders;\n\n      if (!bordersMeta || bordersMeta.border === void 0) {\n        bordersMeta = createEmptyBorders(row, column);\n      }\n\n      if (remove) {\n        bordersMeta[place] = createSingleEmptyBorder();\n        var hideCount = this.countHide(bordersMeta);\n\n        if (hideCount === 4) {\n          this.removeAllBorders(row, column);\n        } else {\n          var customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n          if (!customSelectionsChecker) {\n            this.insertBorderIntoSettings(bordersMeta);\n          }\n\n          this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n        }\n      } else {\n        bordersMeta[place] = createDefaultCustomBorder();\n\n        var _customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n        if (!_customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n\n        this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n      }\n    }\n    /**\n     * Prepare borders based on cell and border position.\n     *\n     * @private\n     * @param {CellRange[]} selected An array of CellRange objects.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"prepareBorder\",\n    value: function prepareBorder(selected, place, remove) {\n      var _this7 = this;\n\n      arrayEach(selected, function (_ref) {\n        var start = _ref.start,\n            end = _ref.end;\n\n        if (start.row === end.row && start.col === end.col) {\n          if (place === 'noBorders') {\n            _this7.removeAllBorders(start.row, start.col);\n          } else {\n            _this7.setBorder(start.row, start.col, place, remove);\n          }\n        } else {\n          switch (place) {\n            case 'noBorders':\n              rangeEach(start.col, end.col, function (colIndex) {\n                rangeEach(start.row, end.row, function (rowIndex) {\n                  _this7.removeAllBorders(rowIndex, colIndex);\n                });\n              });\n              break;\n\n            case 'top':\n              rangeEach(start.col, end.col, function (topCol) {\n                _this7.setBorder(start.row, topCol, place, remove);\n              });\n              break;\n\n            case 'right':\n              rangeEach(start.row, end.row, function (rowRight) {\n                _this7.setBorder(rowRight, end.col, place, remove);\n              });\n              break;\n\n            case 'bottom':\n              rangeEach(start.col, end.col, function (bottomCol) {\n                _this7.setBorder(end.row, bottomCol, place, remove);\n              });\n              break;\n\n            case 'left':\n              rangeEach(start.row, end.row, function (rowLeft) {\n                _this7.setBorder(rowLeft, start.col, place, remove);\n              });\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n    }\n    /**\n     * Create borders from settings.\n     *\n     * @private\n     * @param {Array} customBorders Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"createCustomBorders\",\n    value: function createCustomBorders(customBorders) {\n      var _this8 = this;\n\n      arrayEach(customBorders, function (customBorder) {\n        if (customBorder.range) {\n          _this8.prepareBorderFromCustomAddedRange(customBorder);\n        } else {\n          _this8.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, customBorder);\n        }\n      });\n    }\n    /**\n     * Count hide property in border object.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"countHide\",\n    value: function countHide(border) {\n      var values = Object.values(border);\n      return arrayReduce(values, function (accumulator, value) {\n        var result = accumulator;\n\n        if (value.hide) {\n          result += 1;\n        }\n\n        return result;\n      }, 0);\n    }\n    /**\n     * Clear borders settings from custom selections.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n\n  }, {\n    key: \"clearBordersFromSelectionSettings\",\n    value: function clearBordersFromSelectionSettings(borderId) {\n      var index = arrayMap(this.hot.selection.highlight.customSelections, function (customSelection) {\n        return customSelection.settings.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.hot.selection.highlight.customSelections[index].clear();\n      }\n    }\n    /**\n     * Clear cellRange with null value.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"clearNullCellRange\",\n    value: function clearNullCellRange() {\n      var _this9 = this;\n\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection, index) {\n        if (customSelection.cellRange === null) {\n          _this9.hot.selection.highlight.customSelections[index].destroy();\n\n          _this9.hot.selection.highlight.customSelections.splice(index, 1);\n\n          return false; // breaks forAll\n        }\n      });\n    }\n    /**\n     * Hide custom borders.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"hideBorders\",\n    value: function hideBorders() {\n      var _this10 = this;\n\n      arrayEach(this.savedBorders, function (border) {\n        _this10.clearBordersFromSelectionSettings(border.id);\n\n        _this10.clearNullCellRange();\n      });\n    }\n    /**\n     * Splice border from savedBorders.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n\n  }, {\n    key: \"spliceBorder\",\n    value: function spliceBorder(borderId) {\n      var index = arrayMap(this.savedBorders, function (border) {\n        return border.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.savedBorders.splice(index, 1);\n      }\n    }\n    /**\n     * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkSavedBorders\",\n    value: function checkSavedBorders(border) {\n      var _this11 = this;\n\n      var check = false;\n      var hideCount = this.countHide(border);\n\n      if (hideCount === 4) {\n        this.spliceBorder(border.id);\n        check = true;\n      } else {\n        arrayEach(this.savedBorders, function (savedBorder, index) {\n          if (border.id === savedBorder.id) {\n            _this11.savedBorders[index] = border;\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n     * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkCustomSelectionsFromContextMenu\",\n    value: function checkCustomSelectionsFromContextMenu(border, place, remove) {\n      var check = false;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n        if (border.id === customSelection.settings.id) {\n          objectEach(customSelection.instanceBorders, function (borderObject) {\n            borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n          });\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n      return check;\n    }\n    /**\n     * Check if an border already exists in the customSelections, and if true reset cellRange.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {CellRange} cellRange The selection range to check.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkCustomSelections\",\n    value: function checkCustomSelections(border, cellRange, place) {\n      var hideCount = this.countHide(border);\n      var check = false;\n\n      if (hideCount === 4) {\n        this.removeAllBorders(border.row, border.col);\n        check = true;\n      } else {\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            customSelection.visualCellRange = cellRange;\n            customSelection.commit();\n\n            if (place) {\n              objectEach(customSelection.instanceBorders, function (borderObject) {\n                borderObject.changeBorderStyle(place, border);\n              });\n            }\n\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n     * Change borders from settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"changeBorderSettings\",\n    value: function changeBorderSettings() {\n      var customBorders = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (Array.isArray(customBorders)) {\n        if (!customBorders.length) {\n          this.savedBorders = customBorders;\n        }\n\n        this.createCustomBorders(customBorders);\n      } else if (customBorders !== void 0) {\n        this.createCustomBorders(this.savedBorders);\n      }\n    }\n    /**\n     * Add border options to context menu.\n     *\n     * @private\n     * @param {object} defaultOptions Context menu items.\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(defaultOptions) {\n      if (!this.hot.getSettings()[PLUGIN_KEY]) {\n        return;\n      }\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'borders',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n        },\n        disabled: function disabled() {\n          return this.selection.isSelectedByCorner();\n        },\n        submenu: {\n          items: [top(this), right(this), bottom(this), left(this), noBorders(this)]\n        }\n      });\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.changeBorderSettings();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CustomBorders.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return CustomBorders;\n}(BasePlugin);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/customBorders/customBorders.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","len","length","arr2","_i","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","objectEach","rangeEach","arrayEach","arrayReduce","arrayMap","CellRange","CellCoords","C","bottom","left","noBorders","right","top","createId","createDefaultCustomBorder","createSingleEmptyBorder","createEmptyBorders","extendDefaultBorder","detectSelectionType","normalizeSelectionFactory","PLUGIN_KEY","PLUGIN_PRIORITY","CustomBorders","_BasePlugin","_super","hotInstance","_this","savedBorders","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","addHook","options","onAfterContextMenuDefaultOptions","onAfterInit","disablePlugin","hideBorders","updatePlugin","changeBorderSettings","setBorders","selectionRanges","borderObject","_this3","defaultBorderKeys","borderKeys","keys","selectionType","selectionSchemaNormalizer","selection","_selectionSchemaNorma","_selectionSchemaNorma2","rowStart","columnStart","rowEnd","columnEnd","_loop","row","_loop2","col","borderKey","prepareBorderFromCustomAdded","view","render","getBorders","_this4","selectedBorders","_selectionSchemaNorma3","_selectionSchemaNorma4","_loop3","_loop4","border","clearBorders","_this5","clearBordersFromSelectionSettings","id","clearNullCellRange","removeCellMeta","insertBorderIntoSettings","place","hasSavedBorders","checkSavedBorders","visualCellRange","hasCustomSelections","checkCustomSelections","highlight","addCustomSelection","column","borderDescriptor","nrOfRows","countRows","nrOfColumns","countCols","customSelections","customSelection","settings","assign","setCellMeta","prepareBorderFromCustomAddedRange","rowDecriptor","_this6","range","lastRowIndex","Math","min","to","lastColumnIndex","rowIndex","colIndex","add","removeAllBorders","borderId","spliceBorder","setBorder","remove","bordersMeta","getCellMeta","borders","hideCount","countHide","customSelectionsChecker","checkCustomSelectionsFromContextMenu","_customSelectionsChecker","prepareBorder","selected","_this7","_ref","start","end","topCol","rowRight","bottomCol","rowLeft","createCustomBorders","customBorders","_this8","customBorder","values","accumulator","hide","index","indexOf","clear","_this9","cellRange","destroy","splice","_this10","_this11","check","savedBorder","instanceBorders","toggleHiddenClass","commit","changeBorderStyle","defaultOptions","items","getTranslatedPhrase","CONTEXTMENU_ITEMS_BORDERS","disabled","isSelectedByCorner","submenu"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,SAASK,cAAT,CAAwBC,GAAxB,EAA6BC,CAA7B,EAAgC;AAAE,SAAOC,eAAe,CAACF,GAAD,CAAf,IAAwBG,qBAAqB,CAACH,GAAD,EAAMC,CAAN,CAA7C,IAAyDG,2BAA2B,CAACJ,GAAD,EAAMC,CAAN,CAApF,IAAgGI,gBAAgB,EAAvH;AAA4H;;AAE9J,SAASA,gBAAT,GAA4B;AAAE,QAAM,IAAIC,SAAJ,CAAc,2IAAd,CAAN;AAAmK;;AAEjM,SAASF,2BAAT,CAAqCG,CAArC,EAAwCC,MAAxC,EAAgD;AAAE,MAAI,CAACD,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOE,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAqC,MAAIE,CAAC,GAAGC,MAAM,CAACb,SAAP,CAAiBc,QAAjB,CAA0BC,IAA1B,CAA+BN,CAA/B,EAAkCO,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIJ,CAAC,KAAK,QAAN,IAAkBH,CAAC,CAACV,WAAxB,EAAqCa,CAAC,GAAGH,CAAC,CAACV,WAAF,CAAckB,IAAlB;AAAwB,MAAIL,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOM,KAAK,CAACC,IAAN,CAAWV,CAAX,CAAP;AAAsB,MAAIG,CAAC,KAAK,WAAN,IAAqB,2CAA2CQ,IAA3C,CAAgDR,CAAhD,CAAzB,EAA6E,OAAOD,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAsC;;AAEha,SAASC,iBAAT,CAA2BT,GAA3B,EAAgCmB,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGnB,GAAG,CAACoB,MAA7B,EAAqCD,GAAG,GAAGnB,GAAG,CAACoB,MAAV;;AAAkB,OAAK,IAAInB,CAAC,GAAG,CAAR,EAAWoB,IAAI,GAAG,IAAIL,KAAJ,CAAUG,GAAV,CAAvB,EAAuClB,CAAC,GAAGkB,GAA3C,EAAgDlB,CAAC,EAAjD,EAAqD;AAAEoB,IAAAA,IAAI,CAACpB,CAAD,CAAJ,GAAUD,GAAG,CAACC,CAAD,CAAb;AAAmB;;AAAC,SAAOoB,IAAP;AAAc;;AAEvL,SAASlB,qBAAT,CAA+BH,GAA/B,EAAoCC,CAApC,EAAuC;AAAE,MAAIqB,EAAE,GAAGtB,GAAG,KAAK,OAAOL,MAAP,KAAkB,WAAlB,IAAiCK,GAAG,CAACL,MAAM,CAACC,QAAR,CAApC,IAAyDI,GAAG,CAAC,YAAD,CAAjE,CAAZ;;AAA8F,MAAIsB,EAAE,IAAI,IAAV,EAAgB;AAAQ,MAAIC,IAAI,GAAG,EAAX;AAAe,MAAIC,EAAE,GAAG,IAAT;AAAe,MAAIC,EAAE,GAAG,KAAT;;AAAgB,MAAIC,EAAJ,EAAQC,EAAR;;AAAY,MAAI;AAAE,SAAKL,EAAE,GAAGA,EAAE,CAACT,IAAH,CAAQb,GAAR,CAAV,EAAwB,EAAEwB,EAAE,GAAG,CAACE,EAAE,GAAGJ,EAAE,CAACM,IAAH,EAAN,EAAiBC,IAAxB,CAAxB,EAAuDL,EAAE,GAAG,IAA5D,EAAkE;AAAED,MAAAA,IAAI,CAACO,IAAL,CAAUJ,EAAE,CAACK,KAAb;;AAAqB,UAAI9B,CAAC,IAAIsB,IAAI,CAACH,MAAL,KAAgBnB,CAAzB,EAA4B;AAAQ;AAAE,GAArI,CAAsI,OAAO+B,GAAP,EAAY;AAAEP,IAAAA,EAAE,GAAG,IAAL;AAAWE,IAAAA,EAAE,GAAGK,GAAL;AAAW,GAA1K,SAAmL;AAAE,QAAI;AAAE,UAAI,CAACR,EAAD,IAAOF,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiCA,EAAE,CAAC,QAAD,CAAF;AAAiB,KAAxD,SAAiE;AAAE,UAAIG,EAAJ,EAAQ,MAAME,EAAN;AAAW;AAAE;;AAAC,SAAOJ,IAAP;AAAc;;AAErf,SAASrB,eAAT,CAAyBF,GAAzB,EAA8B;AAAE,MAAIgB,KAAK,CAACiB,OAAN,CAAcjC,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAAa;;AAuBrE,SAASkC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAI9B,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAAS+B,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsC,KAAK,CAACnB,MAA1B,EAAkCnB,CAAC,EAAnC,EAAuC;AAAE,QAAIuC,UAAU,GAAGD,KAAK,CAACtC,CAAD,CAAtB;AAA2BuC,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BhC,IAAAA,MAAM,CAACiC,cAAP,CAAsBN,MAAtB,EAA8BE,UAAU,CAACK,GAAzC,EAA8CL,UAA9C;AAA4D;AAAE;;AAE7T,SAASM,YAAT,CAAsBV,WAAtB,EAAmCW,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBV,iBAAiB,CAACD,WAAW,CAACtC,SAAb,EAAwBiD,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBX,iBAAiB,CAACD,WAAD,EAAcY,WAAd,CAAjB;AAA6C,SAAOZ,WAAP;AAAqB;;AAEvN,SAASa,IAAT,CAAcX,MAAd,EAAsBY,QAAtB,EAAgCC,QAAhC,EAA0C;AAAE,MAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,GAA9C,EAAmD;AAAEJ,IAAAA,IAAI,GAAGG,OAAO,CAACC,GAAf;AAAqB,GAA1E,MAAgF;AAAEJ,IAAAA,IAAI,GAAG,SAASA,IAAT,CAAcX,MAAd,EAAsBY,QAAtB,EAAgCC,QAAhC,EAA0C;AAAE,UAAIG,IAAI,GAAGC,cAAc,CAACjB,MAAD,EAASY,QAAT,CAAzB;;AAA6C,UAAI,CAACI,IAAL,EAAW;AAAQ,UAAIE,IAAI,GAAG7C,MAAM,CAAC8C,wBAAP,CAAgCH,IAAhC,EAAsCJ,QAAtC,CAAX;;AAA4D,UAAIM,IAAI,CAACH,GAAT,EAAc;AAAE,eAAOG,IAAI,CAACH,GAAL,CAASxC,IAAT,CAAcsC,QAAd,CAAP;AAAiC;;AAAC,aAAOK,IAAI,CAACzB,KAAZ;AAAoB,KAArP;AAAwP;;AAAC,SAAOkB,IAAI,CAACX,MAAD,EAASY,QAAT,EAAmBC,QAAQ,IAAIb,MAA/B,CAAX;AAAoD;;AAE3a,SAASiB,cAAT,CAAwBG,MAAxB,EAAgCR,QAAhC,EAA0C;AAAE,SAAO,CAACvC,MAAM,CAACb,SAAP,CAAiB6D,cAAjB,CAAgC9C,IAAhC,CAAqC6C,MAArC,EAA6CR,QAA7C,CAAR,EAAgE;AAAEQ,IAAAA,MAAM,GAAGE,eAAe,CAACF,MAAD,CAAxB;AAAkC,QAAIA,MAAM,KAAK,IAAf,EAAqB;AAAQ;;AAAC,SAAOA,MAAP;AAAgB;;AAE9L,SAASG,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIzD,SAAJ,CAAc,oDAAd,CAAN;AAA4E;;AAACwD,EAAAA,QAAQ,CAAChE,SAAT,GAAqBa,MAAM,CAACqD,MAAP,CAAcD,UAAU,IAAIA,UAAU,CAACjE,SAAvC,EAAkD;AAAED,IAAAA,WAAW,EAAE;AAAEkC,MAAAA,KAAK,EAAE+B,QAAT;AAAmBnB,MAAAA,QAAQ,EAAE,IAA7B;AAAmCD,MAAAA,YAAY,EAAE;AAAjD;AAAf,GAAlD,CAArB;AAAkJ,MAAIqB,UAAJ,EAAgBE,eAAe,CAACH,QAAD,EAAWC,UAAX,CAAf;AAAwC;;AAEjY,SAASE,eAAT,CAAyB1D,CAAzB,EAA4B2D,CAA5B,EAA+B;AAAED,EAAAA,eAAe,GAAGtD,MAAM,CAACwD,cAAP,IAAyB,SAASF,eAAT,CAAyB1D,CAAzB,EAA4B2D,CAA5B,EAA+B;AAAE3D,IAAAA,CAAC,CAAC6D,SAAF,GAAcF,CAAd;AAAiB,WAAO3D,CAAP;AAAW,GAAxG;;AAA0G,SAAO0D,eAAe,CAAC1D,CAAD,EAAI2D,CAAJ,CAAtB;AAA+B;;AAE1K,SAASG,YAAT,CAAsBC,OAAtB,EAA+B;AAAE,MAAIC,yBAAyB,GAAGC,yBAAyB,EAAzD;;AAA6D,SAAO,SAASC,oBAAT,GAAgC;AAAE,QAAIC,KAAK,GAAGd,eAAe,CAACU,OAAD,CAA3B;AAAA,QAAsCK,MAAtC;;AAA8C,QAAIJ,yBAAJ,EAA+B;AAAE,UAAIK,SAAS,GAAGhB,eAAe,CAAC,IAAD,CAAf,CAAsB/D,WAAtC;;AAAmD8E,MAAAA,MAAM,GAAGvB,OAAO,CAACyB,SAAR,CAAkBH,KAAlB,EAAyBI,SAAzB,EAAoCF,SAApC,CAAT;AAA0D,KAA9I,MAAoJ;AAAED,MAAAA,MAAM,GAAGD,KAAK,CAACK,KAAN,CAAY,IAAZ,EAAkBD,SAAlB,CAAT;AAAwC;;AAAC,WAAOE,0BAA0B,CAAC,IAAD,EAAOL,MAAP,CAAjC;AAAkD,GAAxU;AAA2U;;AAEza,SAASK,0BAAT,CAAoCC,IAApC,EAA0CpE,IAA1C,EAAgD;AAAE,MAAIA,IAAI,KAAKpB,OAAO,CAACoB,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAP,KAAgB,UAAnD,CAAR,EAAwE;AAAE,WAAOA,IAAP;AAAc;;AAAC,SAAOqE,sBAAsB,CAACD,IAAD,CAA7B;AAAsC;;AAEjL,SAASC,sBAAT,CAAgCD,IAAhC,EAAsC;AAAE,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAE,UAAM,IAAIE,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOF,IAAP;AAAc;;AAEtK,SAAST,yBAAT,GAAqC;AAAE,MAAI,OAAOpB,OAAP,KAAmB,WAAnB,IAAkC,CAACA,OAAO,CAACyB,SAA/C,EAA0D,OAAO,KAAP;AAAc,MAAIzB,OAAO,CAACyB,SAAR,CAAkBO,IAAtB,EAA4B,OAAO,KAAP;AAAc,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC,OAAO,IAAP;;AAAa,MAAI;AAAEC,IAAAA,OAAO,CAACxF,SAAR,CAAkByF,OAAlB,CAA0B1E,IAA1B,CAA+BuC,OAAO,CAACyB,SAAR,CAAkBS,OAAlB,EAA2B,EAA3B,EAA+B,YAAY,CAAE,CAA7C,CAA/B;AAAgF,WAAO,IAAP;AAAc,GAApG,CAAqG,OAAOE,CAAP,EAAU;AAAE,WAAO,KAAP;AAAe;AAAE;;AAEzU,SAAS5B,eAAT,CAAyBrD,CAAzB,EAA4B;AAAEqD,EAAAA,eAAe,GAAGjD,MAAM,CAACwD,cAAP,GAAwBxD,MAAM,CAAC8E,cAA/B,GAAgD,SAAS7B,eAAT,CAAyBrD,CAAzB,EAA4B;AAAE,WAAOA,CAAC,CAAC6D,SAAF,IAAezD,MAAM,CAAC8E,cAAP,CAAsBlF,CAAtB,CAAtB;AAAiD,GAAjJ;AAAmJ,SAAOqD,eAAe,CAACrD,CAAD,CAAtB;AAA4B;;AAE7M,SAASmF,UAAT,QAA2B,mBAA3B;AACA,SAAS/B,cAAT,EAAyBgC,UAAzB,QAA2C,0BAA3C;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,QAAiD,yBAAjD;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,0CAAtC;AACA,OAAO,KAAKC,CAAZ,MAAmB,0BAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,GAAzC,QAAoD,6BAApD;AACA,SAASC,QAAT,EAAmBC,yBAAnB,EAA8CC,uBAA9C,EAAuEC,kBAAvE,EAA2FC,mBAA3F,QAAsH,aAAtH;AACA,SAASC,mBAAT,EAA8BC,yBAA9B,QAA+D,2BAA/D;AACA,OAAO,IAAIC,UAAU,GAAG,eAAjB;AACP,OAAO,IAAIC,eAAe,GAAG,EAAtB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,aAAa,GAAG,aAAa,UAAUC,WAAV,EAAuB;AAC7DrD,EAAAA,SAAS,CAACoD,aAAD,EAAgBC,WAAhB,CAAT;;AAEA,MAAIC,MAAM,GAAG9C,YAAY,CAAC4C,aAAD,CAAzB;;AAEA,WAASA,aAAT,CAAuBG,WAAvB,EAAoC;AAClC,QAAIC,KAAJ;;AAEAnF,IAAAA,eAAe,CAAC,IAAD,EAAO+E,aAAP,CAAf;;AAEAI,IAAAA,KAAK,GAAGF,MAAM,CAACtG,IAAP,CAAY,IAAZ,EAAkBuG,WAAlB,CAAR;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEIC,IAAAA,KAAK,CAACC,YAAN,GAAqB,EAArB;AACA,WAAOD,KAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;;;AAGEvE,EAAAA,YAAY,CAACmE,aAAD,EAAgB,CAAC;AAC3BpE,IAAAA,GAAG,EAAE,WADsB;AAE3Bd,IAAAA,KAAK,EAAE,SAASwF,SAAT,GAAqB;AAC1B,aAAO,CAAC,CAAC,KAAKC,GAAL,CAASC,WAAT,GAAuBV,UAAvB,CAAT;AACD;AACD;AACJ;AACA;;AAP+B,GAAD,EASzB;AACDlE,IAAAA,GAAG,EAAE,cADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS2F,YAAT,GAAwB;AAC7B,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAI,KAAKC,OAAT,EAAkB;AAChB;AACD;;AAED,WAAKC,OAAL,CAAa,gCAAb,EAA+C,UAAUC,OAAV,EAAmB;AAChE,eAAOH,MAAM,CAACI,gCAAP,CAAwCD,OAAxC,CAAP;AACD,OAFD;AAGA,WAAKD,OAAL,CAAa,MAAb,EAAqB,YAAY;AAC/B,eAAOF,MAAM,CAACK,WAAP,EAAP;AACD,OAFD;;AAIA/E,MAAAA,IAAI,CAACW,eAAe,CAACqD,aAAa,CAACnH,SAAf,CAAhB,EAA2C,cAA3C,EAA2D,IAA3D,CAAJ,CAAqEe,IAArE,CAA0E,IAA1E;AACD;AACD;AACJ;AACA;;AApBK,GATyB,EA+BzB;AACDgC,IAAAA,GAAG,EAAE,eADJ;AAEDd,IAAAA,KAAK,EAAE,SAASkG,aAAT,GAAyB;AAC9B,WAAKC,WAAL;;AAEAjF,MAAAA,IAAI,CAACW,eAAe,CAACqD,aAAa,CAACnH,SAAf,CAAhB,EAA2C,eAA3C,EAA4D,IAA5D,CAAJ,CAAsEe,IAAtE,CAA2E,IAA3E;AACD;AACD;AACJ;AACA;;AATK,GA/ByB,EA0CzB;AACDgC,IAAAA,GAAG,EAAE,cADJ;AAEDd,IAAAA,KAAK,EAAE,SAASoG,YAAT,GAAwB;AAC7B,WAAKF,aAAL;AACA,WAAKP,YAAL;AACA,WAAKU,oBAAL;;AAEAnF,MAAAA,IAAI,CAACW,eAAe,CAACqD,aAAa,CAACnH,SAAf,CAAhB,EAA2C,cAA3C,EAA2D,IAA3D,CAAJ,CAAqEe,IAArE,CAA0E,IAA1E;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5BK,GA1CyB,EAwEzB;AACDgC,IAAAA,GAAG,EAAE,YADJ;AAEDd,IAAAA,KAAK,EAAE,SAASsG,UAAT,CAAoBC,eAApB,EAAqCC,YAArC,EAAmD;AACxD,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIC,iBAAiB,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAxB;AACA,UAAIC,UAAU,GAAGH,YAAY,GAAG5H,MAAM,CAACgI,IAAP,CAAYJ,YAAZ,CAAH,GAA+BE,iBAA5D;AACA,UAAIG,aAAa,GAAG/B,mBAAmB,CAACyB,eAAD,CAAvC;AACA,UAAIO,yBAAyB,GAAG/B,yBAAyB,CAAC8B,aAAD,CAAzD;AACA/C,MAAAA,SAAS,CAACyC,eAAD,EAAkB,UAAUQ,SAAV,EAAqB;AAC9C,YAAIC,qBAAqB,GAAGF,yBAAyB,CAACC,SAAD,CAArD;AAAA,YACIE,sBAAsB,GAAGjJ,cAAc,CAACgJ,qBAAD,EAAwB,CAAxB,CAD3C;AAAA,YAEIE,QAAQ,GAAGD,sBAAsB,CAAC,CAAD,CAFrC;AAAA,YAGIE,WAAW,GAAGF,sBAAsB,CAAC,CAAD,CAHxC;AAAA,YAIIG,MAAM,GAAGH,sBAAsB,CAAC,CAAD,CAJnC;AAAA,YAKII,SAAS,GAAGJ,sBAAsB,CAAC,CAAD,CALtC;;AAOA,YAAIK,KAAK,GAAG,SAASA,KAAT,CAAeC,GAAf,EAAoB;AAC9B,cAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAChC3D,YAAAA,SAAS,CAAC6C,UAAD,EAAa,UAAUe,SAAV,EAAqB;AACzCjB,cAAAA,MAAM,CAACkB,4BAAP,CAAoCJ,GAApC,EAAyCE,GAAzC,EAA8CjB,YAA9C,EAA4DkB,SAA5D;AACD,aAFQ,CAAT;AAGD,WAJD;;AAMA,eAAK,IAAID,GAAG,GAAGN,WAAf,EAA4BM,GAAG,IAAIJ,SAAnC,EAA8CI,GAAG,IAAI,CAArD,EAAwD;AACtDD,YAAAA,MAAM,CAACC,GAAD,CAAN;AACD;AACF,SAVD;;AAYA,aAAK,IAAIF,GAAG,GAAGL,QAAf,EAAyBK,GAAG,IAAIH,MAAhC,EAAwCG,GAAG,IAAI,CAA/C,EAAkD;AAChDD,UAAAA,KAAK,CAACC,GAAD,CAAL;AACD;AACF,OAvBQ,CAAT;AAwBA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,WAAK9B,GAAL,CAASmC,IAAT,CAAcC,MAAd;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7DK,GAxEyB,EAuIzB;AACD/G,IAAAA,GAAG,EAAE,YADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS8H,UAAT,CAAoBvB,eAApB,EAAqC;AAC1C,UAAIwB,MAAM,GAAG,IAAb;;AAEA,UAAI,CAAC9I,KAAK,CAACiB,OAAN,CAAcqG,eAAd,CAAL,EAAqC;AACnC,eAAO,KAAKhB,YAAZ;AACD;;AAED,UAAIsB,aAAa,GAAG/B,mBAAmB,CAACyB,eAAD,CAAvC;AACA,UAAIO,yBAAyB,GAAG/B,yBAAyB,CAAC8B,aAAD,CAAzD;AACA,UAAImB,eAAe,GAAG,EAAtB;AACAlE,MAAAA,SAAS,CAACyC,eAAD,EAAkB,UAAUQ,SAAV,EAAqB;AAC9C,YAAIkB,sBAAsB,GAAGnB,yBAAyB,CAACC,SAAD,CAAtD;AAAA,YACImB,sBAAsB,GAAGlK,cAAc,CAACiK,sBAAD,EAAyB,CAAzB,CAD3C;AAAA,YAEIf,QAAQ,GAAGgB,sBAAsB,CAAC,CAAD,CAFrC;AAAA,YAGIf,WAAW,GAAGe,sBAAsB,CAAC,CAAD,CAHxC;AAAA,YAIId,MAAM,GAAGc,sBAAsB,CAAC,CAAD,CAJnC;AAAA,YAKIb,SAAS,GAAGa,sBAAsB,CAAC,CAAD,CALtC;;AAOA,YAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBZ,GAAhB,EAAqB;AAChC,cAAIa,MAAM,GAAG,SAASA,MAAT,CAAgBX,GAAhB,EAAqB;AAChC3D,YAAAA,SAAS,CAACiE,MAAM,CAACxC,YAAR,EAAsB,UAAU8C,MAAV,EAAkB;AAC/C,kBAAIA,MAAM,CAACd,GAAP,KAAeA,GAAf,IAAsBc,MAAM,CAACZ,GAAP,KAAeA,GAAzC,EAA8C;AAC5CO,gBAAAA,eAAe,CAACjI,IAAhB,CAAqBsI,MAArB;AACD;AACF,aAJQ,CAAT;AAKD,WAND;;AAQA,eAAK,IAAIZ,GAAG,GAAGN,WAAf,EAA4BM,GAAG,IAAIJ,SAAnC,EAA8CI,GAAG,IAAI,CAArD,EAAwD;AACtDW,YAAAA,MAAM,CAACX,GAAD,CAAN;AACD;AACF,SAZD;;AAcA,aAAK,IAAIF,GAAG,GAAGL,QAAf,EAAyBK,GAAG,IAAIH,MAAhC,EAAwCG,GAAG,IAAI,CAA/C,EAAkD;AAChDY,UAAAA,MAAM,CAACZ,GAAD,CAAN;AACD;AACF,OAzBQ,CAAT;AA0BA,aAAOS,eAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxDK,GAvIyB,EAiMzB;AACDlH,IAAAA,GAAG,EAAE,cADJ;AAEDd,IAAAA,KAAK,EAAE,SAASsI,YAAT,CAAsB/B,eAAtB,EAAuC;AAC5C,UAAIgC,MAAM,GAAG,IAAb;;AAEA,UAAIhC,eAAJ,EAAqB;AACnB,aAAKD,UAAL,CAAgBC,eAAhB;AACD,OAFD,MAEO;AACLzC,QAAAA,SAAS,CAAC,KAAKyB,YAAN,EAAoB,UAAU8C,MAAV,EAAkB;AAC7CE,UAAAA,MAAM,CAACC,iCAAP,CAAyCH,MAAM,CAACI,EAAhD;;AAEAF,UAAAA,MAAM,CAACG,kBAAP;;AAEAH,UAAAA,MAAM,CAAC9C,GAAP,CAAWkD,cAAX,CAA0BN,MAAM,CAACd,GAAjC,EAAsCc,MAAM,CAACZ,GAA7C,EAAkD,SAAlD;AACD,SANQ,CAAT;AAOA,aAAKlC,YAAL,CAAkBlG,MAAlB,GAA2B,CAA3B;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAxBK,GAjMyB,EA2NzB;AACDyB,IAAAA,GAAG,EAAE,0BADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS4I,wBAAT,CAAkCP,MAAlC,EAA0CQ,KAA1C,EAAiD;AACtD,UAAIC,eAAe,GAAG,KAAKC,iBAAL,CAAuBV,MAAvB,CAAtB;;AAEA,UAAI,CAACS,eAAL,EAAsB;AACpB,aAAKvD,YAAL,CAAkBxF,IAAlB,CAAuBsI,MAAvB;AACD;;AAED,UAAIW,eAAe,GAAG,IAAI/E,SAAJ,CAAc,IAAIC,UAAJ,CAAemE,MAAM,CAACd,GAAtB,EAA2Bc,MAAM,CAACZ,GAAlC,CAAd,CAAtB;AACA,UAAIwB,mBAAmB,GAAG,KAAKC,qBAAL,CAA2Bb,MAA3B,EAAmCW,eAAnC,EAAoDH,KAApD,CAA1B;;AAEA,UAAI,CAACI,mBAAL,EAA0B;AACxB,aAAKxD,GAAL,CAASsB,SAAT,CAAmBoC,SAAnB,CAA6BC,kBAA7B,CAAgD;AAC9Cf,UAAAA,MAAM,EAAEA,MADsC;AAE9CW,UAAAA,eAAe,EAAEA;AAF6B,SAAhD;AAID;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3BK,GA3NyB,EAwPzB;AACDlI,IAAAA,GAAG,EAAE,8BADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS2H,4BAAT,CAAsCJ,GAAtC,EAA2C8B,MAA3C,EAAmDC,gBAAnD,EAAqET,KAArE,EAA4E;AACjF,UAAIU,QAAQ,GAAG,KAAK9D,GAAL,CAAS+D,SAAT,EAAf;AACA,UAAIC,WAAW,GAAG,KAAKhE,GAAL,CAASiE,SAAT,EAAlB;;AAEA,UAAInC,GAAG,IAAIgC,QAAP,IAAmBF,MAAM,IAAII,WAAjC,EAA8C;AAC5C;AACD;;AAED,UAAIpB,MAAM,GAAGzD,kBAAkB,CAAC2C,GAAD,EAAM8B,MAAN,CAA/B;;AAEA,UAAIC,gBAAJ,EAAsB;AACpBjB,QAAAA,MAAM,GAAGxD,mBAAmB,CAACwD,MAAD,EAASiB,gBAAT,CAA5B;AACAxF,QAAAA,SAAS,CAAC,KAAK2B,GAAL,CAASsB,SAAT,CAAmBoC,SAAnB,CAA6BQ,gBAA9B,EAAgD,UAAUC,eAAV,EAA2B;AAClF,cAAIvB,MAAM,CAACI,EAAP,KAAcmB,eAAe,CAACC,QAAhB,CAAyBpB,EAA3C,EAA+C;AAC7C7J,YAAAA,MAAM,CAACkL,MAAP,CAAcF,eAAe,CAACC,QAA9B,EAAwCP,gBAAxC;AACAjB,YAAAA,MAAM,CAACI,EAAP,GAAYmB,eAAe,CAACC,QAAhB,CAAyBpB,EAArC;AACAJ,YAAAA,MAAM,CAAChE,IAAP,GAAcuF,eAAe,CAACC,QAAhB,CAAyBxF,IAAvC;AACAgE,YAAAA,MAAM,CAAC9D,KAAP,GAAeqF,eAAe,CAACC,QAAhB,CAAyBtF,KAAxC;AACA8D,YAAAA,MAAM,CAAC7D,GAAP,GAAaoF,eAAe,CAACC,QAAhB,CAAyBrF,GAAtC;AACA6D,YAAAA,MAAM,CAACjE,MAAP,GAAgBwF,eAAe,CAACC,QAAhB,CAAyBzF,MAAzC;AACA,mBAAO,KAAP,CAP6C,CAO/B;AACf;AACF,SAVQ,CAAT;AAWD;;AAED,WAAKqB,GAAL,CAASsE,WAAT,CAAqBxC,GAArB,EAA0B8B,MAA1B,EAAkC,SAAlC,EAA6ChB,MAA7C;AACA,WAAKO,wBAAL,CAA8BP,MAA9B,EAAsCQ,KAAtC;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;;AAnCK,GAxPyB,EA6RzB;AACD/H,IAAAA,GAAG,EAAE,mCADJ;AAEDd,IAAAA,KAAK,EAAE,SAASgK,iCAAT,CAA2CC,YAA3C,EAAyD;AAC9D,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIC,KAAK,GAAGF,YAAY,CAACE,KAAzB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,CAACI,EAAN,CAAShD,GAAlB,EAAuB,KAAK9B,GAAL,CAAS+D,SAAT,KAAuB,CAA9C,CAAnB;AACA,UAAIgB,eAAe,GAAGH,IAAI,CAACC,GAAL,CAASH,KAAK,CAACI,EAAN,CAAS9C,GAAlB,EAAuB,KAAKhC,GAAL,CAASiE,SAAT,KAAuB,CAA9C,CAAtB;AACA7F,MAAAA,SAAS,CAACsG,KAAK,CAACjL,IAAN,CAAWqI,GAAZ,EAAiB6C,YAAjB,EAA+B,UAAUK,QAAV,EAAoB;AAC1D5G,QAAAA,SAAS,CAACsG,KAAK,CAACjL,IAAN,CAAWuI,GAAZ,EAAiB+C,eAAjB,EAAkC,UAAUE,QAAV,EAAoB;AAC7D,cAAIrC,MAAM,GAAGzD,kBAAkB,CAAC6F,QAAD,EAAWC,QAAX,CAA/B;AACA,cAAIC,GAAG,GAAG,CAAV;;AAEA,cAAIF,QAAQ,KAAKN,KAAK,CAACjL,IAAN,CAAWqI,GAA5B,EAAiC;AAC/B,gBAAI3F,cAAc,CAACqI,YAAD,EAAe,KAAf,CAAlB,EAAyC;AACvCU,cAAAA,GAAG,IAAI,CAAP;AACAtC,cAAAA,MAAM,CAAC7D,GAAP,GAAayF,YAAY,CAACzF,GAA1B;AACD;AACF,WAT4D,CAS3D;;;AAGF,cAAIiG,QAAQ,KAAKN,KAAK,CAACI,EAAN,CAAShD,GAA1B,EAA+B;AAC7B,gBAAI3F,cAAc,CAACqI,YAAD,EAAe,QAAf,CAAlB,EAA4C;AAC1CU,cAAAA,GAAG,IAAI,CAAP;AACAtC,cAAAA,MAAM,CAACjE,MAAP,GAAgB6F,YAAY,CAAC7F,MAA7B;AACD;AACF;;AAED,cAAIsG,QAAQ,KAAKP,KAAK,CAACjL,IAAN,CAAWuI,GAA5B,EAAiC;AAC/B,gBAAI7F,cAAc,CAACqI,YAAD,EAAe,MAAf,CAAlB,EAA0C;AACxCU,cAAAA,GAAG,IAAI,CAAP;AACAtC,cAAAA,MAAM,CAAChE,IAAP,GAAc4F,YAAY,CAAC5F,IAA3B;AACD;AACF,WAxB4D,CAwB3D;;;AAGF,cAAIqG,QAAQ,KAAKP,KAAK,CAACI,EAAN,CAAS9C,GAA1B,EAA+B;AAC7B,gBAAI7F,cAAc,CAACqI,YAAD,EAAe,OAAf,CAAlB,EAA2C;AACzCU,cAAAA,GAAG,IAAI,CAAP;AACAtC,cAAAA,MAAM,CAAC9D,KAAP,GAAe0F,YAAY,CAAC1F,KAA5B;AACD;AACF;;AAED,cAAIoG,GAAG,GAAG,CAAV,EAAa;AACXT,YAAAA,MAAM,CAACzE,GAAP,CAAWsE,WAAX,CAAuBU,QAAvB,EAAiCC,QAAjC,EAA2C,SAA3C,EAAsDrC,MAAtD;;AAEA6B,YAAAA,MAAM,CAACtB,wBAAP,CAAgCP,MAAhC;AACD,WAJD,MAIO,CAAC;AACP;AACF,SAxCQ,CAAT;AAyCD,OA1CQ,CAAT;AA2CD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AA1DK,GA7RyB,EAyVzB;AACDvH,IAAAA,GAAG,EAAE,kBADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS4K,gBAAT,CAA0BrD,GAA1B,EAA+B8B,MAA/B,EAAuC;AAC5C,UAAIwB,QAAQ,GAAGpG,QAAQ,CAAC8C,GAAD,EAAM8B,MAAN,CAAvB;AACA,WAAKyB,YAAL,CAAkBD,QAAlB;AACA,WAAKrC,iCAAL,CAAuCqC,QAAvC;AACA,WAAKnC,kBAAL;AACA,WAAKjD,GAAL,CAASkD,cAAT,CAAwBpB,GAAxB,EAA6B8B,MAA7B,EAAqC,SAArC;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBK,GAzVyB,EA4WzB;AACDvI,IAAAA,GAAG,EAAE,WADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS+K,SAAT,CAAmBxD,GAAnB,EAAwB8B,MAAxB,EAAgCR,KAAhC,EAAuCmC,MAAvC,EAA+C;AACpD,UAAIC,WAAW,GAAG,KAAKxF,GAAL,CAASyF,WAAT,CAAqB3D,GAArB,EAA0B8B,MAA1B,EAAkC8B,OAApD;;AAEA,UAAI,CAACF,WAAD,IAAgBA,WAAW,CAAC5C,MAAZ,KAAuB,KAAK,CAAhD,EAAmD;AACjD4C,QAAAA,WAAW,GAAGrG,kBAAkB,CAAC2C,GAAD,EAAM8B,MAAN,CAAhC;AACD;;AAED,UAAI2B,MAAJ,EAAY;AACVC,QAAAA,WAAW,CAACpC,KAAD,CAAX,GAAqBlE,uBAAuB,EAA5C;AACA,YAAIyG,SAAS,GAAG,KAAKC,SAAL,CAAeJ,WAAf,CAAhB;;AAEA,YAAIG,SAAS,KAAK,CAAlB,EAAqB;AACnB,eAAKR,gBAAL,CAAsBrD,GAAtB,EAA2B8B,MAA3B;AACD,SAFD,MAEO;AACL,cAAIiC,uBAAuB,GAAG,KAAKC,oCAAL,CAA0CN,WAA1C,EAAuDpC,KAAvD,EAA8DmC,MAA9D,CAA9B;;AAEA,cAAI,CAACM,uBAAL,EAA8B;AAC5B,iBAAK1C,wBAAL,CAA8BqC,WAA9B;AACD;;AAED,eAAKxF,GAAL,CAASsE,WAAT,CAAqBxC,GAArB,EAA0B8B,MAA1B,EAAkC,SAAlC,EAA6C4B,WAA7C;AACD;AACF,OAfD,MAeO;AACLA,QAAAA,WAAW,CAACpC,KAAD,CAAX,GAAqBnE,yBAAyB,EAA9C;;AAEA,YAAI8G,wBAAwB,GAAG,KAAKD,oCAAL,CAA0CN,WAA1C,EAAuDpC,KAAvD,EAA8DmC,MAA9D,CAA/B;;AAEA,YAAI,CAACQ,wBAAL,EAA+B;AAC7B,eAAK5C,wBAAL,CAA8BqC,WAA9B;AACD;;AAED,aAAKxF,GAAL,CAASsE,WAAT,CAAqBxC,GAArB,EAA0B8B,MAA1B,EAAkC,SAAlC,EAA6C4B,WAA7C;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AA3CK,GA5WyB,EAyZzB;AACDnK,IAAAA,GAAG,EAAE,eADJ;AAEDd,IAAAA,KAAK,EAAE,SAASyL,aAAT,CAAuBC,QAAvB,EAAiC7C,KAAjC,EAAwCmC,MAAxC,EAAgD;AACrD,UAAIW,MAAM,GAAG,IAAb;;AAEA7H,MAAAA,SAAS,CAAC4H,QAAD,EAAW,UAAUE,IAAV,EAAgB;AAClC,YAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,YACIC,GAAG,GAAGF,IAAI,CAACE,GADf;;AAGA,YAAID,KAAK,CAACtE,GAAN,KAAcuE,GAAG,CAACvE,GAAlB,IAAyBsE,KAAK,CAACpE,GAAN,KAAcqE,GAAG,CAACrE,GAA/C,EAAoD;AAClD,cAAIoB,KAAK,KAAK,WAAd,EAA2B;AACzB8C,YAAAA,MAAM,CAACf,gBAAP,CAAwBiB,KAAK,CAACtE,GAA9B,EAAmCsE,KAAK,CAACpE,GAAzC;AACD,WAFD,MAEO;AACLkE,YAAAA,MAAM,CAACZ,SAAP,CAAiBc,KAAK,CAACtE,GAAvB,EAA4BsE,KAAK,CAACpE,GAAlC,EAAuCoB,KAAvC,EAA8CmC,MAA9C;AACD;AACF,SAND,MAMO;AACL,kBAAQnC,KAAR;AACE,iBAAK,WAAL;AACEhF,cAAAA,SAAS,CAACgI,KAAK,CAACpE,GAAP,EAAYqE,GAAG,CAACrE,GAAhB,EAAqB,UAAUiD,QAAV,EAAoB;AAChD7G,gBAAAA,SAAS,CAACgI,KAAK,CAACtE,GAAP,EAAYuE,GAAG,CAACvE,GAAhB,EAAqB,UAAUkD,QAAV,EAAoB;AAChDkB,kBAAAA,MAAM,CAACf,gBAAP,CAAwBH,QAAxB,EAAkCC,QAAlC;AACD,iBAFQ,CAAT;AAGD,eAJQ,CAAT;AAKA;;AAEF,iBAAK,KAAL;AACE7G,cAAAA,SAAS,CAACgI,KAAK,CAACpE,GAAP,EAAYqE,GAAG,CAACrE,GAAhB,EAAqB,UAAUsE,MAAV,EAAkB;AAC9CJ,gBAAAA,MAAM,CAACZ,SAAP,CAAiBc,KAAK,CAACtE,GAAvB,EAA4BwE,MAA5B,EAAoClD,KAApC,EAA2CmC,MAA3C;AACD,eAFQ,CAAT;AAGA;;AAEF,iBAAK,OAAL;AACEnH,cAAAA,SAAS,CAACgI,KAAK,CAACtE,GAAP,EAAYuE,GAAG,CAACvE,GAAhB,EAAqB,UAAUyE,QAAV,EAAoB;AAChDL,gBAAAA,MAAM,CAACZ,SAAP,CAAiBiB,QAAjB,EAA2BF,GAAG,CAACrE,GAA/B,EAAoCoB,KAApC,EAA2CmC,MAA3C;AACD,eAFQ,CAAT;AAGA;;AAEF,iBAAK,QAAL;AACEnH,cAAAA,SAAS,CAACgI,KAAK,CAACpE,GAAP,EAAYqE,GAAG,CAACrE,GAAhB,EAAqB,UAAUwE,SAAV,EAAqB;AACjDN,gBAAAA,MAAM,CAACZ,SAAP,CAAiBe,GAAG,CAACvE,GAArB,EAA0B0E,SAA1B,EAAqCpD,KAArC,EAA4CmC,MAA5C;AACD,eAFQ,CAAT;AAGA;;AAEF,iBAAK,MAAL;AACEnH,cAAAA,SAAS,CAACgI,KAAK,CAACtE,GAAP,EAAYuE,GAAG,CAACvE,GAAhB,EAAqB,UAAU2E,OAAV,EAAmB;AAC/CP,gBAAAA,MAAM,CAACZ,SAAP,CAAiBmB,OAAjB,EAA0BL,KAAK,CAACpE,GAAhC,EAAqCoB,KAArC,EAA4CmC,MAA5C;AACD,eAFQ,CAAT;AAGA;;AAEF;AACE;AAlCJ;AAoCD;AACF,OAhDQ,CAAT;AAiDD;AACD;AACJ;AACA;AACA;AACA;AACA;;AA5DK,GAzZyB,EAudzB;AACDlK,IAAAA,GAAG,EAAE,qBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASmM,mBAAT,CAA6BC,aAA7B,EAA4C;AACjD,UAAIC,MAAM,GAAG,IAAb;;AAEAvI,MAAAA,SAAS,CAACsI,aAAD,EAAgB,UAAUE,YAAV,EAAwB;AAC/C,YAAIA,YAAY,CAACnC,KAAjB,EAAwB;AACtBkC,UAAAA,MAAM,CAACrC,iCAAP,CAAyCsC,YAAzC;AACD,SAFD,MAEO;AACLD,UAAAA,MAAM,CAAC1E,4BAAP,CAAoC2E,YAAY,CAAC/E,GAAjD,EAAsD+E,YAAY,CAAC7E,GAAnE,EAAwE6E,YAAxE;AACD;AACF,OANQ,CAAT;AAOD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAnBK,GAvdyB,EA4ezB;AACDxL,IAAAA,GAAG,EAAE,WADJ;AAEDd,IAAAA,KAAK,EAAE,SAASqL,SAAT,CAAmBhD,MAAnB,EAA2B;AAChC,UAAIkE,MAAM,GAAG3N,MAAM,CAAC2N,MAAP,CAAclE,MAAd,CAAb;AACA,aAAOtE,WAAW,CAACwI,MAAD,EAAS,UAAUC,WAAV,EAAuBxM,KAAvB,EAA8B;AACvD,YAAI4C,MAAM,GAAG4J,WAAb;;AAEA,YAAIxM,KAAK,CAACyM,IAAV,EAAgB;AACd7J,UAAAA,MAAM,IAAI,CAAV;AACD;;AAED,eAAOA,MAAP;AACD,OARiB,EAQf,CARe,CAAlB;AASD;AACD;AACJ;AACA;AACA;AACA;AACA;;AAnBK,GA5eyB,EAigBzB;AACD9B,IAAAA,GAAG,EAAE,mCADJ;AAEDd,IAAAA,KAAK,EAAE,SAASwI,iCAAT,CAA2CqC,QAA3C,EAAqD;AAC1D,UAAI6B,KAAK,GAAG1I,QAAQ,CAAC,KAAKyB,GAAL,CAASsB,SAAT,CAAmBoC,SAAnB,CAA6BQ,gBAA9B,EAAgD,UAAUC,eAAV,EAA2B;AAC7F,eAAOA,eAAe,CAACC,QAAhB,CAAyBpB,EAAhC;AACD,OAFmB,CAAR,CAETkE,OAFS,CAED9B,QAFC,CAAZ;;AAIA,UAAI6B,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,aAAKjH,GAAL,CAASsB,SAAT,CAAmBoC,SAAnB,CAA6BQ,gBAA7B,CAA8C+C,KAA9C,EAAqDE,KAArD;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;;AAfK,GAjgByB,EAkhBzB;AACD9L,IAAAA,GAAG,EAAE,oBADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS0I,kBAAT,GAA8B;AACnC,UAAImE,MAAM,GAAG,IAAb;;AAEA/I,MAAAA,SAAS,CAAC,KAAK2B,GAAL,CAASsB,SAAT,CAAmBoC,SAAnB,CAA6BQ,gBAA9B,EAAgD,UAAUC,eAAV,EAA2B8C,KAA3B,EAAkC;AACzF,YAAI9C,eAAe,CAACkD,SAAhB,KAA8B,IAAlC,EAAwC;AACtCD,UAAAA,MAAM,CAACpH,GAAP,CAAWsB,SAAX,CAAqBoC,SAArB,CAA+BQ,gBAA/B,CAAgD+C,KAAhD,EAAuDK,OAAvD;;AAEAF,UAAAA,MAAM,CAACpH,GAAP,CAAWsB,SAAX,CAAqBoC,SAArB,CAA+BQ,gBAA/B,CAAgDqD,MAAhD,CAAuDN,KAAvD,EAA8D,CAA9D;;AAEA,iBAAO,KAAP,CALsC,CAKxB;AACf;AACF,OARQ,CAAT;AASD;AACD;AACJ;AACA;AACA;AACA;;AAnBK,GAlhByB,EAuiBzB;AACD5L,IAAAA,GAAG,EAAE,aADJ;AAEDd,IAAAA,KAAK,EAAE,SAASmG,WAAT,GAAuB;AAC5B,UAAI8G,OAAO,GAAG,IAAd;;AAEAnJ,MAAAA,SAAS,CAAC,KAAKyB,YAAN,EAAoB,UAAU8C,MAAV,EAAkB;AAC7C4E,QAAAA,OAAO,CAACzE,iCAAR,CAA0CH,MAAM,CAACI,EAAjD;;AAEAwE,QAAAA,OAAO,CAACvE,kBAAR;AACD,OAJQ,CAAT;AAKD;AACD;AACJ;AACA;AACA;AACA;AACA;;AAhBK,GAviByB,EAyjBzB;AACD5H,IAAAA,GAAG,EAAE,cADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS8K,YAAT,CAAsBD,QAAtB,EAAgC;AACrC,UAAI6B,KAAK,GAAG1I,QAAQ,CAAC,KAAKuB,YAAN,EAAoB,UAAU8C,MAAV,EAAkB;AACxD,eAAOA,MAAM,CAACI,EAAd;AACD,OAFmB,CAAR,CAETkE,OAFS,CAED9B,QAFC,CAAZ;;AAIA,UAAI6B,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,aAAKnH,YAAL,CAAkByH,MAAlB,CAAyBN,KAAzB,EAAgC,CAAhC;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAlBK,GAzjByB,EA6kBzB;AACD5L,IAAAA,GAAG,EAAE,mBADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS+I,iBAAT,CAA2BV,MAA3B,EAAmC;AACxC,UAAI6E,OAAO,GAAG,IAAd;;AAEA,UAAIC,KAAK,GAAG,KAAZ;AACA,UAAI/B,SAAS,GAAG,KAAKC,SAAL,CAAehD,MAAf,CAAhB;;AAEA,UAAI+C,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAKN,YAAL,CAAkBzC,MAAM,CAACI,EAAzB;AACA0E,QAAAA,KAAK,GAAG,IAAR;AACD,OAHD,MAGO;AACLrJ,QAAAA,SAAS,CAAC,KAAKyB,YAAN,EAAoB,UAAU6H,WAAV,EAAuBV,KAAvB,EAA8B;AACzD,cAAIrE,MAAM,CAACI,EAAP,KAAc2E,WAAW,CAAC3E,EAA9B,EAAkC;AAChCyE,YAAAA,OAAO,CAAC3H,YAAR,CAAqBmH,KAArB,IAA8BrE,MAA9B;AACA8E,YAAAA,KAAK,GAAG,IAAR;AACA,mBAAO,KAAP,CAHgC,CAGlB;AACf;AACF,SANQ,CAAT;AAOD;;AAED,aAAOA,KAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhCK,GA7kByB,EA+mBzB;AACDrM,IAAAA,GAAG,EAAE,sCADJ;AAEDd,IAAAA,KAAK,EAAE,SAASuL,oCAAT,CAA8ClD,MAA9C,EAAsDQ,KAAtD,EAA6DmC,MAA7D,EAAqE;AAC1E,UAAImC,KAAK,GAAG,KAAZ;AACArJ,MAAAA,SAAS,CAAC,KAAK2B,GAAL,CAASsB,SAAT,CAAmBoC,SAAnB,CAA6BQ,gBAA9B,EAAgD,UAAUC,eAAV,EAA2B;AAClF,YAAIvB,MAAM,CAACI,EAAP,KAAcmB,eAAe,CAACC,QAAhB,CAAyBpB,EAA3C,EAA+C;AAC7C7E,UAAAA,UAAU,CAACgG,eAAe,CAACyD,eAAjB,EAAkC,UAAU7G,YAAV,EAAwB;AAClEA,YAAAA,YAAY,CAAC8G,iBAAb,CAA+BzE,KAA/B,EAAsCmC,MAAtC,EADkE,CACnB;AAChD,WAFS,CAAV;AAGAmC,UAAAA,KAAK,GAAG,IAAR;AACA,iBAAO,KAAP,CAL6C,CAK/B;AACf;AACF,OARQ,CAAT;AASA,aAAOA,KAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvBK,GA/mByB,EAwoBzB;AACDrM,IAAAA,GAAG,EAAE,uBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASkJ,qBAAT,CAA+Bb,MAA/B,EAAuCyE,SAAvC,EAAkDjE,KAAlD,EAAyD;AAC9D,UAAIuC,SAAS,GAAG,KAAKC,SAAL,CAAehD,MAAf,CAAhB;AACA,UAAI8E,KAAK,GAAG,KAAZ;;AAEA,UAAI/B,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAKR,gBAAL,CAAsBvC,MAAM,CAACd,GAA7B,EAAkCc,MAAM,CAACZ,GAAzC;AACA0F,QAAAA,KAAK,GAAG,IAAR;AACD,OAHD,MAGO;AACLrJ,QAAAA,SAAS,CAAC,KAAK2B,GAAL,CAASsB,SAAT,CAAmBoC,SAAnB,CAA6BQ,gBAA9B,EAAgD,UAAUC,eAAV,EAA2B;AAClF,cAAIvB,MAAM,CAACI,EAAP,KAAcmB,eAAe,CAACC,QAAhB,CAAyBpB,EAA3C,EAA+C;AAC7CmB,YAAAA,eAAe,CAACZ,eAAhB,GAAkC8D,SAAlC;AACAlD,YAAAA,eAAe,CAAC2D,MAAhB;;AAEA,gBAAI1E,KAAJ,EAAW;AACTjF,cAAAA,UAAU,CAACgG,eAAe,CAACyD,eAAjB,EAAkC,UAAU7G,YAAV,EAAwB;AAClEA,gBAAAA,YAAY,CAACgH,iBAAb,CAA+B3E,KAA/B,EAAsCR,MAAtC;AACD,eAFS,CAAV;AAGD;;AAED8E,YAAAA,KAAK,GAAG,IAAR;AACA,mBAAO,KAAP,CAX6C,CAW/B;AACf;AACF,SAdQ,CAAT;AAeD;;AAED,aAAOA,KAAP;AACD;AACD;AACJ;AACA;AACA;AACA;;AAjCK,GAxoByB,EA2qBzB;AACDrM,IAAAA,GAAG,EAAE,sBADJ;AAEDd,IAAAA,KAAK,EAAE,SAASqG,oBAAT,GAAgC;AACrC,UAAI+F,aAAa,GAAG,KAAK3G,GAAL,CAASC,WAAT,GAAuBV,UAAvB,CAApB;;AAEA,UAAI/F,KAAK,CAACiB,OAAN,CAAckM,aAAd,CAAJ,EAAkC;AAChC,YAAI,CAACA,aAAa,CAAC/M,MAAnB,EAA2B;AACzB,eAAKkG,YAAL,GAAoB6G,aAApB;AACD;;AAED,aAAKD,mBAAL,CAAyBC,aAAzB;AACD,OAND,MAMO,IAAIA,aAAa,KAAK,KAAK,CAA3B,EAA8B;AACnC,aAAKD,mBAAL,CAAyB,KAAK5G,YAA9B;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;;AApBK,GA3qByB,EAisBzB;AACDzE,IAAAA,GAAG,EAAE,kCADJ;AAEDd,IAAAA,KAAK,EAAE,SAASgG,gCAAT,CAA0CyH,cAA1C,EAA0D;AAC/D,UAAI,CAAC,KAAKhI,GAAL,CAASC,WAAT,GAAuBV,UAAvB,CAAL,EAAyC;AACvC;AACD;;AAEDyI,MAAAA,cAAc,CAACC,KAAf,CAAqB3N,IAArB,CAA0B;AACxBf,QAAAA,IAAI,EAAE;AADkB,OAA1B,EAEG;AACD8B,QAAAA,GAAG,EAAE,SADJ;AAED9B,QAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,iBAAO,KAAK2O,mBAAL,CAAyBxJ,CAAC,CAACyJ,yBAA3B,CAAP;AACD,SAJA;AAKDC,QAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,iBAAO,KAAK9G,SAAL,CAAe+G,kBAAf,EAAP;AACD,SAPA;AAQDC,QAAAA,OAAO,EAAE;AACPL,UAAAA,KAAK,EAAE,CAAClJ,GAAG,CAAC,IAAD,CAAJ,EAAYD,KAAK,CAAC,IAAD,CAAjB,EAAyBH,MAAM,CAAC,IAAD,CAA/B,EAAuCC,IAAI,CAAC,IAAD,CAA3C,EAAmDC,SAAS,CAAC,IAAD,CAA5D;AADA;AARR,OAFH;AAcD;AACD;AACJ;AACA;AACA;AACA;;AA1BK,GAjsByB,EA6tBzB;AACDxD,IAAAA,GAAG,EAAE,aADJ;AAEDd,IAAAA,KAAK,EAAE,SAASiG,WAAT,GAAuB;AAC5B,WAAKI,oBAAL;AACD;AACD;AACJ;AACA;;AAPK,GA7tByB,EAsuBzB;AACDvF,IAAAA,GAAG,EAAE,SADJ;AAEDd,IAAAA,KAAK,EAAE,SAAS+M,OAAT,GAAmB;AACxB7L,MAAAA,IAAI,CAACW,eAAe,CAACqD,aAAa,CAACnH,SAAf,CAAhB,EAA2C,SAA3C,EAAsD,IAAtD,CAAJ,CAAgEe,IAAhE,CAAqE,IAArE;AACD;AAJA,GAtuByB,CAAhB,EA2uBR,CAAC;AACHgC,IAAAA,GAAG,EAAE,YADF;AAEHQ,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO0D,UAAP;AACD;AAJE,GAAD,EAKD;AACDlE,IAAAA,GAAG,EAAE,iBADJ;AAEDQ,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO2D,eAAP;AACD;AAJA,GALC,CA3uBQ,CAAZ;;AAuvBA,SAAOC,aAAP;AACD,CArxBuC,CAqxBtCvB,UArxBsC,CAAjC","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { hasOwnProperty, objectEach } from \"../../helpers/object.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayReduce, arrayMap } from \"../../helpers/array.mjs\";\nimport { CellRange, CellCoords } from \"../../3rdparty/walkontable/src/index.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nimport { bottom, left, noBorders, right, top } from \"./contextMenuItem/index.mjs\";\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder } from \"./utils.mjs\";\nimport { detectSelectionType, normalizeSelectionFactory } from \"../../selection/index.mjs\";\nexport var PLUGIN_KEY = 'customBorders';\nexport var PLUGIN_PRIORITY = 90;\n/**\n * @class CustomBorders\n * @plugin CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [Custom Borders](https://handsontable.com/docs/demo-customizing-borders.html) demo for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    left: {},\n *    right: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     left: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     right: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\n\nexport var CustomBorders = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CustomBorders, _BasePlugin);\n\n  var _super = _createSuper(CustomBorders);\n\n  function CustomBorders(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CustomBorders);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.savedBorders = [];\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link CustomBorders#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(CustomBorders, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('init', function () {\n        return _this2.onAfterInit();\n      });\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hideBorders();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.changeBorderSettings();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Set custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {left: {width: 2, color: 'blue'}});\n     *\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * //  Selecting a cell range.\n     * hot.selectCell(0, 0, 2, 2);\n     * // Returning selected cells' range with the getSelectedRange method.\n     * customBordersPlugin.setBorders(hot.getSelectedRange(), {left: {hide: false, width: 2, color: 'blue'}});\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @param {object} borderObject Object with `top`, `right`, `bottom` and `left` properties.\n     */\n\n  }, {\n    key: \"setBorders\",\n    value: function setBorders(selectionRanges, borderObject) {\n      var _this3 = this;\n\n      var defaultBorderKeys = ['top', 'right', 'bottom', 'left'];\n      var borderKeys = borderObject ? Object.keys(borderObject) : defaultBorderKeys;\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma2 = _slicedToArray(_selectionSchemaNorma, 4),\n            rowStart = _selectionSchemaNorma2[0],\n            columnStart = _selectionSchemaNorma2[1],\n            rowEnd = _selectionSchemaNorma2[2],\n            columnEnd = _selectionSchemaNorma2[3];\n\n        var _loop = function _loop(row) {\n          var _loop2 = function _loop2(col) {\n            arrayEach(borderKeys, function (borderKey) {\n              _this3.prepareBorderFromCustomAdded(row, col, borderObject, borderKey);\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop2(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop(row);\n        }\n      });\n      /*\n      The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n      render, because that is the default for the TableView class.\n       The re-render is needed for borders on cells that did not have a border before.\n      The way this call works is that it calls Table.refreshSelections, which calls\n      Selection.getBorder, which creates a new instance of Border.\n       Seems wise to keep this single-direction flow of creating new Borders\n      */\n\n      this.hot.view.render();\n    }\n    /**\n     * Get custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.getBorders(hot.getSelectedRange());\n     * // Using without param - return all customBorders.\n     * customBordersPlugin.getBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @returns {object[]} Returns array of border objects.\n     */\n\n  }, {\n    key: \"getBorders\",\n    value: function getBorders(selectionRanges) {\n      var _this4 = this;\n\n      if (!Array.isArray(selectionRanges)) {\n        return this.savedBorders;\n      }\n\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      var selectedBorders = [];\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma3 = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma4 = _slicedToArray(_selectionSchemaNorma3, 4),\n            rowStart = _selectionSchemaNorma4[0],\n            columnStart = _selectionSchemaNorma4[1],\n            rowEnd = _selectionSchemaNorma4[2],\n            columnEnd = _selectionSchemaNorma4[3];\n\n        var _loop3 = function _loop3(row) {\n          var _loop4 = function _loop4(col) {\n            arrayEach(_this4.savedBorders, function (border) {\n              if (border.row === row && border.col === col) {\n                selectedBorders.push(border);\n              }\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop4(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop3(row);\n        }\n      });\n      return selectedBorders;\n    }\n    /**\n     * Clear custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.clearBorders(hot.getSelectedRange());\n     * // Using without param - clear all customBorders.\n     * customBordersPlugin.clearBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     */\n\n  }, {\n    key: \"clearBorders\",\n    value: function clearBorders(selectionRanges) {\n      var _this5 = this;\n\n      if (selectionRanges) {\n        this.setBorders(selectionRanges);\n      } else {\n        arrayEach(this.savedBorders, function (border) {\n          _this5.clearBordersFromSelectionSettings(border.id);\n\n          _this5.clearNullCellRange();\n\n          _this5.hot.removeCellMeta(border.row, border.col, 'borders');\n        });\n        this.savedBorders.length = 0;\n      }\n    }\n    /**\n     * Insert WalkontableSelection instance into Walkontable settings.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"insertBorderIntoSettings\",\n    value: function insertBorderIntoSettings(border, place) {\n      var hasSavedBorders = this.checkSavedBorders(border);\n\n      if (!hasSavedBorders) {\n        this.savedBorders.push(border);\n      }\n\n      var visualCellRange = new CellRange(new CellCoords(border.row, border.col));\n      var hasCustomSelections = this.checkCustomSelections(border, visualCellRange, place);\n\n      if (!hasCustomSelections) {\n        this.hot.selection.highlight.addCustomSelection({\n          border: border,\n          visualCellRange: visualCellRange\n        });\n      }\n    }\n    /**\n     * Prepare borders from setting (single cell).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} borderDescriptor Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAdded\",\n    value: function prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n      var nrOfRows = this.hot.countRows();\n      var nrOfColumns = this.hot.countCols();\n\n      if (row >= nrOfRows || column >= nrOfColumns) {\n        return;\n      }\n\n      var border = createEmptyBorders(row, column);\n\n      if (borderDescriptor) {\n        border = extendDefaultBorder(border, borderDescriptor);\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            Object.assign(customSelection.settings, borderDescriptor);\n            border.id = customSelection.settings.id;\n            border.left = customSelection.settings.left;\n            border.right = customSelection.settings.right;\n            border.top = customSelection.settings.top;\n            border.bottom = customSelection.settings.bottom;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      this.hot.setCellMeta(row, column, 'borders', border);\n      this.insertBorderIntoSettings(border, place);\n    }\n    /**\n     * Prepare borders from setting (object).\n     *\n     * @private\n     * @param {object} rowDecriptor Object with `range`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAddedRange\",\n    value: function prepareBorderFromCustomAddedRange(rowDecriptor) {\n      var _this6 = this;\n\n      var range = rowDecriptor.range;\n      var lastRowIndex = Math.min(range.to.row, this.hot.countRows() - 1);\n      var lastColumnIndex = Math.min(range.to.col, this.hot.countCols() - 1);\n      rangeEach(range.from.row, lastRowIndex, function (rowIndex) {\n        rangeEach(range.from.col, lastColumnIndex, function (colIndex) {\n          var border = createEmptyBorders(rowIndex, colIndex);\n          var add = 0;\n\n          if (rowIndex === range.from.row) {\n            if (hasOwnProperty(rowDecriptor, 'top')) {\n              add += 1;\n              border.top = rowDecriptor.top;\n            }\n          } // Please keep in mind that `range.to.row` may be beyond the table boundaries. The border won't be rendered.\n\n\n          if (rowIndex === range.to.row) {\n            if (hasOwnProperty(rowDecriptor, 'bottom')) {\n              add += 1;\n              border.bottom = rowDecriptor.bottom;\n            }\n          }\n\n          if (colIndex === range.from.col) {\n            if (hasOwnProperty(rowDecriptor, 'left')) {\n              add += 1;\n              border.left = rowDecriptor.left;\n            }\n          } // Please keep in mind that `range.to.col` may be beyond the table boundaries. The border won't be rendered.\n\n\n          if (colIndex === range.to.col) {\n            if (hasOwnProperty(rowDecriptor, 'right')) {\n              add += 1;\n              border.right = rowDecriptor.right;\n            }\n          }\n\n          if (add > 0) {\n            _this6.hot.setCellMeta(rowIndex, colIndex, 'borders', border);\n\n            _this6.insertBorderIntoSettings(border);\n          } else {// TODO sometimes it enters here. Why?\n          }\n        });\n      });\n    }\n    /**\n     * Remove border (triggered from context menu).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     */\n\n  }, {\n    key: \"removeAllBorders\",\n    value: function removeAllBorders(row, column) {\n      var borderId = createId(row, column);\n      this.spliceBorder(borderId);\n      this.clearBordersFromSelectionSettings(borderId);\n      this.clearNullCellRange();\n      this.hot.removeCellMeta(row, column, 'borders');\n    }\n    /**\n     * Set borders for each cell re. To border position.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"setBorder\",\n    value: function setBorder(row, column, place, remove) {\n      var bordersMeta = this.hot.getCellMeta(row, column).borders;\n\n      if (!bordersMeta || bordersMeta.border === void 0) {\n        bordersMeta = createEmptyBorders(row, column);\n      }\n\n      if (remove) {\n        bordersMeta[place] = createSingleEmptyBorder();\n        var hideCount = this.countHide(bordersMeta);\n\n        if (hideCount === 4) {\n          this.removeAllBorders(row, column);\n        } else {\n          var customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n          if (!customSelectionsChecker) {\n            this.insertBorderIntoSettings(bordersMeta);\n          }\n\n          this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n        }\n      } else {\n        bordersMeta[place] = createDefaultCustomBorder();\n\n        var _customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n        if (!_customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n\n        this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n      }\n    }\n    /**\n     * Prepare borders based on cell and border position.\n     *\n     * @private\n     * @param {CellRange[]} selected An array of CellRange objects.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"prepareBorder\",\n    value: function prepareBorder(selected, place, remove) {\n      var _this7 = this;\n\n      arrayEach(selected, function (_ref) {\n        var start = _ref.start,\n            end = _ref.end;\n\n        if (start.row === end.row && start.col === end.col) {\n          if (place === 'noBorders') {\n            _this7.removeAllBorders(start.row, start.col);\n          } else {\n            _this7.setBorder(start.row, start.col, place, remove);\n          }\n        } else {\n          switch (place) {\n            case 'noBorders':\n              rangeEach(start.col, end.col, function (colIndex) {\n                rangeEach(start.row, end.row, function (rowIndex) {\n                  _this7.removeAllBorders(rowIndex, colIndex);\n                });\n              });\n              break;\n\n            case 'top':\n              rangeEach(start.col, end.col, function (topCol) {\n                _this7.setBorder(start.row, topCol, place, remove);\n              });\n              break;\n\n            case 'right':\n              rangeEach(start.row, end.row, function (rowRight) {\n                _this7.setBorder(rowRight, end.col, place, remove);\n              });\n              break;\n\n            case 'bottom':\n              rangeEach(start.col, end.col, function (bottomCol) {\n                _this7.setBorder(end.row, bottomCol, place, remove);\n              });\n              break;\n\n            case 'left':\n              rangeEach(start.row, end.row, function (rowLeft) {\n                _this7.setBorder(rowLeft, start.col, place, remove);\n              });\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n    }\n    /**\n     * Create borders from settings.\n     *\n     * @private\n     * @param {Array} customBorders Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"createCustomBorders\",\n    value: function createCustomBorders(customBorders) {\n      var _this8 = this;\n\n      arrayEach(customBorders, function (customBorder) {\n        if (customBorder.range) {\n          _this8.prepareBorderFromCustomAddedRange(customBorder);\n        } else {\n          _this8.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, customBorder);\n        }\n      });\n    }\n    /**\n     * Count hide property in border object.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"countHide\",\n    value: function countHide(border) {\n      var values = Object.values(border);\n      return arrayReduce(values, function (accumulator, value) {\n        var result = accumulator;\n\n        if (value.hide) {\n          result += 1;\n        }\n\n        return result;\n      }, 0);\n    }\n    /**\n     * Clear borders settings from custom selections.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n\n  }, {\n    key: \"clearBordersFromSelectionSettings\",\n    value: function clearBordersFromSelectionSettings(borderId) {\n      var index = arrayMap(this.hot.selection.highlight.customSelections, function (customSelection) {\n        return customSelection.settings.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.hot.selection.highlight.customSelections[index].clear();\n      }\n    }\n    /**\n     * Clear cellRange with null value.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"clearNullCellRange\",\n    value: function clearNullCellRange() {\n      var _this9 = this;\n\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection, index) {\n        if (customSelection.cellRange === null) {\n          _this9.hot.selection.highlight.customSelections[index].destroy();\n\n          _this9.hot.selection.highlight.customSelections.splice(index, 1);\n\n          return false; // breaks forAll\n        }\n      });\n    }\n    /**\n     * Hide custom borders.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"hideBorders\",\n    value: function hideBorders() {\n      var _this10 = this;\n\n      arrayEach(this.savedBorders, function (border) {\n        _this10.clearBordersFromSelectionSettings(border.id);\n\n        _this10.clearNullCellRange();\n      });\n    }\n    /**\n     * Splice border from savedBorders.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n\n  }, {\n    key: \"spliceBorder\",\n    value: function spliceBorder(borderId) {\n      var index = arrayMap(this.savedBorders, function (border) {\n        return border.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.savedBorders.splice(index, 1);\n      }\n    }\n    /**\n     * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkSavedBorders\",\n    value: function checkSavedBorders(border) {\n      var _this11 = this;\n\n      var check = false;\n      var hideCount = this.countHide(border);\n\n      if (hideCount === 4) {\n        this.spliceBorder(border.id);\n        check = true;\n      } else {\n        arrayEach(this.savedBorders, function (savedBorder, index) {\n          if (border.id === savedBorder.id) {\n            _this11.savedBorders[index] = border;\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n     * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkCustomSelectionsFromContextMenu\",\n    value: function checkCustomSelectionsFromContextMenu(border, place, remove) {\n      var check = false;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n        if (border.id === customSelection.settings.id) {\n          objectEach(customSelection.instanceBorders, function (borderObject) {\n            borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n          });\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n      return check;\n    }\n    /**\n     * Check if an border already exists in the customSelections, and if true reset cellRange.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {CellRange} cellRange The selection range to check.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"checkCustomSelections\",\n    value: function checkCustomSelections(border, cellRange, place) {\n      var hideCount = this.countHide(border);\n      var check = false;\n\n      if (hideCount === 4) {\n        this.removeAllBorders(border.row, border.col);\n        check = true;\n      } else {\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            customSelection.visualCellRange = cellRange;\n            customSelection.commit();\n\n            if (place) {\n              objectEach(customSelection.instanceBorders, function (borderObject) {\n                borderObject.changeBorderStyle(place, border);\n              });\n            }\n\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n     * Change borders from settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"changeBorderSettings\",\n    value: function changeBorderSettings() {\n      var customBorders = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (Array.isArray(customBorders)) {\n        if (!customBorders.length) {\n          this.savedBorders = customBorders;\n        }\n\n        this.createCustomBorders(customBorders);\n      } else if (customBorders !== void 0) {\n        this.createCustomBorders(this.savedBorders);\n      }\n    }\n    /**\n     * Add border options to context menu.\n     *\n     * @private\n     * @param {object} defaultOptions Context menu items.\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(defaultOptions) {\n      if (!this.hot.getSettings()[PLUGIN_KEY]) {\n        return;\n      }\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'borders',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n        },\n        disabled: function disabled() {\n          return this.selection.isSelectedByCorner();\n        },\n        submenu: {\n          items: [top(this), right(this), bottom(this), left(this), noBorders(this)]\n        }\n      });\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.changeBorderSettings();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CustomBorders.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return CustomBorders;\n}(BasePlugin);"]},"metadata":{},"sourceType":"module"}