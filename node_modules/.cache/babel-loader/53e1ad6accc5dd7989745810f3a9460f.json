{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\myTrayBtn\\\\myTrayBtn.js\";\nimport './myTrayBtn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\n\nconst MyTrayBtn = props => {\n  let btn = null;\n  console.log(props.currentTab);\n\n  if (props.currentTab === \"My tray\") {\n    secureStorage.setItem(\"tab\", \"My tray\");\n    btn = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"myTray__button text-left\",\n      style: {\n        backgroundColor: \"#0070ed\"\n      },\n      onClick: () => {\n        props.onChange(\"My Tray\");\n      },\n      children: \"My tray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this);\n  } else {\n    btn = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"myTray__button text-left\",\n      onClick: () => {\n        props.onChange(\"My Tray\");\n      },\n      children: \"My tray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"myTrayBtn__container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"myTray__button text-left\",\n      onClick: () => {\n        props.onChange(\"My Tray\");\n      },\n      children: \"My tray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyTrayBtn;\nexport default MyTrayBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTrayBtn\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/myTrayBtn/myTrayBtn.js"],"names":["CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","MyTrayBtn","props","btn","console","log","currentTab","setItem","backgroundColor","onChange"],"mappings":";AAAA,OAAO,iBAAP;;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AACI,MAAMC,aAAa,GAAGD,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAIE,UAAU,GAAG,iBAAjB;AAEA,IAAIC,aAAa,GAAG,IAAIF,aAAJ,CAAkBG,YAAlB,EAAgC;AAChDC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,GAAd,EAAmB;AACrBA,IAAAA,GAAG,GAAGP,QAAQ,CAACQ,MAAT,CAAgBD,GAAhB,EAAqBJ,UAArB,CAAN;AAEA,WAAOI,GAAG,CAACE,QAAJ,EAAP;AACH,GAL+C;AAMhDC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC5BA,IAAAA,IAAI,GAAGX,QAAQ,CAACY,GAAT,CAAaF,OAAb,CAAqBC,IAArB,EAA2BR,UAA3B,CAAP;AAEAQ,IAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,EAAP;AAEA,WAAOE,IAAP;AACH,GAZ+C;AAahDE,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBF,IAAjB,EAAuB;AAC5BA,IAAAA,IAAI,GAAGX,QAAQ,CAACY,GAAT,CAAaC,OAAb,CAAqBF,IAArB,EAA2BR,UAA3B,CAAP;AAEAQ,IAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,CAAcT,QAAQ,CAACc,GAAT,CAAaC,IAA3B,CAAP;AAEA,WAAOJ,IAAP;AACH;AAnB+C,CAAhC,CAApB;;AAqBJ,MAAMK,SAAS,GAAGC,KAAK,IAAG;AAEtB,MAAIC,GAAG,GAAG,IAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,UAAlB;;AACA,MAAGJ,KAAK,CAACI,UAAN,KAAqB,SAAxB,EAAkC;AAC9BjB,IAAAA,aAAa,CAACkB,OAAd,CAAsB,KAAtB,EAA6B,SAA7B;AACAJ,IAAAA,GAAG,gBAAG;AAAS,MAAA,IAAI,EAAC,QAAd;AAAuB,MAAA,SAAS,EAAC,0BAAjC;AAA4D,MAAA,KAAK,EAAE;AAACK,QAAAA,eAAe,EAAC;AAAjB,OAAnE;AAAgG,MAAA,OAAO,EAAE,MAAM;AAACN,QAAAA,KAAK,CAACO,QAAN,CAAe,SAAf;AAA0B,OAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AACH,GAHD,MAGK;AACDN,IAAAA,GAAG,gBAAG;AAAS,MAAA,IAAI,EAAC,QAAd;AAAuB,MAAA,SAAS,EAAC,0BAAjC;AAA4D,MAAA,OAAO,EAAE,MAAM;AAACD,QAAAA,KAAK,CAACO,QAAN,CAAe,SAAf;AAA0B,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AACH;;AAED,sBACI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA,2BACI;AAAS,MAAA,IAAI,EAAC,QAAd;AAAuB,MAAA,SAAS,EAAC,0BAAjC;AAA4D,MAAA,OAAO,EAAE,MAAM;AAACP,QAAAA,KAAK,CAACO,QAAN,CAAe,SAAf;AAA0B,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBD;;KAAMR,S;AAkBN,eAAeA,SAAf","sourcesContent":["import './myTrayBtn.css'\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\nconst MyTrayBtn = props =>{\r\n\r\n    let btn = null\r\n    console.log(props.currentTab)\r\n    if(props.currentTab === \"My tray\"){\r\n        secureStorage.setItem(\"tab\", \"My tray\")\r\n        btn = <button  type=\"button\" className=\"myTray__button text-left\" style={{backgroundColor:\"#0070ed\"}} onClick={() => {props.onChange(\"My Tray\")}}>My tray</button>\r\n    }else{\r\n        btn = <button  type=\"button\" className=\"myTray__button text-left\" onClick={() => {props.onChange(\"My Tray\")}}>My tray</button>\r\n    }\r\n\r\n    return(\r\n        <td className=\"myTrayBtn__container\">\r\n            <button  type=\"button\" className=\"myTray__button text-left\" onClick={() => {props.onChange(\"My Tray\")}}>My tray</button>\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default MyTrayBtn;"]},"metadata":{},"sourceType":"module"}