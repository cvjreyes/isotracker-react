{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\estimatedPipesExcel\\\\estimatedPipesExcel.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport \"./estimatedPipesExcel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EstimatedPipesExcel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: [],\n      areas: [],\n      types: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/areas\", options).then(response => response.json()).then(json => {\n      let areas_options = [];\n\n      for (let i = 0; i < json.length; i++) {\n        areas_options.push(json[i].name);\n      }\n\n      this.setState({\n        areas: areas_options\n      });\n    });\n  }\n\n  addRow() {\n    let rows = this.state.data;\n    rows.push({\n      \"Line reference\": \"\",\n      \"Tag\": \"\",\n      \"Unit\": \"\",\n      \"Area\": \"\",\n      \"Fluid\": \"\",\n      \"Area\": \"\",\n      \"Area\": \"\",\n      \"Area\": \"\",\n      \"Area\": \"\",\n      \"Area\": \"\"\n    });\n    this.setState({\n      data: rows\n    });\n  }\n\n  submitChanges() {\n    const body = {\n      rows: this.state.data\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/equipments/estimated\", options).then(response => response.json()).then(json => {});\n    this.props.success();\n  }\n\n  render() {\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: [300, 400, 110, 210, 140, 130, 140, 110, 130, 110, 143],\n      fontSize: 24 //... other options\n\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hot-app\",\n        children: [/*#__PURE__*/_jsxDEV(HotTable, {\n          data: this.state.data,\n          colHeaders: [\"<b className='header'>Line reference</b>\", \"<b>Tag</b>\", \"<b>Unit</b>\", \"<b>Area</b>\", \"<b>Fluid</b>\", \"<b>Seq</b>\", \"<b>Spec</b>\", \"<b>Diameter</b>\", \"<b>Insulation</b>\", \"<b>Train</b>\", \"<b>Status</b>\"],\n          rowHeaders: true,\n          rowHeights: \"30px\",\n          columnHeaderHeight: 30,\n          width: \"100%\",\n          height: \"520\",\n          settings: settings,\n          manualColumnResize: true,\n          manualRowResize: true,\n          columns: [{\n            data: \"Line reference\",\n            type: 'dropdown',\n            source: this.state.areas\n          }, {\n            data: \"Tag\",\n            type: 'text'\n          }, {\n            data: \"Unit\",\n            type: 'text'\n          }, {\n            data: \"Area\",\n            type: 'dropdown',\n            source: this.state.areas\n          }, {\n            data: \"Fluid\",\n            type: 'text'\n          }, {\n            data: \"Seq\",\n            type: 'text'\n          }.data, {\n            data: \"Spec\",\n            type: 'text'\n          }, {\n            data: \"Diameter\",\n            type: 'text'\n          }, {\n            data: \"Insulation\",\n            type: 'text'\n          }, {\n            data: \"Train\",\n            type: 'text'\n          }, {\n            data: \"Status\",\n            type: 'text'\n          }],\n          filters: true,\n          dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"803px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-info\",\n            onClick: () => this.addRow(),\n            style: {\n              marginRight: \"5px\",\n              fontSize: \"16px\",\n              width: \"60px\",\n              borderRadius: \"10px\"\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-success\",\n            onClick: () => this.submitChanges(),\n            style: {\n              marginRight: \"5px\",\n              fontSize: \"16px\",\n              width: \"60px\",\n              borderRadius: \"10px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default EstimatedPipesExcel;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/estimatedPipesExcel/estimatedPipesExcel.js"],"names":["React","HotTable","EstimatedPipesExcel","Component","state","searchText","searchedColumn","data","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","areas","types","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","areas_options","i","length","push","name","setState","addRow","rows","submitChanges","body","JSON","stringify","success","render","settings","licenseKey","colWidths","fontSize","type","source","marginLeft","marginRight","width","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport \"./estimatedPipesExcel.css\"\r\n\r\nclass EstimatedPipesExcel extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: [],\r\n    areas: [],\r\n    types: [],\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n\r\n  fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/areas\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      let areas_options = []\r\n      for(let i = 0; i < json.length; i++){\r\n        areas_options.push(json[i].name)\r\n      }\r\n      this.setState({areas : areas_options});\r\n\r\n  })\r\n\r\n}\r\n\r\n  addRow(){\r\n    let rows = this.state.data\r\n    rows.push({\"Line reference\": \"\", \"Tag\": \"\", \"Unit\": \"\", \"Area\": \"\", \"Fluid\": \"\", \"Area\": \"\", \"Area\": \"\", \"Area\": \"\", \"Area\": \"\", \"Area\": \"\"})\r\n    this.setState({data: rows})\r\n  }\r\n  \r\n  submitChanges(){\r\n    const body = {\r\n      rows: this.state.data,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/equipments/estimated\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n\r\n    })\r\n    this.props.success()\r\n  }\r\n\r\n  render() {\r\n\r\n    const settings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: [300, 400, 110, 210, 140, 130, 140, 110, 130, 110, 143],\r\n        fontSize: 24\r\n        //... other options\r\n      }\r\n  \r\n\r\n      return (\r\n          <div>\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.data}\r\n                colHeaders={[\"<b className='header'>Line reference</b>\", \"<b>Tag</b>\", \"<b>Unit</b>\", \"<b>Area</b>\", \"<b>Fluid</b>\", \"<b>Seq</b>\", \"<b>Spec</b>\", \"<b>Diameter</b>\", \"<b>Insulation</b>\", \"<b>Train</b>\", \"<b>Status</b>\"]}\r\n                rowHeaders={true}\r\n                rowHeights=\"30px\"\r\n                columnHeaderHeight={30}\r\n                width=\"100%\"\r\n                height=\"520\"\r\n                settings={settings}\r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Line reference\", type:'dropdown', source: this.state.areas },{ data: \"Tag\", type:'text'},{ data: \"Unit\", type:'text'},{ data: \"Area\", type:'dropdown', source: this.state.areas }, { data: \"Fluid\", type:'text'}, { data: \"Seq\", type:'text'}.data, { data: \"Spec\", type:'text'}, { data: \"Diameter\", type:'text'}, { data: \"Insulation\", type:'text'},{ data: \"Train\", type:'text'},{ data: \"Status\", type:'text'}]}\r\n                filters={true}\r\n                dropdownMenu= {[\r\n                    'make_read_only',\r\n                    '---------',\r\n                    'alignment',\r\n                    '---------',\r\n                    'filter_by_condition',\r\n                    '---------',\r\n                    'filter_operators',\r\n                    '---------',\r\n                    'filter_by_condition2',\r\n                    '---------',\r\n                    'filter_by_value',\r\n                    '---------',\r\n                    'filter_action_bar',\r\n                  ]}\r\n              />\r\n              <br></br>\r\n              <div style={{marginLeft:\"803px\"}}>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRow()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChanges()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\"}}>Save</button>\r\n              </div>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default EstimatedPipesExcel;"]},"metadata":{},"sourceType":"module"}