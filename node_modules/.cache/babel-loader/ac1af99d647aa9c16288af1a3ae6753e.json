{"ast":null,"code":"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { expandMetaType } from \"../utils.mjs\";\nimport metaSchemaFactory from \"../metaSchema.mjs\";\n/**\n * @returns {TableMeta} Returns an empty object. The holder for global meta object.\n */\n\nfunction createTableMetaEmptyClass() {\n  return function TableMeta() {\n    _classCallCheck(this, TableMeta);\n  };\n}\n/**\n * The global meta object is a root of all default settings, which are recognizable by Handsontable.\n * Other layers are inherited from this object. Adding, removing, or changing property in that\n * object has a direct reflection to all layers such as: TableMeta, ColumnMeta, or CellMeta layers.\n *\n * +-------------+.\n * │ GlobalMeta  │\n * │ (prototype) │\n * +-------------+\\\n *       │         \\\n *       │          \\\n *      \\│/         _\\|\n * +-------------+    +-------------+.\n * │ TableMeta   │    │ ColumnMeta  │\n * │ (instance)  │    │ (prototype) │\n * +-------------+    +-------------+.\n *                         │\n *                         │\n *                        \\│/\n *                    +-------------+.\n *                    │  CellMeta   │\n *                    │ (instance)  │\n *                    +-------------+.\n */\n\n\nvar GlobalMeta = /*#__PURE__*/function () {\n  function GlobalMeta() {\n    _classCallCheck(this, GlobalMeta);\n    /**\n     * An alias for the constructor. Necessary for inheritance for creating new layers.\n     *\n     * @type {TableMeta}\n     */\n\n\n    this.metaCtor = createTableMetaEmptyClass();\n    /**\n     * Main object (prototype of the internal TableMeta class), holder for all default settings.\n     *\n     * @type {object}\n     */\n\n    this.meta = this.metaCtor.prototype;\n    extend(this.meta, metaSchemaFactory());\n  }\n  /**\n   * Gets constructor of the global meta object. Necessary for inheritance for creating the next meta layers.\n   *\n   * @returns {Function}\n   */\n\n\n  _createClass(GlobalMeta, [{\n    key: \"getMetaConstructor\",\n    value: function getMetaConstructor() {\n      return this.metaCtor;\n    }\n    /**\n     * Gets settings object for this layer.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.meta;\n    }\n    /**\n     * Updates global settings object by merging settings with the current state.\n     *\n     * @param {object} settings An object to merge with.\n     */\n\n  }, {\n    key: \"updateMeta\",\n    value: function updateMeta(settings) {\n      extend(this.meta, settings);\n      extend(this.meta, expandMetaType(settings.type, settings));\n    }\n  }]);\n\n  return GlobalMeta;\n}();\n\nexport { GlobalMeta as default };","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/dataMap/metaManager/metaLayers/globalMeta.mjs"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","extend","expandMetaType","metaSchemaFactory","createTableMetaEmptyClass","TableMeta","GlobalMeta","metaCtor","meta","value","getMetaConstructor","getMeta","updateMeta","settings","type","default"],"mappings":"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","sourcesContent":["function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { expandMetaType } from \"../utils.mjs\";\nimport metaSchemaFactory from \"../metaSchema.mjs\";\n/**\n * @returns {TableMeta} Returns an empty object. The holder for global meta object.\n */\n\nfunction createTableMetaEmptyClass() {\n  return function TableMeta() {\n    _classCallCheck(this, TableMeta);\n  };\n}\n/**\n * The global meta object is a root of all default settings, which are recognizable by Handsontable.\n * Other layers are inherited from this object. Adding, removing, or changing property in that\n * object has a direct reflection to all layers such as: TableMeta, ColumnMeta, or CellMeta layers.\n *\n * +-------------+.\n * │ GlobalMeta  │\n * │ (prototype) │\n * +-------------+\\\n *       │         \\\n *       │          \\\n *      \\│/         _\\|\n * +-------------+    +-------------+.\n * │ TableMeta   │    │ ColumnMeta  │\n * │ (instance)  │    │ (prototype) │\n * +-------------+    +-------------+.\n *                         │\n *                         │\n *                        \\│/\n *                    +-------------+.\n *                    │  CellMeta   │\n *                    │ (instance)  │\n *                    +-------------+.\n */\n\n\nvar GlobalMeta = /*#__PURE__*/function () {\n  function GlobalMeta() {\n    _classCallCheck(this, GlobalMeta);\n\n    /**\n     * An alias for the constructor. Necessary for inheritance for creating new layers.\n     *\n     * @type {TableMeta}\n     */\n    this.metaCtor = createTableMetaEmptyClass();\n    /**\n     * Main object (prototype of the internal TableMeta class), holder for all default settings.\n     *\n     * @type {object}\n     */\n\n    this.meta = this.metaCtor.prototype;\n    extend(this.meta, metaSchemaFactory());\n  }\n  /**\n   * Gets constructor of the global meta object. Necessary for inheritance for creating the next meta layers.\n   *\n   * @returns {Function}\n   */\n\n\n  _createClass(GlobalMeta, [{\n    key: \"getMetaConstructor\",\n    value: function getMetaConstructor() {\n      return this.metaCtor;\n    }\n    /**\n     * Gets settings object for this layer.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.meta;\n    }\n    /**\n     * Updates global settings object by merging settings with the current state.\n     *\n     * @param {object} settings An object to merge with.\n     */\n\n  }, {\n    key: \"updateMeta\",\n    value: function updateMeta(settings) {\n      extend(this.meta, settings);\n      extend(this.meta, expandMetaType(settings.type, settings));\n    }\n  }]);\n\n  return GlobalMeta;\n}();\n\nexport { GlobalMeta as default };"]},"metadata":{},"sourceType":"module"}