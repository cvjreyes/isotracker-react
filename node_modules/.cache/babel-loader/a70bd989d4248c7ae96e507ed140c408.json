{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { TrimmingMap } from \"../../translations/index.mjs\";\nimport { arrayEach, arrayReduce } from \"../../helpers/array.mjs\";\nexport var PLUGIN_KEY = 'trimRows';\nexport var PLUGIN_PRIORITY = 330;\n/**\n * @plugin TrimRows\n *\n * @description\n * The plugin allows to trim certain rows. The trimming is achieved by applying the transformation algorithm to the data\n * transformation. In this case, when the row is trimmed it is not accessible using `getData*` methods thus the trimmed\n * data is not visible to other plugins.\n *\n * @example\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   // hide selected rows on table initialization\n *   trimRows: [1, 2, 5]\n * });\n *\n * // access the trimRows plugin instance\n * const trimRowsPlugin = hot.getPlugin('trimRows');\n *\n * // hide single row\n * trimRowsPlugin.trimRow(1);\n *\n * // hide multiple rows\n * trimRowsPlugin.trimRow(1, 2, 9);\n *\n * // or as an array\n * trimRowsPlugin.trimRows([1, 2, 9]);\n *\n * // show single row\n * trimRowsPlugin.untrimRow(1);\n *\n * // show multiple rows\n * trimRowsPlugin.untrimRow(1, 2, 9);\n *\n * // or as an array\n * trimRowsPlugin.untrimRows([1, 2, 9]);\n *\n * // rerender table to see the changes\n * hot.render();\n * ```\n */\n\nexport var TrimRows = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(TrimRows, _BasePlugin);\n\n  var _super = _createSuper(TrimRows);\n\n  function TrimRows(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, TrimRows);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Map of skipped rows by the plugin.\n     *\n     * @private\n     * @type {null|TrimmingMap}\n     */\n\n    _this.trimmedRowsMap = null;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(TrimRows, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.trimmedRowsMap = this.hot.rowIndexMapper.registerMap('trimRows', new TrimmingMap());\n      this.trimmedRowsMap.addLocalHook('init', function () {\n        return _this2.onMapInit();\n      });\n\n      _get(_getPrototypeOf(TrimRows.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      var _this3 = this;\n\n      var trimmedRows = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (Array.isArray(trimmedRows)) {\n        this.hot.batchExecution(function () {\n          _this3.trimmedRowsMap.clear();\n\n          arrayEach(trimmedRows, function (physicalRow) {\n            _this3.trimmedRowsMap.setValueAtIndex(physicalRow, true);\n          });\n        }, true);\n      }\n\n      _get(_getPrototypeOf(TrimRows.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hot.rowIndexMapper.unregisterMap('trimRows');\n\n      _get(_getPrototypeOf(TrimRows.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Get list of trimmed rows.\n     *\n     * @returns {Array} Physical rows.\n     */\n\n  }, {\n    key: \"getTrimmedRows\",\n    value: function getTrimmedRows() {\n      return this.trimmedRowsMap.getTrimmedIndexes();\n    }\n    /**\n     * Trims the rows provided in the array.\n     *\n     * @param {number[]} rows Array of physical row indexes.\n     * @fires Hooks#beforeTrimRow\n     * @fires Hooks#afterTrimRow\n     */\n\n  }, {\n    key: \"trimRows\",\n    value: function trimRows(rows) {\n      var _this4 = this;\n\n      var currentTrimConfig = this.getTrimmedRows();\n      var isValidConfig = this.isValidConfig(rows);\n      var destinationTrimConfig = currentTrimConfig;\n\n      if (isValidConfig) {\n        destinationTrimConfig = Array.from(new Set(currentTrimConfig.concat(rows)));\n      }\n\n      var allowTrimRow = this.hot.runHooks('beforeTrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig);\n\n      if (allowTrimRow === false) {\n        return;\n      }\n\n      if (isValidConfig) {\n        this.hot.batchExecution(function () {\n          arrayEach(rows, function (physicalRow) {\n            _this4.trimmedRowsMap.setValueAtIndex(physicalRow, true);\n          });\n        }, true);\n      }\n\n      this.hot.runHooks('afterTrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig, isValidConfig && destinationTrimConfig.length > currentTrimConfig.length);\n    }\n    /**\n     * Trims the row provided as physical row index (counting from 0).\n     *\n     * @param {...number} row Physical row index.\n     */\n\n  }, {\n    key: \"trimRow\",\n    value: function trimRow() {\n      for (var _len = arguments.length, row = new Array(_len), _key = 0; _key < _len; _key++) {\n        row[_key] = arguments[_key];\n      }\n\n      this.trimRows(row);\n    }\n    /**\n     * Untrims the rows provided in the array.\n     *\n     * @param {number[]} rows Array of physical row indexes.\n     * @fires Hooks#beforeUntrimRow\n     * @fires Hooks#afterUntrimRow\n     */\n\n  }, {\n    key: \"untrimRows\",\n    value: function untrimRows(rows) {\n      var currentTrimConfig = this.getTrimmedRows();\n      var isValidConfig = this.isValidConfig(rows);\n      var destinationTrimConfig = currentTrimConfig;\n      var trimmingMapValues = this.trimmedRowsMap.getValues().slice();\n      var isAnyRowUntrimmed = rows.length > 0;\n\n      if (isValidConfig && isAnyRowUntrimmed) {\n        // Preparing new values for trimming map.\n        arrayEach(rows, function (physicalRow) {\n          trimmingMapValues[physicalRow] = false;\n        }); // Preparing new trimming config.\n\n        destinationTrimConfig = arrayReduce(trimmingMapValues, function (trimmedIndexes, isTrimmed, physicalIndex) {\n          if (isTrimmed) {\n            trimmedIndexes.push(physicalIndex);\n          }\n\n          return trimmedIndexes;\n        }, []);\n      }\n\n      var allowUntrimRow = this.hot.runHooks('beforeUntrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig && isAnyRowUntrimmed);\n\n      if (allowUntrimRow === false) {\n        return;\n      }\n\n      if (isValidConfig && isAnyRowUntrimmed) {\n        this.trimmedRowsMap.setValues(trimmingMapValues);\n      }\n\n      this.hot.runHooks('afterUntrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig && isAnyRowUntrimmed, isValidConfig && destinationTrimConfig.length < currentTrimConfig.length);\n    }\n    /**\n     * Untrims the row provided as row index (counting from 0).\n     *\n     * @param {...number} row Physical row index.\n     */\n\n  }, {\n    key: \"untrimRow\",\n    value: function untrimRow() {\n      for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        row[_key2] = arguments[_key2];\n      }\n\n      this.untrimRows(row);\n    }\n    /**\n     * Checks if given row is hidden.\n     *\n     * @param {number} physicalRow Physical row index.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isTrimmed\",\n    value: function isTrimmed(physicalRow) {\n      return this.trimmedRowsMap.getValueAtIndex(physicalRow) || false;\n    }\n    /**\n     * Untrims all trimmed rows.\n     */\n\n  }, {\n    key: \"untrimAll\",\n    value: function untrimAll() {\n      this.untrimRows(this.getTrimmedRows());\n    }\n    /**\n     * Get if trim config is valid. Check whether all of the provided row indexes are within source data.\n     *\n     * @param {Array} trimmedRows List of physical row indexes.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isValidConfig\",\n    value: function isValidConfig(trimmedRows) {\n      var sourceRows = this.hot.countSourceRows();\n      return trimmedRows.every(function (trimmedRow) {\n        return Number.isInteger(trimmedRow) && trimmedRow >= 0 && trimmedRow < sourceRows;\n      });\n    }\n    /**\n     * On map initialized hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMapInit\",\n    value: function onMapInit() {\n      var _this5 = this;\n\n      var trimmedRows = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (Array.isArray(trimmedRows)) {\n        this.hot.batchExecution(function () {\n          arrayEach(trimmedRows, function (physicalRow) {\n            _this5.trimmedRowsMap.setValueAtIndex(physicalRow, true);\n          });\n        }, true);\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(TrimRows.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return TrimRows;\n}(BasePlugin);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/trimRows/trimRows.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","call","value","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","TrimmingMap","arrayEach","arrayReduce","PLUGIN_KEY","PLUGIN_PRIORITY","TrimRows","_BasePlugin","_super","hotInstance","_this","trimmedRowsMap","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","rowIndexMapper","registerMap","addLocalHook","onMapInit","updatePlugin","_this3","trimmedRows","Array","isArray","batchExecution","clear","physicalRow","setValueAtIndex","disablePlugin","unregisterMap","getTrimmedRows","getTrimmedIndexes","trimRows","rows","_this4","currentTrimConfig","isValidConfig","destinationTrimConfig","from","Set","concat","allowTrimRow","runHooks","trimRow","_len","row","_key","untrimRows","trimmingMapValues","getValues","slice","isAnyRowUntrimmed","trimmedIndexes","isTrimmed","physicalIndex","push","allowUntrimRow","setValues","untrimRow","_len2","_key2","getValueAtIndex","untrimAll","sourceRows","countSourceRows","every","trimmedRow","Number","isInteger","_this5","destroy"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { TrimmingMap } from \"../../translations/index.mjs\";\nimport { arrayEach, arrayReduce } from \"../../helpers/array.mjs\";\nexport var PLUGIN_KEY = 'trimRows';\nexport var PLUGIN_PRIORITY = 330;\n/**\n * @plugin TrimRows\n *\n * @description\n * The plugin allows to trim certain rows. The trimming is achieved by applying the transformation algorithm to the data\n * transformation. In this case, when the row is trimmed it is not accessible using `getData*` methods thus the trimmed\n * data is not visible to other plugins.\n *\n * @example\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   // hide selected rows on table initialization\n *   trimRows: [1, 2, 5]\n * });\n *\n * // access the trimRows plugin instance\n * const trimRowsPlugin = hot.getPlugin('trimRows');\n *\n * // hide single row\n * trimRowsPlugin.trimRow(1);\n *\n * // hide multiple rows\n * trimRowsPlugin.trimRow(1, 2, 9);\n *\n * // or as an array\n * trimRowsPlugin.trimRows([1, 2, 9]);\n *\n * // show single row\n * trimRowsPlugin.untrimRow(1);\n *\n * // show multiple rows\n * trimRowsPlugin.untrimRow(1, 2, 9);\n *\n * // or as an array\n * trimRowsPlugin.untrimRows([1, 2, 9]);\n *\n * // rerender table to see the changes\n * hot.render();\n * ```\n */\n\nexport var TrimRows = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(TrimRows, _BasePlugin);\n\n  var _super = _createSuper(TrimRows);\n\n  function TrimRows(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, TrimRows);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Map of skipped rows by the plugin.\n     *\n     * @private\n     * @type {null|TrimmingMap}\n     */\n\n    _this.trimmedRowsMap = null;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(TrimRows, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.trimmedRowsMap = this.hot.rowIndexMapper.registerMap('trimRows', new TrimmingMap());\n      this.trimmedRowsMap.addLocalHook('init', function () {\n        return _this2.onMapInit();\n      });\n\n      _get(_getPrototypeOf(TrimRows.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      var _this3 = this;\n\n      var trimmedRows = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (Array.isArray(trimmedRows)) {\n        this.hot.batchExecution(function () {\n          _this3.trimmedRowsMap.clear();\n\n          arrayEach(trimmedRows, function (physicalRow) {\n            _this3.trimmedRowsMap.setValueAtIndex(physicalRow, true);\n          });\n        }, true);\n      }\n\n      _get(_getPrototypeOf(TrimRows.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hot.rowIndexMapper.unregisterMap('trimRows');\n\n      _get(_getPrototypeOf(TrimRows.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Get list of trimmed rows.\n     *\n     * @returns {Array} Physical rows.\n     */\n\n  }, {\n    key: \"getTrimmedRows\",\n    value: function getTrimmedRows() {\n      return this.trimmedRowsMap.getTrimmedIndexes();\n    }\n    /**\n     * Trims the rows provided in the array.\n     *\n     * @param {number[]} rows Array of physical row indexes.\n     * @fires Hooks#beforeTrimRow\n     * @fires Hooks#afterTrimRow\n     */\n\n  }, {\n    key: \"trimRows\",\n    value: function trimRows(rows) {\n      var _this4 = this;\n\n      var currentTrimConfig = this.getTrimmedRows();\n      var isValidConfig = this.isValidConfig(rows);\n      var destinationTrimConfig = currentTrimConfig;\n\n      if (isValidConfig) {\n        destinationTrimConfig = Array.from(new Set(currentTrimConfig.concat(rows)));\n      }\n\n      var allowTrimRow = this.hot.runHooks('beforeTrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig);\n\n      if (allowTrimRow === false) {\n        return;\n      }\n\n      if (isValidConfig) {\n        this.hot.batchExecution(function () {\n          arrayEach(rows, function (physicalRow) {\n            _this4.trimmedRowsMap.setValueAtIndex(physicalRow, true);\n          });\n        }, true);\n      }\n\n      this.hot.runHooks('afterTrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig, isValidConfig && destinationTrimConfig.length > currentTrimConfig.length);\n    }\n    /**\n     * Trims the row provided as physical row index (counting from 0).\n     *\n     * @param {...number} row Physical row index.\n     */\n\n  }, {\n    key: \"trimRow\",\n    value: function trimRow() {\n      for (var _len = arguments.length, row = new Array(_len), _key = 0; _key < _len; _key++) {\n        row[_key] = arguments[_key];\n      }\n\n      this.trimRows(row);\n    }\n    /**\n     * Untrims the rows provided in the array.\n     *\n     * @param {number[]} rows Array of physical row indexes.\n     * @fires Hooks#beforeUntrimRow\n     * @fires Hooks#afterUntrimRow\n     */\n\n  }, {\n    key: \"untrimRows\",\n    value: function untrimRows(rows) {\n      var currentTrimConfig = this.getTrimmedRows();\n      var isValidConfig = this.isValidConfig(rows);\n      var destinationTrimConfig = currentTrimConfig;\n      var trimmingMapValues = this.trimmedRowsMap.getValues().slice();\n      var isAnyRowUntrimmed = rows.length > 0;\n\n      if (isValidConfig && isAnyRowUntrimmed) {\n        // Preparing new values for trimming map.\n        arrayEach(rows, function (physicalRow) {\n          trimmingMapValues[physicalRow] = false;\n        }); // Preparing new trimming config.\n\n        destinationTrimConfig = arrayReduce(trimmingMapValues, function (trimmedIndexes, isTrimmed, physicalIndex) {\n          if (isTrimmed) {\n            trimmedIndexes.push(physicalIndex);\n          }\n\n          return trimmedIndexes;\n        }, []);\n      }\n\n      var allowUntrimRow = this.hot.runHooks('beforeUntrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig && isAnyRowUntrimmed);\n\n      if (allowUntrimRow === false) {\n        return;\n      }\n\n      if (isValidConfig && isAnyRowUntrimmed) {\n        this.trimmedRowsMap.setValues(trimmingMapValues);\n      }\n\n      this.hot.runHooks('afterUntrimRow', currentTrimConfig, destinationTrimConfig, isValidConfig && isAnyRowUntrimmed, isValidConfig && destinationTrimConfig.length < currentTrimConfig.length);\n    }\n    /**\n     * Untrims the row provided as row index (counting from 0).\n     *\n     * @param {...number} row Physical row index.\n     */\n\n  }, {\n    key: \"untrimRow\",\n    value: function untrimRow() {\n      for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        row[_key2] = arguments[_key2];\n      }\n\n      this.untrimRows(row);\n    }\n    /**\n     * Checks if given row is hidden.\n     *\n     * @param {number} physicalRow Physical row index.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isTrimmed\",\n    value: function isTrimmed(physicalRow) {\n      return this.trimmedRowsMap.getValueAtIndex(physicalRow) || false;\n    }\n    /**\n     * Untrims all trimmed rows.\n     */\n\n  }, {\n    key: \"untrimAll\",\n    value: function untrimAll() {\n      this.untrimRows(this.getTrimmedRows());\n    }\n    /**\n     * Get if trim config is valid. Check whether all of the provided row indexes are within source data.\n     *\n     * @param {Array} trimmedRows List of physical row indexes.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isValidConfig\",\n    value: function isValidConfig(trimmedRows) {\n      var sourceRows = this.hot.countSourceRows();\n      return trimmedRows.every(function (trimmedRow) {\n        return Number.isInteger(trimmedRow) && trimmedRow >= 0 && trimmedRow < sourceRows;\n      });\n    }\n    /**\n     * On map initialized hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMapInit\",\n    value: function onMapInit() {\n      var _this5 = this;\n\n      var trimmedRows = this.hot.getSettings()[PLUGIN_KEY];\n\n      if (Array.isArray(trimmedRows)) {\n        this.hot.batchExecution(function () {\n          arrayEach(trimmedRows, function (physicalRow) {\n            _this5.trimmedRowsMap.setValueAtIndex(physicalRow, true);\n          });\n        }, true);\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(TrimRows.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return TrimRows;\n}(BasePlugin);"]},"metadata":{},"sourceType":"module"}