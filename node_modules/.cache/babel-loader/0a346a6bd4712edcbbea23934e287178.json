{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\statusDataTable\\\\statusDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport './statusDataTable.css';\nimport { Link } from 'react-router-dom';\nimport { columnLookupSelector } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: record => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name\n  })\n};\n\nclass StatusDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: []\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }, this),\n      onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text ? text.toString() : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n  }\n\n  componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://localhost:5000/api/statusFiles\", options).then(response => response.json()).then(json => {\n      console.log();\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          key: i,\n          status: json.rows[i].to,\n          id: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => this.getMaster(json.rows[i].filename),\n            children: json.rows[i].filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 60\n          }, this)\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        data: rows\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }, this),\n      dataIndex: 'status',\n      key: 'status',\n      width: '20%',\n      ...this.getColumnSearchProps('status'),\n      sorter: {\n        compare: (a, b) => {\n          return a.status.localeCompare(b.status);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"ISO ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'id',\n      key: 'id',\n      width: '20%',\n      ...this.getColumnSearchProps('id'),\n      sorter: {\n        compare: (a, b) => {\n          return a.id.localeCompare(b.id);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Condition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'condition',\n      key: 'condition',\n      ...this.getColumnSearchProps('condition'),\n      sorter: {\n        compare: (a, b) => {\n          return a.condition.localeCompare(b.condition);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Progress MAX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'progressMax',\n      key: 'progressMax',\n      ...this.getColumnSearchProps('progressMax'),\n      sorter: {\n        compare: (a, b) => a.progressMax - b.progressMax\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Real Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'realProgress',\n      key: 'realProgress',\n      ...this.getColumnSearchProps('realProgress'),\n      sorter: {\n        compare: (a, b) => a.realProgress - b.realProgress\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'progress',\n      key: 'progress',\n      ...this.getColumnSearchProps('progress'),\n      sorter: {\n        compare: (a, b) => a.progress - b.progress\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          rowSelection: {\n            type: 'checkbox',\n            ...rowSelection\n          },\n          columns: columns,\n          dataSource: this.state.data,\n          pagination: {\n            pageSize: this.props.pagination\n          },\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            bottom: 25,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Total elements: \", this.state.data.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StatusDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/statusDataTable/statusDataTable.js"],"names":["React","Table","Input","Button","Space","Highlighter","SearchOutlined","Link","columnLookupSelector","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","name","StatusDataTable","Component","state","searchText","searchedColumn","data","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","componentDidMount","options","method","headers","fetch","then","response","json","rows","row","i","length","key","status","to","id","getMaster","filename","push","catch","error","columns","title","sorter","compare","a","b","localeCompare","condition","progressMax","realProgress","progress","type","pageSize","props","pagination","position","bottom","left"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport './statusDataTable.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { columnLookupSelector } from '@material-ui/data-grid';\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\nclass StatusDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: []\r\n  };\r\n  \r\n\r\n  componentDidMount(){\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n    }\r\n    fetch(\"http://localhost:5000/api/statusFiles\", options)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            console.log()\r\n            var rows = []\r\n            var row = null;\r\n            for(let i = 0; i < json.rows.length; i++){\r\n                row = {key:i, status: json.rows[i].to, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link>}\r\n                      \r\n              rows.push(row)\r\n            }\r\n                         \r\n            this.setState({data : rows});\r\n\r\n            }\r\n        )\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n  }\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n\r\n  render() {\r\n    const columns = [\r\n        {\r\n            title: <div className=\"dataTable__header__text\">Status</div>,\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: '20%',\r\n            ...this.getColumnSearchProps('status'),\r\n            sorter: {\r\n                compare: (a, b) => { return a.status.localeCompare(b.status)},\r\n            },\r\n        },\r\n          \r\n      {\r\n        title: <center className=\"dataTable__header__text\">ISO ID</center>,\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('id'),\r\n        sorter:{\r\n            compare: (a, b) => { return a.id.localeCompare(b.id)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Condition</div>,\r\n        dataIndex: 'condition',\r\n        key: 'condition',\r\n        ...this.getColumnSearchProps('condition'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.condition.localeCompare(b.condition)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Progress MAX</div>,\r\n        dataIndex: 'progressMax',\r\n        key: 'progressMax',\r\n        ...this.getColumnSearchProps('progressMax'),\r\n        sorter: {\r\n            compare: (a, b) => a.progressMax - b.progressMax,\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Real Progress</div>,\r\n        dataIndex: 'realProgress',\r\n        key: 'realProgress',\r\n        ...this.getColumnSearchProps('realProgress'),\r\n        sorter: {\r\n            compare: (a, b) => a.realProgress - b.realProgress,\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Progress</div>,\r\n        dataIndex: 'progress',\r\n        key: 'progress',\r\n        ...this.getColumnSearchProps('progress'),\r\n        sorter: {\r\n          compare: (a, b) => a.progress - b.progress,\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} columns={columns} dataSource={this.state.data} pagination={{ pageSize: this.props.pagination  }} size=\"small\"/>\r\n          <div style={{position: \"absolute\", bottom:25, left:0}}>\r\n            <b>Total elements: {this.state.data.length}</b>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatusDataTable;"]},"metadata":{},"sourceType":"module"}