{"ast":null,"code":"import React from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Chart } from \"react-google-charts\";\nexport default class ProgressPlotEquipments extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/gequips\", options).then(response => response.json()).then(async json => {\n      let weeks = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        weeks.push({\n          name: \"W\" + json.rows[i].week,\n          estimated: json.rows[i].estimated,\n          progress: json.rows[i].progress\n        });\n      }\n\n      await this.setState({\n        data: weeks\n      });\n    });\n  }\n\n  render() {\n    return {\n      /*<ResponsiveContainer width=\"90%\" height=\"90%\">\r\n       <LineChart\r\n      width={500}\r\n      height={400}\r\n      data={this.state.data}\r\n      margin={{\r\n        top: 35,\r\n        right: 30,\r\n        left: 20,\r\n        bottom: -15,\r\n      }}\r\n       >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis label={{ value: \"Progress(%)\", position: \"insideLeft\", angle: -90,   dy: 30}} />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type=\"monotone\" dataKey=\"progress\" stroke=\"blue\" activeDot={{ r: 8 }} />\r\n      <Line type=\"monotone\" dataKey=\"estimated\" stroke=\"red\" />\r\n       </LineChart>\r\n      </ResponsiveContainer>*/\n    };\n  }\n\n}\nProgressPlotEquipments.demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';","map":{"version":3,"sources":["C:/Users/ssaez1/technip-repositories/isotracker/isotracker-react/src/components/progressPlotEquipments/progressPlotEquipments.js"],"names":["React","CartesianGrid","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","Chart","ProgressPlotEquipments","PureComponent","state","data","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","weeks","i","rows","length","push","name","week","estimated","progress","setState","render","demoUrl"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,SAAtC,EAAiDC,mBAAjD,EAAsEC,OAAtE,EAA+EC,KAA/E,EAAsFC,KAAtF,QAAmG,UAAnG;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAGE,eAAe,MAAMC,sBAAN,SAAqCV,KAAK,CAACW,aAA3C,CAAyD;AAAA;AAAA;AAAA,SAIzEC,KAJyE,GAIjE;AACPC,MAAAA,IAAI,EAAE;AADC,KAJiE;AAAA;;AASlD,QAAjBC,iBAAiB,GAAG;AAEzB,UAAMC,OAAO,GAAG;AACfC,MAAAA,MAAM,EAAE,KADO;AAEfC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AAFM,KAAhB;AAOA,UAAMC,KAAK,CAAC,YAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAtB,GAAuC,GAAvC,GAA2CF,OAAO,CAACC,GAAR,CAAYE,mBAAvD,GAA2E,UAA5E,EAAwFP,OAAxF,CAAL,CACLQ,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEA,MAAME,IAAN,IAAY;AACjB,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,IAAI,CAACG,IAAL,CAAUC,MAA7B,EAAqCF,CAAC,EAAtC,EAAyC;AACxCD,QAAAA,KAAK,CAACI,IAAN,CAAW;AAACC,UAAAA,IAAI,EAAE,MAAIN,IAAI,CAACG,IAAL,CAAUD,CAAV,EAAaK,IAAxB;AAA8BC,UAAAA,SAAS,EAAER,IAAI,CAACG,IAAL,CAAUD,CAAV,EAAaM,SAAtD;AAAiEC,UAAAA,QAAQ,EAAET,IAAI,CAACG,IAAL,CAAUD,CAAV,EAAaO;AAAxF,SAAX;AACA;;AACD,YAAM,KAAKC,QAAL,CAAc;AAACtB,QAAAA,IAAI,EAAEa;AAAP,OAAd,CAAN;AACA,KARK,CAAN;AASA;;AAIDU,EAAAA,MAAM,GAAG;AACP,WAGD;AAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBE,KAHC;AAyBD;;AAzDwE;AAAnD1B,sB,CACf2B,O,GAAU,kD","sourcesContent":["import React from 'react';\r\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n\r\n  export default class ProgressPlotEquipments extends React.PureComponent {\r\n\tstatic demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';\r\n\t\r\n\r\n\tstate = {\r\n\t\tdata: []\r\n\t  };\r\n\r\n\r\n\tasync componentDidMount (){\r\n\r\n\t\tconst options = {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/gequips\", options)\r\n\t\t.then(response => response.json())\r\n\t\t.then(async json=>{\r\n\t\t\tlet weeks = []\r\n\t\t\tfor(let i = 0; i < json.rows.length; i++){\r\n\t\t\t\tweeks.push({name: \"W\"+json.rows[i].week, estimated: json.rows[i].estimated, progress: json.rows[i].progress})\r\n\t\t\t}\r\n\t\t\tawait this.setState({data: weeks})\r\n\t\t})\r\n\t}\r\n\r\n\t\r\n\r\n\trender() {\r\n\t  return (\r\n\r\n\r\n\t\t{/*<ResponsiveContainer width=\"90%\" height=\"90%\">\r\n\t\t  <LineChart\r\n\t\t\twidth={500}\r\n\t\t\theight={400}\r\n\t\t\tdata={this.state.data}\r\n\t\t\tmargin={{\r\n\t\t\t  top: 35,\r\n\t\t\t  right: 30,\r\n\t\t\t  left: 20,\r\n\t\t\t  bottom: -15,\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t<XAxis dataKey=\"name\" />\r\n\t\t\t<YAxis label={{ value: \"Progress(%)\", position: \"insideLeft\", angle: -90,   dy: 30}} />\r\n\t\t\t<Tooltip />\r\n\t\t\t<Legend />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"progress\" stroke=\"blue\" activeDot={{ r: 8 }} />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"estimated\" stroke=\"red\" />\r\n\t\t  </LineChart>\r\n\t\t</ResponsiveContainer>*/}\r\n\t  );\r\n\t}\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}