{"ast":null,"code":"var _excluded = [\"row\", \"col\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\n\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n\n  _classApplyDescriptorSet(receiver, descriptor, value);\n\n  return value;\n}\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}\n\nimport { extend, isObject } from \"../../../helpers/object.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { normalizeSettings } from \"./settingsNormalizer.mjs\";\n/**\n * List of properties which are configurable. That properties can be changed using public API.\n *\n * @type {string[]}\n */\n\nexport var HEADER_CONFIGURABLE_PROPS = ['label', 'collapsible'];\n/**\n * The class manages and normalizes settings passed by the developer\n * into the nested headers plugin. The SourceSettings class is a\n * source of truth for tree builder (HeaderTree) module.\n *\n * @class SourceSettings\n * @plugin NestedHeaders\n */\n\nvar _data = /*#__PURE__*/new WeakMap();\n\nvar _dataLength = /*#__PURE__*/new WeakMap();\n\nvar _columnsLimit = /*#__PURE__*/new WeakMap();\n\nvar SourceSettings = /*#__PURE__*/function () {\n  function SourceSettings() {\n    _classCallCheck(this, SourceSettings);\n\n    _data.set(this, {\n      writable: true,\n      value: []\n    });\n\n    _dataLength.set(this, {\n      writable: true,\n      value: 0\n    });\n\n    _columnsLimit.set(this, {\n      writable: true,\n      value: Infinity\n    });\n  }\n\n  _createClass(SourceSettings, [{\n    key: \"setColumnsLimit\",\n    value:\n    /**\n     * Sets columns limit to the source settings will be trimmed. All headers which\n     * overlap the column limit will be reduced to keep the structure solid.\n     *\n     * @param {number} columnsCount The number of columns to limit to.\n     */\n    function setColumnsLimit(columnsCount) {\n      _classPrivateFieldSet(this, _columnsLimit, columnsCount);\n    }\n    /**\n     * Sets a new nested header configuration.\n     *\n     * @param {Array[]} [nestedHeadersSettings=[]] The user-defined nested headers settings.\n     */\n\n  }, {\n    key: \"setData\",\n    value: function setData() {\n      var nestedHeadersSettings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      _classPrivateFieldSet(this, _data, normalizeSettings(nestedHeadersSettings, _classPrivateFieldGet(this, _columnsLimit)));\n\n      _classPrivateFieldSet(this, _dataLength, _classPrivateFieldGet(this, _data).length);\n    }\n    /**\n     * Gets normalized source settings.\n     *\n     * @returns {Array[]}\n     */\n\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return _classPrivateFieldGet(this, _data);\n    }\n    /**\n     * Merges settings with current source settings.\n     *\n     * @param {object[]} additionalSettings An array of objects with `row`, `col` and additional\n     *                                      properties to merge with current source settings.\n     */\n\n  }, {\n    key: \"mergeWith\",\n    value: function mergeWith(additionalSettings) {\n      var _this = this;\n\n      arrayEach(additionalSettings, function (_ref) {\n        var row = _ref.row,\n            col = _ref.col,\n            rest = _objectWithoutProperties(_ref, _excluded);\n\n        var headerSettings = _this.getHeaderSettings(row, col);\n\n        if (headerSettings !== null) {\n          extend(headerSettings, rest, HEADER_CONFIGURABLE_PROPS);\n        }\n      });\n    }\n    /**\n     * Maps the current state with a callback. For each source settings the callback function\n     * is called. If the function returns value that value is merged with the source settings.\n     *\n     * @param {Function} callback A function that is called for every header settings.\n     *                            Each time the callback is called, the returned value extends\n     *                            header settings.\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      arrayEach(_classPrivateFieldGet(this, _data), function (header) {\n        arrayEach(header, function (headerSettings) {\n          var propsToExtend = callback(_objectSpread({}, headerSettings));\n\n          if (isObject(propsToExtend)) {\n            extend(headerSettings, propsToExtend, HEADER_CONFIGURABLE_PROPS);\n          }\n        });\n      });\n    }\n    /**\n     * Gets source column header settings for a specified header. The returned\n     * object contains information about the header label, its colspan length,\n     * or if it is hidden in the header renderers.\n     *\n     * @param {number} headerLevel Header level (0 = most distant to the table).\n     * @param {number} columnIndex A visual column index.\n     * @returns {object|null}\n     */\n\n  }, {\n    key: \"getHeaderSettings\",\n    value: function getHeaderSettings(headerLevel, columnIndex) {\n      var _headersSettings$colu;\n\n      if (headerLevel >= _classPrivateFieldGet(this, _dataLength) || headerLevel < 0) {\n        return null;\n      }\n\n      var headersSettings = _classPrivateFieldGet(this, _data)[headerLevel];\n\n      if (columnIndex >= headersSettings.length) {\n        return null;\n      }\n\n      return (_headersSettings$colu = headersSettings[columnIndex]) !== null && _headersSettings$colu !== void 0 ? _headersSettings$colu : null;\n    }\n    /**\n     * Gets source of column headers settings for specified headers. If the retrieved column\n     * settings overlap the range \"box\" determined by \"columnIndex\" and \"columnsLength\"\n     * the exception will be thrown.\n     *\n     * @param {number} headerLevel Header level (0 = most distant to the table).\n     * @param {number} columnIndex A visual column index from which the settings will be extracted.\n     * @param {number} [columnsLength=1] The number of columns involved in the extraction of settings.\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getHeadersSettings\",\n    value: function getHeadersSettings(headerLevel, columnIndex) {\n      var columnsLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var headersSettingsChunks = [];\n\n      if (headerLevel >= _classPrivateFieldGet(this, _dataLength) || headerLevel < 0) {\n        return headersSettingsChunks;\n      }\n\n      var headersSettings = _classPrivateFieldGet(this, _data)[headerLevel];\n\n      var currentLength = 0;\n\n      for (var i = columnIndex; i < headersSettings.length; i++) {\n        var headerSettings = headersSettings[i];\n\n        if (headerSettings.isPlaceholder) {\n          throw new Error('The first column settings cannot overlap the other header layers');\n        }\n\n        currentLength += headerSettings.colspan;\n        headersSettingsChunks.push(headerSettings);\n\n        if (headerSettings.colspan > 1) {\n          i += headerSettings.colspan - 1;\n        } // We met the current sum of the child colspans\n\n\n        if (currentLength === columnsLength) {\n          break;\n        } // We exceeds the current sum of the child colspans, the last columns colspan overlaps the \"columnsLength\" length.\n\n\n        if (currentLength > columnsLength) {\n          throw new Error('The last column settings cannot overlap the other header layers');\n        }\n      }\n\n      return headersSettingsChunks;\n    }\n    /**\n     * Gets a total number of headers levels.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getLayersCount\",\n    value: function getLayersCount() {\n      return _classPrivateFieldGet(this, _dataLength);\n    }\n    /**\n     * Gets a total number of columns count.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getColumnsCount\",\n    value: function getColumnsCount() {\n      return _classPrivateFieldGet(this, _dataLength) > 0 ? _classPrivateFieldGet(this, _data)[0].length : 0;\n    }\n    /**\n     * Clears the data.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      _classPrivateFieldSet(this, _data, []);\n\n      _classPrivateFieldSet(this, _dataLength, 0);\n    }\n  }]);\n\n  return SourceSettings;\n}();\n\nexport { SourceSettings as default };","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/nestedHeaders/stateManager/sourceSettings.mjs"],"names":["_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_classPrivateFieldGet","receiver","privateMap","_classExtractFieldDescriptor","_classApplyDescriptorGet","get","_classPrivateFieldSet","_classApplyDescriptorSet","action","has","set","extend","isObject","arrayEach","normalizeSettings","HEADER_CONFIGURABLE_PROPS","_data","WeakMap","_dataLength","_columnsLimit","SourceSettings","Infinity","setColumnsLimit","columnsCount","setData","nestedHeadersSettings","undefined","getData","mergeWith","additionalSettings","_this","_ref","row","col","rest","headerSettings","getHeaderSettings","map","callback","header","propsToExtend","headerLevel","columnIndex","_headersSettings$colu","headersSettings","getHeadersSettings","columnsLength","headersSettingsChunks","currentLength","isPlaceholder","Error","colspan","getLayersCount","getColumnsCount","clear","default"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nvar _excluded = [\"row\", \"col\"];\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\n\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n\nimport { extend, isObject } from \"../../../helpers/object.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { normalizeSettings } from \"./settingsNormalizer.mjs\";\n/**\n * List of properties which are configurable. That properties can be changed using public API.\n *\n * @type {string[]}\n */\n\nexport var HEADER_CONFIGURABLE_PROPS = ['label', 'collapsible'];\n/**\n * The class manages and normalizes settings passed by the developer\n * into the nested headers plugin. The SourceSettings class is a\n * source of truth for tree builder (HeaderTree) module.\n *\n * @class SourceSettings\n * @plugin NestedHeaders\n */\n\nvar _data = /*#__PURE__*/new WeakMap();\n\nvar _dataLength = /*#__PURE__*/new WeakMap();\n\nvar _columnsLimit = /*#__PURE__*/new WeakMap();\n\nvar SourceSettings = /*#__PURE__*/function () {\n  function SourceSettings() {\n    _classCallCheck(this, SourceSettings);\n\n    _data.set(this, {\n      writable: true,\n      value: []\n    });\n\n    _dataLength.set(this, {\n      writable: true,\n      value: 0\n    });\n\n    _columnsLimit.set(this, {\n      writable: true,\n      value: Infinity\n    });\n  }\n\n  _createClass(SourceSettings, [{\n    key: \"setColumnsLimit\",\n    value:\n    /**\n     * Sets columns limit to the source settings will be trimmed. All headers which\n     * overlap the column limit will be reduced to keep the structure solid.\n     *\n     * @param {number} columnsCount The number of columns to limit to.\n     */\n    function setColumnsLimit(columnsCount) {\n      _classPrivateFieldSet(this, _columnsLimit, columnsCount);\n    }\n    /**\n     * Sets a new nested header configuration.\n     *\n     * @param {Array[]} [nestedHeadersSettings=[]] The user-defined nested headers settings.\n     */\n\n  }, {\n    key: \"setData\",\n    value: function setData() {\n      var nestedHeadersSettings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      _classPrivateFieldSet(this, _data, normalizeSettings(nestedHeadersSettings, _classPrivateFieldGet(this, _columnsLimit)));\n\n      _classPrivateFieldSet(this, _dataLength, _classPrivateFieldGet(this, _data).length);\n    }\n    /**\n     * Gets normalized source settings.\n     *\n     * @returns {Array[]}\n     */\n\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return _classPrivateFieldGet(this, _data);\n    }\n    /**\n     * Merges settings with current source settings.\n     *\n     * @param {object[]} additionalSettings An array of objects with `row`, `col` and additional\n     *                                      properties to merge with current source settings.\n     */\n\n  }, {\n    key: \"mergeWith\",\n    value: function mergeWith(additionalSettings) {\n      var _this = this;\n\n      arrayEach(additionalSettings, function (_ref) {\n        var row = _ref.row,\n            col = _ref.col,\n            rest = _objectWithoutProperties(_ref, _excluded);\n\n        var headerSettings = _this.getHeaderSettings(row, col);\n\n        if (headerSettings !== null) {\n          extend(headerSettings, rest, HEADER_CONFIGURABLE_PROPS);\n        }\n      });\n    }\n    /**\n     * Maps the current state with a callback. For each source settings the callback function\n     * is called. If the function returns value that value is merged with the source settings.\n     *\n     * @param {Function} callback A function that is called for every header settings.\n     *                            Each time the callback is called, the returned value extends\n     *                            header settings.\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      arrayEach(_classPrivateFieldGet(this, _data), function (header) {\n        arrayEach(header, function (headerSettings) {\n          var propsToExtend = callback(_objectSpread({}, headerSettings));\n\n          if (isObject(propsToExtend)) {\n            extend(headerSettings, propsToExtend, HEADER_CONFIGURABLE_PROPS);\n          }\n        });\n      });\n    }\n    /**\n     * Gets source column header settings for a specified header. The returned\n     * object contains information about the header label, its colspan length,\n     * or if it is hidden in the header renderers.\n     *\n     * @param {number} headerLevel Header level (0 = most distant to the table).\n     * @param {number} columnIndex A visual column index.\n     * @returns {object|null}\n     */\n\n  }, {\n    key: \"getHeaderSettings\",\n    value: function getHeaderSettings(headerLevel, columnIndex) {\n      var _headersSettings$colu;\n\n      if (headerLevel >= _classPrivateFieldGet(this, _dataLength) || headerLevel < 0) {\n        return null;\n      }\n\n      var headersSettings = _classPrivateFieldGet(this, _data)[headerLevel];\n\n      if (columnIndex >= headersSettings.length) {\n        return null;\n      }\n\n      return (_headersSettings$colu = headersSettings[columnIndex]) !== null && _headersSettings$colu !== void 0 ? _headersSettings$colu : null;\n    }\n    /**\n     * Gets source of column headers settings for specified headers. If the retrieved column\n     * settings overlap the range \"box\" determined by \"columnIndex\" and \"columnsLength\"\n     * the exception will be thrown.\n     *\n     * @param {number} headerLevel Header level (0 = most distant to the table).\n     * @param {number} columnIndex A visual column index from which the settings will be extracted.\n     * @param {number} [columnsLength=1] The number of columns involved in the extraction of settings.\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getHeadersSettings\",\n    value: function getHeadersSettings(headerLevel, columnIndex) {\n      var columnsLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var headersSettingsChunks = [];\n\n      if (headerLevel >= _classPrivateFieldGet(this, _dataLength) || headerLevel < 0) {\n        return headersSettingsChunks;\n      }\n\n      var headersSettings = _classPrivateFieldGet(this, _data)[headerLevel];\n\n      var currentLength = 0;\n\n      for (var i = columnIndex; i < headersSettings.length; i++) {\n        var headerSettings = headersSettings[i];\n\n        if (headerSettings.isPlaceholder) {\n          throw new Error('The first column settings cannot overlap the other header layers');\n        }\n\n        currentLength += headerSettings.colspan;\n        headersSettingsChunks.push(headerSettings);\n\n        if (headerSettings.colspan > 1) {\n          i += headerSettings.colspan - 1;\n        } // We met the current sum of the child colspans\n\n\n        if (currentLength === columnsLength) {\n          break;\n        } // We exceeds the current sum of the child colspans, the last columns colspan overlaps the \"columnsLength\" length.\n\n\n        if (currentLength > columnsLength) {\n          throw new Error('The last column settings cannot overlap the other header layers');\n        }\n      }\n\n      return headersSettingsChunks;\n    }\n    /**\n     * Gets a total number of headers levels.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getLayersCount\",\n    value: function getLayersCount() {\n      return _classPrivateFieldGet(this, _dataLength);\n    }\n    /**\n     * Gets a total number of columns count.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getColumnsCount\",\n    value: function getColumnsCount() {\n      return _classPrivateFieldGet(this, _dataLength) > 0 ? _classPrivateFieldGet(this, _data)[0].length : 0;\n    }\n    /**\n     * Clears the data.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      _classPrivateFieldSet(this, _data, []);\n\n      _classPrivateFieldSet(this, _dataLength, 0);\n    }\n  }]);\n\n  return SourceSettings;\n}();\n\nexport { SourceSettings as default };"]},"metadata":{},"sourceType":"module"}