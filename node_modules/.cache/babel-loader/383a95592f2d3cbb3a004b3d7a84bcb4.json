{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { addClass, outerHeight, outerWidth } from \"./../helpers/dom/element.mjs\";\nimport { arrayEach } from \"./../helpers/array.mjs\";\n/**\r\n * @class GhostTable\r\n * @util\r\n */\n\nvar GhostTable = /*#__PURE__*/function () {\n  function GhostTable(hotInstance) {\n    _classCallCheck(this, GhostTable);\n    /**\r\n     * Handsontable instance.\r\n     *\r\n     * @type {Core}\r\n     */\n\n\n    this.hot = hotInstance;\n    /**\r\n     * Container element where every table will be injected.\r\n     *\r\n     * @type {HTMLElement|null}\r\n     */\n\n    this.container = null;\n    /**\r\n     * Flag which determine is table was injected to DOM.\r\n     *\r\n     * @type {boolean}\r\n     */\n\n    this.injected = false;\n    /**\r\n     * Added rows collection.\r\n     *\r\n     * @type {Array}\r\n     */\n\n    this.rows = [];\n    /**\r\n     * Added columns collection.\r\n     *\r\n     * @type {Array}\r\n     */\n\n    this.columns = [];\n    /**\r\n     * Samples prepared for calculations.\r\n     *\r\n     * @type {Map}\r\n     * @default {null}\r\n     */\n\n    this.samples = null;\n    /**\r\n     * Ghost table settings.\r\n     *\r\n     * @type {object}\r\n     * @default {Object}\r\n     */\n\n    this.settings = {\n      useHeaders: true\n    };\n  }\n  /**\r\n   * Add row.\r\n   *\r\n   * @param {number} row Row index.\r\n   * @param {Map} samples Samples Map object.\r\n   */\n\n\n  _createClass(GhostTable, [{\n    key: \"addRow\",\n    value: function addRow(row, samples) {\n      if (this.columns.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n\n      if (!this.rows.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n\n      var rowObject = {\n        row: row\n      };\n      this.rows.push(rowObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      this.table.colGroup.appendChild(this.createColGroupsCol());\n      this.table.tr.appendChild(this.createRow(row));\n      this.container.container.appendChild(this.table.fragment);\n      rowObject.table = this.table.table;\n    }\n    /**\r\n     * Add a row consisting of the column headers.\r\n     *\r\n     * @param {Map} samples A map with sampled table values.\r\n     */\n\n  }, {\n    key: \"addColumnHeadersRow\",\n    value: function addColumnHeadersRow(samples) {\n      var colHeader = this.hot.getColHeader(0);\n\n      if (colHeader !== null && colHeader !== void 0) {\n        var rowObject = {\n          row: -1\n        };\n        this.rows.push(rowObject);\n        this.container = this.createContainer(this.hot.rootElement.className);\n        this.samples = samples;\n        this.table = this.createTable(this.hot.table.className);\n        this.table.colGroup.appendChild(this.createColGroupsCol());\n        this.appendColumnHeadersRow();\n        this.container.container.appendChild(this.table.fragment);\n        rowObject.table = this.table.table;\n      }\n    }\n    /**\r\n     * Add column.\r\n     *\r\n     * @param {number} column Column index.\r\n     * @param {Map} samples A map with sampled table values.\r\n     */\n\n  }, {\n    key: \"addColumn\",\n    value: function addColumn(column, samples) {\n      if (this.rows.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n\n      if (!this.columns.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n\n      var columnObject = {\n        col: column\n      };\n      this.columns.push(columnObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n\n      if (this.getSetting('useHeaders') && this.hot.getColHeader(column) !== null) {\n        // Please keep in mind that the renderable column index equal to the visual columns index for the GhostTable.\n        // We render all columns.\n        this.hot.view.appendColHeader(column, this.table.th);\n      }\n\n      this.table.tBody.appendChild(this.createCol(column));\n      this.container.container.appendChild(this.table.fragment);\n      columnObject.table = this.table.table;\n    }\n    /**\r\n     * Get calculated heights.\r\n     *\r\n     * @param {Function} callback Callback which will be fired for each calculated row.\r\n     */\n\n  }, {\n    key: \"getHeights\",\n    value: function getHeights(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n\n      arrayEach(this.rows, function (row) {\n        // -1 <- reduce border-top from table\n        callback(row.row, outerHeight(row.table) - 1);\n      });\n    }\n    /**\r\n     * Get calculated widths.\r\n     *\r\n     * @param {Function} callback Callback which will be fired for each calculated column.\r\n     */\n\n  }, {\n    key: \"getWidths\",\n    value: function getWidths(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n\n      arrayEach(this.columns, function (column) {\n        callback(column.col, outerWidth(column.table));\n      });\n    }\n    /**\r\n     * Set the Ghost Table settings to the provided object.\r\n     *\r\n     * @param {object} settings New Ghost Table Settings.\r\n     */\n\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      this.settings = settings;\n    }\n    /**\r\n     * Set a single setting of the Ghost Table.\r\n     *\r\n     * @param {string} name Setting name.\r\n     * @param {*} value Setting value.\r\n     */\n\n  }, {\n    key: \"setSetting\",\n    value: function setSetting(name, value) {\n      if (!this.settings) {\n        this.settings = {};\n      }\n\n      this.settings[name] = value;\n    }\n    /**\r\n     * Get the Ghost Table settings.\r\n     *\r\n     * @returns {object|null}\r\n     */\n\n  }, {\n    key: \"getSettings\",\n    value: function getSettings() {\n      return this.settings;\n    }\n    /**\r\n     * Get a single Ghost Table setting.\r\n     *\r\n     * @param {string} name The setting name to get.\r\n     * @returns {boolean|null}\r\n     */\n\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(name) {\n      if (this.settings) {\n        return this.settings[name];\n      }\n\n      return null;\n    }\n    /**\r\n     * Create colgroup col elements.\r\n     *\r\n     * @returns {DocumentFragment}\r\n     */\n\n  }, {\n    key: \"createColGroupsCol\",\n    value: function createColGroupsCol() {\n      var _this = this;\n\n      var fragment = this.hot.rootDocument.createDocumentFragment();\n\n      if (this.hot.hasRowHeaders()) {\n        fragment.appendChild(this.createColElement(-1));\n      }\n\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          fragment.appendChild(_this.createColElement(string.col));\n        });\n      });\n      return fragment;\n    }\n    /**\r\n     * Create table row element.\r\n     *\r\n     * @param {number} row Row index.\r\n     * @returns {DocumentFragment} Returns created table row elements.\r\n     */\n\n  }, {\n    key: \"createRow\",\n    value: function createRow(row) {\n      var _this2 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var th = rootDocument.createElement('th');\n\n      if (this.hot.hasRowHeaders()) {\n        this.hot.view.appendRowHeader(row, th);\n        fragment.appendChild(th);\n      }\n\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n\n          var cellProperties = _this2.hot.getCellMeta(row, column);\n\n          cellProperties.col = column;\n          cellProperties.row = row;\n\n          var renderer = _this2.hot.getCellRenderer(cellProperties);\n\n          var td = rootDocument.createElement('td'); // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n\n          td.setAttribute('ghost-table', 1);\n          renderer(_this2.hot, td, row, column, _this2.hot.colToProp(column), string.value, cellProperties);\n          fragment.appendChild(td);\n        });\n      });\n      return fragment;\n    }\n    /**\r\n     * Creates DOM elements for headers and appends them to the THEAD element of the table.\r\n     */\n\n  }, {\n    key: \"appendColumnHeadersRow\",\n    value: function appendColumnHeadersRow() {\n      var _this3 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      var domFragment = rootDocument.createDocumentFragment();\n      var columnHeaders = [];\n\n      if (this.hot.hasRowHeaders()) {\n        var th = rootDocument.createElement('th');\n        columnHeaders.push([-1, th]);\n        domFragment.appendChild(th);\n      }\n\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var th = rootDocument.createElement('th');\n          columnHeaders.push([column, th]);\n          domFragment.appendChild(th);\n        });\n      }); // Appending DOM elements for headers\n\n      this.table.tHead.appendChild(domFragment);\n      arrayEach(columnHeaders, function (columnHeader) {\n        var _columnHeader = _slicedToArray(columnHeader, 2),\n            column = _columnHeader[0],\n            th = _columnHeader[1]; // Using source method for filling a header with value.\n\n\n        _this3.hot.view.appendColHeader(column, th);\n      });\n    }\n    /**\r\n     * Create table column elements.\r\n     *\r\n     * @param {number} column Column index.\r\n     * @returns {DocumentFragment} Returns created column table column elements.\r\n     */\n\n  }, {\n    key: \"createCol\",\n    value: function createCol(column) {\n      var _this4 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var row = string.row;\n\n          var cellProperties = _this4.hot.getCellMeta(row, column);\n\n          cellProperties.col = column;\n          cellProperties.row = row;\n\n          var renderer = _this4.hot.getCellRenderer(cellProperties);\n\n          var td = rootDocument.createElement('td');\n          var tr = rootDocument.createElement('tr'); // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n\n          td.setAttribute('ghost-table', 1);\n          renderer(_this4.hot, td, row, column, _this4.hot.colToProp(column), string.value, cellProperties);\n          tr.appendChild(td);\n          fragment.appendChild(tr);\n        });\n      });\n      return fragment;\n    }\n    /**\r\n     * Remove table from document and reset internal state.\r\n     */\n\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this.rows.length = 0;\n      this.rows[-1] = void 0;\n      this.columns.length = 0;\n\n      if (this.samples) {\n        this.samples.clear();\n      }\n\n      this.samples = null;\n      this.removeTable();\n    }\n    /**\r\n     * Inject generated table into document.\r\n     *\r\n     * @param {HTMLElement} [parent=null] The element to which the ghost table is injected.\r\n     */\n\n  }, {\n    key: \"injectTable\",\n    value: function injectTable() {\n      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (!this.injected) {\n        (parent || this.hot.rootElement).appendChild(this.container.fragment);\n        this.injected = true;\n      }\n    }\n    /**\r\n     * Remove table from document.\r\n     */\n\n  }, {\n    key: \"removeTable\",\n    value: function removeTable() {\n      if (this.injected && this.container.container.parentNode) {\n        this.container.container.parentNode.removeChild(this.container.container);\n        this.container = null;\n        this.injected = false;\n      }\n    }\n    /**\r\n     * Create col element.\r\n     *\r\n     * @param {number} column Column index.\r\n     * @returns {HTMLElement}\r\n     */\n\n  }, {\n    key: \"createColElement\",\n    value: function createColElement(column) {\n      var col = this.hot.rootDocument.createElement('col');\n      col.style.width = \"\".concat(this.hot.view.wt.wtTable.getStretchedColumnWidth(column), \"px\");\n      return col;\n    }\n    /**\r\n     * Create table element.\r\n     *\r\n     * @param {string} className The CSS classes to add.\r\n     * @returns {object}\r\n     */\n\n  }, {\n    key: \"createTable\",\n    value: function createTable() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var table = rootDocument.createElement('table');\n      var tHead = rootDocument.createElement('thead');\n      var tBody = rootDocument.createElement('tbody');\n      var colGroup = rootDocument.createElement('colgroup');\n      var tr = rootDocument.createElement('tr');\n      var th = rootDocument.createElement('th');\n\n      if (this.isVertical()) {\n        table.appendChild(colGroup);\n      }\n\n      if (this.isHorizontal()) {\n        tr.appendChild(th);\n        tHead.appendChild(tr);\n        table.style.tableLayout = 'auto';\n        table.style.width = 'auto';\n      }\n\n      table.appendChild(tHead);\n\n      if (this.isVertical()) {\n        tBody.appendChild(tr);\n      }\n\n      table.appendChild(tBody);\n      addClass(table, className);\n      fragment.appendChild(table);\n      return {\n        fragment: fragment,\n        table: table,\n        tHead: tHead,\n        tBody: tBody,\n        colGroup: colGroup,\n        tr: tr,\n        th: th\n      };\n    }\n    /**\r\n     * Create container for tables.\r\n     *\r\n     * @param {string} className The CSS classes to add.\r\n     * @returns {object}\r\n     */\n\n  }, {\n    key: \"createContainer\",\n    value: function createContainer() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var container = rootDocument.createElement('div');\n      var containerClassName = \"htGhostTable htAutoSize \".concat(className.trim());\n      addClass(container, containerClassName);\n      fragment.appendChild(container);\n      return {\n        fragment: fragment,\n        container: container\n      };\n    }\n    /**\r\n     * Checks if table is raised vertically (checking rows).\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isVertical\",\n    value: function isVertical() {\n      return !!(this.rows.length && !this.columns.length);\n    }\n    /**\r\n     * Checks if table is raised horizontally (checking columns).\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return !!(this.columns.length && !this.rows.length);\n    }\n  }]);\n\n  return GhostTable;\n}();\n\nexport default GhostTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/utils/ghostTable.mjs"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","addClass","outerHeight","outerWidth","arrayEach","GhostTable","hotInstance","hot","container","injected","rows","columns","samples","settings","useHeaders","addRow","row","Error","createContainer","rootElement","className","rowObject","table","createTable","colGroup","appendChild","createColGroupsCol","tr","createRow","fragment","addColumnHeadersRow","colHeader","getColHeader","appendColumnHeadersRow","addColumn","column","columnObject","col","getSetting","view","appendColHeader","th","tBody","createCol","getHeights","callback","injectTable","getWidths","setSettings","setSetting","getSettings","_this","rootDocument","createDocumentFragment","hasRowHeaders","createColElement","forEach","sample","strings","string","_this2","createElement","appendRowHeader","cellProperties","getCellMeta","renderer","getCellRenderer","td","setAttribute","colToProp","_this3","domFragment","columnHeaders","tHead","columnHeader","_columnHeader","_this4","clean","clear","removeTable","parent","arguments","undefined","parentNode","removeChild","style","width","concat","wt","wtTable","getStretchedColumnWidth","isVertical","isHorizontal","tableLayout","containerClassName","trim"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nimport \"core-js/modules/web.dom-collections.for-each.js\";\r\nimport \"core-js/modules/es.string.trim.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.symbol.iterator.js\";\r\nimport \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\nimport \"core-js/modules/es.array.slice.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.array.from.js\";\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nimport { addClass, outerHeight, outerWidth } from \"./../helpers/dom/element.mjs\";\r\nimport { arrayEach } from \"./../helpers/array.mjs\";\r\n/**\r\n * @class GhostTable\r\n * @util\r\n */\r\n\r\nvar GhostTable = /*#__PURE__*/function () {\r\n  function GhostTable(hotInstance) {\r\n    _classCallCheck(this, GhostTable);\r\n\r\n    /**\r\n     * Handsontable instance.\r\n     *\r\n     * @type {Core}\r\n     */\r\n    this.hot = hotInstance;\r\n    /**\r\n     * Container element where every table will be injected.\r\n     *\r\n     * @type {HTMLElement|null}\r\n     */\r\n\r\n    this.container = null;\r\n    /**\r\n     * Flag which determine is table was injected to DOM.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n\r\n    this.injected = false;\r\n    /**\r\n     * Added rows collection.\r\n     *\r\n     * @type {Array}\r\n     */\r\n\r\n    this.rows = [];\r\n    /**\r\n     * Added columns collection.\r\n     *\r\n     * @type {Array}\r\n     */\r\n\r\n    this.columns = [];\r\n    /**\r\n     * Samples prepared for calculations.\r\n     *\r\n     * @type {Map}\r\n     * @default {null}\r\n     */\r\n\r\n    this.samples = null;\r\n    /**\r\n     * Ghost table settings.\r\n     *\r\n     * @type {object}\r\n     * @default {Object}\r\n     */\r\n\r\n    this.settings = {\r\n      useHeaders: true\r\n    };\r\n  }\r\n  /**\r\n   * Add row.\r\n   *\r\n   * @param {number} row Row index.\r\n   * @param {Map} samples Samples Map object.\r\n   */\r\n\r\n\r\n  _createClass(GhostTable, [{\r\n    key: \"addRow\",\r\n    value: function addRow(row, samples) {\r\n      if (this.columns.length) {\r\n        throw new Error('Doesn\\'t support multi-dimensional table');\r\n      }\r\n\r\n      if (!this.rows.length) {\r\n        this.container = this.createContainer(this.hot.rootElement.className);\r\n      }\r\n\r\n      var rowObject = {\r\n        row: row\r\n      };\r\n      this.rows.push(rowObject);\r\n      this.samples = samples;\r\n      this.table = this.createTable(this.hot.table.className);\r\n      this.table.colGroup.appendChild(this.createColGroupsCol());\r\n      this.table.tr.appendChild(this.createRow(row));\r\n      this.container.container.appendChild(this.table.fragment);\r\n      rowObject.table = this.table.table;\r\n    }\r\n    /**\r\n     * Add a row consisting of the column headers.\r\n     *\r\n     * @param {Map} samples A map with sampled table values.\r\n     */\r\n\r\n  }, {\r\n    key: \"addColumnHeadersRow\",\r\n    value: function addColumnHeadersRow(samples) {\r\n      var colHeader = this.hot.getColHeader(0);\r\n\r\n      if (colHeader !== null && colHeader !== void 0) {\r\n        var rowObject = {\r\n          row: -1\r\n        };\r\n        this.rows.push(rowObject);\r\n        this.container = this.createContainer(this.hot.rootElement.className);\r\n        this.samples = samples;\r\n        this.table = this.createTable(this.hot.table.className);\r\n        this.table.colGroup.appendChild(this.createColGroupsCol());\r\n        this.appendColumnHeadersRow();\r\n        this.container.container.appendChild(this.table.fragment);\r\n        rowObject.table = this.table.table;\r\n      }\r\n    }\r\n    /**\r\n     * Add column.\r\n     *\r\n     * @param {number} column Column index.\r\n     * @param {Map} samples A map with sampled table values.\r\n     */\r\n\r\n  }, {\r\n    key: \"addColumn\",\r\n    value: function addColumn(column, samples) {\r\n      if (this.rows.length) {\r\n        throw new Error('Doesn\\'t support multi-dimensional table');\r\n      }\r\n\r\n      if (!this.columns.length) {\r\n        this.container = this.createContainer(this.hot.rootElement.className);\r\n      }\r\n\r\n      var columnObject = {\r\n        col: column\r\n      };\r\n      this.columns.push(columnObject);\r\n      this.samples = samples;\r\n      this.table = this.createTable(this.hot.table.className);\r\n\r\n      if (this.getSetting('useHeaders') && this.hot.getColHeader(column) !== null) {\r\n        // Please keep in mind that the renderable column index equal to the visual columns index for the GhostTable.\r\n        // We render all columns.\r\n        this.hot.view.appendColHeader(column, this.table.th);\r\n      }\r\n\r\n      this.table.tBody.appendChild(this.createCol(column));\r\n      this.container.container.appendChild(this.table.fragment);\r\n      columnObject.table = this.table.table;\r\n    }\r\n    /**\r\n     * Get calculated heights.\r\n     *\r\n     * @param {Function} callback Callback which will be fired for each calculated row.\r\n     */\r\n\r\n  }, {\r\n    key: \"getHeights\",\r\n    value: function getHeights(callback) {\r\n      if (!this.injected) {\r\n        this.injectTable();\r\n      }\r\n\r\n      arrayEach(this.rows, function (row) {\r\n        // -1 <- reduce border-top from table\r\n        callback(row.row, outerHeight(row.table) - 1);\r\n      });\r\n    }\r\n    /**\r\n     * Get calculated widths.\r\n     *\r\n     * @param {Function} callback Callback which will be fired for each calculated column.\r\n     */\r\n\r\n  }, {\r\n    key: \"getWidths\",\r\n    value: function getWidths(callback) {\r\n      if (!this.injected) {\r\n        this.injectTable();\r\n      }\r\n\r\n      arrayEach(this.columns, function (column) {\r\n        callback(column.col, outerWidth(column.table));\r\n      });\r\n    }\r\n    /**\r\n     * Set the Ghost Table settings to the provided object.\r\n     *\r\n     * @param {object} settings New Ghost Table Settings.\r\n     */\r\n\r\n  }, {\r\n    key: \"setSettings\",\r\n    value: function setSettings(settings) {\r\n      this.settings = settings;\r\n    }\r\n    /**\r\n     * Set a single setting of the Ghost Table.\r\n     *\r\n     * @param {string} name Setting name.\r\n     * @param {*} value Setting value.\r\n     */\r\n\r\n  }, {\r\n    key: \"setSetting\",\r\n    value: function setSetting(name, value) {\r\n      if (!this.settings) {\r\n        this.settings = {};\r\n      }\r\n\r\n      this.settings[name] = value;\r\n    }\r\n    /**\r\n     * Get the Ghost Table settings.\r\n     *\r\n     * @returns {object|null}\r\n     */\r\n\r\n  }, {\r\n    key: \"getSettings\",\r\n    value: function getSettings() {\r\n      return this.settings;\r\n    }\r\n    /**\r\n     * Get a single Ghost Table setting.\r\n     *\r\n     * @param {string} name The setting name to get.\r\n     * @returns {boolean|null}\r\n     */\r\n\r\n  }, {\r\n    key: \"getSetting\",\r\n    value: function getSetting(name) {\r\n      if (this.settings) {\r\n        return this.settings[name];\r\n      }\r\n\r\n      return null;\r\n    }\r\n    /**\r\n     * Create colgroup col elements.\r\n     *\r\n     * @returns {DocumentFragment}\r\n     */\r\n\r\n  }, {\r\n    key: \"createColGroupsCol\",\r\n    value: function createColGroupsCol() {\r\n      var _this = this;\r\n\r\n      var fragment = this.hot.rootDocument.createDocumentFragment();\r\n\r\n      if (this.hot.hasRowHeaders()) {\r\n        fragment.appendChild(this.createColElement(-1));\r\n      }\r\n\r\n      this.samples.forEach(function (sample) {\r\n        arrayEach(sample.strings, function (string) {\r\n          fragment.appendChild(_this.createColElement(string.col));\r\n        });\r\n      });\r\n      return fragment;\r\n    }\r\n    /**\r\n     * Create table row element.\r\n     *\r\n     * @param {number} row Row index.\r\n     * @returns {DocumentFragment} Returns created table row elements.\r\n     */\r\n\r\n  }, {\r\n    key: \"createRow\",\r\n    value: function createRow(row) {\r\n      var _this2 = this;\r\n\r\n      var rootDocument = this.hot.rootDocument;\r\n      var fragment = rootDocument.createDocumentFragment();\r\n      var th = rootDocument.createElement('th');\r\n\r\n      if (this.hot.hasRowHeaders()) {\r\n        this.hot.view.appendRowHeader(row, th);\r\n        fragment.appendChild(th);\r\n      }\r\n\r\n      this.samples.forEach(function (sample) {\r\n        arrayEach(sample.strings, function (string) {\r\n          var column = string.col;\r\n\r\n          var cellProperties = _this2.hot.getCellMeta(row, column);\r\n\r\n          cellProperties.col = column;\r\n          cellProperties.row = row;\r\n\r\n          var renderer = _this2.hot.getCellRenderer(cellProperties);\r\n\r\n          var td = rootDocument.createElement('td'); // Indicate that this element is created and supported by GhostTable. It can be useful to\r\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\r\n\r\n          td.setAttribute('ghost-table', 1);\r\n          renderer(_this2.hot, td, row, column, _this2.hot.colToProp(column), string.value, cellProperties);\r\n          fragment.appendChild(td);\r\n        });\r\n      });\r\n      return fragment;\r\n    }\r\n    /**\r\n     * Creates DOM elements for headers and appends them to the THEAD element of the table.\r\n     */\r\n\r\n  }, {\r\n    key: \"appendColumnHeadersRow\",\r\n    value: function appendColumnHeadersRow() {\r\n      var _this3 = this;\r\n\r\n      var rootDocument = this.hot.rootDocument;\r\n      var domFragment = rootDocument.createDocumentFragment();\r\n      var columnHeaders = [];\r\n\r\n      if (this.hot.hasRowHeaders()) {\r\n        var th = rootDocument.createElement('th');\r\n        columnHeaders.push([-1, th]);\r\n        domFragment.appendChild(th);\r\n      }\r\n\r\n      this.samples.forEach(function (sample) {\r\n        arrayEach(sample.strings, function (string) {\r\n          var column = string.col;\r\n          var th = rootDocument.createElement('th');\r\n          columnHeaders.push([column, th]);\r\n          domFragment.appendChild(th);\r\n        });\r\n      }); // Appending DOM elements for headers\r\n\r\n      this.table.tHead.appendChild(domFragment);\r\n      arrayEach(columnHeaders, function (columnHeader) {\r\n        var _columnHeader = _slicedToArray(columnHeader, 2),\r\n            column = _columnHeader[0],\r\n            th = _columnHeader[1]; // Using source method for filling a header with value.\r\n\r\n\r\n        _this3.hot.view.appendColHeader(column, th);\r\n      });\r\n    }\r\n    /**\r\n     * Create table column elements.\r\n     *\r\n     * @param {number} column Column index.\r\n     * @returns {DocumentFragment} Returns created column table column elements.\r\n     */\r\n\r\n  }, {\r\n    key: \"createCol\",\r\n    value: function createCol(column) {\r\n      var _this4 = this;\r\n\r\n      var rootDocument = this.hot.rootDocument;\r\n      var fragment = rootDocument.createDocumentFragment();\r\n      this.samples.forEach(function (sample) {\r\n        arrayEach(sample.strings, function (string) {\r\n          var row = string.row;\r\n\r\n          var cellProperties = _this4.hot.getCellMeta(row, column);\r\n\r\n          cellProperties.col = column;\r\n          cellProperties.row = row;\r\n\r\n          var renderer = _this4.hot.getCellRenderer(cellProperties);\r\n\r\n          var td = rootDocument.createElement('td');\r\n          var tr = rootDocument.createElement('tr'); // Indicate that this element is created and supported by GhostTable. It can be useful to\r\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\r\n\r\n          td.setAttribute('ghost-table', 1);\r\n          renderer(_this4.hot, td, row, column, _this4.hot.colToProp(column), string.value, cellProperties);\r\n          tr.appendChild(td);\r\n          fragment.appendChild(tr);\r\n        });\r\n      });\r\n      return fragment;\r\n    }\r\n    /**\r\n     * Remove table from document and reset internal state.\r\n     */\r\n\r\n  }, {\r\n    key: \"clean\",\r\n    value: function clean() {\r\n      this.rows.length = 0;\r\n      this.rows[-1] = void 0;\r\n      this.columns.length = 0;\r\n\r\n      if (this.samples) {\r\n        this.samples.clear();\r\n      }\r\n\r\n      this.samples = null;\r\n      this.removeTable();\r\n    }\r\n    /**\r\n     * Inject generated table into document.\r\n     *\r\n     * @param {HTMLElement} [parent=null] The element to which the ghost table is injected.\r\n     */\r\n\r\n  }, {\r\n    key: \"injectTable\",\r\n    value: function injectTable() {\r\n      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\r\n\r\n      if (!this.injected) {\r\n        (parent || this.hot.rootElement).appendChild(this.container.fragment);\r\n        this.injected = true;\r\n      }\r\n    }\r\n    /**\r\n     * Remove table from document.\r\n     */\r\n\r\n  }, {\r\n    key: \"removeTable\",\r\n    value: function removeTable() {\r\n      if (this.injected && this.container.container.parentNode) {\r\n        this.container.container.parentNode.removeChild(this.container.container);\r\n        this.container = null;\r\n        this.injected = false;\r\n      }\r\n    }\r\n    /**\r\n     * Create col element.\r\n     *\r\n     * @param {number} column Column index.\r\n     * @returns {HTMLElement}\r\n     */\r\n\r\n  }, {\r\n    key: \"createColElement\",\r\n    value: function createColElement(column) {\r\n      var col = this.hot.rootDocument.createElement('col');\r\n      col.style.width = \"\".concat(this.hot.view.wt.wtTable.getStretchedColumnWidth(column), \"px\");\r\n      return col;\r\n    }\r\n    /**\r\n     * Create table element.\r\n     *\r\n     * @param {string} className The CSS classes to add.\r\n     * @returns {object}\r\n     */\r\n\r\n  }, {\r\n    key: \"createTable\",\r\n    value: function createTable() {\r\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n      var rootDocument = this.hot.rootDocument;\r\n      var fragment = rootDocument.createDocumentFragment();\r\n      var table = rootDocument.createElement('table');\r\n      var tHead = rootDocument.createElement('thead');\r\n      var tBody = rootDocument.createElement('tbody');\r\n      var colGroup = rootDocument.createElement('colgroup');\r\n      var tr = rootDocument.createElement('tr');\r\n      var th = rootDocument.createElement('th');\r\n\r\n      if (this.isVertical()) {\r\n        table.appendChild(colGroup);\r\n      }\r\n\r\n      if (this.isHorizontal()) {\r\n        tr.appendChild(th);\r\n        tHead.appendChild(tr);\r\n        table.style.tableLayout = 'auto';\r\n        table.style.width = 'auto';\r\n      }\r\n\r\n      table.appendChild(tHead);\r\n\r\n      if (this.isVertical()) {\r\n        tBody.appendChild(tr);\r\n      }\r\n\r\n      table.appendChild(tBody);\r\n      addClass(table, className);\r\n      fragment.appendChild(table);\r\n      return {\r\n        fragment: fragment,\r\n        table: table,\r\n        tHead: tHead,\r\n        tBody: tBody,\r\n        colGroup: colGroup,\r\n        tr: tr,\r\n        th: th\r\n      };\r\n    }\r\n    /**\r\n     * Create container for tables.\r\n     *\r\n     * @param {string} className The CSS classes to add.\r\n     * @returns {object}\r\n     */\r\n\r\n  }, {\r\n    key: \"createContainer\",\r\n    value: function createContainer() {\r\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n      var rootDocument = this.hot.rootDocument;\r\n      var fragment = rootDocument.createDocumentFragment();\r\n      var container = rootDocument.createElement('div');\r\n      var containerClassName = \"htGhostTable htAutoSize \".concat(className.trim());\r\n      addClass(container, containerClassName);\r\n      fragment.appendChild(container);\r\n      return {\r\n        fragment: fragment,\r\n        container: container\r\n      };\r\n    }\r\n    /**\r\n     * Checks if table is raised vertically (checking rows).\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"isVertical\",\r\n    value: function isVertical() {\r\n      return !!(this.rows.length && !this.columns.length);\r\n    }\r\n    /**\r\n     * Checks if table is raised horizontally (checking columns).\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"isHorizontal\",\r\n    value: function isHorizontal() {\r\n      return !!(this.columns.length && !this.rows.length);\r\n    }\r\n  }]);\r\n\r\n  return GhostTable;\r\n}();\r\n\r\nexport default GhostTable;"]},"metadata":{},"sourceType":"module"}