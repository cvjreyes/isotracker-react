{"ast":null,"code":"/*\r\n * xpath.js\r\n *\r\n * An XPath 1.0 library for JavaScript.\r\n *\r\n * Cameron McCormack <cam (at) mcc.id.au>\r\n *\r\n * This work is licensed under the MIT License.\r\n *\r\n * Revision 20: April 26, 2011\r\n *   Fixed a typo resulting in FIRST_ORDERED_NODE_TYPE results being wrong,\r\n *   thanks to <shi_a009 (at) hotmail.com>.\r\n *\r\n * Revision 19: November 29, 2005\r\n *   Nodesets now store their nodes in a height balanced tree, increasing\r\n *   performance for the common case of selecting nodes in document order,\r\n *   thanks to Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *   AVL tree code adapted from Raimund Neumann <rnova (at) gmx.net>.\r\n *\r\n * Revision 18: October 27, 2005\r\n *   DOM 3 XPath support.  Caveats:\r\n *     - namespace prefixes aren't resolved in XPathEvaluator.createExpression,\r\n *       but in XPathExpression.evaluate.\r\n *     - XPathResult.invalidIteratorState is not implemented.\r\n *\r\n * Revision 17: October 25, 2005\r\n *   Some core XPath function fixes and a patch to avoid crashing certain\r\n *   versions of MSXML in PathExpr.prototype.getOwnerElement, thanks to\r\n *   Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *\r\n * Revision 16: September 22, 2005\r\n *   Workarounds for some IE 5.5 deficiencies.\r\n *   Fixed problem with prefix node tests on attribute nodes.\r\n *\r\n * Revision 15: May 21, 2005\r\n *   Fixed problem with QName node tests on elements with an xmlns=\"...\".\r\n *\r\n * Revision 14: May 19, 2005\r\n *   Fixed QName node tests on attribute node regression.\r\n *\r\n * Revision 13: May 3, 2005\r\n *   Node tests are case insensitive now if working in an HTML DOM.\r\n *\r\n * Revision 12: April 26, 2005\r\n *   Updated licence.  Slight code changes to enable use of Dean\r\n *   Edwards' script compression, http://dean.edwards.name/packer/ .\r\n *\r\n * Revision 11: April 23, 2005\r\n *   Fixed bug with 'and' and 'or' operators, fix thanks to\r\n *   Sandy McArthur <sandy (at) mcarthur.org>.\r\n *\r\n * Revision 10: April 15, 2005\r\n *   Added support for a virtual root node, supposedly helpful for\r\n *   implementing XForms.  Fixed problem with QName node tests and\r\n *   the parent axis.\r\n *\r\n * Revision 9: March 17, 2005\r\n *   Namespace resolver tweaked so using the document node as the context\r\n *   for namespace lookups is equivalent to using the document element.\r\n *\r\n * Revision 8: February 13, 2005\r\n *   Handle implicit declaration of 'xmlns' namespace prefix.\r\n *   Fixed bug when comparing nodesets.\r\n *   Instance data can now be associated with a FunctionResolver, and\r\n *     workaround for MSXML not supporting 'localName' and 'getElementById',\r\n *     thanks to Grant Gongaware.\r\n *   Fix a few problems when the context node is the root node.\r\n *\r\n * Revision 7: February 11, 2005\r\n *   Default namespace resolver fix from Grant Gongaware\r\n *   <grant (at) gongaware.com>.\r\n *\r\n * Revision 6: February 10, 2005\r\n *   Fixed bug in 'number' function.\r\n *\r\n * Revision 5: February 9, 2005\r\n *   Fixed bug where text nodes not getting converted to string values.\r\n *\r\n * Revision 4: January 21, 2005\r\n *   Bug in 'name' function, fix thanks to Bill Edney.\r\n *   Fixed incorrect processing of namespace nodes.\r\n *   Fixed NamespaceResolver to resolve 'xml' namespace.\r\n *   Implemented union '|' operator.\r\n *\r\n * Revision 3: January 14, 2005\r\n *   Fixed bug with nodeset comparisons, bug lexing < and >.\r\n *\r\n * Revision 2: October 26, 2004\r\n *   QName node test namespace handling fixed.  Few other bug fixes.\r\n *\r\n * Revision 1: August 13, 2004\r\n *   Bug fixes from William J. Edney <bedney (at) technicalpursuit.com>.\r\n *   Added minimal licence.\r\n *\r\n * Initial version: June 14, 2004\r\n */\n// non-node wrapper\nvar xpath = typeof exports === 'undefined' ? {} : exports;\n\n(function (exports) {\n  \"use strict\"; // functional helpers\n\n  function curry(func) {\n    var slice = Array.prototype.slice,\n        totalargs = func.length,\n        partial = function partial(args, fn) {\n      return function () {\n        return fn.apply(this, args.concat(slice.call(arguments)));\n      };\n    },\n        fn = function fn() {\n      var args = slice.call(arguments);\n      return args.length < totalargs ? partial(args, fn) : func.apply(this, slice.apply(arguments, [0, totalargs]));\n    };\n\n    return fn;\n  }\n\n  var forEach = function forEach(f, xs) {\n    for (var i = 0; i < xs.length; i += 1) {\n      f(xs[i], i, xs);\n    }\n  };\n\n  var reduce = function reduce(f, seed, xs) {\n    var acc = seed;\n    forEach(function (x, i) {\n      acc = f(acc, x, i);\n    }, xs);\n    return acc;\n  };\n\n  var map = function map(f, xs) {\n    var mapped = new Array(xs.length);\n    forEach(function (x, i) {\n      mapped[i] = f(x);\n    }, xs);\n    return mapped;\n  };\n\n  var filter = function filter(f, xs) {\n    var filtered = [];\n    forEach(function (x, i) {\n      if (f(x, i)) {\n        filtered.push(x);\n      }\n    }, xs);\n    return filtered;\n  };\n\n  var includes = function includes(values, value) {\n    for (var i = 0; i < values.length; i += 1) {\n      if (values[i] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function always(value) {\n    return function () {\n      return value;\n    };\n  }\n\n  function toString(x) {\n    return x.toString();\n  }\n\n  var join = function join(s, xs) {\n    return xs.join(s);\n  };\n\n  var wrap = function wrap(pref, suf, str) {\n    return pref + str + suf;\n  };\n\n  var prototypeConcat = Array.prototype.concat; // .apply() fails above a certain number of arguments - https://github.com/goto100/xpath/pull/98\n\n  var MAX_ARGUMENT_LENGTH = 32767;\n\n  function flatten(arr) {\n    var result = [];\n\n    for (var start = 0; start < arr.length; start += MAX_ARGUMENT_LENGTH) {\n      var chunk = arr.slice(start, start + MAX_ARGUMENT_LENGTH);\n      result = prototypeConcat.apply(result, chunk);\n    }\n\n    return result;\n  }\n\n  function assign(target, varArgs) {\n    // .length of function is 2\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n\n      if (nextSource != null) {\n        // Skip over if undefined or null\n        for (var nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n\n    return to;\n  } // XPathParser ///////////////////////////////////////////////////////////////\n\n\n  XPathParser.prototype = new Object();\n  XPathParser.prototype.constructor = XPathParser;\n  XPathParser.superclass = Object.prototype;\n\n  function XPathParser() {\n    this.init();\n  }\n\n  XPathParser.prototype.init = function () {\n    this.reduceActions = [];\n\n    this.reduceActions[3] = function (rhs) {\n      return new OrOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[5] = function (rhs) {\n      return new AndOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[7] = function (rhs) {\n      return new EqualsOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[8] = function (rhs) {\n      return new NotEqualOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[10] = function (rhs) {\n      return new LessThanOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[11] = function (rhs) {\n      return new GreaterThanOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[12] = function (rhs) {\n      return new LessThanOrEqualOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[13] = function (rhs) {\n      return new GreaterThanOrEqualOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[15] = function (rhs) {\n      return new PlusOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[16] = function (rhs) {\n      return new MinusOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[18] = function (rhs) {\n      return new MultiplyOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[19] = function (rhs) {\n      return new DivOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[20] = function (rhs) {\n      return new ModOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[22] = function (rhs) {\n      return new UnaryMinusOperation(rhs[1]);\n    };\n\n    this.reduceActions[24] = function (rhs) {\n      return new BarOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[25] = function (rhs) {\n      return new PathExpr(undefined, undefined, rhs[0]);\n    };\n\n    this.reduceActions[27] = function (rhs) {\n      rhs[0].locationPath = rhs[2];\n      return rhs[0];\n    };\n\n    this.reduceActions[28] = function (rhs) {\n      rhs[0].locationPath = rhs[2];\n      rhs[0].locationPath.steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\n      return rhs[0];\n    };\n\n    this.reduceActions[29] = function (rhs) {\n      return new PathExpr(rhs[0], [], undefined);\n    };\n\n    this.reduceActions[30] = function (rhs) {\n      if (Utilities.instance_of(rhs[0], PathExpr)) {\n        if (rhs[0].filterPredicates == undefined) {\n          rhs[0].filterPredicates = [];\n        }\n\n        rhs[0].filterPredicates.push(rhs[1]);\n        return rhs[0];\n      } else {\n        return new PathExpr(rhs[0], [rhs[1]], undefined);\n      }\n    };\n\n    this.reduceActions[32] = function (rhs) {\n      return rhs[1];\n    };\n\n    this.reduceActions[33] = function (rhs) {\n      return new XString(rhs[0]);\n    };\n\n    this.reduceActions[34] = function (rhs) {\n      return new XNumber(rhs[0]);\n    };\n\n    this.reduceActions[36] = function (rhs) {\n      return new FunctionCall(rhs[0], []);\n    };\n\n    this.reduceActions[37] = function (rhs) {\n      return new FunctionCall(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[38] = function (rhs) {\n      return [rhs[0]];\n    };\n\n    this.reduceActions[39] = function (rhs) {\n      rhs[2].unshift(rhs[0]);\n      return rhs[2];\n    };\n\n    this.reduceActions[43] = function (rhs) {\n      return new LocationPath(true, []);\n    };\n\n    this.reduceActions[44] = function (rhs) {\n      rhs[1].absolute = true;\n      return rhs[1];\n    };\n\n    this.reduceActions[46] = function (rhs) {\n      return new LocationPath(false, [rhs[0]]);\n    };\n\n    this.reduceActions[47] = function (rhs) {\n      rhs[0].steps.push(rhs[2]);\n      return rhs[0];\n    };\n\n    this.reduceActions[49] = function (rhs) {\n      return new Step(rhs[0], rhs[1], []);\n    };\n\n    this.reduceActions[50] = function (rhs) {\n      return new Step(Step.CHILD, rhs[0], []);\n    };\n\n    this.reduceActions[51] = function (rhs) {\n      return new Step(rhs[0], rhs[1], rhs[2]);\n    };\n\n    this.reduceActions[52] = function (rhs) {\n      return new Step(Step.CHILD, rhs[0], rhs[1]);\n    };\n\n    this.reduceActions[54] = function (rhs) {\n      return [rhs[0]];\n    };\n\n    this.reduceActions[55] = function (rhs) {\n      rhs[1].unshift(rhs[0]);\n      return rhs[1];\n    };\n\n    this.reduceActions[56] = function (rhs) {\n      if (rhs[0] == \"ancestor\") {\n        return Step.ANCESTOR;\n      } else if (rhs[0] == \"ancestor-or-self\") {\n        return Step.ANCESTORORSELF;\n      } else if (rhs[0] == \"attribute\") {\n        return Step.ATTRIBUTE;\n      } else if (rhs[0] == \"child\") {\n        return Step.CHILD;\n      } else if (rhs[0] == \"descendant\") {\n        return Step.DESCENDANT;\n      } else if (rhs[0] == \"descendant-or-self\") {\n        return Step.DESCENDANTORSELF;\n      } else if (rhs[0] == \"following\") {\n        return Step.FOLLOWING;\n      } else if (rhs[0] == \"following-sibling\") {\n        return Step.FOLLOWINGSIBLING;\n      } else if (rhs[0] == \"namespace\") {\n        return Step.NAMESPACE;\n      } else if (rhs[0] == \"parent\") {\n        return Step.PARENT;\n      } else if (rhs[0] == \"preceding\") {\n        return Step.PRECEDING;\n      } else if (rhs[0] == \"preceding-sibling\") {\n        return Step.PRECEDINGSIBLING;\n      } else if (rhs[0] == \"self\") {\n        return Step.SELF;\n      }\n\n      return -1;\n    };\n\n    this.reduceActions[57] = function (rhs) {\n      return Step.ATTRIBUTE;\n    };\n\n    this.reduceActions[59] = function (rhs) {\n      if (rhs[0] == \"comment\") {\n        return NodeTest.commentTest;\n      } else if (rhs[0] == \"text\") {\n        return NodeTest.textTest;\n      } else if (rhs[0] == \"processing-instruction\") {\n        return NodeTest.anyPiTest;\n      } else if (rhs[0] == \"node\") {\n        return NodeTest.nodeTest;\n      }\n\n      return new NodeTest(-1, undefined);\n    };\n\n    this.reduceActions[60] = function (rhs) {\n      return new NodeTest.PITest(rhs[2]);\n    };\n\n    this.reduceActions[61] = function (rhs) {\n      return rhs[1];\n    };\n\n    this.reduceActions[63] = function (rhs) {\n      rhs[1].absolute = true;\n      rhs[1].steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\n      return rhs[1];\n    };\n\n    this.reduceActions[64] = function (rhs) {\n      rhs[0].steps.push(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\n      rhs[0].steps.push(rhs[2]);\n      return rhs[0];\n    };\n\n    this.reduceActions[65] = function (rhs) {\n      return new Step(Step.SELF, NodeTest.nodeTest, []);\n    };\n\n    this.reduceActions[66] = function (rhs) {\n      return new Step(Step.PARENT, NodeTest.nodeTest, []);\n    };\n\n    this.reduceActions[67] = function (rhs) {\n      return new VariableReference(rhs[1]);\n    };\n\n    this.reduceActions[68] = function (rhs) {\n      return NodeTest.nameTestAny;\n    };\n\n    this.reduceActions[69] = function (rhs) {\n      return new NodeTest.NameTestPrefixAny(rhs[0].split(':')[0]);\n    };\n\n    this.reduceActions[70] = function (rhs) {\n      return new NodeTest.NameTestQName(rhs[0]);\n    };\n  };\n\n  XPathParser.actionTable = [\" s s        sssssssss    s ss  s  ss\", \"                 s                  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"                rrrrr               \", \" s s        sssssssss    s ss  s  ss\", \"rs  rrrrrrrr s  sssssrrrrrr  rrs rs \", \" s s        sssssssss    s ss  s  ss\", \"                            s       \", \"                            s       \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"  s                                 \", \"                            s       \", \" s           s  sssss          s  s \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"a                                   \", \"r       s                    rr  r  \", \"r      sr                    rr  r  \", \"r   s  rr            s       rr  r  \", \"r   rssrr            rss     rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrrsss         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrrs  rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r  srrrrrrrr         rrrrrrs rr sr  \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"                sssss               \", \"r  rrrrrrrrr         rrrrrrr rr sr  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             s      \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"              s                     \", \"                             s      \", \"                rrrrr               \", \" s s        sssssssss    s sss s  ss\", \"r  srrrrrrrr         rrrrrrs rr  r  \", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss      ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s           s  sssss          s  s \", \" s           s  sssss          s  s \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \" s           s  sssss          s  s \", \" s           s  sssss          s  s \", \"r  rrrrrrrrr         rrrrrrr rr sr  \", \"r  rrrrrrrrr         rrrrrrr rr sr  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             s      \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             rr     \", \"                             s      \", \"                             rs     \", \"r      sr                    rr  r  \", \"r   s  rr            s       rr  r  \", \"r   rssrr            rss     rr  r  \", \"r   rssrr            rss     rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrrsss         rrrrr   rr  r  \", \"r   rrrrrsss         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"                                 r  \", \"                                 s  \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \" s s        sssssssss    s ss  s  ss\", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             r      \"];\n  XPathParser.actionTableNumber = [\" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"                 J                  \", \"a  aaaaaaaaa         aaaaaaa aa  a  \", \"                YYYYY               \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"K1  KKKKKKKK .  +*)('KKKKKK  KK# K\\\" \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"                            N       \", \"                            O       \", \"e  eeeeeeeee         eeeeeee ee ee  \", \"f  fffffffff         fffffff ff ff  \", \"d  ddddddddd         ddddddd dd dd  \", \"B  BBBBBBBBB         BBBBBBB BB BB  \", \"A  AAAAAAAAA         AAAAAAA AA AA  \", \"  P                                 \", \"                            Q       \", \" 1           .  +*)('          #  \\\" \", \"b  bbbbbbbbb         bbbbbbb bb  b  \", \"                                    \", \"!       S                    !!  !  \", \"\\\"      T\\\"                    \\\"\\\"  \\\"  \", \"$   V  $$            U       $$  $  \", \"&   &ZY&&            &XW     &&  &  \", \")   )))))            )))\\\\[   ))  )  \", \".   ....._^]         .....   ..  .  \", \"1   11111111         11111   11  1  \", \"5   55555555         55555`  55  5  \", \"7   77777777         777777  77  7  \", \"9   99999999         999999  99  9  \", \":  c::::::::         ::::::b :: a:  \", \"I  fIIIIIIII         IIIIIIe II  I  \", \"=  =========         ======= == ==  \", \"?  ?????????         ??????? ?? ??  \", \"C  CCCCCCCCC         CCCCCCC CC CC  \", \"J   JJJJJJJJ         JJJJJJ  JJ  J  \", \"M   MMMMMMMM         MMMMMM  MM  M  \", \"N  NNNNNNNNN         NNNNNNN NN  N  \", \"P  PPPPPPPPP         PPPPPPP PP  P  \", \"                +*)('               \", \"R  RRRRRRRRR         RRRRRRR RR aR  \", \"U  UUUUUUUUU         UUUUUUU UU  U  \", \"Z  ZZZZZZZZZ         ZZZZZZZ ZZ ZZ  \", \"c  ccccccccc         ccccccc cc cc  \", \"                             j      \", \"L  fLLLLLLLL         LLLLLLe LL  L  \", \"6   66666666         66666   66  6  \", \"              k                     \", \"                             l      \", \"                XXXXX               \", \" 1 0        /.-,+*)('    & %$m #  \\\"!\", \"_  f________         ______e __  _  \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('      %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1           .  +*)('          #  \\\" \", \" 1           .  +*)('          #  \\\" \", \">  >>>>>>>>>         >>>>>>> >> >>  \", \" 1           .  +*)('          #  \\\" \", \" 1           .  +*)('          #  \\\" \", \"Q  QQQQQQQQQ         QQQQQQQ QQ aQ  \", \"V  VVVVVVVVV         VVVVVVV VV aV  \", \"T  TTTTTTTTT         TTTTTTT TT  T  \", \"@  @@@@@@@@@         @@@@@@@ @@ @@  \", \"                             \\x87      \", \"[  [[[[[[[[[         [[[[[[[ [[ [[  \", \"D  DDDDDDDDD         DDDDDDD DD DD  \", \"                             HH     \", \"                             \\x88      \", \"                             F\\x89     \", \"#      T#                    ##  #  \", \"%   V  %%            U       %%  %  \", \"'   'ZY''            'XW     ''  '  \", \"(   (ZY((            (XW     ((  (  \", \"+   +++++            +++\\\\[   ++  +  \", \"*   *****            ***\\\\[   **  *  \", \"-   -----            ---\\\\[   --  -  \", \",   ,,,,,            ,,,\\\\[   ,,  ,  \", \"0   00000_^]         00000   00  0  \", \"/   /////_^]         /////   //  /  \", \"2   22222222         22222   22  2  \", \"3   33333333         33333   33  3  \", \"4   44444444         44444   44  4  \", \"8   88888888         888888  88  8  \", \"                                 ^  \", \"                                 \\x8a  \", \";  f;;;;;;;;         ;;;;;;e ;;  ;  \", \"<  f<<<<<<<<         <<<<<<e <<  <  \", \"O  OOOOOOOOO         OOOOOOO OO  O  \", \"`  `````````         ``````` ``  `  \", \"S  SSSSSSSSS         SSSSSSS SS  S  \", \"W  WWWWWWWWW         WWWWWWW WW  W  \", \"\\\\  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\         \\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\\\\\ \\\\\\\\  \", \"E  EEEEEEEEE         EEEEEEE EE EE  \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"]  ]]]]]]]]]         ]]]]]]] ]] ]]  \", \"                             G      \"];\n  XPathParser.gotoTable = [\"3456789:;<=>?@ AB  CDEFGH IJ \", \"                             \", \"                             \", \"                             \", \"L456789:;<=>?@ AB  CDEFGH IJ \", \"            M        EFGH IJ \", \"       N;<=>?@ AB  CDEFGH IJ \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"            S        EFGH IJ \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"              e              \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                        h  J \", \"              i          j   \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"o456789:;<=>?@ ABpqCDEFGH IJ \", \"                             \", \"  r6789:;<=>?@ AB  CDEFGH IJ \", \"   s789:;<=>?@ AB  CDEFGH IJ \", \"    t89:;<=>?@ AB  CDEFGH IJ \", \"    u89:;<=>?@ AB  CDEFGH IJ \", \"     v9:;<=>?@ AB  CDEFGH IJ \", \"     w9:;<=>?@ AB  CDEFGH IJ \", \"     x9:;<=>?@ AB  CDEFGH IJ \", \"     y9:;<=>?@ AB  CDEFGH IJ \", \"      z:;<=>?@ AB  CDEFGH IJ \", \"      {:;<=>?@ AB  CDEFGH IJ \", \"       |;<=>?@ AB  CDEFGH IJ \", \"       };<=>?@ AB  CDEFGH IJ \", \"       ~;<=>?@ AB  CDEFGH IJ \", \"         \\x7f=>?@ AB  CDEFGH IJ \", \"\\x80456789:;<=>?@ AB  CDEFGH IJ\\x81\", \"            \\x82        EFGH IJ \", \"            \\x83        EFGH IJ \", \"                             \", \"                     \\x84 GH IJ \", \"                     \\x85 GH IJ \", \"              i          \\x86   \", \"              i          \\xo456789:;<=>?@ AB\\x8cqCDEFGH IJ \", \"                             \", \"                             \"];\n  XPathParser.productions = [[1, 1, 2], [2, 1, 3], [3, 1, 4], [3, 3, 3, -9, 4], [4, 1, 5], [4, 3, 4, -8, 5], [5, 1, 6], [5, 3, 5, -22, 6], [5, 3, 5, -5, 6], [6, 1, 7], [6, 3, 6, -23, 7], [6, 3, 6, -24, 7], [6, 3, 6, -6, 7], [6, 3, 6, -7, 7], [7, 1, 8], [7, 3, 7, -25, 8], [7, 3, 7, -26, 8], [8, 1, 9], [8, 3, 8, -12, 9], [8, 3, 8, -11, 9], [8, 3, 8, -10, 9], [9, 1, 10], [9, 2, -26, 9], [10, 1, 11], [10, 3, 10, -27, 11], [11, 1, 12], [11, 1, 13], [11, 3, 13, -28, 14], [11, 3, 13, -4, 14], [13, 1, 15], [13, 2, 13, 16], [15, 1, 17], [15, 3, -29, 2, -30], [15, 1, -15], [15, 1, -16], [15, 1, 18], [18, 3, -13, -29, -30], [18, 4, -13, -29, 19, -30], [19, 1, 20], [19, 3, 20, -31, 19], [20, 1, 2], [12, 1, 14], [12, 1, 21], [21, 1, -28], [21, 2, -28, 14], [21, 1, 22], [14, 1, 23], [14, 3, 14, -28, 23], [14, 1, 24], [23, 2, 25, 26], [23, 1, 26], [23, 3, 25, 26, 27], [23, 2, 26, 27], [23, 1, 28], [27, 1, 16], [27, 2, 16, 27], [25, 2, -14, -3], [25, 1, -32], [26, 1, 29], [26, 3, -20, -29, -30], [26, 4, -21, -29, -15, -30], [16, 3, -33, 30, -34], [30, 1, 2], [22, 2, -4, 14], [24, 3, 14, -4, 23], [28, 1, -35], [28, 1, -2], [17, 2, -36, -18], [29, 1, -17], [29, 1, -19], [29, 1, -18]];\n  XPathParser.DOUBLEDOT = 2;\n  XPathParser.DOUBLECOLON = 3;\n  XPathParser.DOUBLESLASH = 4;\n  XPathParser.NOTEQUAL = 5;\n  XPathParser.LESSTHANOREQUAL = 6;\n  XPathParser.GREATERTHANOREQUAL = 7;\n  XPathParser.AND = 8;\n  XPathParser.OR = 9;\n  XPathParser.MOD = 10;\n  XPathParser.DIV = 11;\n  XPathParser.MULTIPLYOPERATOR = 12;\n  XPathParser.FUNCTIONNAME = 13;\n  XPathParser.AXISNAME = 14;\n  XPathParser.LITERAL = 15;\n  XPathParser.NUMBER = 16;\n  XPathParser.ASTERISKNAMETEST = 17;\n  XPathParser.QNAME = 18;\n  XPathParser.NCNAMECOLONASTERISK = 19;\n  XPathParser.NODETYPE = 20;\n  XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL = 21;\n  XPathParser.EQUALS = 22;\n  XPathParser.LESSTHAN = 23;\n  XPathParser.GREATERTHAN = 24;\n  XPathParser.PLUS = 25;\n  XPathParser.MINUS = 26;\n  XPathParser.BAR = 27;\n  XPathParser.SLASH = 28;\n  XPathParser.LEFTPARENTHESIS = 29;\n  XPathParser.RIGHTPARENTHESIS = 30;\n  XPathParser.COMMA = 31;\n  XPathParser.AT = 32;\n  XPathParser.LEFTBRACKET = 33;\n  XPathParser.RIGHTBRACKET = 34;\n  XPathParser.DOT = 35;\n  XPathParser.DOLLAR = 36;\n\n  XPathParser.prototype.tokenize = function (s1) {\n    var types = [];\n    var values = [];\n    var s = s1 + '\\0';\n    var pos = 0;\n    var c = s.charAt(pos++);\n\n    while (1) {\n      while (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\n        c = s.charAt(pos++);\n      }\n\n      if (c == '\\0' || pos >= s.length) {\n        break;\n      }\n\n      if (c == '(') {\n        types.push(XPathParser.LEFTPARENTHESIS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == ')') {\n        types.push(XPathParser.RIGHTPARENTHESIS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '[') {\n        types.push(XPathParser.LEFTBRACKET);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == ']') {\n        types.push(XPathParser.RIGHTBRACKET);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '@') {\n        types.push(XPathParser.AT);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == ',') {\n        types.push(XPathParser.COMMA);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '|') {\n        types.push(XPathParser.BAR);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '+') {\n        types.push(XPathParser.PLUS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '-') {\n        types.push(XPathParser.MINUS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '=') {\n        types.push(XPathParser.EQUALS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '$') {\n        types.push(XPathParser.DOLLAR);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '.') {\n        c = s.charAt(pos++);\n\n        if (c == '.') {\n          types.push(XPathParser.DOUBLEDOT);\n          values.push(\"..\");\n          c = s.charAt(pos++);\n          continue;\n        }\n\n        if (c >= '0' && c <= '9') {\n          var number = \".\" + c;\n          c = s.charAt(pos++);\n\n          while (c >= '0' && c <= '9') {\n            number += c;\n            c = s.charAt(pos++);\n          }\n\n          types.push(XPathParser.NUMBER);\n          values.push(number);\n          continue;\n        }\n\n        types.push(XPathParser.DOT);\n        values.push('.');\n        continue;\n      }\n\n      if (c == '\\'' || c == '\"') {\n        var delimiter = c;\n        var literal = \"\";\n\n        while (pos < s.length && (c = s.charAt(pos)) !== delimiter) {\n          literal += c;\n          pos += 1;\n        }\n\n        if (c !== delimiter) {\n          throw XPathException.fromMessage(\"Unterminated string literal: \" + delimiter + literal);\n        }\n\n        pos += 1;\n        types.push(XPathParser.LITERAL);\n        values.push(literal);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c >= '0' && c <= '9') {\n        var number = c;\n        c = s.charAt(pos++);\n\n        while (c >= '0' && c <= '9') {\n          number += c;\n          c = s.charAt(pos++);\n        }\n\n        if (c == '.') {\n          if (s.charAt(pos) >= '0' && s.charAt(pos) <= '9') {\n            number += c;\n            number += s.charAt(pos++);\n            c = s.charAt(pos++);\n\n            while (c >= '0' && c <= '9') {\n              number += c;\n              c = s.charAt(pos++);\n            }\n          }\n        }\n\n        types.push(XPathParser.NUMBER);\n        values.push(number);\n        continue;\n      }\n\n      if (c == '*') {\n        if (types.length > 0) {\n          var last = types[types.length - 1];\n\n          if (last != XPathParser.AT && last != XPathParser.DOUBLECOLON && last != XPathParser.LEFTPARENTHESIS && last != XPathParser.LEFTBRACKET && last != XPathParser.AND && last != XPathParser.OR && last != XPathParser.MOD && last != XPathParser.DIV && last != XPathParser.MULTIPLYOPERATOR && last != XPathParser.SLASH && last != XPathParser.DOUBLESLASH && last != XPathParser.BAR && last != XPathParser.PLUS && last != XPathParser.MINUS && last != XPathParser.EQUALS && last != XPathParser.NOTEQUAL && last != XPathParser.LESSTHAN && last != XPathParser.LESSTHANOREQUAL && last != XPathParser.GREATERTHAN && last != XPathParser.GREATERTHANOREQUAL) {\n            types.push(XPathParser.MULTIPLYOPERATOR);\n            values.push(c);\n            c = s.charAt(pos++);\n            continue;\n          }\n        }\n\n        types.push(XPathParser.ASTERISKNAMETEST);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == ':') {\n        if (s.charAt(pos) == ':') {\n          types.push(XPathParser.DOUBLECOLON);\n          values.push(\"::\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n      }\n\n      if (c == '/') {\n        c = s.charAt(pos++);\n\n        if (c == '/') {\n          types.push(XPathParser.DOUBLESLASH);\n          values.push(\"//\");\n          c = s.charAt(pos++);\n          continue;\n        }\n\n        types.push(XPathParser.SLASH);\n        values.push('/');\n        continue;\n      }\n\n      if (c == '!') {\n        if (s.charAt(pos) == '=') {\n          types.push(XPathParser.NOTEQUAL);\n          values.push(\"!=\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n      }\n\n      if (c == '<') {\n        if (s.charAt(pos) == '=') {\n          types.push(XPathParser.LESSTHANOREQUAL);\n          values.push(\"<=\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n\n        types.push(XPathParser.LESSTHAN);\n        values.push('<');\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '>') {\n        if (s.charAt(pos) == '=') {\n          types.push(XPathParser.GREATERTHANOREQUAL);\n          values.push(\">=\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n\n        types.push(XPathParser.GREATERTHAN);\n        values.push('>');\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '_' || Utilities.isLetter(c.charCodeAt(0))) {\n        var name = c;\n        c = s.charAt(pos++);\n\n        while (Utilities.isNCNameChar(c.charCodeAt(0))) {\n          name += c;\n          c = s.charAt(pos++);\n        }\n\n        if (types.length > 0) {\n          var last = types[types.length - 1];\n\n          if (last != XPathParser.AT && last != XPathParser.DOUBLECOLON && last != XPathParser.LEFTPARENTHESIS && last != XPathParser.LEFTBRACKET && last != XPathParser.AND && last != XPathParser.OR && last != XPathParser.MOD && last != XPathParser.DIV && last != XPathParser.MULTIPLYOPERATOR && last != XPathParser.SLASH && last != XPathParser.DOUBLESLASH && last != XPathParser.BAR && last != XPathParser.PLUS && last != XPathParser.MINUS && last != XPathParser.EQUALS && last != XPathParser.NOTEQUAL && last != XPathParser.LESSTHAN && last != XPathParser.LESSTHANOREQUAL && last != XPathParser.GREATERTHAN && last != XPathParser.GREATERTHANOREQUAL) {\n            if (name == \"and\") {\n              types.push(XPathParser.AND);\n              values.push(name);\n              continue;\n            }\n\n            if (name == \"or\") {\n              types.push(XPathParser.OR);\n              values.push(name);\n              continue;\n            }\n\n            if (name == \"mod\") {\n              types.push(XPathParser.MOD);\n              values.push(name);\n              continue;\n            }\n\n            if (name == \"div\") {\n              types.push(XPathParser.DIV);\n              values.push(name);\n              continue;\n            }\n          }\n        }\n\n        if (c == ':') {\n          if (s.charAt(pos) == '*') {\n            types.push(XPathParser.NCNAMECOLONASTERISK);\n            values.push(name + \":*\");\n            pos++;\n            c = s.charAt(pos++);\n            continue;\n          }\n\n          if (s.charAt(pos) == '_' || Utilities.isLetter(s.charCodeAt(pos))) {\n            name += ':';\n            c = s.charAt(pos++);\n\n            while (Utilities.isNCNameChar(c.charCodeAt(0))) {\n              name += c;\n              c = s.charAt(pos++);\n            }\n\n            if (c == '(') {\n              types.push(XPathParser.FUNCTIONNAME);\n              values.push(name);\n              continue;\n            }\n\n            types.push(XPathParser.QNAME);\n            values.push(name);\n            continue;\n          }\n\n          if (s.charAt(pos) == ':') {\n            types.push(XPathParser.AXISNAME);\n            values.push(name);\n            continue;\n          }\n        }\n\n        if (c == '(') {\n          if (name == \"comment\" || name == \"text\" || name == \"node\") {\n            types.push(XPathParser.NODETYPE);\n            values.push(name);\n            continue;\n          }\n\n          if (name == \"processing-instruction\") {\n            if (s.charAt(pos) == ')') {\n              types.push(XPathParser.NODETYPE);\n            } else {\n              types.push(XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL);\n            }\n\n            values.push(name);\n            continue;\n          }\n\n          types.push(XPathParser.FUNCTIONNAME);\n          values.push(name);\n          continue;\n        }\n\n        types.push(XPathParser.QNAME);\n        values.push(name);\n        continue;\n      }\n\n      throw new Error(\"Unexpected character \" + c);\n    }\n\n    types.push(1);\n    values.push(\"[EOF]\");\n    return [types, values];\n  };\n\n  XPathParser.SHIFT = 's';\n  XPathParser.REDUCE = 'r';\n  XPathParser.ACCEPT = 'a';\n\n  XPathParser.prototype.parse = function (s) {\n    var types;\n    var values;\n    var res = this.tokenize(s);\n\n    if (res == undefined) {\n      return undefined;\n    }\n\n    types = res[0];\n    values = res[1];\n    var tokenPos = 0;\n    var state = [];\n    var tokenType = [];\n    var tokenValue = [];\n    var s;\n    var a;\n    var t;\n    state.push(0);\n    tokenType.push(1);\n    tokenValue.push(\"_S\");\n    a = types[tokenPos];\n    t = values[tokenPos++];\n\n    while (1) {\n      s = state[state.length - 1];\n\n      switch (XPathParser.actionTable[s].charAt(a - 1)) {\n        case XPathParser.SHIFT:\n          tokenType.push(-a);\n          tokenValue.push(t);\n          state.push(XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32);\n          a = types[tokenPos];\n          t = values[tokenPos++];\n          break;\n\n        case XPathParser.REDUCE:\n          var num = XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][1];\n          var rhs = [];\n\n          for (var i = 0; i < num; i++) {\n            tokenType.pop();\n            rhs.unshift(tokenValue.pop());\n            state.pop();\n          }\n\n          var s_ = state[state.length - 1];\n          tokenType.push(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0]);\n\n          if (this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32] == undefined) {\n            tokenValue.push(rhs[0]);\n          } else {\n            tokenValue.push(this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32](rhs));\n          }\n\n          state.push(XPathParser.gotoTable[s_].charCodeAt(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0] - 2) - 33);\n          break;\n\n        case XPathParser.ACCEPT:\n          return new XPath(tokenValue.pop());\n\n        default:\n          throw new Error(\"XPath parse error\");\n      }\n    }\n  }; // XPath /////////////////////////////////////////////////////////////////////\n\n\n  XPath.prototype = new Object();\n  XPath.prototype.constructor = XPath;\n  XPath.superclass = Object.prototype;\n\n  function XPath(e) {\n    this.expression = e;\n  }\n\n  XPath.prototype.toString = function () {\n    return this.expression.toString();\n  };\n\n  function setIfUnset(obj, prop, value) {\n    if (!(prop in obj)) {\n      obj[prop] = value;\n    }\n  }\n\n  XPath.prototype.evaluate = function (c) {\n    c.contextNode = c.expressionContextNode;\n    c.contextSize = 1;\n    c.contextPosition = 1; // [2017-11-25] Removed usage of .implementation.hasFeature() since it does\n    //              not reliably detect HTML DOMs (always returns false in xmldom and true in browsers)\n\n    if (c.isHtml) {\n      setIfUnset(c, 'caseInsensitive', true);\n      setIfUnset(c, 'allowAnyNamespaceForNoPrefix', true);\n    }\n\n    setIfUnset(c, 'caseInsensitive', false);\n    return this.expression.evaluate(c);\n  };\n\n  XPath.XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\n  XPath.XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\"; // Expression ////////////////////////////////////////////////////////////////\n\n  Expression.prototype = new Object();\n  Expression.prototype.constructor = Expression;\n  Expression.superclass = Object.prototype;\n\n  function Expression() {}\n\n  Expression.prototype.init = function () {};\n\n  Expression.prototype.toString = function () {\n    return \"<Expression>\";\n  };\n\n  Expression.prototype.evaluate = function (c) {\n    throw new Error(\"Could not evaluate expression.\");\n  }; // UnaryOperation ////////////////////////////////////////////////////////////\n\n\n  UnaryOperation.prototype = new Expression();\n  UnaryOperation.prototype.constructor = UnaryOperation;\n  UnaryOperation.superclass = Expression.prototype;\n\n  function UnaryOperation(rhs) {\n    if (arguments.length > 0) {\n      this.init(rhs);\n    }\n  }\n\n  UnaryOperation.prototype.init = function (rhs) {\n    this.rhs = rhs;\n  }; // UnaryMinusOperation ///////////////////////////////////////////////////////\n\n\n  UnaryMinusOperation.prototype = new UnaryOperation();\n  UnaryMinusOperation.prototype.constructor = UnaryMinusOperation;\n  UnaryMinusOperation.superclass = UnaryOperation.prototype;\n\n  function UnaryMinusOperation(rhs) {\n    if (arguments.length > 0) {\n      this.init(rhs);\n    }\n  }\n\n  UnaryMinusOperation.prototype.init = function (rhs) {\n    UnaryMinusOperation.superclass.init.call(this, rhs);\n  };\n\n  UnaryMinusOperation.prototype.evaluate = function (c) {\n    return this.rhs.evaluate(c).number().negate();\n  };\n\n  UnaryMinusOperation.prototype.toString = function () {\n    return \"-\" + this.rhs.toString();\n  }; // BinaryOperation ///////////////////////////////////////////////////////////\n\n\n  BinaryOperation.prototype = new Expression();\n  BinaryOperation.prototype.constructor = BinaryOperation;\n  BinaryOperation.superclass = Expression.prototype;\n\n  function BinaryOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  BinaryOperation.prototype.init = function (lhs, rhs) {\n    this.lhs = lhs;\n    this.rhs = rhs;\n  }; // OrOperation ///////////////////////////////////////////////////////////////\n\n\n  OrOperation.prototype = new BinaryOperation();\n  OrOperation.prototype.constructor = OrOperation;\n  OrOperation.superclass = BinaryOperation.prototype;\n\n  function OrOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  OrOperation.prototype.init = function (lhs, rhs) {\n    OrOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  OrOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" or \" + this.rhs.toString() + \")\";\n  };\n\n  OrOperation.prototype.evaluate = function (c) {\n    var b = this.lhs.evaluate(c).bool();\n\n    if (b.booleanValue()) {\n      return b;\n    }\n\n    return this.rhs.evaluate(c).bool();\n  }; // AndOperation //////////////////////////////////////////////////////////////\n\n\n  AndOperation.prototype = new BinaryOperation();\n  AndOperation.prototype.constructor = AndOperation;\n  AndOperation.superclass = BinaryOperation.prototype;\n\n  function AndOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  AndOperation.prototype.init = function (lhs, rhs) {\n    AndOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  AndOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" and \" + this.rhs.toString() + \")\";\n  };\n\n  AndOperation.prototype.evaluate = function (c) {\n    var b = this.lhs.evaluate(c).bool();\n\n    if (!b.booleanValue()) {\n      return b;\n    }\n\n    return this.rhs.evaluate(c).bool();\n  }; // EqualsOperation ///////////////////////////////////////////////////////////\n\n\n  EqualsOperation.prototype = new BinaryOperation();\n  EqualsOperation.prototype.constructor = EqualsOperation;\n  EqualsOperation.superclass = BinaryOperation.prototype;\n\n  function EqualsOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  EqualsOperation.prototype.init = function (lhs, rhs) {\n    EqualsOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  EqualsOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" = \" + this.rhs.toString() + \")\";\n  };\n\n  EqualsOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).equals(this.rhs.evaluate(c));\n  }; // NotEqualOperation /////////////////////////////////////////////////////////\n\n\n  NotEqualOperation.prototype = new BinaryOperation();\n  NotEqualOperation.prototype.constructor = NotEqualOperation;\n  NotEqualOperation.superclass = BinaryOperation.prototype;\n\n  function NotEqualOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  NotEqualOperation.prototype.init = function (lhs, rhs) {\n    NotEqualOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  NotEqualOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" != \" + this.rhs.toString() + \")\";\n  };\n\n  NotEqualOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).notequal(this.rhs.evaluate(c));\n  }; // LessThanOperation /////////////////////////////////////////////////////////\n\n\n  LessThanOperation.prototype = new BinaryOperation();\n  LessThanOperation.prototype.constructor = LessThanOperation;\n  LessThanOperation.superclass = BinaryOperation.prototype;\n\n  function LessThanOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  LessThanOperation.prototype.init = function (lhs, rhs) {\n    LessThanOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  LessThanOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).lessthan(this.rhs.evaluate(c));\n  };\n\n  LessThanOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" < \" + this.rhs.toString() + \")\";\n  }; // GreaterThanOperation //////////////////////////////////////////////////////\n\n\n  GreaterThanOperation.prototype = new BinaryOperation();\n  GreaterThanOperation.prototype.constructor = GreaterThanOperation;\n  GreaterThanOperation.superclass = BinaryOperation.prototype;\n\n  function GreaterThanOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  GreaterThanOperation.prototype.init = function (lhs, rhs) {\n    GreaterThanOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  GreaterThanOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).greaterthan(this.rhs.evaluate(c));\n  };\n\n  GreaterThanOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" > \" + this.rhs.toString() + \")\";\n  }; // LessThanOrEqualOperation //////////////////////////////////////////////////\n\n\n  LessThanOrEqualOperation.prototype = new BinaryOperation();\n  LessThanOrEqualOperation.prototype.constructor = LessThanOrEqualOperation;\n  LessThanOrEqualOperation.superclass = BinaryOperation.prototype;\n\n  function LessThanOrEqualOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  LessThanOrEqualOperation.prototype.init = function (lhs, rhs) {\n    LessThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  LessThanOrEqualOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).lessthanorequal(this.rhs.evaluate(c));\n  };\n\n  LessThanOrEqualOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" <= \" + this.rhs.toString() + \")\";\n  }; // GreaterThanOrEqualOperation ///////////////////////////////////////////////\n\n\n  GreaterThanOrEqualOperation.prototype = new BinaryOperation();\n  GreaterThanOrEqualOperation.prototype.constructor = GreaterThanOrEqualOperation;\n  GreaterThanOrEqualOperation.superclass = BinaryOperation.prototype;\n\n  function GreaterThanOrEqualOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  GreaterThanOrEqualOperation.prototype.init = function (lhs, rhs) {\n    GreaterThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  GreaterThanOrEqualOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).greaterthanorequal(this.rhs.evaluate(c));\n  };\n\n  GreaterThanOrEqualOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" >= \" + this.rhs.toString() + \")\";\n  }; // PlusOperation /////////////////////////////////////////////////////////////\n\n\n  PlusOperation.prototype = new BinaryOperation();\n  PlusOperation.prototype.constructor = PlusOperation;\n  PlusOperation.superclass = BinaryOperation.prototype;\n\n  function PlusOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  PlusOperation.prototype.init = function (lhs, rhs) {\n    PlusOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  PlusOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().plus(this.rhs.evaluate(c).number());\n  };\n\n  PlusOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" + \" + this.rhs.toString() + \")\";\n  }; // MinusOperation ////////////////////////////////////////////////////////////\n\n\n  MinusOperation.prototype = new BinaryOperation();\n  MinusOperation.prototype.constructor = MinusOperation;\n  MinusOperation.superclass = BinaryOperation.prototype;\n\n  function MinusOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  MinusOperation.prototype.init = function (lhs, rhs) {\n    MinusOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  MinusOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().minus(this.rhs.evaluate(c).number());\n  };\n\n  MinusOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" - \" + this.rhs.toString() + \")\";\n  }; // MultiplyOperation /////////////////////////////////////////////////////////\n\n\n  MultiplyOperation.prototype = new BinaryOperation();\n  MultiplyOperation.prototype.constructor = MultiplyOperation;\n  MultiplyOperation.superclass = BinaryOperation.prototype;\n\n  function MultiplyOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  MultiplyOperation.prototype.init = function (lhs, rhs) {\n    MultiplyOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  MultiplyOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().multiply(this.rhs.evaluate(c).number());\n  };\n\n  MultiplyOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" * \" + this.rhs.toString() + \")\";\n  }; // DivOperation //////////////////////////////////////////////////////////////\n\n\n  DivOperation.prototype = new BinaryOperation();\n  DivOperation.prototype.constructor = DivOperation;\n  DivOperation.superclass = BinaryOperation.prototype;\n\n  function DivOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  DivOperation.prototype.init = function (lhs, rhs) {\n    DivOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  DivOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().div(this.rhs.evaluate(c).number());\n  };\n\n  DivOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" div \" + this.rhs.toString() + \")\";\n  }; // ModOperation //////////////////////////////////////////////////////////////\n\n\n  ModOperation.prototype = new BinaryOperation();\n  ModOperation.prototype.constructor = ModOperation;\n  ModOperation.superclass = BinaryOperation.prototype;\n\n  function ModOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  ModOperation.prototype.init = function (lhs, rhs) {\n    ModOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  ModOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().mod(this.rhs.evaluate(c).number());\n  };\n\n  ModOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" mod \" + this.rhs.toString() + \")\";\n  }; // BarOperation //////////////////////////////////////////////////////////////\n\n\n  BarOperation.prototype = new BinaryOperation();\n  BarOperation.prototype.constructor = BarOperation;\n  BarOperation.superclass = BinaryOperation.prototype;\n\n  function BarOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  BarOperation.prototype.init = function (lhs, rhs) {\n    BarOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  BarOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).nodeset().union(this.rhs.evaluate(c).nodeset());\n  };\n\n  BarOperation.prototype.toString = function () {\n    return map(toString, [this.lhs, this.rhs]).join(' | ');\n  }; // PathExpr //////////////////////////////////////////////////////////////////\n\n\n  PathExpr.prototype = new Expression();\n  PathExpr.prototype.constructor = PathExpr;\n  PathExpr.superclass = Expression.prototype;\n\n  function PathExpr(filter, filterPreds, locpath) {\n    if (arguments.length > 0) {\n      this.init(filter, filterPreds, locpath);\n    }\n  }\n\n  PathExpr.prototype.init = function (filter, filterPreds, locpath) {\n    PathExpr.superclass.init.call(this);\n    this.filter = filter;\n    this.filterPredicates = filterPreds;\n    this.locationPath = locpath;\n  };\n  /**\r\n   * Returns the topmost node of the tree containing node\r\n   */\n\n\n  function findRoot(node) {\n    while (node && node.parentNode) {\n      node = node.parentNode;\n    }\n\n    return node;\n  }\n\n  PathExpr.applyPredicates = function (predicates, c, nodes) {\n    if (predicates.length === 0) {\n      return nodes;\n    }\n\n    var ctx = c.extend({});\n    return reduce(function (inNodes, pred) {\n      ctx.contextSize = inNodes.length;\n      return filter(function (node, i) {\n        ctx.contextNode = node;\n        ctx.contextPosition = i + 1;\n        return PathExpr.predicateMatches(pred, ctx);\n      }, inNodes);\n    }, nodes, predicates);\n  };\n\n  PathExpr.getRoot = function (xpc, nodes) {\n    var firstNode = nodes[0];\n\n    if (firstNode.nodeType === 9\n    /*Node.DOCUMENT_NODE*/\n    ) {\n        return firstNode;\n      }\n\n    if (xpc.virtualRoot) {\n      return xpc.virtualRoot;\n    }\n\n    var ownerDoc = firstNode.ownerDocument;\n\n    if (ownerDoc) {\n      return ownerDoc;\n    } // IE 5.5 doesn't have ownerDocument?\n\n\n    var n = firstNode;\n\n    while (n.parentNode != null) {\n      n = n.parentNode;\n    }\n\n    return n;\n  };\n\n  PathExpr.applyStep = function (step, xpc, node) {\n    var self = this;\n    var newNodes = [];\n    xpc.contextNode = node;\n\n    switch (step.axis) {\n      case Step.ANCESTOR:\n        // look at all the ancestor nodes\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n\n        var m;\n\n        if (xpc.contextNode.nodeType == 2\n        /*Node.ATTRIBUTE_NODE*/\n        ) {\n            m = PathExpr.getOwnerElement(xpc.contextNode);\n          } else {\n          m = xpc.contextNode.parentNode;\n        }\n\n        while (m != null) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n\n          if (m === xpc.virtualRoot) {\n            break;\n          }\n\n          m = m.parentNode;\n        }\n\n        break;\n\n      case Step.ANCESTORORSELF:\n        // look at all the ancestor nodes and the current node\n        for (var m = xpc.contextNode; m != null; m = m.nodeType == 2\n        /*Node.ATTRIBUTE_NODE*/\n        ? PathExpr.getOwnerElement(m) : m.parentNode) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n\n          if (m === xpc.virtualRoot) {\n            break;\n          }\n        }\n\n        break;\n\n      case Step.ATTRIBUTE:\n        // look at the attributes\n        var nnm = xpc.contextNode.attributes;\n\n        if (nnm != null) {\n          for (var k = 0; k < nnm.length; k++) {\n            var m = nnm.item(k);\n\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n          }\n        }\n\n        break;\n\n      case Step.CHILD:\n        // look at all child elements\n        for (var m = xpc.contextNode.firstChild; m != null; m = m.nextSibling) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n        }\n\n        break;\n\n      case Step.DESCENDANT:\n        // look at all descendant nodes\n        var st = [xpc.contextNode.firstChild];\n\n        while (st.length > 0) {\n          for (var m = st.pop(); m != null;) {\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        }\n\n        break;\n\n      case Step.DESCENDANTORSELF:\n        // look at self\n        if (step.nodeTest.matches(xpc.contextNode, xpc)) {\n          newNodes.push(xpc.contextNode);\n        } // look at all descendant nodes\n\n\n        var st = [xpc.contextNode.firstChild];\n\n        while (st.length > 0) {\n          for (var m = st.pop(); m != null;) {\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        }\n\n        break;\n\n      case Step.FOLLOWING:\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n\n        var st = [];\n\n        if (xpc.contextNode.firstChild != null) {\n          st.unshift(xpc.contextNode.firstChild);\n        } else {\n          st.unshift(xpc.contextNode.nextSibling);\n        }\n\n        for (var m = xpc.contextNode.parentNode; m != null && m.nodeType != 9\n        /*Node.DOCUMENT_NODE*/\n        && m !== xpc.virtualRoot; m = m.parentNode) {\n          st.unshift(m.nextSibling);\n        }\n\n        do {\n          for (var m = st.pop(); m != null;) {\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        } while (st.length > 0);\n\n        break;\n\n      case Step.FOLLOWINGSIBLING:\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n\n        for (var m = xpc.contextNode.nextSibling; m != null; m = m.nextSibling) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n        }\n\n        break;\n\n      case Step.NAMESPACE:\n        var n = {};\n\n        if (xpc.contextNode.nodeType == 1\n        /*Node.ELEMENT_NODE*/\n        ) {\n            n[\"xml\"] = XPath.XML_NAMESPACE_URI;\n            n[\"xmlns\"] = XPath.XMLNS_NAMESPACE_URI;\n\n            for (var m = xpc.contextNode; m != null && m.nodeType == 1\n            /*Node.ELEMENT_NODE*/\n            ; m = m.parentNode) {\n              for (var k = 0; k < m.attributes.length; k++) {\n                var attr = m.attributes.item(k);\n                var nm = String(attr.name);\n\n                if (nm == \"xmlns\") {\n                  if (n[\"\"] == undefined) {\n                    n[\"\"] = attr.value;\n                  }\n                } else if (nm.length > 6 && nm.substring(0, 6) == \"xmlns:\") {\n                  var pre = nm.substring(6, nm.length);\n\n                  if (n[pre] == undefined) {\n                    n[pre] = attr.value;\n                  }\n                }\n              }\n            }\n\n            for (var pre in n) {\n              var nsn = new XPathNamespace(pre, n[pre], xpc.contextNode);\n\n              if (step.nodeTest.matches(nsn, xpc)) {\n                newNodes.push(nsn);\n              }\n            }\n          }\n\n        break;\n\n      case Step.PARENT:\n        m = null;\n\n        if (xpc.contextNode !== xpc.virtualRoot) {\n          if (xpc.contextNode.nodeType == 2\n          /*Node.ATTRIBUTE_NODE*/\n          ) {\n              m = PathExpr.getOwnerElement(xpc.contextNode);\n            } else {\n            m = xpc.contextNode.parentNode;\n          }\n        }\n\n        if (m != null && step.nodeTest.matches(m, xpc)) {\n          newNodes.push(m);\n        }\n\n        break;\n\n      case Step.PRECEDING:\n        var st;\n\n        if (xpc.virtualRoot != null) {\n          st = [xpc.virtualRoot];\n        } else {\n          // cannot rely on .ownerDocument because the node may be in a document fragment\n          st = [findRoot(xpc.contextNode)];\n        }\n\n        outer: while (st.length > 0) {\n          for (var m = st.pop(); m != null;) {\n            if (m == xpc.contextNode) {\n              break outer;\n            }\n\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.unshift(m);\n            }\n\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        }\n\n        break;\n\n      case Step.PRECEDINGSIBLING:\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n\n        for (var m = xpc.contextNode.previousSibling; m != null; m = m.previousSibling) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n        }\n\n        break;\n\n      case Step.SELF:\n        if (step.nodeTest.matches(xpc.contextNode, xpc)) {\n          newNodes.push(xpc.contextNode);\n        }\n\n        break;\n\n      default:\n    }\n\n    return newNodes;\n  };\n\n  function applyStepWithPredicates(step, xpc, node) {\n    return PathExpr.applyPredicates(step.predicates, xpc, PathExpr.applyStep(step, xpc, node));\n  }\n\n  function applyStepToNodes(context, nodes, step) {\n    return flatten(map(applyStepWithPredicates.bind(null, step, context), nodes));\n  }\n\n  PathExpr.applySteps = function (steps, xpc, nodes) {\n    return reduce(applyStepToNodes.bind(null, xpc), nodes, steps);\n  };\n\n  PathExpr.prototype.applyFilter = function (c, xpc) {\n    if (!this.filter) {\n      return {\n        nodes: [c.contextNode]\n      };\n    }\n\n    var ns = this.filter.evaluate(c);\n\n    if (!Utilities.instance_of(ns, XNodeSet)) {\n      if (this.filterPredicates != null && this.filterPredicates.length > 0 || this.locationPath != null) {\n        throw new Error(\"Path expression filter must evaluate to a nodeset if predicates or location path are used\");\n      }\n\n      return {\n        nonNodes: ns\n      };\n    }\n\n    return {\n      nodes: PathExpr.applyPredicates(this.filterPredicates || [], xpc, ns.toUnsortedArray())\n    };\n  };\n\n  PathExpr.applyLocationPath = function (locationPath, xpc, nodes) {\n    if (!locationPath) {\n      return nodes;\n    }\n\n    var startNodes = locationPath.absolute ? [PathExpr.getRoot(xpc, nodes)] : nodes;\n    return PathExpr.applySteps(locationPath.steps, xpc, startNodes);\n  };\n\n  PathExpr.prototype.evaluate = function (c) {\n    var xpc = assign(new XPathContext(), c);\n    var filterResult = this.applyFilter(c, xpc);\n\n    if ('nonNodes' in filterResult) {\n      return filterResult.nonNodes;\n    }\n\n    var ns = new XNodeSet();\n    ns.addArray(PathExpr.applyLocationPath(this.locationPath, xpc, filterResult.nodes));\n    return ns;\n  };\n\n  PathExpr.predicateMatches = function (pred, c) {\n    var res = pred.evaluate(c);\n    return Utilities.instance_of(res, XNumber) ? c.contextPosition === res.numberValue() : res.booleanValue();\n  };\n\n  PathExpr.predicateString = function (predicate) {\n    return wrap('[', ']', predicate.toString());\n  };\n\n  PathExpr.predicatesString = function (predicates) {\n    return join('', map(PathExpr.predicateString, predicates));\n  };\n\n  PathExpr.prototype.toString = function () {\n    if (this.filter != undefined) {\n      var filterStr = toString(this.filter);\n\n      if (Utilities.instance_of(this.filter, XString)) {\n        return wrap(\"'\", \"'\", filterStr);\n      }\n\n      if (this.filterPredicates != undefined && this.filterPredicates.length) {\n        return wrap('(', ')', filterStr) + PathExpr.predicatesString(this.filterPredicates);\n      }\n\n      if (this.locationPath != undefined) {\n        return filterStr + (this.locationPath.absolute ? '' : '/') + toString(this.locationPath);\n      }\n\n      return filterStr;\n    }\n\n    return toString(this.locationPath);\n  };\n\n  PathExpr.getOwnerElement = function (n) {\n    // DOM 2 has ownerElement\n    if (n.ownerElement) {\n      return n.ownerElement;\n    } // DOM 1 Internet Explorer can use selectSingleNode (ironically)\n\n\n    try {\n      if (n.selectSingleNode) {\n        return n.selectSingleNode(\"..\");\n      }\n    } catch (e) {} // Other DOM 1 implementations must use this egregious search\n\n\n    var doc = n.nodeType == 9\n    /*Node.DOCUMENT_NODE*/\n    ? n : n.ownerDocument;\n    var elts = doc.getElementsByTagName(\"*\");\n\n    for (var i = 0; i < elts.length; i++) {\n      var elt = elts.item(i);\n      var nnm = elt.attributes;\n\n      for (var j = 0; j < nnm.length; j++) {\n        var an = nnm.item(j);\n\n        if (an === n) {\n          return elt;\n        }\n      }\n    }\n\n    return null;\n  }; // LocationPath //////////////////////////////////////////////////////////////\n\n\n  LocationPath.prototype = new Object();\n  LocationPath.prototype.constructor = LocationPath;\n  LocationPath.superclass = Object.prototype;\n\n  function LocationPath(abs, steps) {\n    if (arguments.length > 0) {\n      this.init(abs, steps);\n    }\n  }\n\n  LocationPath.prototype.init = function (abs, steps) {\n    this.absolute = abs;\n    this.steps = steps;\n  };\n\n  LocationPath.prototype.toString = function () {\n    return (this.absolute ? '/' : '') + map(toString, this.steps).join('/');\n  }; // Step //////////////////////////////////////////////////////////////////////\n\n\n  Step.prototype = new Object();\n  Step.prototype.constructor = Step;\n  Step.superclass = Object.prototype;\n\n  function Step(axis, nodetest, preds) {\n    if (arguments.length > 0) {\n      this.init(axis, nodetest, preds);\n    }\n  }\n\n  Step.prototype.init = function (axis, nodetest, preds) {\n    this.axis = axis;\n    this.nodeTest = nodetest;\n    this.predicates = preds;\n  };\n\n  Step.prototype.toString = function () {\n    return Step.STEPNAMES[this.axis] + \"::\" + this.nodeTest.toString() + PathExpr.predicatesString(this.predicates);\n  };\n\n  Step.ANCESTOR = 0;\n  Step.ANCESTORORSELF = 1;\n  Step.ATTRIBUTE = 2;\n  Step.CHILD = 3;\n  Step.DESCENDANT = 4;\n  Step.DESCENDANTORSELF = 5;\n  Step.FOLLOWING = 6;\n  Step.FOLLOWINGSIBLING = 7;\n  Step.NAMESPACE = 8;\n  Step.PARENT = 9;\n  Step.PRECEDING = 10;\n  Step.PRECEDINGSIBLING = 11;\n  Step.SELF = 12;\n  Step.STEPNAMES = reduce(function (acc, x) {\n    return acc[x[0]] = x[1], acc;\n  }, {}, [[Step.ANCESTOR, 'ancestor'], [Step.ANCESTORORSELF, 'ancestor-or-self'], [Step.ATTRIBUTE, 'attribute'], [Step.CHILD, 'child'], [Step.DESCENDANT, 'descendant'], [Step.DESCENDANTORSELF, 'descendant-or-self'], [Step.FOLLOWING, 'following'], [Step.FOLLOWINGSIBLING, 'following-sibling'], [Step.NAMESPACE, 'namespace'], [Step.PARENT, 'parent'], [Step.PRECEDING, 'preceding'], [Step.PRECEDINGSIBLING, 'preceding-sibling'], [Step.SELF, 'self']]); // NodeTest //////////////////////////////////////////////////////////////////\n\n  NodeTest.prototype = new Object();\n  NodeTest.prototype.constructor = NodeTest;\n  NodeTest.superclass = Object.prototype;\n\n  function NodeTest(type, value) {\n    if (arguments.length > 0) {\n      this.init(type, value);\n    }\n  }\n\n  NodeTest.prototype.init = function (type, value) {\n    this.type = type;\n    this.value = value;\n  };\n\n  NodeTest.prototype.toString = function () {\n    return \"<unknown nodetest type>\";\n  };\n\n  NodeTest.prototype.matches = function (n, xpc) {\n    console.warn('unknown node test type');\n  };\n\n  NodeTest.NAMETESTANY = 0;\n  NodeTest.NAMETESTPREFIXANY = 1;\n  NodeTest.NAMETESTQNAME = 2;\n  NodeTest.COMMENT = 3;\n  NodeTest.TEXT = 4;\n  NodeTest.PI = 5;\n  NodeTest.NODE = 6;\n\n  NodeTest.isNodeType = function (types) {\n    return function (node) {\n      return includes(types, node.nodeType);\n    };\n  };\n\n  NodeTest.makeNodeTestType = function (type, members, ctor) {\n    var newType = ctor || function () {};\n\n    newType.prototype = new NodeTest(type);\n    newType.prototype.constructor = newType;\n    assign(newType.prototype, members);\n    return newType;\n  }; // create invariant node test for certain node types\n\n\n  NodeTest.makeNodeTypeTest = function (type, nodeTypes, stringVal) {\n    return new (NodeTest.makeNodeTestType(type, {\n      matches: NodeTest.isNodeType(nodeTypes),\n      toString: always(stringVal)\n    }))();\n  };\n\n  NodeTest.hasPrefix = function (node) {\n    return node.prefix || (node.nodeName || node.tagName).indexOf(':') !== -1;\n  };\n\n  NodeTest.isElementOrAttribute = NodeTest.isNodeType([1, 2]);\n\n  NodeTest.nameSpaceMatches = function (prefix, xpc, n) {\n    var nNamespace = n.namespaceURI || '';\n\n    if (!prefix) {\n      return !nNamespace || xpc.allowAnyNamespaceForNoPrefix && !NodeTest.hasPrefix(n);\n    }\n\n    var ns = xpc.namespaceResolver.getNamespace(prefix, xpc.expressionContextNode);\n\n    if (ns == null) {\n      throw new Error(\"Cannot resolve QName \" + prefix);\n    }\n\n    return ns === nNamespace;\n  };\n\n  NodeTest.localNameMatches = function (localName, xpc, n) {\n    var nLocalName = n.localName || n.nodeName;\n    return xpc.caseInsensitive ? localName.toLowerCase() === nLocalName.toLowerCase() : localName === nLocalName;\n  };\n\n  NodeTest.NameTestPrefixAny = NodeTest.makeNodeTestType(NodeTest.NAMETESTPREFIXANY, {\n    matches: function matches(n, xpc) {\n      return NodeTest.isElementOrAttribute(n) && NodeTest.nameSpaceMatches(this.prefix, xpc, n);\n    },\n    toString: function toString() {\n      return this.prefix + \":*\";\n    }\n  }, function NameTestPrefixAny(prefix) {\n    this.prefix = prefix;\n  });\n  NodeTest.NameTestQName = NodeTest.makeNodeTestType(NodeTest.NAMETESTQNAME, {\n    matches: function matches(n, xpc) {\n      return NodeTest.isNodeType([1, 2, XPathNamespace.XPATH_NAMESPACE_NODE])(n) && NodeTest.nameSpaceMatches(this.prefix, xpc, n) && NodeTest.localNameMatches(this.localName, xpc, n);\n    },\n    toString: function toString() {\n      return this.name;\n    }\n  }, function NameTestQName(name) {\n    var nameParts = name.split(':');\n    this.name = name;\n    this.prefix = nameParts.length > 1 ? nameParts[0] : null;\n    this.localName = nameParts[nameParts.length > 1 ? 1 : 0];\n  });\n  NodeTest.PITest = NodeTest.makeNodeTestType(NodeTest.PI, {\n    matches: function matches(n, xpc) {\n      return NodeTest.isNodeType([7])(n) && (n.target || n.nodeName) === this.name;\n    },\n    toString: function toString() {\n      return wrap('processing-instruction(\"', '\")', this.name);\n    }\n  }, function (name) {\n    this.name = name;\n  }); // singletons\n  // elements, attributes, namespaces\n\n  NodeTest.nameTestAny = NodeTest.makeNodeTypeTest(NodeTest.NAMETESTANY, [1, 2, XPathNamespace.XPATH_NAMESPACE_NODE], '*'); // text, cdata\n\n  NodeTest.textTest = NodeTest.makeNodeTypeTest(NodeTest.TEXT, [3, 4], 'text()');\n  NodeTest.commentTest = NodeTest.makeNodeTypeTest(NodeTest.COMMENT, [8], 'comment()'); // elements, attributes, text, cdata, PIs, comments, document nodes\n\n  NodeTest.nodeTest = NodeTest.makeNodeTypeTest(NodeTest.NODE, [1, 2, 3, 4, 7, 8, 9], 'node()');\n  NodeTest.anyPiTest = NodeTest.makeNodeTypeTest(NodeTest.PI, [7], 'processing-instruction()'); // VariableReference /////////////////////////////////////////////////////////\n\n  VariableReference.prototype = new Expression();\n  VariableReference.prototype.constructor = VariableReference;\n  VariableReference.superclass = Expression.prototype;\n\n  function VariableReference(v) {\n    if (arguments.length > 0) {\n      this.init(v);\n    }\n  }\n\n  VariableReference.prototype.init = function (v) {\n    this.variable = v;\n  };\n\n  VariableReference.prototype.toString = function () {\n    return \"$\" + this.variable;\n  };\n\n  VariableReference.prototype.evaluate = function (c) {\n    var parts = Utilities.resolveQName(this.variable, c.namespaceResolver, c.contextNode, false);\n\n    if (parts[0] == null) {\n      throw new Error(\"Cannot resolve QName \" + fn);\n    }\n\n    var result = c.variableResolver.getVariable(parts[1], parts[0]);\n\n    if (!result) {\n      throw XPathException.fromMessage(\"Undeclared variable: \" + this.toString());\n    }\n\n    return result;\n  }; // FunctionCall //////////////////////////////////////////////////////////////\n\n\n  FunctionCall.prototype = new Expression();\n  FunctionCall.prototype.constructor = FunctionCall;\n  FunctionCall.superclass = Expression.prototype;\n\n  function FunctionCall(fn, args) {\n    if (arguments.length > 0) {\n      this.init(fn, args);\n    }\n  }\n\n  FunctionCall.prototype.init = function (fn, args) {\n    this.functionName = fn;\n    this.arguments = args;\n  };\n\n  FunctionCall.prototype.toString = function () {\n    var s = this.functionName + \"(\";\n\n    for (var i = 0; i < this.arguments.length; i++) {\n      if (i > 0) {\n        s += \", \";\n      }\n\n      s += this.arguments[i].toString();\n    }\n\n    return s + \")\";\n  };\n\n  FunctionCall.prototype.evaluate = function (c) {\n    var f = FunctionResolver.getFunctionFromContext(this.functionName, c);\n\n    if (!f) {\n      throw new Error(\"Unknown function \" + this.functionName);\n    }\n\n    var a = [c].concat(this.arguments);\n    return f.apply(c.functionResolver.thisArg, a);\n  }; // Operators /////////////////////////////////////////////////////////////////\n\n\n  var Operators = new Object();\n\n  Operators.equals = function (l, r) {\n    return l.equals(r);\n  };\n\n  Operators.notequal = function (l, r) {\n    return l.notequal(r);\n  };\n\n  Operators.lessthan = function (l, r) {\n    return l.lessthan(r);\n  };\n\n  Operators.greaterthan = function (l, r) {\n    return l.greaterthan(r);\n  };\n\n  Operators.lessthanorequal = function (l, r) {\n    return l.lessthanorequal(r);\n  };\n\n  Operators.greaterthanorequal = function (l, r) {\n    return l.greaterthanorequal(r);\n  }; // XString ///////////////////////////////////////////////////////////////////\n\n\n  XString.prototype = new Expression();\n  XString.prototype.constructor = XString;\n  XString.superclass = Expression.prototype;\n\n  function XString(s) {\n    if (arguments.length > 0) {\n      this.init(s);\n    }\n  }\n\n  XString.prototype.init = function (s) {\n    this.str = String(s);\n  };\n\n  XString.prototype.toString = function () {\n    return this.str;\n  };\n\n  XString.prototype.evaluate = function (c) {\n    return this;\n  };\n\n  XString.prototype.string = function () {\n    return this;\n  };\n\n  XString.prototype.number = function () {\n    return new XNumber(this.str);\n  };\n\n  XString.prototype.bool = function () {\n    return new XBoolean(this.str);\n  };\n\n  XString.prototype.nodeset = function () {\n    throw new Error(\"Cannot convert string to nodeset\");\n  };\n\n  XString.prototype.stringValue = function () {\n    return this.str;\n  };\n\n  XString.prototype.numberValue = function () {\n    return this.number().numberValue();\n  };\n\n  XString.prototype.booleanValue = function () {\n    return this.bool().booleanValue();\n  };\n\n  XString.prototype.equals = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().equals(r);\n    }\n\n    if (Utilities.instance_of(r, XNumber)) {\n      return this.number().equals(r);\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithString(this, Operators.equals);\n    }\n\n    return new XBoolean(this.str == r.str);\n  };\n\n  XString.prototype.notequal = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().notequal(r);\n    }\n\n    if (Utilities.instance_of(r, XNumber)) {\n      return this.number().notequal(r);\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithString(this, Operators.notequal);\n    }\n\n    return new XBoolean(this.str != r.str);\n  };\n\n  XString.prototype.lessthan = function (r) {\n    return this.number().lessthan(r);\n  };\n\n  XString.prototype.greaterthan = function (r) {\n    return this.number().greaterthan(r);\n  };\n\n  XString.prototype.lessthanorequal = function (r) {\n    return this.number().lessthanorequal(r);\n  };\n\n  XString.prototype.greaterthanorequal = function (r) {\n    return this.number().greaterthanorequal(r);\n  }; // XNumber ///////////////////////////////////////////////////////////////////\n\n\n  XNumber.prototype = new Expression();\n  XNumber.prototype.constructor = XNumber;\n  XNumber.superclass = Expression.prototype;\n\n  function XNumber(n) {\n    if (arguments.length > 0) {\n      this.init(n);\n    }\n  }\n\n  XNumber.prototype.init = function (n) {\n    this.num = typeof n === \"string\" ? this.parse(n) : Number(n);\n  };\n\n  XNumber.prototype.numberFormat = /^\\s*-?[0-9]*\\.?[0-9]+\\s*$/;\n\n  XNumber.prototype.parse = function (s) {\n    // XPath representation of numbers is more restrictive than what Number() or parseFloat() allow\n    return this.numberFormat.test(s) ? parseFloat(s) : Number.NaN;\n  };\n\n  function padSmallNumber(numberStr) {\n    var parts = numberStr.split('e-');\n    var base = parts[0].replace('.', '');\n    var exponent = Number(parts[1]);\n\n    for (var i = 0; i < exponent - 1; i += 1) {\n      base = '0' + base;\n    }\n\n    return '0.' + base;\n  }\n\n  function padLargeNumber(numberStr) {\n    var parts = numberStr.split('e');\n    var base = parts[0].replace('.', '');\n    var exponent = Number(parts[1]);\n    var zerosToAppend = exponent + 1 - base.length;\n\n    for (var i = 0; i < zerosToAppend; i += 1) {\n      base += '0';\n    }\n\n    return base;\n  }\n\n  XNumber.prototype.toString = function () {\n    var strValue = this.num.toString();\n\n    if (strValue.indexOf('e-') !== -1) {\n      return padSmallNumber(strValue);\n    }\n\n    if (strValue.indexOf('e') !== -1) {\n      return padLargeNumber(strValue);\n    }\n\n    return strValue;\n  };\n\n  XNumber.prototype.evaluate = function (c) {\n    return this;\n  };\n\n  XNumber.prototype.string = function () {\n    return new XString(this.toString());\n  };\n\n  XNumber.prototype.number = function () {\n    return this;\n  };\n\n  XNumber.prototype.bool = function () {\n    return new XBoolean(this.num);\n  };\n\n  XNumber.prototype.nodeset = function () {\n    throw new Error(\"Cannot convert number to nodeset\");\n  };\n\n  XNumber.prototype.stringValue = function () {\n    return this.string().stringValue();\n  };\n\n  XNumber.prototype.numberValue = function () {\n    return this.num;\n  };\n\n  XNumber.prototype.booleanValue = function () {\n    return this.bool().booleanValue();\n  };\n\n  XNumber.prototype.negate = function () {\n    return new XNumber(-this.num);\n  };\n\n  XNumber.prototype.equals = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().equals(r);\n    }\n\n    if (Utilities.instance_of(r, XString)) {\n      return this.equals(r.number());\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.equals);\n    }\n\n    return new XBoolean(this.num == r.num);\n  };\n\n  XNumber.prototype.notequal = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().notequal(r);\n    }\n\n    if (Utilities.instance_of(r, XString)) {\n      return this.notequal(r.number());\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.notequal);\n    }\n\n    return new XBoolean(this.num != r.num);\n  };\n\n  XNumber.prototype.lessthan = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.greaterthan);\n    }\n\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.lessthan(r.number());\n    }\n\n    return new XBoolean(this.num < r.num);\n  };\n\n  XNumber.prototype.greaterthan = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.lessthan);\n    }\n\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.greaterthan(r.number());\n    }\n\n    return new XBoolean(this.num > r.num);\n  };\n\n  XNumber.prototype.lessthanorequal = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.greaterthanorequal);\n    }\n\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.lessthanorequal(r.number());\n    }\n\n    return new XBoolean(this.num <= r.num);\n  };\n\n  XNumber.prototype.greaterthanorequal = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.lessthanorequal);\n    }\n\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.greaterthanorequal(r.number());\n    }\n\n    return new XBoolean(this.num >= r.num);\n  };\n\n  XNumber.prototype.plus = function (r) {\n    return new XNumber(this.num + r.num);\n  };\n\n  XNumber.prototype.minus = function (r) {\n    return new XNumber(this.num - r.num);\n  };\n\n  XNumber.prototype.multiply = function (r) {\n    return new XNumber(this.num * r.num);\n  };\n\n  XNumber.prototype.div = function (r) {\n    return new XNumber(this.num / r.num);\n  };\n\n  XNumber.prototype.mod = function (r) {\n    return new XNumber(this.num % r.num);\n  }; // XBoolean //////////////////////////////////////////////////////////////////\n\n\n  XBoolean.prototype = new Expression();\n  XBoolean.prototype.constructor = XBoolean;\n  XBoolean.superclass = Expression.prototype;\n\n  function XBoolean(b) {\n    if (arguments.length > 0) {\n      this.init(b);\n    }\n  }\n\n  XBoolean.prototype.init = function (b) {\n    this.b = Boolean(b);\n  };\n\n  XBoolean.prototype.toString = function () {\n    return this.b.toString();\n  };\n\n  XBoolean.prototype.evaluate = function (c) {\n    return this;\n  };\n\n  XBoolean.prototype.string = function () {\n    return new XString(this.b);\n  };\n\n  XBoolean.prototype.number = function () {\n    return new XNumber(this.b);\n  };\n\n  XBoolean.prototype.bool = function () {\n    return this;\n  };\n\n  XBoolean.prototype.nodeset = function () {\n    throw new Error(\"Cannot convert boolean to nodeset\");\n  };\n\n  XBoolean.prototype.stringValue = function () {\n    return this.string().stringValue();\n  };\n\n  XBoolean.prototype.numberValue = function () {\n    return this.number().numberValue();\n  };\n\n  XBoolean.prototype.booleanValue = function () {\n    return this.b;\n  };\n\n  XBoolean.prototype.not = function () {\n    return new XBoolean(!this.b);\n  };\n\n  XBoolean.prototype.equals = function (r) {\n    if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\n      return this.equals(r.bool());\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithBoolean(this, Operators.equals);\n    }\n\n    return new XBoolean(this.b == r.b);\n  };\n\n  XBoolean.prototype.notequal = function (r) {\n    if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\n      return this.notequal(r.bool());\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithBoolean(this, Operators.notequal);\n    }\n\n    return new XBoolean(this.b != r.b);\n  };\n\n  XBoolean.prototype.lessthan = function (r) {\n    return this.number().lessthan(r);\n  };\n\n  XBoolean.prototype.greaterthan = function (r) {\n    return this.number().greaterthan(r);\n  };\n\n  XBoolean.prototype.lessthanorequal = function (r) {\n    return this.number().lessthanorequal(r);\n  };\n\n  XBoolean.prototype.greaterthanorequal = function (r) {\n    return this.number().greaterthanorequal(r);\n  };\n\n  XBoolean.true_ = new XBoolean(true);\n  XBoolean.false_ = new XBoolean(false); // AVLTree ///////////////////////////////////////////////////////////////////\n\n  AVLTree.prototype = new Object();\n  AVLTree.prototype.constructor = AVLTree;\n  AVLTree.superclass = Object.prototype;\n\n  function AVLTree(n) {\n    this.init(n);\n  }\n\n  AVLTree.prototype.init = function (n) {\n    this.left = null;\n    this.right = null;\n    this.node = n;\n    this.depth = 1;\n  };\n\n  AVLTree.prototype.balance = function () {\n    var ldepth = this.left == null ? 0 : this.left.depth;\n    var rdepth = this.right == null ? 0 : this.right.depth;\n\n    if (ldepth > rdepth + 1) {\n      // LR or LL rotation\n      var lldepth = this.left.left == null ? 0 : this.left.left.depth;\n      var lrdepth = this.left.right == null ? 0 : this.left.right.depth;\n\n      if (lldepth < lrdepth) {\n        // LR rotation consists of a RR rotation of the left child\n        this.left.rotateRR(); // plus a LL rotation of this node, which happens anyway\n      }\n\n      this.rotateLL();\n    } else if (ldepth + 1 < rdepth) {\n      // RR or RL rorarion\n      var rrdepth = this.right.right == null ? 0 : this.right.right.depth;\n      var rldepth = this.right.left == null ? 0 : this.right.left.depth;\n\n      if (rldepth > rrdepth) {\n        // RR rotation consists of a LL rotation of the right child\n        this.right.rotateLL(); // plus a RR rotation of this node, which happens anyway\n      }\n\n      this.rotateRR();\n    }\n  };\n\n  AVLTree.prototype.rotateLL = function () {\n    // the left side is too long => rotate from the left (_not_ leftwards)\n    var nodeBefore = this.node;\n    var rightBefore = this.right;\n    this.node = this.left.node;\n    this.right = this.left;\n    this.left = this.left.left;\n    this.right.left = this.right.right;\n    this.right.right = rightBefore;\n    this.right.node = nodeBefore;\n    this.right.updateInNewLocation();\n    this.updateInNewLocation();\n  };\n\n  AVLTree.prototype.rotateRR = function () {\n    // the right side is too long => rotate from the right (_not_ rightwards)\n    var nodeBefore = this.node;\n    var leftBefore = this.left;\n    this.node = this.right.node;\n    this.left = this.right;\n    this.right = this.right.right;\n    this.left.right = this.left.left;\n    this.left.left = leftBefore;\n    this.left.node = nodeBefore;\n    this.left.updateInNewLocation();\n    this.updateInNewLocation();\n  };\n\n  AVLTree.prototype.updateInNewLocation = function () {\n    this.getDepthFromChildren();\n  };\n\n  AVLTree.prototype.getDepthFromChildren = function () {\n    this.depth = this.node == null ? 0 : 1;\n\n    if (this.left != null) {\n      this.depth = this.left.depth + 1;\n    }\n\n    if (this.right != null && this.depth <= this.right.depth) {\n      this.depth = this.right.depth + 1;\n    }\n  };\n\n  function nodeOrder(n1, n2) {\n    if (n1 === n2) {\n      return 0;\n    }\n\n    if (n1.compareDocumentPosition) {\n      var cpos = n1.compareDocumentPosition(n2);\n\n      if (cpos & 0x01) {\n        // not in the same document; return an arbitrary result (is there a better way to do this)\n        return 1;\n      }\n\n      if (cpos & 0x0A) {\n        // n2 precedes or contains n1\n        return 1;\n      }\n\n      if (cpos & 0x14) {\n        // n2 follows or is contained by n1\n        return -1;\n      }\n\n      return 0;\n    }\n\n    var d1 = 0,\n        d2 = 0;\n\n    for (var m1 = n1; m1 != null; m1 = m1.parentNode || m1.ownerElement) {\n      d1++;\n    }\n\n    for (var m2 = n2; m2 != null; m2 = m2.parentNode || m2.ownerElement) {\n      d2++;\n    } // step up to same depth\n\n\n    if (d1 > d2) {\n      while (d1 > d2) {\n        n1 = n1.parentNode || n1.ownerElement;\n        d1--;\n      }\n\n      if (n1 === n2) {\n        return 1;\n      }\n    } else if (d2 > d1) {\n      while (d2 > d1) {\n        n2 = n2.parentNode || n2.ownerElement;\n        d2--;\n      }\n\n      if (n1 === n2) {\n        return -1;\n      }\n    }\n\n    var n1Par = n1.parentNode || n1.ownerElement,\n        n2Par = n2.parentNode || n2.ownerElement; // find common parent\n\n    while (n1Par !== n2Par) {\n      n1 = n1Par;\n      n2 = n2Par;\n      n1Par = n1.parentNode || n1.ownerElement;\n      n2Par = n2.parentNode || n2.ownerElement;\n    }\n\n    var n1isAttr = Utilities.isAttribute(n1);\n    var n2isAttr = Utilities.isAttribute(n2);\n\n    if (n1isAttr && !n2isAttr) {\n      return -1;\n    }\n\n    if (!n1isAttr && n2isAttr) {\n      return 1;\n    }\n\n    if (n1Par) {\n      var cn = n1isAttr ? n1Par.attributes : n1Par.childNodes,\n          len = cn.length;\n\n      for (var i = 0; i < len; i += 1) {\n        var n = cn[i];\n\n        if (n === n1) {\n          return -1;\n        }\n\n        if (n === n2) {\n          return 1;\n        }\n      }\n    }\n\n    throw new Error('Unexpected: could not determine node order');\n  }\n\n  AVLTree.prototype.add = function (n) {\n    if (n === this.node) {\n      return false;\n    }\n\n    var o = nodeOrder(n, this.node);\n    var ret = false;\n\n    if (o == -1) {\n      if (this.left == null) {\n        this.left = new AVLTree(n);\n        ret = true;\n      } else {\n        ret = this.left.add(n);\n\n        if (ret) {\n          this.balance();\n        }\n      }\n    } else if (o == 1) {\n      if (this.right == null) {\n        this.right = new AVLTree(n);\n        ret = true;\n      } else {\n        ret = this.right.add(n);\n\n        if (ret) {\n          this.balance();\n        }\n      }\n    }\n\n    if (ret) {\n      this.getDepthFromChildren();\n    }\n\n    return ret;\n  }; // XNodeSet //////////////////////////////////////////////////////////////////\n\n\n  XNodeSet.prototype = new Expression();\n  XNodeSet.prototype.constructor = XNodeSet;\n  XNodeSet.superclass = Expression.prototype;\n\n  function XNodeSet() {\n    this.init();\n  }\n\n  XNodeSet.prototype.init = function () {\n    this.tree = null;\n    this.nodes = [];\n    this.size = 0;\n  };\n\n  XNodeSet.prototype.toString = function () {\n    var p = this.first();\n\n    if (p == null) {\n      return \"\";\n    }\n\n    return this.stringForNode(p);\n  };\n\n  XNodeSet.prototype.evaluate = function (c) {\n    return this;\n  };\n\n  XNodeSet.prototype.string = function () {\n    return new XString(this.toString());\n  };\n\n  XNodeSet.prototype.stringValue = function () {\n    return this.toString();\n  };\n\n  XNodeSet.prototype.number = function () {\n    return new XNumber(this.string());\n  };\n\n  XNodeSet.prototype.numberValue = function () {\n    return Number(this.string());\n  };\n\n  XNodeSet.prototype.bool = function () {\n    return new XBoolean(this.booleanValue());\n  };\n\n  XNodeSet.prototype.booleanValue = function () {\n    return !!this.size;\n  };\n\n  XNodeSet.prototype.nodeset = function () {\n    return this;\n  };\n\n  XNodeSet.prototype.stringForNode = function (n) {\n    if (n.nodeType == 9\n    /*Node.DOCUMENT_NODE*/\n    || n.nodeType == 1\n    /*Node.ELEMENT_NODE */\n    || n.nodeType === 11\n    /*Node.DOCUMENT_FRAGMENT*/\n    ) {\n        return this.stringForContainerNode(n);\n      }\n\n    if (n.nodeType === 2\n    /* Node.ATTRIBUTE_NODE */\n    ) {\n        return n.value || n.nodeValue;\n      }\n\n    if (n.isNamespaceNode) {\n      return n.namespace;\n    }\n\n    return n.nodeValue;\n  };\n\n  XNodeSet.prototype.stringForContainerNode = function (n) {\n    var s = \"\";\n\n    for (var n2 = n.firstChild; n2 != null; n2 = n2.nextSibling) {\n      var nt = n2.nodeType; //  Element,    Text,       CDATA,      Document,   Document Fragment\n\n      if (nt === 1 || nt === 3 || nt === 4 || nt === 9 || nt === 11) {\n        s += this.stringForNode(n2);\n      }\n    }\n\n    return s;\n  };\n\n  XNodeSet.prototype.buildTree = function () {\n    if (!this.tree && this.nodes.length) {\n      this.tree = new AVLTree(this.nodes[0]);\n\n      for (var i = 1; i < this.nodes.length; i += 1) {\n        this.tree.add(this.nodes[i]);\n      }\n    }\n\n    return this.tree;\n  };\n\n  XNodeSet.prototype.first = function () {\n    var p = this.buildTree();\n\n    if (p == null) {\n      return null;\n    }\n\n    while (p.left != null) {\n      p = p.left;\n    }\n\n    return p.node;\n  };\n\n  XNodeSet.prototype.add = function (n) {\n    for (var i = 0; i < this.nodes.length; i += 1) {\n      if (n === this.nodes[i]) {\n        return;\n      }\n    }\n\n    this.tree = null;\n    this.nodes.push(n);\n    this.size += 1;\n  };\n\n  XNodeSet.prototype.addArray = function (ns) {\n    var self = this;\n    forEach(function (x) {\n      self.add(x);\n    }, ns);\n  };\n  /**\r\n   * Returns an array of the node set's contents in document order\r\n   */\n\n\n  XNodeSet.prototype.toArray = function () {\n    var a = [];\n    this.toArrayRec(this.buildTree(), a);\n    return a;\n  };\n\n  XNodeSet.prototype.toArrayRec = function (t, a) {\n    if (t != null) {\n      this.toArrayRec(t.left, a);\n      a.push(t.node);\n      this.toArrayRec(t.right, a);\n    }\n  };\n  /**\r\n   * Returns an array of the node set's contents in arbitrary order\r\n   */\n\n\n  XNodeSet.prototype.toUnsortedArray = function () {\n    return this.nodes.slice();\n  };\n\n  XNodeSet.prototype.compareWithString = function (r, o) {\n    var a = this.toUnsortedArray();\n\n    for (var i = 0; i < a.length; i++) {\n      var n = a[i];\n      var l = new XString(this.stringForNode(n));\n      var res = o(l, r);\n\n      if (res.booleanValue()) {\n        return res;\n      }\n    }\n\n    return new XBoolean(false);\n  };\n\n  XNodeSet.prototype.compareWithNumber = function (r, o) {\n    var a = this.toUnsortedArray();\n\n    for (var i = 0; i < a.length; i++) {\n      var n = a[i];\n      var l = new XNumber(this.stringForNode(n));\n      var res = o(l, r);\n\n      if (res.booleanValue()) {\n        return res;\n      }\n    }\n\n    return new XBoolean(false);\n  };\n\n  XNodeSet.prototype.compareWithBoolean = function (r, o) {\n    return o(this.bool(), r);\n  };\n\n  XNodeSet.prototype.compareWithNodeSet = function (r, o) {\n    var arr = this.toUnsortedArray();\n\n    var oInvert = function oInvert(lop, rop) {\n      return o(rop, lop);\n    };\n\n    for (var i = 0; i < arr.length; i++) {\n      var l = new XString(this.stringForNode(arr[i]));\n      var res = r.compareWithString(l, oInvert);\n\n      if (res.booleanValue()) {\n        return res;\n      }\n    }\n\n    return new XBoolean(false);\n  };\n\n  XNodeSet.compareWith = curry(function (o, r) {\n    if (Utilities.instance_of(r, XString)) {\n      return this.compareWithString(r, o);\n    }\n\n    if (Utilities.instance_of(r, XNumber)) {\n      return this.compareWithNumber(r, o);\n    }\n\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.compareWithBoolean(r, o);\n    }\n\n    return this.compareWithNodeSet(r, o);\n  });\n  XNodeSet.prototype.equals = XNodeSet.compareWith(Operators.equals);\n  XNodeSet.prototype.notequal = XNodeSet.compareWith(Operators.notequal);\n  XNodeSet.prototype.lessthan = XNodeSet.compareWith(Operators.lessthan);\n  XNodeSet.prototype.greaterthan = XNodeSet.compareWith(Operators.greaterthan);\n  XNodeSet.prototype.lessthanorequal = XNodeSet.compareWith(Operators.lessthanorequal);\n  XNodeSet.prototype.greaterthanorequal = XNodeSet.compareWith(Operators.greaterthanorequal);\n\n  XNodeSet.prototype.union = function (r) {\n    var ns = new XNodeSet();\n    ns.addArray(this.toUnsortedArray());\n    ns.addArray(r.toUnsortedArray());\n    return ns;\n  }; // XPathNamespace ////////////////////////////////////////////////////////////\n\n\n  XPathNamespace.prototype = new Object();\n  XPathNamespace.prototype.constructor = XPathNamespace;\n  XPathNamespace.superclass = Object.prototype;\n\n  function XPathNamespace(pre, ns, p) {\n    this.isXPathNamespace = true;\n    this.ownerDocument = p.ownerDocument;\n    this.nodeName = \"#namespace\";\n    this.prefix = pre;\n    this.localName = pre;\n    this.namespaceURI = ns;\n    this.nodeValue = ns;\n    this.ownerElement = p;\n    this.nodeType = XPathNamespace.XPATH_NAMESPACE_NODE;\n  }\n\n  XPathNamespace.prototype.toString = function () {\n    return \"{ \\\"\" + this.prefix + \"\\\", \\\"\" + this.namespaceURI + \"\\\" }\";\n  }; // XPathContext //////////////////////////////////////////////////////////////\n\n\n  XPathContext.prototype = new Object();\n  XPathContext.prototype.constructor = XPathContext;\n  XPathContext.superclass = Object.prototype;\n\n  function XPathContext(vr, nr, fr) {\n    this.variableResolver = vr != null ? vr : new VariableResolver();\n    this.namespaceResolver = nr != null ? nr : new NamespaceResolver();\n    this.functionResolver = fr != null ? fr : new FunctionResolver();\n  }\n\n  XPathContext.prototype.extend = function (newProps) {\n    return assign(new XPathContext(), this, newProps);\n  }; // VariableResolver //////////////////////////////////////////////////////////\n\n\n  VariableResolver.prototype = new Object();\n  VariableResolver.prototype.constructor = VariableResolver;\n  VariableResolver.superclass = Object.prototype;\n\n  function VariableResolver() {}\n\n  VariableResolver.prototype.getVariable = function (ln, ns) {\n    return null;\n  }; // FunctionResolver //////////////////////////////////////////////////////////\n\n\n  FunctionResolver.prototype = new Object();\n  FunctionResolver.prototype.constructor = FunctionResolver;\n  FunctionResolver.superclass = Object.prototype;\n\n  function FunctionResolver(thisArg) {\n    this.thisArg = thisArg != null ? thisArg : Functions;\n    this.functions = new Object();\n    this.addStandardFunctions();\n  }\n\n  FunctionResolver.prototype.addStandardFunctions = function () {\n    this.functions[\"{}last\"] = Functions.last;\n    this.functions[\"{}position\"] = Functions.position;\n    this.functions[\"{}count\"] = Functions.count;\n    this.functions[\"{}id\"] = Functions.id;\n    this.functions[\"{}local-name\"] = Functions.localName;\n    this.functions[\"{}namespace-uri\"] = Functions.namespaceURI;\n    this.functions[\"{}name\"] = Functions.name;\n    this.functions[\"{}string\"] = Functions.string;\n    this.functions[\"{}concat\"] = Functions.concat;\n    this.functions[\"{}starts-with\"] = Functions.startsWith;\n    this.functions[\"{}contains\"] = Functions.contains;\n    this.functions[\"{}substring-before\"] = Functions.substringBefore;\n    this.functions[\"{}substring-after\"] = Functions.substringAfter;\n    this.functions[\"{}substring\"] = Functions.substring;\n    this.functions[\"{}string-length\"] = Functions.stringLength;\n    this.functions[\"{}normalize-space\"] = Functions.normalizeSpace;\n    this.functions[\"{}translate\"] = Functions.translate;\n    this.functions[\"{}boolean\"] = Functions.boolean_;\n    this.functions[\"{}not\"] = Functions.not;\n    this.functions[\"{}true\"] = Functions.true_;\n    this.functions[\"{}false\"] = Functions.false_;\n    this.functions[\"{}lang\"] = Functions.lang;\n    this.functions[\"{}number\"] = Functions.number;\n    this.functions[\"{}sum\"] = Functions.sum;\n    this.functions[\"{}floor\"] = Functions.floor;\n    this.functions[\"{}ceiling\"] = Functions.ceiling;\n    this.functions[\"{}round\"] = Functions.round;\n  };\n\n  FunctionResolver.prototype.addFunction = function (ns, ln, f) {\n    this.functions[\"{\" + ns + \"}\" + ln] = f;\n  };\n\n  FunctionResolver.getFunctionFromContext = function (qName, context) {\n    var parts = Utilities.resolveQName(qName, context.namespaceResolver, context.contextNode, false);\n\n    if (parts[0] === null) {\n      throw new Error(\"Cannot resolve QName \" + name);\n    }\n\n    return context.functionResolver.getFunction(parts[1], parts[0]);\n  };\n\n  FunctionResolver.prototype.getFunction = function (localName, namespace) {\n    return this.functions[\"{\" + namespace + \"}\" + localName];\n  }; // NamespaceResolver /////////////////////////////////////////////////////////\n\n\n  NamespaceResolver.prototype = new Object();\n  NamespaceResolver.prototype.constructor = NamespaceResolver;\n  NamespaceResolver.superclass = Object.prototype;\n\n  function NamespaceResolver() {}\n\n  NamespaceResolver.prototype.getNamespace = function (prefix, n) {\n    if (prefix == \"xml\") {\n      return XPath.XML_NAMESPACE_URI;\n    } else if (prefix == \"xmlns\") {\n      return XPath.XMLNS_NAMESPACE_URI;\n    }\n\n    if (n.nodeType == 9\n    /*Node.DOCUMENT_NODE*/\n    ) {\n        n = n.documentElement;\n      } else if (n.nodeType == 2\n    /*Node.ATTRIBUTE_NODE*/\n    ) {\n        n = PathExpr.getOwnerElement(n);\n      } else if (n.nodeType != 1\n    /*Node.ELEMENT_NODE*/\n    ) {\n        n = n.parentNode;\n      }\n\n    while (n != null && n.nodeType == 1\n    /*Node.ELEMENT_NODE*/\n    ) {\n      var nnm = n.attributes;\n\n      for (var i = 0; i < nnm.length; i++) {\n        var a = nnm.item(i);\n        var aname = a.name || a.nodeName;\n\n        if (aname === \"xmlns\" && prefix === \"\" || aname === \"xmlns:\" + prefix) {\n          return String(a.value || a.nodeValue);\n        }\n      }\n\n      n = n.parentNode;\n    }\n\n    return null;\n  }; // Functions /////////////////////////////////////////////////////////////////\n\n\n  var Functions = new Object();\n\n  Functions.last = function (c) {\n    if (arguments.length != 1) {\n      throw new Error(\"Function last expects ()\");\n    }\n\n    return new XNumber(c.contextSize);\n  };\n\n  Functions.position = function (c) {\n    if (arguments.length != 1) {\n      throw new Error(\"Function position expects ()\");\n    }\n\n    return new XNumber(c.contextPosition);\n  };\n\n  Functions.count = function () {\n    var c = arguments[0];\n    var ns;\n\n    if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\n      throw new Error(\"Function count expects (node-set)\");\n    }\n\n    return new XNumber(ns.size);\n  };\n\n  Functions.id = function () {\n    var c = arguments[0];\n    var id;\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function id expects (object)\");\n    }\n\n    id = arguments[1].evaluate(c);\n\n    if (Utilities.instance_of(id, XNodeSet)) {\n      id = id.toArray().join(\" \");\n    } else {\n      id = id.stringValue();\n    }\n\n    var ids = id.split(/[\\x0d\\x0a\\x09\\x20]+/);\n    var count = 0;\n    var ns = new XNodeSet();\n    var doc = c.contextNode.nodeType == 9\n    /*Node.DOCUMENT_NODE*/\n    ? c.contextNode : c.contextNode.ownerDocument;\n\n    for (var i = 0; i < ids.length; i++) {\n      var n;\n\n      if (doc.getElementById) {\n        n = doc.getElementById(ids[i]);\n      } else {\n        n = Utilities.getElementById(doc, ids[i]);\n      }\n\n      if (n != null) {\n        ns.add(n);\n        count++;\n      }\n    }\n\n    return ns;\n  };\n\n  Functions.localName = function (c, eNode) {\n    var n;\n\n    if (arguments.length == 1) {\n      n = c.contextNode;\n    } else if (arguments.length == 2) {\n      n = eNode.evaluate(c).first();\n    } else {\n      throw new Error(\"Function local-name expects (node-set?)\");\n    }\n\n    if (n == null) {\n      return new XString(\"\");\n    }\n\n    return new XString(n.localName || //  standard elements and attributes\n    n.baseName || //  IE\n    n.target || //  processing instructions\n    n.nodeName || //  DOM1 elements\n    \"\" //  fallback\n    );\n  };\n\n  Functions.namespaceURI = function () {\n    var c = arguments[0];\n    var n;\n\n    if (arguments.length == 1) {\n      n = c.contextNode;\n    } else if (arguments.length == 2) {\n      n = arguments[1].evaluate(c).first();\n    } else {\n      throw new Error(\"Function namespace-uri expects (node-set?)\");\n    }\n\n    if (n == null) {\n      return new XString(\"\");\n    }\n\n    return new XString(n.namespaceURI);\n  };\n\n  Functions.name = function () {\n    var c = arguments[0];\n    var n;\n\n    if (arguments.length == 1) {\n      n = c.contextNode;\n    } else if (arguments.length == 2) {\n      n = arguments[1].evaluate(c).first();\n    } else {\n      throw new Error(\"Function name expects (node-set?)\");\n    }\n\n    if (n == null) {\n      return new XString(\"\");\n    }\n\n    if (n.nodeType == 1\n    /*Node.ELEMENT_NODE*/\n    ) {\n        return new XString(n.nodeName);\n      } else if (n.nodeType == 2\n    /*Node.ATTRIBUTE_NODE*/\n    ) {\n        return new XString(n.name || n.nodeName);\n      } else if (n.nodeType === 7\n    /*Node.PROCESSING_INSTRUCTION_NODE*/\n    ) {\n        return new XString(n.target || n.nodeName);\n      } else if (n.localName == null) {\n      return new XString(\"\");\n    } else {\n      return new XString(n.localName);\n    }\n  };\n\n  Functions.string = function () {\n    var c = arguments[0];\n\n    if (arguments.length == 1) {\n      return new XString(XNodeSet.prototype.stringForNode(c.contextNode));\n    } else if (arguments.length == 2) {\n      return arguments[1].evaluate(c).string();\n    }\n\n    throw new Error(\"Function string expects (object?)\");\n  };\n\n  Functions.concat = function (c) {\n    if (arguments.length < 3) {\n      throw new Error(\"Function concat expects (string, string[, string]*)\");\n    }\n\n    var s = \"\";\n\n    for (var i = 1; i < arguments.length; i++) {\n      s += arguments[i].evaluate(c).stringValue();\n    }\n\n    return new XString(s);\n  };\n\n  Functions.startsWith = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 3) {\n      throw new Error(\"Function startsWith expects (string, string)\");\n    }\n\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n    return new XBoolean(s1.substring(0, s2.length) == s2);\n  };\n\n  Functions.contains = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 3) {\n      throw new Error(\"Function contains expects (string, string)\");\n    }\n\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n    return new XBoolean(s1.indexOf(s2) !== -1);\n  };\n\n  Functions.substringBefore = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 3) {\n      throw new Error(\"Function substring-before expects (string, string)\");\n    }\n\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n    return new XString(s1.substring(0, s1.indexOf(s2)));\n  };\n\n  Functions.substringAfter = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 3) {\n      throw new Error(\"Function substring-after expects (string, string)\");\n    }\n\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n\n    if (s2.length == 0) {\n      return new XString(s1);\n    }\n\n    var i = s1.indexOf(s2);\n\n    if (i == -1) {\n      return new XString(\"\");\n    }\n\n    return new XString(s1.substring(i + s2.length));\n  };\n\n  Functions.substring = function () {\n    var c = arguments[0];\n\n    if (!(arguments.length == 3 || arguments.length == 4)) {\n      throw new Error(\"Function substring expects (string, number, number?)\");\n    }\n\n    var s = arguments[1].evaluate(c).stringValue();\n    var n1 = Math.round(arguments[2].evaluate(c).numberValue()) - 1;\n    var n2 = arguments.length == 4 ? n1 + Math.round(arguments[3].evaluate(c).numberValue()) : undefined;\n    return new XString(s.substring(n1, n2));\n  };\n\n  Functions.stringLength = function () {\n    var c = arguments[0];\n    var s;\n\n    if (arguments.length == 1) {\n      s = XNodeSet.prototype.stringForNode(c.contextNode);\n    } else if (arguments.length == 2) {\n      s = arguments[1].evaluate(c).stringValue();\n    } else {\n      throw new Error(\"Function string-length expects (string?)\");\n    }\n\n    return new XNumber(s.length);\n  };\n\n  Functions.normalizeSpace = function () {\n    var c = arguments[0];\n    var s;\n\n    if (arguments.length == 1) {\n      s = XNodeSet.prototype.stringForNode(c.contextNode);\n    } else if (arguments.length == 2) {\n      s = arguments[1].evaluate(c).stringValue();\n    } else {\n      throw new Error(\"Function normalize-space expects (string?)\");\n    }\n\n    var i = 0;\n    var j = s.length - 1;\n\n    while (Utilities.isSpace(s.charCodeAt(j))) {\n      j--;\n    }\n\n    var t = \"\";\n\n    while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\n      i++;\n    }\n\n    while (i <= j) {\n      if (Utilities.isSpace(s.charCodeAt(i))) {\n        t += \" \";\n\n        while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\n          i++;\n        }\n      } else {\n        t += s.charAt(i);\n        i++;\n      }\n    }\n\n    return new XString(t);\n  };\n\n  Functions.translate = function (c, eValue, eFrom, eTo) {\n    if (arguments.length != 4) {\n      throw new Error(\"Function translate expects (string, string, string)\");\n    }\n\n    var value = eValue.evaluate(c).stringValue();\n    var from = eFrom.evaluate(c).stringValue();\n    var to = eTo.evaluate(c).stringValue();\n    var cMap = reduce(function (acc, ch, i) {\n      if (!(ch in acc)) {\n        acc[ch] = i > to.length ? '' : to[i];\n      }\n\n      return acc;\n    }, {}, from);\n    var t = join('', map(function (ch) {\n      return ch in cMap ? cMap[ch] : ch;\n    }, value));\n    return new XString(t);\n  };\n\n  Functions.boolean_ = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function boolean expects (object)\");\n    }\n\n    return arguments[1].evaluate(c).bool();\n  };\n\n  Functions.not = function (c, eValue) {\n    if (arguments.length != 2) {\n      throw new Error(\"Function not expects (object)\");\n    }\n\n    return eValue.evaluate(c).bool().not();\n  };\n\n  Functions.true_ = function () {\n    if (arguments.length != 1) {\n      throw new Error(\"Function true expects ()\");\n    }\n\n    return XBoolean.true_;\n  };\n\n  Functions.false_ = function () {\n    if (arguments.length != 1) {\n      throw new Error(\"Function false expects ()\");\n    }\n\n    return XBoolean.false_;\n  };\n\n  Functions.lang = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function lang expects (string)\");\n    }\n\n    var lang;\n\n    for (var n = c.contextNode; n != null && n.nodeType != 9\n    /*Node.DOCUMENT_NODE*/\n    ; n = n.parentNode) {\n      var a = n.getAttributeNS(XPath.XML_NAMESPACE_URI, \"lang\");\n\n      if (a != null) {\n        lang = String(a);\n        break;\n      }\n    }\n\n    if (lang == null) {\n      return XBoolean.false_;\n    }\n\n    var s = arguments[1].evaluate(c).stringValue();\n    return new XBoolean(lang.substring(0, s.length) == s && (lang.length == s.length || lang.charAt(s.length) == '-'));\n  };\n\n  Functions.number = function () {\n    var c = arguments[0];\n\n    if (!(arguments.length == 1 || arguments.length == 2)) {\n      throw new Error(\"Function number expects (object?)\");\n    }\n\n    if (arguments.length == 1) {\n      return new XNumber(XNodeSet.prototype.stringForNode(c.contextNode));\n    }\n\n    return arguments[1].evaluate(c).number();\n  };\n\n  Functions.sum = function () {\n    var c = arguments[0];\n    var ns;\n\n    if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\n      throw new Error(\"Function sum expects (node-set)\");\n    }\n\n    ns = ns.toUnsortedArray();\n    var n = 0;\n\n    for (var i = 0; i < ns.length; i++) {\n      n += new XNumber(XNodeSet.prototype.stringForNode(ns[i])).numberValue();\n    }\n\n    return new XNumber(n);\n  };\n\n  Functions.floor = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function floor expects (number)\");\n    }\n\n    return new XNumber(Math.floor(arguments[1].evaluate(c).numberValue()));\n  };\n\n  Functions.ceiling = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function ceiling expects (number)\");\n    }\n\n    return new XNumber(Math.ceil(arguments[1].evaluate(c).numberValue()));\n  };\n\n  Functions.round = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function round expects (number)\");\n    }\n\n    return new XNumber(Math.round(arguments[1].evaluate(c).numberValue()));\n  }; // Utilities /////////////////////////////////////////////////////////////////\n\n\n  var Utilities = new Object();\n\n  Utilities.isAttribute = function (val) {\n    return val && (val.nodeType === 2 || val.ownerElement);\n  };\n\n  Utilities.splitQName = function (qn) {\n    var i = qn.indexOf(\":\");\n\n    if (i == -1) {\n      return [null, qn];\n    }\n\n    return [qn.substring(0, i), qn.substring(i + 1)];\n  };\n\n  Utilities.resolveQName = function (qn, nr, n, useDefault) {\n    var parts = Utilities.splitQName(qn);\n\n    if (parts[0] != null) {\n      parts[0] = nr.getNamespace(parts[0], n);\n    } else {\n      if (useDefault) {\n        parts[0] = nr.getNamespace(\"\", n);\n\n        if (parts[0] == null) {\n          parts[0] = \"\";\n        }\n      } else {\n        parts[0] = \"\";\n      }\n    }\n\n    return parts;\n  };\n\n  Utilities.isSpace = function (c) {\n    return c == 0x9 || c == 0xd || c == 0xa || c == 0x20;\n  };\n\n  Utilities.isLetter = function (c) {\n    return c >= 0x0041 && c <= 0x005A || c >= 0x0061 && c <= 0x007A || c >= 0x00C0 && c <= 0x00D6 || c >= 0x00D8 && c <= 0x00F6 || c >= 0x00F8 && c <= 0x00FF || c >= 0x0100 && c <= 0x0131 || c >= 0x0134 && c <= 0x013E || c >= 0x0141 && c <= 0x0148 || c >= 0x014A && c <= 0x017E || c >= 0x0180 && c <= 0x01C3 || c >= 0x01CD && c <= 0x01F0 || c >= 0x01F4 && c <= 0x01F5 || c >= 0x01FA && c <= 0x0217 || c >= 0x0250 && c <= 0x02A8 || c >= 0x02BB && c <= 0x02C1 || c == 0x0386 || c >= 0x0388 && c <= 0x038A || c == 0x038C || c >= 0x038E && c <= 0x03A1 || c >= 0x03A3 && c <= 0x03CE || c >= 0x03D0 && c <= 0x03D6 || c == 0x03DA || c == 0x03DC || c == 0x03DE || c == 0x03E0 || c >= 0x03E2 && c <= 0x03F3 || c >= 0x0401 && c <= 0x040C || c >= 0x040E && c <= 0x044F || c >= 0x0451 && c <= 0x045C || c >= 0x045E && c <= 0x0481 || c >= 0x0490 && c <= 0x04C4 || c >= 0x04C7 && c <= 0x04C8 || c >= 0x04CB && c <= 0x04CC || c >= 0x04D0 && c <= 0x04EB || c >= 0x04EE && c <= 0x04F5 || c >= 0x04F8 && c <= 0x04F9 || c >= 0x0531 && c <= 0x0556 || c == 0x0559 || c >= 0x0561 && c <= 0x0586 || c >= 0x05D0 && c <= 0x05EA || c >= 0x05F0 && c <= 0x05F2 || c >= 0x0621 && c <= 0x063A || c >= 0x0641 && c <= 0x064A || c >= 0x0671 && c <= 0x06B7 || c >= 0x06BA && c <= 0x06BE || c >= 0x06C0 && c <= 0x06CE || c >= 0x06D0 && c <= 0x06D3 || c == 0x06D5 || c >= 0x06E5 && c <= 0x06E6 || c >= 0x0905 && c <= 0x0939 || c == 0x093D || c >= 0x0958 && c <= 0x0961 || c >= 0x0985 && c <= 0x098C || c >= 0x098F && c <= 0x0990 || c >= 0x0993 && c <= 0x09A8 || c >= 0x09AA && c <= 0x09B0 || c == 0x09B2 || c >= 0x09B6 && c <= 0x09B9 || c >= 0x09DC && c <= 0x09DD || c >= 0x09DF && c <= 0x09E1 || c >= 0x09F0 && c <= 0x09F1 || c >= 0x0A05 && c <= 0x0A0A || c >= 0x0A0F && c <= 0x0A10 || c >= 0x0A13 && c <= 0x0A28 || c >= 0x0A2A && c <= 0x0A30 || c >= 0x0A32 && c <= 0x0A33 || c >= 0x0A35 && c <= 0x0A36 || c >= 0x0A38 && c <= 0x0A39 || c >= 0x0A59 && c <= 0x0A5C || c == 0x0A5E || c >= 0x0A72 && c <= 0x0A74 || c >= 0x0A85 && c <= 0x0A8B || c == 0x0A8D || c >= 0x0A8F && c <= 0x0A91 || c >= 0x0A93 && c <= 0x0AA8 || c >= 0x0AAA && c <= 0x0AB0 || c >= 0x0AB2 && c <= 0x0AB3 || c >= 0x0AB5 && c <= 0x0AB9 || c == 0x0ABD || c == 0x0AE0 || c >= 0x0B05 && c <= 0x0B0C || c >= 0x0B0F && c <= 0x0B10 || c >= 0x0B13 && c <= 0x0B28 || c >= 0x0B2A && c <= 0x0B30 || c >= 0x0B32 && c <= 0x0B33 || c >= 0x0B36 && c <= 0x0B39 || c == 0x0B3D || c >= 0x0B5C && c <= 0x0B5D || c >= 0x0B5F && c <= 0x0B61 || c >= 0x0B85 && c <= 0x0B8A || c >= 0x0B8E && c <= 0x0B90 || c >= 0x0B92 && c <= 0x0B95 || c >= 0x0B99 && c <= 0x0B9A || c == 0x0B9C || c >= 0x0B9E && c <= 0x0B9F || c >= 0x0BA3 && c <= 0x0BA4 || c >= 0x0BA8 && c <= 0x0BAA || c >= 0x0BAE && c <= 0x0BB5 || c >= 0x0BB7 && c <= 0x0BB9 || c >= 0x0C05 && c <= 0x0C0C || c >= 0x0C0E && c <= 0x0C10 || c >= 0x0C12 && c <= 0x0C28 || c >= 0x0C2A && c <= 0x0C33 || c >= 0x0C35 && c <= 0x0C39 || c >= 0x0C60 && c <= 0x0C61 || c >= 0x0C85 && c <= 0x0C8C || c >= 0x0C8E && c <= 0x0C90 || c >= 0x0C92 && c <= 0x0CA8 || c >= 0x0CAA && c <= 0x0CB3 || c >= 0x0CB5 && c <= 0x0CB9 || c == 0x0CDE || c >= 0x0CE0 && c <= 0x0CE1 || c >= 0x0D05 && c <= 0x0D0C || c >= 0x0D0E && c <= 0x0D10 || c >= 0x0D12 && c <= 0x0D28 || c >= 0x0D2A && c <= 0x0D39 || c >= 0x0D60 && c <= 0x0D61 || c >= 0x0E01 && c <= 0x0E2E || c == 0x0E30 || c >= 0x0E32 && c <= 0x0E33 || c >= 0x0E40 && c <= 0x0E45 || c >= 0x0E81 && c <= 0x0E82 || c == 0x0E84 || c >= 0x0E87 && c <= 0x0E88 || c == 0x0E8A || c == 0x0E8D || c >= 0x0E94 && c <= 0x0E97 || c >= 0x0E99 && c <= 0x0E9F || c >= 0x0EA1 && c <= 0x0EA3 || c == 0x0EA5 || c == 0x0EA7 || c >= 0x0EAA && c <= 0x0EAB || c >= 0x0EAD && c <= 0x0EAE || c == 0x0EB0 || c >= 0x0EB2 && c <= 0x0EB3 || c == 0x0EBD || c >= 0x0EC0 && c <= 0x0EC4 || c >= 0x0F40 && c <= 0x0F47 || c >= 0x0F49 && c <= 0x0F69 || c >= 0x10A0 && c <= 0x10C5 || c >= 0x10D0 && c <= 0x10F6 || c == 0x1100 || c >= 0x1102 && c <= 0x1103 || c >= 0x1105 && c <= 0x1107 || c == 0x1109 || c >= 0x110B && c <= 0x110C || c >= 0x110E && c <= 0x1112 || c == 0x113C || c == 0x113E || c == 0x1140 || c == 0x114C || c == 0x114E || c == 0x1150 || c >= 0x1154 && c <= 0x1155 || c == 0x1159 || c >= 0x115F && c <= 0x1161 || c == 0x1163 || c == 0x1165 || c == 0x1167 || c == 0x1169 || c >= 0x116D && c <= 0x116E || c >= 0x1172 && c <= 0x1173 || c == 0x1175 || c == 0x119E || c == 0x11A8 || c == 0x11AB || c >= 0x11AE && c <= 0x11AF || c >= 0x11B7 && c <= 0x11B8 || c == 0x11BA || c >= 0x11BC && c <= 0x11C2 || c == 0x11EB || c == 0x11F0 || c == 0x11F9 || c >= 0x1E00 && c <= 0x1E9B || c >= 0x1EA0 && c <= 0x1EF9 || c >= 0x1F00 && c <= 0x1F15 || c >= 0x1F18 && c <= 0x1F1D || c >= 0x1F20 && c <= 0x1F45 || c >= 0x1F48 && c <= 0x1F4D || c >= 0x1F50 && c <= 0x1F57 || c == 0x1F59 || c == 0x1F5B || c == 0x1F5D || c >= 0x1F5F && c <= 0x1F7D || c >= 0x1F80 && c <= 0x1FB4 || c >= 0x1FB6 && c <= 0x1FBC || c == 0x1FBE || c >= 0x1FC2 && c <= 0x1FC4 || c >= 0x1FC6 && c <= 0x1FCC || c >= 0x1FD0 && c <= 0x1FD3 || c >= 0x1FD6 && c <= 0x1FDB || c >= 0x1FE0 && c <= 0x1FEC || c >= 0x1FF2 && c <= 0x1FF4 || c >= 0x1FF6 && c <= 0x1FFC || c == 0x2126 || c >= 0x212A && c <= 0x212B || c == 0x212E || c >= 0x2180 && c <= 0x2182 || c >= 0x3041 && c <= 0x3094 || c >= 0x30A1 && c <= 0x30FA || c >= 0x3105 && c <= 0x312C || c >= 0xAC00 && c <= 0xD7A3 || c >= 0x4E00 && c <= 0x9FA5 || c == 0x3007 || c >= 0x3021 && c <= 0x3029;\n  };\n\n  Utilities.isNCNameChar = function (c) {\n    return c >= 0x0030 && c <= 0x0039 || c >= 0x0660 && c <= 0x0669 || c >= 0x06F0 && c <= 0x06F9 || c >= 0x0966 && c <= 0x096F || c >= 0x09E6 && c <= 0x09EF || c >= 0x0A66 && c <= 0x0A6F || c >= 0x0AE6 && c <= 0x0AEF || c >= 0x0B66 && c <= 0x0B6F || c >= 0x0BE7 && c <= 0x0BEF || c >= 0x0C66 && c <= 0x0C6F || c >= 0x0CE6 && c <= 0x0CEF || c >= 0x0D66 && c <= 0x0D6F || c >= 0x0E50 && c <= 0x0E59 || c >= 0x0ED0 && c <= 0x0ED9 || c >= 0x0F20 && c <= 0x0F29 || c == 0x002E || c == 0x002D || c == 0x005F || Utilities.isLetter(c) || c >= 0x0300 && c <= 0x0345 || c >= 0x0360 && c <= 0x0361 || c >= 0x0483 && c <= 0x0486 || c >= 0x0591 && c <= 0x05A1 || c >= 0x05A3 && c <= 0x05B9 || c >= 0x05BB && c <= 0x05BD || c == 0x05BF || c >= 0x05C1 && c <= 0x05C2 || c == 0x05C4 || c >= 0x064B && c <= 0x0652 || c == 0x0670 || c >= 0x06D6 && c <= 0x06DC || c >= 0x06DD && c <= 0x06DF || c >= 0x06E0 && c <= 0x06E4 || c >= 0x06E7 && c <= 0x06E8 || c >= 0x06EA && c <= 0x06ED || c >= 0x0901 && c <= 0x0903 || c == 0x093C || c >= 0x093E && c <= 0x094C || c == 0x094D || c >= 0x0951 && c <= 0x0954 || c >= 0x0962 && c <= 0x0963 || c >= 0x0981 && c <= 0x0983 || c == 0x09BC || c == 0x09BE || c == 0x09BF || c >= 0x09C0 && c <= 0x09C4 || c >= 0x09C7 && c <= 0x09C8 || c >= 0x09CB && c <= 0x09CD || c == 0x09D7 || c >= 0x09E2 && c <= 0x09E3 || c == 0x0A02 || c == 0x0A3C || c == 0x0A3E || c == 0x0A3F || c >= 0x0A40 && c <= 0x0A42 || c >= 0x0A47 && c <= 0x0A48 || c >= 0x0A4B && c <= 0x0A4D || c >= 0x0A70 && c <= 0x0A71 || c >= 0x0A81 && c <= 0x0A83 || c == 0x0ABC || c >= 0x0ABE && c <= 0x0AC5 || c >= 0x0AC7 && c <= 0x0AC9 || c >= 0x0ACB && c <= 0x0ACD || c >= 0x0B01 && c <= 0x0B03 || c == 0x0B3C || c >= 0x0B3E && c <= 0x0B43 || c >= 0x0B47 && c <= 0x0B48 || c >= 0x0B4B && c <= 0x0B4D || c >= 0x0B56 && c <= 0x0B57 || c >= 0x0B82 && c <= 0x0B83 || c >= 0x0BBE && c <= 0x0BC2 || c >= 0x0BC6 && c <= 0x0BC8 || c >= 0x0BCA && c <= 0x0BCD || c == 0x0BD7 || c >= 0x0C01 && c <= 0x0C03 || c >= 0x0C3E && c <= 0x0C44 || c >= 0x0C46 && c <= 0x0C48 || c >= 0x0C4A && c <= 0x0C4D || c >= 0x0C55 && c <= 0x0C56 || c >= 0x0C82 && c <= 0x0C83 || c >= 0x0CBE && c <= 0x0CC4 || c >= 0x0CC6 && c <= 0x0CC8 || c >= 0x0CCA && c <= 0x0CCD || c >= 0x0CD5 && c <= 0x0CD6 || c >= 0x0D02 && c <= 0x0D03 || c >= 0x0D3E && c <= 0x0D43 || c >= 0x0D46 && c <= 0x0D48 || c >= 0x0D4A && c <= 0x0D4D || c == 0x0D57 || c == 0x0E31 || c >= 0x0E34 && c <= 0x0E3A || c >= 0x0E47 && c <= 0x0E4E || c == 0x0EB1 || c >= 0x0EB4 && c <= 0x0EB9 || c >= 0x0EBB && c <= 0x0EBC || c >= 0x0EC8 && c <= 0x0ECD || c >= 0x0F18 && c <= 0x0F19 || c == 0x0F35 || c == 0x0F37 || c == 0x0F39 || c == 0x0F3E || c == 0x0F3F || c >= 0x0F71 && c <= 0x0F84 || c >= 0x0F86 && c <= 0x0F8B || c >= 0x0F90 && c <= 0x0F95 || c == 0x0F97 || c >= 0x0F99 && c <= 0x0FAD || c >= 0x0FB1 && c <= 0x0FB7 || c == 0x0FB9 || c >= 0x20D0 && c <= 0x20DC || c == 0x20E1 || c >= 0x302A && c <= 0x302F || c == 0x3099 || c == 0x309A || c == 0x00B7 || c == 0x02D0 || c == 0x02D1 || c == 0x0387 || c == 0x0640 || c == 0x0E46 || c == 0x0EC6 || c == 0x3005 || c >= 0x3031 && c <= 0x3035 || c >= 0x309D && c <= 0x309E || c >= 0x30FC && c <= 0x30FE;\n  };\n\n  Utilities.coalesceText = function (n) {\n    for (var m = n.firstChild; m != null; m = m.nextSibling) {\n      if (m.nodeType == 3\n      /*Node.TEXT_NODE*/\n      || m.nodeType == 4\n      /*Node.CDATA_SECTION_NODE*/\n      ) {\n          var s = m.nodeValue;\n          var first = m;\n          m = m.nextSibling;\n\n          while (m != null && (m.nodeType == 3\n          /*Node.TEXT_NODE*/\n          || m.nodeType == 4\n          /*Node.CDATA_SECTION_NODE*/\n          )) {\n            s += m.nodeValue;\n            var del = m;\n            m = m.nextSibling;\n            del.parentNode.removeChild(del);\n          }\n\n          if (first.nodeType == 4\n          /*Node.CDATA_SECTION_NODE*/\n          ) {\n              var p = first.parentNode;\n\n              if (first.nextSibling == null) {\n                p.removeChild(first);\n                p.appendChild(p.ownerDocument.createTextNode(s));\n              } else {\n                var next = first.nextSibling;\n                p.removeChild(first);\n                p.insertBefore(p.ownerDocument.createTextNode(s), next);\n              }\n            } else {\n            first.nodeValue = s;\n          }\n\n          if (m == null) {\n            break;\n          }\n        } else if (m.nodeType == 1\n      /*Node.ELEMENT_NODE*/\n      ) {\n          Utilities.coalesceText(m);\n        }\n    }\n  };\n\n  Utilities.instance_of = function (o, c) {\n    while (o != null) {\n      if (o.constructor === c) {\n        return true;\n      }\n\n      if (o === Object) {\n        return false;\n      }\n\n      o = o.constructor.superclass;\n    }\n\n    return false;\n  };\n\n  Utilities.getElementById = function (n, id) {\n    // Note that this does not check the DTD to check for actual\n    // attributes of type ID, so this may be a bit wrong.\n    if (n.nodeType == 1\n    /*Node.ELEMENT_NODE*/\n    ) {\n        if (n.getAttribute(\"id\") == id || n.getAttributeNS(null, \"id\") == id) {\n          return n;\n        }\n      }\n\n    for (var m = n.firstChild; m != null; m = m.nextSibling) {\n      var res = Utilities.getElementById(m, id);\n\n      if (res != null) {\n        return res;\n      }\n    }\n\n    return null;\n  }; // XPathException ////////////////////////////////////////////////////////////\n\n\n  var XPathException = function () {\n    function getMessage(code, exception) {\n      var msg = exception ? \": \" + exception.toString() : \"\";\n\n      switch (code) {\n        case XPathException.INVALID_EXPRESSION_ERR:\n          return \"Invalid expression\" + msg;\n\n        case XPathException.TYPE_ERR:\n          return \"Type error\" + msg;\n      }\n\n      return null;\n    }\n\n    function XPathException(code, error, message) {\n      var err = Error.call(this, getMessage(code, error) || message);\n      err.code = code;\n      err.exception = error;\n      return err;\n    }\n\n    XPathException.prototype = Object.create(Error.prototype);\n    XPathException.prototype.constructor = XPathException;\n    XPathException.superclass = Error;\n\n    XPathException.prototype.toString = function () {\n      return this.message;\n    };\n\n    XPathException.fromMessage = function (message, error) {\n      return new XPathException(null, error, message);\n    };\n\n    XPathException.INVALID_EXPRESSION_ERR = 51;\n    XPathException.TYPE_ERR = 52;\n    return XPathException;\n  }(); // XPathExpression ///////////////////////////////////////////////////////////\n\n\n  XPathExpression.prototype = {};\n  XPathExpression.prototype.constructor = XPathExpression;\n  XPathExpression.superclass = Object.prototype;\n\n  function XPathExpression(e, r, p) {\n    this.xpath = p.parse(e);\n    this.context = new XPathContext();\n    this.context.namespaceResolver = new XPathNSResolverWrapper(r);\n  }\n\n  XPathExpression.getOwnerDocument = function (n) {\n    return n.nodeType === 9\n    /*Node.DOCUMENT_NODE*/\n    ? n : n.ownerDocument;\n  };\n\n  XPathExpression.detectHtmlDom = function (n) {\n    if (!n) {\n      return false;\n    }\n\n    var doc = XPathExpression.getOwnerDocument(n);\n\n    try {\n      return doc.implementation.hasFeature(\"HTML\", \"2.0\");\n    } catch (e) {\n      return true;\n    }\n  };\n\n  XPathExpression.prototype.evaluate = function (n, t, res) {\n    this.context.expressionContextNode = n; // backward compatibility - no reliable way to detect whether the DOM is HTML, but\n    // this library has been using this method up until now, so we will continue to use it\n    // ONLY when using an XPathExpression\n\n    this.context.caseInsensitive = XPathExpression.detectHtmlDom(n);\n    var result = this.xpath.evaluate(this.context);\n    return new XPathResult(result, t);\n  }; // XPathNSResolverWrapper ////////////////////////////////////////////////////\n\n\n  XPathNSResolverWrapper.prototype = {};\n  XPathNSResolverWrapper.prototype.constructor = XPathNSResolverWrapper;\n  XPathNSResolverWrapper.superclass = Object.prototype;\n\n  function XPathNSResolverWrapper(r) {\n    this.xpathNSResolver = r;\n  }\n\n  XPathNSResolverWrapper.prototype.getNamespace = function (prefix, n) {\n    if (this.xpathNSResolver == null) {\n      return null;\n    }\n\n    return this.xpathNSResolver.lookupNamespaceURI(prefix);\n  }; // NodeXPathNSResolver ///////////////////////////////////////////////////////\n\n\n  NodeXPathNSResolver.prototype = {};\n  NodeXPathNSResolver.prototype.constructor = NodeXPathNSResolver;\n  NodeXPathNSResolver.superclass = Object.prototype;\n\n  function NodeXPathNSResolver(n) {\n    this.node = n;\n    this.namespaceResolver = new NamespaceResolver();\n  }\n\n  NodeXPathNSResolver.prototype.lookupNamespaceURI = function (prefix) {\n    return this.namespaceResolver.getNamespace(prefix, this.node);\n  }; // XPathResult ///////////////////////////////////////////////////////////////\n\n\n  XPathResult.prototype = {};\n  XPathResult.prototype.constructor = XPathResult;\n  XPathResult.superclass = Object.prototype;\n\n  function XPathResult(v, t) {\n    if (t == XPathResult.ANY_TYPE) {\n      if (v.constructor === XString) {\n        t = XPathResult.STRING_TYPE;\n      } else if (v.constructor === XNumber) {\n        t = XPathResult.NUMBER_TYPE;\n      } else if (v.constructor === XBoolean) {\n        t = XPathResult.BOOLEAN_TYPE;\n      } else if (v.constructor === XNodeSet) {\n        t = XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\n      }\n    }\n\n    this.resultType = t;\n\n    switch (t) {\n      case XPathResult.NUMBER_TYPE:\n        this.numberValue = v.numberValue();\n        return;\n\n      case XPathResult.STRING_TYPE:\n        this.stringValue = v.stringValue();\n        return;\n\n      case XPathResult.BOOLEAN_TYPE:\n        this.booleanValue = v.booleanValue();\n        return;\n\n      case XPathResult.ANY_UNORDERED_NODE_TYPE:\n      case XPathResult.FIRST_ORDERED_NODE_TYPE:\n        if (v.constructor === XNodeSet) {\n          this.singleNodeValue = v.first();\n          return;\n        }\n\n        break;\n\n      case XPathResult.UNORDERED_NODE_ITERATOR_TYPE:\n      case XPathResult.ORDERED_NODE_ITERATOR_TYPE:\n        if (v.constructor === XNodeSet) {\n          this.invalidIteratorState = false;\n          this.nodes = v.toArray();\n          this.iteratorIndex = 0;\n          return;\n        }\n\n        break;\n\n      case XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE:\n      case XPathResult.ORDERED_NODE_SNAPSHOT_TYPE:\n        if (v.constructor === XNodeSet) {\n          this.nodes = v.toArray();\n          this.snapshotLength = this.nodes.length;\n          return;\n        }\n\n        break;\n    }\n\n    throw new XPathException(XPathException.TYPE_ERR);\n  }\n\n  ;\n\n  XPathResult.prototype.iterateNext = function () {\n    if (this.resultType != XPathResult.UNORDERED_NODE_ITERATOR_TYPE && this.resultType != XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\n      throw new XPathException(XPathException.TYPE_ERR);\n    }\n\n    return this.nodes[this.iteratorIndex++];\n  };\n\n  XPathResult.prototype.snapshotItem = function (i) {\n    if (this.resultType != XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE && this.resultType != XPathResult.ORDERED_NODE_SNAPSHOT_TYPE) {\n      throw new XPathException(XPathException.TYPE_ERR);\n    }\n\n    return this.nodes[i];\n  };\n\n  XPathResult.ANY_TYPE = 0;\n  XPathResult.NUMBER_TYPE = 1;\n  XPathResult.STRING_TYPE = 2;\n  XPathResult.BOOLEAN_TYPE = 3;\n  XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\n  XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\n  XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\n  XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\n  XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\n  XPathResult.FIRST_ORDERED_NODE_TYPE = 9; // DOM 3 XPath support ///////////////////////////////////////////////////////\n\n  function installDOM3XPathSupport(doc, p) {\n    doc.createExpression = function (e, r) {\n      try {\n        return new XPathExpression(e, r, p);\n      } catch (e) {\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR, e);\n      }\n    };\n\n    doc.createNSResolver = function (n) {\n      return new NodeXPathNSResolver(n);\n    };\n\n    doc.evaluate = function (e, cn, r, t, res) {\n      if (t < 0 || t > 9) {\n        throw {\n          code: 0,\n          toString: function toString() {\n            return \"Request type not supported\";\n          }\n        };\n      }\n\n      return doc.createExpression(e, r, p).evaluate(cn, t, res);\n    };\n  }\n\n  ; // ---------------------------------------------------------------------------\n  // Install DOM 3 XPath support for the current document.\n\n  try {\n    var shouldInstall = true;\n\n    try {\n      if (document.implementation && document.implementation.hasFeature && document.implementation.hasFeature(\"XPath\", null)) {\n        shouldInstall = false;\n      }\n    } catch (e) {}\n\n    if (shouldInstall) {\n      installDOM3XPathSupport(document, new XPathParser());\n    }\n  } catch (e) {} // ---------------------------------------------------------------------------\n  // exports for node.js\n\n\n  installDOM3XPathSupport(exports, new XPathParser());\n\n  (function () {\n    var parser = new XPathParser();\n    var defaultNSResolver = new NamespaceResolver();\n    var defaultFunctionResolver = new FunctionResolver();\n    var defaultVariableResolver = new VariableResolver();\n\n    function makeNSResolverFromFunction(func) {\n      return {\n        getNamespace: function getNamespace(prefix, node) {\n          var ns = func(prefix, node);\n          return ns || defaultNSResolver.getNamespace(prefix, node);\n        }\n      };\n    }\n\n    function makeNSResolverFromObject(obj) {\n      return makeNSResolverFromFunction(obj.getNamespace.bind(obj));\n    }\n\n    function makeNSResolverFromMap(map) {\n      return makeNSResolverFromFunction(function (prefix) {\n        return map[prefix];\n      });\n    }\n\n    function makeNSResolver(resolver) {\n      if (resolver && typeof resolver.getNamespace === \"function\") {\n        return makeNSResolverFromObject(resolver);\n      }\n\n      if (typeof resolver === \"function\") {\n        return makeNSResolverFromFunction(resolver);\n      } // assume prefix -> uri mapping\n\n\n      if (typeof resolver === \"object\") {\n        return makeNSResolverFromMap(resolver);\n      }\n\n      return defaultNSResolver;\n    }\n    /** Converts native JavaScript types to their XPath library equivalent */\n\n\n    function convertValue(value) {\n      if (value === null || typeof value === \"undefined\" || value instanceof XString || value instanceof XBoolean || value instanceof XNumber || value instanceof XNodeSet) {\n        return value;\n      }\n\n      switch (typeof value) {\n        case \"string\":\n          return new XString(value);\n\n        case \"boolean\":\n          return new XBoolean(value);\n\n        case \"number\":\n          return new XNumber(value);\n      } // assume node(s)\n\n\n      var ns = new XNodeSet();\n      ns.addArray([].concat(value));\n      return ns;\n    }\n\n    function makeEvaluator(func) {\n      return function (context) {\n        var args = Array.prototype.slice.call(arguments, 1).map(function (arg) {\n          return arg.evaluate(context);\n        });\n        var result = func.apply(this, [].concat(context, args));\n        return convertValue(result);\n      };\n    }\n\n    function makeFunctionResolverFromFunction(func) {\n      return {\n        getFunction: function getFunction(name, namespace) {\n          var found = func(name, namespace);\n\n          if (found) {\n            return makeEvaluator(found);\n          }\n\n          return defaultFunctionResolver.getFunction(name, namespace);\n        }\n      };\n    }\n\n    function makeFunctionResolverFromObject(obj) {\n      return makeFunctionResolverFromFunction(obj.getFunction.bind(obj));\n    }\n\n    function makeFunctionResolverFromMap(map) {\n      return makeFunctionResolverFromFunction(function (name) {\n        return map[name];\n      });\n    }\n\n    function makeFunctionResolver(resolver) {\n      if (resolver && typeof resolver.getFunction === \"function\") {\n        return makeFunctionResolverFromObject(resolver);\n      }\n\n      if (typeof resolver === \"function\") {\n        return makeFunctionResolverFromFunction(resolver);\n      } // assume map\n\n\n      if (typeof resolver === \"object\") {\n        return makeFunctionResolverFromMap(resolver);\n      }\n\n      return defaultFunctionResolver;\n    }\n\n    function makeVariableResolverFromFunction(func) {\n      return {\n        getVariable: function getVariable(name, namespace) {\n          var value = func(name, namespace);\n          return convertValue(value);\n        }\n      };\n    }\n\n    function makeVariableResolver(resolver) {\n      if (resolver) {\n        if (typeof resolver.getVariable === \"function\") {\n          return makeVariableResolverFromFunction(resolver.getVariable.bind(resolver));\n        }\n\n        if (typeof resolver === \"function\") {\n          return makeVariableResolverFromFunction(resolver);\n        } // assume map\n\n\n        if (typeof resolver === \"object\") {\n          return makeVariableResolverFromFunction(function (name) {\n            return resolver[name];\n          });\n        }\n      }\n\n      return defaultVariableResolver;\n    }\n\n    function copyIfPresent(prop, dest, source) {\n      if (prop in source) {\n        dest[prop] = source[prop];\n      }\n    }\n\n    function makeContext(options) {\n      var context = new XPathContext();\n\n      if (options) {\n        context.namespaceResolver = makeNSResolver(options.namespaces);\n        context.functionResolver = makeFunctionResolver(options.functions);\n        context.variableResolver = makeVariableResolver(options.variables);\n        context.expressionContextNode = options.node;\n        copyIfPresent('allowAnyNamespaceForNoPrefix', context, options);\n        copyIfPresent('isHtml', context, options);\n      } else {\n        context.namespaceResolver = defaultNSResolver;\n      }\n\n      return context;\n    }\n\n    function _evaluate(parsedExpression, options) {\n      var context = makeContext(options);\n      return parsedExpression.evaluate(context);\n    }\n\n    var evaluatorPrototype = {\n      evaluate: function evaluate(options) {\n        return _evaluate(this.expression, options);\n      },\n      evaluateNumber: function evaluateNumber(options) {\n        return this.evaluate(options).numberValue();\n      },\n      evaluateString: function evaluateString(options) {\n        return this.evaluate(options).stringValue();\n      },\n      evaluateBoolean: function evaluateBoolean(options) {\n        return this.evaluate(options).booleanValue();\n      },\n      evaluateNodeSet: function evaluateNodeSet(options) {\n        return this.evaluate(options).nodeset();\n      },\n      select: function select(options) {\n        return this.evaluateNodeSet(options).toArray();\n      },\n      select1: function select1(options) {\n        return this.select(options)[0];\n      }\n    };\n\n    function parse(xpath) {\n      var parsed = parser.parse(xpath);\n      return Object.create(evaluatorPrototype, {\n        expression: {\n          value: parsed\n        }\n      });\n    }\n\n    exports.parse = parse;\n  })();\n\n  assign(exports, {\n    XPath: XPath,\n    XPathParser: XPathParser,\n    XPathResult: XPathResult,\n    Step: Step,\n    PathExpr: PathExpr,\n    NodeTest: NodeTest,\n    LocationPath: LocationPath,\n    OrOperation: OrOperation,\n    AndOperation: AndOperation,\n    BarOperation: BarOperation,\n    EqualsOperation: EqualsOperation,\n    NotEqualOperation: NotEqualOperation,\n    LessThanOperation: LessThanOperation,\n    GreaterThanOperation: GreaterThanOperation,\n    LessThanOrEqualOperation: LessThanOrEqualOperation,\n    GreaterThanOrEqualOperation: GreaterThanOrEqualOperation,\n    PlusOperation: PlusOperation,\n    MinusOperation: MinusOperation,\n    MultiplyOperation: MultiplyOperation,\n    DivOperation: DivOperation,\n    ModOperation: ModOperation,\n    UnaryMinusOperation: UnaryMinusOperation,\n    FunctionCall: FunctionCall,\n    VariableReference: VariableReference,\n    XPathContext: XPathContext,\n    XNodeSet: XNodeSet,\n    XBoolean: XBoolean,\n    XString: XString,\n    XNumber: XNumber,\n    NamespaceResolver: NamespaceResolver,\n    FunctionResolver: FunctionResolver,\n    VariableResolver: VariableResolver,\n    Utilities: Utilities\n  }); // helper\n\n  exports.select = function (e, doc, single) {\n    return exports.selectWithResolver(e, doc, null, single);\n  };\n\n  exports.useNamespaces = function (mappings) {\n    var resolver = {\n      mappings: mappings || {},\n      lookupNamespaceURI: function lookupNamespaceURI(prefix) {\n        return this.mappings[prefix];\n      }\n    };\n    return function (e, doc, single) {\n      return exports.selectWithResolver(e, doc, resolver, single);\n    };\n  };\n\n  exports.selectWithResolver = function (e, doc, resolver, single) {\n    var expression = new XPathExpression(e, resolver, new XPathParser());\n    var type = XPathResult.ANY_TYPE;\n    var result = expression.evaluate(doc, type, null);\n\n    if (result.resultType == XPathResult.STRING_TYPE) {\n      result = result.stringValue;\n    } else if (result.resultType == XPathResult.NUMBER_TYPE) {\n      result = result.numberValue;\n    } else if (result.resultType == XPathResult.BOOLEAN_TYPE) {\n      result = result.booleanValue;\n    } else {\n      result = result.nodes;\n\n      if (single) {\n        result = result[0];\n      }\n    }\n\n    return result;\n  };\n\n  exports.select1 = function (e, doc) {\n    return exports.select(e, doc, true);\n  }; // end non-node wrapper\n\n})(xpath);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/xpath/xpath.js"],"names":["xpath","exports","curry","func","slice","Array","prototype","totalargs","length","partial","args","fn","apply","concat","call","arguments","forEach","f","xs","i","reduce","seed","acc","x","map","mapped","filter","filtered","push","includes","values","value","always","toString","join","s","wrap","pref","suf","str","prototypeConcat","MAX_ARGUMENT_LENGTH","flatten","arr","result","start","chunk","assign","target","varArgs","to","Object","index","nextSource","nextKey","hasOwnProperty","XPathParser","constructor","superclass","init","reduceActions","rhs","OrOperation","AndOperation","EqualsOperation","NotEqualOperation","LessThanOperation","GreaterThanOperation","LessThanOrEqualOperation","GreaterThanOrEqualOperation","PlusOperation","MinusOperation","MultiplyOperation","DivOperation","ModOperation","UnaryMinusOperation","BarOperation","PathExpr","undefined","locationPath","steps","unshift","Step","DESCENDANTORSELF","NodeTest","nodeTest","Utilities","instance_of","filterPredicates","XString","XNumber","FunctionCall","LocationPath","absolute","CHILD","ANCESTOR","ANCESTORORSELF","ATTRIBUTE","DESCENDANT","FOLLOWING","FOLLOWINGSIBLING","NAMESPACE","PARENT","PRECEDING","PRECEDINGSIBLING","SELF","commentTest","textTest","anyPiTest","PITest","VariableReference","nameTestAny","NameTestPrefixAny","split","NameTestQName","actionTable","actionTableNumber","gotoTable","productions","DOUBLEDOT","DOUBLECOLON","DOUBLESLASH","NOTEQUAL","LESSTHANOREQUAL","GREATERTHANOREQUAL","AND","OR","MOD","DIV","MULTIPLYOPERATOR","FUNCTIONNAME","AXISNAME","LITERAL","NUMBER","ASTERISKNAMETEST","QNAME","NCNAMECOLONASTERISK","NODETYPE","PROCESSINGINSTRUCTIONWITHLITERAL","EQUALS","LESSTHAN","GREATERTHAN","PLUS","MINUS","BAR","SLASH","LEFTPARENTHESIS","RIGHTPARENTHESIS","COMMA","AT","LEFTBRACKET","RIGHTBRACKET","DOT","DOLLAR","tokenize","s1","types","pos","c","charAt","number","delimiter","literal","XPathException","fromMessage","last","isLetter","charCodeAt","name","isNCNameChar","Error","SHIFT","REDUCE","ACCEPT","parse","res","tokenPos","state","tokenType","tokenValue","a","t","num","pop","s_","XPath","e","expression","setIfUnset","obj","prop","evaluate","contextNode","expressionContextNode","contextSize","contextPosition","isHtml","XML_NAMESPACE_URI","XMLNS_NAMESPACE_URI","Expression","UnaryOperation","negate","BinaryOperation","lhs","b","bool","booleanValue","equals","notequal","lessthan","greaterthan","lessthanorequal","greaterthanorequal","plus","minus","multiply","div","mod","nodeset","union","filterPreds","locpath","findRoot","node","parentNode","applyPredicates","predicates","nodes","ctx","extend","inNodes","pred","predicateMatches","getRoot","xpc","firstNode","nodeType","virtualRoot","ownerDoc","ownerDocument","n","applyStep","step","self","newNodes","axis","m","getOwnerElement","matches","nnm","attributes","k","item","firstChild","nextSibling","st","attr","nm","String","substring","pre","nsn","XPathNamespace","outer","previousSibling","applyStepWithPredicates","applyStepToNodes","context","bind","applySteps","applyFilter","ns","XNodeSet","nonNodes","toUnsortedArray","applyLocationPath","startNodes","XPathContext","filterResult","addArray","numberValue","predicateString","predicate","predicatesString","filterStr","ownerElement","selectSingleNode","doc","elts","getElementsByTagName","elt","j","an","abs","nodetest","preds","STEPNAMES","type","console","warn","NAMETESTANY","NAMETESTPREFIXANY","NAMETESTQNAME","COMMENT","TEXT","PI","NODE","isNodeType","makeNodeTestType","members","ctor","newType","makeNodeTypeTest","nodeTypes","stringVal","hasPrefix","prefix","nodeName","tagName","indexOf","isElementOrAttribute","nameSpaceMatches","nNamespace","namespaceURI","allowAnyNamespaceForNoPrefix","namespaceResolver","getNamespace","localNameMatches","localName","nLocalName","caseInsensitive","toLowerCase","XPATH_NAMESPACE_NODE","nameParts","v","variable","parts","resolveQName","variableResolver","getVariable","functionName","FunctionResolver","getFunctionFromContext","functionResolver","thisArg","Operators","l","r","string","XBoolean","stringValue","compareWithString","Number","numberFormat","test","parseFloat","NaN","padSmallNumber","numberStr","base","replace","exponent","padLargeNumber","zerosToAppend","strValue","compareWithNumber","Boolean","not","compareWithBoolean","true_","false_","AVLTree","left","right","depth","balance","ldepth","rdepth","lldepth","lrdepth","rotateRR","rotateLL","rrdepth","rldepth","nodeBefore","rightBefore","updateInNewLocation","leftBefore","getDepthFromChildren","nodeOrder","n1","n2","compareDocumentPosition","cpos","d1","d2","m1","m2","n1Par","n2Par","n1isAttr","isAttribute","n2isAttr","cn","childNodes","len","add","o","ret","tree","size","p","first","stringForNode","stringForContainerNode","nodeValue","isNamespaceNode","namespace","nt","buildTree","toArray","toArrayRec","compareWithNodeSet","oInvert","lop","rop","compareWith","isXPathNamespace","vr","nr","fr","VariableResolver","NamespaceResolver","newProps","ln","Functions","functions","addStandardFunctions","position","count","id","startsWith","contains","substringBefore","substringAfter","stringLength","normalizeSpace","translate","boolean_","lang","sum","floor","ceiling","round","addFunction","qName","getFunction","documentElement","aname","ids","getElementById","eNode","baseName","s2","Math","isSpace","eValue","eFrom","eTo","from","cMap","ch","getAttributeNS","ceil","val","splitQName","qn","useDefault","coalesceText","del","removeChild","appendChild","createTextNode","next","insertBefore","getAttribute","getMessage","code","exception","msg","INVALID_EXPRESSION_ERR","TYPE_ERR","error","message","err","create","XPathExpression","XPathNSResolverWrapper","getOwnerDocument","detectHtmlDom","implementation","hasFeature","XPathResult","xpathNSResolver","lookupNamespaceURI","NodeXPathNSResolver","ANY_TYPE","STRING_TYPE","NUMBER_TYPE","BOOLEAN_TYPE","UNORDERED_NODE_ITERATOR_TYPE","resultType","ANY_UNORDERED_NODE_TYPE","FIRST_ORDERED_NODE_TYPE","singleNodeValue","ORDERED_NODE_ITERATOR_TYPE","invalidIteratorState","iteratorIndex","UNORDERED_NODE_SNAPSHOT_TYPE","ORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","iterateNext","snapshotItem","installDOM3XPathSupport","createExpression","createNSResolver","shouldInstall","document","parser","defaultNSResolver","defaultFunctionResolver","defaultVariableResolver","makeNSResolverFromFunction","makeNSResolverFromObject","makeNSResolverFromMap","makeNSResolver","resolver","convertValue","makeEvaluator","arg","makeFunctionResolverFromFunction","found","makeFunctionResolverFromObject","makeFunctionResolverFromMap","makeFunctionResolver","makeVariableResolverFromFunction","makeVariableResolver","copyIfPresent","dest","source","makeContext","options","namespaces","variables","parsedExpression","evaluatorPrototype","evaluateNumber","evaluateString","evaluateBoolean","evaluateNodeSet","select","select1","parsed","single","selectWithResolver","useNamespaces","mappings"],"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","sourcesContent":["/*\r\n * xpath.js\r\n *\r\n * An XPath 1.0 library for JavaScript.\r\n *\r\n * Cameron McCormack <cam (at) mcc.id.au>\r\n *\r\n * This work is licensed under the MIT License.\r\n *\r\n * Revision 20: April 26, 2011\r\n *   Fixed a typo resulting in FIRST_ORDERED_NODE_TYPE results being wrong,\r\n *   thanks to <shi_a009 (at) hotmail.com>.\r\n *\r\n * Revision 19: November 29, 2005\r\n *   Nodesets now store their nodes in a height balanced tree, increasing\r\n *   performance for the common case of selecting nodes in document order,\r\n *   thanks to Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *   AVL tree code adapted from Raimund Neumann <rnova (at) gmx.net>.\r\n *\r\n * Revision 18: October 27, 2005\r\n *   DOM 3 XPath support.  Caveats:\r\n *     - namespace prefixes aren't resolved in XPathEvaluator.createExpression,\r\n *       but in XPathExpression.evaluate.\r\n *     - XPathResult.invalidIteratorState is not implemented.\r\n *\r\n * Revision 17: October 25, 2005\r\n *   Some core XPath function fixes and a patch to avoid crashing certain\r\n *   versions of MSXML in PathExpr.prototype.getOwnerElement, thanks to\r\n *   Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *\r\n * Revision 16: September 22, 2005\r\n *   Workarounds for some IE 5.5 deficiencies.\r\n *   Fixed problem with prefix node tests on attribute nodes.\r\n *\r\n * Revision 15: May 21, 2005\r\n *   Fixed problem with QName node tests on elements with an xmlns=\"...\".\r\n *\r\n * Revision 14: May 19, 2005\r\n *   Fixed QName node tests on attribute node regression.\r\n *\r\n * Revision 13: May 3, 2005\r\n *   Node tests are case insensitive now if working in an HTML DOM.\r\n *\r\n * Revision 12: April 26, 2005\r\n *   Updated licence.  Slight code changes to enable use of Dean\r\n *   Edwards' script compression, http://dean.edwards.name/packer/ .\r\n *\r\n * Revision 11: April 23, 2005\r\n *   Fixed bug with 'and' and 'or' operators, fix thanks to\r\n *   Sandy McArthur <sandy (at) mcarthur.org>.\r\n *\r\n * Revision 10: April 15, 2005\r\n *   Added support for a virtual root node, supposedly helpful for\r\n *   implementing XForms.  Fixed problem with QName node tests and\r\n *   the parent axis.\r\n *\r\n * Revision 9: March 17, 2005\r\n *   Namespace resolver tweaked so using the document node as the context\r\n *   for namespace lookups is equivalent to using the document element.\r\n *\r\n * Revision 8: February 13, 2005\r\n *   Handle implicit declaration of 'xmlns' namespace prefix.\r\n *   Fixed bug when comparing nodesets.\r\n *   Instance data can now be associated with a FunctionResolver, and\r\n *     workaround for MSXML not supporting 'localName' and 'getElementById',\r\n *     thanks to Grant Gongaware.\r\n *   Fix a few problems when the context node is the root node.\r\n *\r\n * Revision 7: February 11, 2005\r\n *   Default namespace resolver fix from Grant Gongaware\r\n *   <grant (at) gongaware.com>.\r\n *\r\n * Revision 6: February 10, 2005\r\n *   Fixed bug in 'number' function.\r\n *\r\n * Revision 5: February 9, 2005\r\n *   Fixed bug where text nodes not getting converted to string values.\r\n *\r\n * Revision 4: January 21, 2005\r\n *   Bug in 'name' function, fix thanks to Bill Edney.\r\n *   Fixed incorrect processing of namespace nodes.\r\n *   Fixed NamespaceResolver to resolve 'xml' namespace.\r\n *   Implemented union '|' operator.\r\n *\r\n * Revision 3: January 14, 2005\r\n *   Fixed bug with nodeset comparisons, bug lexing < and >.\r\n *\r\n * Revision 2: October 26, 2004\r\n *   QName node test namespace handling fixed.  Few other bug fixes.\r\n *\r\n * Revision 1: August 13, 2004\r\n *   Bug fixes from William J. Edney <bedney (at) technicalpursuit.com>.\r\n *   Added minimal licence.\r\n *\r\n * Initial version: June 14, 2004\r\n */\r\n\r\n// non-node wrapper\r\nvar xpath = (typeof exports === 'undefined') ? {} : exports;\r\n\r\n(function (exports) {\r\n    \"use strict\";\r\n\r\n    // functional helpers\r\n    function curry(func) {\r\n        var slice = Array.prototype.slice,\r\n            totalargs = func.length,\r\n            partial = function (args, fn) {\r\n                return function () {\r\n                    return fn.apply(this, args.concat(slice.call(arguments)));\r\n                }\r\n            },\r\n            fn = function () {\r\n                var args = slice.call(arguments);\r\n                return (args.length < totalargs) ?\r\n                    partial(args, fn) :\r\n                    func.apply(this, slice.apply(arguments, [0, totalargs]));\r\n            };\r\n        return fn;\r\n    }\r\n\r\n    var forEach = function (f, xs) {\r\n        for (var i = 0; i < xs.length; i += 1) {\r\n            f(xs[i], i, xs);\r\n        }\r\n    };\r\n\r\n    var reduce = function (f, seed, xs) {\r\n        var acc = seed;\r\n\r\n        forEach(function (x, i) { acc = f(acc, x, i); }, xs);\r\n\r\n        return acc;\r\n    };\r\n\r\n    var map = function (f, xs) {\r\n        var mapped = new Array(xs.length);\r\n\r\n        forEach(function (x, i) { mapped[i] = f(x); }, xs);\r\n\r\n        return mapped;\r\n    };\r\n\r\n    var filter = function (f, xs) {\r\n        var filtered = [];\r\n\r\n        forEach(function (x, i) { if (f(x, i)) { filtered.push(x); } }, xs);\r\n\r\n        return filtered;\r\n    };\r\n\r\n    var includes = function (values, value) {\r\n        for (var i = 0; i < values.length; i += 1) {\r\n            if (values[i] === value) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    function always(value) { return function () { return value; } }\r\n\r\n    function toString(x) { return x.toString(); }\r\n    var join = function (s, xs) { return xs.join(s); };\r\n    var wrap = function (pref, suf, str) { return pref + str + suf; };\r\n\r\n    var prototypeConcat = Array.prototype.concat;\r\n\r\n    // .apply() fails above a certain number of arguments - https://github.com/goto100/xpath/pull/98\r\n    var MAX_ARGUMENT_LENGTH = 32767;\r\n\r\n    function flatten(arr) {\r\n        var result = [];\r\n\r\n        for (var start = 0; start < arr.length; start += MAX_ARGUMENT_LENGTH) {\r\n            var chunk = arr.slice(start, start + MAX_ARGUMENT_LENGTH);\r\n            \r\n            result = prototypeConcat.apply(result, chunk);\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    function assign(target, varArgs) { // .length of function is 2\r\n        var to = Object(target);\r\n\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n\r\n            if (nextSource != null) { // Skip over if undefined or null\r\n                for (var nextKey in nextSource) {\r\n                    // Avoid bugs when hasOwnProperty is shadowed\r\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return to;\r\n    }\r\n\r\n    // XPathParser ///////////////////////////////////////////////////////////////\r\n\r\n    XPathParser.prototype = new Object();\r\n    XPathParser.prototype.constructor = XPathParser;\r\n    XPathParser.superclass = Object.prototype;\r\n\r\n    function XPathParser() {\r\n        this.init();\r\n    }\r\n\r\n    XPathParser.prototype.init = function () {\r\n        this.reduceActions = [];\r\n\r\n        this.reduceActions[3] = function (rhs) {\r\n            return new OrOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[5] = function (rhs) {\r\n            return new AndOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[7] = function (rhs) {\r\n            return new EqualsOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[8] = function (rhs) {\r\n            return new NotEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[10] = function (rhs) {\r\n            return new LessThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[11] = function (rhs) {\r\n            return new GreaterThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[12] = function (rhs) {\r\n            return new LessThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[13] = function (rhs) {\r\n            return new GreaterThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[15] = function (rhs) {\r\n            return new PlusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[16] = function (rhs) {\r\n            return new MinusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[18] = function (rhs) {\r\n            return new MultiplyOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[19] = function (rhs) {\r\n            return new DivOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[20] = function (rhs) {\r\n            return new ModOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[22] = function (rhs) {\r\n            return new UnaryMinusOperation(rhs[1]);\r\n        };\r\n        this.reduceActions[24] = function (rhs) {\r\n            return new BarOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[25] = function (rhs) {\r\n            return new PathExpr(undefined, undefined, rhs[0]);\r\n        };\r\n        this.reduceActions[27] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[28] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            rhs[0].locationPath.steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[29] = function (rhs) {\r\n            return new PathExpr(rhs[0], [], undefined);\r\n        };\r\n        this.reduceActions[30] = function (rhs) {\r\n            if (Utilities.instance_of(rhs[0], PathExpr)) {\r\n                if (rhs[0].filterPredicates == undefined) {\r\n                    rhs[0].filterPredicates = [];\r\n                }\r\n                rhs[0].filterPredicates.push(rhs[1]);\r\n                return rhs[0];\r\n            } else {\r\n                return new PathExpr(rhs[0], [rhs[1]], undefined);\r\n            }\r\n        };\r\n        this.reduceActions[32] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[33] = function (rhs) {\r\n            return new XString(rhs[0]);\r\n        };\r\n        this.reduceActions[34] = function (rhs) {\r\n            return new XNumber(rhs[0]);\r\n        };\r\n        this.reduceActions[36] = function (rhs) {\r\n            return new FunctionCall(rhs[0], []);\r\n        };\r\n        this.reduceActions[37] = function (rhs) {\r\n            return new FunctionCall(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[38] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[39] = function (rhs) {\r\n            rhs[2].unshift(rhs[0]);\r\n            return rhs[2];\r\n        };\r\n        this.reduceActions[43] = function (rhs) {\r\n            return new LocationPath(true, []);\r\n        };\r\n        this.reduceActions[44] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[46] = function (rhs) {\r\n            return new LocationPath(false, [rhs[0]]);\r\n        };\r\n        this.reduceActions[47] = function (rhs) {\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[49] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], []);\r\n        };\r\n        this.reduceActions[50] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], []);\r\n        };\r\n        this.reduceActions[51] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], rhs[2]);\r\n        };\r\n        this.reduceActions[52] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], rhs[1]);\r\n        };\r\n        this.reduceActions[54] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[55] = function (rhs) {\r\n            rhs[1].unshift(rhs[0]);\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[56] = function (rhs) {\r\n            if (rhs[0] == \"ancestor\") {\r\n                return Step.ANCESTOR;\r\n            } else if (rhs[0] == \"ancestor-or-self\") {\r\n                return Step.ANCESTORORSELF;\r\n            } else if (rhs[0] == \"attribute\") {\r\n                return Step.ATTRIBUTE;\r\n            } else if (rhs[0] == \"child\") {\r\n                return Step.CHILD;\r\n            } else if (rhs[0] == \"descendant\") {\r\n                return Step.DESCENDANT;\r\n            } else if (rhs[0] == \"descendant-or-self\") {\r\n                return Step.DESCENDANTORSELF;\r\n            } else if (rhs[0] == \"following\") {\r\n                return Step.FOLLOWING;\r\n            } else if (rhs[0] == \"following-sibling\") {\r\n                return Step.FOLLOWINGSIBLING;\r\n            } else if (rhs[0] == \"namespace\") {\r\n                return Step.NAMESPACE;\r\n            } else if (rhs[0] == \"parent\") {\r\n                return Step.PARENT;\r\n            } else if (rhs[0] == \"preceding\") {\r\n                return Step.PRECEDING;\r\n            } else if (rhs[0] == \"preceding-sibling\") {\r\n                return Step.PRECEDINGSIBLING;\r\n            } else if (rhs[0] == \"self\") {\r\n                return Step.SELF;\r\n            }\r\n            return -1;\r\n        };\r\n        this.reduceActions[57] = function (rhs) {\r\n            return Step.ATTRIBUTE;\r\n        };\r\n        this.reduceActions[59] = function (rhs) {\r\n            if (rhs[0] == \"comment\") {\r\n                return NodeTest.commentTest;\r\n            } else if (rhs[0] == \"text\") {\r\n                return NodeTest.textTest;\r\n            } else if (rhs[0] == \"processing-instruction\") {\r\n                return NodeTest.anyPiTest;\r\n            } else if (rhs[0] == \"node\") {\r\n                return NodeTest.nodeTest;\r\n            }\r\n            return new NodeTest(-1, undefined);\r\n        };\r\n        this.reduceActions[60] = function (rhs) {\r\n            return new NodeTest.PITest(rhs[2]);\r\n        };\r\n        this.reduceActions[61] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[63] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            rhs[1].steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[64] = function (rhs) {\r\n            rhs[0].steps.push(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[65] = function (rhs) {\r\n            return new Step(Step.SELF, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[66] = function (rhs) {\r\n            return new Step(Step.PARENT, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[67] = function (rhs) {\r\n            return new VariableReference(rhs[1]);\r\n        };\r\n        this.reduceActions[68] = function (rhs) {\r\n            return NodeTest.nameTestAny;\r\n        };\r\n        this.reduceActions[69] = function (rhs) {\r\n            return new NodeTest.NameTestPrefixAny(rhs[0].split(':')[0]);\r\n        };\r\n        this.reduceActions[70] = function (rhs) {\r\n            return new NodeTest.NameTestQName(rhs[0]);\r\n        };\r\n    };\r\n\r\n    XPathParser.actionTable = [\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                 s                  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"rs  rrrrrrrr s  sssssrrrrrr  rrs rs \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                            s       \",\r\n        \"                            s       \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"  s                                 \",\r\n        \"                            s       \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"a                                   \",\r\n        \"r       s                    rr  r  \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrs  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr sr  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                sssss               \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"              s                     \",\r\n        \"                             s      \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s sss s  ss\",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss      ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             rr     \",\r\n        \"                             s      \",\r\n        \"                             rs     \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"                                 r  \",\r\n        \"                                 s  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             r      \"\r\n    ];\r\n\r\n    XPathParser.actionTableNumber = [\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                 J                  \",\r\n        \"a  aaaaaaaaa         aaaaaaa aa  a  \",\r\n        \"                YYYYY               \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"K1  KKKKKKKK .  +*)('KKKKKK  KK# K\\\" \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                            N       \",\r\n        \"                            O       \",\r\n        \"e  eeeeeeeee         eeeeeee ee ee  \",\r\n        \"f  fffffffff         fffffff ff ff  \",\r\n        \"d  ddddddddd         ddddddd dd dd  \",\r\n        \"B  BBBBBBBBB         BBBBBBB BB BB  \",\r\n        \"A  AAAAAAAAA         AAAAAAA AA AA  \",\r\n        \"  P                                 \",\r\n        \"                            Q       \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"b  bbbbbbbbb         bbbbbbb bb  b  \",\r\n        \"                                    \",\r\n        \"!       S                    !!  !  \",\r\n        \"\\\"      T\\\"                    \\\"\\\"  \\\"  \",\r\n        \"$   V  $$            U       $$  $  \",\r\n        \"&   &ZY&&            &XW     &&  &  \",\r\n        \")   )))))            )))\\\\[   ))  )  \",\r\n        \".   ....._^]         .....   ..  .  \",\r\n        \"1   11111111         11111   11  1  \",\r\n        \"5   55555555         55555`  55  5  \",\r\n        \"7   77777777         777777  77  7  \",\r\n        \"9   99999999         999999  99  9  \",\r\n        \":  c::::::::         ::::::b :: a:  \",\r\n        \"I  fIIIIIIII         IIIIIIe II  I  \",\r\n        \"=  =========         ======= == ==  \",\r\n        \"?  ?????????         ??????? ?? ??  \",\r\n        \"C  CCCCCCCCC         CCCCCCC CC CC  \",\r\n        \"J   JJJJJJJJ         JJJJJJ  JJ  J  \",\r\n        \"M   MMMMMMMM         MMMMMM  MM  M  \",\r\n        \"N  NNNNNNNNN         NNNNNNN NN  N  \",\r\n        \"P  PPPPPPPPP         PPPPPPP PP  P  \",\r\n        \"                +*)('               \",\r\n        \"R  RRRRRRRRR         RRRRRRR RR aR  \",\r\n        \"U  UUUUUUUUU         UUUUUUU UU  U  \",\r\n        \"Z  ZZZZZZZZZ         ZZZZZZZ ZZ ZZ  \",\r\n        \"c  ccccccccc         ccccccc cc cc  \",\r\n        \"                             j      \",\r\n        \"L  fLLLLLLLL         LLLLLLe LL  L  \",\r\n        \"6   66666666         66666   66  6  \",\r\n        \"              k                     \",\r\n        \"                             l      \",\r\n        \"                XXXXX               \",\r\n        \" 1 0        /.-,+*)('    & %$m #  \\\"!\",\r\n        \"_  f________         ______e __  _  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('      %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \">  >>>>>>>>>         >>>>>>> >> >>  \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"Q  QQQQQQQQQ         QQQQQQQ QQ aQ  \",\r\n        \"V  VVVVVVVVV         VVVVVVV VV aV  \",\r\n        \"T  TTTTTTTTT         TTTTTTT TT  T  \",\r\n        \"@  @@@@@@@@@         @@@@@@@ @@ @@  \",\r\n        \"                             \\x87      \",\r\n        \"[  [[[[[[[[[         [[[[[[[ [[ [[  \",\r\n        \"D  DDDDDDDDD         DDDDDDD DD DD  \",\r\n        \"                             HH     \",\r\n        \"                             \\x88      \",\r\n        \"                             F\\x89     \",\r\n        \"#      T#                    ##  #  \",\r\n        \"%   V  %%            U       %%  %  \",\r\n        \"'   'ZY''            'XW     ''  '  \",\r\n        \"(   (ZY((            (XW     ((  (  \",\r\n        \"+   +++++            +++\\\\[   ++  +  \",\r\n        \"*   *****            ***\\\\[   **  *  \",\r\n        \"-   -----            ---\\\\[   --  -  \",\r\n        \",   ,,,,,            ,,,\\\\[   ,,  ,  \",\r\n        \"0   00000_^]         00000   00  0  \",\r\n        \"/   /////_^]         /////   //  /  \",\r\n        \"2   22222222         22222   22  2  \",\r\n        \"3   33333333         33333   33  3  \",\r\n        \"4   44444444         44444   44  4  \",\r\n        \"8   88888888         888888  88  8  \",\r\n        \"                                 ^  \",\r\n        \"                                 \\x8a  \",\r\n        \";  f;;;;;;;;         ;;;;;;e ;;  ;  \",\r\n        \"<  f<<<<<<<<         <<<<<<e <<  <  \",\r\n        \"O  OOOOOOOOO         OOOOOOO OO  O  \",\r\n        \"`  `````````         ``````` ``  `  \",\r\n        \"S  SSSSSSSSS         SSSSSSS SS  S  \",\r\n        \"W  WWWWWWWWW         WWWWWWW WW  W  \",\r\n        \"\\\\  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\         \\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\\\\\ \\\\\\\\  \",\r\n        \"E  EEEEEEEEE         EEEEEEE EE EE  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"]  ]]]]]]]]]         ]]]]]]] ]] ]]  \",\r\n        \"                             G      \"\r\n    ];\r\n\r\n    XPathParser.gotoTable = [\r\n        \"3456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"L456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"            M        EFGH IJ \",\r\n        \"       N;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"            S        EFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"              e              \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                        h  J \",\r\n        \"              i          j   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ ABpqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"  r6789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"   s789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    t89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    u89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     v9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     w9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     x9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     y9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      z:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      {:;<=>?@ AB  CDEFGH IJ \",\r\n        \"       |;<=>?@ AB  CDEFGH IJ \",\r\n        \"       };<=>?@ AB  CDEFGH IJ \",\r\n        \"       ~;<=>?@ AB  CDEFGH IJ \",\r\n        \"         \\x7f=>?@ AB  CDEFGH IJ \",\r\n        \"\\x80456789:;<=>?@ AB  CDEFGH IJ\\x81\",\r\n        \"            \\x82        EFGH IJ \",\r\n        \"            \\x83        EFGH IJ \",\r\n        \"                             \",\r\n        \"                     \\x84 GH IJ \",\r\n        \"                     \\x85 GH IJ \",\r\n        \"              i          \\x86   \",\r\n        \"              i          \\x87   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ AB\\x8cqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \"\r\n    ];\r\n\r\n    XPathParser.productions = [\r\n        [1, 1, 2],\r\n        [2, 1, 3],\r\n        [3, 1, 4],\r\n        [3, 3, 3, -9, 4],\r\n        [4, 1, 5],\r\n        [4, 3, 4, -8, 5],\r\n        [5, 1, 6],\r\n        [5, 3, 5, -22, 6],\r\n        [5, 3, 5, -5, 6],\r\n        [6, 1, 7],\r\n        [6, 3, 6, -23, 7],\r\n        [6, 3, 6, -24, 7],\r\n        [6, 3, 6, -6, 7],\r\n        [6, 3, 6, -7, 7],\r\n        [7, 1, 8],\r\n        [7, 3, 7, -25, 8],\r\n        [7, 3, 7, -26, 8],\r\n        [8, 1, 9],\r\n        [8, 3, 8, -12, 9],\r\n        [8, 3, 8, -11, 9],\r\n        [8, 3, 8, -10, 9],\r\n        [9, 1, 10],\r\n        [9, 2, -26, 9],\r\n        [10, 1, 11],\r\n        [10, 3, 10, -27, 11],\r\n        [11, 1, 12],\r\n        [11, 1, 13],\r\n        [11, 3, 13, -28, 14],\r\n        [11, 3, 13, -4, 14],\r\n        [13, 1, 15],\r\n        [13, 2, 13, 16],\r\n        [15, 1, 17],\r\n        [15, 3, -29, 2, -30],\r\n        [15, 1, -15],\r\n        [15, 1, -16],\r\n        [15, 1, 18],\r\n        [18, 3, -13, -29, -30],\r\n        [18, 4, -13, -29, 19, -30],\r\n        [19, 1, 20],\r\n        [19, 3, 20, -31, 19],\r\n        [20, 1, 2],\r\n        [12, 1, 14],\r\n        [12, 1, 21],\r\n        [21, 1, -28],\r\n        [21, 2, -28, 14],\r\n        [21, 1, 22],\r\n        [14, 1, 23],\r\n        [14, 3, 14, -28, 23],\r\n        [14, 1, 24],\r\n        [23, 2, 25, 26],\r\n        [23, 1, 26],\r\n        [23, 3, 25, 26, 27],\r\n        [23, 2, 26, 27],\r\n        [23, 1, 28],\r\n        [27, 1, 16],\r\n        [27, 2, 16, 27],\r\n        [25, 2, -14, -3],\r\n        [25, 1, -32],\r\n        [26, 1, 29],\r\n        [26, 3, -20, -29, -30],\r\n        [26, 4, -21, -29, -15, -30],\r\n        [16, 3, -33, 30, -34],\r\n        [30, 1, 2],\r\n        [22, 2, -4, 14],\r\n        [24, 3, 14, -4, 23],\r\n        [28, 1, -35],\r\n        [28, 1, -2],\r\n        [17, 2, -36, -18],\r\n        [29, 1, -17],\r\n        [29, 1, -19],\r\n        [29, 1, -18]\r\n    ];\r\n\r\n    XPathParser.DOUBLEDOT = 2;\r\n    XPathParser.DOUBLECOLON = 3;\r\n    XPathParser.DOUBLESLASH = 4;\r\n    XPathParser.NOTEQUAL = 5;\r\n    XPathParser.LESSTHANOREQUAL = 6;\r\n    XPathParser.GREATERTHANOREQUAL = 7;\r\n    XPathParser.AND = 8;\r\n    XPathParser.OR = 9;\r\n    XPathParser.MOD = 10;\r\n    XPathParser.DIV = 11;\r\n    XPathParser.MULTIPLYOPERATOR = 12;\r\n    XPathParser.FUNCTIONNAME = 13;\r\n    XPathParser.AXISNAME = 14;\r\n    XPathParser.LITERAL = 15;\r\n    XPathParser.NUMBER = 16;\r\n    XPathParser.ASTERISKNAMETEST = 17;\r\n    XPathParser.QNAME = 18;\r\n    XPathParser.NCNAMECOLONASTERISK = 19;\r\n    XPathParser.NODETYPE = 20;\r\n    XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL = 21;\r\n    XPathParser.EQUALS = 22;\r\n    XPathParser.LESSTHAN = 23;\r\n    XPathParser.GREATERTHAN = 24;\r\n    XPathParser.PLUS = 25;\r\n    XPathParser.MINUS = 26;\r\n    XPathParser.BAR = 27;\r\n    XPathParser.SLASH = 28;\r\n    XPathParser.LEFTPARENTHESIS = 29;\r\n    XPathParser.RIGHTPARENTHESIS = 30;\r\n    XPathParser.COMMA = 31;\r\n    XPathParser.AT = 32;\r\n    XPathParser.LEFTBRACKET = 33;\r\n    XPathParser.RIGHTBRACKET = 34;\r\n    XPathParser.DOT = 35;\r\n    XPathParser.DOLLAR = 36;\r\n\r\n    XPathParser.prototype.tokenize = function (s1) {\r\n        var types = [];\r\n        var values = [];\r\n        var s = s1 + '\\0';\r\n\r\n        var pos = 0;\r\n        var c = s.charAt(pos++);\r\n        while (1) {\r\n            while (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\r\n                c = s.charAt(pos++);\r\n            }\r\n            if (c == '\\0' || pos >= s.length) {\r\n                break;\r\n            }\r\n\r\n            if (c == '(') {\r\n                types.push(XPathParser.LEFTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ')') {\r\n                types.push(XPathParser.RIGHTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '[') {\r\n                types.push(XPathParser.LEFTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ']') {\r\n                types.push(XPathParser.RIGHTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '@') {\r\n                types.push(XPathParser.AT);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ',') {\r\n                types.push(XPathParser.COMMA);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '|') {\r\n                types.push(XPathParser.BAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '+') {\r\n                types.push(XPathParser.PLUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '-') {\r\n                types.push(XPathParser.MINUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '=') {\r\n                types.push(XPathParser.EQUALS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '$') {\r\n                types.push(XPathParser.DOLLAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '.') {\r\n                c = s.charAt(pos++);\r\n                if (c == '.') {\r\n                    types.push(XPathParser.DOUBLEDOT);\r\n                    values.push(\"..\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                if (c >= '0' && c <= '9') {\r\n                    var number = \".\" + c;\r\n                    c = s.charAt(pos++);\r\n                    while (c >= '0' && c <= '9') {\r\n                        number += c;\r\n                        c = s.charAt(pos++);\r\n                    }\r\n                    types.push(XPathParser.NUMBER);\r\n                    values.push(number);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.DOT);\r\n                values.push('.');\r\n                continue;\r\n            }\r\n\r\n            if (c == '\\'' || c == '\"') {\r\n                var delimiter = c;\r\n                var literal = \"\";\r\n                while (pos < s.length && (c = s.charAt(pos)) !== delimiter) {\r\n                    literal += c;\r\n                    pos += 1;\r\n                }\r\n                if (c !== delimiter) {\r\n                    throw XPathException.fromMessage(\"Unterminated string literal: \" + delimiter + literal);\r\n                }\r\n                pos += 1;\r\n                types.push(XPathParser.LITERAL);\r\n                values.push(literal);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c >= '0' && c <= '9') {\r\n                var number = c;\r\n                c = s.charAt(pos++);\r\n                while (c >= '0' && c <= '9') {\r\n                    number += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (c == '.') {\r\n                    if (s.charAt(pos) >= '0' && s.charAt(pos) <= '9') {\r\n                        number += c;\r\n                        number += s.charAt(pos++);\r\n                        c = s.charAt(pos++);\r\n                        while (c >= '0' && c <= '9') {\r\n                            number += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                    }\r\n                }\r\n                types.push(XPathParser.NUMBER);\r\n                values.push(number);\r\n                continue;\r\n            }\r\n\r\n            if (c == '*') {\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        types.push(XPathParser.MULTIPLYOPERATOR);\r\n                        values.push(c);\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                }\r\n                types.push(XPathParser.ASTERISKNAMETEST);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == ':') {\r\n                if (s.charAt(pos) == ':') {\r\n                    types.push(XPathParser.DOUBLECOLON);\r\n                    values.push(\"::\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '/') {\r\n                c = s.charAt(pos++);\r\n                if (c == '/') {\r\n                    types.push(XPathParser.DOUBLESLASH);\r\n                    values.push(\"//\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.SLASH);\r\n                values.push('/');\r\n                continue;\r\n            }\r\n\r\n            if (c == '!') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.NOTEQUAL);\r\n                    values.push(\"!=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '<') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.LESSTHANOREQUAL);\r\n                    values.push(\"<=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.LESSTHAN);\r\n                values.push('<');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '>') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.GREATERTHANOREQUAL);\r\n                    values.push(\">=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.GREATERTHAN);\r\n                values.push('>');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '_' || Utilities.isLetter(c.charCodeAt(0))) {\r\n                var name = c;\r\n                c = s.charAt(pos++);\r\n                while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                    name += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        if (name == \"and\") {\r\n                            types.push(XPathParser.AND);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"or\") {\r\n                            types.push(XPathParser.OR);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"mod\") {\r\n                            types.push(XPathParser.MOD);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"div\") {\r\n                            types.push(XPathParser.DIV);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                if (c == ':') {\r\n                    if (s.charAt(pos) == '*') {\r\n                        types.push(XPathParser.NCNAMECOLONASTERISK);\r\n                        values.push(name + \":*\");\r\n                        pos++;\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == '_' || Utilities.isLetter(s.charCodeAt(pos))) {\r\n                        name += ':';\r\n                        c = s.charAt(pos++);\r\n                        while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                            name += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                        if (c == '(') {\r\n                            types.push(XPathParser.FUNCTIONNAME);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        types.push(XPathParser.QNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == ':') {\r\n                        types.push(XPathParser.AXISNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                }\r\n                if (c == '(') {\r\n                    if (name == \"comment\" || name == \"text\" || name == \"node\") {\r\n                        types.push(XPathParser.NODETYPE);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (name == \"processing-instruction\") {\r\n                        if (s.charAt(pos) == ')') {\r\n                            types.push(XPathParser.NODETYPE);\r\n                        } else {\r\n                            types.push(XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL);\r\n                        }\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    types.push(XPathParser.FUNCTIONNAME);\r\n                    values.push(name);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.QNAME);\r\n                values.push(name);\r\n                continue;\r\n            }\r\n\r\n            throw new Error(\"Unexpected character \" + c);\r\n        }\r\n        types.push(1);\r\n        values.push(\"[EOF]\");\r\n        return [types, values];\r\n    };\r\n\r\n    XPathParser.SHIFT = 's';\r\n    XPathParser.REDUCE = 'r';\r\n    XPathParser.ACCEPT = 'a';\r\n\r\n    XPathParser.prototype.parse = function (s) {\r\n        var types;\r\n        var values;\r\n        var res = this.tokenize(s);\r\n        if (res == undefined) {\r\n            return undefined;\r\n        }\r\n        types = res[0];\r\n        values = res[1];\r\n        var tokenPos = 0;\r\n        var state = [];\r\n        var tokenType = [];\r\n        var tokenValue = [];\r\n        var s;\r\n        var a;\r\n        var t;\r\n\r\n        state.push(0);\r\n        tokenType.push(1);\r\n        tokenValue.push(\"_S\");\r\n\r\n        a = types[tokenPos];\r\n        t = values[tokenPos++];\r\n        while (1) {\r\n            s = state[state.length - 1];\r\n            switch (XPathParser.actionTable[s].charAt(a - 1)) {\r\n                case XPathParser.SHIFT:\r\n                    tokenType.push(-a);\r\n                    tokenValue.push(t);\r\n                    state.push(XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32);\r\n                    a = types[tokenPos];\r\n                    t = values[tokenPos++];\r\n                    break;\r\n                case XPathParser.REDUCE:\r\n                    var num = XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][1];\r\n                    var rhs = [];\r\n                    for (var i = 0; i < num; i++) {\r\n                        tokenType.pop();\r\n                        rhs.unshift(tokenValue.pop());\r\n                        state.pop();\r\n                    }\r\n                    var s_ = state[state.length - 1];\r\n                    tokenType.push(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0]);\r\n                    if (this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32] == undefined) {\r\n                        tokenValue.push(rhs[0]);\r\n                    } else {\r\n                        tokenValue.push(this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32](rhs));\r\n                    }\r\n                    state.push(XPathParser.gotoTable[s_].charCodeAt(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0] - 2) - 33);\r\n                    break;\r\n                case XPathParser.ACCEPT:\r\n                    return new XPath(tokenValue.pop());\r\n                default:\r\n                    throw new Error(\"XPath parse error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // XPath /////////////////////////////////////////////////////////////////////\r\n\r\n    XPath.prototype = new Object();\r\n    XPath.prototype.constructor = XPath;\r\n    XPath.superclass = Object.prototype;\r\n\r\n    function XPath(e) {\r\n        this.expression = e;\r\n    }\r\n\r\n    XPath.prototype.toString = function () {\r\n        return this.expression.toString();\r\n    };\r\n\r\n    function setIfUnset(obj, prop, value) {\r\n        if (!(prop in obj)) {\r\n            obj[prop] = value;\r\n        }\r\n    }\r\n\r\n    XPath.prototype.evaluate = function (c) {\r\n        c.contextNode = c.expressionContextNode;\r\n        c.contextSize = 1;\r\n        c.contextPosition = 1;\r\n\r\n        // [2017-11-25] Removed usage of .implementation.hasFeature() since it does\r\n        //              not reliably detect HTML DOMs (always returns false in xmldom and true in browsers)\r\n        if (c.isHtml) {\r\n            setIfUnset(c, 'caseInsensitive', true);\r\n            setIfUnset(c, 'allowAnyNamespaceForNoPrefix', true);\r\n        }\r\n\r\n        setIfUnset(c, 'caseInsensitive', false);\r\n\r\n        return this.expression.evaluate(c);\r\n    };\r\n\r\n    XPath.XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\r\n    XPath.XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\";\r\n\r\n    // Expression ////////////////////////////////////////////////////////////////\r\n\r\n    Expression.prototype = new Object();\r\n    Expression.prototype.constructor = Expression;\r\n    Expression.superclass = Object.prototype;\r\n\r\n    function Expression() {\r\n    }\r\n\r\n    Expression.prototype.init = function () {\r\n    };\r\n\r\n    Expression.prototype.toString = function () {\r\n        return \"<Expression>\";\r\n    };\r\n\r\n    Expression.prototype.evaluate = function (c) {\r\n        throw new Error(\"Could not evaluate expression.\");\r\n    };\r\n\r\n    // UnaryOperation ////////////////////////////////////////////////////////////\r\n\r\n    UnaryOperation.prototype = new Expression();\r\n    UnaryOperation.prototype.constructor = UnaryOperation;\r\n    UnaryOperation.superclass = Expression.prototype;\r\n\r\n    function UnaryOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryOperation.prototype.init = function (rhs) {\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // UnaryMinusOperation ///////////////////////////////////////////////////////\r\n\r\n    UnaryMinusOperation.prototype = new UnaryOperation();\r\n    UnaryMinusOperation.prototype.constructor = UnaryMinusOperation;\r\n    UnaryMinusOperation.superclass = UnaryOperation.prototype;\r\n\r\n    function UnaryMinusOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryMinusOperation.prototype.init = function (rhs) {\r\n        UnaryMinusOperation.superclass.init.call(this, rhs);\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.evaluate = function (c) {\r\n        return this.rhs.evaluate(c).number().negate();\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.toString = function () {\r\n        return \"-\" + this.rhs.toString();\r\n    };\r\n\r\n    // BinaryOperation ///////////////////////////////////////////////////////////\r\n\r\n    BinaryOperation.prototype = new Expression();\r\n    BinaryOperation.prototype.constructor = BinaryOperation;\r\n    BinaryOperation.superclass = Expression.prototype;\r\n\r\n    function BinaryOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BinaryOperation.prototype.init = function (lhs, rhs) {\r\n        this.lhs = lhs;\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // OrOperation ///////////////////////////////////////////////////////////////\r\n\r\n    OrOperation.prototype = new BinaryOperation();\r\n    OrOperation.prototype.constructor = OrOperation;\r\n    OrOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function OrOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    OrOperation.prototype.init = function (lhs, rhs) {\r\n        OrOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    OrOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" or \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    OrOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // AndOperation //////////////////////////////////////////////////////////////\r\n\r\n    AndOperation.prototype = new BinaryOperation();\r\n    AndOperation.prototype.constructor = AndOperation;\r\n    AndOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function AndOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    AndOperation.prototype.init = function (lhs, rhs) {\r\n        AndOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    AndOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" and \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    AndOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (!b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // EqualsOperation ///////////////////////////////////////////////////////////\r\n\r\n    EqualsOperation.prototype = new BinaryOperation();\r\n    EqualsOperation.prototype.constructor = EqualsOperation;\r\n    EqualsOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function EqualsOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    EqualsOperation.prototype.init = function (lhs, rhs) {\r\n        EqualsOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    EqualsOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" = \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    EqualsOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).equals(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // NotEqualOperation /////////////////////////////////////////////////////////\r\n\r\n    NotEqualOperation.prototype = new BinaryOperation();\r\n    NotEqualOperation.prototype.constructor = NotEqualOperation;\r\n    NotEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function NotEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    NotEqualOperation.prototype.init = function (lhs, rhs) {\r\n        NotEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    NotEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" != \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    NotEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).notequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // LessThanOperation /////////////////////////////////////////////////////////\r\n\r\n    LessThanOperation.prototype = new BinaryOperation();\r\n    LessThanOperation.prototype.constructor = LessThanOperation;\r\n    LessThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" < \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOperation //////////////////////////////////////////////////////\r\n\r\n    GreaterThanOperation.prototype = new BinaryOperation();\r\n    GreaterThanOperation.prototype.constructor = GreaterThanOperation;\r\n    GreaterThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" > \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // LessThanOrEqualOperation //////////////////////////////////////////////////\r\n\r\n    LessThanOrEqualOperation.prototype = new BinaryOperation();\r\n    LessThanOrEqualOperation.prototype.constructor = LessThanOrEqualOperation;\r\n    LessThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" <= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOrEqualOperation ///////////////////////////////////////////////\r\n\r\n    GreaterThanOrEqualOperation.prototype = new BinaryOperation();\r\n    GreaterThanOrEqualOperation.prototype.constructor = GreaterThanOrEqualOperation;\r\n    GreaterThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" >= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // PlusOperation /////////////////////////////////////////////////////////////\r\n\r\n    PlusOperation.prototype = new BinaryOperation();\r\n    PlusOperation.prototype.constructor = PlusOperation;\r\n    PlusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function PlusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    PlusOperation.prototype.init = function (lhs, rhs) {\r\n        PlusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    PlusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().plus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    PlusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" + \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MinusOperation ////////////////////////////////////////////////////////////\r\n\r\n    MinusOperation.prototype = new BinaryOperation();\r\n    MinusOperation.prototype.constructor = MinusOperation;\r\n    MinusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MinusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MinusOperation.prototype.init = function (lhs, rhs) {\r\n        MinusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MinusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().minus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MinusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" - \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MultiplyOperation /////////////////////////////////////////////////////////\r\n\r\n    MultiplyOperation.prototype = new BinaryOperation();\r\n    MultiplyOperation.prototype.constructor = MultiplyOperation;\r\n    MultiplyOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MultiplyOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MultiplyOperation.prototype.init = function (lhs, rhs) {\r\n        MultiplyOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MultiplyOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().multiply(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MultiplyOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" * \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // DivOperation //////////////////////////////////////////////////////////////\r\n\r\n    DivOperation.prototype = new BinaryOperation();\r\n    DivOperation.prototype.constructor = DivOperation;\r\n    DivOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function DivOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    DivOperation.prototype.init = function (lhs, rhs) {\r\n        DivOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    DivOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().div(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    DivOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" div \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // ModOperation //////////////////////////////////////////////////////////////\r\n\r\n    ModOperation.prototype = new BinaryOperation();\r\n    ModOperation.prototype.constructor = ModOperation;\r\n    ModOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function ModOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    ModOperation.prototype.init = function (lhs, rhs) {\r\n        ModOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    ModOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().mod(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    ModOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" mod \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // BarOperation //////////////////////////////////////////////////////////////\r\n\r\n    BarOperation.prototype = new BinaryOperation();\r\n    BarOperation.prototype.constructor = BarOperation;\r\n    BarOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function BarOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BarOperation.prototype.init = function (lhs, rhs) {\r\n        BarOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    BarOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).nodeset().union(this.rhs.evaluate(c).nodeset());\r\n    };\r\n\r\n    BarOperation.prototype.toString = function () {\r\n        return map(toString, [this.lhs, this.rhs]).join(' | ');\r\n    };\r\n\r\n    // PathExpr //////////////////////////////////////////////////////////////////\r\n\r\n    PathExpr.prototype = new Expression();\r\n    PathExpr.prototype.constructor = PathExpr;\r\n    PathExpr.superclass = Expression.prototype;\r\n\r\n    function PathExpr(filter, filterPreds, locpath) {\r\n        if (arguments.length > 0) {\r\n            this.init(filter, filterPreds, locpath);\r\n        }\r\n    }\r\n\r\n    PathExpr.prototype.init = function (filter, filterPreds, locpath) {\r\n        PathExpr.superclass.init.call(this);\r\n        this.filter = filter;\r\n        this.filterPredicates = filterPreds;\r\n        this.locationPath = locpath;\r\n    };\r\n\r\n    /**\r\n     * Returns the topmost node of the tree containing node\r\n     */\r\n    function findRoot(node) {\r\n        while (node && node.parentNode) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    PathExpr.applyPredicates = function (predicates, c, nodes) {\r\n        if (predicates.length === 0) {\r\n            return nodes;\r\n        }\r\n\r\n        var ctx = c.extend({});\r\n\r\n        return reduce(\r\n            function (inNodes, pred) {\r\n                ctx.contextSize = inNodes.length;\r\n\r\n                return filter(\r\n                    function (node, i) {\r\n                        ctx.contextNode = node;\r\n                        ctx.contextPosition = i + 1;\r\n\r\n                        return PathExpr.predicateMatches(pred, ctx);\r\n                    },\r\n                    inNodes\r\n                );\r\n            },\r\n            nodes,\r\n            predicates\r\n        );\r\n    };\r\n\r\n    PathExpr.getRoot = function (xpc, nodes) {\r\n        var firstNode = nodes[0];\r\n\r\n        if (firstNode.nodeType === 9 /*Node.DOCUMENT_NODE*/) {\r\n            return firstNode;\r\n        }\r\n\r\n        if (xpc.virtualRoot) {\r\n            return xpc.virtualRoot;\r\n        }\r\n\r\n        var ownerDoc = firstNode.ownerDocument;\r\n\r\n        if (ownerDoc) {\r\n            return ownerDoc;\r\n        }\r\n\r\n        // IE 5.5 doesn't have ownerDocument?\r\n        var n = firstNode;\r\n        while (n.parentNode != null) {\r\n            n = n.parentNode;\r\n        }\r\n        return n;\r\n    }\r\n\r\n    PathExpr.applyStep = function (step, xpc, node) {\r\n        var self = this;\r\n        var newNodes = [];\r\n        xpc.contextNode = node;\r\n\r\n        switch (step.axis) {\r\n            case Step.ANCESTOR:\r\n                // look at all the ancestor nodes\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var m;\r\n                if (xpc.contextNode.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n                    m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                } else {\r\n                    m = xpc.contextNode.parentNode;\r\n                }\r\n                while (m != null) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                    m = m.parentNode;\r\n                }\r\n                break;\r\n\r\n            case Step.ANCESTORORSELF:\r\n                // look at all the ancestor nodes and the current node\r\n                for (var m = xpc.contextNode; m != null; m = m.nodeType == 2 /*Node.ATTRIBUTE_NODE*/ ? PathExpr.getOwnerElement(m) : m.parentNode) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.ATTRIBUTE:\r\n                // look at the attributes\r\n                var nnm = xpc.contextNode.attributes;\r\n                if (nnm != null) {\r\n                    for (var k = 0; k < nnm.length; k++) {\r\n                        var m = nnm.item(k);\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.CHILD:\r\n                // look at all child elements\r\n                for (var m = xpc.contextNode.firstChild; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANT:\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANTORSELF:\r\n                // look at self\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.FOLLOWING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var st = [];\r\n                if (xpc.contextNode.firstChild != null) {\r\n                    st.unshift(xpc.contextNode.firstChild);\r\n                } else {\r\n                    st.unshift(xpc.contextNode.nextSibling);\r\n                }\r\n                for (var m = xpc.contextNode.parentNode; m != null && m.nodeType != 9 /*Node.DOCUMENT_NODE*/ && m !== xpc.virtualRoot; m = m.parentNode) {\r\n                    st.unshift(m.nextSibling);\r\n                }\r\n                do {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                } while (st.length > 0);\r\n                break;\r\n\r\n            case Step.FOLLOWINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.nextSibling; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.NAMESPACE:\r\n                var n = {};\r\n                if (xpc.contextNode.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n                    n[\"xml\"] = XPath.XML_NAMESPACE_URI;\r\n                    n[\"xmlns\"] = XPath.XMLNS_NAMESPACE_URI;\r\n                    for (var m = xpc.contextNode; m != null && m.nodeType == 1 /*Node.ELEMENT_NODE*/; m = m.parentNode) {\r\n                        for (var k = 0; k < m.attributes.length; k++) {\r\n                            var attr = m.attributes.item(k);\r\n                            var nm = String(attr.name);\r\n                            if (nm == \"xmlns\") {\r\n                                if (n[\"\"] == undefined) {\r\n                                    n[\"\"] = attr.value;\r\n                                }\r\n                            } else if (nm.length > 6 && nm.substring(0, 6) == \"xmlns:\") {\r\n                                var pre = nm.substring(6, nm.length);\r\n                                if (n[pre] == undefined) {\r\n                                    n[pre] = attr.value;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    for (var pre in n) {\r\n                        var nsn = new XPathNamespace(pre, n[pre], xpc.contextNode);\r\n                        if (step.nodeTest.matches(nsn, xpc)) {\r\n                            newNodes.push(nsn);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PARENT:\r\n                m = null;\r\n                if (xpc.contextNode !== xpc.virtualRoot) {\r\n                    if (xpc.contextNode.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n                        m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                    } else {\r\n                        m = xpc.contextNode.parentNode;\r\n                    }\r\n                }\r\n                if (m != null && step.nodeTest.matches(m, xpc)) {\r\n                    newNodes.push(m);\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDING:\r\n                var st;\r\n                if (xpc.virtualRoot != null) {\r\n                    st = [xpc.virtualRoot];\r\n                } else {\r\n                    // cannot rely on .ownerDocument because the node may be in a document fragment\r\n                    st = [findRoot(xpc.contextNode)];\r\n                }\r\n                outer: while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (m == xpc.contextNode) {\r\n                            break outer;\r\n                        }\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.unshift(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.previousSibling; m != null; m = m.previousSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.SELF:\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                break;\r\n\r\n            default:\r\n        }\r\n\r\n        return newNodes;\r\n    };\r\n\r\n    function applyStepWithPredicates(step, xpc, node) {\r\n        return PathExpr.applyPredicates(\r\n            step.predicates,\r\n            xpc,\r\n            PathExpr.applyStep(step, xpc, node)\r\n        );\r\n    }\r\n\r\n    function applyStepToNodes(context, nodes, step) {\r\n        return flatten(\r\n            map(\r\n                applyStepWithPredicates.bind(null, step, context),\r\n                nodes\r\n            )\r\n        );\r\n    }\r\n\r\n    PathExpr.applySteps = function (steps, xpc, nodes) {\r\n        return reduce(\r\n            applyStepToNodes.bind(null, xpc),\r\n            nodes,\r\n            steps\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.applyFilter = function (c, xpc) {\r\n        if (!this.filter) {\r\n            return { nodes: [c.contextNode] };\r\n        }\r\n\r\n        var ns = this.filter.evaluate(c);\r\n\r\n        if (!Utilities.instance_of(ns, XNodeSet)) {\r\n            if (this.filterPredicates != null && this.filterPredicates.length > 0 || this.locationPath != null) {\r\n                throw new Error(\"Path expression filter must evaluate to a nodeset if predicates or location path are used\");\r\n            }\r\n\r\n            return { nonNodes: ns };\r\n        }\r\n\r\n        return {\r\n            nodes: PathExpr.applyPredicates(this.filterPredicates || [], xpc, ns.toUnsortedArray())\r\n        };\r\n    };\r\n\r\n    PathExpr.applyLocationPath = function (locationPath, xpc, nodes) {\r\n        if (!locationPath) {\r\n            return nodes;\r\n        }\r\n\r\n        var startNodes = locationPath.absolute ? [PathExpr.getRoot(xpc, nodes)] : nodes;\r\n\r\n        return PathExpr.applySteps(locationPath.steps, xpc, startNodes);\r\n    };\r\n\r\n    PathExpr.prototype.evaluate = function (c) {\r\n        var xpc = assign(new XPathContext(), c);\r\n\r\n        var filterResult = this.applyFilter(c, xpc);\r\n\r\n        if ('nonNodes' in filterResult) {\r\n            return filterResult.nonNodes;\r\n        }\r\n\r\n        var ns = new XNodeSet();\r\n        ns.addArray(PathExpr.applyLocationPath(this.locationPath, xpc, filterResult.nodes));\r\n        return ns;\r\n    };\r\n\r\n    PathExpr.predicateMatches = function (pred, c) {\r\n        var res = pred.evaluate(c);\r\n\r\n        return Utilities.instance_of(res, XNumber)\r\n            ? c.contextPosition === res.numberValue()\r\n            : res.booleanValue();\r\n    };\r\n\r\n    PathExpr.predicateString = function (predicate) {\r\n        return wrap('[', ']', predicate.toString());\r\n    }\r\n\r\n    PathExpr.predicatesString = function (predicates) {\r\n        return join(\r\n            '',\r\n            map(PathExpr.predicateString, predicates)\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.toString = function () {\r\n        if (this.filter != undefined) {\r\n            var filterStr = toString(this.filter);\r\n\r\n            if (Utilities.instance_of(this.filter, XString)) {\r\n                return wrap(\"'\", \"'\", filterStr);\r\n            }\r\n            if (this.filterPredicates != undefined && this.filterPredicates.length) {\r\n                return wrap('(', ')', filterStr) +\r\n                    PathExpr.predicatesString(this.filterPredicates);\r\n            }\r\n            if (this.locationPath != undefined) {\r\n                return filterStr +\r\n                    (this.locationPath.absolute ? '' : '/') +\r\n                    toString(this.locationPath);\r\n            }\r\n\r\n            return filterStr;\r\n        }\r\n\r\n        return toString(this.locationPath);\r\n    };\r\n\r\n    PathExpr.getOwnerElement = function (n) {\r\n        // DOM 2 has ownerElement\r\n        if (n.ownerElement) {\r\n            return n.ownerElement;\r\n        }\r\n        // DOM 1 Internet Explorer can use selectSingleNode (ironically)\r\n        try {\r\n            if (n.selectSingleNode) {\r\n                return n.selectSingleNode(\"..\");\r\n            }\r\n        } catch (e) {\r\n        }\r\n        // Other DOM 1 implementations must use this egregious search\r\n        var doc = n.nodeType == 9 /*Node.DOCUMENT_NODE*/\r\n            ? n\r\n            : n.ownerDocument;\r\n        var elts = doc.getElementsByTagName(\"*\");\r\n        for (var i = 0; i < elts.length; i++) {\r\n            var elt = elts.item(i);\r\n            var nnm = elt.attributes;\r\n            for (var j = 0; j < nnm.length; j++) {\r\n                var an = nnm.item(j);\r\n                if (an === n) {\r\n                    return elt;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // LocationPath //////////////////////////////////////////////////////////////\r\n\r\n    LocationPath.prototype = new Object();\r\n    LocationPath.prototype.constructor = LocationPath;\r\n    LocationPath.superclass = Object.prototype;\r\n\r\n    function LocationPath(abs, steps) {\r\n        if (arguments.length > 0) {\r\n            this.init(abs, steps);\r\n        }\r\n    }\r\n\r\n    LocationPath.prototype.init = function (abs, steps) {\r\n        this.absolute = abs;\r\n        this.steps = steps;\r\n    };\r\n\r\n    LocationPath.prototype.toString = function () {\r\n        return (\r\n            (this.absolute ? '/' : '') +\r\n            map(toString, this.steps).join('/')\r\n        );\r\n    };\r\n\r\n    // Step //////////////////////////////////////////////////////////////////////\r\n\r\n    Step.prototype = new Object();\r\n    Step.prototype.constructor = Step;\r\n    Step.superclass = Object.prototype;\r\n\r\n    function Step(axis, nodetest, preds) {\r\n        if (arguments.length > 0) {\r\n            this.init(axis, nodetest, preds);\r\n        }\r\n    }\r\n\r\n    Step.prototype.init = function (axis, nodetest, preds) {\r\n        this.axis = axis;\r\n        this.nodeTest = nodetest;\r\n        this.predicates = preds;\r\n    };\r\n\r\n    Step.prototype.toString = function () {\r\n        return Step.STEPNAMES[this.axis] +\r\n            \"::\" +\r\n            this.nodeTest.toString() +\r\n            PathExpr.predicatesString(this.predicates);\r\n    };\r\n\r\n\r\n    Step.ANCESTOR = 0;\r\n    Step.ANCESTORORSELF = 1;\r\n    Step.ATTRIBUTE = 2;\r\n    Step.CHILD = 3;\r\n    Step.DESCENDANT = 4;\r\n    Step.DESCENDANTORSELF = 5;\r\n    Step.FOLLOWING = 6;\r\n    Step.FOLLOWINGSIBLING = 7;\r\n    Step.NAMESPACE = 8;\r\n    Step.PARENT = 9;\r\n    Step.PRECEDING = 10;\r\n    Step.PRECEDINGSIBLING = 11;\r\n    Step.SELF = 12;\r\n\r\n    Step.STEPNAMES = reduce(function (acc, x) { return acc[x[0]] = x[1], acc; }, {}, [\r\n        [Step.ANCESTOR, 'ancestor'],\r\n        [Step.ANCESTORORSELF, 'ancestor-or-self'],\r\n        [Step.ATTRIBUTE, 'attribute'],\r\n        [Step.CHILD, 'child'],\r\n        [Step.DESCENDANT, 'descendant'],\r\n        [Step.DESCENDANTORSELF, 'descendant-or-self'],\r\n        [Step.FOLLOWING, 'following'],\r\n        [Step.FOLLOWINGSIBLING, 'following-sibling'],\r\n        [Step.NAMESPACE, 'namespace'],\r\n        [Step.PARENT, 'parent'],\r\n        [Step.PRECEDING, 'preceding'],\r\n        [Step.PRECEDINGSIBLING, 'preceding-sibling'],\r\n        [Step.SELF, 'self']\r\n    ]);\r\n\r\n    // NodeTest //////////////////////////////////////////////////////////////////\r\n\r\n    NodeTest.prototype = new Object();\r\n    NodeTest.prototype.constructor = NodeTest;\r\n    NodeTest.superclass = Object.prototype;\r\n\r\n    function NodeTest(type, value) {\r\n        if (arguments.length > 0) {\r\n            this.init(type, value);\r\n        }\r\n    }\r\n\r\n    NodeTest.prototype.init = function (type, value) {\r\n        this.type = type;\r\n        this.value = value;\r\n    };\r\n\r\n    NodeTest.prototype.toString = function () {\r\n        return \"<unknown nodetest type>\";\r\n    };\r\n\r\n    NodeTest.prototype.matches = function (n, xpc) {\r\n        console.warn('unknown node test type');\r\n    };\r\n\r\n    NodeTest.NAMETESTANY = 0;\r\n    NodeTest.NAMETESTPREFIXANY = 1;\r\n    NodeTest.NAMETESTQNAME = 2;\r\n    NodeTest.COMMENT = 3;\r\n    NodeTest.TEXT = 4;\r\n    NodeTest.PI = 5;\r\n    NodeTest.NODE = 6;\r\n\r\n    NodeTest.isNodeType = function (types) {\r\n        return function (node) {\r\n            return includes(types, node.nodeType);\r\n        };\r\n    };\r\n\r\n    NodeTest.makeNodeTestType = function (type, members, ctor) {\r\n        var newType = ctor || function () { };\r\n\r\n        newType.prototype = new NodeTest(type);\r\n        newType.prototype.constructor = newType;\r\n\r\n        assign(newType.prototype, members);\r\n\r\n        return newType;\r\n    };\r\n    // create invariant node test for certain node types\r\n    NodeTest.makeNodeTypeTest = function (type, nodeTypes, stringVal) {\r\n        return new (NodeTest.makeNodeTestType(type, {\r\n            matches: NodeTest.isNodeType(nodeTypes),\r\n            toString: always(stringVal)\r\n        }))();\r\n    };\r\n\r\n    NodeTest.hasPrefix = function (node) {\r\n        return node.prefix || (node.nodeName || node.tagName).indexOf(':') !== -1;\r\n    };\r\n\r\n    NodeTest.isElementOrAttribute = NodeTest.isNodeType([1, 2]);\r\n    NodeTest.nameSpaceMatches = function (prefix, xpc, n) {\r\n        var nNamespace = (n.namespaceURI || '');\r\n\r\n        if (!prefix) {\r\n            return !nNamespace || (xpc.allowAnyNamespaceForNoPrefix && !NodeTest.hasPrefix(n));\r\n        }\r\n\r\n        var ns = xpc.namespaceResolver.getNamespace(prefix, xpc.expressionContextNode);\r\n\r\n        if (ns == null) {\r\n            throw new Error(\"Cannot resolve QName \" + prefix);\r\n        }\r\n\r\n        return ns === nNamespace;\r\n    };\r\n    NodeTest.localNameMatches = function (localName, xpc, n) {\r\n        var nLocalName = (n.localName || n.nodeName);\r\n\r\n        return xpc.caseInsensitive\r\n            ? localName.toLowerCase() === nLocalName.toLowerCase()\r\n            : localName === nLocalName;\r\n    };\r\n\r\n    NodeTest.NameTestPrefixAny = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTPREFIXANY,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isElementOrAttribute(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.prefix + \":*\";\r\n            }\r\n        },\r\n        function NameTestPrefixAny(prefix) { this.prefix = prefix; }\r\n    );\r\n\r\n    NodeTest.NameTestQName = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTQNAME,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isNodeType([1, 2, XPathNamespace.XPATH_NAMESPACE_NODE])(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n) &&\r\n                    NodeTest.localNameMatches(this.localName, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.name;\r\n            }\r\n        },\r\n        function NameTestQName(name) {\r\n            var nameParts = name.split(':');\r\n\r\n            this.name = name;\r\n            this.prefix = nameParts.length > 1 ? nameParts[0] : null;\r\n            this.localName = nameParts[nameParts.length > 1 ? 1 : 0];\r\n        }\r\n    );\r\n\r\n    NodeTest.PITest = NodeTest.makeNodeTestType(NodeTest.PI, {\r\n        matches: function (n, xpc) {\r\n            return NodeTest.isNodeType([7])(n) && (n.target || n.nodeName) === this.name;\r\n        },\r\n        toString: function () {\r\n            return wrap('processing-instruction(\"', '\")', this.name);\r\n        }\r\n    }, function (name) { this.name = name; })\r\n\r\n    // singletons\r\n\r\n    // elements, attributes, namespaces\r\n    NodeTest.nameTestAny = NodeTest.makeNodeTypeTest(NodeTest.NAMETESTANY, [1, 2, XPathNamespace.XPATH_NAMESPACE_NODE], '*');\r\n    // text, cdata\r\n    NodeTest.textTest = NodeTest.makeNodeTypeTest(NodeTest.TEXT, [3, 4], 'text()');\r\n    NodeTest.commentTest = NodeTest.makeNodeTypeTest(NodeTest.COMMENT, [8], 'comment()');\r\n    // elements, attributes, text, cdata, PIs, comments, document nodes\r\n    NodeTest.nodeTest = NodeTest.makeNodeTypeTest(NodeTest.NODE, [1, 2, 3, 4, 7, 8, 9], 'node()');\r\n    NodeTest.anyPiTest = NodeTest.makeNodeTypeTest(NodeTest.PI, [7], 'processing-instruction()');\r\n\r\n    // VariableReference /////////////////////////////////////////////////////////\r\n\r\n    VariableReference.prototype = new Expression();\r\n    VariableReference.prototype.constructor = VariableReference;\r\n    VariableReference.superclass = Expression.prototype;\r\n\r\n    function VariableReference(v) {\r\n        if (arguments.length > 0) {\r\n            this.init(v);\r\n        }\r\n    }\r\n\r\n    VariableReference.prototype.init = function (v) {\r\n        this.variable = v;\r\n    };\r\n\r\n    VariableReference.prototype.toString = function () {\r\n        return \"$\" + this.variable;\r\n    };\r\n\r\n    VariableReference.prototype.evaluate = function (c) {\r\n        var parts = Utilities.resolveQName(this.variable, c.namespaceResolver, c.contextNode, false);\r\n\r\n        if (parts[0] == null) {\r\n            throw new Error(\"Cannot resolve QName \" + fn);\r\n        }\r\n        var result = c.variableResolver.getVariable(parts[1], parts[0]);\r\n        if (!result) {\r\n            throw XPathException.fromMessage(\"Undeclared variable: \" + this.toString());\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // FunctionCall //////////////////////////////////////////////////////////////\r\n\r\n    FunctionCall.prototype = new Expression();\r\n    FunctionCall.prototype.constructor = FunctionCall;\r\n    FunctionCall.superclass = Expression.prototype;\r\n\r\n    function FunctionCall(fn, args) {\r\n        if (arguments.length > 0) {\r\n            this.init(fn, args);\r\n        }\r\n    }\r\n\r\n    FunctionCall.prototype.init = function (fn, args) {\r\n        this.functionName = fn;\r\n        this.arguments = args;\r\n    };\r\n\r\n    FunctionCall.prototype.toString = function () {\r\n        var s = this.functionName + \"(\";\r\n        for (var i = 0; i < this.arguments.length; i++) {\r\n            if (i > 0) {\r\n                s += \", \";\r\n            }\r\n            s += this.arguments[i].toString();\r\n        }\r\n        return s + \")\";\r\n    };\r\n\r\n    FunctionCall.prototype.evaluate = function (c) {\r\n        var f = FunctionResolver.getFunctionFromContext(this.functionName, c);\r\n\r\n        if (!f) {\r\n            throw new Error(\"Unknown function \" + this.functionName);\r\n        }\r\n\r\n        var a = [c].concat(this.arguments);\r\n        return f.apply(c.functionResolver.thisArg, a);\r\n    };\r\n\r\n    // Operators /////////////////////////////////////////////////////////////////\r\n\r\n    var Operators = new Object();\r\n\r\n    Operators.equals = function (l, r) {\r\n        return l.equals(r);\r\n    };\r\n\r\n    Operators.notequal = function (l, r) {\r\n        return l.notequal(r);\r\n    };\r\n\r\n    Operators.lessthan = function (l, r) {\r\n        return l.lessthan(r);\r\n    };\r\n\r\n    Operators.greaterthan = function (l, r) {\r\n        return l.greaterthan(r);\r\n    };\r\n\r\n    Operators.lessthanorequal = function (l, r) {\r\n        return l.lessthanorequal(r);\r\n    };\r\n\r\n    Operators.greaterthanorequal = function (l, r) {\r\n        return l.greaterthanorequal(r);\r\n    };\r\n\r\n    // XString ///////////////////////////////////////////////////////////////////\r\n\r\n    XString.prototype = new Expression();\r\n    XString.prototype.constructor = XString;\r\n    XString.superclass = Expression.prototype;\r\n\r\n    function XString(s) {\r\n        if (arguments.length > 0) {\r\n            this.init(s);\r\n        }\r\n    }\r\n\r\n    XString.prototype.init = function (s) {\r\n        this.str = String(s);\r\n    };\r\n\r\n    XString.prototype.toString = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.string = function () {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.number = function () {\r\n        return new XNumber(this.str);\r\n    };\r\n\r\n    XString.prototype.bool = function () {\r\n        return new XBoolean(this.str);\r\n    };\r\n\r\n    XString.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert string to nodeset\");\r\n    };\r\n\r\n    XString.prototype.stringValue = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XString.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XString.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.str == r.str);\r\n    };\r\n\r\n    XString.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.str != r.str);\r\n    };\r\n\r\n    XString.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XString.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XString.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XString.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    // XNumber ///////////////////////////////////////////////////////////////////\r\n\r\n    XNumber.prototype = new Expression();\r\n    XNumber.prototype.constructor = XNumber;\r\n    XNumber.superclass = Expression.prototype;\r\n\r\n    function XNumber(n) {\r\n        if (arguments.length > 0) {\r\n            this.init(n);\r\n        }\r\n    }\r\n\r\n    XNumber.prototype.init = function (n) {\r\n        this.num = typeof n === \"string\" ? this.parse(n) : Number(n);\r\n    };\r\n\r\n    XNumber.prototype.numberFormat = /^\\s*-?[0-9]*\\.?[0-9]+\\s*$/;\r\n\r\n    XNumber.prototype.parse = function (s) {\r\n        // XPath representation of numbers is more restrictive than what Number() or parseFloat() allow\r\n        return this.numberFormat.test(s) ? parseFloat(s) : Number.NaN;\r\n    };\r\n\r\n    function padSmallNumber(numberStr) {\r\n        var parts = numberStr.split('e-');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n\r\n        for (var i = 0; i < exponent - 1; i += 1) {\r\n            base = '0' + base;\r\n        }\r\n\r\n        return '0.' + base;\r\n    }\r\n\r\n    function padLargeNumber(numberStr) {\r\n        var parts = numberStr.split('e');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n        var zerosToAppend = exponent + 1 - base.length;\r\n\r\n        for (var i = 0; i < zerosToAppend; i += 1) {\r\n            base += '0';\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    XNumber.prototype.toString = function () {\r\n        var strValue = this.num.toString();\r\n\r\n        if (strValue.indexOf('e-') !== -1) {\r\n            return padSmallNumber(strValue);\r\n        }\r\n\r\n        if (strValue.indexOf('e') !== -1) {\r\n            return padLargeNumber(strValue);\r\n        }\r\n\r\n        return strValue;\r\n    };\r\n\r\n    XNumber.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.string = function () {\r\n\r\n\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNumber.prototype.number = function () {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.bool = function () {\r\n        return new XBoolean(this.num);\r\n    };\r\n\r\n    XNumber.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert number to nodeset\");\r\n    };\r\n\r\n    XNumber.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XNumber.prototype.numberValue = function () {\r\n        return this.num;\r\n    };\r\n\r\n    XNumber.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XNumber.prototype.negate = function () {\r\n        return new XNumber(-this.num);\r\n    };\r\n\r\n    XNumber.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.equals(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.num == r.num);\r\n    };\r\n\r\n    XNumber.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.notequal(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.num != r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthan(r.number());\r\n        }\r\n        return new XBoolean(this.num < r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthan(r.number());\r\n        }\r\n        return new XBoolean(this.num > r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num <= r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num >= r.num);\r\n    };\r\n\r\n    XNumber.prototype.plus = function (r) {\r\n        return new XNumber(this.num + r.num);\r\n    };\r\n\r\n    XNumber.prototype.minus = function (r) {\r\n        return new XNumber(this.num - r.num);\r\n    };\r\n\r\n    XNumber.prototype.multiply = function (r) {\r\n        return new XNumber(this.num * r.num);\r\n    };\r\n\r\n    XNumber.prototype.div = function (r) {\r\n        return new XNumber(this.num / r.num);\r\n    };\r\n\r\n    XNumber.prototype.mod = function (r) {\r\n        return new XNumber(this.num % r.num);\r\n    };\r\n\r\n    // XBoolean //////////////////////////////////////////////////////////////////\r\n\r\n    XBoolean.prototype = new Expression();\r\n    XBoolean.prototype.constructor = XBoolean;\r\n    XBoolean.superclass = Expression.prototype;\r\n\r\n    function XBoolean(b) {\r\n        if (arguments.length > 0) {\r\n            this.init(b);\r\n        }\r\n    }\r\n\r\n    XBoolean.prototype.init = function (b) {\r\n        this.b = Boolean(b);\r\n    };\r\n\r\n    XBoolean.prototype.toString = function () {\r\n        return this.b.toString();\r\n    };\r\n\r\n    XBoolean.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.string = function () {\r\n        return new XString(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.number = function () {\r\n        return new XNumber(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.bool = function () {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert boolean to nodeset\");\r\n    };\r\n\r\n    XBoolean.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XBoolean.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XBoolean.prototype.booleanValue = function () {\r\n        return this.b;\r\n    };\r\n\r\n    XBoolean.prototype.not = function () {\r\n        return new XBoolean(!this.b);\r\n    };\r\n\r\n    XBoolean.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.equals(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.b == r.b);\r\n    };\r\n\r\n    XBoolean.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.notequal(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.b != r.b);\r\n    };\r\n\r\n    XBoolean.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    XBoolean.true_ = new XBoolean(true);\r\n    XBoolean.false_ = new XBoolean(false);\r\n\r\n    // AVLTree ///////////////////////////////////////////////////////////////////\r\n\r\n    AVLTree.prototype = new Object();\r\n    AVLTree.prototype.constructor = AVLTree;\r\n    AVLTree.superclass = Object.prototype;\r\n\r\n    function AVLTree(n) {\r\n        this.init(n);\r\n    }\r\n\r\n    AVLTree.prototype.init = function (n) {\r\n        this.left = null;\r\n        this.right = null;\r\n        this.node = n;\r\n        this.depth = 1;\r\n    };\r\n\r\n    AVLTree.prototype.balance = function () {\r\n        var ldepth = this.left == null ? 0 : this.left.depth;\r\n        var rdepth = this.right == null ? 0 : this.right.depth;\r\n\r\n        if (ldepth > rdepth + 1) {\r\n            // LR or LL rotation\r\n            var lldepth = this.left.left == null ? 0 : this.left.left.depth;\r\n            var lrdepth = this.left.right == null ? 0 : this.left.right.depth;\r\n\r\n            if (lldepth < lrdepth) {\r\n                // LR rotation consists of a RR rotation of the left child\r\n                this.left.rotateRR();\r\n                // plus a LL rotation of this node, which happens anyway\r\n            }\r\n            this.rotateLL();\r\n        } else if (ldepth + 1 < rdepth) {\r\n            // RR or RL rorarion\r\n            var rrdepth = this.right.right == null ? 0 : this.right.right.depth;\r\n            var rldepth = this.right.left == null ? 0 : this.right.left.depth;\r\n\r\n            if (rldepth > rrdepth) {\r\n                // RR rotation consists of a LL rotation of the right child\r\n                this.right.rotateLL();\r\n                // plus a RR rotation of this node, which happens anyway\r\n            }\r\n            this.rotateRR();\r\n        }\r\n    };\r\n\r\n    AVLTree.prototype.rotateLL = function () {\r\n        // the left side is too long => rotate from the left (_not_ leftwards)\r\n        var nodeBefore = this.node;\r\n        var rightBefore = this.right;\r\n        this.node = this.left.node;\r\n        this.right = this.left;\r\n        this.left = this.left.left;\r\n        this.right.left = this.right.right;\r\n        this.right.right = rightBefore;\r\n        this.right.node = nodeBefore;\r\n        this.right.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.rotateRR = function () {\r\n        // the right side is too long => rotate from the right (_not_ rightwards)\r\n        var nodeBefore = this.node;\r\n        var leftBefore = this.left;\r\n        this.node = this.right.node;\r\n        this.left = this.right;\r\n        this.right = this.right.right;\r\n        this.left.right = this.left.left;\r\n        this.left.left = leftBefore;\r\n        this.left.node = nodeBefore;\r\n        this.left.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.updateInNewLocation = function () {\r\n        this.getDepthFromChildren();\r\n    };\r\n\r\n    AVLTree.prototype.getDepthFromChildren = function () {\r\n        this.depth = this.node == null ? 0 : 1;\r\n        if (this.left != null) {\r\n            this.depth = this.left.depth + 1;\r\n        }\r\n        if (this.right != null && this.depth <= this.right.depth) {\r\n            this.depth = this.right.depth + 1;\r\n        }\r\n    };\r\n\r\n    function nodeOrder(n1, n2) {\r\n        if (n1 === n2) {\r\n            return 0;\r\n        }\r\n\r\n        if (n1.compareDocumentPosition) {\r\n            var cpos = n1.compareDocumentPosition(n2);\r\n\r\n            if (cpos & 0x01) {\r\n                // not in the same document; return an arbitrary result (is there a better way to do this)\r\n                return 1;\r\n            }\r\n            if (cpos & 0x0A) {\r\n                // n2 precedes or contains n1\r\n                return 1;\r\n            }\r\n            if (cpos & 0x14) {\r\n                // n2 follows or is contained by n1\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        var d1 = 0,\r\n            d2 = 0;\r\n        for (var m1 = n1; m1 != null; m1 = m1.parentNode || m1.ownerElement) {\r\n            d1++;\r\n        }\r\n        for (var m2 = n2; m2 != null; m2 = m2.parentNode || m2.ownerElement) {\r\n            d2++;\r\n        }\r\n\r\n        // step up to same depth\r\n        if (d1 > d2) {\r\n            while (d1 > d2) {\r\n                n1 = n1.parentNode || n1.ownerElement;\r\n                d1--;\r\n            }\r\n            if (n1 === n2) {\r\n                return 1;\r\n            }\r\n        } else if (d2 > d1) {\r\n            while (d2 > d1) {\r\n                n2 = n2.parentNode || n2.ownerElement;\r\n                d2--;\r\n            }\r\n            if (n1 === n2) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        var n1Par = n1.parentNode || n1.ownerElement,\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n\r\n        // find common parent\r\n        while (n1Par !== n2Par) {\r\n            n1 = n1Par;\r\n            n2 = n2Par;\r\n            n1Par = n1.parentNode || n1.ownerElement;\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n        }\r\n\r\n        var n1isAttr = Utilities.isAttribute(n1);\r\n        var n2isAttr = Utilities.isAttribute(n2);\r\n\r\n        if (n1isAttr && !n2isAttr) {\r\n            return -1;\r\n        }\r\n        if (!n1isAttr && n2isAttr) {\r\n            return 1;\r\n        }\r\n\r\n        if (n1Par) {\r\n            var cn = n1isAttr ? n1Par.attributes : n1Par.childNodes,\r\n                len = cn.length;\r\n            for (var i = 0; i < len; i += 1) {\r\n                var n = cn[i];\r\n                if (n === n1) {\r\n                    return -1;\r\n                }\r\n                if (n === n2) {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new Error('Unexpected: could not determine node order');\r\n    }\r\n\r\n    AVLTree.prototype.add = function (n) {\r\n        if (n === this.node) {\r\n            return false;\r\n        }\r\n\r\n        var o = nodeOrder(n, this.node);\r\n\r\n        var ret = false;\r\n        if (o == -1) {\r\n            if (this.left == null) {\r\n                this.left = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.left.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        } else if (o == 1) {\r\n            if (this.right == null) {\r\n                this.right = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.right.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ret) {\r\n            this.getDepthFromChildren();\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    // XNodeSet //////////////////////////////////////////////////////////////////\r\n\r\n    XNodeSet.prototype = new Expression();\r\n    XNodeSet.prototype.constructor = XNodeSet;\r\n    XNodeSet.superclass = Expression.prototype;\r\n\r\n    function XNodeSet() {\r\n        this.init();\r\n    }\r\n\r\n    XNodeSet.prototype.init = function () {\r\n        this.tree = null;\r\n        this.nodes = [];\r\n        this.size = 0;\r\n    };\r\n\r\n    XNodeSet.prototype.toString = function () {\r\n        var p = this.first();\r\n        if (p == null) {\r\n            return \"\";\r\n        }\r\n        return this.stringForNode(p);\r\n    };\r\n\r\n    XNodeSet.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.string = function () {\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNodeSet.prototype.stringValue = function () {\r\n        return this.toString();\r\n    };\r\n\r\n    XNodeSet.prototype.number = function () {\r\n        return new XNumber(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.numberValue = function () {\r\n        return Number(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.bool = function () {\r\n        return new XBoolean(this.booleanValue());\r\n    };\r\n\r\n    XNodeSet.prototype.booleanValue = function () {\r\n        return !!this.size;\r\n    };\r\n\r\n    XNodeSet.prototype.nodeset = function () {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForNode = function (n) {\r\n        if (n.nodeType == 9   /*Node.DOCUMENT_NODE*/ ||\r\n            n.nodeType == 1   /*Node.ELEMENT_NODE */ ||\r\n            n.nodeType === 11 /*Node.DOCUMENT_FRAGMENT*/) {\r\n            return this.stringForContainerNode(n);\r\n        }\r\n        if (n.nodeType === 2 /* Node.ATTRIBUTE_NODE */) {\r\n            return n.value || n.nodeValue;\r\n        }\r\n        if (n.isNamespaceNode) {\r\n            return n.namespace;\r\n        }\r\n        return n.nodeValue;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForContainerNode = function (n) {\r\n        var s = \"\";\r\n        for (var n2 = n.firstChild; n2 != null; n2 = n2.nextSibling) {\r\n            var nt = n2.nodeType;\r\n            //  Element,    Text,       CDATA,      Document,   Document Fragment\r\n            if (nt === 1 || nt === 3 || nt === 4 || nt === 9 || nt === 11) {\r\n                s += this.stringForNode(n2);\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n\r\n    XNodeSet.prototype.buildTree = function () {\r\n        if (!this.tree && this.nodes.length) {\r\n            this.tree = new AVLTree(this.nodes[0]);\r\n            for (var i = 1; i < this.nodes.length; i += 1) {\r\n                this.tree.add(this.nodes[i]);\r\n            }\r\n        }\r\n\r\n        return this.tree;\r\n    };\r\n\r\n    XNodeSet.prototype.first = function () {\r\n        var p = this.buildTree();\r\n        if (p == null) {\r\n            return null;\r\n        }\r\n        while (p.left != null) {\r\n            p = p.left;\r\n        }\r\n        return p.node;\r\n    };\r\n\r\n    XNodeSet.prototype.add = function (n) {\r\n        for (var i = 0; i < this.nodes.length; i += 1) {\r\n            if (n === this.nodes[i]) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.tree = null;\r\n        this.nodes.push(n);\r\n        this.size += 1;\r\n    };\r\n\r\n    XNodeSet.prototype.addArray = function (ns) {\r\n        var self = this;\r\n\r\n        forEach(function (x) { self.add(x); }, ns);\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in document order\r\n     */\r\n    XNodeSet.prototype.toArray = function () {\r\n        var a = [];\r\n        this.toArrayRec(this.buildTree(), a);\r\n        return a;\r\n    };\r\n\r\n    XNodeSet.prototype.toArrayRec = function (t, a) {\r\n        if (t != null) {\r\n            this.toArrayRec(t.left, a);\r\n            a.push(t.node);\r\n            this.toArrayRec(t.right, a);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in arbitrary order\r\n     */\r\n    XNodeSet.prototype.toUnsortedArray = function () {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithString = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XString(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNumber = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XNumber(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithBoolean = function (r, o) {\r\n        return o(this.bool(), r);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNodeSet = function (r, o) {\r\n        var arr = this.toUnsortedArray();\r\n        var oInvert = function (lop, rop) { return o(rop, lop); };\r\n\r\n        for (var i = 0; i < arr.length; i++) {\r\n            var l = new XString(this.stringForNode(arr[i]));\r\n\r\n            var res = r.compareWithString(l, oInvert);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.compareWith = curry(function (o, r) {\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.compareWithString(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.compareWithNumber(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.compareWithBoolean(r, o);\r\n        }\r\n        return this.compareWithNodeSet(r, o);\r\n    });\r\n\r\n    XNodeSet.prototype.equals = XNodeSet.compareWith(Operators.equals);\r\n    XNodeSet.prototype.notequal = XNodeSet.compareWith(Operators.notequal);\r\n    XNodeSet.prototype.lessthan = XNodeSet.compareWith(Operators.lessthan);\r\n    XNodeSet.prototype.greaterthan = XNodeSet.compareWith(Operators.greaterthan);\r\n    XNodeSet.prototype.lessthanorequal = XNodeSet.compareWith(Operators.lessthanorequal);\r\n    XNodeSet.prototype.greaterthanorequal = XNodeSet.compareWith(Operators.greaterthanorequal);\r\n\r\n    XNodeSet.prototype.union = function (r) {\r\n        var ns = new XNodeSet();\r\n        ns.addArray(this.toUnsortedArray());\r\n        ns.addArray(r.toUnsortedArray());\r\n        return ns;\r\n    };\r\n\r\n    // XPathNamespace ////////////////////////////////////////////////////////////\r\n\r\n    XPathNamespace.prototype = new Object();\r\n    XPathNamespace.prototype.constructor = XPathNamespace;\r\n    XPathNamespace.superclass = Object.prototype;\r\n\r\n    function XPathNamespace(pre, ns, p) {\r\n        this.isXPathNamespace = true;\r\n        this.ownerDocument = p.ownerDocument;\r\n        this.nodeName = \"#namespace\";\r\n        this.prefix = pre;\r\n        this.localName = pre;\r\n        this.namespaceURI = ns;\r\n        this.nodeValue = ns;\r\n        this.ownerElement = p;\r\n        this.nodeType = XPathNamespace.XPATH_NAMESPACE_NODE;\r\n    }\r\n\r\n    XPathNamespace.prototype.toString = function () {\r\n        return \"{ \\\"\" + this.prefix + \"\\\", \\\"\" + this.namespaceURI + \"\\\" }\";\r\n    };\r\n\r\n    // XPathContext //////////////////////////////////////////////////////////////\r\n\r\n    XPathContext.prototype = new Object();\r\n    XPathContext.prototype.constructor = XPathContext;\r\n    XPathContext.superclass = Object.prototype;\r\n\r\n    function XPathContext(vr, nr, fr) {\r\n        this.variableResolver = vr != null ? vr : new VariableResolver();\r\n        this.namespaceResolver = nr != null ? nr : new NamespaceResolver();\r\n        this.functionResolver = fr != null ? fr : new FunctionResolver();\r\n    }\r\n\r\n    XPathContext.prototype.extend = function (newProps) {\r\n        return assign(new XPathContext(), this, newProps);\r\n    };\r\n\r\n    // VariableResolver //////////////////////////////////////////////////////////\r\n\r\n    VariableResolver.prototype = new Object();\r\n    VariableResolver.prototype.constructor = VariableResolver;\r\n    VariableResolver.superclass = Object.prototype;\r\n\r\n    function VariableResolver() {\r\n    }\r\n\r\n    VariableResolver.prototype.getVariable = function (ln, ns) {\r\n        return null;\r\n    };\r\n\r\n    // FunctionResolver //////////////////////////////////////////////////////////\r\n\r\n    FunctionResolver.prototype = new Object();\r\n    FunctionResolver.prototype.constructor = FunctionResolver;\r\n    FunctionResolver.superclass = Object.prototype;\r\n\r\n    function FunctionResolver(thisArg) {\r\n        this.thisArg = thisArg != null ? thisArg : Functions;\r\n        this.functions = new Object();\r\n        this.addStandardFunctions();\r\n    }\r\n\r\n    FunctionResolver.prototype.addStandardFunctions = function () {\r\n        this.functions[\"{}last\"] = Functions.last;\r\n        this.functions[\"{}position\"] = Functions.position;\r\n        this.functions[\"{}count\"] = Functions.count;\r\n        this.functions[\"{}id\"] = Functions.id;\r\n        this.functions[\"{}local-name\"] = Functions.localName;\r\n        this.functions[\"{}namespace-uri\"] = Functions.namespaceURI;\r\n        this.functions[\"{}name\"] = Functions.name;\r\n        this.functions[\"{}string\"] = Functions.string;\r\n        this.functions[\"{}concat\"] = Functions.concat;\r\n        this.functions[\"{}starts-with\"] = Functions.startsWith;\r\n        this.functions[\"{}contains\"] = Functions.contains;\r\n        this.functions[\"{}substring-before\"] = Functions.substringBefore;\r\n        this.functions[\"{}substring-after\"] = Functions.substringAfter;\r\n        this.functions[\"{}substring\"] = Functions.substring;\r\n        this.functions[\"{}string-length\"] = Functions.stringLength;\r\n        this.functions[\"{}normalize-space\"] = Functions.normalizeSpace;\r\n        this.functions[\"{}translate\"] = Functions.translate;\r\n        this.functions[\"{}boolean\"] = Functions.boolean_;\r\n        this.functions[\"{}not\"] = Functions.not;\r\n        this.functions[\"{}true\"] = Functions.true_;\r\n        this.functions[\"{}false\"] = Functions.false_;\r\n        this.functions[\"{}lang\"] = Functions.lang;\r\n        this.functions[\"{}number\"] = Functions.number;\r\n        this.functions[\"{}sum\"] = Functions.sum;\r\n        this.functions[\"{}floor\"] = Functions.floor;\r\n        this.functions[\"{}ceiling\"] = Functions.ceiling;\r\n        this.functions[\"{}round\"] = Functions.round;\r\n    };\r\n\r\n    FunctionResolver.prototype.addFunction = function (ns, ln, f) {\r\n        this.functions[\"{\" + ns + \"}\" + ln] = f;\r\n    };\r\n\r\n    FunctionResolver.getFunctionFromContext = function (qName, context) {\r\n        var parts = Utilities.resolveQName(qName, context.namespaceResolver, context.contextNode, false);\r\n\r\n        if (parts[0] === null) {\r\n            throw new Error(\"Cannot resolve QName \" + name);\r\n        }\r\n\r\n        return context.functionResolver.getFunction(parts[1], parts[0]);\r\n    };\r\n\r\n    FunctionResolver.prototype.getFunction = function (localName, namespace) {\r\n        return this.functions[\"{\" + namespace + \"}\" + localName];\r\n    };\r\n\r\n    // NamespaceResolver /////////////////////////////////////////////////////////\r\n\r\n    NamespaceResolver.prototype = new Object();\r\n    NamespaceResolver.prototype.constructor = NamespaceResolver;\r\n    NamespaceResolver.superclass = Object.prototype;\r\n\r\n    function NamespaceResolver() {\r\n    }\r\n\r\n    NamespaceResolver.prototype.getNamespace = function (prefix, n) {\r\n        if (prefix == \"xml\") {\r\n            return XPath.XML_NAMESPACE_URI;\r\n        } else if (prefix == \"xmlns\") {\r\n            return XPath.XMLNS_NAMESPACE_URI;\r\n        }\r\n        if (n.nodeType == 9 /*Node.DOCUMENT_NODE*/) {\r\n            n = n.documentElement;\r\n        } else if (n.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n            n = PathExpr.getOwnerElement(n);\r\n        } else if (n.nodeType != 1 /*Node.ELEMENT_NODE*/) {\r\n            n = n.parentNode;\r\n        }\r\n        while (n != null && n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            var nnm = n.attributes;\r\n            for (var i = 0; i < nnm.length; i++) {\r\n                var a = nnm.item(i);\r\n                var aname = a.name || a.nodeName;\r\n                if ((aname === \"xmlns\" && prefix === \"\")\r\n                    || aname === \"xmlns:\" + prefix) {\r\n                    return String(a.value || a.nodeValue);\r\n                }\r\n            }\r\n            n = n.parentNode;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Functions /////////////////////////////////////////////////////////////////\r\n\r\n    var Functions = new Object();\r\n\r\n    Functions.last = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function last expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextSize);\r\n    };\r\n\r\n    Functions.position = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function position expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextPosition);\r\n    };\r\n\r\n    Functions.count = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\r\n            throw new Error(\"Function count expects (node-set)\");\r\n        }\r\n        return new XNumber(ns.size);\r\n    };\r\n\r\n    Functions.id = function () {\r\n        var c = arguments[0];\r\n        var id;\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function id expects (object)\");\r\n        }\r\n        id = arguments[1].evaluate(c);\r\n        if (Utilities.instance_of(id, XNodeSet)) {\r\n            id = id.toArray().join(\" \");\r\n        } else {\r\n            id = id.stringValue();\r\n        }\r\n        var ids = id.split(/[\\x0d\\x0a\\x09\\x20]+/);\r\n        var count = 0;\r\n        var ns = new XNodeSet();\r\n        var doc = c.contextNode.nodeType == 9 /*Node.DOCUMENT_NODE*/\r\n            ? c.contextNode\r\n            : c.contextNode.ownerDocument;\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var n;\r\n            if (doc.getElementById) {\r\n                n = doc.getElementById(ids[i]);\r\n            } else {\r\n                n = Utilities.getElementById(doc, ids[i]);\r\n            }\r\n            if (n != null) {\r\n                ns.add(n);\r\n                count++;\r\n            }\r\n        }\r\n        return ns;\r\n    };\r\n\r\n    Functions.localName = function (c, eNode) {\r\n        var n;\r\n\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = eNode.evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function local-name expects (node-set?)\");\r\n        }\r\n\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n\r\n        return new XString(\r\n            n.localName ||     //  standard elements and attributes\r\n            n.baseName ||     //  IE\r\n            n.target ||     //  processing instructions\r\n            n.nodeName ||     //  DOM1 elements\r\n            \"\"                 //  fallback\r\n        );\r\n    };\r\n\r\n    Functions.namespaceURI = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function namespace-uri expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(n.namespaceURI);\r\n    };\r\n\r\n    Functions.name = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function name expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        if (n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            return new XString(n.nodeName);\r\n        } else if (n.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n            return new XString(n.name || n.nodeName);\r\n        } else if (n.nodeType === 7 /*Node.PROCESSING_INSTRUCTION_NODE*/) {\r\n            return new XString(n.target || n.nodeName);\r\n        } else if (n.localName == null) {\r\n            return new XString(\"\");\r\n        } else {\r\n            return new XString(n.localName);\r\n        }\r\n    };\r\n\r\n    Functions.string = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length == 1) {\r\n            return new XString(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        } else if (arguments.length == 2) {\r\n            return arguments[1].evaluate(c).string();\r\n        }\r\n        throw new Error(\"Function string expects (object?)\");\r\n    };\r\n\r\n    Functions.concat = function (c) {\r\n        if (arguments.length < 3) {\r\n            throw new Error(\"Function concat expects (string, string[, string]*)\");\r\n        }\r\n        var s = \"\";\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            s += arguments[i].evaluate(c).stringValue();\r\n        }\r\n        return new XString(s);\r\n    };\r\n\r\n    Functions.startsWith = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function startsWith expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.substring(0, s2.length) == s2);\r\n    };\r\n\r\n    Functions.contains = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function contains expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.indexOf(s2) !== -1);\r\n    };\r\n\r\n    Functions.substringBefore = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-before expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XString(s1.substring(0, s1.indexOf(s2)));\r\n    };\r\n\r\n    Functions.substringAfter = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-after expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        if (s2.length == 0) {\r\n            return new XString(s1);\r\n        }\r\n        var i = s1.indexOf(s2);\r\n        if (i == -1) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(s1.substring(i + s2.length));\r\n    };\r\n\r\n    Functions.substring = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 3 || arguments.length == 4)) {\r\n            throw new Error(\"Function substring expects (string, number, number?)\");\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        var n1 = Math.round(arguments[2].evaluate(c).numberValue()) - 1;\r\n        var n2 = arguments.length == 4 ? n1 + Math.round(arguments[3].evaluate(c).numberValue()) : undefined;\r\n        return new XString(s.substring(n1, n2));\r\n    };\r\n\r\n    Functions.stringLength = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function string-length expects (string?)\");\r\n        }\r\n        return new XNumber(s.length);\r\n    };\r\n\r\n    Functions.normalizeSpace = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function normalize-space expects (string?)\");\r\n        }\r\n        var i = 0;\r\n        var j = s.length - 1;\r\n        while (Utilities.isSpace(s.charCodeAt(j))) {\r\n            j--;\r\n        }\r\n        var t = \"\";\r\n        while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n            i++;\r\n        }\r\n        while (i <= j) {\r\n            if (Utilities.isSpace(s.charCodeAt(i))) {\r\n                t += \" \";\r\n                while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n                    i++;\r\n                }\r\n            } else {\r\n                t += s.charAt(i);\r\n                i++;\r\n            }\r\n        }\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.translate = function (c, eValue, eFrom, eTo) {\r\n        if (arguments.length != 4) {\r\n            throw new Error(\"Function translate expects (string, string, string)\");\r\n        }\r\n\r\n        var value = eValue.evaluate(c).stringValue();\r\n        var from = eFrom.evaluate(c).stringValue();\r\n        var to = eTo.evaluate(c).stringValue();\r\n\r\n        var cMap = reduce(function (acc, ch, i) {\r\n            if (!(ch in acc)) {\r\n                acc[ch] = i > to.length ? '' : to[i];\r\n            }\r\n            return acc;\r\n        }, {}, from);\r\n\r\n        var t = join(\r\n            '',\r\n            map(function (ch) {\r\n                return ch in cMap ? cMap[ch] : ch;\r\n            }, value)\r\n        );\r\n\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.boolean_ = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function boolean expects (object)\");\r\n        }\r\n        return arguments[1].evaluate(c).bool();\r\n    };\r\n\r\n    Functions.not = function (c, eValue) {\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function not expects (object)\");\r\n        }\r\n        return eValue.evaluate(c).bool().not();\r\n    };\r\n\r\n    Functions.true_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function true expects ()\");\r\n        }\r\n        return XBoolean.true_;\r\n    };\r\n\r\n    Functions.false_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function false expects ()\");\r\n        }\r\n        return XBoolean.false_;\r\n    };\r\n\r\n    Functions.lang = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function lang expects (string)\");\r\n        }\r\n        var lang;\r\n        for (var n = c.contextNode; n != null && n.nodeType != 9 /*Node.DOCUMENT_NODE*/; n = n.parentNode) {\r\n            var a = n.getAttributeNS(XPath.XML_NAMESPACE_URI, \"lang\");\r\n            if (a != null) {\r\n                lang = String(a);\r\n                break;\r\n            }\r\n        }\r\n        if (lang == null) {\r\n            return XBoolean.false_;\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        return new XBoolean(lang.substring(0, s.length) == s\r\n            && (lang.length == s.length || lang.charAt(s.length) == '-'));\r\n    };\r\n\r\n    Functions.number = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 1 || arguments.length == 2)) {\r\n            throw new Error(\"Function number expects (object?)\");\r\n        }\r\n        if (arguments.length == 1) {\r\n            return new XNumber(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        }\r\n        return arguments[1].evaluate(c).number();\r\n    };\r\n\r\n    Functions.sum = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of((ns = arguments[1].evaluate(c)), XNodeSet)) {\r\n            throw new Error(\"Function sum expects (node-set)\");\r\n        }\r\n        ns = ns.toUnsortedArray();\r\n        var n = 0;\r\n        for (var i = 0; i < ns.length; i++) {\r\n            n += new XNumber(XNodeSet.prototype.stringForNode(ns[i])).numberValue();\r\n        }\r\n        return new XNumber(n);\r\n    };\r\n\r\n    Functions.floor = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function floor expects (number)\");\r\n        }\r\n        return new XNumber(Math.floor(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.ceiling = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function ceiling expects (number)\");\r\n        }\r\n        return new XNumber(Math.ceil(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.round = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function round expects (number)\");\r\n        }\r\n        return new XNumber(Math.round(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    // Utilities /////////////////////////////////////////////////////////////////\r\n\r\n    var Utilities = new Object();\r\n\r\n    Utilities.isAttribute = function (val) {\r\n        return val && (val.nodeType === 2 || val.ownerElement);\r\n    }\r\n\r\n    Utilities.splitQName = function (qn) {\r\n        var i = qn.indexOf(\":\");\r\n        if (i == -1) {\r\n            return [null, qn];\r\n        }\r\n        return [qn.substring(0, i), qn.substring(i + 1)];\r\n    };\r\n\r\n    Utilities.resolveQName = function (qn, nr, n, useDefault) {\r\n        var parts = Utilities.splitQName(qn);\r\n        if (parts[0] != null) {\r\n            parts[0] = nr.getNamespace(parts[0], n);\r\n        } else {\r\n            if (useDefault) {\r\n                parts[0] = nr.getNamespace(\"\", n);\r\n                if (parts[0] == null) {\r\n                    parts[0] = \"\";\r\n                }\r\n            } else {\r\n                parts[0] = \"\";\r\n            }\r\n        }\r\n        return parts;\r\n    };\r\n\r\n    Utilities.isSpace = function (c) {\r\n        return c == 0x9 || c == 0xd || c == 0xa || c == 0x20;\r\n    };\r\n\r\n    Utilities.isLetter = function (c) {\r\n        return c >= 0x0041 && c <= 0x005A ||\r\n            c >= 0x0061 && c <= 0x007A ||\r\n            c >= 0x00C0 && c <= 0x00D6 ||\r\n            c >= 0x00D8 && c <= 0x00F6 ||\r\n            c >= 0x00F8 && c <= 0x00FF ||\r\n            c >= 0x0100 && c <= 0x0131 ||\r\n            c >= 0x0134 && c <= 0x013E ||\r\n            c >= 0x0141 && c <= 0x0148 ||\r\n            c >= 0x014A && c <= 0x017E ||\r\n            c >= 0x0180 && c <= 0x01C3 ||\r\n            c >= 0x01CD && c <= 0x01F0 ||\r\n            c >= 0x01F4 && c <= 0x01F5 ||\r\n            c >= 0x01FA && c <= 0x0217 ||\r\n            c >= 0x0250 && c <= 0x02A8 ||\r\n            c >= 0x02BB && c <= 0x02C1 ||\r\n            c == 0x0386 ||\r\n            c >= 0x0388 && c <= 0x038A ||\r\n            c == 0x038C ||\r\n            c >= 0x038E && c <= 0x03A1 ||\r\n            c >= 0x03A3 && c <= 0x03CE ||\r\n            c >= 0x03D0 && c <= 0x03D6 ||\r\n            c == 0x03DA ||\r\n            c == 0x03DC ||\r\n            c == 0x03DE ||\r\n            c == 0x03E0 ||\r\n            c >= 0x03E2 && c <= 0x03F3 ||\r\n            c >= 0x0401 && c <= 0x040C ||\r\n            c >= 0x040E && c <= 0x044F ||\r\n            c >= 0x0451 && c <= 0x045C ||\r\n            c >= 0x045E && c <= 0x0481 ||\r\n            c >= 0x0490 && c <= 0x04C4 ||\r\n            c >= 0x04C7 && c <= 0x04C8 ||\r\n            c >= 0x04CB && c <= 0x04CC ||\r\n            c >= 0x04D0 && c <= 0x04EB ||\r\n            c >= 0x04EE && c <= 0x04F5 ||\r\n            c >= 0x04F8 && c <= 0x04F9 ||\r\n            c >= 0x0531 && c <= 0x0556 ||\r\n            c == 0x0559 ||\r\n            c >= 0x0561 && c <= 0x0586 ||\r\n            c >= 0x05D0 && c <= 0x05EA ||\r\n            c >= 0x05F0 && c <= 0x05F2 ||\r\n            c >= 0x0621 && c <= 0x063A ||\r\n            c >= 0x0641 && c <= 0x064A ||\r\n            c >= 0x0671 && c <= 0x06B7 ||\r\n            c >= 0x06BA && c <= 0x06BE ||\r\n            c >= 0x06C0 && c <= 0x06CE ||\r\n            c >= 0x06D0 && c <= 0x06D3 ||\r\n            c == 0x06D5 ||\r\n            c >= 0x06E5 && c <= 0x06E6 ||\r\n            c >= 0x0905 && c <= 0x0939 ||\r\n            c == 0x093D ||\r\n            c >= 0x0958 && c <= 0x0961 ||\r\n            c >= 0x0985 && c <= 0x098C ||\r\n            c >= 0x098F && c <= 0x0990 ||\r\n            c >= 0x0993 && c <= 0x09A8 ||\r\n            c >= 0x09AA && c <= 0x09B0 ||\r\n            c == 0x09B2 ||\r\n            c >= 0x09B6 && c <= 0x09B9 ||\r\n            c >= 0x09DC && c <= 0x09DD ||\r\n            c >= 0x09DF && c <= 0x09E1 ||\r\n            c >= 0x09F0 && c <= 0x09F1 ||\r\n            c >= 0x0A05 && c <= 0x0A0A ||\r\n            c >= 0x0A0F && c <= 0x0A10 ||\r\n            c >= 0x0A13 && c <= 0x0A28 ||\r\n            c >= 0x0A2A && c <= 0x0A30 ||\r\n            c >= 0x0A32 && c <= 0x0A33 ||\r\n            c >= 0x0A35 && c <= 0x0A36 ||\r\n            c >= 0x0A38 && c <= 0x0A39 ||\r\n            c >= 0x0A59 && c <= 0x0A5C ||\r\n            c == 0x0A5E ||\r\n            c >= 0x0A72 && c <= 0x0A74 ||\r\n            c >= 0x0A85 && c <= 0x0A8B ||\r\n            c == 0x0A8D ||\r\n            c >= 0x0A8F && c <= 0x0A91 ||\r\n            c >= 0x0A93 && c <= 0x0AA8 ||\r\n            c >= 0x0AAA && c <= 0x0AB0 ||\r\n            c >= 0x0AB2 && c <= 0x0AB3 ||\r\n            c >= 0x0AB5 && c <= 0x0AB9 ||\r\n            c == 0x0ABD ||\r\n            c == 0x0AE0 ||\r\n            c >= 0x0B05 && c <= 0x0B0C ||\r\n            c >= 0x0B0F && c <= 0x0B10 ||\r\n            c >= 0x0B13 && c <= 0x0B28 ||\r\n            c >= 0x0B2A && c <= 0x0B30 ||\r\n            c >= 0x0B32 && c <= 0x0B33 ||\r\n            c >= 0x0B36 && c <= 0x0B39 ||\r\n            c == 0x0B3D ||\r\n            c >= 0x0B5C && c <= 0x0B5D ||\r\n            c >= 0x0B5F && c <= 0x0B61 ||\r\n            c >= 0x0B85 && c <= 0x0B8A ||\r\n            c >= 0x0B8E && c <= 0x0B90 ||\r\n            c >= 0x0B92 && c <= 0x0B95 ||\r\n            c >= 0x0B99 && c <= 0x0B9A ||\r\n            c == 0x0B9C ||\r\n            c >= 0x0B9E && c <= 0x0B9F ||\r\n            c >= 0x0BA3 && c <= 0x0BA4 ||\r\n            c >= 0x0BA8 && c <= 0x0BAA ||\r\n            c >= 0x0BAE && c <= 0x0BB5 ||\r\n            c >= 0x0BB7 && c <= 0x0BB9 ||\r\n            c >= 0x0C05 && c <= 0x0C0C ||\r\n            c >= 0x0C0E && c <= 0x0C10 ||\r\n            c >= 0x0C12 && c <= 0x0C28 ||\r\n            c >= 0x0C2A && c <= 0x0C33 ||\r\n            c >= 0x0C35 && c <= 0x0C39 ||\r\n            c >= 0x0C60 && c <= 0x0C61 ||\r\n            c >= 0x0C85 && c <= 0x0C8C ||\r\n            c >= 0x0C8E && c <= 0x0C90 ||\r\n            c >= 0x0C92 && c <= 0x0CA8 ||\r\n            c >= 0x0CAA && c <= 0x0CB3 ||\r\n            c >= 0x0CB5 && c <= 0x0CB9 ||\r\n            c == 0x0CDE ||\r\n            c >= 0x0CE0 && c <= 0x0CE1 ||\r\n            c >= 0x0D05 && c <= 0x0D0C ||\r\n            c >= 0x0D0E && c <= 0x0D10 ||\r\n            c >= 0x0D12 && c <= 0x0D28 ||\r\n            c >= 0x0D2A && c <= 0x0D39 ||\r\n            c >= 0x0D60 && c <= 0x0D61 ||\r\n            c >= 0x0E01 && c <= 0x0E2E ||\r\n            c == 0x0E30 ||\r\n            c >= 0x0E32 && c <= 0x0E33 ||\r\n            c >= 0x0E40 && c <= 0x0E45 ||\r\n            c >= 0x0E81 && c <= 0x0E82 ||\r\n            c == 0x0E84 ||\r\n            c >= 0x0E87 && c <= 0x0E88 ||\r\n            c == 0x0E8A ||\r\n            c == 0x0E8D ||\r\n            c >= 0x0E94 && c <= 0x0E97 ||\r\n            c >= 0x0E99 && c <= 0x0E9F ||\r\n            c >= 0x0EA1 && c <= 0x0EA3 ||\r\n            c == 0x0EA5 ||\r\n            c == 0x0EA7 ||\r\n            c >= 0x0EAA && c <= 0x0EAB ||\r\n            c >= 0x0EAD && c <= 0x0EAE ||\r\n            c == 0x0EB0 ||\r\n            c >= 0x0EB2 && c <= 0x0EB3 ||\r\n            c == 0x0EBD ||\r\n            c >= 0x0EC0 && c <= 0x0EC4 ||\r\n            c >= 0x0F40 && c <= 0x0F47 ||\r\n            c >= 0x0F49 && c <= 0x0F69 ||\r\n            c >= 0x10A0 && c <= 0x10C5 ||\r\n            c >= 0x10D0 && c <= 0x10F6 ||\r\n            c == 0x1100 ||\r\n            c >= 0x1102 && c <= 0x1103 ||\r\n            c >= 0x1105 && c <= 0x1107 ||\r\n            c == 0x1109 ||\r\n            c >= 0x110B && c <= 0x110C ||\r\n            c >= 0x110E && c <= 0x1112 ||\r\n            c == 0x113C ||\r\n            c == 0x113E ||\r\n            c == 0x1140 ||\r\n            c == 0x114C ||\r\n            c == 0x114E ||\r\n            c == 0x1150 ||\r\n            c >= 0x1154 && c <= 0x1155 ||\r\n            c == 0x1159 ||\r\n            c >= 0x115F && c <= 0x1161 ||\r\n            c == 0x1163 ||\r\n            c == 0x1165 ||\r\n            c == 0x1167 ||\r\n            c == 0x1169 ||\r\n            c >= 0x116D && c <= 0x116E ||\r\n            c >= 0x1172 && c <= 0x1173 ||\r\n            c == 0x1175 ||\r\n            c == 0x119E ||\r\n            c == 0x11A8 ||\r\n            c == 0x11AB ||\r\n            c >= 0x11AE && c <= 0x11AF ||\r\n            c >= 0x11B7 && c <= 0x11B8 ||\r\n            c == 0x11BA ||\r\n            c >= 0x11BC && c <= 0x11C2 ||\r\n            c == 0x11EB ||\r\n            c == 0x11F0 ||\r\n            c == 0x11F9 ||\r\n            c >= 0x1E00 && c <= 0x1E9B ||\r\n            c >= 0x1EA0 && c <= 0x1EF9 ||\r\n            c >= 0x1F00 && c <= 0x1F15 ||\r\n            c >= 0x1F18 && c <= 0x1F1D ||\r\n            c >= 0x1F20 && c <= 0x1F45 ||\r\n            c >= 0x1F48 && c <= 0x1F4D ||\r\n            c >= 0x1F50 && c <= 0x1F57 ||\r\n            c == 0x1F59 ||\r\n            c == 0x1F5B ||\r\n            c == 0x1F5D ||\r\n            c >= 0x1F5F && c <= 0x1F7D ||\r\n            c >= 0x1F80 && c <= 0x1FB4 ||\r\n            c >= 0x1FB6 && c <= 0x1FBC ||\r\n            c == 0x1FBE ||\r\n            c >= 0x1FC2 && c <= 0x1FC4 ||\r\n            c >= 0x1FC6 && c <= 0x1FCC ||\r\n            c >= 0x1FD0 && c <= 0x1FD3 ||\r\n            c >= 0x1FD6 && c <= 0x1FDB ||\r\n            c >= 0x1FE0 && c <= 0x1FEC ||\r\n            c >= 0x1FF2 && c <= 0x1FF4 ||\r\n            c >= 0x1FF6 && c <= 0x1FFC ||\r\n            c == 0x2126 ||\r\n            c >= 0x212A && c <= 0x212B ||\r\n            c == 0x212E ||\r\n            c >= 0x2180 && c <= 0x2182 ||\r\n            c >= 0x3041 && c <= 0x3094 ||\r\n            c >= 0x30A1 && c <= 0x30FA ||\r\n            c >= 0x3105 && c <= 0x312C ||\r\n            c >= 0xAC00 && c <= 0xD7A3 ||\r\n            c >= 0x4E00 && c <= 0x9FA5 ||\r\n            c == 0x3007 ||\r\n            c >= 0x3021 && c <= 0x3029;\r\n    };\r\n\r\n    Utilities.isNCNameChar = function (c) {\r\n        return c >= 0x0030 && c <= 0x0039\r\n            || c >= 0x0660 && c <= 0x0669\r\n            || c >= 0x06F0 && c <= 0x06F9\r\n            || c >= 0x0966 && c <= 0x096F\r\n            || c >= 0x09E6 && c <= 0x09EF\r\n            || c >= 0x0A66 && c <= 0x0A6F\r\n            || c >= 0x0AE6 && c <= 0x0AEF\r\n            || c >= 0x0B66 && c <= 0x0B6F\r\n            || c >= 0x0BE7 && c <= 0x0BEF\r\n            || c >= 0x0C66 && c <= 0x0C6F\r\n            || c >= 0x0CE6 && c <= 0x0CEF\r\n            || c >= 0x0D66 && c <= 0x0D6F\r\n            || c >= 0x0E50 && c <= 0x0E59\r\n            || c >= 0x0ED0 && c <= 0x0ED9\r\n            || c >= 0x0F20 && c <= 0x0F29\r\n            || c == 0x002E\r\n            || c == 0x002D\r\n            || c == 0x005F\r\n            || Utilities.isLetter(c)\r\n            || c >= 0x0300 && c <= 0x0345\r\n            || c >= 0x0360 && c <= 0x0361\r\n            || c >= 0x0483 && c <= 0x0486\r\n            || c >= 0x0591 && c <= 0x05A1\r\n            || c >= 0x05A3 && c <= 0x05B9\r\n            || c >= 0x05BB && c <= 0x05BD\r\n            || c == 0x05BF\r\n            || c >= 0x05C1 && c <= 0x05C2\r\n            || c == 0x05C4\r\n            || c >= 0x064B && c <= 0x0652\r\n            || c == 0x0670\r\n            || c >= 0x06D6 && c <= 0x06DC\r\n            || c >= 0x06DD && c <= 0x06DF\r\n            || c >= 0x06E0 && c <= 0x06E4\r\n            || c >= 0x06E7 && c <= 0x06E8\r\n            || c >= 0x06EA && c <= 0x06ED\r\n            || c >= 0x0901 && c <= 0x0903\r\n            || c == 0x093C\r\n            || c >= 0x093E && c <= 0x094C\r\n            || c == 0x094D\r\n            || c >= 0x0951 && c <= 0x0954\r\n            || c >= 0x0962 && c <= 0x0963\r\n            || c >= 0x0981 && c <= 0x0983\r\n            || c == 0x09BC\r\n            || c == 0x09BE\r\n            || c == 0x09BF\r\n            || c >= 0x09C0 && c <= 0x09C4\r\n            || c >= 0x09C7 && c <= 0x09C8\r\n            || c >= 0x09CB && c <= 0x09CD\r\n            || c == 0x09D7\r\n            || c >= 0x09E2 && c <= 0x09E3\r\n            || c == 0x0A02\r\n            || c == 0x0A3C\r\n            || c == 0x0A3E\r\n            || c == 0x0A3F\r\n            || c >= 0x0A40 && c <= 0x0A42\r\n            || c >= 0x0A47 && c <= 0x0A48\r\n            || c >= 0x0A4B && c <= 0x0A4D\r\n            || c >= 0x0A70 && c <= 0x0A71\r\n            || c >= 0x0A81 && c <= 0x0A83\r\n            || c == 0x0ABC\r\n            || c >= 0x0ABE && c <= 0x0AC5\r\n            || c >= 0x0AC7 && c <= 0x0AC9\r\n            || c >= 0x0ACB && c <= 0x0ACD\r\n            || c >= 0x0B01 && c <= 0x0B03\r\n            || c == 0x0B3C\r\n            || c >= 0x0B3E && c <= 0x0B43\r\n            || c >= 0x0B47 && c <= 0x0B48\r\n            || c >= 0x0B4B && c <= 0x0B4D\r\n            || c >= 0x0B56 && c <= 0x0B57\r\n            || c >= 0x0B82 && c <= 0x0B83\r\n            || c >= 0x0BBE && c <= 0x0BC2\r\n            || c >= 0x0BC6 && c <= 0x0BC8\r\n            || c >= 0x0BCA && c <= 0x0BCD\r\n            || c == 0x0BD7\r\n            || c >= 0x0C01 && c <= 0x0C03\r\n            || c >= 0x0C3E && c <= 0x0C44\r\n            || c >= 0x0C46 && c <= 0x0C48\r\n            || c >= 0x0C4A && c <= 0x0C4D\r\n            || c >= 0x0C55 && c <= 0x0C56\r\n            || c >= 0x0C82 && c <= 0x0C83\r\n            || c >= 0x0CBE && c <= 0x0CC4\r\n            || c >= 0x0CC6 && c <= 0x0CC8\r\n            || c >= 0x0CCA && c <= 0x0CCD\r\n            || c >= 0x0CD5 && c <= 0x0CD6\r\n            || c >= 0x0D02 && c <= 0x0D03\r\n            || c >= 0x0D3E && c <= 0x0D43\r\n            || c >= 0x0D46 && c <= 0x0D48\r\n            || c >= 0x0D4A && c <= 0x0D4D\r\n            || c == 0x0D57\r\n            || c == 0x0E31\r\n            || c >= 0x0E34 && c <= 0x0E3A\r\n            || c >= 0x0E47 && c <= 0x0E4E\r\n            || c == 0x0EB1\r\n            || c >= 0x0EB4 && c <= 0x0EB9\r\n            || c >= 0x0EBB && c <= 0x0EBC\r\n            || c >= 0x0EC8 && c <= 0x0ECD\r\n            || c >= 0x0F18 && c <= 0x0F19\r\n            || c == 0x0F35\r\n            || c == 0x0F37\r\n            || c == 0x0F39\r\n            || c == 0x0F3E\r\n            || c == 0x0F3F\r\n            || c >= 0x0F71 && c <= 0x0F84\r\n            || c >= 0x0F86 && c <= 0x0F8B\r\n            || c >= 0x0F90 && c <= 0x0F95\r\n            || c == 0x0F97\r\n            || c >= 0x0F99 && c <= 0x0FAD\r\n            || c >= 0x0FB1 && c <= 0x0FB7\r\n            || c == 0x0FB9\r\n            || c >= 0x20D0 && c <= 0x20DC\r\n            || c == 0x20E1\r\n            || c >= 0x302A && c <= 0x302F\r\n            || c == 0x3099\r\n            || c == 0x309A\r\n            || c == 0x00B7\r\n            || c == 0x02D0\r\n            || c == 0x02D1\r\n            || c == 0x0387\r\n            || c == 0x0640\r\n            || c == 0x0E46\r\n            || c == 0x0EC6\r\n            || c == 0x3005\r\n            || c >= 0x3031 && c <= 0x3035\r\n            || c >= 0x309D && c <= 0x309E\r\n            || c >= 0x30FC && c <= 0x30FE;\r\n    };\r\n\r\n    Utilities.coalesceText = function (n) {\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            if (m.nodeType == 3 /*Node.TEXT_NODE*/ || m.nodeType == 4 /*Node.CDATA_SECTION_NODE*/) {\r\n                var s = m.nodeValue;\r\n                var first = m;\r\n                m = m.nextSibling;\r\n                while (m != null && (m.nodeType == 3 /*Node.TEXT_NODE*/ || m.nodeType == 4 /*Node.CDATA_SECTION_NODE*/)) {\r\n                    s += m.nodeValue;\r\n                    var del = m;\r\n                    m = m.nextSibling;\r\n                    del.parentNode.removeChild(del);\r\n                }\r\n                if (first.nodeType == 4 /*Node.CDATA_SECTION_NODE*/) {\r\n                    var p = first.parentNode;\r\n                    if (first.nextSibling == null) {\r\n                        p.removeChild(first);\r\n                        p.appendChild(p.ownerDocument.createTextNode(s));\r\n                    } else {\r\n                        var next = first.nextSibling;\r\n                        p.removeChild(first);\r\n                        p.insertBefore(p.ownerDocument.createTextNode(s), next);\r\n                    }\r\n                } else {\r\n                    first.nodeValue = s;\r\n                }\r\n                if (m == null) {\r\n                    break;\r\n                }\r\n            } else if (m.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n                Utilities.coalesceText(m);\r\n            }\r\n        }\r\n    };\r\n\r\n    Utilities.instance_of = function (o, c) {\r\n        while (o != null) {\r\n            if (o.constructor === c) {\r\n                return true;\r\n            }\r\n            if (o === Object) {\r\n                return false;\r\n            }\r\n            o = o.constructor.superclass;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    Utilities.getElementById = function (n, id) {\r\n        // Note that this does not check the DTD to check for actual\r\n        // attributes of type ID, so this may be a bit wrong.\r\n        if (n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            if (n.getAttribute(\"id\") == id\r\n                || n.getAttributeNS(null, \"id\") == id) {\r\n                return n;\r\n            }\r\n        }\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            var res = Utilities.getElementById(m, id);\r\n            if (res != null) {\r\n                return res;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // XPathException ////////////////////////////////////////////////////////////\r\n\r\n    var XPathException = (function () {\r\n        function getMessage(code, exception) {\r\n            var msg = exception ? \": \" + exception.toString() : \"\";\r\n            switch (code) {\r\n                case XPathException.INVALID_EXPRESSION_ERR:\r\n                    return \"Invalid expression\" + msg;\r\n                case XPathException.TYPE_ERR:\r\n                    return \"Type error\" + msg;\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function XPathException(code, error, message) {\r\n            var err = Error.call(this, getMessage(code, error) || message);\r\n\r\n            err.code = code;\r\n            err.exception = error;\r\n\r\n            return err;\r\n        }\r\n\r\n        XPathException.prototype = Object.create(Error.prototype);\r\n        XPathException.prototype.constructor = XPathException;\r\n        XPathException.superclass = Error;\r\n\r\n        XPathException.prototype.toString = function () {\r\n            return this.message;\r\n        };\r\n\r\n        XPathException.fromMessage = function (message, error) {\r\n            return new XPathException(null, error, message);\r\n        };\r\n\r\n        XPathException.INVALID_EXPRESSION_ERR = 51;\r\n        XPathException.TYPE_ERR = 52;\r\n\r\n        return XPathException;\r\n    })();\r\n\r\n    // XPathExpression ///////////////////////////////////////////////////////////\r\n\r\n    XPathExpression.prototype = {};\r\n    XPathExpression.prototype.constructor = XPathExpression;\r\n    XPathExpression.superclass = Object.prototype;\r\n\r\n    function XPathExpression(e, r, p) {\r\n        this.xpath = p.parse(e);\r\n        this.context = new XPathContext();\r\n        this.context.namespaceResolver = new XPathNSResolverWrapper(r);\r\n    }\r\n\r\n    XPathExpression.getOwnerDocument = function (n) {\r\n        return n.nodeType === 9 /*Node.DOCUMENT_NODE*/ ? n : n.ownerDocument;\r\n    }\r\n\r\n    XPathExpression.detectHtmlDom = function (n) {\r\n        if (!n) { return false; }\r\n\r\n        var doc = XPathExpression.getOwnerDocument(n);\r\n\r\n        try {\r\n            return doc.implementation.hasFeature(\"HTML\", \"2.0\");\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    XPathExpression.prototype.evaluate = function (n, t, res) {\r\n        this.context.expressionContextNode = n;\r\n        // backward compatibility - no reliable way to detect whether the DOM is HTML, but\r\n        // this library has been using this method up until now, so we will continue to use it\r\n        // ONLY when using an XPathExpression\r\n        this.context.caseInsensitive = XPathExpression.detectHtmlDom(n);\r\n\r\n        var result = this.xpath.evaluate(this.context);\r\n        return new XPathResult(result, t);\r\n    }\r\n\r\n    // XPathNSResolverWrapper ////////////////////////////////////////////////////\r\n\r\n    XPathNSResolverWrapper.prototype = {};\r\n    XPathNSResolverWrapper.prototype.constructor = XPathNSResolverWrapper;\r\n    XPathNSResolverWrapper.superclass = Object.prototype;\r\n\r\n    function XPathNSResolverWrapper(r) {\r\n        this.xpathNSResolver = r;\r\n    }\r\n\r\n    XPathNSResolverWrapper.prototype.getNamespace = function (prefix, n) {\r\n        if (this.xpathNSResolver == null) {\r\n            return null;\r\n        }\r\n        return this.xpathNSResolver.lookupNamespaceURI(prefix);\r\n    };\r\n\r\n    // NodeXPathNSResolver ///////////////////////////////////////////////////////\r\n\r\n    NodeXPathNSResolver.prototype = {};\r\n    NodeXPathNSResolver.prototype.constructor = NodeXPathNSResolver;\r\n    NodeXPathNSResolver.superclass = Object.prototype;\r\n\r\n    function NodeXPathNSResolver(n) {\r\n        this.node = n;\r\n        this.namespaceResolver = new NamespaceResolver();\r\n    }\r\n\r\n    NodeXPathNSResolver.prototype.lookupNamespaceURI = function (prefix) {\r\n        return this.namespaceResolver.getNamespace(prefix, this.node);\r\n    };\r\n\r\n    // XPathResult ///////////////////////////////////////////////////////////////\r\n\r\n    XPathResult.prototype = {};\r\n    XPathResult.prototype.constructor = XPathResult;\r\n    XPathResult.superclass = Object.prototype;\r\n\r\n    function XPathResult(v, t) {\r\n        if (t == XPathResult.ANY_TYPE) {\r\n            if (v.constructor === XString) {\r\n                t = XPathResult.STRING_TYPE;\r\n            } else if (v.constructor === XNumber) {\r\n                t = XPathResult.NUMBER_TYPE;\r\n            } else if (v.constructor === XBoolean) {\r\n                t = XPathResult.BOOLEAN_TYPE;\r\n            } else if (v.constructor === XNodeSet) {\r\n                t = XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\r\n            }\r\n        }\r\n        this.resultType = t;\r\n        switch (t) {\r\n            case XPathResult.NUMBER_TYPE:\r\n                this.numberValue = v.numberValue();\r\n                return;\r\n            case XPathResult.STRING_TYPE:\r\n                this.stringValue = v.stringValue();\r\n                return;\r\n            case XPathResult.BOOLEAN_TYPE:\r\n                this.booleanValue = v.booleanValue();\r\n                return;\r\n            case XPathResult.ANY_UNORDERED_NODE_TYPE:\r\n            case XPathResult.FIRST_ORDERED_NODE_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.singleNodeValue = v.first();\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_ITERATOR_TYPE:\r\n            case XPathResult.ORDERED_NODE_ITERATOR_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.invalidIteratorState = false;\r\n                    this.nodes = v.toArray();\r\n                    this.iteratorIndex = 0;\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE:\r\n            case XPathResult.ORDERED_NODE_SNAPSHOT_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.nodes = v.toArray();\r\n                    this.snapshotLength = this.nodes.length;\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        throw new XPathException(XPathException.TYPE_ERR);\r\n    };\r\n\r\n    XPathResult.prototype.iterateNext = function () {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_ITERATOR_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[this.iteratorIndex++];\r\n    };\r\n\r\n    XPathResult.prototype.snapshotItem = function (i) {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_SNAPSHOT_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[i];\r\n    };\r\n\r\n    XPathResult.ANY_TYPE = 0;\r\n    XPathResult.NUMBER_TYPE = 1;\r\n    XPathResult.STRING_TYPE = 2;\r\n    XPathResult.BOOLEAN_TYPE = 3;\r\n    XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\r\n    XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\r\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\r\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\r\n    XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\r\n    XPathResult.FIRST_ORDERED_NODE_TYPE = 9;\r\n\r\n    // DOM 3 XPath support ///////////////////////////////////////////////////////\r\n\r\n    function installDOM3XPathSupport(doc, p) {\r\n        doc.createExpression = function (e, r) {\r\n            try {\r\n                return new XPathExpression(e, r, p);\r\n            } catch (e) {\r\n                throw new XPathException(XPathException.INVALID_EXPRESSION_ERR, e);\r\n            }\r\n        };\r\n        doc.createNSResolver = function (n) {\r\n            return new NodeXPathNSResolver(n);\r\n        };\r\n        doc.evaluate = function (e, cn, r, t, res) {\r\n            if (t < 0 || t > 9) {\r\n                throw { code: 0, toString: function () { return \"Request type not supported\"; } };\r\n            }\r\n            return doc.createExpression(e, r, p).evaluate(cn, t, res);\r\n        };\r\n    };\r\n\r\n    // ---------------------------------------------------------------------------\r\n\r\n    // Install DOM 3 XPath support for the current document.\r\n    try {\r\n        var shouldInstall = true;\r\n        try {\r\n            if (document.implementation\r\n                && document.implementation.hasFeature\r\n                && document.implementation.hasFeature(\"XPath\", null)) {\r\n                shouldInstall = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n        if (shouldInstall) {\r\n            installDOM3XPathSupport(document, new XPathParser());\r\n        }\r\n    } catch (e) {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------\r\n    // exports for node.js\r\n\r\n    installDOM3XPathSupport(exports, new XPathParser());\r\n\r\n    (function () {\r\n        var parser = new XPathParser();\r\n\r\n        var defaultNSResolver = new NamespaceResolver();\r\n        var defaultFunctionResolver = new FunctionResolver();\r\n        var defaultVariableResolver = new VariableResolver();\r\n\r\n        function makeNSResolverFromFunction(func) {\r\n            return {\r\n                getNamespace: function (prefix, node) {\r\n                    var ns = func(prefix, node);\r\n\r\n                    return ns || defaultNSResolver.getNamespace(prefix, node);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeNSResolverFromObject(obj) {\r\n            return makeNSResolverFromFunction(obj.getNamespace.bind(obj));\r\n        }\r\n\r\n        function makeNSResolverFromMap(map) {\r\n            return makeNSResolverFromFunction(function (prefix) {\r\n                return map[prefix];\r\n            });\r\n        }\r\n\r\n        function makeNSResolver(resolver) {\r\n            if (resolver && typeof resolver.getNamespace === \"function\") {\r\n                return makeNSResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeNSResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume prefix -> uri mapping\r\n            if (typeof resolver === \"object\") {\r\n                return makeNSResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultNSResolver;\r\n        }\r\n\r\n        /** Converts native JavaScript types to their XPath library equivalent */\r\n        function convertValue(value) {\r\n            if (value === null ||\r\n                typeof value === \"undefined\" ||\r\n                value instanceof XString ||\r\n                value instanceof XBoolean ||\r\n                value instanceof XNumber ||\r\n                value instanceof XNodeSet) {\r\n                return value;\r\n            }\r\n\r\n            switch (typeof value) {\r\n                case \"string\": return new XString(value);\r\n                case \"boolean\": return new XBoolean(value);\r\n                case \"number\": return new XNumber(value);\r\n            }\r\n\r\n            // assume node(s)\r\n            var ns = new XNodeSet();\r\n            ns.addArray([].concat(value));\r\n            return ns;\r\n        }\r\n\r\n        function makeEvaluator(func) {\r\n            return function (context) {\r\n                var args = Array.prototype.slice.call(arguments, 1).map(function (arg) {\r\n                    return arg.evaluate(context);\r\n                });\r\n                var result = func.apply(this, [].concat(context, args));\r\n                return convertValue(result);\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromFunction(func) {\r\n            return {\r\n                getFunction: function (name, namespace) {\r\n                    var found = func(name, namespace);\r\n                    if (found) {\r\n                        return makeEvaluator(found);\r\n                    }\r\n                    return defaultFunctionResolver.getFunction(name, namespace);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromObject(obj) {\r\n            return makeFunctionResolverFromFunction(obj.getFunction.bind(obj));\r\n        }\r\n\r\n        function makeFunctionResolverFromMap(map) {\r\n            return makeFunctionResolverFromFunction(function (name) {\r\n                return map[name];\r\n            });\r\n        }\r\n\r\n        function makeFunctionResolver(resolver) {\r\n            if (resolver && typeof resolver.getFunction === \"function\") {\r\n                return makeFunctionResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeFunctionResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume map\r\n            if (typeof resolver === \"object\") {\r\n                return makeFunctionResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultFunctionResolver;\r\n        }\r\n\r\n        function makeVariableResolverFromFunction(func) {\r\n            return {\r\n                getVariable: function (name, namespace) {\r\n                    var value = func(name, namespace);\r\n                    return convertValue(value);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeVariableResolver(resolver) {\r\n            if (resolver) {\r\n                if (typeof resolver.getVariable === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver.getVariable.bind(resolver));\r\n                }\r\n\r\n                if (typeof resolver === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver);\r\n                }\r\n\r\n                // assume map\r\n                if (typeof resolver === \"object\") {\r\n                    return makeVariableResolverFromFunction(function (name) {\r\n                        return resolver[name];\r\n                    });\r\n                }\r\n            }\r\n\r\n            return defaultVariableResolver;\r\n        }\r\n\r\n        function copyIfPresent(prop, dest, source) {\r\n            if (prop in source) { dest[prop] = source[prop]; }\r\n        }\r\n\r\n        function makeContext(options) {\r\n            var context = new XPathContext();\r\n\r\n            if (options) {\r\n                context.namespaceResolver = makeNSResolver(options.namespaces);\r\n                context.functionResolver = makeFunctionResolver(options.functions);\r\n                context.variableResolver = makeVariableResolver(options.variables);\r\n                context.expressionContextNode = options.node;\r\n                copyIfPresent('allowAnyNamespaceForNoPrefix', context, options);\r\n                copyIfPresent('isHtml', context, options);\r\n            } else {\r\n                context.namespaceResolver = defaultNSResolver;\r\n            }\r\n\r\n            return context;\r\n        }\r\n\r\n        function evaluate(parsedExpression, options) {\r\n            var context = makeContext(options);\r\n\r\n            return parsedExpression.evaluate(context);\r\n        }\r\n\r\n        var evaluatorPrototype = {\r\n            evaluate: function (options) {\r\n                return evaluate(this.expression, options);\r\n            }\r\n\r\n            , evaluateNumber: function (options) {\r\n                return this.evaluate(options).numberValue();\r\n            }\r\n\r\n            , evaluateString: function (options) {\r\n                return this.evaluate(options).stringValue();\r\n            }\r\n\r\n            , evaluateBoolean: function (options) {\r\n                return this.evaluate(options).booleanValue();\r\n            }\r\n\r\n            , evaluateNodeSet: function (options) {\r\n                return this.evaluate(options).nodeset();\r\n            }\r\n\r\n            , select: function (options) {\r\n                return this.evaluateNodeSet(options).toArray()\r\n            }\r\n\r\n            , select1: function (options) {\r\n                return this.select(options)[0];\r\n            }\r\n        };\r\n\r\n        function parse(xpath) {\r\n            var parsed = parser.parse(xpath);\r\n\r\n            return Object.create(evaluatorPrototype, {\r\n                expression: {\r\n                    value: parsed\r\n                }\r\n            });\r\n        }\r\n\r\n        exports.parse = parse;\r\n    })();\r\n\r\n    assign(\r\n        exports,\r\n        {\r\n            XPath,\r\n            XPathParser,\r\n            XPathResult,\r\n\r\n            Step,\r\n            PathExpr,\r\n            NodeTest,\r\n            LocationPath,\r\n\r\n            OrOperation,\r\n            AndOperation,\r\n\r\n            BarOperation,\r\n\r\n            EqualsOperation,\r\n            NotEqualOperation,\r\n            LessThanOperation,\r\n            GreaterThanOperation,\r\n            LessThanOrEqualOperation,\r\n            GreaterThanOrEqualOperation,\r\n\r\n            PlusOperation,\r\n            MinusOperation,\r\n            MultiplyOperation,\r\n            DivOperation,\r\n            ModOperation,\r\n            UnaryMinusOperation,\r\n\r\n            FunctionCall,\r\n            VariableReference,\r\n\r\n            XPathContext,\r\n\r\n            XNodeSet,\r\n            XBoolean,\r\n            XString,\r\n            XNumber,\r\n\r\n            NamespaceResolver,\r\n            FunctionResolver,\r\n            VariableResolver,\r\n\r\n            Utilities,\r\n        }\r\n    );\r\n\r\n    // helper\r\n    exports.select = function (e, doc, single) {\r\n        return exports.selectWithResolver(e, doc, null, single);\r\n    };\r\n\r\n    exports.useNamespaces = function (mappings) {\r\n        var resolver = {\r\n            mappings: mappings || {},\r\n            lookupNamespaceURI: function (prefix) {\r\n                return this.mappings[prefix];\r\n            }\r\n        };\r\n\r\n        return function (e, doc, single) {\r\n            return exports.selectWithResolver(e, doc, resolver, single);\r\n        };\r\n    };\r\n\r\n    exports.selectWithResolver = function (e, doc, resolver, single) {\r\n        var expression = new XPathExpression(e, resolver, new XPathParser());\r\n        var type = XPathResult.ANY_TYPE;\r\n\r\n        var result = expression.evaluate(doc, type, null);\r\n\r\n        if (result.resultType == XPathResult.STRING_TYPE) {\r\n            result = result.stringValue;\r\n        }\r\n        else if (result.resultType == XPathResult.NUMBER_TYPE) {\r\n            result = result.numberValue;\r\n        }\r\n        else if (result.resultType == XPathResult.BOOLEAN_TYPE) {\r\n            result = result.booleanValue;\r\n        }\r\n        else {\r\n            result = result.nodes;\r\n            if (single) {\r\n                result = result[0];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    exports.select1 = function (e, doc) {\r\n        return exports.select(e, doc, true);\r\n    };\r\n\r\n    // end non-node wrapper\r\n})(xpath);\r\n"]},"metadata":{},"sourceType":"script"}