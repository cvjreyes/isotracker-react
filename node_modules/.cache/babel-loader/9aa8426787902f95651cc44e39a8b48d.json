{"ast":null,"code":"/**\r\n * Apply the `colspan`/`rowspan` properties.\r\n *\r\n * @param {HTMLElement} TD The soon-to-be-modified cell.\r\n * @param {MergedCellCoords} mergedCellInfo The merged cell in question.\r\n * @param {number} row Row index.\r\n * @param {number} col Column index.\r\n */\nexport function applySpanProperties(TD, mergedCellInfo, row, col) {\n  if (mergedCellInfo) {\n    if (mergedCellInfo.row === row && mergedCellInfo.col === col) {\n      TD.setAttribute('rowspan', mergedCellInfo.rowspan.toString());\n      TD.setAttribute('colspan', mergedCellInfo.colspan.toString());\n    } else {\n      TD.removeAttribute('rowspan');\n      TD.removeAttribute('colspan');\n      TD.style.display = 'none';\n    }\n  } else {\n    TD.removeAttribute('rowspan');\n    TD.removeAttribute('colspan');\n    TD.style.display = '';\n  }\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/mergeCells/utils.mjs"],"names":["applySpanProperties","TD","mergedCellInfo","row","col","setAttribute","rowspan","toString","colspan","removeAttribute","style","display"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,mBAAT,CAA6BC,EAA7B,EAAiCC,cAAjC,EAAiDC,GAAjD,EAAsDC,GAAtD,EAA2D;AAChE,MAAIF,cAAJ,EAAoB;AAClB,QAAIA,cAAc,CAACC,GAAf,KAAuBA,GAAvB,IAA8BD,cAAc,CAACE,GAAf,KAAuBA,GAAzD,EAA8D;AAC5DH,MAAAA,EAAE,CAACI,YAAH,CAAgB,SAAhB,EAA2BH,cAAc,CAACI,OAAf,CAAuBC,QAAvB,EAA3B;AACAN,MAAAA,EAAE,CAACI,YAAH,CAAgB,SAAhB,EAA2BH,cAAc,CAACM,OAAf,CAAuBD,QAAvB,EAA3B;AACD,KAHD,MAGO;AACLN,MAAAA,EAAE,CAACQ,eAAH,CAAmB,SAAnB;AACAR,MAAAA,EAAE,CAACQ,eAAH,CAAmB,SAAnB;AACAR,MAAAA,EAAE,CAACS,KAAH,CAASC,OAAT,GAAmB,MAAnB;AACD;AACF,GATD,MASO;AACLV,IAAAA,EAAE,CAACQ,eAAH,CAAmB,SAAnB;AACAR,IAAAA,EAAE,CAACQ,eAAH,CAAmB,SAAnB;AACAR,IAAAA,EAAE,CAACS,KAAH,CAASC,OAAT,GAAmB,EAAnB;AACD;AACF","sourcesContent":["import \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.regexp.to-string.js\";\r\n\r\n/**\r\n * Apply the `colspan`/`rowspan` properties.\r\n *\r\n * @param {HTMLElement} TD The soon-to-be-modified cell.\r\n * @param {MergedCellCoords} mergedCellInfo The merged cell in question.\r\n * @param {number} row Row index.\r\n * @param {number} col Column index.\r\n */\r\nexport function applySpanProperties(TD, mergedCellInfo, row, col) {\r\n  if (mergedCellInfo) {\r\n    if (mergedCellInfo.row === row && mergedCellInfo.col === col) {\r\n      TD.setAttribute('rowspan', mergedCellInfo.rowspan.toString());\r\n      TD.setAttribute('colspan', mergedCellInfo.colspan.toString());\r\n    } else {\r\n      TD.removeAttribute('rowspan');\r\n      TD.removeAttribute('colspan');\r\n      TD.style.display = 'none';\r\n    }\r\n  } else {\r\n    TD.removeAttribute('rowspan');\r\n    TD.removeAttribute('colspan');\r\n    TD.style.display = '';\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}