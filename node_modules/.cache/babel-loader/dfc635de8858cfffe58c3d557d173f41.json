{"ast":null,"code":"import _regeneratorRuntime from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from'recharts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProgressPlotPiping=/*#__PURE__*/function(_React$PureComponent){_inherits(ProgressPlotPiping,_React$PureComponent);var _super=_createSuper(ProgressPlotPiping);function ProgressPlotPiping(){var _this;_classCallCheck(this,ProgressPlotPiping);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={data:[]};return _this;}_createClass(ProgressPlotPiping,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _this2=this;var options;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:options={method:\"GET\",headers:{\"Content-Type\":\"application/json\"}};_context2.next=3;return fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/gpipes\",options).then(function(response){return response.json();}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(json){var weeks,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:weeks=[];for(i=0;i<json.rows.length;i++){weeks.push({name:\"W\"+json.rows[i].week,estimated:json.rows[i].estimated,progress:json.rows[i].progress});}_context.next=4;return _this2.setState({data:weeks});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());case 3:case\"end\":return _context2.stop();}}},_callee2);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"90%\",children:/*#__PURE__*/_jsxs(LineChart,{width:500,height:400,data:this.state.data,margin:{top:35,right:30,left:20,bottom:-15},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:\"Progress(%)\",position:\"insideLeft\",angle:-90,dy:30}}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"progress\",stroke:\"blue\",activeDot:{r:8}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"estimated\",stroke:\"red\"})]})});}}]);return ProgressPlotPiping;}(React.PureComponent);ProgressPlotPiping.demoUrl='https://codesandbox.io/s/simple-line-chart-kec3v';export{ProgressPlotPiping as default};","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/progressPlotPiping/progressPlotPiping.js"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ProgressPlotPiping","state","data","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","weeks","i","rows","length","push","name","week","estimated","progress","setState","top","right","left","bottom","value","position","angle","dy","r","PureComponent","demoUrl"],"mappings":"yvBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,KAA1B,CAAiCC,KAAjC,CAAwCC,aAAxC,CAAuDC,OAAvD,CAAgEC,MAAhE,CAAwEC,mBAAxE,KAAmG,UAAnG,C,2FAEuBC,CAAAA,kB,+XAGtBC,K,CAAQ,CACPC,IAAI,CAAE,EADC,C,yKAKR,oKAEOC,OAFP,CAEiB,CACfC,MAAM,CAAE,KADO,CAEfC,OAAO,CAAE,CACR,eAAgB,kBADR,CAFM,CAFjB,wBASOC,CAAAA,KAAK,CAAC,UAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAtB,CAAuC,GAAvC,CAA2CF,OAAO,CAACC,GAAR,CAAYE,mBAAvD,CAA2E,SAA5E,CAAuFP,OAAvF,CAAL,CACLQ,IADK,CACA,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADR,EAELF,IAFK,0FAEA,iBAAME,IAAN,8HACDC,KADC,CACO,EADP,CAEL,IAAQC,CAAR,CAAY,CAAZ,CAAeA,CAAC,CAAGF,IAAI,CAACG,IAAL,CAAUC,MAA7B,CAAqCF,CAAC,EAAtC,CAAyC,CACxCD,KAAK,CAACI,IAAN,CAAW,CAACC,IAAI,CAAE,IAAIN,IAAI,CAACG,IAAL,CAAUD,CAAV,EAAaK,IAAxB,CAA8BC,SAAS,CAAER,IAAI,CAACG,IAAL,CAAUD,CAAV,EAAaM,SAAtD,CAAiEC,QAAQ,CAAET,IAAI,CAACG,IAAL,CAAUD,CAAV,EAAaO,QAAxF,CAAX,EACA,CAJI,sBAKC,CAAA,MAAI,CAACC,QAAL,CAAc,CAACrB,IAAI,CAAEY,KAAP,CAAd,CALD,uDAFA,+DATP,yD,mIAqBA,iBAAS,CACP,mBACD,KAAC,mBAAD,EAAqB,KAAK,CAAC,MAA3B,CAAkC,MAAM,CAAC,KAAzC,uBACE,MAAC,SAAD,EACD,KAAK,CAAE,GADN,CAED,MAAM,CAAE,GAFP,CAGD,IAAI,CAAE,KAAKb,KAAL,CAAWC,IAHhB,CAID,MAAM,CAAE,CACNsB,GAAG,CAAE,EADC,CAENC,KAAK,CAAE,EAFD,CAGNC,IAAI,CAAE,EAHA,CAINC,MAAM,CAAE,CAAC,EAJH,CAJP,wBAWD,KAAC,aAAD,EAAe,eAAe,CAAC,KAA/B,EAXC,cAYD,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EAZC,cAaD,KAAC,KAAD,EAAO,KAAK,CAAE,CAAEC,KAAK,CAAE,aAAT,CAAwBC,QAAQ,CAAE,YAAlC,CAAgDC,KAAK,CAAE,CAAC,EAAxD,CAA8DC,EAAE,CAAE,EAAlE,CAAd,EAbC,cAcD,KAAC,OAAD,IAdC,cAeD,KAAC,MAAD,IAfC,cAgBD,KAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,UAA9B,CAAyC,MAAM,CAAC,MAAhD,CAAuD,SAAS,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAlE,EAhBC,cAiBD,KAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,WAA9B,CAA0C,MAAM,CAAC,KAAjD,EAjBC,GADF,EADC,CAuBD,C,gCArDgDzC,KAAK,CAAC0C,a,EAAjCjC,kB,CACfkC,O,CAAU,kD,QADKlC,kB","sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n  export default class ProgressPlotPiping extends React.PureComponent {\r\n\tstatic demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';\r\n\t\r\n\tstate = {\r\n\t\tdata: []\r\n\t  };\r\n\r\n\r\n\tasync componentDidMount (){\r\n\r\n\t\tconst options = {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/gpipes\", options)\r\n\t\t.then(response => response.json())\r\n\t\t.then(async json=>{\r\n\t\t\tlet weeks = []\r\n\t\t\tfor(let i = 0; i < json.rows.length; i++){\r\n\t\t\t\tweeks.push({name: \"W\"+json.rows[i].week, estimated: json.rows[i].estimated, progress: json.rows[i].progress})\r\n\t\t\t}\r\n\t\t\tawait this.setState({data: weeks})\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<ResponsiveContainer width=\"100%\" height=\"90%\">\r\n\t\t  <LineChart\r\n\t\t\twidth={500}\r\n\t\t\theight={400}\r\n\t\t\tdata={this.state.data}\r\n\t\t\tmargin={{\r\n\t\t\t  top: 35,\r\n\t\t\t  right: 30,\r\n\t\t\t  left: 20,\r\n\t\t\t  bottom: -15,\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t<XAxis dataKey=\"name\" />\r\n\t\t\t<YAxis label={{ value: \"Progress(%)\", position: \"insideLeft\", angle: -90,   dy: 30}} />\r\n\t\t\t<Tooltip />\r\n\t\t\t<Legend />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"progress\" stroke=\"blue\" activeDot={{ r: 8 }} />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"estimated\" stroke=\"red\" />\r\n\t\t  </LineChart>\r\n\t\t</ResponsiveContainer>\r\n\t  );\r\n\t}\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}