{"ast":null,"code":"import { baseRenderer } from \"../baseRenderer/index.mjs\";\nimport { fastInnerHTML } from \"../../helpers/dom/element.mjs\";\nexport var RENDERER_TYPE = 'html';\n/**\r\n * @private\r\n * @param {Core} instance The Handsontable instance.\r\n * @param {HTMLTableCellElement} TD The rendered cell element.\r\n * @param {number} row The visual row index.\r\n * @param {number} col The visual column index.\r\n * @param {number|string} prop The column property (passed when datasource is an array of objects).\r\n * @param {*} value The rendered value.\r\n * @param {object} cellProperties The cell meta object ({@see Core#getCellMeta}).\r\n */\n\nexport function htmlRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  baseRenderer.apply(this, [instance, TD, row, col, prop, value, cellProperties]);\n  fastInnerHTML(TD, value === null || value === void 0 ? '' : value, false);\n}\nhtmlRenderer.RENDERER_TYPE = RENDERER_TYPE;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/renderers/htmlRenderer/htmlRenderer.mjs"],"names":["baseRenderer","fastInnerHTML","RENDERER_TYPE","htmlRenderer","instance","TD","row","col","prop","value","cellProperties","apply"],"mappings":"AAAA,SAASA,YAAT,QAA6B,2BAA7B;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,OAAO,IAAIC,aAAa,GAAG,MAApB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,EAAhC,EAAoCC,GAApC,EAAyCC,GAAzC,EAA8CC,IAA9C,EAAoDC,KAApD,EAA2DC,cAA3D,EAA2E;AAChFV,EAAAA,YAAY,CAACW,KAAb,CAAmB,IAAnB,EAAyB,CAACP,QAAD,EAAWC,EAAX,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,cAAtC,CAAzB;AACAT,EAAAA,aAAa,CAACI,EAAD,EAAKI,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,EAArC,GAA0CA,KAA/C,EAAsD,KAAtD,CAAb;AACD;AACDN,YAAY,CAACD,aAAb,GAA6BA,aAA7B","sourcesContent":["import { baseRenderer } from \"../baseRenderer/index.mjs\";\r\nimport { fastInnerHTML } from \"../../helpers/dom/element.mjs\";\r\nexport var RENDERER_TYPE = 'html';\r\n/**\r\n * @private\r\n * @param {Core} instance The Handsontable instance.\r\n * @param {HTMLTableCellElement} TD The rendered cell element.\r\n * @param {number} row The visual row index.\r\n * @param {number} col The visual column index.\r\n * @param {number|string} prop The column property (passed when datasource is an array of objects).\r\n * @param {*} value The rendered value.\r\n * @param {object} cellProperties The cell meta object ({@see Core#getCellMeta}).\r\n */\r\n\r\nexport function htmlRenderer(instance, TD, row, col, prop, value, cellProperties) {\r\n  baseRenderer.apply(this, [instance, TD, row, col, prop, value, cellProperties]);\r\n  fastInnerHTML(TD, value === null || value === void 0 ? '' : value, false);\r\n}\r\nhtmlRenderer.RENDERER_TYPE = RENDERER_TYPE;"]},"metadata":{},"sourceType":"module"}