{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\dragAndDrop\\\\dragAndDrop.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Upload, Button, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport reqwest from 'reqwest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DragAndDrop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileList: [],\n      uploading: false\n    };\n\n    this.handleUpload = () => {\n      const {\n        fileList\n      } = this.state;\n      const formData = new FormData();\n      fileList.forEach(file => {\n        formData.append('files[]', file);\n      });\n      this.setState({\n        uploading: true\n      }); // You can use any AJAX library you like\n\n      const props = {\n        name: 'file',\n        multiple: true,\n        action: 'https://localhost:5000/upload',\n\n        onChange(info) {\n          const {\n            status\n          } = info.file;\n\n          if (status !== 'uploading') {\n            console.log(info.file, info.fileList);\n          }\n\n          if (status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully.`);\n          } else if (status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n          }\n        }\n\n      };\n    };\n  }\n\n  render() {\n    const {\n      uploading,\n      fileList\n    } = this.state;\n    const props = {\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      beforeUpload: file => {\n        this.setState(state => ({\n          fileList: [...state.fileList, file]\n        }));\n        return false;\n      },\n      fileList\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Upload, { ...props,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this),\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.handleUpload,\n        disabled: fileList.length === 0,\n        loading: uploading,\n        style: {\n          marginTop: 16\n        },\n        children: uploading ? 'Uploading' : 'Start Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default DragAndDrop;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/dragAndDrop/dragAndDrop.js"],"names":["React","Upload","Button","message","UploadOutlined","reqwest","DragAndDrop","Component","state","fileList","uploading","handleUpload","formData","FormData","forEach","file","append","setState","props","name","multiple","action","onChange","info","status","console","log","success","error","render","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","length","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,QAAwC,MAAxC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,OAAP,MAAoB,SAApB;;;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KADgC;;AAAA,SAMxCC,YANwC,GAMzB,MAAM;AACnB,YAAM;AAAEF,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAMI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAJ,MAAAA,QAAQ,CAACK,OAAT,CAAiBC,IAAI,IAAI;AACvBH,QAAAA,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2BD,IAA3B;AACD,OAFD;AAIA,WAAKE,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAE;AADC,OAAd,EAPmB,CAWnB;;AACA,YAAMQ,KAAK,GAAG;AACVC,QAAAA,IAAI,EAAE,MADI;AAEVC,QAAAA,QAAQ,EAAE,IAFA;AAGVC,QAAAA,MAAM,EAAE,+BAHE;;AAIVC,QAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,gBAAM;AAAEC,YAAAA;AAAF,cAAaD,IAAI,CAACR,IAAxB;;AACA,cAAIS,MAAM,KAAK,WAAf,EAA4B;AAC1BC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACR,IAAjB,EAAuBQ,IAAI,CAACd,QAA5B;AACD;;AACD,cAAIe,MAAM,KAAK,MAAf,EAAuB;AACrBrB,YAAAA,OAAO,CAACwB,OAAR,CAAiB,GAAEJ,IAAI,CAACR,IAAL,CAAUI,IAAK,8BAAlC;AACD,WAFD,MAEO,IAAIK,MAAM,KAAK,OAAf,EAAwB;AAC7BrB,YAAAA,OAAO,CAACyB,KAAR,CAAe,GAAEL,IAAI,CAACR,IAAL,CAAUI,IAAK,sBAAhC;AACD;AACF;;AAdS,OAAd;AAgBD,KAlCuC;AAAA;;AAoCxCU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAA0B,KAAKD,KAArC;AACA,UAAMU,KAAK,GAAG;AACZY,MAAAA,QAAQ,EAAEf,IAAI,IAAI;AAChB,aAAKE,QAAL,CAAcT,KAAK,IAAI;AACrB,gBAAMuB,KAAK,GAAGvB,KAAK,CAACC,QAAN,CAAeuB,OAAf,CAAuBjB,IAAvB,CAAd;AACA,gBAAMkB,WAAW,GAAGzB,KAAK,CAACC,QAAN,CAAeyB,KAAf,EAApB;AACAD,UAAAA,WAAW,CAACE,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACA,iBAAO;AACLtB,YAAAA,QAAQ,EAAEwB;AADL,WAAP;AAGD,SAPD;AAQD,OAVW;AAWZG,MAAAA,YAAY,EAAErB,IAAI,IAAI;AACpB,aAAKE,QAAL,CAAcT,KAAK,KAAK;AACtBC,UAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAV,EAAoBM,IAApB;AADY,SAAL,CAAnB;AAGA,eAAO,KAAP;AACD,OAhBW;AAiBZN,MAAAA;AAjBY,KAAd;AAoBA,wBACE;AAAA,8BACE,QAAC,MAAD,OAAYS,KAAZ;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE,KAAKP,YAFhB;AAGE,QAAA,QAAQ,EAAEF,QAAQ,CAAC4B,MAAT,KAAoB,CAHhC;AAIE,QAAA,OAAO,EAAE3B,SAJX;AAKE,QAAA,KAAK,EAAE;AAAE4B,UAAAA,SAAS,EAAE;AAAb,SALT;AAAA,kBAOG5B,SAAS,GAAG,WAAH,GAAiB;AAP7B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAgBD;;AA1EuC;;AA6E1C,eAAeJ,WAAf","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport reqwest from 'reqwest';\r\n\r\nclass DragAndDrop extends React.Component {\r\n  state = {\r\n    fileList: [],\r\n    uploading: false,\r\n  };\r\n\r\n  handleUpload = () => {\r\n    const { fileList } = this.state;\r\n    const formData = new FormData();\r\n    fileList.forEach(file => {\r\n      formData.append('files[]', file);\r\n    });\r\n\r\n    this.setState({\r\n      uploading: true,\r\n    });\r\n\r\n    // You can use any AJAX library you like\r\n    const props = {\r\n        name: 'file',\r\n        multiple: true,\r\n        action: 'https://localhost:5000/upload',\r\n        onChange(info) {\r\n          const { status } = info.file;\r\n          if (status !== 'uploading') {\r\n            console.log(info.file, info.fileList);\r\n          }\r\n          if (status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully.`);\r\n          } else if (status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n          }\r\n        },\r\n      };\r\n  };\r\n\r\n  render() {\r\n    const { uploading, fileList } = this.state;\r\n    const props = {\r\n      onRemove: file => {\r\n        this.setState(state => {\r\n          const index = state.fileList.indexOf(file);\r\n          const newFileList = state.fileList.slice();\r\n          newFileList.splice(index, 1);\r\n          return {\r\n            fileList: newFileList,\r\n          };\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [...state.fileList, file],\r\n        }));\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Upload {...props}>\r\n          <Button icon={<UploadOutlined />}>Select File</Button>\r\n        </Upload>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={this.handleUpload}\r\n          disabled={fileList.length === 0}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? 'Uploading' : 'Start Upload'}\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragAndDrop;"]},"metadata":{},"sourceType":"module"}