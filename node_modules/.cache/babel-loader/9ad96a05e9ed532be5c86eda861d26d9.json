{"ast":null,"code":"import { getValidSelection } from \"../utils.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nimport { isDefined } from \"../../../helpers/mixed.mjs\";\nexport var KEY = 'col_right';\n/**\r\n * @returns {object}\r\n */\n\nexport default function columnRightItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_INSERT_RIGHT);\n    },\n    callback: function callback(key, normalizedSelection) {\n      var isSelectedByCorner = this.selection.isSelectedByCorner();\n      var columnRight = 0;\n\n      if (isSelectedByCorner) {\n        columnRight = this.countCols();\n      } else {\n        var _latestSelection$end;\n\n        var latestSelection = normalizedSelection[Math.max(normalizedSelection.length - 1, 0)];\n        var selectedColumn = latestSelection === null || latestSelection === void 0 ? void 0 : (_latestSelection$end = latestSelection.end) === null || _latestSelection$end === void 0 ? void 0 : _latestSelection$end.col; // If there is no selection we have clicked on the corner and there is no data.\n\n        columnRight = isDefined(selectedColumn) ? selectedColumn + 1 : 0;\n      }\n\n      this.alter('insert_col', columnRight, 1, 'ContextMenu.columnRight');\n\n      if (isSelectedByCorner) {\n        this.selectAll();\n      }\n    },\n    disabled: function disabled() {\n      if (!this.isColumnModificationAllowed()) {\n        return true;\n      }\n\n      var selected = getValidSelection(this);\n\n      if (!selected) {\n        return true;\n      }\n\n      if (this.selection.isSelectedByCorner()) {\n        // Enable \"Insert column right\" always when the menu is triggered by corner click.\n        return false;\n      }\n\n      return this.selection.isSelectedByRowHeader() || this.countCols() >= this.getSettings().maxCols;\n    },\n    hidden: function hidden() {\n      return !this.getSettings().allowInsertColumn;\n    }\n  };\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/contextMenu/predefinedItems/columnRight.mjs"],"names":["getValidSelection","C","isDefined","KEY","columnRightItem","key","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_INSERT_RIGHT","callback","normalizedSelection","isSelectedByCorner","selection","columnRight","countCols","_latestSelection$end","latestSelection","Math","max","length","selectedColumn","end","col","alter","selectAll","disabled","isColumnModificationAllowed","selected","isSelectedByRowHeader","getSettings","maxCols","hidden","allowInsertColumn"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,OAAO,KAAKC,CAAZ,MAAmB,6BAAnB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,OAAO,IAAIC,GAAG,GAAG,WAAV;AACP;AACA;AACA;;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,SAAO;AACLC,IAAAA,GAAG,EAAEF,GADA;AAELG,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,aAAO,KAAKC,mBAAL,CAAyBN,CAAC,CAACO,8BAA3B,CAAP;AACD,KAJI;AAKLC,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBJ,GAAlB,EAAuBK,mBAAvB,EAA4C;AACpD,UAAIC,kBAAkB,GAAG,KAAKC,SAAL,CAAeD,kBAAf,EAAzB;AACA,UAAIE,WAAW,GAAG,CAAlB;;AAEA,UAAIF,kBAAJ,EAAwB;AACtBE,QAAAA,WAAW,GAAG,KAAKC,SAAL,EAAd;AACD,OAFD,MAEO;AACL,YAAIC,oBAAJ;;AAEA,YAAIC,eAAe,GAAGN,mBAAmB,CAACO,IAAI,CAACC,GAAL,CAASR,mBAAmB,CAACS,MAApB,GAA6B,CAAtC,EAAyC,CAAzC,CAAD,CAAzC;AACA,YAAIC,cAAc,GAAGJ,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkE,CAACD,oBAAoB,GAAGC,eAAe,CAACK,GAAxC,MAAiD,IAAjD,IAAyDN,oBAAoB,KAAK,KAAK,CAAvF,GAA2F,KAAK,CAAhG,GAAoGA,oBAAoB,CAACO,GAAhN,CAJK,CAIgN;;AAErNT,QAAAA,WAAW,GAAGX,SAAS,CAACkB,cAAD,CAAT,GAA4BA,cAAc,GAAG,CAA7C,GAAiD,CAA/D;AACD;;AAED,WAAKG,KAAL,CAAW,YAAX,EAAyBV,WAAzB,EAAsC,CAAtC,EAAyC,yBAAzC;;AAEA,UAAIF,kBAAJ,EAAwB;AACtB,aAAKa,SAAL;AACD;AACF,KAzBI;AA0BLC,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,UAAI,CAAC,KAAKC,2BAAL,EAAL,EAAyC;AACvC,eAAO,IAAP;AACD;;AAED,UAAIC,QAAQ,GAAG3B,iBAAiB,CAAC,IAAD,CAAhC;;AAEA,UAAI,CAAC2B,QAAL,EAAe;AACb,eAAO,IAAP;AACD;;AAED,UAAI,KAAKf,SAAL,CAAeD,kBAAf,EAAJ,EAAyC;AACvC;AACA,eAAO,KAAP;AACD;;AAED,aAAO,KAAKC,SAAL,CAAegB,qBAAf,MAA0C,KAAKd,SAAL,MAAoB,KAAKe,WAAL,GAAmBC,OAAxF;AACD,KA3CI;AA4CLC,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,aAAO,CAAC,KAAKF,WAAL,GAAmBG,iBAA3B;AACD;AA9CI,GAAP;AAgDD","sourcesContent":["import { getValidSelection } from \"../utils.mjs\";\r\nimport * as C from \"../../../i18n/constants.mjs\";\r\nimport { isDefined } from \"../../../helpers/mixed.mjs\";\r\nexport var KEY = 'col_right';\r\n/**\r\n * @returns {object}\r\n */\r\n\r\nexport default function columnRightItem() {\r\n  return {\r\n    key: KEY,\r\n    name: function name() {\r\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_INSERT_RIGHT);\r\n    },\r\n    callback: function callback(key, normalizedSelection) {\r\n      var isSelectedByCorner = this.selection.isSelectedByCorner();\r\n      var columnRight = 0;\r\n\r\n      if (isSelectedByCorner) {\r\n        columnRight = this.countCols();\r\n      } else {\r\n        var _latestSelection$end;\r\n\r\n        var latestSelection = normalizedSelection[Math.max(normalizedSelection.length - 1, 0)];\r\n        var selectedColumn = latestSelection === null || latestSelection === void 0 ? void 0 : (_latestSelection$end = latestSelection.end) === null || _latestSelection$end === void 0 ? void 0 : _latestSelection$end.col; // If there is no selection we have clicked on the corner and there is no data.\r\n\r\n        columnRight = isDefined(selectedColumn) ? selectedColumn + 1 : 0;\r\n      }\r\n\r\n      this.alter('insert_col', columnRight, 1, 'ContextMenu.columnRight');\r\n\r\n      if (isSelectedByCorner) {\r\n        this.selectAll();\r\n      }\r\n    },\r\n    disabled: function disabled() {\r\n      if (!this.isColumnModificationAllowed()) {\r\n        return true;\r\n      }\r\n\r\n      var selected = getValidSelection(this);\r\n\r\n      if (!selected) {\r\n        return true;\r\n      }\r\n\r\n      if (this.selection.isSelectedByCorner()) {\r\n        // Enable \"Insert column right\" always when the menu is triggered by corner click.\r\n        return false;\r\n      }\r\n\r\n      return this.selection.isSelectedByRowHeader() || this.countCols() >= this.getSettings().maxCols;\r\n    },\r\n    hidden: function hidden() {\r\n      return !this.getSettings().allowInsertColumn;\r\n    }\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}