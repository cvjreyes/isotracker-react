{"ast":null,"code":"import { defineGetter } from \"../../../../../helpers/object.mjs\";\nvar MIXIN_NAME = 'calculatedRows';\n/**\r\n * Mixin for the subclasses of `Table` with implementations of\r\n * helper methods that are related to rows.\r\n * This mixin is meant to be applied in the subclasses of `Table`\r\n * that use virtual rendering in the vertical axis.\r\n *\r\n * @type {object}\r\n */\n\nvar calculatedRows = {\n  /**\r\n   * Get the source index of the first rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstRenderedRow: function getFirstRenderedRow() {\n    var startRow = this.wot.wtViewport.rowsRenderCalculator.startRow;\n\n    if (startRow === null) {\n      return -1;\n    }\n\n    return startRow;\n  },\n\n  /**\r\n   * Get the source index of the first row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstVisibleRow: function getFirstVisibleRow() {\n    var startRow = this.wot.wtViewport.rowsVisibleCalculator.startRow;\n\n    if (startRow === null) {\n      return -1;\n    }\n\n    return startRow;\n  },\n\n  /**\r\n   * Get the source index of the last rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastRenderedRow: function getLastRenderedRow() {\n    var endRow = this.wot.wtViewport.rowsRenderCalculator.endRow;\n\n    if (endRow === null) {\n      return -1;\n    }\n\n    return endRow;\n  },\n\n  /**\r\n   * Get the source index of the last row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastVisibleRow: function getLastVisibleRow() {\n    var endRow = this.wot.wtViewport.rowsVisibleCalculator.endRow;\n\n    if (endRow === null) {\n      return -1;\n    }\n\n    return endRow;\n  },\n\n  /**\r\n   * Get the number of rendered rows.\r\n   *\r\n   * @returns {number}\r\n   */\n  getRenderedRowsCount: function getRenderedRowsCount() {\n    return this.wot.wtViewport.rowsRenderCalculator.count;\n  },\n\n  /**\r\n   * Get the number of fully visible rows in the viewport.\r\n   *\r\n   * @returns {number}\r\n   */\n  getVisibleRowsCount: function getVisibleRowsCount() {\n    return this.wot.wtViewport.rowsVisibleCalculator.count;\n  }\n};\ndefineGetter(calculatedRows, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default calculatedRows;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/3rdparty/walkontable/src/table/mixin/calculatedRows.mjs"],"names":["defineGetter","MIXIN_NAME","calculatedRows","getFirstRenderedRow","startRow","wot","wtViewport","rowsRenderCalculator","getFirstVisibleRow","rowsVisibleCalculator","getLastRenderedRow","endRow","getLastVisibleRow","getRenderedRowsCount","count","getVisibleRowsCount","writable","enumerable"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mCAA7B;AACA,IAAIC,UAAU,GAAG,gBAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG;AACnB;AACF;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClD,QAAIC,QAAQ,GAAG,KAAKC,GAAL,CAASC,UAAT,CAAoBC,oBAApB,CAAyCH,QAAxD;;AAEA,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,aAAO,CAAC,CAAR;AACD;;AAED,WAAOA,QAAP;AACD,GAdkB;;AAgBnB;AACF;AACA;AACA;AACA;AACEI,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,QAAIJ,QAAQ,GAAG,KAAKC,GAAL,CAASC,UAAT,CAAoBG,qBAApB,CAA0CL,QAAzD;;AAEA,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,aAAO,CAAC,CAAR;AACD;;AAED,WAAOA,QAAP;AACD,GA7BkB;;AA+BnB;AACF;AACA;AACA;AACA;AACEM,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,QAAIC,MAAM,GAAG,KAAKN,GAAL,CAASC,UAAT,CAAoBC,oBAApB,CAAyCI,MAAtD;;AAEA,QAAIA,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAO,CAAC,CAAR;AACD;;AAED,WAAOA,MAAP;AACD,GA5CkB;;AA8CnB;AACF;AACA;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C,QAAID,MAAM,GAAG,KAAKN,GAAL,CAASC,UAAT,CAAoBG,qBAApB,CAA0CE,MAAvD;;AAEA,QAAIA,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAO,CAAC,CAAR;AACD;;AAED,WAAOA,MAAP;AACD,GA3DkB;;AA6DnB;AACF;AACA;AACA;AACA;AACEE,EAAAA,oBAAoB,EAAE,SAASA,oBAAT,GAAgC;AACpD,WAAO,KAAKR,GAAL,CAASC,UAAT,CAAoBC,oBAApB,CAAyCO,KAAhD;AACD,GApEkB;;AAsEnB;AACF;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClD,WAAO,KAAKV,GAAL,CAASC,UAAT,CAAoBG,qBAApB,CAA0CK,KAAjD;AACD;AA7EkB,CAArB;AA+EAd,YAAY,CAACE,cAAD,EAAiB,YAAjB,EAA+BD,UAA/B,EAA2C;AACrDe,EAAAA,QAAQ,EAAE,KAD2C;AAErDC,EAAAA,UAAU,EAAE;AAFyC,CAA3C,CAAZ;AAIA,eAAef,cAAf","sourcesContent":["import { defineGetter } from \"../../../../../helpers/object.mjs\";\r\nvar MIXIN_NAME = 'calculatedRows';\r\n/**\r\n * Mixin for the subclasses of `Table` with implementations of\r\n * helper methods that are related to rows.\r\n * This mixin is meant to be applied in the subclasses of `Table`\r\n * that use virtual rendering in the vertical axis.\r\n *\r\n * @type {object}\r\n */\r\n\r\nvar calculatedRows = {\r\n  /**\r\n   * Get the source index of the first rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getFirstRenderedRow: function getFirstRenderedRow() {\r\n    var startRow = this.wot.wtViewport.rowsRenderCalculator.startRow;\r\n\r\n    if (startRow === null) {\r\n      return -1;\r\n    }\r\n\r\n    return startRow;\r\n  },\r\n\r\n  /**\r\n   * Get the source index of the first row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getFirstVisibleRow: function getFirstVisibleRow() {\r\n    var startRow = this.wot.wtViewport.rowsVisibleCalculator.startRow;\r\n\r\n    if (startRow === null) {\r\n      return -1;\r\n    }\r\n\r\n    return startRow;\r\n  },\r\n\r\n  /**\r\n   * Get the source index of the last rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getLastRenderedRow: function getLastRenderedRow() {\r\n    var endRow = this.wot.wtViewport.rowsRenderCalculator.endRow;\r\n\r\n    if (endRow === null) {\r\n      return -1;\r\n    }\r\n\r\n    return endRow;\r\n  },\r\n\r\n  /**\r\n   * Get the source index of the last row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getLastVisibleRow: function getLastVisibleRow() {\r\n    var endRow = this.wot.wtViewport.rowsVisibleCalculator.endRow;\r\n\r\n    if (endRow === null) {\r\n      return -1;\r\n    }\r\n\r\n    return endRow;\r\n  },\r\n\r\n  /**\r\n   * Get the number of rendered rows.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getRenderedRowsCount: function getRenderedRowsCount() {\r\n    return this.wot.wtViewport.rowsRenderCalculator.count;\r\n  },\r\n\r\n  /**\r\n   * Get the number of fully visible rows in the viewport.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getVisibleRowsCount: function getVisibleRowsCount() {\r\n    return this.wot.wtViewport.rowsVisibleCalculator.count;\r\n  }\r\n};\r\ndefineGetter(calculatedRows, 'MIXIN_NAME', MIXIN_NAME, {\r\n  writable: false,\r\n  enumerable: false\r\n});\r\nexport default calculatedRows;"]},"metadata":{},"sourceType":"module"}