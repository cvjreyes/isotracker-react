{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { addClass, clearTextSelection, empty, fastInnerHTML, fastInnerText, getScrollbarWidth, hasClass, isChildOf, isInput, isOutsideInput } from \"./helpers/dom/element.mjs\";\nimport EventManager from \"./eventManager.mjs\";\nimport { isImmediatePropagationStopped, isRightClick, isLeftClick } from \"./helpers/dom/event.mjs\";\nimport Walkontable, { CellCoords } from \"./3rdparty/walkontable/src/index.mjs\";\nimport { handleMouseEvent } from \"./selection/mouseEventHandler.mjs\";\nimport { isRootInstance } from \"./utils/rootInstance.mjs\";\nvar privatePool = new WeakMap();\n/**\n * @class TableView\n * @private\n */\n\nvar TableView = /*#__PURE__*/function () {\n  /**\n   * @param {Hanstontable} instance Instance of {@link Handsontable}.\n   */\n  function TableView(instance) {\n    _classCallCheck(this, TableView);\n    /**\n     * Instance of {@link Handsontable}.\n     *\n     * @private\n     * @type {Handsontable}\n     */\n\n\n    this.instance = instance;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    this.eventManager = new EventManager(instance);\n    /**\n     * Current Handsontable's GridSettings object.\n     *\n     * @private\n     * @type {GridSettings}\n     */\n\n    this.settings = instance.getSettings();\n    /**\n     * Main <THEAD> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.THEAD = void 0;\n    /**\n     * Main <TBODY> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.TBODY = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @type {Walkontable}\n     */\n\n    this.wt = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @private\n     * @type {Walkontable}\n     */\n\n    this.activeWt = void 0;\n    /**\n     * The flag determines if the `adjustElementsSize` method call was made during\n     * the render suspending. If true, the method has to be triggered once after render\n     * resuming.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    this.postponedAdjustElementsSize = false;\n    privatePool.set(this, {\n      /**\n       * Defines if the text should be selected during mousemove.\n       *\n       * @private\n       * @type {boolean}\n       */\n      selectionMouseDown: false,\n\n      /**\n       * @private\n       * @type {boolean}\n       */\n      mouseDown: void 0,\n\n      /**\n       * Main <TABLE> element.\n       *\n       * @private\n       * @type {HTMLTableElement}\n       */\n      table: void 0,\n\n      /**\n       * Cached width of the rootElement.\n       *\n       * @type {number}\n       */\n      lastWidth: 0,\n\n      /**\n       * Cached height of the rootElement.\n       *\n       * @type {number}\n       */\n      lastHeight: 0\n    });\n    this.createElements();\n    this.registerEvents();\n    this.initializeWalkontable();\n  }\n  /**\n   * Renders WalkontableUI.\n   */\n\n\n  _createClass(TableView, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.instance.isRenderSuspended()) {\n        if (this.postponedAdjustElementsSize) {\n          this.postponedAdjustElementsSize = false;\n          this.adjustElementsSize(true);\n        }\n\n        this.wt.draw(!this.instance.forceFullRender);\n        this.instance.forceFullRender = false;\n        this.instance.renderCall = false;\n      }\n    }\n    /**\n     * Adjust overlays elements size and master table size.\n     *\n     * @param {boolean} [force=false] When `true`, it adjust the DOM nodes sizes for all overlays.\n     */\n\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.instance.isRenderSuspended()) {\n        this.postponedAdjustElementsSize = true;\n      } else {\n        this.wt.wtOverlays.adjustElementsSize(force);\n      }\n    }\n    /**\n     * Returns td object given coordinates.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} topmost Indicates whether the cell should be calculated from the topmost.\n     * @returns {HTMLTableCellElement|null}\n     */\n\n  }, {\n    key: \"getCellAtCoords\",\n    value: function getCellAtCoords(coords, topmost) {\n      var td = this.wt.getCell(coords, topmost);\n\n      if (td < 0) {\n        // there was an exit code (cell is out of bounds)\n        return null;\n      }\n\n      return td;\n    }\n    /**\n     * Scroll viewport to a cell.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollViewport\",\n    value: function scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n      return this.wt.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a column.\n     *\n     * @param {number} column Renderable column index.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollViewportHorizontally\",\n    value: function scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n      return this.wt.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a row.\n     *\n     * @param {number} row Renderable row index.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollViewportVertically\",\n    value: function scrollViewportVertically(row, snapToTop, snapToBottom) {\n      return this.wt.scrollViewportVertically(row, snapToTop, snapToBottom);\n    }\n    /**\n     * Prepares DOMElements and adds correct className to the root element.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      var priv = privatePool.get(this);\n      var _this$instance = this.instance,\n          rootElement = _this$instance.rootElement,\n          rootDocument = _this$instance.rootDocument;\n      var originalStyle = rootElement.getAttribute('style');\n\n      if (originalStyle) {\n        rootElement.setAttribute('data-originalstyle', originalStyle); // needed to retrieve original style in jsFiddle link generator in HT examples. may be removed in future versions\n      }\n\n      addClass(rootElement, 'handsontable');\n      priv.table = rootDocument.createElement('TABLE');\n      addClass(priv.table, 'htCore');\n\n      if (this.instance.getSettings().tableClassName) {\n        addClass(priv.table, this.instance.getSettings().tableClassName);\n      }\n\n      this.THEAD = rootDocument.createElement('THEAD');\n      priv.table.appendChild(this.THEAD);\n      this.TBODY = rootDocument.createElement('TBODY');\n      priv.table.appendChild(this.TBODY);\n      this.instance.table = priv.table;\n      this.instance.container.insertBefore(priv.table, this.instance.container.firstChild);\n    }\n    /**\n     * Attaches necessary listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this = this;\n\n      var priv = privatePool.get(this);\n      var _this$instance2 = this.instance,\n          rootElement = _this$instance2.rootElement,\n          rootDocument = _this$instance2.rootDocument,\n          selection = _this$instance2.selection;\n      var documentElement = rootDocument.documentElement;\n      this.eventManager.addEventListener(rootElement, 'mousedown', function (event) {\n        priv.selectionMouseDown = true;\n\n        if (!_this.isTextSelectionAllowed(event.target)) {\n          var rootWindow = _this.instance.rootWindow;\n          clearTextSelection(rootWindow);\n          event.preventDefault();\n          rootWindow.focus(); // make sure that window that contains HOT is active. Important when HOT is in iframe.\n        }\n      });\n      this.eventManager.addEventListener(rootElement, 'mouseup', function () {\n        priv.selectionMouseDown = false;\n      });\n      this.eventManager.addEventListener(rootElement, 'mousemove', function (event) {\n        if (priv.selectionMouseDown && !_this.isTextSelectionAllowed(event.target)) {\n          // Clear selection only when fragmentSelection is enabled, otherwise clearing selection breakes the IME editor.\n          if (_this.settings.fragmentSelection) {\n            clearTextSelection(_this.instance.rootWindow);\n          }\n\n          event.preventDefault();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'keyup', function (event) {\n        if (selection.isInProgress() && !event.shiftKey) {\n          selection.finish();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function (event) {\n        if (selection.isInProgress() && isLeftClick(event)) {\n          // is left mouse button\n          selection.finish();\n        }\n\n        priv.mouseDown = false;\n\n        if (isOutsideInput(rootDocument.activeElement) || !selection.isSelected() && !selection.isSelectedByAnyHeader() && !rootElement.contains(event.target) && !isRightClick(event)) {\n          _this.instance.unlisten();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'contextmenu', function (event) {\n        if (selection.isInProgress() && isRightClick(event)) {\n          selection.finish();\n          priv.mouseDown = false;\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'touchend', function () {\n        if (selection.isInProgress()) {\n          selection.finish();\n        }\n\n        priv.mouseDown = false;\n      });\n      this.eventManager.addEventListener(documentElement, 'mousedown', function (event) {\n        var originalTarget = event.target;\n        var eventX = event.x || event.clientX;\n        var eventY = event.y || event.clientY;\n        var next = event.target;\n\n        if (priv.mouseDown || !rootElement || !_this.instance.view) {\n          return; // it must have been started in a cell\n        } // immediate click on \"holder\" means click on the right side of vertical scrollbar\n\n\n        var holder = _this.instance.view.wt.wtTable.holder;\n\n        if (next === holder) {\n          var scrollbarWidth = getScrollbarWidth(rootDocument);\n\n          if (rootDocument.elementFromPoint(eventX + scrollbarWidth, eventY) !== holder || rootDocument.elementFromPoint(eventX, eventY + scrollbarWidth) !== holder) {\n            return;\n          }\n        } else {\n          while (next !== documentElement) {\n            if (next === null) {\n              if (event.isTargetWebComponent) {\n                break;\n              } // click on something that was a row but now is detached (possibly because your click triggered a rerender)\n\n\n              return;\n            }\n\n            if (next === rootElement) {\n              // click inside container\n              return;\n            }\n\n            next = next.parentNode;\n          }\n        } // function did not return until here, we have an outside click!\n\n\n        var outsideClickDeselects = typeof _this.settings.outsideClickDeselects === 'function' ? _this.settings.outsideClickDeselects(originalTarget) : _this.settings.outsideClickDeselects;\n\n        if (outsideClickDeselects) {\n          _this.instance.deselectCell();\n        } else {\n          _this.instance.destroyEditor(false, false);\n        }\n      });\n      this.eventManager.addEventListener(priv.table, 'selectstart', function (event) {\n        if (_this.settings.fragmentSelection || isInput(event.target)) {\n          return;\n        } // https://github.com/handsontable/handsontable/issues/160\n        // Prevent text from being selected when performing drag down.\n\n\n        event.preventDefault();\n      });\n    }\n    /**\n     * Translate renderable cell coordinates to visual coordinates.\n     *\n     * @param {CellCoords} coords The cell coordinates.\n     * @returns {CellCoords}\n     */\n\n  }, {\n    key: \"translateFromRenderableToVisualCoords\",\n    value: function translateFromRenderableToVisualCoords(_ref) {\n      var row = _ref.row,\n          col = _ref.col; // TODO: To consider an idea to reusing the CellCoords instance instead creating new one.\n\n      return _construct(CellCoords, _toConsumableArray(this.translateFromRenderableToVisualIndex(row, col)));\n    }\n    /**\n     * Translate renderable row and column indexes to visual row and column indexes.\n     *\n     * @param {number} renderableRow Renderable row index.\n     * @param {number} renderableColumn Renderable columnIndex.\n     * @returns {number[]}\n     */\n\n  }, {\n    key: \"translateFromRenderableToVisualIndex\",\n    value: function translateFromRenderableToVisualIndex(renderableRow, renderableColumn) {\n      // TODO: Some helper may be needed.\n      // We perform translation for indexes (without headers).\n      var visualRow = renderableRow >= 0 ? this.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRow) : renderableRow;\n      var visualColumn = renderableColumn >= 0 ? this.instance.columnIndexMapper.getVisualFromRenderableIndex(renderableColumn) : renderableColumn;\n\n      if (visualRow === null) {\n        visualRow = renderableRow;\n      }\n\n      if (visualColumn === null) {\n        visualColumn = renderableColumn;\n      }\n\n      return [visualRow, visualColumn];\n    }\n    /**\n     * Returns the number of renderable indexes.\n     *\n     * @private\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} maxElements Maximum number of elements (rows or columns).\n     *\n     * @returns {number|*}\n     */\n\n  }, {\n    key: \"countRenderableIndexes\",\n    value: function countRenderableIndexes(indexMapper, maxElements) {\n      var consideredElements = Math.min(indexMapper.getNotTrimmedIndexesLength(), maxElements); // Don't take hidden indexes into account. We are looking just for renderable indexes.\n\n      var firstNotHiddenIndex = indexMapper.getFirstNotHiddenIndex(consideredElements - 1, -1); // There are no renderable indexes.\n\n      if (firstNotHiddenIndex === null) {\n        return 0;\n      }\n\n      return indexMapper.getRenderableFromVisualIndex(firstNotHiddenIndex) + 1;\n    }\n    /**\n     * Returns the number of renderable columns.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countRenderableColumns\",\n    value: function countRenderableColumns() {\n      return this.countRenderableIndexes(this.instance.columnIndexMapper, this.settings.maxCols);\n    }\n    /**\n     * Returns the number of renderable rows.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countRenderableRows\",\n    value: function countRenderableRows() {\n      return this.countRenderableIndexes(this.instance.rowIndexMapper, this.settings.maxRows);\n    }\n    /**\n     * Returns number of not hidden row indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countNotHiddenRowIndexes\",\n    value: function countNotHiddenRowIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.rowIndexMapper, this.countRenderableRows());\n    }\n    /**\n     * Returns number of not hidden column indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countNotHiddenColumnIndexes\",\n    value: function countNotHiddenColumnIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.columnIndexMapper, this.countRenderableColumns());\n    }\n    /**\n     * Returns number of not hidden indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} renderableIndexesCount Total count of renderable indexes for specific axis.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countNotHiddenIndexes\",\n    value: function countNotHiddenIndexes(visualIndex, incrementBy, indexMapper, renderableIndexesCount) {\n      if (isNaN(visualIndex) || visualIndex < 0) {\n        return 0;\n      }\n\n      var firstVisibleIndex = indexMapper.getFirstNotHiddenIndex(visualIndex, incrementBy);\n      var renderableIndex = indexMapper.getRenderableFromVisualIndex(firstVisibleIndex);\n\n      if (!Number.isInteger(renderableIndex)) {\n        return 0;\n      }\n\n      var notHiddenIndexes = 0;\n\n      if (incrementBy < 0) {\n        // Zero-based numbering for renderable indexes corresponds to a number of not hidden indexes.\n        notHiddenIndexes = renderableIndex + 1;\n      } else if (incrementBy > 0) {\n        notHiddenIndexes = renderableIndexesCount - renderableIndex;\n      }\n\n      return notHiddenIndexes;\n    }\n    /**\n     * Defines default configuration and initializes WalkOnTable intance.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"initializeWalkontable\",\n    value: function initializeWalkontable() {\n      var _this2 = this;\n\n      var priv = privatePool.get(this);\n      var walkontableConfig = {\n        externalRowCalculator: this.instance.getPlugin('autoRowSize') && this.instance.getPlugin('autoRowSize').isEnabled(),\n        table: priv.table,\n        isDataViewInstance: function isDataViewInstance() {\n          return isRootInstance(_this2.instance);\n        },\n        preventOverflow: function preventOverflow() {\n          return _this2.settings.preventOverflow;\n        },\n        preventWheel: function preventWheel() {\n          return _this2.settings.preventWheel;\n        },\n        stretchH: function stretchH() {\n          return _this2.settings.stretchH;\n        },\n        data: function data(renderableRow, renderableColumn) {\n          var _this2$instance;\n\n          return (_this2$instance = _this2.instance).getDataAtCell.apply(_this2$instance, _toConsumableArray(_this2.translateFromRenderableToVisualIndex(renderableRow, renderableColumn)));\n        },\n        totalRows: function totalRows() {\n          return _this2.countRenderableRows();\n        },\n        totalColumns: function totalColumns() {\n          return _this2.countRenderableColumns();\n        },\n        // Number of renderable columns for the left overlay.\n        fixedColumnsLeft: function fixedColumnsLeft() {\n          var countCols = _this2.instance.countCols();\n\n          var visualFixedColumnsLeft = Math.min(parseInt(_this2.settings.fixedColumnsLeft, 10), countCols) - 1;\n          return _this2.countNotHiddenColumnIndexes(visualFixedColumnsLeft, -1);\n        },\n        // Number of renderable rows for the top overlay.\n        fixedRowsTop: function fixedRowsTop() {\n          var countRows = _this2.instance.countRows();\n\n          var visualFixedRowsTop = Math.min(parseInt(_this2.settings.fixedRowsTop, 10), countRows) - 1;\n          return _this2.countNotHiddenRowIndexes(visualFixedRowsTop, -1);\n        },\n        // Number of renderable rows for the bottom overlay.\n        fixedRowsBottom: function fixedRowsBottom() {\n          var countRows = _this2.instance.countRows();\n\n          var visualFixedRowsBottom = Math.max(countRows - parseInt(_this2.settings.fixedRowsBottom, 10), 0);\n          return _this2.countNotHiddenRowIndexes(visualFixedRowsBottom, 1);\n        },\n        // Enable the left overlay when conditions are met.\n        shouldRenderLeftOverlay: function shouldRenderLeftOverlay() {\n          return _this2.settings.fixedColumnsLeft > 0 || walkontableConfig.rowHeaders().length > 0;\n        },\n        // Enable the top overlay when conditions are met.\n        shouldRenderTopOverlay: function shouldRenderTopOverlay() {\n          return _this2.settings.fixedRowsTop > 0 || walkontableConfig.columnHeaders().length > 0;\n        },\n        // Enable the bottom overlay when conditions are met.\n        shouldRenderBottomOverlay: function shouldRenderBottomOverlay() {\n          return _this2.settings.fixedRowsBottom > 0;\n        },\n        minSpareRows: function minSpareRows() {\n          return _this2.settings.minSpareRows;\n        },\n        renderAllRows: this.settings.renderAllRows,\n        rowHeaders: function rowHeaders() {\n          var headerRenderers = [];\n\n          if (_this2.instance.hasRowHeaders()) {\n            headerRenderers.push(function (renderableRowIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for row indexes (without row headers).\n              var visualRowIndex = renderableRowIndex >= 0 ? _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n\n              _this2.appendRowHeader(visualRowIndex, TH);\n            });\n          }\n\n          _this2.instance.runHooks('afterGetRowHeaderRenderers', headerRenderers);\n\n          return headerRenderers;\n        },\n        columnHeaders: function columnHeaders() {\n          var headerRenderers = [];\n\n          if (_this2.instance.hasColHeaders()) {\n            headerRenderers.push(function (renderedColumnIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for columns indexes (without column headers).\n              var visualColumnsIndex = renderedColumnIndex >= 0 ? _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex) : renderedColumnIndex;\n\n              _this2.appendColHeader(visualColumnsIndex, TH);\n            });\n          }\n\n          _this2.instance.runHooks('afterGetColumnHeaderRenderers', headerRenderers);\n\n          return headerRenderers;\n        },\n        columnWidth: function columnWidth(renderedColumnIndex) {\n          var visualIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex); // It's not a bug that we can't find visual index for some handled by method indexes. The function is called also\n          // for not displayed indexes (beyond the table boundaries), i.e. when `fixedColumnsLeft` > `startCols` (wrong config?) or\n          // scrolling and dataset is empty (scroll should handle that?).\n\n\n          return _this2.instance.getColWidth(visualIndex === null ? renderedColumnIndex : visualIndex);\n        },\n        rowHeight: function rowHeight(renderedRowIndex) {\n          var visualIndex = _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderedRowIndex);\n\n          return _this2.instance.getRowHeight(visualIndex === null ? renderedRowIndex : visualIndex);\n        },\n        cellRenderer: function cellRenderer(renderedRowIndex, renderedColumnIndex, TD) {\n          var _this2$translateFromR = _this2.translateFromRenderableToVisualIndex(renderedRowIndex, renderedColumnIndex),\n              _this2$translateFromR2 = _slicedToArray(_this2$translateFromR, 2),\n              visualRowIndex = _this2$translateFromR2[0],\n              visualColumnIndex = _this2$translateFromR2[1]; // Coords may be modified. For example, by the `MergeCells` plugin. It should affect cell value and cell meta.\n\n\n          var modifiedCellCoords = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex);\n\n          var visualRowToCheck = visualRowIndex;\n          var visualColumnToCheck = visualColumnIndex;\n\n          if (Array.isArray(modifiedCellCoords)) {\n            var _modifiedCellCoords = _slicedToArray(modifiedCellCoords, 2);\n\n            visualRowToCheck = _modifiedCellCoords[0];\n            visualColumnToCheck = _modifiedCellCoords[1];\n          }\n\n          var cellProperties = _this2.instance.getCellMeta(visualRowToCheck, visualColumnToCheck);\n\n          var prop = _this2.instance.colToProp(visualColumnToCheck);\n\n          var value = _this2.instance.getDataAtRowProp(visualRowToCheck, prop);\n\n          if (_this2.instance.hasHook('beforeValueRender')) {\n            value = _this2.instance.runHooks('beforeValueRender', value, cellProperties);\n          }\n\n          _this2.instance.runHooks('beforeRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n\n          _this2.instance.getCellRenderer(cellProperties)(_this2.instance, TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n\n          _this2.instance.runHooks('afterRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n        },\n        selections: this.instance.selection.highlight,\n        hideBorderOnMouseDownOver: function hideBorderOnMouseDownOver() {\n          return _this2.settings.fragmentSelection;\n        },\n        onWindowResize: function onWindowResize() {\n          if (!_this2.instance || _this2.instance.isDestroyed) {\n            return;\n          }\n\n          _this2.instance.refreshDimensions();\n        },\n        onCellMouseDown: function onCellMouseDown(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          var blockCalculations = {\n            row: false,\n            column: false,\n            cell: false\n          };\n\n          _this2.instance.listen();\n\n          _this2.activeWt = wt;\n          priv.mouseDown = true;\n\n          _this2.instance.runHooks('beforeOnCellMouseDown', event, visualCoords, TD, blockCalculations);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          handleMouseEvent(event, {\n            coords: visualCoords,\n            selection: _this2.instance.selection,\n            controller: blockCalculations\n          });\n\n          _this2.instance.runHooks('afterOnCellMouseDown', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellContextMenu: function onCellContextMenu(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          _this2.activeWt = wt;\n          priv.mouseDown = false;\n\n          if (_this2.instance.selection.isInProgress()) {\n            _this2.instance.selection.finish();\n          }\n\n          _this2.instance.runHooks('beforeOnCellContextMenu', event, visualCoords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellContextMenu', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOut: function onCellMouseOut(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseOut', event, visualCoords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseOut', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOver: function onCellMouseOver(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          var blockCalculations = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseOver', event, visualCoords, TD, blockCalculations);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          if (priv.mouseDown) {\n            handleMouseEvent(event, {\n              coords: visualCoords,\n              selection: _this2.instance.selection,\n              controller: blockCalculations\n            });\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseOver', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseUp: function onCellMouseUp(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseUp', event, visualCoords, TD); // TODO: The second condition check is a workaround. Callback corresponding the method `updateSettings`\n          // disable plugin and enable it again. Disabling plugin closes the menu. Thus, calling the\n          // `updateSettings` in a body of any callback executed right after some context-menu action\n          // breaks the table (#7231).\n\n\n          if (isImmediatePropagationStopped(event) || _this2.instance.isDestroyed) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseUp', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellCornerMouseDown: function onCellCornerMouseDown(event) {\n          event.preventDefault();\n\n          _this2.instance.runHooks('afterOnCellCornerMouseDown', event);\n        },\n        onCellCornerDblClick: function onCellCornerDblClick(event) {\n          event.preventDefault();\n\n          _this2.instance.runHooks('afterOnCellCornerDblClick', event);\n        },\n        beforeDraw: function beforeDraw(force, skipRender) {\n          return _this2.beforeRender(force, skipRender);\n        },\n        onDraw: function onDraw(force) {\n          return _this2.onDraw(force);\n        },\n        onScrollVertically: function onScrollVertically() {\n          return _this2.instance.runHooks('afterScrollVertically');\n        },\n        onScrollHorizontally: function onScrollHorizontally() {\n          return _this2.instance.runHooks('afterScrollHorizontally');\n        },\n        onBeforeRemoveCellClassNames: function onBeforeRemoveCellClassNames() {\n          return _this2.instance.runHooks('beforeRemoveCellClassNames');\n        },\n        onBeforeHighlightingRowHeader: function onBeforeHighlightingRowHeader(renderableRow, headerLevel, highlightMeta) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var visualRow = rowMapper.getVisualFromRenderableIndex(renderableRow);\n\n          var newVisualRow = _this2.instance.runHooks('beforeHighlightingRowHeader', visualRow, headerLevel, highlightMeta);\n\n          return rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(newVisualRow, 1));\n        },\n        onBeforeHighlightingColumnHeader: function onBeforeHighlightingColumnHeader(renderableColumn, headerLevel, highlightMeta) {\n          var columnMapper = _this2.instance.columnIndexMapper;\n          var visualColumn = columnMapper.getVisualFromRenderableIndex(renderableColumn);\n\n          var newVisualColumn = _this2.instance.runHooks('beforeHighlightingColumnHeader', visualColumn, headerLevel, highlightMeta);\n\n          return columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(newVisualColumn, 1));\n        },\n        onAfterDrawSelection: function onAfterDrawSelection(currentRow, currentColumn, layerLevel) {\n          var cornersOfSelection;\n\n          var _this2$translateFromR3 = _this2.translateFromRenderableToVisualIndex(currentRow, currentColumn),\n              _this2$translateFromR4 = _slicedToArray(_this2$translateFromR3, 2),\n              visualRowIndex = _this2$translateFromR4[0],\n              visualColumnIndex = _this2$translateFromR4[1];\n\n          var selectedRange = _this2.instance.selection.getSelectedRange();\n\n          var selectionRangeSize = selectedRange.size();\n\n          if (selectionRangeSize > 0) {\n            // Selection layers are stored from the \"oldest\" to the \"newest\". We should calculate the offset.\n            // Please look at the `SelectedRange` class and it's method for getting selection's layer for more information.\n            var selectionOffset = (layerLevel !== null && layerLevel !== void 0 ? layerLevel : 0) + 1 - selectionRangeSize;\n            var selectionForLayer = selectedRange.peekByIndex(selectionOffset);\n            cornersOfSelection = [selectionForLayer.from.row, selectionForLayer.from.col, selectionForLayer.to.row, selectionForLayer.to.col];\n          }\n\n          return _this2.instance.runHooks('afterDrawSelection', visualRowIndex, visualColumnIndex, cornersOfSelection, layerLevel);\n        },\n        onBeforeDrawBorders: function onBeforeDrawBorders(corners, borderClassName) {\n          var _corners = _slicedToArray(corners, 4),\n              startRenderableRow = _corners[0],\n              startRenderableColumn = _corners[1],\n              endRenderableRow = _corners[2],\n              endRenderableColumn = _corners[3];\n\n          var visualCorners = [_this2.instance.rowIndexMapper.getVisualFromRenderableIndex(startRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(startRenderableColumn), _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(endRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(endRenderableColumn)];\n          return _this2.instance.runHooks('beforeDrawBorders', visualCorners, borderClassName);\n        },\n        onBeforeTouchScroll: function onBeforeTouchScroll() {\n          return _this2.instance.runHooks('beforeTouchScroll');\n        },\n        onAfterMomentumScroll: function onAfterMomentumScroll() {\n          return _this2.instance.runHooks('afterMomentumScroll');\n        },\n        onBeforeStretchingColumnWidth: function onBeforeStretchingColumnWidth(stretchedWidth, renderedColumnIndex) {\n          var visualColumnIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n\n          return _this2.instance.runHooks('beforeStretchingColumnWidth', stretchedWidth, visualColumnIndex);\n        },\n        onModifyRowHeaderWidth: function onModifyRowHeaderWidth(rowHeaderWidth) {\n          return _this2.instance.runHooks('modifyRowHeaderWidth', rowHeaderWidth);\n        },\n        onModifyGetCellCoords: function onModifyGetCellCoords(renderableRowIndex, renderableColumnIndex, topmost) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var columnMapper = _this2.instance.columnIndexMapper; // Callback handle also headers. We shouldn't translate them.\n\n          var visualColumnIndex = renderableColumnIndex >= 0 ? columnMapper.getVisualFromRenderableIndex(renderableColumnIndex) : renderableColumnIndex;\n          var visualRowIndex = renderableRowIndex >= 0 ? rowMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n\n          var visualIndexes = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex, topmost);\n\n          if (Array.isArray(visualIndexes)) {\n            var _visualIndexes = _slicedToArray(visualIndexes, 4),\n                visualRowFrom = _visualIndexes[0],\n                visualColumnFrom = _visualIndexes[1],\n                visualRowTo = _visualIndexes[2],\n                visualColumnTo = _visualIndexes[3]; // Result of the hook is handled by the Walkontable (renderable indexes).\n\n\n            return [visualRowFrom >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(visualRowFrom, 1)) : visualRowFrom, visualColumnFrom >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(visualColumnFrom, 1)) : visualColumnFrom, visualRowTo >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(visualRowTo, -1)) : visualRowTo, visualColumnTo >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(visualColumnTo, -1)) : visualColumnTo];\n          }\n        },\n        viewportRowCalculatorOverride: function viewportRowCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportRowRenderingOffset;\n\n          if (viewportOffset === 'auto' && _this2.settings.fixedRowsTop) {\n            viewportOffset = 10;\n          }\n\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableRows = _this2.countRenderableRows();\n\n            var firstRenderedRow = calc.startRow;\n            var lastRenderedRow = calc.endRow;\n\n            if (typeof viewportOffset === 'number') {\n              calc.startRow = Math.max(firstRenderedRow - viewportOffset, 0);\n              calc.endRow = Math.min(lastRenderedRow + viewportOffset, renderableRows - 1);\n            } else if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedRow / renderableRows * 12);\n              calc.startRow = Math.max(firstRenderedRow - offset, 0);\n              calc.endRow = Math.min(lastRenderedRow + offset, renderableRows - 1);\n            }\n          }\n\n          _this2.instance.runHooks('afterViewportRowCalculatorOverride', calc);\n        },\n        viewportColumnCalculatorOverride: function viewportColumnCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportColumnRenderingOffset;\n\n          if (viewportOffset === 'auto' && _this2.settings.fixedColumnsLeft) {\n            viewportOffset = 10;\n          }\n\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableColumns = _this2.countRenderableColumns();\n\n            var firstRenderedColumn = calc.startColumn;\n            var lastRenderedColumn = calc.endColumn;\n\n            if (typeof viewportOffset === 'number') {\n              calc.startColumn = Math.max(firstRenderedColumn - viewportOffset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + viewportOffset, renderableColumns - 1);\n            }\n\n            if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedColumn / renderableColumns * 6);\n              calc.startColumn = Math.max(firstRenderedColumn - offset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + offset, renderableColumns - 1);\n            }\n          }\n\n          _this2.instance.runHooks('afterViewportColumnCalculatorOverride', calc);\n        },\n        rowHeaderWidth: function rowHeaderWidth() {\n          return _this2.settings.rowHeaderWidth;\n        },\n        columnHeaderHeight: function columnHeaderHeight() {\n          var columnHeaderHeight = _this2.instance.runHooks('modifyColumnHeaderHeight');\n\n          return _this2.settings.columnHeaderHeight || columnHeaderHeight;\n        }\n      };\n      this.instance.runHooks('beforeInitWalkontable', walkontableConfig);\n      this.wt = new Walkontable(walkontableConfig);\n      this.activeWt = this.wt;\n      var spreader = this.wt.wtTable.spreader; // We have to cache width and height after Walkontable initialization.\n\n      var _this$instance$rootEl = this.instance.rootElement.getBoundingClientRect(),\n          width = _this$instance$rootEl.width,\n          height = _this$instance$rootEl.height;\n\n      this.setLastSize(width, height);\n      this.eventManager.addEventListener(spreader, 'mousedown', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(spreader, 'contextmenu', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(this.instance.rootDocument.documentElement, 'click', function () {\n        if (_this2.settings.observeDOMVisibility) {\n          if (_this2.wt.drawInterrupted) {\n            _this2.instance.forceFullRender = true;\n\n            _this2.render();\n          }\n        }\n      });\n    }\n    /**\n     * Checks if it's possible to create text selection in element.\n     *\n     * @private\n     * @param {HTMLElement} el The element to check.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isTextSelectionAllowed\",\n    value: function isTextSelectionAllowed(el) {\n      if (isInput(el)) {\n        return true;\n      }\n\n      var isChildOfTableBody = isChildOf(el, this.instance.view.wt.wtTable.spreader);\n\n      if (this.settings.fragmentSelection === true && isChildOfTableBody) {\n        return true;\n      }\n\n      if (this.settings.fragmentSelection === 'cell' && this.isSelectedOnlyCell() && isChildOfTableBody) {\n        return true;\n      }\n\n      if (!this.settings.fragmentSelection && this.isCellEdited() && this.isSelectedOnlyCell()) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Checks if user's been called mousedown.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isMouseDown\",\n    value: function isMouseDown() {\n      return privatePool.get(this).mouseDown;\n    }\n    /**\n     * Check if selected only one cell.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isSelectedOnlyCell\",\n    value: function isSelectedOnlyCell() {\n      var _this$instance$getSel, _this$instance$getSel2;\n\n      return (_this$instance$getSel = (_this$instance$getSel2 = this.instance.getSelectedRangeLast()) === null || _this$instance$getSel2 === void 0 ? void 0 : _this$instance$getSel2.isSingle()) !== null && _this$instance$getSel !== void 0 ? _this$instance$getSel : false;\n    }\n    /**\n     * Checks if active cell is editing.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isCellEdited\",\n    value: function isCellEdited() {\n      var activeEditor = this.instance.getActiveEditor();\n      return activeEditor && activeEditor.isOpened();\n    }\n    /**\n     * `beforeDraw` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     * @param {boolean} skipRender Indicates whether the rendering is skipped.\n     */\n\n  }, {\n    key: \"beforeRender\",\n    value: function beforeRender(force, skipRender) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('beforeRender', this.instance.forceFullRender, skipRender);\n      }\n    }\n    /**\n     * `onDraw` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     */\n\n  }, {\n    key: \"onDraw\",\n    value: function onDraw(force) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('afterRender', this.instance.forceFullRender);\n      }\n    }\n    /**\n     * Append row header to a TH element.\n     *\n     * @private\n     * @param {number} visualRowIndex The visual row index.\n     * @param {HTMLTableHeaderCellElement} TH The table header element.\n     */\n\n  }, {\n    key: \"appendRowHeader\",\n    value: function appendRowHeader(visualRowIndex, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n\n        if (!hasClass(container, 'relative')) {\n          empty(TH);\n          this.appendRowHeader(visualRowIndex, TH);\n          return;\n        }\n\n        this.updateCellHeader(container.querySelector('.rowHeader'), visualRowIndex, this.instance.getRowHeader);\n      } else {\n        var _this$instance3 = this.instance,\n            rootDocument = _this$instance3.rootDocument,\n            getRowHeader = _this$instance3.getRowHeader;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'rowHeader';\n        this.updateCellHeader(span, visualRowIndex, getRowHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n\n      this.instance.runHooks('afterGetRowHeader', visualRowIndex, TH);\n    }\n    /**\n     * Append column header to a TH element.\n     *\n     * @private\n     * @param {number} visualColumnIndex Visual column index.\n     * @param {HTMLTableHeaderCellElement} TH The table header element.\n     */\n\n  }, {\n    key: \"appendColHeader\",\n    value: function appendColHeader(visualColumnIndex, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n\n        if (hasClass(container, 'relative')) {\n          this.updateCellHeader(container.querySelector('.colHeader'), visualColumnIndex, this.instance.getColHeader);\n        } else {\n          empty(TH);\n          this.appendColHeader(visualColumnIndex, TH);\n        }\n      } else {\n        var rootDocument = this.instance.rootDocument;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'colHeader';\n        this.updateCellHeader(span, visualColumnIndex, this.instance.getColHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n\n      this.instance.runHooks('afterGetColHeader', visualColumnIndex, TH);\n    }\n    /**\n     * Updates header cell content.\n     *\n     * @since 0.15.0-beta4\n     * @param {HTMLElement} element Element to update.\n     * @param {number} index Row index or column index.\n     * @param {Function} content Function which should be returns content for this cell.\n     */\n\n  }, {\n    key: \"updateCellHeader\",\n    value: function updateCellHeader(element, index, content) {\n      var renderedIndex = index;\n      var parentOverlay = this.wt.wtOverlays.getParentOverlay(element) || this.wt; // prevent wrong calculations from SampleGenerator\n\n      if (element.parentNode) {\n        if (hasClass(element, 'colHeader')) {\n          renderedIndex = parentOverlay.wtTable.columnFilter.sourceToRendered(index);\n        } else if (hasClass(element, 'rowHeader')) {\n          renderedIndex = parentOverlay.wtTable.rowFilter.sourceToRendered(index);\n        }\n      }\n\n      if (renderedIndex > -1) {\n        fastInnerHTML(element, content(index));\n      } else {\n        // workaround for https://github.com/handsontable/handsontable/issues/1946\n        fastInnerText(element, String.fromCharCode(160));\n        addClass(element, 'cornerHeader');\n      }\n    }\n    /**\n     * Given a element's left position relative to the viewport, returns maximum element width until the right\n     * edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} leftOffset The left offset.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"maximumVisibleElementWidth\",\n    value: function maximumVisibleElementWidth(leftOffset) {\n      var workspaceWidth = this.wt.wtViewport.getWorkspaceWidth();\n      var maxWidth = workspaceWidth - leftOffset;\n      return maxWidth > 0 ? maxWidth : 0;\n    }\n    /**\n     * Given a element's top position relative to the viewport, returns maximum element height until the bottom\n     * edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} topOffset The top offset.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"maximumVisibleElementHeight\",\n    value: function maximumVisibleElementHeight(topOffset) {\n      var workspaceHeight = this.wt.wtViewport.getWorkspaceHeight();\n      var maxHeight = workspaceHeight - topOffset;\n      return maxHeight > 0 ? maxHeight : 0;\n    }\n    /**\n     * Sets new dimensions of the container.\n     *\n     * @param {number} width The table width.\n     * @param {number} height The table height.\n     */\n\n  }, {\n    key: \"setLastSize\",\n    value: function setLastSize(width, height) {\n      var priv = privatePool.get(this);\n      var _ref2 = [width, height];\n      priv.lastWidth = _ref2[0];\n      priv.lastHeight = _ref2[1];\n    }\n    /**\n     * Returns cached dimensions.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getLastSize\",\n    value: function getLastSize() {\n      var priv = privatePool.get(this);\n      return {\n        width: priv.lastWidth,\n        height: priv.lastHeight\n      };\n    }\n    /**\n     * Checks if master overlay is active.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"mainViewIsActive\",\n    value: function mainViewIsActive() {\n      return this.wt === this.activeWt;\n    }\n    /**\n     * Destroyes internal WalkOnTable's instance. Detaches all of the bonded listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.wt.destroy();\n      this.eventManager.destroy();\n    }\n  }]);\n\n  return TableView;\n}();\n\nexport default TableView;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/tableView.mjs"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","Symbol","iterator","_arr","_n","_d","_s","_e","call","next","done","push","value","length","err","Array","isArray","_construct","Parent","args","Class","_isNativeReflectConstruct","Reflect","construct","a","apply","Constructor","Function","bind","instance","_setPrototypeOf","prototype","arguments","sham","Proxy","Boolean","valueOf","e","o","p","Object","setPrototypeOf","__proto__","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","iter","len","arr2","_classCallCheck","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","addClass","clearTextSelection","empty","fastInnerHTML","fastInnerText","getScrollbarWidth","hasClass","isChildOf","isInput","isOutsideInput","EventManager","isImmediatePropagationStopped","isRightClick","isLeftClick","Walkontable","CellCoords","handleMouseEvent","isRootInstance","privatePool","WeakMap","TableView","eventManager","settings","getSettings","THEAD","TBODY","wt","activeWt","postponedAdjustElementsSize","set","selectionMouseDown","mouseDown","table","lastWidth","lastHeight","createElements","registerEvents","initializeWalkontable","render","isRenderSuspended","adjustElementsSize","draw","forceFullRender","renderCall","force","undefined","wtOverlays","getCellAtCoords","coords","topmost","td","getCell","scrollViewport","snapToTop","snapToRight","snapToBottom","snapToLeft","scrollViewportHorizontally","column","scrollViewportVertically","row","priv","get","_this$instance","rootElement","rootDocument","originalStyle","getAttribute","setAttribute","createElement","tableClassName","appendChild","container","insertBefore","firstChild","_this","_this$instance2","selection","documentElement","addEventListener","event","isTextSelectionAllowed","rootWindow","preventDefault","focus","fragmentSelection","isInProgress","shiftKey","finish","activeElement","isSelected","isSelectedByAnyHeader","contains","unlisten","originalTarget","eventX","x","clientX","eventY","y","clientY","view","holder","wtTable","scrollbarWidth","elementFromPoint","isTargetWebComponent","parentNode","outsideClickDeselects","deselectCell","destroyEditor","translateFromRenderableToVisualCoords","_ref","col","translateFromRenderableToVisualIndex","renderableRow","renderableColumn","visualRow","rowIndexMapper","getVisualFromRenderableIndex","visualColumn","columnIndexMapper","countRenderableIndexes","indexMapper","maxElements","consideredElements","Math","min","getNotTrimmedIndexesLength","firstNotHiddenIndex","getFirstNotHiddenIndex","getRenderableFromVisualIndex","countRenderableColumns","maxCols","countRenderableRows","maxRows","countNotHiddenRowIndexes","visualIndex","incrementBy","countNotHiddenIndexes","countNotHiddenColumnIndexes","renderableIndexesCount","isNaN","firstVisibleIndex","renderableIndex","Number","isInteger","notHiddenIndexes","_this2","walkontableConfig","externalRowCalculator","getPlugin","isEnabled","isDataViewInstance","preventOverflow","preventWheel","stretchH","data","_this2$instance","getDataAtCell","totalRows","totalColumns","fixedColumnsLeft","countCols","visualFixedColumnsLeft","parseInt","fixedRowsTop","countRows","visualFixedRowsTop","fixedRowsBottom","visualFixedRowsBottom","max","shouldRenderLeftOverlay","rowHeaders","shouldRenderTopOverlay","columnHeaders","shouldRenderBottomOverlay","minSpareRows","renderAllRows","headerRenderers","hasRowHeaders","renderableRowIndex","TH","visualRowIndex","appendRowHeader","runHooks","hasColHeaders","renderedColumnIndex","visualColumnsIndex","appendColHeader","columnWidth","getColWidth","rowHeight","renderedRowIndex","getRowHeight","cellRenderer","TD","_this2$translateFromR","_this2$translateFromR2","visualColumnIndex","modifiedCellCoords","visualRowToCheck","visualColumnToCheck","_modifiedCellCoords","cellProperties","getCellMeta","prop","colToProp","getDataAtRowProp","hasHook","getCellRenderer","selections","highlight","hideBorderOnMouseDownOver","onWindowResize","isDestroyed","refreshDimensions","onCellMouseDown","visualCoords","blockCalculations","cell","listen","controller","onCellContextMenu","onCellMouseOut","onCellMouseOver","onCellMouseUp","onCellCornerMouseDown","onCellCornerDblClick","beforeDraw","skipRender","beforeRender","onDraw","onScrollVertically","onScrollHorizontally","onBeforeRemoveCellClassNames","onBeforeHighlightingRowHeader","headerLevel","highlightMeta","rowMapper","newVisualRow","onBeforeHighlightingColumnHeader","columnMapper","newVisualColumn","onAfterDrawSelection","currentRow","currentColumn","layerLevel","cornersOfSelection","_this2$translateFromR3","_this2$translateFromR4","selectedRange","getSelectedRange","selectionRangeSize","size","selectionOffset","selectionForLayer","peekByIndex","to","onBeforeDrawBorders","corners","borderClassName","_corners","startRenderableRow","startRenderableColumn","endRenderableRow","endRenderableColumn","visualCorners","onBeforeTouchScroll","onAfterMomentumScroll","onBeforeStretchingColumnWidth","stretchedWidth","onModifyRowHeaderWidth","rowHeaderWidth","onModifyGetCellCoords","renderableColumnIndex","visualIndexes","_visualIndexes","visualRowFrom","visualColumnFrom","visualRowTo","visualColumnTo","viewportRowCalculatorOverride","calc","viewportOffset","viewportRowRenderingOffset","renderableRows","firstRenderedRow","startRow","lastRenderedRow","endRow","offset","ceil","viewportColumnCalculatorOverride","viewportColumnRenderingOffset","renderableColumns","firstRenderedColumn","startColumn","lastRenderedColumn","endColumn","columnHeaderHeight","spreader","_this$instance$rootEl","getBoundingClientRect","width","height","setLastSize","which","stopPropagation","observeDOMVisibility","drawInterrupted","el","isChildOfTableBody","isSelectedOnlyCell","isCellEdited","isMouseDown","_this$instance$getSel","_this$instance$getSel2","getSelectedRangeLast","isSingle","activeEditor","getActiveEditor","isOpened","updateCellHeader","querySelector","getRowHeader","_this$instance3","div","span","className","getColHeader","element","index","content","renderedIndex","parentOverlay","getParentOverlay","columnFilter","sourceToRendered","rowFilter","String","fromCharCode","maximumVisibleElementWidth","leftOffset","workspaceWidth","wtViewport","getWorkspaceWidth","maxWidth","maximumVisibleElementHeight","topOffset","workspaceHeight","getWorkspaceHeight","maxHeight","_ref2","getLastSize","mainViewIsActive","destroy"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,CAA7B,EAAgC;AAAE,SAAOC,eAAe,CAACF,GAAD,CAAf,IAAwBG,qBAAqB,CAACH,GAAD,EAAMC,CAAN,CAA7C,IAAyDG,2BAA2B,CAACJ,GAAD,EAAMC,CAAN,CAApF,IAAgGI,gBAAgB,EAAvH;AAA4H;;AAE9J,SAASA,gBAAT,GAA4B;AAAE,QAAM,IAAIC,SAAJ,CAAc,2IAAd,CAAN;AAAmK;;AAEjM,SAASH,qBAAT,CAA+BH,GAA/B,EAAoCC,CAApC,EAAuC;AAAE,MAAIM,EAAE,GAAGP,GAAG,KAAK,OAAOQ,MAAP,KAAkB,WAAlB,IAAiCR,GAAG,CAACQ,MAAM,CAACC,QAAR,CAApC,IAAyDT,GAAG,CAAC,YAAD,CAAjE,CAAZ;;AAA8F,MAAIO,EAAE,IAAI,IAAV,EAAgB;AAAQ,MAAIG,IAAI,GAAG,EAAX;AAAe,MAAIC,EAAE,GAAG,IAAT;AAAe,MAAIC,EAAE,GAAG,KAAT;;AAAgB,MAAIC,EAAJ,EAAQC,EAAR;;AAAY,MAAI;AAAE,SAAKP,EAAE,GAAGA,EAAE,CAACQ,IAAH,CAAQf,GAAR,CAAV,EAAwB,EAAEW,EAAE,GAAG,CAACE,EAAE,GAAGN,EAAE,CAACS,IAAH,EAAN,EAAiBC,IAAxB,CAAxB,EAAuDN,EAAE,GAAG,IAA5D,EAAkE;AAAED,MAAAA,IAAI,CAACQ,IAAL,CAAUL,EAAE,CAACM,KAAb;;AAAqB,UAAIlB,CAAC,IAAIS,IAAI,CAACU,MAAL,KAAgBnB,CAAzB,EAA4B;AAAQ;AAAE,GAArI,CAAsI,OAAOoB,GAAP,EAAY;AAAET,IAAAA,EAAE,GAAG,IAAL;AAAWE,IAAAA,EAAE,GAAGO,GAAL;AAAW,GAA1K,SAAmL;AAAE,QAAI;AAAE,UAAI,CAACV,EAAD,IAAOJ,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiCA,EAAE,CAAC,QAAD,CAAF;AAAiB,KAAxD,SAAiE;AAAE,UAAIK,EAAJ,EAAQ,MAAME,EAAN;AAAW;AAAE;;AAAC,SAAOJ,IAAP;AAAc;;AAErf,SAASR,eAAT,CAAyBF,GAAzB,EAA8B;AAAE,MAAIsB,KAAK,CAACC,OAAN,CAAcvB,GAAd,CAAJ,EAAwB,OAAOA,GAAP;AAAa;;AAErE,SAASwB,UAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AAAE,MAAIC,yBAAyB,EAA7B,EAAiC;AAAEJ,IAAAA,UAAU,GAAGK,OAAO,CAACC,SAArB;AAAiC,GAApE,MAA0E;AAAEN,IAAAA,UAAU,GAAG,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AAAE,UAAII,CAAC,GAAG,CAAC,IAAD,CAAR;AAAgBA,MAAAA,CAAC,CAACb,IAAF,CAAOc,KAAP,CAAaD,CAAb,EAAgBL,IAAhB;AAAuB,UAAIO,WAAW,GAAGC,QAAQ,CAACC,IAAT,CAAcH,KAAd,CAAoBP,MAApB,EAA4BM,CAA5B,CAAlB;AAAkD,UAAIK,QAAQ,GAAG,IAAIH,WAAJ,EAAf;AAAkC,UAAIN,KAAJ,EAAWU,eAAe,CAACD,QAAD,EAAWT,KAAK,CAACW,SAAjB,CAAf;AAA4C,aAAOF,QAAP;AAAkB,KAA5P;AAA+P;;AAAC,SAAOZ,UAAU,CAACQ,KAAX,CAAiB,IAAjB,EAAuBO,SAAvB,CAAP;AAA2C;;AAEla,SAASX,yBAAT,GAAqC;AAAE,MAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkC,CAACA,OAAO,CAACC,SAA/C,EAA0D,OAAO,KAAP;AAAc,MAAID,OAAO,CAACC,SAAR,CAAkBU,IAAtB,EAA4B,OAAO,KAAP;AAAc,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC,OAAO,IAAP;;AAAa,MAAI;AAAEC,IAAAA,OAAO,CAACJ,SAAR,CAAkBK,OAAlB,CAA0B5B,IAA1B,CAA+Bc,OAAO,CAACC,SAAR,CAAkBY,OAAlB,EAA2B,EAA3B,EAA+B,YAAY,CAAE,CAA7C,CAA/B;AAAgF,WAAO,IAAP;AAAc,GAApG,CAAqG,OAAOE,CAAP,EAAU;AAAE,WAAO,KAAP;AAAe;AAAE;;AAEzU,SAASP,eAAT,CAAyBQ,CAAzB,EAA4BC,CAA5B,EAA+B;AAAET,EAAAA,eAAe,GAAGU,MAAM,CAACC,cAAP,IAAyB,SAASX,eAAT,CAAyBQ,CAAzB,EAA4BC,CAA5B,EAA+B;AAAED,IAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAiB,WAAOD,CAAP;AAAW,GAAxG;;AAA0G,SAAOR,eAAe,CAACQ,CAAD,EAAIC,CAAJ,CAAtB;AAA+B;;AAE1K,SAASI,kBAAT,CAA4BlD,GAA5B,EAAiC;AAAE,SAAOmD,kBAAkB,CAACnD,GAAD,CAAlB,IAA2BoD,gBAAgB,CAACpD,GAAD,CAA3C,IAAoDI,2BAA2B,CAACJ,GAAD,CAA/E,IAAwFqD,kBAAkB,EAAjH;AAAsH;;AAEzJ,SAASA,kBAAT,GAA8B;AAAE,QAAM,IAAI/C,SAAJ,CAAc,sIAAd,CAAN;AAA8J;;AAE9L,SAASF,2BAAT,CAAqCyC,CAArC,EAAwCS,MAAxC,EAAgD;AAAE,MAAI,CAACT,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOU,iBAAiB,CAACV,CAAD,EAAIS,MAAJ,CAAxB;AAAqC,MAAIE,CAAC,GAAGT,MAAM,CAACT,SAAP,CAAiBmB,QAAjB,CAA0B1C,IAA1B,CAA+B8B,CAA/B,EAAkCa,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIF,CAAC,KAAK,QAAN,IAAkBX,CAAC,CAACc,WAAxB,EAAqCH,CAAC,GAAGX,CAAC,CAACc,WAAF,CAAcC,IAAlB;AAAwB,MAAIJ,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOlC,KAAK,CAACuC,IAAN,CAAWhB,CAAX,CAAP;AAAsB,MAAIW,CAAC,KAAK,WAAN,IAAqB,2CAA2CM,IAA3C,CAAgDN,CAAhD,CAAzB,EAA6E,OAAOD,iBAAiB,CAACV,CAAD,EAAIS,MAAJ,CAAxB;AAAsC;;AAEha,SAASF,gBAAT,CAA0BW,IAA1B,EAAgC;AAAE,MAAI,OAAOvD,MAAP,KAAkB,WAAlB,IAAiCuD,IAAI,CAACvD,MAAM,CAACC,QAAR,CAAJ,IAAyB,IAA1D,IAAkEsD,IAAI,CAAC,YAAD,CAAJ,IAAsB,IAA5F,EAAkG,OAAOzC,KAAK,CAACuC,IAAN,CAAWE,IAAX,CAAP;AAA0B;;AAE9J,SAASZ,kBAAT,CAA4BnD,GAA5B,EAAiC;AAAE,MAAIsB,KAAK,CAACC,OAAN,CAAcvB,GAAd,CAAJ,EAAwB,OAAOuD,iBAAiB,CAACvD,GAAD,CAAxB;AAAgC;;AAE3F,SAASuD,iBAAT,CAA2BvD,GAA3B,EAAgCgE,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGhE,GAAG,CAACoB,MAA7B,EAAqC4C,GAAG,GAAGhE,GAAG,CAACoB,MAAV;;AAAkB,OAAK,IAAInB,CAAC,GAAG,CAAR,EAAWgE,IAAI,GAAG,IAAI3C,KAAJ,CAAU0C,GAAV,CAAvB,EAAuC/D,CAAC,GAAG+D,GAA3C,EAAgD/D,CAAC,EAAjD,EAAqD;AAAEgE,IAAAA,IAAI,CAAChE,CAAD,CAAJ,GAAUD,GAAG,CAACC,CAAD,CAAb;AAAmB;;AAAC,SAAOgE,IAAP;AAAc;;AAEvL,SAASC,eAAT,CAAyB9B,QAAzB,EAAmCH,WAAnC,EAAgD;AAAE,MAAI,EAAEG,QAAQ,YAAYH,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAI3B,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAAS6D,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAIpE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoE,KAAK,CAACjD,MAA1B,EAAkCnB,CAAC,EAAnC,EAAuC;AAAE,QAAIqE,UAAU,GAAGD,KAAK,CAACpE,CAAD,CAAtB;AAA2BqE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4B1B,IAAAA,MAAM,CAAC2B,cAAP,CAAsBN,MAAtB,EAA8BE,UAAU,CAACK,GAAzC,EAA8CL,UAA9C;AAA4D;AAAE;;AAE7T,SAASM,YAAT,CAAsB3C,WAAtB,EAAmC4C,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBV,iBAAiB,CAAClC,WAAW,CAACK,SAAb,EAAwBuC,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBX,iBAAiB,CAAClC,WAAD,EAAc6C,WAAd,CAAjB;AAA6C,SAAO7C,WAAP;AAAqB;;AAiBvN,SAAS8C,QAAT,EAAmBC,kBAAnB,EAAuCC,KAAvC,EAA8CC,aAA9C,EAA6DC,aAA7D,EAA4EC,iBAA5E,EAA+FC,QAA/F,EAAyGC,SAAzG,EAAoHC,OAApH,EAA6HC,cAA7H,QAAmJ,2BAAnJ;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,6BAAT,EAAwCC,YAAxC,EAAsDC,WAAtD,QAAyE,yBAAzE;AACA,OAAOC,WAAP,IAAsBC,UAAtB,QAAwC,sCAAxC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,IAAIC,WAAW,GAAG,IAAIC,OAAJ,EAAlB;AACA;AACA;AACA;AACA;;AAEA,IAAIC,SAAS,GAAG,aAAa,YAAY;AACvC;AACF;AACA;AACE,WAASA,SAAT,CAAmB/D,QAAnB,EAA6B;AAC3B8B,IAAAA,eAAe,CAAC,IAAD,EAAOiC,SAAP,CAAf;AAEA;AACJ;AACA;AACA;AACA;AACA;;;AACI,SAAK/D,QAAL,GAAgBA,QAAhB;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEI,SAAKgE,YAAL,GAAoB,IAAIX,YAAJ,CAAiBrD,QAAjB,CAApB;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEI,SAAKiE,QAAL,GAAgBjE,QAAQ,CAACkE,WAAT,EAAhB;AACA;AACJ;AACA;AACA;AACA;;AAEI,SAAKC,KAAL,GAAa,KAAK,CAAlB;AACA;AACJ;AACA;AACA;AACA;;AAEI,SAAKC,KAAL,GAAa,KAAK,CAAlB;AACA;AACJ;AACA;AACA;AACA;;AAEI,SAAKC,EAAL,GAAU,KAAK,CAAf;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEI,SAAKC,QAAL,GAAgB,KAAK,CAArB;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,SAAKC,2BAAL,GAAmC,KAAnC;AACAV,IAAAA,WAAW,CAACW,GAAZ,CAAgB,IAAhB,EAAsB;AACpB;AACN;AACA;AACA;AACA;AACA;AACMC,MAAAA,kBAAkB,EAAE,KAPA;;AASpB;AACN;AACA;AACA;AACMC,MAAAA,SAAS,EAAE,KAAK,CAbI;;AAepB;AACN;AACA;AACA;AACA;AACA;AACMC,MAAAA,KAAK,EAAE,KAAK,CArBQ;;AAuBpB;AACN;AACA;AACA;AACA;AACMC,MAAAA,SAAS,EAAE,CA5BS;;AA8BpB;AACN;AACA;AACA;AACA;AACMC,MAAAA,UAAU,EAAE;AAnCQ,KAAtB;AAqCA,SAAKC,cAAL;AACA,SAAKC,cAAL;AACA,SAAKC,qBAAL;AACD;AACD;AACF;AACA;;;AAGExC,EAAAA,YAAY,CAACuB,SAAD,EAAY,CAAC;AACvBxB,IAAAA,GAAG,EAAE,QADkB;AAEvBxD,IAAAA,KAAK,EAAE,SAASkG,MAAT,GAAkB;AACvB,UAAI,CAAC,KAAKjF,QAAL,CAAckF,iBAAd,EAAL,EAAwC;AACtC,YAAI,KAAKX,2BAAT,EAAsC;AACpC,eAAKA,2BAAL,GAAmC,KAAnC;AACA,eAAKY,kBAAL,CAAwB,IAAxB;AACD;;AAED,aAAKd,EAAL,CAAQe,IAAR,CAAa,CAAC,KAAKpF,QAAL,CAAcqF,eAA5B;AACA,aAAKrF,QAAL,CAAcqF,eAAd,GAAgC,KAAhC;AACA,aAAKrF,QAAL,CAAcsF,UAAd,GAA2B,KAA3B;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;;AAlB2B,GAAD,EAoBrB;AACD/C,IAAAA,GAAG,EAAE,oBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASoG,kBAAT,GAA8B;AACnC,UAAII,KAAK,GAAGpF,SAAS,CAACnB,MAAV,GAAmB,CAAnB,IAAwBmB,SAAS,CAAC,CAAD,CAAT,KAAiBqF,SAAzC,GAAqDrF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAhF;;AAEA,UAAI,KAAKH,QAAL,CAAckF,iBAAd,EAAJ,EAAuC;AACrC,aAAKX,2BAAL,GAAmC,IAAnC;AACD,OAFD,MAEO;AACL,aAAKF,EAAL,CAAQoB,UAAR,CAAmBN,kBAAnB,CAAsCI,KAAtC;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAjBK,GApBqB,EAuCrB;AACDhD,IAAAA,GAAG,EAAE,iBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAAS2G,eAAT,CAAyBC,MAAzB,EAAiCC,OAAjC,EAA0C;AAC/C,UAAIC,EAAE,GAAG,KAAKxB,EAAL,CAAQyB,OAAR,CAAgBH,MAAhB,EAAwBC,OAAxB,CAAT;;AAEA,UAAIC,EAAE,GAAG,CAAT,EAAY;AACV;AACA,eAAO,IAAP;AACD;;AAED,aAAOA,EAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArBK,GAvCqB,EA8DrB;AACDtD,IAAAA,GAAG,EAAE,gBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASgH,cAAT,CAAwBJ,MAAxB,EAAgCK,SAAhC,EAA2CC,WAA3C,EAAwDC,YAAxD,EAAsEC,UAAtE,EAAkF;AACvF,aAAO,KAAK9B,EAAL,CAAQ0B,cAAR,CAAuBJ,MAAvB,EAA+BK,SAA/B,EAA0CC,WAA1C,EAAuDC,YAAvD,EAAqEC,UAArE,CAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK,GA9DqB,EA4ErB;AACD5D,IAAAA,GAAG,EAAE,4BADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASqH,0BAAT,CAAoCC,MAApC,EAA4CJ,WAA5C,EAAyDE,UAAzD,EAAqE;AAC1E,aAAO,KAAK9B,EAAL,CAAQ+B,0BAAR,CAAmCC,MAAnC,EAA2CJ,WAA3C,EAAwDE,UAAxD,CAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK,GA5EqB,EA0FrB;AACD5D,IAAAA,GAAG,EAAE,0BADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASuH,wBAAT,CAAkCC,GAAlC,EAAuCP,SAAvC,EAAkDE,YAAlD,EAAgE;AACrE,aAAO,KAAK7B,EAAL,CAAQiC,wBAAR,CAAiCC,GAAjC,EAAsCP,SAAtC,EAAiDE,YAAjD,CAAP;AACD;AACD;AACJ;AACA;AACA;AACA;;AATK,GA1FqB,EAqGrB;AACD3D,IAAAA,GAAG,EAAE,gBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAAS+F,cAAT,GAA0B;AAC/B,UAAI0B,IAAI,GAAG3C,WAAW,CAAC4C,GAAZ,CAAgB,IAAhB,CAAX;AACA,UAAIC,cAAc,GAAG,KAAK1G,QAA1B;AAAA,UACI2G,WAAW,GAAGD,cAAc,CAACC,WADjC;AAAA,UAEIC,YAAY,GAAGF,cAAc,CAACE,YAFlC;AAGA,UAAIC,aAAa,GAAGF,WAAW,CAACG,YAAZ,CAAyB,OAAzB,CAApB;;AAEA,UAAID,aAAJ,EAAmB;AACjBF,QAAAA,WAAW,CAACI,YAAZ,CAAyB,oBAAzB,EAA+CF,aAA/C,EADiB,CAC8C;AAChE;;AAEDlE,MAAAA,QAAQ,CAACgE,WAAD,EAAc,cAAd,CAAR;AACAH,MAAAA,IAAI,CAAC7B,KAAL,GAAaiC,YAAY,CAACI,aAAb,CAA2B,OAA3B,CAAb;AACArE,MAAAA,QAAQ,CAAC6D,IAAI,CAAC7B,KAAN,EAAa,QAAb,CAAR;;AAEA,UAAI,KAAK3E,QAAL,CAAckE,WAAd,GAA4B+C,cAAhC,EAAgD;AAC9CtE,QAAAA,QAAQ,CAAC6D,IAAI,CAAC7B,KAAN,EAAa,KAAK3E,QAAL,CAAckE,WAAd,GAA4B+C,cAAzC,CAAR;AACD;;AAED,WAAK9C,KAAL,GAAayC,YAAY,CAACI,aAAb,CAA2B,OAA3B,CAAb;AACAR,MAAAA,IAAI,CAAC7B,KAAL,CAAWuC,WAAX,CAAuB,KAAK/C,KAA5B;AACA,WAAKC,KAAL,GAAawC,YAAY,CAACI,aAAb,CAA2B,OAA3B,CAAb;AACAR,MAAAA,IAAI,CAAC7B,KAAL,CAAWuC,WAAX,CAAuB,KAAK9C,KAA5B;AACA,WAAKpE,QAAL,CAAc2E,KAAd,GAAsB6B,IAAI,CAAC7B,KAA3B;AACA,WAAK3E,QAAL,CAAcmH,SAAd,CAAwBC,YAAxB,CAAqCZ,IAAI,CAAC7B,KAA1C,EAAiD,KAAK3E,QAAL,CAAcmH,SAAd,CAAwBE,UAAzE;AACD;AACD;AACJ;AACA;AACA;AACA;;AAhCK,GArGqB,EAuIrB;AACD9E,IAAAA,GAAG,EAAE,gBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASgG,cAAT,GAA0B;AAC/B,UAAIuC,KAAK,GAAG,IAAZ;;AAEA,UAAId,IAAI,GAAG3C,WAAW,CAAC4C,GAAZ,CAAgB,IAAhB,CAAX;AACA,UAAIc,eAAe,GAAG,KAAKvH,QAA3B;AAAA,UACI2G,WAAW,GAAGY,eAAe,CAACZ,WADlC;AAAA,UAEIC,YAAY,GAAGW,eAAe,CAACX,YAFnC;AAAA,UAGIY,SAAS,GAAGD,eAAe,CAACC,SAHhC;AAIA,UAAIC,eAAe,GAAGb,YAAY,CAACa,eAAnC;AACA,WAAKzD,YAAL,CAAkB0D,gBAAlB,CAAmCf,WAAnC,EAAgD,WAAhD,EAA6D,UAAUgB,KAAV,EAAiB;AAC5EnB,QAAAA,IAAI,CAAC/B,kBAAL,GAA0B,IAA1B;;AAEA,YAAI,CAAC6C,KAAK,CAACM,sBAAN,CAA6BD,KAAK,CAAC3F,MAAnC,CAAL,EAAiD;AAC/C,cAAI6F,UAAU,GAAGP,KAAK,CAACtH,QAAN,CAAe6H,UAAhC;AACAjF,UAAAA,kBAAkB,CAACiF,UAAD,CAAlB;AACAF,UAAAA,KAAK,CAACG,cAAN;AACAD,UAAAA,UAAU,CAACE,KAAX,GAJ+C,CAI3B;AACrB;AACF,OATD;AAUA,WAAK/D,YAAL,CAAkB0D,gBAAlB,CAAmCf,WAAnC,EAAgD,SAAhD,EAA2D,YAAY;AACrEH,QAAAA,IAAI,CAAC/B,kBAAL,GAA0B,KAA1B;AACD,OAFD;AAGA,WAAKT,YAAL,CAAkB0D,gBAAlB,CAAmCf,WAAnC,EAAgD,WAAhD,EAA6D,UAAUgB,KAAV,EAAiB;AAC5E,YAAInB,IAAI,CAAC/B,kBAAL,IAA2B,CAAC6C,KAAK,CAACM,sBAAN,CAA6BD,KAAK,CAAC3F,MAAnC,CAAhC,EAA4E;AAC1E;AACA,cAAIsF,KAAK,CAACrD,QAAN,CAAe+D,iBAAnB,EAAsC;AACpCpF,YAAAA,kBAAkB,CAAC0E,KAAK,CAACtH,QAAN,CAAe6H,UAAhB,CAAlB;AACD;;AAEDF,UAAAA,KAAK,CAACG,cAAN;AACD;AACF,OATD;AAUA,WAAK9D,YAAL,CAAkB0D,gBAAlB,CAAmCD,eAAnC,EAAoD,OAApD,EAA6D,UAAUE,KAAV,EAAiB;AAC5E,YAAIH,SAAS,CAACS,YAAV,MAA4B,CAACN,KAAK,CAACO,QAAvC,EAAiD;AAC/CV,UAAAA,SAAS,CAACW,MAAV;AACD;AACF,OAJD;AAKA,WAAKnE,YAAL,CAAkB0D,gBAAlB,CAAmCD,eAAnC,EAAoD,SAApD,EAA+D,UAAUE,KAAV,EAAiB;AAC9E,YAAIH,SAAS,CAACS,YAAV,MAA4BzE,WAAW,CAACmE,KAAD,CAA3C,EAAoD;AAClD;AACAH,UAAAA,SAAS,CAACW,MAAV;AACD;;AAED3B,QAAAA,IAAI,CAAC9B,SAAL,GAAiB,KAAjB;;AAEA,YAAItB,cAAc,CAACwD,YAAY,CAACwB,aAAd,CAAd,IAA8C,CAACZ,SAAS,CAACa,UAAV,EAAD,IAA2B,CAACb,SAAS,CAACc,qBAAV,EAA5B,IAAiE,CAAC3B,WAAW,CAAC4B,QAAZ,CAAqBZ,KAAK,CAAC3F,MAA3B,CAAlE,IAAwG,CAACuB,YAAY,CAACoE,KAAD,CAAvK,EAAgL;AAC9KL,UAAAA,KAAK,CAACtH,QAAN,CAAewI,QAAf;AACD;AACF,OAXD;AAYA,WAAKxE,YAAL,CAAkB0D,gBAAlB,CAAmCD,eAAnC,EAAoD,aAApD,EAAmE,UAAUE,KAAV,EAAiB;AAClF,YAAIH,SAAS,CAACS,YAAV,MAA4B1E,YAAY,CAACoE,KAAD,CAA5C,EAAqD;AACnDH,UAAAA,SAAS,CAACW,MAAV;AACA3B,UAAAA,IAAI,CAAC9B,SAAL,GAAiB,KAAjB;AACD;AACF,OALD;AAMA,WAAKV,YAAL,CAAkB0D,gBAAlB,CAAmCD,eAAnC,EAAoD,UAApD,EAAgE,YAAY;AAC1E,YAAID,SAAS,CAACS,YAAV,EAAJ,EAA8B;AAC5BT,UAAAA,SAAS,CAACW,MAAV;AACD;;AAED3B,QAAAA,IAAI,CAAC9B,SAAL,GAAiB,KAAjB;AACD,OAND;AAOA,WAAKV,YAAL,CAAkB0D,gBAAlB,CAAmCD,eAAnC,EAAoD,WAApD,EAAiE,UAAUE,KAAV,EAAiB;AAChF,YAAIc,cAAc,GAAGd,KAAK,CAAC3F,MAA3B;AACA,YAAI0G,MAAM,GAAGf,KAAK,CAACgB,CAAN,IAAWhB,KAAK,CAACiB,OAA9B;AACA,YAAIC,MAAM,GAAGlB,KAAK,CAACmB,CAAN,IAAWnB,KAAK,CAACoB,OAA9B;AACA,YAAInK,IAAI,GAAG+I,KAAK,CAAC3F,MAAjB;;AAEA,YAAIwE,IAAI,CAAC9B,SAAL,IAAkB,CAACiC,WAAnB,IAAkC,CAACW,KAAK,CAACtH,QAAN,CAAegJ,IAAtD,EAA4D;AAC1D,iBAD0D,CAClD;AACT,SAR+E,CAQ9E;;;AAGF,YAAIC,MAAM,GAAG3B,KAAK,CAACtH,QAAN,CAAegJ,IAAf,CAAoB3E,EAApB,CAAuB6E,OAAvB,CAA+BD,MAA5C;;AAEA,YAAIrK,IAAI,KAAKqK,MAAb,EAAqB;AACnB,cAAIE,cAAc,GAAGnG,iBAAiB,CAAC4D,YAAD,CAAtC;;AAEA,cAAIA,YAAY,CAACwC,gBAAb,CAA8BV,MAAM,GAAGS,cAAvC,EAAuDN,MAAvD,MAAmEI,MAAnE,IAA6ErC,YAAY,CAACwC,gBAAb,CAA8BV,MAA9B,EAAsCG,MAAM,GAAGM,cAA/C,MAAmEF,MAApJ,EAA4J;AAC1J;AACD;AACF,SAND,MAMO;AACL,iBAAOrK,IAAI,KAAK6I,eAAhB,EAAiC;AAC/B,gBAAI7I,IAAI,KAAK,IAAb,EAAmB;AACjB,kBAAI+I,KAAK,CAAC0B,oBAAV,EAAgC;AAC9B;AACD,eAHgB,CAGf;;;AAGF;AACD;;AAED,gBAAIzK,IAAI,KAAK+H,WAAb,EAA0B;AACxB;AACA;AACD;;AAED/H,YAAAA,IAAI,GAAGA,IAAI,CAAC0K,UAAZ;AACD;AACF,SArC+E,CAqC9E;;;AAGF,YAAIC,qBAAqB,GAAG,OAAOjC,KAAK,CAACrD,QAAN,CAAesF,qBAAtB,KAAgD,UAAhD,GAA6DjC,KAAK,CAACrD,QAAN,CAAesF,qBAAf,CAAqCd,cAArC,CAA7D,GAAoHnB,KAAK,CAACrD,QAAN,CAAesF,qBAA/J;;AAEA,YAAIA,qBAAJ,EAA2B;AACzBjC,UAAAA,KAAK,CAACtH,QAAN,CAAewJ,YAAf;AACD,SAFD,MAEO;AACLlC,UAAAA,KAAK,CAACtH,QAAN,CAAeyJ,aAAf,CAA6B,KAA7B,EAAoC,KAApC;AACD;AACF,OA/CD;AAgDA,WAAKzF,YAAL,CAAkB0D,gBAAlB,CAAmClB,IAAI,CAAC7B,KAAxC,EAA+C,aAA/C,EAA8D,UAAUgD,KAAV,EAAiB;AAC7E,YAAIL,KAAK,CAACrD,QAAN,CAAe+D,iBAAf,IAAoC7E,OAAO,CAACwE,KAAK,CAAC3F,MAAP,CAA/C,EAA+D;AAC7D;AACD,SAH4E,CAG3E;AACF;;;AAGA2F,QAAAA,KAAK,CAACG,cAAN;AACD,OARD;AASD;AACD;AACJ;AACA;AACA;AACA;AACA;;AA/HK,GAvIqB,EAwQrB;AACDvF,IAAAA,GAAG,EAAE,uCADJ;AAEDxD,IAAAA,KAAK,EAAE,SAAS2K,qCAAT,CAA+CC,IAA/C,EAAqD;AAC1D,UAAIpD,GAAG,GAAGoD,IAAI,CAACpD,GAAf;AAAA,UACIqD,GAAG,GAAGD,IAAI,CAACC,GADf,CAD0D,CAG1D;;AACA,aAAOxK,UAAU,CAACsE,UAAD,EAAa5C,kBAAkB,CAAC,KAAK+I,oCAAL,CAA0CtD,GAA1C,EAA+CqD,GAA/C,CAAD,CAA/B,CAAjB;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAdK,GAxQqB,EAwRrB;AACDrH,IAAAA,GAAG,EAAE,sCADJ;AAEDxD,IAAAA,KAAK,EAAE,SAAS8K,oCAAT,CAA8CC,aAA9C,EAA6DC,gBAA7D,EAA+E;AACpF;AACA;AACA,UAAIC,SAAS,GAAGF,aAAa,IAAI,CAAjB,GAAqB,KAAK9J,QAAL,CAAciK,cAAd,CAA6BC,4BAA7B,CAA0DJ,aAA1D,CAArB,GAAgGA,aAAhH;AACA,UAAIK,YAAY,GAAGJ,gBAAgB,IAAI,CAApB,GAAwB,KAAK/J,QAAL,CAAcoK,iBAAd,CAAgCF,4BAAhC,CAA6DH,gBAA7D,CAAxB,GAAyGA,gBAA5H;;AAEA,UAAIC,SAAS,KAAK,IAAlB,EAAwB;AACtBA,QAAAA,SAAS,GAAGF,aAAZ;AACD;;AAED,UAAIK,YAAY,KAAK,IAArB,EAA2B;AACzBA,QAAAA,YAAY,GAAGJ,gBAAf;AACD;;AAED,aAAO,CAACC,SAAD,EAAYG,YAAZ,CAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1BK,GAxRqB,EAoTrB;AACD5H,IAAAA,GAAG,EAAE,wBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASsL,sBAAT,CAAgCC,WAAhC,EAA6CC,WAA7C,EAA0D;AAC/D,UAAIC,kBAAkB,GAAGC,IAAI,CAACC,GAAL,CAASJ,WAAW,CAACK,0BAAZ,EAAT,EAAmDJ,WAAnD,CAAzB,CAD+D,CAC2B;;AAE1F,UAAIK,mBAAmB,GAAGN,WAAW,CAACO,sBAAZ,CAAmCL,kBAAkB,GAAG,CAAxD,EAA2D,CAAC,CAA5D,CAA1B,CAH+D,CAG2B;;AAE1F,UAAII,mBAAmB,KAAK,IAA5B,EAAkC;AAChC,eAAO,CAAP;AACD;;AAED,aAAON,WAAW,CAACQ,4BAAZ,CAAyCF,mBAAzC,IAAgE,CAAvE;AACD;AACD;AACJ;AACA;AACA;AACA;;AAjBK,GApTqB,EAuUrB;AACDrI,IAAAA,GAAG,EAAE,wBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASgM,sBAAT,GAAkC;AACvC,aAAO,KAAKV,sBAAL,CAA4B,KAAKrK,QAAL,CAAcoK,iBAA1C,EAA6D,KAAKnG,QAAL,CAAc+G,OAA3E,CAAP;AACD;AACD;AACJ;AACA;AACA;AACA;;AATK,GAvUqB,EAkVrB;AACDzI,IAAAA,GAAG,EAAE,qBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASkM,mBAAT,GAA+B;AACpC,aAAO,KAAKZ,sBAAL,CAA4B,KAAKrK,QAAL,CAAciK,cAA1C,EAA0D,KAAKhG,QAAL,CAAciH,OAAxE,CAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK,GAlVqB,EAgWrB;AACD3I,IAAAA,GAAG,EAAE,0BADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASoM,wBAAT,CAAkCC,WAAlC,EAA+CC,WAA/C,EAA4D;AACjE,aAAO,KAAKC,qBAAL,CAA2BF,WAA3B,EAAwCC,WAAxC,EAAqD,KAAKrL,QAAL,CAAciK,cAAnE,EAAmF,KAAKgB,mBAAL,EAAnF,CAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK,GAhWqB,EA8WrB;AACD1I,IAAAA,GAAG,EAAE,6BADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASwM,2BAAT,CAAqCH,WAArC,EAAkDC,WAAlD,EAA+D;AACpE,aAAO,KAAKC,qBAAL,CAA2BF,WAA3B,EAAwCC,WAAxC,EAAqD,KAAKrL,QAAL,CAAcoK,iBAAnE,EAAsF,KAAKW,sBAAL,EAAtF,CAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdK,GA9WqB,EA8XrB;AACDxI,IAAAA,GAAG,EAAE,uBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASuM,qBAAT,CAA+BF,WAA/B,EAA4CC,WAA5C,EAAyDf,WAAzD,EAAsEkB,sBAAtE,EAA8F;AACnG,UAAIC,KAAK,CAACL,WAAD,CAAL,IAAsBA,WAAW,GAAG,CAAxC,EAA2C;AACzC,eAAO,CAAP;AACD;;AAED,UAAIM,iBAAiB,GAAGpB,WAAW,CAACO,sBAAZ,CAAmCO,WAAnC,EAAgDC,WAAhD,CAAxB;AACA,UAAIM,eAAe,GAAGrB,WAAW,CAACQ,4BAAZ,CAAyCY,iBAAzC,CAAtB;;AAEA,UAAI,CAACE,MAAM,CAACC,SAAP,CAAiBF,eAAjB,CAAL,EAAwC;AACtC,eAAO,CAAP;AACD;;AAED,UAAIG,gBAAgB,GAAG,CAAvB;;AAEA,UAAIT,WAAW,GAAG,CAAlB,EAAqB;AACnB;AACAS,QAAAA,gBAAgB,GAAGH,eAAe,GAAG,CAArC;AACD,OAHD,MAGO,IAAIN,WAAW,GAAG,CAAlB,EAAqB;AAC1BS,QAAAA,gBAAgB,GAAGN,sBAAsB,GAAGG,eAA5C;AACD;;AAED,aAAOG,gBAAP;AACD;AACD;AACJ;AACA;AACA;AACA;;AA7BK,GA9XqB,EA6ZrB;AACDvJ,IAAAA,GAAG,EAAE,uBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASiG,qBAAT,GAAiC;AACtC,UAAI+G,MAAM,GAAG,IAAb;;AAEA,UAAIvF,IAAI,GAAG3C,WAAW,CAAC4C,GAAZ,CAAgB,IAAhB,CAAX;AACA,UAAIuF,iBAAiB,GAAG;AACtBC,QAAAA,qBAAqB,EAAE,KAAKjM,QAAL,CAAckM,SAAd,CAAwB,aAAxB,KAA0C,KAAKlM,QAAL,CAAckM,SAAd,CAAwB,aAAxB,EAAuCC,SAAvC,EAD3C;AAEtBxH,QAAAA,KAAK,EAAE6B,IAAI,CAAC7B,KAFU;AAGtByH,QAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,iBAAOxI,cAAc,CAACmI,MAAM,CAAC/L,QAAR,CAArB;AACD,SALqB;AAMtBqM,QAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C,iBAAON,MAAM,CAAC9H,QAAP,CAAgBoI,eAAvB;AACD,SARqB;AAStBC,QAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,iBAAOP,MAAM,CAAC9H,QAAP,CAAgBqI,YAAvB;AACD,SAXqB;AAYtBC,QAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,iBAAOR,MAAM,CAAC9H,QAAP,CAAgBsI,QAAvB;AACD,SAdqB;AAetBC,QAAAA,IAAI,EAAE,SAASA,IAAT,CAAc1C,aAAd,EAA6BC,gBAA7B,EAA+C;AACnD,cAAI0C,eAAJ;;AAEA,iBAAO,CAACA,eAAe,GAAGV,MAAM,CAAC/L,QAA1B,EAAoC0M,aAApC,CAAkD9M,KAAlD,CAAwD6M,eAAxD,EAAyE3L,kBAAkB,CAACiL,MAAM,CAAClC,oCAAP,CAA4CC,aAA5C,EAA2DC,gBAA3D,CAAD,CAA3F,CAAP;AACD,SAnBqB;AAoBtB4C,QAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,iBAAOZ,MAAM,CAACd,mBAAP,EAAP;AACD,SAtBqB;AAuBtB2B,QAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,iBAAOb,MAAM,CAAChB,sBAAP,EAAP;AACD,SAzBqB;AA0BtB;AACA8B,QAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B;AAC5C,cAAIC,SAAS,GAAGf,MAAM,CAAC/L,QAAP,CAAgB8M,SAAhB,EAAhB;;AAEA,cAAIC,sBAAsB,GAAGtC,IAAI,CAACC,GAAL,CAASsC,QAAQ,CAACjB,MAAM,CAAC9H,QAAP,CAAgB4I,gBAAjB,EAAmC,EAAnC,CAAjB,EAAyDC,SAAzD,IAAsE,CAAnG;AACA,iBAAOf,MAAM,CAACR,2BAAP,CAAmCwB,sBAAnC,EAA2D,CAAC,CAA5D,CAAP;AACD,SAhCqB;AAiCtB;AACAE,QAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,cAAIC,SAAS,GAAGnB,MAAM,CAAC/L,QAAP,CAAgBkN,SAAhB,EAAhB;;AAEA,cAAIC,kBAAkB,GAAG1C,IAAI,CAACC,GAAL,CAASsC,QAAQ,CAACjB,MAAM,CAAC9H,QAAP,CAAgBgJ,YAAjB,EAA+B,EAA/B,CAAjB,EAAqDC,SAArD,IAAkE,CAA3F;AACA,iBAAOnB,MAAM,CAACZ,wBAAP,CAAgCgC,kBAAhC,EAAoD,CAAC,CAArD,CAAP;AACD,SAvCqB;AAwCtB;AACAC,QAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C,cAAIF,SAAS,GAAGnB,MAAM,CAAC/L,QAAP,CAAgBkN,SAAhB,EAAhB;;AAEA,cAAIG,qBAAqB,GAAG5C,IAAI,CAAC6C,GAAL,CAASJ,SAAS,GAAGF,QAAQ,CAACjB,MAAM,CAAC9H,QAAP,CAAgBmJ,eAAjB,EAAkC,EAAlC,CAA7B,EAAoE,CAApE,CAA5B;AACA,iBAAOrB,MAAM,CAACZ,wBAAP,CAAgCkC,qBAAhC,EAAuD,CAAvD,CAAP;AACD,SA9CqB;AA+CtB;AACAE,QAAAA,uBAAuB,EAAE,SAASA,uBAAT,GAAmC;AAC1D,iBAAOxB,MAAM,CAAC9H,QAAP,CAAgB4I,gBAAhB,GAAmC,CAAnC,IAAwCb,iBAAiB,CAACwB,UAAlB,GAA+BxO,MAA/B,GAAwC,CAAvF;AACD,SAlDqB;AAmDtB;AACAyO,QAAAA,sBAAsB,EAAE,SAASA,sBAAT,GAAkC;AACxD,iBAAO1B,MAAM,CAAC9H,QAAP,CAAgBgJ,YAAhB,GAA+B,CAA/B,IAAoCjB,iBAAiB,CAAC0B,aAAlB,GAAkC1O,MAAlC,GAA2C,CAAtF;AACD,SAtDqB;AAuDtB;AACA2O,QAAAA,yBAAyB,EAAE,SAASA,yBAAT,GAAqC;AAC9D,iBAAO5B,MAAM,CAAC9H,QAAP,CAAgBmJ,eAAhB,GAAkC,CAAzC;AACD,SA1DqB;AA2DtBQ,QAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,iBAAO7B,MAAM,CAAC9H,QAAP,CAAgB2J,YAAvB;AACD,SA7DqB;AA8DtBC,QAAAA,aAAa,EAAE,KAAK5J,QAAL,CAAc4J,aA9DP;AA+DtBL,QAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,cAAIM,eAAe,GAAG,EAAtB;;AAEA,cAAI/B,MAAM,CAAC/L,QAAP,CAAgB+N,aAAhB,EAAJ,EAAqC;AACnCD,YAAAA,eAAe,CAAChP,IAAhB,CAAqB,UAAUkP,kBAAV,EAA8BC,EAA9B,EAAkC;AACrD;AACA;AACA,kBAAIC,cAAc,GAAGF,kBAAkB,IAAI,CAAtB,GAA0BjC,MAAM,CAAC/L,QAAP,CAAgBiK,cAAhB,CAA+BC,4BAA/B,CAA4D8D,kBAA5D,CAA1B,GAA4GA,kBAAjI;;AAEAjC,cAAAA,MAAM,CAACoC,eAAP,CAAuBD,cAAvB,EAAuCD,EAAvC;AACD,aAND;AAOD;;AAEDlC,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,4BAAzB,EAAuDN,eAAvD;;AAEA,iBAAOA,eAAP;AACD,SA/EqB;AAgFtBJ,QAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,cAAII,eAAe,GAAG,EAAtB;;AAEA,cAAI/B,MAAM,CAAC/L,QAAP,CAAgBqO,aAAhB,EAAJ,EAAqC;AACnCP,YAAAA,eAAe,CAAChP,IAAhB,CAAqB,UAAUwP,mBAAV,EAA+BL,EAA/B,EAAmC;AACtD;AACA;AACA,kBAAIM,kBAAkB,GAAGD,mBAAmB,IAAI,CAAvB,GAA2BvC,MAAM,CAAC/L,QAAP,CAAgBoK,iBAAhB,CAAkCF,4BAAlC,CAA+DoE,mBAA/D,CAA3B,GAAiHA,mBAA1I;;AAEAvC,cAAAA,MAAM,CAACyC,eAAP,CAAuBD,kBAAvB,EAA2CN,EAA3C;AACD,aAND;AAOD;;AAEDlC,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,+BAAzB,EAA0DN,eAA1D;;AAEA,iBAAOA,eAAP;AACD,SAhGqB;AAiGtBW,QAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBH,mBAArB,EAA0C;AACrD,cAAIlD,WAAW,GAAGW,MAAM,CAAC/L,QAAP,CAAgBoK,iBAAhB,CAAkCF,4BAAlC,CAA+DoE,mBAA/D,CAAlB,CADqD,CACkD;AACvG;AACA;;;AAGA,iBAAOvC,MAAM,CAAC/L,QAAP,CAAgB0O,WAAhB,CAA4BtD,WAAW,KAAK,IAAhB,GAAuBkD,mBAAvB,GAA6ClD,WAAzE,CAAP;AACD,SAxGqB;AAyGtBuD,QAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBC,gBAAnB,EAAqC;AAC9C,cAAIxD,WAAW,GAAGW,MAAM,CAAC/L,QAAP,CAAgBiK,cAAhB,CAA+BC,4BAA/B,CAA4D0E,gBAA5D,CAAlB;;AAEA,iBAAO7C,MAAM,CAAC/L,QAAP,CAAgB6O,YAAhB,CAA6BzD,WAAW,KAAK,IAAhB,GAAuBwD,gBAAvB,GAA0CxD,WAAvE,CAAP;AACD,SA7GqB;AA8GtB0D,QAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBF,gBAAtB,EAAwCN,mBAAxC,EAA6DS,EAA7D,EAAiE;AAC7E,cAAIC,qBAAqB,GAAGjD,MAAM,CAAClC,oCAAP,CAA4C+E,gBAA5C,EAA8DN,mBAA9D,CAA5B;AAAA,cACIW,sBAAsB,GAAGtR,cAAc,CAACqR,qBAAD,EAAwB,CAAxB,CAD3C;AAAA,cAEId,cAAc,GAAGe,sBAAsB,CAAC,CAAD,CAF3C;AAAA,cAGIC,iBAAiB,GAAGD,sBAAsB,CAAC,CAAD,CAH9C,CAD6E,CAI1B;;;AAGnD,cAAIE,kBAAkB,GAAGpD,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,qBAAzB,EAAgDF,cAAhD,EAAgEgB,iBAAhE,CAAzB;;AAEA,cAAIE,gBAAgB,GAAGlB,cAAvB;AACA,cAAImB,mBAAmB,GAAGH,iBAA1B;;AAEA,cAAIhQ,KAAK,CAACC,OAAN,CAAcgQ,kBAAd,CAAJ,EAAuC;AACrC,gBAAIG,mBAAmB,GAAG3R,cAAc,CAACwR,kBAAD,EAAqB,CAArB,CAAxC;;AAEAC,YAAAA,gBAAgB,GAAGE,mBAAmB,CAAC,CAAD,CAAtC;AACAD,YAAAA,mBAAmB,GAAGC,mBAAmB,CAAC,CAAD,CAAzC;AACD;;AAED,cAAIC,cAAc,GAAGxD,MAAM,CAAC/L,QAAP,CAAgBwP,WAAhB,CAA4BJ,gBAA5B,EAA8CC,mBAA9C,CAArB;;AAEA,cAAII,IAAI,GAAG1D,MAAM,CAAC/L,QAAP,CAAgB0P,SAAhB,CAA0BL,mBAA1B,CAAX;;AAEA,cAAItQ,KAAK,GAAGgN,MAAM,CAAC/L,QAAP,CAAgB2P,gBAAhB,CAAiCP,gBAAjC,EAAmDK,IAAnD,CAAZ;;AAEA,cAAI1D,MAAM,CAAC/L,QAAP,CAAgB4P,OAAhB,CAAwB,mBAAxB,CAAJ,EAAkD;AAChD7Q,YAAAA,KAAK,GAAGgN,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,mBAAzB,EAA8CrP,KAA9C,EAAqDwQ,cAArD,CAAR;AACD;;AAEDxD,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,gBAAzB,EAA2CW,EAA3C,EAA+Cb,cAA/C,EAA+DgB,iBAA/D,EAAkFO,IAAlF,EAAwF1Q,KAAxF,EAA+FwQ,cAA/F;;AAEAxD,UAAAA,MAAM,CAAC/L,QAAP,CAAgB6P,eAAhB,CAAgCN,cAAhC,EAAgDxD,MAAM,CAAC/L,QAAvD,EAAiE+O,EAAjE,EAAqEb,cAArE,EAAqFgB,iBAArF,EAAwGO,IAAxG,EAA8G1Q,KAA9G,EAAqHwQ,cAArH;;AAEAxD,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,eAAzB,EAA0CW,EAA1C,EAA8Cb,cAA9C,EAA8DgB,iBAA9D,EAAiFO,IAAjF,EAAuF1Q,KAAvF,EAA8FwQ,cAA9F;AACD,SAhJqB;AAiJtBO,QAAAA,UAAU,EAAE,KAAK9P,QAAL,CAAcwH,SAAd,CAAwBuI,SAjJd;AAkJtBC,QAAAA,yBAAyB,EAAE,SAASA,yBAAT,GAAqC;AAC9D,iBAAOjE,MAAM,CAAC9H,QAAP,CAAgB+D,iBAAvB;AACD,SApJqB;AAqJtBiI,QAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxC,cAAI,CAAClE,MAAM,CAAC/L,QAAR,IAAoB+L,MAAM,CAAC/L,QAAP,CAAgBkQ,WAAxC,EAAqD;AACnD;AACD;;AAEDnE,UAAAA,MAAM,CAAC/L,QAAP,CAAgBmQ,iBAAhB;AACD,SA3JqB;AA4JtBC,QAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBzI,KAAzB,EAAgChC,MAAhC,EAAwCoJ,EAAxC,EAA4C1K,EAA5C,EAAgD;AAC/D,cAAIgM,YAAY,GAAGtE,MAAM,CAACrC,qCAAP,CAA6C/D,MAA7C,CAAnB;;AAEA,cAAI2K,iBAAiB,GAAG;AACtB/J,YAAAA,GAAG,EAAE,KADiB;AAEtBF,YAAAA,MAAM,EAAE,KAFc;AAGtBkK,YAAAA,IAAI,EAAE;AAHgB,WAAxB;;AAMAxE,UAAAA,MAAM,CAAC/L,QAAP,CAAgBwQ,MAAhB;;AAEAzE,UAAAA,MAAM,CAACzH,QAAP,GAAkBD,EAAlB;AACAmC,UAAAA,IAAI,CAAC9B,SAAL,GAAiB,IAAjB;;AAEAqH,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,uBAAzB,EAAkDzG,KAAlD,EAAyD0I,YAAzD,EAAuEtB,EAAvE,EAA2EuB,iBAA3E;;AAEA,cAAIhN,6BAA6B,CAACqE,KAAD,CAAjC,EAA0C;AACxC;AACD;;AAEDhE,UAAAA,gBAAgB,CAACgE,KAAD,EAAQ;AACtBhC,YAAAA,MAAM,EAAE0K,YADc;AAEtB7I,YAAAA,SAAS,EAAEuE,MAAM,CAAC/L,QAAP,CAAgBwH,SAFL;AAGtBiJ,YAAAA,UAAU,EAAEH;AAHU,WAAR,CAAhB;;AAMAvE,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,sBAAzB,EAAiDzG,KAAjD,EAAwD0I,YAAxD,EAAsEtB,EAAtE;;AAEAhD,UAAAA,MAAM,CAACzH,QAAP,GAAkByH,MAAM,CAAC1H,EAAzB;AACD,SAzLqB;AA0LtBqM,QAAAA,iBAAiB,EAAE,SAASA,iBAAT,CAA2B/I,KAA3B,EAAkChC,MAAlC,EAA0CoJ,EAA1C,EAA8C1K,EAA9C,EAAkD;AACnE,cAAIgM,YAAY,GAAGtE,MAAM,CAACrC,qCAAP,CAA6C/D,MAA7C,CAAnB;;AAEAoG,UAAAA,MAAM,CAACzH,QAAP,GAAkBD,EAAlB;AACAmC,UAAAA,IAAI,CAAC9B,SAAL,GAAiB,KAAjB;;AAEA,cAAIqH,MAAM,CAAC/L,QAAP,CAAgBwH,SAAhB,CAA0BS,YAA1B,EAAJ,EAA8C;AAC5C8D,YAAAA,MAAM,CAAC/L,QAAP,CAAgBwH,SAAhB,CAA0BW,MAA1B;AACD;;AAED4D,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,yBAAzB,EAAoDzG,KAApD,EAA2D0I,YAA3D,EAAyEtB,EAAzE;;AAEA,cAAIzL,6BAA6B,CAACqE,KAAD,CAAjC,EAA0C;AACxC;AACD;;AAEDoE,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,wBAAzB,EAAmDzG,KAAnD,EAA0D0I,YAA1D,EAAwEtB,EAAxE;;AAEAhD,UAAAA,MAAM,CAACzH,QAAP,GAAkByH,MAAM,CAAC1H,EAAzB;AACD,SA7MqB;AA8MtBsM,QAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBhJ,KAAxB,EAA+BhC,MAA/B,EAAuCoJ,EAAvC,EAA2C1K,EAA3C,EAA+C;AAC7D,cAAIgM,YAAY,GAAGtE,MAAM,CAACrC,qCAAP,CAA6C/D,MAA7C,CAAnB;;AAEAoG,UAAAA,MAAM,CAACzH,QAAP,GAAkBD,EAAlB;;AAEA0H,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,sBAAzB,EAAiDzG,KAAjD,EAAwD0I,YAAxD,EAAsEtB,EAAtE;;AAEA,cAAIzL,6BAA6B,CAACqE,KAAD,CAAjC,EAA0C;AACxC;AACD;;AAEDoE,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,qBAAzB,EAAgDzG,KAAhD,EAAuD0I,YAAvD,EAAqEtB,EAArE;;AAEAhD,UAAAA,MAAM,CAACzH,QAAP,GAAkByH,MAAM,CAAC1H,EAAzB;AACD,SA5NqB;AA6NtBuM,QAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBjJ,KAAzB,EAAgChC,MAAhC,EAAwCoJ,EAAxC,EAA4C1K,EAA5C,EAAgD;AAC/D,cAAIgM,YAAY,GAAGtE,MAAM,CAACrC,qCAAP,CAA6C/D,MAA7C,CAAnB;;AAEA,cAAI2K,iBAAiB,GAAG;AACtB/J,YAAAA,GAAG,EAAE,KADiB;AAEtBF,YAAAA,MAAM,EAAE,KAFc;AAGtBkK,YAAAA,IAAI,EAAE;AAHgB,WAAxB;AAKAxE,UAAAA,MAAM,CAACzH,QAAP,GAAkBD,EAAlB;;AAEA0H,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,uBAAzB,EAAkDzG,KAAlD,EAAyD0I,YAAzD,EAAuEtB,EAAvE,EAA2EuB,iBAA3E;;AAEA,cAAIhN,6BAA6B,CAACqE,KAAD,CAAjC,EAA0C;AACxC;AACD;;AAED,cAAInB,IAAI,CAAC9B,SAAT,EAAoB;AAClBf,YAAAA,gBAAgB,CAACgE,KAAD,EAAQ;AACtBhC,cAAAA,MAAM,EAAE0K,YADc;AAEtB7I,cAAAA,SAAS,EAAEuE,MAAM,CAAC/L,QAAP,CAAgBwH,SAFL;AAGtBiJ,cAAAA,UAAU,EAAEH;AAHU,aAAR,CAAhB;AAKD;;AAEDvE,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,sBAAzB,EAAiDzG,KAAjD,EAAwD0I,YAAxD,EAAsEtB,EAAtE;;AAEAhD,UAAAA,MAAM,CAACzH,QAAP,GAAkByH,MAAM,CAAC1H,EAAzB;AACD,SAxPqB;AAyPtBwM,QAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBlJ,KAAvB,EAA8BhC,MAA9B,EAAsCoJ,EAAtC,EAA0C1K,EAA1C,EAA8C;AAC3D,cAAIgM,YAAY,GAAGtE,MAAM,CAACrC,qCAAP,CAA6C/D,MAA7C,CAAnB;;AAEAoG,UAAAA,MAAM,CAACzH,QAAP,GAAkBD,EAAlB;;AAEA0H,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,qBAAzB,EAAgDzG,KAAhD,EAAuD0I,YAAvD,EAAqEtB,EAArE,EAL2D,CAKe;AAC1E;AACA;AACA;;;AAGA,cAAIzL,6BAA6B,CAACqE,KAAD,CAA7B,IAAwCoE,MAAM,CAAC/L,QAAP,CAAgBkQ,WAA5D,EAAyE;AACvE;AACD;;AAEDnE,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,oBAAzB,EAA+CzG,KAA/C,EAAsD0I,YAAtD,EAAoEtB,EAApE;;AAEAhD,UAAAA,MAAM,CAACzH,QAAP,GAAkByH,MAAM,CAAC1H,EAAzB;AACD,SA3QqB;AA4QtByM,QAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BnJ,KAA/B,EAAsC;AAC3DA,UAAAA,KAAK,CAACG,cAAN;;AAEAiE,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,4BAAzB,EAAuDzG,KAAvD;AACD,SAhRqB;AAiRtBoJ,QAAAA,oBAAoB,EAAE,SAASA,oBAAT,CAA8BpJ,KAA9B,EAAqC;AACzDA,UAAAA,KAAK,CAACG,cAAN;;AAEAiE,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,2BAAzB,EAAsDzG,KAAtD;AACD,SArRqB;AAsRtBqJ,QAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBzL,KAApB,EAA2B0L,UAA3B,EAAuC;AACjD,iBAAOlF,MAAM,CAACmF,YAAP,CAAoB3L,KAApB,EAA2B0L,UAA3B,CAAP;AACD,SAxRqB;AAyRtBE,QAAAA,MAAM,EAAE,SAASA,MAAT,CAAgB5L,KAAhB,EAAuB;AAC7B,iBAAOwG,MAAM,CAACoF,MAAP,CAAc5L,KAAd,CAAP;AACD,SA3RqB;AA4RtB6L,QAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,iBAAOrF,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,uBAAzB,CAAP;AACD,SA9RqB;AA+RtBiD,QAAAA,oBAAoB,EAAE,SAASA,oBAAT,GAAgC;AACpD,iBAAOtF,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,yBAAzB,CAAP;AACD,SAjSqB;AAkStBkD,QAAAA,4BAA4B,EAAE,SAASA,4BAAT,GAAwC;AACpE,iBAAOvF,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,4BAAzB,CAAP;AACD,SApSqB;AAqStBmD,QAAAA,6BAA6B,EAAE,SAASA,6BAAT,CAAuCzH,aAAvC,EAAsD0H,WAAtD,EAAmEC,aAAnE,EAAkF;AAC/G,cAAIC,SAAS,GAAG3F,MAAM,CAAC/L,QAAP,CAAgBiK,cAAhC;AACA,cAAID,SAAS,GAAG0H,SAAS,CAACxH,4BAAV,CAAuCJ,aAAvC,CAAhB;;AAEA,cAAI6H,YAAY,GAAG5F,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,6BAAzB,EAAwDpE,SAAxD,EAAmEwH,WAAnE,EAAgFC,aAAhF,CAAnB;;AAEA,iBAAOC,SAAS,CAAC5G,4BAAV,CAAuC4G,SAAS,CAAC7G,sBAAV,CAAiC8G,YAAjC,EAA+C,CAA/C,CAAvC,CAAP;AACD,SA5SqB;AA6StBC,QAAAA,gCAAgC,EAAE,SAASA,gCAAT,CAA0C7H,gBAA1C,EAA4DyH,WAA5D,EAAyEC,aAAzE,EAAwF;AACxH,cAAII,YAAY,GAAG9F,MAAM,CAAC/L,QAAP,CAAgBoK,iBAAnC;AACA,cAAID,YAAY,GAAG0H,YAAY,CAAC3H,4BAAb,CAA0CH,gBAA1C,CAAnB;;AAEA,cAAI+H,eAAe,GAAG/F,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,gCAAzB,EAA2DjE,YAA3D,EAAyEqH,WAAzE,EAAsFC,aAAtF,CAAtB;;AAEA,iBAAOI,YAAY,CAAC/G,4BAAb,CAA0C+G,YAAY,CAAChH,sBAAb,CAAoCiH,eAApC,EAAqD,CAArD,CAA1C,CAAP;AACD,SApTqB;AAqTtBC,QAAAA,oBAAoB,EAAE,SAASA,oBAAT,CAA8BC,UAA9B,EAA0CC,aAA1C,EAAyDC,UAAzD,EAAqE;AACzF,cAAIC,kBAAJ;;AAEA,cAAIC,sBAAsB,GAAGrG,MAAM,CAAClC,oCAAP,CAA4CmI,UAA5C,EAAwDC,aAAxD,CAA7B;AAAA,cACII,sBAAsB,GAAG1U,cAAc,CAACyU,sBAAD,EAAyB,CAAzB,CAD3C;AAAA,cAEIlE,cAAc,GAAGmE,sBAAsB,CAAC,CAAD,CAF3C;AAAA,cAGInD,iBAAiB,GAAGmD,sBAAsB,CAAC,CAAD,CAH9C;;AAKA,cAAIC,aAAa,GAAGvG,MAAM,CAAC/L,QAAP,CAAgBwH,SAAhB,CAA0B+K,gBAA1B,EAApB;;AAEA,cAAIC,kBAAkB,GAAGF,aAAa,CAACG,IAAd,EAAzB;;AAEA,cAAID,kBAAkB,GAAG,CAAzB,EAA4B;AAC1B;AACA;AACA,gBAAIE,eAAe,GAAG,CAACR,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+CA,UAA/C,GAA4D,CAA7D,IAAkE,CAAlE,GAAsEM,kBAA5F;AACA,gBAAIG,iBAAiB,GAAGL,aAAa,CAACM,WAAd,CAA0BF,eAA1B,CAAxB;AACAP,YAAAA,kBAAkB,GAAG,CAACQ,iBAAiB,CAAClR,IAAlB,CAAuB8E,GAAxB,EAA6BoM,iBAAiB,CAAClR,IAAlB,CAAuBmI,GAApD,EAAyD+I,iBAAiB,CAACE,EAAlB,CAAqBtM,GAA9E,EAAmFoM,iBAAiB,CAACE,EAAlB,CAAqBjJ,GAAxG,CAArB;AACD;;AAED,iBAAOmC,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,oBAAzB,EAA+CF,cAA/C,EAA+DgB,iBAA/D,EAAkFiD,kBAAlF,EAAsGD,UAAtG,CAAP;AACD,SA1UqB;AA2UtBY,QAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,OAA7B,EAAsCC,eAAtC,EAAuD;AAC1E,cAAIC,QAAQ,GAAGtV,cAAc,CAACoV,OAAD,EAAU,CAAV,CAA7B;AAAA,cACIG,kBAAkB,GAAGD,QAAQ,CAAC,CAAD,CADjC;AAAA,cAEIE,qBAAqB,GAAGF,QAAQ,CAAC,CAAD,CAFpC;AAAA,cAGIG,gBAAgB,GAAGH,QAAQ,CAAC,CAAD,CAH/B;AAAA,cAIII,mBAAmB,GAAGJ,QAAQ,CAAC,CAAD,CAJlC;;AAMA,cAAIK,aAAa,GAAG,CAACvH,MAAM,CAAC/L,QAAP,CAAgBiK,cAAhB,CAA+BC,4BAA/B,CAA4DgJ,kBAA5D,CAAD,EAAkFnH,MAAM,CAAC/L,QAAP,CAAgBoK,iBAAhB,CAAkCF,4BAAlC,CAA+DiJ,qBAA/D,CAAlF,EAAyKpH,MAAM,CAAC/L,QAAP,CAAgBiK,cAAhB,CAA+BC,4BAA/B,CAA4DkJ,gBAA5D,CAAzK,EAAwPrH,MAAM,CAAC/L,QAAP,CAAgBoK,iBAAhB,CAAkCF,4BAAlC,CAA+DmJ,mBAA/D,CAAxP,CAApB;AACA,iBAAOtH,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,mBAAzB,EAA8CkF,aAA9C,EAA6DN,eAA7D,CAAP;AACD,SApVqB;AAqVtBO,QAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClD,iBAAOxH,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,mBAAzB,CAAP;AACD,SAvVqB;AAwVtBoF,QAAAA,qBAAqB,EAAE,SAASA,qBAAT,GAAiC;AACtD,iBAAOzH,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,qBAAzB,CAAP;AACD,SA1VqB;AA2VtBqF,QAAAA,6BAA6B,EAAE,SAASA,6BAAT,CAAuCC,cAAvC,EAAuDpF,mBAAvD,EAA4E;AACzG,cAAIY,iBAAiB,GAAGnD,MAAM,CAAC/L,QAAP,CAAgBoK,iBAAhB,CAAkCF,4BAAlC,CAA+DoE,mBAA/D,CAAxB;;AAEA,iBAAOvC,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,6BAAzB,EAAwDsF,cAAxD,EAAwExE,iBAAxE,CAAP;AACD,SA/VqB;AAgWtByE,QAAAA,sBAAsB,EAAE,SAASA,sBAAT,CAAgCC,cAAhC,EAAgD;AACtE,iBAAO7H,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,sBAAzB,EAAiDwF,cAAjD,CAAP;AACD,SAlWqB;AAmWtBC,QAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+B7F,kBAA/B,EAAmD8F,qBAAnD,EAA0ElO,OAA1E,EAAmF;AACxG,cAAI8L,SAAS,GAAG3F,MAAM,CAAC/L,QAAP,CAAgBiK,cAAhC;AACA,cAAI4H,YAAY,GAAG9F,MAAM,CAAC/L,QAAP,CAAgBoK,iBAAnC,CAFwG,CAElD;;AAEtD,cAAI8E,iBAAiB,GAAG4E,qBAAqB,IAAI,CAAzB,GAA6BjC,YAAY,CAAC3H,4BAAb,CAA0C4J,qBAA1C,CAA7B,GAAgGA,qBAAxH;AACA,cAAI5F,cAAc,GAAGF,kBAAkB,IAAI,CAAtB,GAA0B0D,SAAS,CAACxH,4BAAV,CAAuC8D,kBAAvC,CAA1B,GAAuFA,kBAA5G;;AAEA,cAAI+F,aAAa,GAAGhI,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,qBAAzB,EAAgDF,cAAhD,EAAgEgB,iBAAhE,EAAmFtJ,OAAnF,CAApB;;AAEA,cAAI1G,KAAK,CAACC,OAAN,CAAc4U,aAAd,CAAJ,EAAkC;AAChC,gBAAIC,cAAc,GAAGrW,cAAc,CAACoW,aAAD,EAAgB,CAAhB,CAAnC;AAAA,gBACIE,aAAa,GAAGD,cAAc,CAAC,CAAD,CADlC;AAAA,gBAEIE,gBAAgB,GAAGF,cAAc,CAAC,CAAD,CAFrC;AAAA,gBAGIG,WAAW,GAAGH,cAAc,CAAC,CAAD,CAHhC;AAAA,gBAIII,cAAc,GAAGJ,cAAc,CAAC,CAAD,CAJnC,CADgC,CAKQ;;;AAGxC,mBAAO,CAACC,aAAa,IAAI,CAAjB,GAAqBvC,SAAS,CAAC5G,4BAAV,CAAuC4G,SAAS,CAAC7G,sBAAV,CAAiCoJ,aAAjC,EAAgD,CAAhD,CAAvC,CAArB,GAAkHA,aAAnH,EAAkIC,gBAAgB,IAAI,CAApB,GAAwBrC,YAAY,CAAC/G,4BAAb,CAA0C+G,YAAY,CAAChH,sBAAb,CAAoCqJ,gBAApC,EAAsD,CAAtD,CAA1C,CAAxB,GAA8HA,gBAAhQ,EAAkRC,WAAW,IAAI,CAAf,GAAmBzC,SAAS,CAAC5G,4BAAV,CAAuC4G,SAAS,CAAC7G,sBAAV,CAAiCsJ,WAAjC,EAA8C,CAAC,CAA/C,CAAvC,CAAnB,GAA+GA,WAAjY,EAA8YC,cAAc,IAAI,CAAlB,GAAsBvC,YAAY,CAAC/G,4BAAb,CAA0C+G,YAAY,CAAChH,sBAAb,CAAoCuJ,cAApC,EAAoD,CAAC,CAArD,CAA1C,CAAtB,GAA2HA,cAAzgB,CAAP;AACD;AACF,SAtXqB;AAuXtBC,QAAAA,6BAA6B,EAAE,SAASA,6BAAT,CAAuCC,IAAvC,EAA6C;AAC1E,cAAIC,cAAc,GAAGxI,MAAM,CAAC9H,QAAP,CAAgBuQ,0BAArC;;AAEA,cAAID,cAAc,KAAK,MAAnB,IAA6BxI,MAAM,CAAC9H,QAAP,CAAgBgJ,YAAjD,EAA+D;AAC7DsH,YAAAA,cAAc,GAAG,EAAjB;AACD;;AAED,cAAIA,cAAc,GAAG,CAAjB,IAAsBA,cAAc,KAAK,MAA7C,EAAqD;AACnD,gBAAIE,cAAc,GAAG1I,MAAM,CAACd,mBAAP,EAArB;;AAEA,gBAAIyJ,gBAAgB,GAAGJ,IAAI,CAACK,QAA5B;AACA,gBAAIC,eAAe,GAAGN,IAAI,CAACO,MAA3B;;AAEA,gBAAI,OAAON,cAAP,KAA0B,QAA9B,EAAwC;AACtCD,cAAAA,IAAI,CAACK,QAAL,GAAgBlK,IAAI,CAAC6C,GAAL,CAASoH,gBAAgB,GAAGH,cAA5B,EAA4C,CAA5C,CAAhB;AACAD,cAAAA,IAAI,CAACO,MAAL,GAAcpK,IAAI,CAACC,GAAL,CAASkK,eAAe,GAAGL,cAA3B,EAA2CE,cAAc,GAAG,CAA5D,CAAd;AACD,aAHD,MAGO,IAAIF,cAAc,KAAK,MAAvB,EAA+B;AACpC,kBAAIO,MAAM,GAAGrK,IAAI,CAACsK,IAAL,CAAUH,eAAe,GAAGH,cAAlB,GAAmC,EAA7C,CAAb;AACAH,cAAAA,IAAI,CAACK,QAAL,GAAgBlK,IAAI,CAAC6C,GAAL,CAASoH,gBAAgB,GAAGI,MAA5B,EAAoC,CAApC,CAAhB;AACAR,cAAAA,IAAI,CAACO,MAAL,GAAcpK,IAAI,CAACC,GAAL,CAASkK,eAAe,GAAGE,MAA3B,EAAmCL,cAAc,GAAG,CAApD,CAAd;AACD;AACF;;AAED1I,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,oCAAzB,EAA+DkG,IAA/D;AACD,SA/YqB;AAgZtBU,QAAAA,gCAAgC,EAAE,SAASA,gCAAT,CAA0CV,IAA1C,EAAgD;AAChF,cAAIC,cAAc,GAAGxI,MAAM,CAAC9H,QAAP,CAAgBgR,6BAArC;;AAEA,cAAIV,cAAc,KAAK,MAAnB,IAA6BxI,MAAM,CAAC9H,QAAP,CAAgB4I,gBAAjD,EAAmE;AACjE0H,YAAAA,cAAc,GAAG,EAAjB;AACD;;AAED,cAAIA,cAAc,GAAG,CAAjB,IAAsBA,cAAc,KAAK,MAA7C,EAAqD;AACnD,gBAAIW,iBAAiB,GAAGnJ,MAAM,CAAChB,sBAAP,EAAxB;;AAEA,gBAAIoK,mBAAmB,GAAGb,IAAI,CAACc,WAA/B;AACA,gBAAIC,kBAAkB,GAAGf,IAAI,CAACgB,SAA9B;;AAEA,gBAAI,OAAOf,cAAP,KAA0B,QAA9B,EAAwC;AACtCD,cAAAA,IAAI,CAACc,WAAL,GAAmB3K,IAAI,CAAC6C,GAAL,CAAS6H,mBAAmB,GAAGZ,cAA/B,EAA+C,CAA/C,CAAnB;AACAD,cAAAA,IAAI,CAACgB,SAAL,GAAiB7K,IAAI,CAACC,GAAL,CAAS2K,kBAAkB,GAAGd,cAA9B,EAA8CW,iBAAiB,GAAG,CAAlE,CAAjB;AACD;;AAED,gBAAIX,cAAc,KAAK,MAAvB,EAA+B;AAC7B,kBAAIO,MAAM,GAAGrK,IAAI,CAACsK,IAAL,CAAUM,kBAAkB,GAAGH,iBAArB,GAAyC,CAAnD,CAAb;AACAZ,cAAAA,IAAI,CAACc,WAAL,GAAmB3K,IAAI,CAAC6C,GAAL,CAAS6H,mBAAmB,GAAGL,MAA/B,EAAuC,CAAvC,CAAnB;AACAR,cAAAA,IAAI,CAACgB,SAAL,GAAiB7K,IAAI,CAACC,GAAL,CAAS2K,kBAAkB,GAAGP,MAA9B,EAAsCI,iBAAiB,GAAG,CAA1D,CAAjB;AACD;AACF;;AAEDnJ,UAAAA,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,uCAAzB,EAAkEkG,IAAlE;AACD,SA1aqB;AA2atBV,QAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxC,iBAAO7H,MAAM,CAAC9H,QAAP,CAAgB2P,cAAvB;AACD,SA7aqB;AA8atB2B,QAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,cAAIA,kBAAkB,GAAGxJ,MAAM,CAAC/L,QAAP,CAAgBoO,QAAhB,CAAyB,0BAAzB,CAAzB;;AAEA,iBAAOrC,MAAM,CAAC9H,QAAP,CAAgBsR,kBAAhB,IAAsCA,kBAA7C;AACD;AAlbqB,OAAxB;AAobA,WAAKvV,QAAL,CAAcoO,QAAd,CAAuB,uBAAvB,EAAgDpC,iBAAhD;AACA,WAAK3H,EAAL,GAAU,IAAIZ,WAAJ,CAAgBuI,iBAAhB,CAAV;AACA,WAAK1H,QAAL,GAAgB,KAAKD,EAArB;AACA,UAAImR,QAAQ,GAAG,KAAKnR,EAAL,CAAQ6E,OAAR,CAAgBsM,QAA/B,CA3bsC,CA2bG;;AAEzC,UAAIC,qBAAqB,GAAG,KAAKzV,QAAL,CAAc2G,WAAd,CAA0B+O,qBAA1B,EAA5B;AAAA,UACIC,KAAK,GAAGF,qBAAqB,CAACE,KADlC;AAAA,UAEIC,MAAM,GAAGH,qBAAqB,CAACG,MAFnC;;AAIA,WAAKC,WAAL,CAAiBF,KAAjB,EAAwBC,MAAxB;AACA,WAAK5R,YAAL,CAAkB0D,gBAAlB,CAAmC8N,QAAnC,EAA6C,WAA7C,EAA0D,UAAU7N,KAAV,EAAiB;AACzE;AACA,YAAIA,KAAK,CAAC3F,MAAN,KAAiBwT,QAAjB,IAA6B7N,KAAK,CAACmO,KAAN,KAAgB,CAAjD,EAAoD;AAClDnO,UAAAA,KAAK,CAACoO,eAAN;AACD;AACF,OALD;AAMA,WAAK/R,YAAL,CAAkB0D,gBAAlB,CAAmC8N,QAAnC,EAA6C,aAA7C,EAA4D,UAAU7N,KAAV,EAAiB;AAC3E;AACA,YAAIA,KAAK,CAAC3F,MAAN,KAAiBwT,QAAjB,IAA6B7N,KAAK,CAACmO,KAAN,KAAgB,CAAjD,EAAoD;AAClDnO,UAAAA,KAAK,CAACoO,eAAN;AACD;AACF,OALD;AAMA,WAAK/R,YAAL,CAAkB0D,gBAAlB,CAAmC,KAAK1H,QAAL,CAAc4G,YAAd,CAA2Ba,eAA9D,EAA+E,OAA/E,EAAwF,YAAY;AAClG,YAAIsE,MAAM,CAAC9H,QAAP,CAAgB+R,oBAApB,EAA0C;AACxC,cAAIjK,MAAM,CAAC1H,EAAP,CAAU4R,eAAd,EAA+B;AAC7BlK,YAAAA,MAAM,CAAC/L,QAAP,CAAgBqF,eAAhB,GAAkC,IAAlC;;AAEA0G,YAAAA,MAAM,CAAC9G,MAAP;AACD;AACF;AACF,OARD;AASD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAheK,GA7ZqB,EA+3BrB;AACD1C,IAAAA,GAAG,EAAE,wBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAAS6I,sBAAT,CAAgCsO,EAAhC,EAAoC;AACzC,UAAI/S,OAAO,CAAC+S,EAAD,CAAX,EAAiB;AACf,eAAO,IAAP;AACD;;AAED,UAAIC,kBAAkB,GAAGjT,SAAS,CAACgT,EAAD,EAAK,KAAKlW,QAAL,CAAcgJ,IAAd,CAAmB3E,EAAnB,CAAsB6E,OAAtB,CAA8BsM,QAAnC,CAAlC;;AAEA,UAAI,KAAKvR,QAAL,CAAc+D,iBAAd,KAAoC,IAApC,IAA4CmO,kBAAhD,EAAoE;AAClE,eAAO,IAAP;AACD;;AAED,UAAI,KAAKlS,QAAL,CAAc+D,iBAAd,KAAoC,MAApC,IAA8C,KAAKoO,kBAAL,EAA9C,IAA2ED,kBAA/E,EAAmG;AACjG,eAAO,IAAP;AACD;;AAED,UAAI,CAAC,KAAKlS,QAAL,CAAc+D,iBAAf,IAAoC,KAAKqO,YAAL,EAApC,IAA2D,KAAKD,kBAAL,EAA/D,EAA0F;AACxF,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;;AA5BK,GA/3BqB,EA65BrB;AACD7T,IAAAA,GAAG,EAAE,aADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASuX,WAAT,GAAuB;AAC5B,aAAOzS,WAAW,CAAC4C,GAAZ,CAAgB,IAAhB,EAAsB/B,SAA7B;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;;AAVK,GA75BqB,EAy6BrB;AACDnC,IAAAA,GAAG,EAAE,oBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASqX,kBAAT,GAA8B;AACnC,UAAIG,qBAAJ,EAA2BC,sBAA3B;;AAEA,aAAO,CAACD,qBAAqB,GAAG,CAACC,sBAAsB,GAAG,KAAKxW,QAAL,CAAcyW,oBAAd,EAA1B,MAAoE,IAApE,IAA4ED,sBAAsB,KAAK,KAAK,CAA5G,GAAgH,KAAK,CAArH,GAAyHA,sBAAsB,CAACE,QAAvB,EAAlJ,MAAyL,IAAzL,IAAiMH,qBAAqB,KAAK,KAAK,CAAhO,GAAoOA,qBAApO,GAA4P,KAAnQ;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;;AAZK,GAz6BqB,EAu7BrB;AACDhU,IAAAA,GAAG,EAAE,cADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASsX,YAAT,GAAwB;AAC7B,UAAIM,YAAY,GAAG,KAAK3W,QAAL,CAAc4W,eAAd,EAAnB;AACA,aAAOD,YAAY,IAAIA,YAAY,CAACE,QAAb,EAAvB;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAbK,GAv7BqB,EAs8BrB;AACDtU,IAAAA,GAAG,EAAE,cADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASmS,YAAT,CAAsB3L,KAAtB,EAA6B0L,UAA7B,EAAyC;AAC9C,UAAI1L,KAAJ,EAAW;AACT;AACA,aAAKvF,QAAL,CAAcoO,QAAd,CAAuB,cAAvB,EAAuC,KAAKpO,QAAL,CAAcqF,eAArD,EAAsE4L,UAAtE;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAdK,GAt8BqB,EAs9BrB;AACD1O,IAAAA,GAAG,EAAE,QADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASoS,MAAT,CAAgB5L,KAAhB,EAAuB;AAC5B,UAAIA,KAAJ,EAAW;AACT;AACA,aAAKvF,QAAL,CAAcoO,QAAd,CAAuB,aAAvB,EAAsC,KAAKpO,QAAL,CAAcqF,eAApD;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAdK,GAt9BqB,EAs+BrB;AACD9C,IAAAA,GAAG,EAAE,iBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASoP,eAAT,CAAyBD,cAAzB,EAAyCD,EAAzC,EAA6C;AAClD,UAAIA,EAAE,CAAC5G,UAAP,EAAmB;AACjB,YAAIF,SAAS,GAAG8G,EAAE,CAAC5G,UAAnB;;AAEA,YAAI,CAACpE,QAAQ,CAACkE,SAAD,EAAY,UAAZ,CAAb,EAAsC;AACpCtE,UAAAA,KAAK,CAACoL,EAAD,CAAL;AACA,eAAKE,eAAL,CAAqBD,cAArB,EAAqCD,EAArC;AACA;AACD;;AAED,aAAK6I,gBAAL,CAAsB3P,SAAS,CAAC4P,aAAV,CAAwB,YAAxB,CAAtB,EAA6D7I,cAA7D,EAA6E,KAAKlO,QAAL,CAAcgX,YAA3F;AACD,OAVD,MAUO;AACL,YAAIC,eAAe,GAAG,KAAKjX,QAA3B;AAAA,YACI4G,YAAY,GAAGqQ,eAAe,CAACrQ,YADnC;AAAA,YAEIoQ,YAAY,GAAGC,eAAe,CAACD,YAFnC;AAGA,YAAIE,GAAG,GAAGtQ,YAAY,CAACI,aAAb,CAA2B,KAA3B,CAAV;AACA,YAAImQ,IAAI,GAAGvQ,YAAY,CAACI,aAAb,CAA2B,MAA3B,CAAX;AACAkQ,QAAAA,GAAG,CAACE,SAAJ,GAAgB,UAAhB;AACAD,QAAAA,IAAI,CAACC,SAAL,GAAiB,WAAjB;AACA,aAAKN,gBAAL,CAAsBK,IAAtB,EAA4BjJ,cAA5B,EAA4C8I,YAA5C;AACAE,QAAAA,GAAG,CAAChQ,WAAJ,CAAgBiQ,IAAhB;AACAlJ,QAAAA,EAAE,CAAC/G,WAAH,CAAegQ,GAAf;AACD;;AAED,WAAKlX,QAAL,CAAcoO,QAAd,CAAuB,mBAAvB,EAA4CF,cAA5C,EAA4DD,EAA5D;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAlCK,GAt+BqB,EA0gCrB;AACD1L,IAAAA,GAAG,EAAE,iBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASyP,eAAT,CAAyBU,iBAAzB,EAA4CjB,EAA5C,EAAgD;AACrD,UAAIA,EAAE,CAAC5G,UAAP,EAAmB;AACjB,YAAIF,SAAS,GAAG8G,EAAE,CAAC5G,UAAnB;;AAEA,YAAIpE,QAAQ,CAACkE,SAAD,EAAY,UAAZ,CAAZ,EAAqC;AACnC,eAAK2P,gBAAL,CAAsB3P,SAAS,CAAC4P,aAAV,CAAwB,YAAxB,CAAtB,EAA6D7H,iBAA7D,EAAgF,KAAKlP,QAAL,CAAcqX,YAA9F;AACD,SAFD,MAEO;AACLxU,UAAAA,KAAK,CAACoL,EAAD,CAAL;AACA,eAAKO,eAAL,CAAqBU,iBAArB,EAAwCjB,EAAxC;AACD;AACF,OATD,MASO;AACL,YAAIrH,YAAY,GAAG,KAAK5G,QAAL,CAAc4G,YAAjC;AACA,YAAIsQ,GAAG,GAAGtQ,YAAY,CAACI,aAAb,CAA2B,KAA3B,CAAV;AACA,YAAImQ,IAAI,GAAGvQ,YAAY,CAACI,aAAb,CAA2B,MAA3B,CAAX;AACAkQ,QAAAA,GAAG,CAACE,SAAJ,GAAgB,UAAhB;AACAD,QAAAA,IAAI,CAACC,SAAL,GAAiB,WAAjB;AACA,aAAKN,gBAAL,CAAsBK,IAAtB,EAA4BjI,iBAA5B,EAA+C,KAAKlP,QAAL,CAAcqX,YAA7D;AACAH,QAAAA,GAAG,CAAChQ,WAAJ,CAAgBiQ,IAAhB;AACAlJ,QAAAA,EAAE,CAAC/G,WAAH,CAAegQ,GAAf;AACD;;AAED,WAAKlX,QAAL,CAAcoO,QAAd,CAAuB,mBAAvB,EAA4Cc,iBAA5C,EAA+DjB,EAA/D;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAhCK,GA1gCqB,EA4iCrB;AACD1L,IAAAA,GAAG,EAAE,kBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAAS+X,gBAAT,CAA0BQ,OAA1B,EAAmCC,KAAnC,EAA0CC,OAA1C,EAAmD;AACxD,UAAIC,aAAa,GAAGF,KAApB;AACA,UAAIG,aAAa,GAAG,KAAKrT,EAAL,CAAQoB,UAAR,CAAmBkS,gBAAnB,CAAoCL,OAApC,KAAgD,KAAKjT,EAAzE,CAFwD,CAEqB;;AAE7E,UAAIiT,OAAO,CAAChO,UAAZ,EAAwB;AACtB,YAAIrG,QAAQ,CAACqU,OAAD,EAAU,WAAV,CAAZ,EAAoC;AAClCG,UAAAA,aAAa,GAAGC,aAAa,CAACxO,OAAd,CAAsB0O,YAAtB,CAAmCC,gBAAnC,CAAoDN,KAApD,CAAhB;AACD,SAFD,MAEO,IAAItU,QAAQ,CAACqU,OAAD,EAAU,WAAV,CAAZ,EAAoC;AACzCG,UAAAA,aAAa,GAAGC,aAAa,CAACxO,OAAd,CAAsB4O,SAAtB,CAAgCD,gBAAhC,CAAiDN,KAAjD,CAAhB;AACD;AACF;;AAED,UAAIE,aAAa,GAAG,CAAC,CAArB,EAAwB;AACtB3U,QAAAA,aAAa,CAACwU,OAAD,EAAUE,OAAO,CAACD,KAAD,CAAjB,CAAb;AACD,OAFD,MAEO;AACL;AACAxU,QAAAA,aAAa,CAACuU,OAAD,EAAUS,MAAM,CAACC,YAAP,CAAoB,GAApB,CAAV,CAAb;AACArV,QAAAA,QAAQ,CAAC2U,OAAD,EAAU,cAAV,CAAR;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AA7BK,GA5iCqB,EA2kCrB;AACD/U,IAAAA,GAAG,EAAE,4BADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASkZ,0BAAT,CAAoCC,UAApC,EAAgD;AACrD,UAAIC,cAAc,GAAG,KAAK9T,EAAL,CAAQ+T,UAAR,CAAmBC,iBAAnB,EAArB;AACA,UAAIC,QAAQ,GAAGH,cAAc,GAAGD,UAAhC;AACA,aAAOI,QAAQ,GAAG,CAAX,GAAeA,QAAf,GAA0B,CAAjC;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAdK,GA3kCqB,EA2lCrB;AACD/V,IAAAA,GAAG,EAAE,6BADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASwZ,2BAAT,CAAqCC,SAArC,EAAgD;AACrD,UAAIC,eAAe,GAAG,KAAKpU,EAAL,CAAQ+T,UAAR,CAAmBM,kBAAnB,EAAtB;AACA,UAAIC,SAAS,GAAGF,eAAe,GAAGD,SAAlC;AACA,aAAOG,SAAS,GAAG,CAAZ,GAAgBA,SAAhB,GAA4B,CAAnC;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;;AAZK,GA3lCqB,EAymCrB;AACDpW,IAAAA,GAAG,EAAE,aADJ;AAEDxD,IAAAA,KAAK,EAAE,SAAS8W,WAAT,CAAqBF,KAArB,EAA4BC,MAA5B,EAAoC;AACzC,UAAIpP,IAAI,GAAG3C,WAAW,CAAC4C,GAAZ,CAAgB,IAAhB,CAAX;AACA,UAAImS,KAAK,GAAG,CAACjD,KAAD,EAAQC,MAAR,CAAZ;AACApP,MAAAA,IAAI,CAAC5B,SAAL,GAAiBgU,KAAK,CAAC,CAAD,CAAtB;AACApS,MAAAA,IAAI,CAAC3B,UAAL,GAAkB+T,KAAK,CAAC,CAAD,CAAvB;AACD;AACD;AACJ;AACA;AACA;AACA;;AAZK,GAzmCqB,EAunCrB;AACDrW,IAAAA,GAAG,EAAE,aADJ;AAEDxD,IAAAA,KAAK,EAAE,SAAS8Z,WAAT,GAAuB;AAC5B,UAAIrS,IAAI,GAAG3C,WAAW,CAAC4C,GAAZ,CAAgB,IAAhB,CAAX;AACA,aAAO;AACLkP,QAAAA,KAAK,EAAEnP,IAAI,CAAC5B,SADP;AAELgR,QAAAA,MAAM,EAAEpP,IAAI,CAAC3B;AAFR,OAAP;AAID;AACD;AACJ;AACA;AACA;AACA;AACA;;AAdK,GAvnCqB,EAuoCrB;AACDtC,IAAAA,GAAG,EAAE,kBADJ;AAEDxD,IAAAA,KAAK,EAAE,SAAS+Z,gBAAT,GAA4B;AACjC,aAAO,KAAKzU,EAAL,KAAY,KAAKC,QAAxB;AACD;AACD;AACJ;AACA;AACA;AACA;;AATK,GAvoCqB,EAkpCrB;AACD/B,IAAAA,GAAG,EAAE,SADJ;AAEDxD,IAAAA,KAAK,EAAE,SAASga,OAAT,GAAmB;AACxB,WAAK1U,EAAL,CAAQ0U,OAAR;AACA,WAAK/U,YAAL,CAAkB+U,OAAlB;AACD;AALA,GAlpCqB,CAAZ,CAAZ;;AA0pCA,SAAOhV,SAAP;AACD,CA9wC4B,EAA7B;;AAgxCA,eAAeA,SAAf","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport { addClass, clearTextSelection, empty, fastInnerHTML, fastInnerText, getScrollbarWidth, hasClass, isChildOf, isInput, isOutsideInput } from \"./helpers/dom/element.mjs\";\nimport EventManager from \"./eventManager.mjs\";\nimport { isImmediatePropagationStopped, isRightClick, isLeftClick } from \"./helpers/dom/event.mjs\";\nimport Walkontable, { CellCoords } from \"./3rdparty/walkontable/src/index.mjs\";\nimport { handleMouseEvent } from \"./selection/mouseEventHandler.mjs\";\nimport { isRootInstance } from \"./utils/rootInstance.mjs\";\nvar privatePool = new WeakMap();\n/**\n * @class TableView\n * @private\n */\n\nvar TableView = /*#__PURE__*/function () {\n  /**\n   * @param {Hanstontable} instance Instance of {@link Handsontable}.\n   */\n  function TableView(instance) {\n    _classCallCheck(this, TableView);\n\n    /**\n     * Instance of {@link Handsontable}.\n     *\n     * @private\n     * @type {Handsontable}\n     */\n    this.instance = instance;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    this.eventManager = new EventManager(instance);\n    /**\n     * Current Handsontable's GridSettings object.\n     *\n     * @private\n     * @type {GridSettings}\n     */\n\n    this.settings = instance.getSettings();\n    /**\n     * Main <THEAD> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.THEAD = void 0;\n    /**\n     * Main <TBODY> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.TBODY = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @type {Walkontable}\n     */\n\n    this.wt = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @private\n     * @type {Walkontable}\n     */\n\n    this.activeWt = void 0;\n    /**\n     * The flag determines if the `adjustElementsSize` method call was made during\n     * the render suspending. If true, the method has to be triggered once after render\n     * resuming.\n     *\n     * @private\n     * @type {boolean}\n     */\n\n    this.postponedAdjustElementsSize = false;\n    privatePool.set(this, {\n      /**\n       * Defines if the text should be selected during mousemove.\n       *\n       * @private\n       * @type {boolean}\n       */\n      selectionMouseDown: false,\n\n      /**\n       * @private\n       * @type {boolean}\n       */\n      mouseDown: void 0,\n\n      /**\n       * Main <TABLE> element.\n       *\n       * @private\n       * @type {HTMLTableElement}\n       */\n      table: void 0,\n\n      /**\n       * Cached width of the rootElement.\n       *\n       * @type {number}\n       */\n      lastWidth: 0,\n\n      /**\n       * Cached height of the rootElement.\n       *\n       * @type {number}\n       */\n      lastHeight: 0\n    });\n    this.createElements();\n    this.registerEvents();\n    this.initializeWalkontable();\n  }\n  /**\n   * Renders WalkontableUI.\n   */\n\n\n  _createClass(TableView, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.instance.isRenderSuspended()) {\n        if (this.postponedAdjustElementsSize) {\n          this.postponedAdjustElementsSize = false;\n          this.adjustElementsSize(true);\n        }\n\n        this.wt.draw(!this.instance.forceFullRender);\n        this.instance.forceFullRender = false;\n        this.instance.renderCall = false;\n      }\n    }\n    /**\n     * Adjust overlays elements size and master table size.\n     *\n     * @param {boolean} [force=false] When `true`, it adjust the DOM nodes sizes for all overlays.\n     */\n\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.instance.isRenderSuspended()) {\n        this.postponedAdjustElementsSize = true;\n      } else {\n        this.wt.wtOverlays.adjustElementsSize(force);\n      }\n    }\n    /**\n     * Returns td object given coordinates.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} topmost Indicates whether the cell should be calculated from the topmost.\n     * @returns {HTMLTableCellElement|null}\n     */\n\n  }, {\n    key: \"getCellAtCoords\",\n    value: function getCellAtCoords(coords, topmost) {\n      var td = this.wt.getCell(coords, topmost);\n\n      if (td < 0) {\n        // there was an exit code (cell is out of bounds)\n        return null;\n      }\n\n      return td;\n    }\n    /**\n     * Scroll viewport to a cell.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollViewport\",\n    value: function scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n      return this.wt.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a column.\n     *\n     * @param {number} column Renderable column index.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollViewportHorizontally\",\n    value: function scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n      return this.wt.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a row.\n     *\n     * @param {number} row Renderable row index.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollViewportVertically\",\n    value: function scrollViewportVertically(row, snapToTop, snapToBottom) {\n      return this.wt.scrollViewportVertically(row, snapToTop, snapToBottom);\n    }\n    /**\n     * Prepares DOMElements and adds correct className to the root element.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      var priv = privatePool.get(this);\n      var _this$instance = this.instance,\n          rootElement = _this$instance.rootElement,\n          rootDocument = _this$instance.rootDocument;\n      var originalStyle = rootElement.getAttribute('style');\n\n      if (originalStyle) {\n        rootElement.setAttribute('data-originalstyle', originalStyle); // needed to retrieve original style in jsFiddle link generator in HT examples. may be removed in future versions\n      }\n\n      addClass(rootElement, 'handsontable');\n      priv.table = rootDocument.createElement('TABLE');\n      addClass(priv.table, 'htCore');\n\n      if (this.instance.getSettings().tableClassName) {\n        addClass(priv.table, this.instance.getSettings().tableClassName);\n      }\n\n      this.THEAD = rootDocument.createElement('THEAD');\n      priv.table.appendChild(this.THEAD);\n      this.TBODY = rootDocument.createElement('TBODY');\n      priv.table.appendChild(this.TBODY);\n      this.instance.table = priv.table;\n      this.instance.container.insertBefore(priv.table, this.instance.container.firstChild);\n    }\n    /**\n     * Attaches necessary listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this = this;\n\n      var priv = privatePool.get(this);\n      var _this$instance2 = this.instance,\n          rootElement = _this$instance2.rootElement,\n          rootDocument = _this$instance2.rootDocument,\n          selection = _this$instance2.selection;\n      var documentElement = rootDocument.documentElement;\n      this.eventManager.addEventListener(rootElement, 'mousedown', function (event) {\n        priv.selectionMouseDown = true;\n\n        if (!_this.isTextSelectionAllowed(event.target)) {\n          var rootWindow = _this.instance.rootWindow;\n          clearTextSelection(rootWindow);\n          event.preventDefault();\n          rootWindow.focus(); // make sure that window that contains HOT is active. Important when HOT is in iframe.\n        }\n      });\n      this.eventManager.addEventListener(rootElement, 'mouseup', function () {\n        priv.selectionMouseDown = false;\n      });\n      this.eventManager.addEventListener(rootElement, 'mousemove', function (event) {\n        if (priv.selectionMouseDown && !_this.isTextSelectionAllowed(event.target)) {\n          // Clear selection only when fragmentSelection is enabled, otherwise clearing selection breakes the IME editor.\n          if (_this.settings.fragmentSelection) {\n            clearTextSelection(_this.instance.rootWindow);\n          }\n\n          event.preventDefault();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'keyup', function (event) {\n        if (selection.isInProgress() && !event.shiftKey) {\n          selection.finish();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function (event) {\n        if (selection.isInProgress() && isLeftClick(event)) {\n          // is left mouse button\n          selection.finish();\n        }\n\n        priv.mouseDown = false;\n\n        if (isOutsideInput(rootDocument.activeElement) || !selection.isSelected() && !selection.isSelectedByAnyHeader() && !rootElement.contains(event.target) && !isRightClick(event)) {\n          _this.instance.unlisten();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'contextmenu', function (event) {\n        if (selection.isInProgress() && isRightClick(event)) {\n          selection.finish();\n          priv.mouseDown = false;\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'touchend', function () {\n        if (selection.isInProgress()) {\n          selection.finish();\n        }\n\n        priv.mouseDown = false;\n      });\n      this.eventManager.addEventListener(documentElement, 'mousedown', function (event) {\n        var originalTarget = event.target;\n        var eventX = event.x || event.clientX;\n        var eventY = event.y || event.clientY;\n        var next = event.target;\n\n        if (priv.mouseDown || !rootElement || !_this.instance.view) {\n          return; // it must have been started in a cell\n        } // immediate click on \"holder\" means click on the right side of vertical scrollbar\n\n\n        var holder = _this.instance.view.wt.wtTable.holder;\n\n        if (next === holder) {\n          var scrollbarWidth = getScrollbarWidth(rootDocument);\n\n          if (rootDocument.elementFromPoint(eventX + scrollbarWidth, eventY) !== holder || rootDocument.elementFromPoint(eventX, eventY + scrollbarWidth) !== holder) {\n            return;\n          }\n        } else {\n          while (next !== documentElement) {\n            if (next === null) {\n              if (event.isTargetWebComponent) {\n                break;\n              } // click on something that was a row but now is detached (possibly because your click triggered a rerender)\n\n\n              return;\n            }\n\n            if (next === rootElement) {\n              // click inside container\n              return;\n            }\n\n            next = next.parentNode;\n          }\n        } // function did not return until here, we have an outside click!\n\n\n        var outsideClickDeselects = typeof _this.settings.outsideClickDeselects === 'function' ? _this.settings.outsideClickDeselects(originalTarget) : _this.settings.outsideClickDeselects;\n\n        if (outsideClickDeselects) {\n          _this.instance.deselectCell();\n        } else {\n          _this.instance.destroyEditor(false, false);\n        }\n      });\n      this.eventManager.addEventListener(priv.table, 'selectstart', function (event) {\n        if (_this.settings.fragmentSelection || isInput(event.target)) {\n          return;\n        } // https://github.com/handsontable/handsontable/issues/160\n        // Prevent text from being selected when performing drag down.\n\n\n        event.preventDefault();\n      });\n    }\n    /**\n     * Translate renderable cell coordinates to visual coordinates.\n     *\n     * @param {CellCoords} coords The cell coordinates.\n     * @returns {CellCoords}\n     */\n\n  }, {\n    key: \"translateFromRenderableToVisualCoords\",\n    value: function translateFromRenderableToVisualCoords(_ref) {\n      var row = _ref.row,\n          col = _ref.col;\n      // TODO: To consider an idea to reusing the CellCoords instance instead creating new one.\n      return _construct(CellCoords, _toConsumableArray(this.translateFromRenderableToVisualIndex(row, col)));\n    }\n    /**\n     * Translate renderable row and column indexes to visual row and column indexes.\n     *\n     * @param {number} renderableRow Renderable row index.\n     * @param {number} renderableColumn Renderable columnIndex.\n     * @returns {number[]}\n     */\n\n  }, {\n    key: \"translateFromRenderableToVisualIndex\",\n    value: function translateFromRenderableToVisualIndex(renderableRow, renderableColumn) {\n      // TODO: Some helper may be needed.\n      // We perform translation for indexes (without headers).\n      var visualRow = renderableRow >= 0 ? this.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRow) : renderableRow;\n      var visualColumn = renderableColumn >= 0 ? this.instance.columnIndexMapper.getVisualFromRenderableIndex(renderableColumn) : renderableColumn;\n\n      if (visualRow === null) {\n        visualRow = renderableRow;\n      }\n\n      if (visualColumn === null) {\n        visualColumn = renderableColumn;\n      }\n\n      return [visualRow, visualColumn];\n    }\n    /**\n     * Returns the number of renderable indexes.\n     *\n     * @private\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} maxElements Maximum number of elements (rows or columns).\n     *\n     * @returns {number|*}\n     */\n\n  }, {\n    key: \"countRenderableIndexes\",\n    value: function countRenderableIndexes(indexMapper, maxElements) {\n      var consideredElements = Math.min(indexMapper.getNotTrimmedIndexesLength(), maxElements); // Don't take hidden indexes into account. We are looking just for renderable indexes.\n\n      var firstNotHiddenIndex = indexMapper.getFirstNotHiddenIndex(consideredElements - 1, -1); // There are no renderable indexes.\n\n      if (firstNotHiddenIndex === null) {\n        return 0;\n      }\n\n      return indexMapper.getRenderableFromVisualIndex(firstNotHiddenIndex) + 1;\n    }\n    /**\n     * Returns the number of renderable columns.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countRenderableColumns\",\n    value: function countRenderableColumns() {\n      return this.countRenderableIndexes(this.instance.columnIndexMapper, this.settings.maxCols);\n    }\n    /**\n     * Returns the number of renderable rows.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countRenderableRows\",\n    value: function countRenderableRows() {\n      return this.countRenderableIndexes(this.instance.rowIndexMapper, this.settings.maxRows);\n    }\n    /**\n     * Returns number of not hidden row indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countNotHiddenRowIndexes\",\n    value: function countNotHiddenRowIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.rowIndexMapper, this.countRenderableRows());\n    }\n    /**\n     * Returns number of not hidden column indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countNotHiddenColumnIndexes\",\n    value: function countNotHiddenColumnIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.columnIndexMapper, this.countRenderableColumns());\n    }\n    /**\n     * Returns number of not hidden indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} renderableIndexesCount Total count of renderable indexes for specific axis.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"countNotHiddenIndexes\",\n    value: function countNotHiddenIndexes(visualIndex, incrementBy, indexMapper, renderableIndexesCount) {\n      if (isNaN(visualIndex) || visualIndex < 0) {\n        return 0;\n      }\n\n      var firstVisibleIndex = indexMapper.getFirstNotHiddenIndex(visualIndex, incrementBy);\n      var renderableIndex = indexMapper.getRenderableFromVisualIndex(firstVisibleIndex);\n\n      if (!Number.isInteger(renderableIndex)) {\n        return 0;\n      }\n\n      var notHiddenIndexes = 0;\n\n      if (incrementBy < 0) {\n        // Zero-based numbering for renderable indexes corresponds to a number of not hidden indexes.\n        notHiddenIndexes = renderableIndex + 1;\n      } else if (incrementBy > 0) {\n        notHiddenIndexes = renderableIndexesCount - renderableIndex;\n      }\n\n      return notHiddenIndexes;\n    }\n    /**\n     * Defines default configuration and initializes WalkOnTable intance.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"initializeWalkontable\",\n    value: function initializeWalkontable() {\n      var _this2 = this;\n\n      var priv = privatePool.get(this);\n      var walkontableConfig = {\n        externalRowCalculator: this.instance.getPlugin('autoRowSize') && this.instance.getPlugin('autoRowSize').isEnabled(),\n        table: priv.table,\n        isDataViewInstance: function isDataViewInstance() {\n          return isRootInstance(_this2.instance);\n        },\n        preventOverflow: function preventOverflow() {\n          return _this2.settings.preventOverflow;\n        },\n        preventWheel: function preventWheel() {\n          return _this2.settings.preventWheel;\n        },\n        stretchH: function stretchH() {\n          return _this2.settings.stretchH;\n        },\n        data: function data(renderableRow, renderableColumn) {\n          var _this2$instance;\n\n          return (_this2$instance = _this2.instance).getDataAtCell.apply(_this2$instance, _toConsumableArray(_this2.translateFromRenderableToVisualIndex(renderableRow, renderableColumn)));\n        },\n        totalRows: function totalRows() {\n          return _this2.countRenderableRows();\n        },\n        totalColumns: function totalColumns() {\n          return _this2.countRenderableColumns();\n        },\n        // Number of renderable columns for the left overlay.\n        fixedColumnsLeft: function fixedColumnsLeft() {\n          var countCols = _this2.instance.countCols();\n\n          var visualFixedColumnsLeft = Math.min(parseInt(_this2.settings.fixedColumnsLeft, 10), countCols) - 1;\n          return _this2.countNotHiddenColumnIndexes(visualFixedColumnsLeft, -1);\n        },\n        // Number of renderable rows for the top overlay.\n        fixedRowsTop: function fixedRowsTop() {\n          var countRows = _this2.instance.countRows();\n\n          var visualFixedRowsTop = Math.min(parseInt(_this2.settings.fixedRowsTop, 10), countRows) - 1;\n          return _this2.countNotHiddenRowIndexes(visualFixedRowsTop, -1);\n        },\n        // Number of renderable rows for the bottom overlay.\n        fixedRowsBottom: function fixedRowsBottom() {\n          var countRows = _this2.instance.countRows();\n\n          var visualFixedRowsBottom = Math.max(countRows - parseInt(_this2.settings.fixedRowsBottom, 10), 0);\n          return _this2.countNotHiddenRowIndexes(visualFixedRowsBottom, 1);\n        },\n        // Enable the left overlay when conditions are met.\n        shouldRenderLeftOverlay: function shouldRenderLeftOverlay() {\n          return _this2.settings.fixedColumnsLeft > 0 || walkontableConfig.rowHeaders().length > 0;\n        },\n        // Enable the top overlay when conditions are met.\n        shouldRenderTopOverlay: function shouldRenderTopOverlay() {\n          return _this2.settings.fixedRowsTop > 0 || walkontableConfig.columnHeaders().length > 0;\n        },\n        // Enable the bottom overlay when conditions are met.\n        shouldRenderBottomOverlay: function shouldRenderBottomOverlay() {\n          return _this2.settings.fixedRowsBottom > 0;\n        },\n        minSpareRows: function minSpareRows() {\n          return _this2.settings.minSpareRows;\n        },\n        renderAllRows: this.settings.renderAllRows,\n        rowHeaders: function rowHeaders() {\n          var headerRenderers = [];\n\n          if (_this2.instance.hasRowHeaders()) {\n            headerRenderers.push(function (renderableRowIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for row indexes (without row headers).\n              var visualRowIndex = renderableRowIndex >= 0 ? _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n\n              _this2.appendRowHeader(visualRowIndex, TH);\n            });\n          }\n\n          _this2.instance.runHooks('afterGetRowHeaderRenderers', headerRenderers);\n\n          return headerRenderers;\n        },\n        columnHeaders: function columnHeaders() {\n          var headerRenderers = [];\n\n          if (_this2.instance.hasColHeaders()) {\n            headerRenderers.push(function (renderedColumnIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for columns indexes (without column headers).\n              var visualColumnsIndex = renderedColumnIndex >= 0 ? _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex) : renderedColumnIndex;\n\n              _this2.appendColHeader(visualColumnsIndex, TH);\n            });\n          }\n\n          _this2.instance.runHooks('afterGetColumnHeaderRenderers', headerRenderers);\n\n          return headerRenderers;\n        },\n        columnWidth: function columnWidth(renderedColumnIndex) {\n          var visualIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex); // It's not a bug that we can't find visual index for some handled by method indexes. The function is called also\n          // for not displayed indexes (beyond the table boundaries), i.e. when `fixedColumnsLeft` > `startCols` (wrong config?) or\n          // scrolling and dataset is empty (scroll should handle that?).\n\n\n          return _this2.instance.getColWidth(visualIndex === null ? renderedColumnIndex : visualIndex);\n        },\n        rowHeight: function rowHeight(renderedRowIndex) {\n          var visualIndex = _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderedRowIndex);\n\n          return _this2.instance.getRowHeight(visualIndex === null ? renderedRowIndex : visualIndex);\n        },\n        cellRenderer: function cellRenderer(renderedRowIndex, renderedColumnIndex, TD) {\n          var _this2$translateFromR = _this2.translateFromRenderableToVisualIndex(renderedRowIndex, renderedColumnIndex),\n              _this2$translateFromR2 = _slicedToArray(_this2$translateFromR, 2),\n              visualRowIndex = _this2$translateFromR2[0],\n              visualColumnIndex = _this2$translateFromR2[1]; // Coords may be modified. For example, by the `MergeCells` plugin. It should affect cell value and cell meta.\n\n\n          var modifiedCellCoords = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex);\n\n          var visualRowToCheck = visualRowIndex;\n          var visualColumnToCheck = visualColumnIndex;\n\n          if (Array.isArray(modifiedCellCoords)) {\n            var _modifiedCellCoords = _slicedToArray(modifiedCellCoords, 2);\n\n            visualRowToCheck = _modifiedCellCoords[0];\n            visualColumnToCheck = _modifiedCellCoords[1];\n          }\n\n          var cellProperties = _this2.instance.getCellMeta(visualRowToCheck, visualColumnToCheck);\n\n          var prop = _this2.instance.colToProp(visualColumnToCheck);\n\n          var value = _this2.instance.getDataAtRowProp(visualRowToCheck, prop);\n\n          if (_this2.instance.hasHook('beforeValueRender')) {\n            value = _this2.instance.runHooks('beforeValueRender', value, cellProperties);\n          }\n\n          _this2.instance.runHooks('beforeRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n\n          _this2.instance.getCellRenderer(cellProperties)(_this2.instance, TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n\n          _this2.instance.runHooks('afterRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n        },\n        selections: this.instance.selection.highlight,\n        hideBorderOnMouseDownOver: function hideBorderOnMouseDownOver() {\n          return _this2.settings.fragmentSelection;\n        },\n        onWindowResize: function onWindowResize() {\n          if (!_this2.instance || _this2.instance.isDestroyed) {\n            return;\n          }\n\n          _this2.instance.refreshDimensions();\n        },\n        onCellMouseDown: function onCellMouseDown(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          var blockCalculations = {\n            row: false,\n            column: false,\n            cell: false\n          };\n\n          _this2.instance.listen();\n\n          _this2.activeWt = wt;\n          priv.mouseDown = true;\n\n          _this2.instance.runHooks('beforeOnCellMouseDown', event, visualCoords, TD, blockCalculations);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          handleMouseEvent(event, {\n            coords: visualCoords,\n            selection: _this2.instance.selection,\n            controller: blockCalculations\n          });\n\n          _this2.instance.runHooks('afterOnCellMouseDown', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellContextMenu: function onCellContextMenu(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          _this2.activeWt = wt;\n          priv.mouseDown = false;\n\n          if (_this2.instance.selection.isInProgress()) {\n            _this2.instance.selection.finish();\n          }\n\n          _this2.instance.runHooks('beforeOnCellContextMenu', event, visualCoords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellContextMenu', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOut: function onCellMouseOut(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseOut', event, visualCoords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseOut', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOver: function onCellMouseOver(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          var blockCalculations = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseOver', event, visualCoords, TD, blockCalculations);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          if (priv.mouseDown) {\n            handleMouseEvent(event, {\n              coords: visualCoords,\n              selection: _this2.instance.selection,\n              controller: blockCalculations\n            });\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseOver', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseUp: function onCellMouseUp(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseUp', event, visualCoords, TD); // TODO: The second condition check is a workaround. Callback corresponding the method `updateSettings`\n          // disable plugin and enable it again. Disabling plugin closes the menu. Thus, calling the\n          // `updateSettings` in a body of any callback executed right after some context-menu action\n          // breaks the table (#7231).\n\n\n          if (isImmediatePropagationStopped(event) || _this2.instance.isDestroyed) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseUp', event, visualCoords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellCornerMouseDown: function onCellCornerMouseDown(event) {\n          event.preventDefault();\n\n          _this2.instance.runHooks('afterOnCellCornerMouseDown', event);\n        },\n        onCellCornerDblClick: function onCellCornerDblClick(event) {\n          event.preventDefault();\n\n          _this2.instance.runHooks('afterOnCellCornerDblClick', event);\n        },\n        beforeDraw: function beforeDraw(force, skipRender) {\n          return _this2.beforeRender(force, skipRender);\n        },\n        onDraw: function onDraw(force) {\n          return _this2.onDraw(force);\n        },\n        onScrollVertically: function onScrollVertically() {\n          return _this2.instance.runHooks('afterScrollVertically');\n        },\n        onScrollHorizontally: function onScrollHorizontally() {\n          return _this2.instance.runHooks('afterScrollHorizontally');\n        },\n        onBeforeRemoveCellClassNames: function onBeforeRemoveCellClassNames() {\n          return _this2.instance.runHooks('beforeRemoveCellClassNames');\n        },\n        onBeforeHighlightingRowHeader: function onBeforeHighlightingRowHeader(renderableRow, headerLevel, highlightMeta) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var visualRow = rowMapper.getVisualFromRenderableIndex(renderableRow);\n\n          var newVisualRow = _this2.instance.runHooks('beforeHighlightingRowHeader', visualRow, headerLevel, highlightMeta);\n\n          return rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(newVisualRow, 1));\n        },\n        onBeforeHighlightingColumnHeader: function onBeforeHighlightingColumnHeader(renderableColumn, headerLevel, highlightMeta) {\n          var columnMapper = _this2.instance.columnIndexMapper;\n          var visualColumn = columnMapper.getVisualFromRenderableIndex(renderableColumn);\n\n          var newVisualColumn = _this2.instance.runHooks('beforeHighlightingColumnHeader', visualColumn, headerLevel, highlightMeta);\n\n          return columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(newVisualColumn, 1));\n        },\n        onAfterDrawSelection: function onAfterDrawSelection(currentRow, currentColumn, layerLevel) {\n          var cornersOfSelection;\n\n          var _this2$translateFromR3 = _this2.translateFromRenderableToVisualIndex(currentRow, currentColumn),\n              _this2$translateFromR4 = _slicedToArray(_this2$translateFromR3, 2),\n              visualRowIndex = _this2$translateFromR4[0],\n              visualColumnIndex = _this2$translateFromR4[1];\n\n          var selectedRange = _this2.instance.selection.getSelectedRange();\n\n          var selectionRangeSize = selectedRange.size();\n\n          if (selectionRangeSize > 0) {\n            // Selection layers are stored from the \"oldest\" to the \"newest\". We should calculate the offset.\n            // Please look at the `SelectedRange` class and it's method for getting selection's layer for more information.\n            var selectionOffset = (layerLevel !== null && layerLevel !== void 0 ? layerLevel : 0) + 1 - selectionRangeSize;\n            var selectionForLayer = selectedRange.peekByIndex(selectionOffset);\n            cornersOfSelection = [selectionForLayer.from.row, selectionForLayer.from.col, selectionForLayer.to.row, selectionForLayer.to.col];\n          }\n\n          return _this2.instance.runHooks('afterDrawSelection', visualRowIndex, visualColumnIndex, cornersOfSelection, layerLevel);\n        },\n        onBeforeDrawBorders: function onBeforeDrawBorders(corners, borderClassName) {\n          var _corners = _slicedToArray(corners, 4),\n              startRenderableRow = _corners[0],\n              startRenderableColumn = _corners[1],\n              endRenderableRow = _corners[2],\n              endRenderableColumn = _corners[3];\n\n          var visualCorners = [_this2.instance.rowIndexMapper.getVisualFromRenderableIndex(startRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(startRenderableColumn), _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(endRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(endRenderableColumn)];\n          return _this2.instance.runHooks('beforeDrawBorders', visualCorners, borderClassName);\n        },\n        onBeforeTouchScroll: function onBeforeTouchScroll() {\n          return _this2.instance.runHooks('beforeTouchScroll');\n        },\n        onAfterMomentumScroll: function onAfterMomentumScroll() {\n          return _this2.instance.runHooks('afterMomentumScroll');\n        },\n        onBeforeStretchingColumnWidth: function onBeforeStretchingColumnWidth(stretchedWidth, renderedColumnIndex) {\n          var visualColumnIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n\n          return _this2.instance.runHooks('beforeStretchingColumnWidth', stretchedWidth, visualColumnIndex);\n        },\n        onModifyRowHeaderWidth: function onModifyRowHeaderWidth(rowHeaderWidth) {\n          return _this2.instance.runHooks('modifyRowHeaderWidth', rowHeaderWidth);\n        },\n        onModifyGetCellCoords: function onModifyGetCellCoords(renderableRowIndex, renderableColumnIndex, topmost) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var columnMapper = _this2.instance.columnIndexMapper; // Callback handle also headers. We shouldn't translate them.\n\n          var visualColumnIndex = renderableColumnIndex >= 0 ? columnMapper.getVisualFromRenderableIndex(renderableColumnIndex) : renderableColumnIndex;\n          var visualRowIndex = renderableRowIndex >= 0 ? rowMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n\n          var visualIndexes = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex, topmost);\n\n          if (Array.isArray(visualIndexes)) {\n            var _visualIndexes = _slicedToArray(visualIndexes, 4),\n                visualRowFrom = _visualIndexes[0],\n                visualColumnFrom = _visualIndexes[1],\n                visualRowTo = _visualIndexes[2],\n                visualColumnTo = _visualIndexes[3]; // Result of the hook is handled by the Walkontable (renderable indexes).\n\n\n            return [visualRowFrom >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(visualRowFrom, 1)) : visualRowFrom, visualColumnFrom >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(visualColumnFrom, 1)) : visualColumnFrom, visualRowTo >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getFirstNotHiddenIndex(visualRowTo, -1)) : visualRowTo, visualColumnTo >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getFirstNotHiddenIndex(visualColumnTo, -1)) : visualColumnTo];\n          }\n        },\n        viewportRowCalculatorOverride: function viewportRowCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportRowRenderingOffset;\n\n          if (viewportOffset === 'auto' && _this2.settings.fixedRowsTop) {\n            viewportOffset = 10;\n          }\n\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableRows = _this2.countRenderableRows();\n\n            var firstRenderedRow = calc.startRow;\n            var lastRenderedRow = calc.endRow;\n\n            if (typeof viewportOffset === 'number') {\n              calc.startRow = Math.max(firstRenderedRow - viewportOffset, 0);\n              calc.endRow = Math.min(lastRenderedRow + viewportOffset, renderableRows - 1);\n            } else if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedRow / renderableRows * 12);\n              calc.startRow = Math.max(firstRenderedRow - offset, 0);\n              calc.endRow = Math.min(lastRenderedRow + offset, renderableRows - 1);\n            }\n          }\n\n          _this2.instance.runHooks('afterViewportRowCalculatorOverride', calc);\n        },\n        viewportColumnCalculatorOverride: function viewportColumnCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportColumnRenderingOffset;\n\n          if (viewportOffset === 'auto' && _this2.settings.fixedColumnsLeft) {\n            viewportOffset = 10;\n          }\n\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableColumns = _this2.countRenderableColumns();\n\n            var firstRenderedColumn = calc.startColumn;\n            var lastRenderedColumn = calc.endColumn;\n\n            if (typeof viewportOffset === 'number') {\n              calc.startColumn = Math.max(firstRenderedColumn - viewportOffset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + viewportOffset, renderableColumns - 1);\n            }\n\n            if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedColumn / renderableColumns * 6);\n              calc.startColumn = Math.max(firstRenderedColumn - offset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + offset, renderableColumns - 1);\n            }\n          }\n\n          _this2.instance.runHooks('afterViewportColumnCalculatorOverride', calc);\n        },\n        rowHeaderWidth: function rowHeaderWidth() {\n          return _this2.settings.rowHeaderWidth;\n        },\n        columnHeaderHeight: function columnHeaderHeight() {\n          var columnHeaderHeight = _this2.instance.runHooks('modifyColumnHeaderHeight');\n\n          return _this2.settings.columnHeaderHeight || columnHeaderHeight;\n        }\n      };\n      this.instance.runHooks('beforeInitWalkontable', walkontableConfig);\n      this.wt = new Walkontable(walkontableConfig);\n      this.activeWt = this.wt;\n      var spreader = this.wt.wtTable.spreader; // We have to cache width and height after Walkontable initialization.\n\n      var _this$instance$rootEl = this.instance.rootElement.getBoundingClientRect(),\n          width = _this$instance$rootEl.width,\n          height = _this$instance$rootEl.height;\n\n      this.setLastSize(width, height);\n      this.eventManager.addEventListener(spreader, 'mousedown', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(spreader, 'contextmenu', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(this.instance.rootDocument.documentElement, 'click', function () {\n        if (_this2.settings.observeDOMVisibility) {\n          if (_this2.wt.drawInterrupted) {\n            _this2.instance.forceFullRender = true;\n\n            _this2.render();\n          }\n        }\n      });\n    }\n    /**\n     * Checks if it's possible to create text selection in element.\n     *\n     * @private\n     * @param {HTMLElement} el The element to check.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isTextSelectionAllowed\",\n    value: function isTextSelectionAllowed(el) {\n      if (isInput(el)) {\n        return true;\n      }\n\n      var isChildOfTableBody = isChildOf(el, this.instance.view.wt.wtTable.spreader);\n\n      if (this.settings.fragmentSelection === true && isChildOfTableBody) {\n        return true;\n      }\n\n      if (this.settings.fragmentSelection === 'cell' && this.isSelectedOnlyCell() && isChildOfTableBody) {\n        return true;\n      }\n\n      if (!this.settings.fragmentSelection && this.isCellEdited() && this.isSelectedOnlyCell()) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Checks if user's been called mousedown.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isMouseDown\",\n    value: function isMouseDown() {\n      return privatePool.get(this).mouseDown;\n    }\n    /**\n     * Check if selected only one cell.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isSelectedOnlyCell\",\n    value: function isSelectedOnlyCell() {\n      var _this$instance$getSel, _this$instance$getSel2;\n\n      return (_this$instance$getSel = (_this$instance$getSel2 = this.instance.getSelectedRangeLast()) === null || _this$instance$getSel2 === void 0 ? void 0 : _this$instance$getSel2.isSingle()) !== null && _this$instance$getSel !== void 0 ? _this$instance$getSel : false;\n    }\n    /**\n     * Checks if active cell is editing.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isCellEdited\",\n    value: function isCellEdited() {\n      var activeEditor = this.instance.getActiveEditor();\n      return activeEditor && activeEditor.isOpened();\n    }\n    /**\n     * `beforeDraw` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     * @param {boolean} skipRender Indicates whether the rendering is skipped.\n     */\n\n  }, {\n    key: \"beforeRender\",\n    value: function beforeRender(force, skipRender) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('beforeRender', this.instance.forceFullRender, skipRender);\n      }\n    }\n    /**\n     * `onDraw` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     */\n\n  }, {\n    key: \"onDraw\",\n    value: function onDraw(force) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('afterRender', this.instance.forceFullRender);\n      }\n    }\n    /**\n     * Append row header to a TH element.\n     *\n     * @private\n     * @param {number} visualRowIndex The visual row index.\n     * @param {HTMLTableHeaderCellElement} TH The table header element.\n     */\n\n  }, {\n    key: \"appendRowHeader\",\n    value: function appendRowHeader(visualRowIndex, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n\n        if (!hasClass(container, 'relative')) {\n          empty(TH);\n          this.appendRowHeader(visualRowIndex, TH);\n          return;\n        }\n\n        this.updateCellHeader(container.querySelector('.rowHeader'), visualRowIndex, this.instance.getRowHeader);\n      } else {\n        var _this$instance3 = this.instance,\n            rootDocument = _this$instance3.rootDocument,\n            getRowHeader = _this$instance3.getRowHeader;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'rowHeader';\n        this.updateCellHeader(span, visualRowIndex, getRowHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n\n      this.instance.runHooks('afterGetRowHeader', visualRowIndex, TH);\n    }\n    /**\n     * Append column header to a TH element.\n     *\n     * @private\n     * @param {number} visualColumnIndex Visual column index.\n     * @param {HTMLTableHeaderCellElement} TH The table header element.\n     */\n\n  }, {\n    key: \"appendColHeader\",\n    value: function appendColHeader(visualColumnIndex, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n\n        if (hasClass(container, 'relative')) {\n          this.updateCellHeader(container.querySelector('.colHeader'), visualColumnIndex, this.instance.getColHeader);\n        } else {\n          empty(TH);\n          this.appendColHeader(visualColumnIndex, TH);\n        }\n      } else {\n        var rootDocument = this.instance.rootDocument;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'colHeader';\n        this.updateCellHeader(span, visualColumnIndex, this.instance.getColHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n\n      this.instance.runHooks('afterGetColHeader', visualColumnIndex, TH);\n    }\n    /**\n     * Updates header cell content.\n     *\n     * @since 0.15.0-beta4\n     * @param {HTMLElement} element Element to update.\n     * @param {number} index Row index or column index.\n     * @param {Function} content Function which should be returns content for this cell.\n     */\n\n  }, {\n    key: \"updateCellHeader\",\n    value: function updateCellHeader(element, index, content) {\n      var renderedIndex = index;\n      var parentOverlay = this.wt.wtOverlays.getParentOverlay(element) || this.wt; // prevent wrong calculations from SampleGenerator\n\n      if (element.parentNode) {\n        if (hasClass(element, 'colHeader')) {\n          renderedIndex = parentOverlay.wtTable.columnFilter.sourceToRendered(index);\n        } else if (hasClass(element, 'rowHeader')) {\n          renderedIndex = parentOverlay.wtTable.rowFilter.sourceToRendered(index);\n        }\n      }\n\n      if (renderedIndex > -1) {\n        fastInnerHTML(element, content(index));\n      } else {\n        // workaround for https://github.com/handsontable/handsontable/issues/1946\n        fastInnerText(element, String.fromCharCode(160));\n        addClass(element, 'cornerHeader');\n      }\n    }\n    /**\n     * Given a element's left position relative to the viewport, returns maximum element width until the right\n     * edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} leftOffset The left offset.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"maximumVisibleElementWidth\",\n    value: function maximumVisibleElementWidth(leftOffset) {\n      var workspaceWidth = this.wt.wtViewport.getWorkspaceWidth();\n      var maxWidth = workspaceWidth - leftOffset;\n      return maxWidth > 0 ? maxWidth : 0;\n    }\n    /**\n     * Given a element's top position relative to the viewport, returns maximum element height until the bottom\n     * edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} topOffset The top offset.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"maximumVisibleElementHeight\",\n    value: function maximumVisibleElementHeight(topOffset) {\n      var workspaceHeight = this.wt.wtViewport.getWorkspaceHeight();\n      var maxHeight = workspaceHeight - topOffset;\n      return maxHeight > 0 ? maxHeight : 0;\n    }\n    /**\n     * Sets new dimensions of the container.\n     *\n     * @param {number} width The table width.\n     * @param {number} height The table height.\n     */\n\n  }, {\n    key: \"setLastSize\",\n    value: function setLastSize(width, height) {\n      var priv = privatePool.get(this);\n      var _ref2 = [width, height];\n      priv.lastWidth = _ref2[0];\n      priv.lastHeight = _ref2[1];\n    }\n    /**\n     * Returns cached dimensions.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getLastSize\",\n    value: function getLastSize() {\n      var priv = privatePool.get(this);\n      return {\n        width: priv.lastWidth,\n        height: priv.lastHeight\n      };\n    }\n    /**\n     * Checks if master overlay is active.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"mainViewIsActive\",\n    value: function mainViewIsActive() {\n      return this.wt === this.activeWt;\n    }\n    /**\n     * Destroyes internal WalkOnTable's instance. Detaches all of the bonded listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.wt.destroy();\n      this.eventManager.destroy();\n    }\n  }]);\n\n  return TableView;\n}();\n\nexport default TableView;"]},"metadata":{},"sourceType":"module"}