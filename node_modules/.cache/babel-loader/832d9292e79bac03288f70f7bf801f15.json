{"ast":null,"code":"import * as C from \"../../../i18n/constants.mjs\";\nimport { registerCondition, getCondition } from \"../conditionRegisterer.mjs\";\nimport { CONDITION_NAME as CONDITION_BETWEEN } from \"./between.mjs\";\nexport var CONDITION_NAME = 'not_between';\n/**\r\n * @param {object} dataRow The object which holds and describes the single cell value.\r\n * @param {Array} inputValues An array of values to compare with.\r\n * @returns {boolean}\r\n */\n\nexport function condition(dataRow, inputValues) {\n  return !getCondition(CONDITION_BETWEEN, inputValues)(dataRow);\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_NOT_BETWEEN,\n  inputsCount: 2,\n  showOperators: true\n});","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/filters/condition/notBetween.mjs"],"names":["C","registerCondition","getCondition","CONDITION_NAME","CONDITION_BETWEEN","condition","dataRow","inputValues","name","FILTERS_CONDITIONS_NOT_BETWEEN","inputsCount","showOperators"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,6BAAnB;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,4BAAhD;AACA,SAASC,cAAc,IAAIC,iBAA3B,QAAoD,eAApD;AACA,OAAO,IAAID,cAAc,GAAG,aAArB;AACP;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,SAAT,CAAmBC,OAAnB,EAA4BC,WAA5B,EAAyC;AAC9C,SAAO,CAACL,YAAY,CAACE,iBAAD,EAAoBG,WAApB,CAAZ,CAA6CD,OAA7C,CAAR;AACD;AACDL,iBAAiB,CAACE,cAAD,EAAiBE,SAAjB,EAA4B;AAC3CG,EAAAA,IAAI,EAAER,CAAC,CAACS,8BADmC;AAE3CC,EAAAA,WAAW,EAAE,CAF8B;AAG3CC,EAAAA,aAAa,EAAE;AAH4B,CAA5B,CAAjB","sourcesContent":["import * as C from \"../../../i18n/constants.mjs\";\r\nimport { registerCondition, getCondition } from \"../conditionRegisterer.mjs\";\r\nimport { CONDITION_NAME as CONDITION_BETWEEN } from \"./between.mjs\";\r\nexport var CONDITION_NAME = 'not_between';\r\n/**\r\n * @param {object} dataRow The object which holds and describes the single cell value.\r\n * @param {Array} inputValues An array of values to compare with.\r\n * @returns {boolean}\r\n */\r\n\r\nexport function condition(dataRow, inputValues) {\r\n  return !getCondition(CONDITION_BETWEEN, inputValues)(dataRow);\r\n}\r\nregisterCondition(CONDITION_NAME, condition, {\r\n  name: C.FILTERS_CONDITIONS_NOT_BETWEEN,\r\n  inputsCount: 2,\r\n  showOperators: true\r\n});"]},"metadata":{},"sourceType":"module"}