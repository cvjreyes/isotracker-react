{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\isoControlHoldsDataTable\\\\isoControlHoldsDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\nimport { Link } from 'react-router-dom';\nimport CommentPopUp from '../commentPopUp/commentPopUp';\nimport HoldsPopUp from '../holdsPopUp/holdsPopUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IsoControlHoldsDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      displayData: [],\n      filterData: [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      filters: [],\n      currentRole: this.props.currentRole\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      render: text => text\n    });\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id.props.children);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }); //this.setState({ selectedRows: selectedRows });\n\n      this.props.onChange(ids);\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/modelledEstimatedHolds\", options).then(response => response.json()).then(async json => {\n      let rows = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        rows.push({\n          \"tag\": json.rows[i].tag\n        });\n      }\n\n      const filterRow = [{\n        key: 0,\n        tag: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"TAG\",\n            onChange: e => this.filter(0, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 40\n        }, this)\n      }];\n      await this.setState({\n        data: rows,\n        displayData: rows,\n        filters: filterRow\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {}\n  }\n\n  async filter(column, value) {\n    let fd = this.state.filterData;\n    fd[column] = value;\n    await this.setState({\n      filterData: fd\n    });\n    let auxDisplayData = this.state.data;\n    let resultData = [];\n    let fil,\n        exists = null;\n\n    for (let i = 0; i < auxDisplayData.length; i++) {\n      exists = true;\n\n      for (let column = 0; column < Object.keys(auxDisplayData[i]).length; column++) {\n        fil = Object.keys(auxDisplayData[i])[column];\n\n        if (auxDisplayData[i][fil]) {\n          if (this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])) {\n            exists = false;\n          }\n        }\n      }\n\n      if (exists) {\n        resultData.push(auxDisplayData[i]);\n      }\n    }\n\n    await this.setState({\n      displayData: resultData\n    });\n  }\n\n  render() {\n    const selectedRows = this.state.selectedRows;\n    const selectedRowsKeys = this.state.selectedRowsKeys;\n    const rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => ({\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n    const rowSelectionFilter = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => ({\n        disabled: true,\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n\n    if (localStorage.getItem(\"update\") === \"true\") {\n      this.setState({\n        selectedRows: [],\n        selectedRowsKeys: []\n      });\n      rowSelection.selectedRowKeys = [];\n      rowSelection.selectedRows = [];\n      localStorage.setItem(\"update\", false);\n    } else {\n      rowSelection.selectedRowKeys = selectedRowsKeys;\n      rowSelection.selectedRows = selectedRows;\n    }\n\n    let columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"TAG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'tag',\n      key: 'tag',\n      ...this.getColumnSearchProps('tag')\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Holds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'holds',\n      key: 'holds',\n      width: \"150px\"\n    }];\n\n    if (process.env.REACT_APP_PROGRESS === \"0\") {\n      columns = [{\n        title: /*#__PURE__*/_jsxDEV(\"center\", {\n          className: \"dataTable__header__text\",\n          children: \"ISO ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 18\n        }, this),\n        dataIndex: 'id',\n        key: 'id',\n        ...this.getColumnSearchProps('id'),\n        sorter: {\n          compare: (a, b) => a.id.props.children.localeCompare(b.id.props.children)\n        }\n      }, {\n        title: /*#__PURE__*/_jsxDEV(\"center\", {\n          className: \"dataTable__header__text\",\n          children: \"Revision\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 18\n        }, this),\n        dataIndex: 'revision',\n        key: 'revision',\n        ...this.getColumnSearchProps('revision'),\n        sorter: {\n          compare: (a, b) => a.revision.localeCompare(b.revision)\n        }\n      }, {\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable__header__text\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 18\n        }, this),\n        dataIndex: 'date',\n        key: 'date',\n        ...this.getColumnSearchProps('date'),\n        sorter: {\n          compare: (a, b) => a.date.replace(/\\D/g, '') - b.date.replace(/\\D/g, '')\n        }\n      }, {\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable__header__text\",\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 18\n        }, this),\n        dataIndex: 'from',\n        key: 'from',\n        ...this.getColumnSearchProps('from'),\n        sorter: {\n          compare: (a, b) => {\n            return a.from.localeCompare(b.from);\n          }\n        }\n      }, {\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable__header__text\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 18\n        }, this),\n        dataIndex: 'user',\n        key: 'user',\n        ...this.getColumnSearchProps('user')\n      }];\n    }\n\n    var totalElements = null;\n\n    if (this.state.data.length === 0) {\n      totalElements = null;\n    } else {\n      totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 24\n      }, this);\n    }\n\n    let table = null;\n\n    if (process.env.REACT_APP_PROGRESS === \"1\") {\n      table = /*#__PURE__*/_jsxDEV(Table, {\n        className: \"customTable\",\n        bordered: true,\n        columns: columns,\n        style: {\n          height: '540px'\n        },\n        dataSource: this.state.displayData,\n        scroll: {\n          y: 437\n        },\n        pagination: {\n          disabled: true,\n          defaultPageSize: 5000\n        },\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }, this);\n    } else {\n      table = /*#__PURE__*/_jsxDEV(Table, {\n        className: \"customTable\",\n        bordered: true,\n        rowSelection: {\n          type: 'checkbox',\n          ...rowSelection\n        },\n        columns: columns,\n        style: {\n          height: '540px'\n        },\n        dataSource: this.state.displayData,\n        scroll: {\n          y: 437\n        },\n        pagination: {\n          disabled: true,\n          defaultPageSize: 5000\n        },\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [table, /*#__PURE__*/_jsxDEV(Table, {\n          className: \"filter__table\",\n          pagination: {\n            disabled: true\n          },\n          scroll: {\n            y: 437\n          },\n          showHeader: false,\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.filters,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default IsoControlHoldsDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/isoControlHoldsDataTable/isoControlHoldsDataTable.js"],"names":["React","Table","Link","CommentPopUp","HoldsPopUp","IsoControlHoldsDataTable","Component","state","searchText","searchedColumn","data","displayData","filterData","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","filters","currentRole","getColumnSearchProps","dataIndex","render","text","handleReset","clearFilters","setState","onSelectChange","selectedRowKeys","ids","i","length","push","id","children","onChange","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","tag","filterRow","key","e","filter","target","value","componentDidUpdate","prevProps","prevState","column","fd","auxDisplayData","resultData","fil","exists","Object","keys","includes","rowSelection","getCheckboxProps","record","name","rowSelectionFilter","disabled","localStorage","getItem","setItem","columns","title","width","REACT_APP_PROGRESS","sorter","compare","a","b","localeCompare","revision","date","replace","from","totalElements","position","bottom","left","table","height","y","defaultPageSize","type"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentPopUp from '../commentPopUp/commentPopUp';\r\nimport HoldsPopUp from '../holdsPopUp/holdsPopUp';\r\n\r\nclass IsoControlHoldsDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    displayData: [],\r\n    filterData: [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    filters: [],\r\n    currentRole: this.props.currentRole\r\n  };\r\n\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/modelledEstimatedHolds\", options)\r\n    .then(response => response.json())\r\n    .then(async json => {\r\n      let rows = [] \r\n      for(let i = 0; i < json.rows.length; i++){\r\n        rows.push({\"tag\": json.rows[i].tag})\r\n      }\r\n      const filterRow = [{key: 0, tag: <div><input type=\"text\" className=\"filter__input\" placeholder=\"TAG\" onChange={(e) => this.filter(0, e.target.value)}/></div>}]\r\n      await this.setState({data: rows, displayData: rows, filters: filterRow})\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n\r\n    if(prevProps !== this.props){\r\n      \r\n      }\r\n\r\n  }\r\n\r\n\r\n  async filter(column, value){\r\n    let fd = this.state.filterData\r\n    fd[column] = value\r\n    await this.setState({filterData: fd})\r\n\r\n    let auxDisplayData = this.state.data\r\n    let resultData = []\r\n    let fil, exists = null\r\n    for(let i = 0; i < auxDisplayData.length; i++){\r\n      exists = true\r\n      for(let column = 0; column < Object.keys(auxDisplayData[i]).length; column ++){\r\n          \r\n        fil = Object.keys(auxDisplayData[i])[column]\r\n       \r\n        if(auxDisplayData[i][fil]){\r\n            if(this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])){\r\n                exists = false\r\n            }\r\n        }\r\n        \r\n      }\r\n      if(exists){\r\n        resultData.push(auxDisplayData[i])\r\n      }\r\n    }\r\n    await this.setState({displayData: resultData})\r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    \r\n    render: text => \r\n    text\r\n      \r\n  });\r\n\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n    const selectedRows = this.state.selectedRows;\r\n    const selectedRowsKeys = this.state.selectedRowsKeys;\r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => (      \r\n        {\r\n        \r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n\r\n    const rowSelectionFilter = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => ({\r\n        disabled: true,\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n    if(localStorage.getItem(\"update\") === \"true\"){\r\n      this.setState({\r\n        selectedRows: [],\r\n        selectedRowsKeys: []\r\n      })\r\n      rowSelection.selectedRowKeys = []\r\n      rowSelection.selectedRows = []\r\n      localStorage.setItem(\"update\", false)\r\n    }else{\r\n      rowSelection.selectedRowKeys = selectedRowsKeys \r\n      rowSelection.selectedRows = selectedRows;\r\n    }  \r\n    \r\n    \r\n    let columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">TAG</center>,\r\n        dataIndex: 'tag',\r\n        key: 'tag',\r\n        ...this.getColumnSearchProps('tag'),\r\n        \r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Holds</div>,\r\n        dataIndex: 'holds',\r\n        key: 'holds',\r\n        width: \"150px\"\r\n      },\r\n    ];\r\n\r\n    \r\n\r\n    if(process.env.REACT_APP_PROGRESS === \"0\"){\r\n      columns = [\r\n        {\r\n          title: <center className=\"dataTable__header__text\">ISO ID</center>,\r\n          dataIndex: 'id',\r\n          key: 'id',\r\n          ...this.getColumnSearchProps('id'),\r\n          sorter:{\r\n            compare: (a, b) => a.id.props.children.localeCompare(b.id.props.children),\r\n          },\r\n        },\r\n        {\r\n          title: <center className=\"dataTable__header__text\">Revision</center>,\r\n          dataIndex: 'revision',\r\n          key: 'revision',\r\n          ...this.getColumnSearchProps('revision'),\r\n          sorter:{\r\n            compare: (a, b) => a.revision.localeCompare(b.revision),\r\n          },\r\n        },\r\n        {\r\n          title: <div className=\"dataTable__header__text\">Date</div>,\r\n          dataIndex: 'date',\r\n          key: 'date',\r\n          ...this.getColumnSearchProps('date'),\r\n          sorter: {\r\n            compare: (a, b) => a.date.replace(/\\D/g,'') - b.date.replace(/\\D/g,''),\r\n          },\r\n        },\r\n        {\r\n          title: <div className=\"dataTable__header__text\">From</div>,\r\n          dataIndex: 'from',\r\n          key: 'from',\r\n          ...this.getColumnSearchProps('from'),\r\n          sorter: {\r\n            compare: (a, b) => { return a.from.localeCompare(b.from)},\r\n          },\r\n        },\r\n        {\r\n          title: <div className=\"dataTable__header__text\">User</div>,\r\n          dataIndex: 'user',\r\n          key: 'user',\r\n          ...this.getColumnSearchProps('user'),\r\n        },\r\n      ];\r\n    }\r\n    \r\n\r\n    var totalElements = null\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    let table = null\r\n    if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n      table = <Table className=\"customTable\" bordered = {true} columns={columns} style={{ height: '540px' }}  dataSource={this.state.displayData} scroll={{y:437}} pagination={{disabled:true, defaultPageSize:5000}} size=\"small\"/>\r\n    }else{\r\n      table = <Table className=\"customTable\" bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} columns={columns} style={{ height: '540px' }}  dataSource={this.state.displayData} scroll={{y:437}} pagination={{disabled:true, defaultPageSize:5000}} size=\"small\"/>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"dataTable__container\">\r\n          {table}\r\n          <Table className=\"filter__table\" pagination={{disabled:true}}  scroll={{y:437}} showHeader = {false} bordered = {true} columns={columns} dataSource={this.state.filters} size=\"small\"/> \r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IsoControlHoldsDataTable;"]},"metadata":{},"sourceType":"module"}