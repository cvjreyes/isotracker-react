{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { addClass, getScrollbarWidth, getScrollTop, getWindowScrollLeft, hasClass, outerHeight, removeClass, setOverlayPosition, resetCssTransform } from \"./../../../../helpers/dom/element.mjs\";\nimport TopOverlayTable from \"./../table/top.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CLONE_TOP } from \"./constants.mjs\";\n/**\n * @class TopOverlay\n */\n\nexport var TopOverlay = /*#__PURE__*/function (_Overlay) {\n  _inherits(TopOverlay, _Overlay);\n\n  var _super = _createSuper(TopOverlay);\n  /**\n   * @param {Walkontable} wotInstance The Walkontable instance.\n   */\n\n\n  function TopOverlay(wotInstance) {\n    var _this;\n\n    _classCallCheck(this, TopOverlay);\n\n    _this = _super.call(this, wotInstance);\n\n    _defineProperty(_assertThisInitialized(_this), \"cachedFixedRowsTop\", -1);\n\n    _this.clone = _this.makeClone(CLONE_TOP);\n    _this.cachedFixedRowsTop = _this.wot.getSetting('fixedRowsTop');\n    return _this;\n  }\n  /**\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\n   *\n   * @see Table#constructor\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\n   * @returns {Table}\n   */\n\n\n  _createClass(TopOverlay, [{\n    key: \"createTable\",\n    value: function createTable() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _construct(TopOverlayTable, args);\n    }\n    /**\n     * Checks if overlay should be fully rendered.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"shouldBeRendered\",\n    value: function shouldBeRendered() {\n      return this.wot.getSetting('shouldRenderTopOverlay');\n    }\n    /**\n     * Updates the top overlay position.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"resetFixedPosition\",\n    value: function resetFixedPosition() {\n      if (!this.needFullRender || !this.wot.wtTable.holder.parentNode) {\n        // removed from DOM\n        return;\n      }\n\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n      var headerPosition = 0;\n      var skipInnerBorderAdjusting = false;\n\n      if (this.trimmingContainer === this.wot.rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n        var wtTable = this.wot.wtTable;\n        var hiderRect = wtTable.hider.getBoundingClientRect();\n        var top = Math.ceil(hiderRect.top);\n        var bottom = Math.ceil(hiderRect.bottom);\n        var rootHeight = overlayRoot.offsetHeight; // This checks if the overlay is going to an infinite loop caused by added (or removed)\n        // `innerBorderTop` class name. Toggling the class name shifts the viewport by 1px and\n        // triggers the `scroll` event. It causes the table to render. The new render cycle takes into,\n        // account the shift and toggles the class name again. This causes the next loops. This\n        // happens only on Chrome (#7256).\n        //\n        // When we detect that the table bottom position is the same as the overlay bottom,\n        // do not toggle the class name.\n        //\n        // This workaround will be able to be cleared after merging the SVG borders, which introduces\n        // frozen lines (no more `innerBorderTop` workaround).\n\n        skipInnerBorderAdjusting = bottom === rootHeight;\n        var finalLeft;\n        var finalTop;\n        finalLeft = wtTable.hider.style.left;\n        finalLeft = finalLeft === '' ? 0 : finalLeft;\n\n        if (top < 0 && bottom - rootHeight > 0) {\n          finalTop = -top;\n        } else {\n          finalTop = 0;\n        }\n\n        headerPosition = finalTop;\n        finalTop += 'px';\n        setOverlayPosition(overlayRoot, finalLeft, finalTop);\n      } else {\n        headerPosition = this.getScrollPosition();\n        resetCssTransform(overlayRoot);\n      }\n\n      var positionChanged = this.adjustHeaderBordersPosition(headerPosition, skipInnerBorderAdjusting);\n      this.adjustElementsSize();\n      return positionChanged;\n    }\n    /**\n     * Sets the main overlay's vertical scroll position.\n     *\n     * @param {number} pos The scroll position.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"setScrollPosition\",\n    value: function setScrollPosition(pos) {\n      var rootWindow = this.wot.rootWindow;\n      var result = false;\n\n      if (this.mainTableScrollableElement === rootWindow && rootWindow.scrollY !== pos) {\n        rootWindow.scrollTo(getWindowScrollLeft(rootWindow), pos);\n        result = true;\n      } else if (this.mainTableScrollableElement.scrollTop !== pos) {\n        this.mainTableScrollableElement.scrollTop = pos;\n        result = true;\n      }\n\n      return result;\n    }\n    /**\n     * Triggers onScroll hook callback.\n     */\n\n  }, {\n    key: \"onScroll\",\n    value: function onScroll() {\n      this.wot.getSetting('onScrollHorizontally');\n    }\n    /**\n     * Calculates total sum cells height.\n     *\n     * @param {number} from Row index which calculates started from.\n     * @param {number} to Row index where calculation is finished.\n     * @returns {number} Height sum.\n     */\n\n  }, {\n    key: \"sumCellSizes\",\n    value: function sumCellSizes(from, to) {\n      var defaultRowHeight = this.wot.wtSettings.settings.defaultRowHeight;\n      var row = from;\n      var sum = 0;\n\n      while (row < to) {\n        var height = this.wot.wtTable.getRowHeight(row);\n        sum += height === void 0 ? defaultRowHeight : height;\n        row += 1;\n      }\n\n      return sum;\n    }\n    /**\n     * Adjust overlay root element, childs and master table element sizes (width, height).\n     *\n     * @param {boolean} [force=false] When `true`, it adjusts the DOM nodes sizes for that overlay.\n     */\n\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.updateTrimmingContainer();\n\n      if (this.needFullRender || force) {\n        this.adjustRootElementSize();\n        this.adjustRootChildrenSize();\n      }\n    }\n    /**\n     * Adjust overlay root element size (width and height).\n     */\n\n  }, {\n    key: \"adjustRootElementSize\",\n    value: function adjustRootElementSize() {\n      var _this$wot = this.wot,\n          wtTable = _this$wot.wtTable,\n          rootDocument = _this$wot.rootDocument,\n          rootWindow = _this$wot.rootWindow;\n      var scrollbarWidth = getScrollbarWidth(rootDocument);\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var overlayRootStyle = overlayRoot.style;\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n\n      if (this.trimmingContainer !== rootWindow || preventOverflow === 'horizontal') {\n        var width = this.wot.wtViewport.getWorkspaceWidth();\n\n        if (this.wot.wtOverlays.hasScrollbarRight) {\n          width -= scrollbarWidth;\n        }\n\n        width = Math.min(width, wtTable.wtRootElement.scrollWidth);\n        overlayRootStyle.width = \"\".concat(width, \"px\");\n      } else {\n        overlayRootStyle.width = '';\n      }\n\n      this.clone.wtTable.holder.style.width = overlayRootStyle.width;\n      var tableHeight = outerHeight(this.clone.wtTable.TABLE);\n\n      if (!this.wot.wtTable.hasDefinedSize()) {\n        tableHeight = 0;\n      }\n\n      overlayRootStyle.height = \"\".concat(tableHeight, \"px\");\n    }\n    /**\n     * Adjust overlay root childs size.\n     */\n\n  }, {\n    key: \"adjustRootChildrenSize\",\n    value: function adjustRootChildrenSize() {\n      var _selections$getCell$g;\n\n      var holder = this.clone.wtTable.holder;\n      var selections = this.wot.selections;\n      var selectionCornerOffset = Math.abs((_selections$getCell$g = selections === null || selections === void 0 ? void 0 : selections.getCell().getBorder(this.wot).cornerCenterPointOffset) !== null && _selections$getCell$g !== void 0 ? _selections$getCell$g : 0);\n      this.clone.wtTable.hider.style.width = this.hider.style.width;\n      holder.style.width = holder.parentNode.style.width; // Add selection corner protruding part to the holder total height to make sure that\n      // borders' corner won't be cut after vertical scroll (#6937).\n\n      holder.style.height = \"\".concat(parseInt(holder.parentNode.style.height, 10) + selectionCornerOffset, \"px\");\n    }\n    /**\n     * Adjust the overlay dimensions and position.\n     */\n\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      var total = this.wot.getSetting('totalRows');\n\n      if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\n        this.spreader.style.top = \"\".concat(this.wot.wtViewport.rowsRenderCalculator.startPosition, \"px\");\n      } else if (total === 0) {\n        // can happen if there are 0 rows\n        this.spreader.style.top = '0';\n      } else {\n        throw new Error('Incorrect value of the rowsRenderCalculator');\n      }\n\n      this.spreader.style.bottom = '';\n\n      if (this.needFullRender) {\n        this.syncOverlayOffset();\n      }\n    }\n    /**\n     * Synchronize calculated left position to an element.\n     */\n\n  }, {\n    key: \"syncOverlayOffset\",\n    value: function syncOverlayOffset() {\n      if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\n        this.clone.wtTable.spreader.style.left = \"\".concat(this.wot.wtViewport.columnsRenderCalculator.startPosition, \"px\");\n      } else {\n        this.clone.wtTable.spreader.style.left = '';\n      }\n    }\n    /**\n     * Scrolls vertically to a row.\n     *\n     * @param {number} sourceRow Row index which you want to scroll to.\n     * @param {boolean} [bottomEdge] If `true`, scrolls according to the bottom edge (top edge is by default).\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(sourceRow, bottomEdge) {\n      var wot = this.wot;\n      var sourceInstance = wot.cloneSource ? wot.cloneSource : wot;\n      var mainHolder = sourceInstance.wtTable.holder;\n      var newY = this.getTableParentOffset();\n      var scrollbarCompensation = 0;\n\n      if (bottomEdge && mainHolder.offsetHeight !== mainHolder.clientHeight) {\n        scrollbarCompensation = getScrollbarWidth(wot.rootDocument);\n      }\n\n      if (bottomEdge) {\n        var fixedRowsBottom = wot.getSetting('fixedRowsBottom');\n        var totalRows = wot.getSetting('totalRows');\n        newY += this.sumCellSizes(0, sourceRow + 1);\n        newY -= wot.wtViewport.getViewportHeight() - this.sumCellSizes(totalRows - fixedRowsBottom, totalRows); // Fix 1 pixel offset when cell is selected\n\n        newY += 1;\n      } else {\n        newY += this.sumCellSizes(wot.getSetting('fixedRowsTop'), sourceRow);\n      }\n\n      newY += scrollbarCompensation;\n      return this.setScrollPosition(newY);\n    }\n    /**\n     * Gets table parent top position.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getTableParentOffset\",\n    value: function getTableParentOffset() {\n      if (this.mainTableScrollableElement === this.wot.rootWindow) {\n        return this.wot.wtTable.holderOffset.top;\n      }\n\n      return 0;\n    }\n    /**\n     * Gets the main overlay's vertical scroll position.\n     *\n     * @returns {number} Main table's vertical scroll position.\n     */\n\n  }, {\n    key: \"getScrollPosition\",\n    value: function getScrollPosition() {\n      return getScrollTop(this.mainTableScrollableElement, this.wot.rootWindow);\n    }\n    /**\n     * Adds css classes to hide the header border's header (cell-selection border hiding issue).\n     *\n     * @param {number} position Header Y position if trimming container is window or scroll top if not.\n     * @param {boolean} [skipInnerBorderAdjusting=false] If `true` the inner border adjusting will be skipped.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"adjustHeaderBordersPosition\",\n    value: function adjustHeaderBordersPosition(position) {\n      var skipInnerBorderAdjusting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var masterParent = this.wot.wtTable.holder.parentNode;\n      var totalColumns = this.wot.getSetting('totalColumns');\n\n      if (totalColumns) {\n        removeClass(masterParent, 'emptyColumns');\n      } else {\n        addClass(masterParent, 'emptyColumns');\n      }\n\n      var positionChanged = false;\n\n      if (!skipInnerBorderAdjusting) {\n        var fixedRowsTop = this.wot.getSetting('fixedRowsTop');\n        var areFixedRowsTopChanged = this.cachedFixedRowsTop !== fixedRowsTop;\n        var columnHeaders = this.wot.getSetting('columnHeaders');\n\n        if ((areFixedRowsTopChanged || fixedRowsTop === 0) && columnHeaders.length > 0) {\n          var previousState = hasClass(masterParent, 'innerBorderTop');\n          this.cachedFixedRowsTop = this.wot.getSetting('fixedRowsTop');\n\n          if (position || this.wot.getSetting('totalRows') === 0) {\n            addClass(masterParent, 'innerBorderTop');\n            positionChanged = !previousState;\n          } else {\n            removeClass(masterParent, 'innerBorderTop');\n            positionChanged = previousState;\n          }\n        }\n      } // nasty workaround for double border in the header, TODO: find a pure-css solution\n\n\n      if (this.wot.getSetting('rowHeaders').length === 0) {\n        var secondHeaderCell = this.clone.wtTable.THEAD.querySelectorAll('th:nth-of-type(2)');\n\n        if (secondHeaderCell) {\n          for (var i = 0; i < secondHeaderCell.length; i++) {\n            secondHeaderCell[i].style['border-left-width'] = 0;\n          }\n        }\n      }\n\n      return positionChanged;\n    }\n  }], [{\n    key: \"OVERLAY_NAME\",\n    get: function get() {\n      return CLONE_TOP;\n    }\n    /**\n     * Cached value which holds the previous value of the `fixedRowsTop` option.\n     * It is used as a comparison value that can be used to detect changes in this value.\n     *\n     * @type {number}\n     */\n\n  }]);\n\n  return TopOverlay;\n}(Overlay);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/3rdparty/walkontable/src/overlay/top.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_construct","Parent","args","Class","_isNativeReflectConstruct","Reflect","construct","a","push","apply","Constructor","Function","bind","instance","_setPrototypeOf","arguments","_classCallCheck","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","addClass","getScrollbarWidth","getScrollTop","getWindowScrollLeft","hasClass","outerHeight","removeClass","setOverlayPosition","resetCssTransform","TopOverlayTable","Overlay","CLONE_TOP","TopOverlay","_Overlay","_super","wotInstance","_this","clone","makeClone","cachedFixedRowsTop","wot","getSetting","createTable","_len","Array","_key","shouldBeRendered","resetFixedPosition","needFullRender","wtTable","holder","parentNode","overlayRoot","preventOverflow","headerPosition","skipInnerBorderAdjusting","trimmingContainer","rootWindow","hiderRect","hider","getBoundingClientRect","top","Math","ceil","bottom","rootHeight","offsetHeight","finalLeft","finalTop","style","left","getScrollPosition","positionChanged","adjustHeaderBordersPosition","adjustElementsSize","setScrollPosition","pos","mainTableScrollableElement","scrollY","scrollTo","scrollTop","onScroll","sumCellSizes","from","to","defaultRowHeight","wtSettings","settings","row","sum","height","getRowHeight","force","undefined","updateTrimmingContainer","adjustRootElementSize","adjustRootChildrenSize","_this$wot","rootDocument","scrollbarWidth","overlayRootStyle","width","wtViewport","getWorkspaceWidth","wtOverlays","hasScrollbarRight","min","wtRootElement","scrollWidth","concat","tableHeight","TABLE","hasDefinedSize","_selections$getCell$g","selections","selectionCornerOffset","abs","getCell","getBorder","cornerCenterPointOffset","parseInt","applyToDOM","total","rowsRenderCalculator","startPosition","spreader","Error","syncOverlayOffset","columnsRenderCalculator","sourceRow","bottomEdge","sourceInstance","cloneSource","mainHolder","newY","getTableParentOffset","scrollbarCompensation","clientHeight","fixedRowsBottom","totalRows","getViewportHeight","holderOffset","position","masterParent","totalColumns","fixedRowsTop","areFixedRowsTopChanged","columnHeaders","previousState","secondHeaderCell","THEAD","querySelectorAll","get"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { addClass, getScrollbarWidth, getScrollTop, getWindowScrollLeft, hasClass, outerHeight, removeClass, setOverlayPosition, resetCssTransform } from \"./../../../../helpers/dom/element.mjs\";\nimport TopOverlayTable from \"./../table/top.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CLONE_TOP } from \"./constants.mjs\";\n/**\n * @class TopOverlay\n */\n\nexport var TopOverlay = /*#__PURE__*/function (_Overlay) {\n  _inherits(TopOverlay, _Overlay);\n\n  var _super = _createSuper(TopOverlay);\n\n  /**\n   * @param {Walkontable} wotInstance The Walkontable instance.\n   */\n  function TopOverlay(wotInstance) {\n    var _this;\n\n    _classCallCheck(this, TopOverlay);\n\n    _this = _super.call(this, wotInstance);\n\n    _defineProperty(_assertThisInitialized(_this), \"cachedFixedRowsTop\", -1);\n\n    _this.clone = _this.makeClone(CLONE_TOP);\n    _this.cachedFixedRowsTop = _this.wot.getSetting('fixedRowsTop');\n    return _this;\n  }\n  /**\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\n   *\n   * @see Table#constructor\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\n   * @returns {Table}\n   */\n\n\n  _createClass(TopOverlay, [{\n    key: \"createTable\",\n    value: function createTable() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _construct(TopOverlayTable, args);\n    }\n    /**\n     * Checks if overlay should be fully rendered.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"shouldBeRendered\",\n    value: function shouldBeRendered() {\n      return this.wot.getSetting('shouldRenderTopOverlay');\n    }\n    /**\n     * Updates the top overlay position.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"resetFixedPosition\",\n    value: function resetFixedPosition() {\n      if (!this.needFullRender || !this.wot.wtTable.holder.parentNode) {\n        // removed from DOM\n        return;\n      }\n\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n      var headerPosition = 0;\n      var skipInnerBorderAdjusting = false;\n\n      if (this.trimmingContainer === this.wot.rootWindow && (!preventOverflow || preventOverflow !== 'vertical')) {\n        var wtTable = this.wot.wtTable;\n        var hiderRect = wtTable.hider.getBoundingClientRect();\n        var top = Math.ceil(hiderRect.top);\n        var bottom = Math.ceil(hiderRect.bottom);\n        var rootHeight = overlayRoot.offsetHeight; // This checks if the overlay is going to an infinite loop caused by added (or removed)\n        // `innerBorderTop` class name. Toggling the class name shifts the viewport by 1px and\n        // triggers the `scroll` event. It causes the table to render. The new render cycle takes into,\n        // account the shift and toggles the class name again. This causes the next loops. This\n        // happens only on Chrome (#7256).\n        //\n        // When we detect that the table bottom position is the same as the overlay bottom,\n        // do not toggle the class name.\n        //\n        // This workaround will be able to be cleared after merging the SVG borders, which introduces\n        // frozen lines (no more `innerBorderTop` workaround).\n\n        skipInnerBorderAdjusting = bottom === rootHeight;\n        var finalLeft;\n        var finalTop;\n        finalLeft = wtTable.hider.style.left;\n        finalLeft = finalLeft === '' ? 0 : finalLeft;\n\n        if (top < 0 && bottom - rootHeight > 0) {\n          finalTop = -top;\n        } else {\n          finalTop = 0;\n        }\n\n        headerPosition = finalTop;\n        finalTop += 'px';\n        setOverlayPosition(overlayRoot, finalLeft, finalTop);\n      } else {\n        headerPosition = this.getScrollPosition();\n        resetCssTransform(overlayRoot);\n      }\n\n      var positionChanged = this.adjustHeaderBordersPosition(headerPosition, skipInnerBorderAdjusting);\n      this.adjustElementsSize();\n      return positionChanged;\n    }\n    /**\n     * Sets the main overlay's vertical scroll position.\n     *\n     * @param {number} pos The scroll position.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"setScrollPosition\",\n    value: function setScrollPosition(pos) {\n      var rootWindow = this.wot.rootWindow;\n      var result = false;\n\n      if (this.mainTableScrollableElement === rootWindow && rootWindow.scrollY !== pos) {\n        rootWindow.scrollTo(getWindowScrollLeft(rootWindow), pos);\n        result = true;\n      } else if (this.mainTableScrollableElement.scrollTop !== pos) {\n        this.mainTableScrollableElement.scrollTop = pos;\n        result = true;\n      }\n\n      return result;\n    }\n    /**\n     * Triggers onScroll hook callback.\n     */\n\n  }, {\n    key: \"onScroll\",\n    value: function onScroll() {\n      this.wot.getSetting('onScrollHorizontally');\n    }\n    /**\n     * Calculates total sum cells height.\n     *\n     * @param {number} from Row index which calculates started from.\n     * @param {number} to Row index where calculation is finished.\n     * @returns {number} Height sum.\n     */\n\n  }, {\n    key: \"sumCellSizes\",\n    value: function sumCellSizes(from, to) {\n      var defaultRowHeight = this.wot.wtSettings.settings.defaultRowHeight;\n      var row = from;\n      var sum = 0;\n\n      while (row < to) {\n        var height = this.wot.wtTable.getRowHeight(row);\n        sum += height === void 0 ? defaultRowHeight : height;\n        row += 1;\n      }\n\n      return sum;\n    }\n    /**\n     * Adjust overlay root element, childs and master table element sizes (width, height).\n     *\n     * @param {boolean} [force=false] When `true`, it adjusts the DOM nodes sizes for that overlay.\n     */\n\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.updateTrimmingContainer();\n\n      if (this.needFullRender || force) {\n        this.adjustRootElementSize();\n        this.adjustRootChildrenSize();\n      }\n    }\n    /**\n     * Adjust overlay root element size (width and height).\n     */\n\n  }, {\n    key: \"adjustRootElementSize\",\n    value: function adjustRootElementSize() {\n      var _this$wot = this.wot,\n          wtTable = _this$wot.wtTable,\n          rootDocument = _this$wot.rootDocument,\n          rootWindow = _this$wot.rootWindow;\n      var scrollbarWidth = getScrollbarWidth(rootDocument);\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var overlayRootStyle = overlayRoot.style;\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n\n      if (this.trimmingContainer !== rootWindow || preventOverflow === 'horizontal') {\n        var width = this.wot.wtViewport.getWorkspaceWidth();\n\n        if (this.wot.wtOverlays.hasScrollbarRight) {\n          width -= scrollbarWidth;\n        }\n\n        width = Math.min(width, wtTable.wtRootElement.scrollWidth);\n        overlayRootStyle.width = \"\".concat(width, \"px\");\n      } else {\n        overlayRootStyle.width = '';\n      }\n\n      this.clone.wtTable.holder.style.width = overlayRootStyle.width;\n      var tableHeight = outerHeight(this.clone.wtTable.TABLE);\n\n      if (!this.wot.wtTable.hasDefinedSize()) {\n        tableHeight = 0;\n      }\n\n      overlayRootStyle.height = \"\".concat(tableHeight, \"px\");\n    }\n    /**\n     * Adjust overlay root childs size.\n     */\n\n  }, {\n    key: \"adjustRootChildrenSize\",\n    value: function adjustRootChildrenSize() {\n      var _selections$getCell$g;\n\n      var holder = this.clone.wtTable.holder;\n      var selections = this.wot.selections;\n      var selectionCornerOffset = Math.abs((_selections$getCell$g = selections === null || selections === void 0 ? void 0 : selections.getCell().getBorder(this.wot).cornerCenterPointOffset) !== null && _selections$getCell$g !== void 0 ? _selections$getCell$g : 0);\n      this.clone.wtTable.hider.style.width = this.hider.style.width;\n      holder.style.width = holder.parentNode.style.width; // Add selection corner protruding part to the holder total height to make sure that\n      // borders' corner won't be cut after vertical scroll (#6937).\n\n      holder.style.height = \"\".concat(parseInt(holder.parentNode.style.height, 10) + selectionCornerOffset, \"px\");\n    }\n    /**\n     * Adjust the overlay dimensions and position.\n     */\n\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      var total = this.wot.getSetting('totalRows');\n\n      if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\n        this.spreader.style.top = \"\".concat(this.wot.wtViewport.rowsRenderCalculator.startPosition, \"px\");\n      } else if (total === 0) {\n        // can happen if there are 0 rows\n        this.spreader.style.top = '0';\n      } else {\n        throw new Error('Incorrect value of the rowsRenderCalculator');\n      }\n\n      this.spreader.style.bottom = '';\n\n      if (this.needFullRender) {\n        this.syncOverlayOffset();\n      }\n    }\n    /**\n     * Synchronize calculated left position to an element.\n     */\n\n  }, {\n    key: \"syncOverlayOffset\",\n    value: function syncOverlayOffset() {\n      if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\n        this.clone.wtTable.spreader.style.left = \"\".concat(this.wot.wtViewport.columnsRenderCalculator.startPosition, \"px\");\n      } else {\n        this.clone.wtTable.spreader.style.left = '';\n      }\n    }\n    /**\n     * Scrolls vertically to a row.\n     *\n     * @param {number} sourceRow Row index which you want to scroll to.\n     * @param {boolean} [bottomEdge] If `true`, scrolls according to the bottom edge (top edge is by default).\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(sourceRow, bottomEdge) {\n      var wot = this.wot;\n      var sourceInstance = wot.cloneSource ? wot.cloneSource : wot;\n      var mainHolder = sourceInstance.wtTable.holder;\n      var newY = this.getTableParentOffset();\n      var scrollbarCompensation = 0;\n\n      if (bottomEdge && mainHolder.offsetHeight !== mainHolder.clientHeight) {\n        scrollbarCompensation = getScrollbarWidth(wot.rootDocument);\n      }\n\n      if (bottomEdge) {\n        var fixedRowsBottom = wot.getSetting('fixedRowsBottom');\n        var totalRows = wot.getSetting('totalRows');\n        newY += this.sumCellSizes(0, sourceRow + 1);\n        newY -= wot.wtViewport.getViewportHeight() - this.sumCellSizes(totalRows - fixedRowsBottom, totalRows); // Fix 1 pixel offset when cell is selected\n\n        newY += 1;\n      } else {\n        newY += this.sumCellSizes(wot.getSetting('fixedRowsTop'), sourceRow);\n      }\n\n      newY += scrollbarCompensation;\n      return this.setScrollPosition(newY);\n    }\n    /**\n     * Gets table parent top position.\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getTableParentOffset\",\n    value: function getTableParentOffset() {\n      if (this.mainTableScrollableElement === this.wot.rootWindow) {\n        return this.wot.wtTable.holderOffset.top;\n      }\n\n      return 0;\n    }\n    /**\n     * Gets the main overlay's vertical scroll position.\n     *\n     * @returns {number} Main table's vertical scroll position.\n     */\n\n  }, {\n    key: \"getScrollPosition\",\n    value: function getScrollPosition() {\n      return getScrollTop(this.mainTableScrollableElement, this.wot.rootWindow);\n    }\n    /**\n     * Adds css classes to hide the header border's header (cell-selection border hiding issue).\n     *\n     * @param {number} position Header Y position if trimming container is window or scroll top if not.\n     * @param {boolean} [skipInnerBorderAdjusting=false] If `true` the inner border adjusting will be skipped.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"adjustHeaderBordersPosition\",\n    value: function adjustHeaderBordersPosition(position) {\n      var skipInnerBorderAdjusting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var masterParent = this.wot.wtTable.holder.parentNode;\n      var totalColumns = this.wot.getSetting('totalColumns');\n\n      if (totalColumns) {\n        removeClass(masterParent, 'emptyColumns');\n      } else {\n        addClass(masterParent, 'emptyColumns');\n      }\n\n      var positionChanged = false;\n\n      if (!skipInnerBorderAdjusting) {\n        var fixedRowsTop = this.wot.getSetting('fixedRowsTop');\n        var areFixedRowsTopChanged = this.cachedFixedRowsTop !== fixedRowsTop;\n        var columnHeaders = this.wot.getSetting('columnHeaders');\n\n        if ((areFixedRowsTopChanged || fixedRowsTop === 0) && columnHeaders.length > 0) {\n          var previousState = hasClass(masterParent, 'innerBorderTop');\n          this.cachedFixedRowsTop = this.wot.getSetting('fixedRowsTop');\n\n          if (position || this.wot.getSetting('totalRows') === 0) {\n            addClass(masterParent, 'innerBorderTop');\n            positionChanged = !previousState;\n          } else {\n            removeClass(masterParent, 'innerBorderTop');\n            positionChanged = previousState;\n          }\n        }\n      } // nasty workaround for double border in the header, TODO: find a pure-css solution\n\n\n      if (this.wot.getSetting('rowHeaders').length === 0) {\n        var secondHeaderCell = this.clone.wtTable.THEAD.querySelectorAll('th:nth-of-type(2)');\n\n        if (secondHeaderCell) {\n          for (var i = 0; i < secondHeaderCell.length; i++) {\n            secondHeaderCell[i].style['border-left-width'] = 0;\n          }\n        }\n      }\n\n      return positionChanged;\n    }\n  }], [{\n    key: \"OVERLAY_NAME\",\n    get: function get() {\n      return CLONE_TOP;\n    }\n    /**\n     * Cached value which holds the previous value of the `fixedRowsTop` option.\n     * It is used as a comparison value that can be used to detect changes in this value.\n     *\n     * @type {number}\n     */\n\n  }]);\n\n  return TopOverlay;\n}(Overlay);"]},"metadata":{},"sourceType":"module"}