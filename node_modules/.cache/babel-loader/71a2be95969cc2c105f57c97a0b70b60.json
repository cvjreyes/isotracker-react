{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\csptrackerKeyParams\\\\csptrackerKeyParams.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CSPTrackerKeyParams extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      ratingData: [],\n      specData: [],\n      endPreparationData: [],\n      boltTypesData: [],\n      pidData: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker/ratings\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"id\": json.rows[i].id,\n          \"Name\": json.rows[i].rating\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        ratingData: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker/specs\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"id\": json.rows[i].id,\n          \"Name\": json.rows[i].spec\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        specData: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker/endPreparations\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"id\": json.rows[i].id,\n          \"Name\": json.rows[i].state\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        endPreparationData: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker/boltTypes\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"id\": json.rows[i].id,\n          \"Name\": json.rows[i].type\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        boltTypesData: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker/pids\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"id\": json.rows[i].id,\n          \"Name\": json.rows[i].pid\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        pidData: rows,\n        selectedRows: []\n      });\n    });\n  }\n\n  addRowRatings() {\n    let rows = this.state.ratingData;\n    rows.push({\n      \"Name\": \"\"\n    });\n    this.setState({\n      ratingData: rows\n    });\n  }\n\n  submitChangesRatings() {\n    const body = {\n      rows: this.state.ratingData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/csptracker/ratings\", options).then(response => response.json()).then(json => {});\n    this.props.success();\n  }\n\n  addRowSpecs() {\n    let rows = this.state.specData;\n    rows.push({\n      \"Name\": \"\"\n    });\n    this.setState({\n      specData: rows\n    });\n  }\n\n  submitChangesSpecs() {\n    const body = {\n      rows: this.state.specData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/csptracker/specs\", options).then(response => response.json()).then(json => {});\n    this.props.success();\n  }\n\n  addRowEndPreparations() {\n    let rows = this.state.endPreparationData;\n    rows.push({\n      \"Name\": \"\"\n    });\n    this.setState({\n      endPreparationData: rows\n    });\n  }\n\n  submitChangesEndPreparations() {\n    const body = {\n      rows: this.state.endPreparationData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/csptracker/endPreparations\", options).then(response => response.json()).then(json => {});\n    this.props.success();\n  }\n\n  addRowBoltTypes() {\n    let rows = this.state.boltTypesData;\n    rows.push({\n      \"Name\": \"\"\n    });\n    this.setState({\n      boltTypesData: rows\n    });\n  }\n\n  submitChangesBoltTypes() {\n    const body = {\n      rows: this.state.boltTypesData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/csptracker/boltTypes\", options).then(response => response.json()).then(json => {});\n    this.props.success();\n  }\n\n  addRowPids() {\n    let rows = this.state.pidData;\n    rows.push({\n      \"Name\": \"\"\n    });\n    this.setState({\n      pidData: rows\n    });\n  }\n\n  submitChangesPids() {\n    const body = {\n      rows: this.state.pidData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/csptracker/pids\", options).then(response => response.json()).then(json => {});\n    this.props.success();\n  }\n\n  render() {\n    const typesSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 200 //... other options\n\n    };\n    const stepsSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 200 //... other options\n\n    };\n    const progressSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 195 //... other options\n\n    };\n    const pidsSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 300 //... other options\n\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        float: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"150px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.ratingData,\n            colHeaders: [\"<b>RATINGS</b>\"],\n            rowHeaders: true,\n            width: \"250\",\n            height: \"470\",\n            settings: stepsSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Name\"\n            }],\n            filters: true,\n            dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowRatings(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#338DF1\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesRatings(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#7BD36D\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"170px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.specData,\n            colHeaders: [\"<b>SPECS</b>\"],\n            rowHeaders: true,\n            width: \"250\",\n            height: \"470\",\n            settings: typesSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Name\"\n            }],\n            filters: true,\n            dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowSpecs(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#338DF1\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesSpecs(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#7BD36D\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"100px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.endPreparationData,\n            colHeaders: [\"<b>END PREPARATIONS</b>\"],\n            rowHeaders: true,\n            width: \"250\",\n            height: \"470\",\n            settings: progressSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Name\"\n            }],\n            filters: true,\n            dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowEndPreparations(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#338DF1\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesEndPreparations(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#7BD36D\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"170px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.boltTypesData,\n            colHeaders: [\"<b>BOLT TYPES</b>\"],\n            rowHeaders: true,\n            width: \"250\",\n            height: \"470\",\n            settings: typesSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Name\"\n            }],\n            filters: true,\n            dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowBoltTypes(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#338DF1\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesBoltTypes(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#7BD36D\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"170px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.pidData,\n            colHeaders: [\"<b>PIDS</b>\"],\n            rowHeaders: true,\n            width: \"350\",\n            height: \"470\",\n            settings: pidsSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Name\"\n            }],\n            filters: true,\n            dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRow(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#338DF1\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChanges(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\",\n                width: \"60px\",\n                borderRadius: \"10px\",\n                backgroundColor: \"#7BD36D\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CSPTrackerKeyParams;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/csptrackerKeyParams/csptrackerKeyParams.js"],"names":["React","HotTable","CSPTrackerKeyParams","Component","state","searchText","searchedColumn","ratingData","specData","endPreparationData","boltTypesData","pidData","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","row","i","length","id","rating","push","setState","spec","type","pid","addRowRatings","submitChangesRatings","body","JSON","stringify","success","addRowSpecs","submitChangesSpecs","addRowEndPreparations","submitChangesEndPreparations","addRowBoltTypes","submitChangesBoltTypes","addRowPids","submitChangesPids","render","typesSettings","licenseKey","colWidths","stepsSettings","progressSettings","pidsSettings","float","marginLeft","data","marginRight","fontSize","width","borderRadius","backgroundColor","addRow","submitChanges"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\n\r\nclass CSPTrackerKeyParams extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    ratingData: [],\r\n    specData: [],\r\n    endPreparationData: [],\r\n    boltTypesData: [],\r\n    pidData: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: []\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker/ratings\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      for(let i = 0; i < json.rows.length; i++){\r\n\r\n          row = {\"id\": json.rows[i].id,\"Name\": json.rows[i].rating}\r\n          rows.push(row)\r\n      }\r\n      this.setState({ratingData : rows, selectedRows: []});\r\n\r\n    }) \r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker/specs\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      for(let i = 0; i < json.rows.length; i++){\r\n\r\n          row = {\"id\": json.rows[i].id, \"Name\": json.rows[i].spec}\r\n          rows.push(row)\r\n      }\r\n      this.setState({specData : rows, selectedRows: []});\r\n\r\n    }) \r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker/endPreparations\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      for(let i = 0; i < json.rows.length; i++){\r\n\r\n          row = {\"id\": json.rows[i].id, \"Name\": json.rows[i].state}\r\n          rows.push(row)\r\n      }\r\n      this.setState({endPreparationData : rows, selectedRows: []});\r\n\r\n    })\r\n    \r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker/boltTypes\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      for(let i = 0; i < json.rows.length; i++){\r\n\r\n          row = {\"id\": json.rows[i].id, \"Name\": json.rows[i].type}\r\n          rows.push(row)\r\n      }\r\n      this.setState({boltTypesData : rows, selectedRows: []});\r\n\r\n    }) \r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker/pids\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      for(let i = 0; i < json.rows.length; i++){\r\n\r\n          row = {\"id\": json.rows[i].id, \"Name\": json.rows[i].pid}\r\n          rows.push(row)\r\n      }\r\n      this.setState({pidData : rows, selectedRows: []});  \r\n\r\n    }) \r\n  }\r\n\r\n  addRowRatings(){\r\n    let rows = this.state.ratingData\r\n    rows.push({\"Name\":\"\"})\r\n    this.setState({ratingData: rows})\r\n  }\r\n  \r\n  submitChangesRatings(){\r\n    const body = {\r\n      rows: this.state.ratingData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/csptracker/ratings\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n        \r\n    })\r\n    this.props.success()\r\n  }\r\n\r\n  addRowSpecs(){\r\n    let rows = this.state.specData\r\n    rows.push({\"Name\": \"\"})\r\n    this.setState({specData: rows})\r\n  }\r\n\r\n  submitChangesSpecs(){\r\n    const body = {\r\n      rows: this.state.specData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/csptracker/specs\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n\r\n    })\r\n    this.props.success()\r\n  }\r\n\r\n  addRowEndPreparations(){\r\n    let rows = this.state.endPreparationData\r\n    rows.push({\"Name\": \"\"})\r\n    this.setState({endPreparationData: rows})\r\n  }\r\n\r\n  submitChangesEndPreparations(){\r\n    const body = {\r\n      rows: this.state.endPreparationData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/csptracker/endPreparations\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n\r\n    })\r\n    this.props.success()\r\n  }\r\n\r\n  addRowBoltTypes(){\r\n    let rows = this.state.boltTypesData\r\n    rows.push({\"Name\": \"\"})\r\n    this.setState({boltTypesData: rows})\r\n  }\r\n\r\n  submitChangesBoltTypes(){\r\n    const body = {\r\n      rows: this.state.boltTypesData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/csptracker/boltTypes\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n\r\n    })\r\n    this.props.success()\r\n  }\r\n\r\n  addRowPids(){\r\n    let rows = this.state.pidData\r\n    rows.push({\"Name\": \"\"})\r\n    this.setState({pidData: rows})\r\n  }\r\n\r\n  submitChangesPids(){\r\n    const body = {\r\n      rows: this.state.pidData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/csptracker/pids\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n\r\n    })\r\n    this.props.success()\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n\r\n    const typesSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 200,\r\n        //... other options\r\n      }\r\n  \r\n      const stepsSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 200,\r\n        //... other options\r\n      }\r\n  \r\n      const progressSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 195,\r\n        //... other options\r\n      }\r\n\r\n      const pidsSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 300,\r\n        //... other options\r\n      }\r\n\r\n      return (\r\n        <div className=\"row\" style={{float:\"left\"}}>\r\n           <div className=\"column\" style={{marginLeft:\"150px\"}}>\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.ratingData}\r\n                colHeaders = {[\"<b>RATINGS</b>\"]}\r\n                rowHeaders={true}\r\n                width=\"250\"\r\n                height=\"470\"\r\n                settings={stepsSettings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Name\"}]}\r\n                filters={true}\r\n                dropdownMenu= {[\r\n                    'make_read_only',\r\n                    '---------',\r\n                    'alignment',\r\n                    '---------',\r\n                    'filter_by_condition',\r\n                    '---------',\r\n                    'filter_operators',\r\n                    '---------',\r\n                    'filter_by_condition2',\r\n                    '---------',\r\n                    'filter_by_value',\r\n                    '---------',\r\n                    'filter_action_bar',\r\n                  ]}\r\n              />\r\n              <br></br>\r\n              <center>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowRatings()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesRatings()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#7BD36D\"}}>Save</button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n          <div className=\"column\" style={{marginLeft:\"170px\"}}>\r\n\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.specData}\r\n                colHeaders = {[\"<b>SPECS</b>\"]}\r\n                rowHeaders={true}\r\n                width=\"250\"\r\n                height=\"470\"\r\n                settings={typesSettings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Name\"}]}\r\n                filters={true}\r\n                dropdownMenu= {[\r\n                    'make_read_only',\r\n                    '---------',\r\n                    'alignment',\r\n                    '---------',\r\n                    'filter_by_condition',\r\n                    '---------',\r\n                    'filter_operators',\r\n                    '---------',\r\n                    'filter_by_condition2',\r\n                    '---------',\r\n                    'filter_by_value',\r\n                    '---------',\r\n                    'filter_action_bar',\r\n                  ]}\r\n              />\r\n              <br></br>\r\n              <center>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowSpecs()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesSpecs()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#7BD36D\"}}>Save</button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n         \r\n          <div className=\"column\" style={{marginLeft:\"100px\"}}>\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.endPreparationData}\r\n                colHeaders = {[\"<b>END PREPARATIONS</b>\"]}\r\n                rowHeaders={true}\r\n                width=\"250\"\r\n                height=\"470\"\r\n                settings={progressSettings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Name\"}]}\r\n                filters={true}\r\n                dropdownMenu= {[\r\n                    'make_read_only',\r\n                    '---------',\r\n                    'alignment',\r\n                    '---------',\r\n                    'filter_by_condition',\r\n                    '---------',\r\n                    'filter_operators',\r\n                    '---------',\r\n                    'filter_by_condition2',\r\n                    '---------',\r\n                    'filter_by_value',\r\n                    '---------',\r\n                    'filter_action_bar',\r\n                  ]}\r\n              />\r\n              <br></br>\r\n              <center>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowEndPreparations()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesEndPreparations()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#7BD36D\"}}>Save</button>\r\n              </center>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n          <div className=\"column\" style={{marginLeft:\"170px\"}}>\r\n\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.boltTypesData}\r\n                colHeaders = {[\"<b>BOLT TYPES</b>\"]}\r\n                rowHeaders={true}\r\n                width=\"250\"\r\n                height=\"470\"\r\n                settings={typesSettings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Name\"}]}\r\n                filters={true}\r\n                dropdownMenu= {[\r\n                    'make_read_only',\r\n                    '---------',\r\n                    'alignment',\r\n                    '---------',\r\n                    'filter_by_condition',\r\n                    '---------',\r\n                    'filter_operators',\r\n                    '---------',\r\n                    'filter_by_condition2',\r\n                    '---------',\r\n                    'filter_by_value',\r\n                    '---------',\r\n                    'filter_action_bar',\r\n                  ]}\r\n              />\r\n              <br></br>\r\n              <center>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowBoltTypes()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesBoltTypes()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#7BD36D\"}}>Save</button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n          <div className=\"column\" style={{marginLeft:\"170px\"}}>\r\n\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.pidData}\r\n                colHeaders = {[\"<b>PIDS</b>\"]}\r\n                rowHeaders={true}\r\n                width=\"350\"\r\n                height=\"470\"\r\n                settings={pidsSettings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Name\"}]}\r\n                filters={true}\r\n                dropdownMenu= {[\r\n                    'make_read_only',\r\n                    '---------',\r\n                    'alignment',\r\n                    '---------',\r\n                    'filter_by_condition',\r\n                    '---------',\r\n                    'filter_operators',\r\n                    '---------',\r\n                    'filter_by_condition2',\r\n                    '---------',\r\n                    'filter_by_value',\r\n                    '---------',\r\n                    'filter_action_bar',\r\n                  ]}\r\n              />\r\n              <br></br>\r\n              <center>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRow()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChanges()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#7BD36D\"}}>Save</button>\r\n              </center>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default CSPTrackerKeyParams;"]},"metadata":{},"sourceType":"module"}