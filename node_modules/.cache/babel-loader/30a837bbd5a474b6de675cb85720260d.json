{"ast":null,"code":"var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n/**\r\n * Creates a function like `_.lowerFirst`.\r\n *\r\n * @private\r\n * @param {string} methodName The name of the `String` case method to use.\r\n * @returns {Function} Returns the new case function.\r\n */\n\n\nfunction createCaseFirst(methodName) {\n  return function (string) {\n    string = toString(string);\n    var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;\n    var chr = strSymbols ? strSymbols[0] : string.charAt(0);\n    var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/lodash/_createCaseFirst.js"],"names":["castSlice","require","hasUnicode","stringToArray","toString","createCaseFirst","methodName","string","strSymbols","undefined","chr","charAt","trailing","join","slice","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAAA,IACIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CADxB;AAAA,IAEIE,aAAa,GAAGF,OAAO,CAAC,kBAAD,CAF3B;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAHtB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,eAAT,CAAyBC,UAAzB,EAAqC;AACnC,SAAO,UAASC,MAAT,EAAiB;AACtBA,IAAAA,MAAM,GAAGH,QAAQ,CAACG,MAAD,CAAjB;AAEA,QAAIC,UAAU,GAAGN,UAAU,CAACK,MAAD,CAAV,GACbJ,aAAa,CAACI,MAAD,CADA,GAEbE,SAFJ;AAIA,QAAIC,GAAG,GAAGF,UAAU,GAChBA,UAAU,CAAC,CAAD,CADM,GAEhBD,MAAM,CAACI,MAAP,CAAc,CAAd,CAFJ;AAIA,QAAIC,QAAQ,GAAGJ,UAAU,GACrBR,SAAS,CAACQ,UAAD,EAAa,CAAb,CAAT,CAAyBK,IAAzB,CAA8B,EAA9B,CADqB,GAErBN,MAAM,CAACO,KAAP,CAAa,CAAb,CAFJ;AAIA,WAAOJ,GAAG,CAACJ,UAAD,CAAH,KAAoBM,QAA3B;AACD,GAhBD;AAiBD;;AAEDG,MAAM,CAACC,OAAP,GAAiBX,eAAjB","sourcesContent":["var castSlice = require('./_castSlice'),\r\n    hasUnicode = require('./_hasUnicode'),\r\n    stringToArray = require('./_stringToArray'),\r\n    toString = require('./toString');\r\n\r\n/**\r\n * Creates a function like `_.lowerFirst`.\r\n *\r\n * @private\r\n * @param {string} methodName The name of the `String` case method to use.\r\n * @returns {Function} Returns the new case function.\r\n */\r\nfunction createCaseFirst(methodName) {\r\n  return function(string) {\r\n    string = toString(string);\r\n\r\n    var strSymbols = hasUnicode(string)\r\n      ? stringToArray(string)\r\n      : undefined;\r\n\r\n    var chr = strSymbols\r\n      ? strSymbols[0]\r\n      : string.charAt(0);\r\n\r\n    var trailing = strSymbols\r\n      ? castSlice(strSymbols, 1).join('')\r\n      : string.slice(1);\r\n\r\n    return chr[methodName]() + trailing;\r\n  };\r\n}\r\n\r\nmodule.exports = createCaseFirst;\r\n"]},"metadata":{},"sourceType":"script"}