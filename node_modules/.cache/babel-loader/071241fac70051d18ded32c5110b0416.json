{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\revisionPopUp\\\\revisionPopUp.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-awesome-modal';\nimport Request from \"../../assets/images/hand_requests.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\nexport default class RevisionPopUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      issuer_date: null,\n      issuer_designation: null,\n      issuer_draw: null,\n      issuer_check: null,\n      issuer_appr: null\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/pids\", options).then(response => response.json()).then(async json => {\n      let pids = [];\n      let pidsArray = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        pids.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: json.rows[i].pid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 27\n        }, this));\n        pidsArray.push(json.rows[i].pid);\n      }\n\n      await this.setState({\n        pidlist: pids\n      });\n      await this.setState({\n        pidsArray: pidsArray\n      });\n    });\n  }\n\n  async openModal() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/revision/\" + this.props.fileName, options).then(response => response.json()).then(async json => {\n      console.log(json);\n    });\n    await this.setState({\n      visible: true\n    });\n  }\n\n  async closeModal() {\n    await this.setState({\n      visible: false,\n      tag: null,\n      pid: null,\n      sptag: null\n    });\n    this.refs.tag.value = null;\n    this.refs.pids.value = null;\n    this.refs.sptag.value = null;\n  }\n\n  async request() {\n    if (this.state.tag && this.state.pid && this.state.sptag && this.state.pidsArray.indexOf(this.state.pid) > -1) {\n      const body = {\n        tag: this.state.tag,\n        pid: this.state.pid,\n        sptag: this.state.sptag,\n        user: secureStorage.getItem(\"user\")\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/requestSP\", options).then(response => response.json()).then(json => {\n        if (json.success) {\n          this.props.successRequest();\n        } else {\n          this.props.existsErrorRequest();\n        }\n      });\n      this.closeModal();\n    } else if (this.state.pidsArray.indexOf(this.state.pid) < 0) {\n      this.props.errorPidRequest();\n    } else {\n      this.props.errorBlankRequest();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: \"5px\",\n        marginLeft: \"5px\",\n        float: \"right\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"RE\",\n        className: \"btn btn-warning\",\n        style: {\n          fontSize: \"12px\",\n          padding: \"2px 5px 2px 5px\",\n          backgroundColor: \"#B0E0E6\",\n          borderColor: \"#B0E0E6\",\n          width: \"100px\",\n          float: \"left\",\n          marginRight: \"5px\",\n          marginTop: \"3px\"\n        },\n        onClick: () => this.openModal()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          visible: this.state.visible,\n          width: \"450\",\n          height: \"320\",\n          effect: \"fadeInUp\",\n          onClickAway: () => this.closeModal(),\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            className: \"popUp__title\",\n            style: {\n              marginBottom: \"30px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Revision parameters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 89\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"LINE ID\",\n              id: \"tag\",\n              className: \"popUp__input__text\",\n              ref: \"tag\",\n              style: {\n                marginBottom: \"20px\",\n                color: 'black'\n              },\n              value: this.state.tag,\n              onChange: e => this.setState({\n                tag: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              list: \"pids\",\n              name: \"pids\",\n              className: \"popUp__input__text\",\n              placeholder: \"P&ID\",\n              ref: \"pids\",\n              style: {\n                marginBottom: \"20px\",\n                color: \"black\"\n              },\n              onChange: e => this.setState({\n                pid: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"pids\",\n              children: this.state.pidlist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"DESCRIPTION\",\n              id: \"sptag\",\n              className: \"popUp__input__text\",\n              ref: \"sptag\",\n              style: {\n                marginBottom: \"30px\",\n                color: \"black\"\n              },\n              value: this.state.sptag,\n              onChange: e => this.setState({\n                sptag: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.request(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-danger\",\n              onClick: () => this.closeModal(),\n              style: {\n                marginLeft: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/revisionPopUp/revisionPopUp.js"],"names":["React","Component","Modal","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","RevisionPopUp","constructor","props","state","visible","issuer_date","issuer_designation","issuer_draw","issuer_check","issuer_appr","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","pids","pidsArray","i","rows","length","push","pid","setState","pidlist","openModal","fileName","console","log","closeModal","tag","sptag","refs","value","request","indexOf","body","user","getItem","JSON","stringify","success","successRequest","existsErrorRequest","errorPidRequest","errorBlankRequest","render","marginRight","marginLeft","float","fontSize","padding","backgroundColor","borderColor","width","marginTop","marginBottom","color","e","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport Request from \"../../assets/images/hand_requests.svg\";\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nexport default class RevisionPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false,\r\n            issuer_date: null,\r\n            issuer_designation: null,\r\n            issuer_draw: null,\r\n            issuer_check: null,\r\n            issuer_appr: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/pids\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            let pids = []\r\n            let pidsArray = []\r\n            for(let i = 0; i < json.rows.length; i++){\r\n                pids.push(<option value={json.rows[i].pid}/>)\r\n                pidsArray.push(json.rows[i].pid)\r\n            }\r\n            await this.setState({pidlist: pids})\r\n            await this.setState({pidsArray: pidsArray})\r\n        }) \r\n        \r\n    \r\n    }\r\n\r\n    async openModal() {\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/revision/\"+this.props.fileName, options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            console.log(json)\r\n        }) \r\n\r\n        await this.setState({\r\n            visible : true,\r\n        });\r\n    }\r\n\r\n    async closeModal() {\r\n        await this.setState({\r\n            visible : false,\r\n            tag: null,\r\n            pid: null,\r\n            sptag: null\r\n        });\r\n\r\n        this.refs.tag.value = null;\r\n        this.refs.pids.value = null;\r\n        this.refs.sptag.value = null;\r\n\r\n    }\r\n\r\n    async request(){\r\n        \r\n        if(this.state.tag && this.state.pid && this.state.sptag && this.state.pidsArray.indexOf(this.state.pid) > -1){\r\n            const body ={\r\n                tag : this.state.tag,\r\n                pid: this.state.pid,\r\n                sptag: this.state.sptag,\r\n                user: secureStorage.getItem(\"user\")\r\n              }\r\n              const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n              await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/requestSP\", options)\r\n                  .then(response => response.json())\r\n                  .then(json => {\r\n                      if(json.success){\r\n                          this.props.successRequest()\r\n                      }else{\r\n                          this.props.existsErrorRequest()\r\n                      }\r\n                  })\r\n                  this.closeModal()\r\n        }else if(this.state.pidsArray.indexOf(this.state.pid) < 0){\r\n            this.props.errorPidRequest()\r\n        }else{\r\n            this.props.errorBlankRequest()\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render() {       \r\n\r\n        return (\r\n            <div style={{marginRight:\"5px\", marginLeft:\"5px\", float:\"right\"}}>\r\n                <input type=\"button\"  value=\"RE\" className=\"btn btn-warning\"  style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", backgroundColor:\"#B0E0E6\", borderColor:\"#B0E0E6\", width:\"100px\", float:\"left\", marginRight: \"5px\", marginTop:\"3px\"}} onClick={() => this.openModal()} />\r\n                <div>\r\n                    <Modal visible={this.state.visible} width=\"450\" height=\"320\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                        <center className=\"popUp__title\" style={{marginBottom: \"30px\"}}><h3>Revision parameters</h3></center>\r\n                        <div className=\"request__container\">\r\n                            <input type=\"text\" placeholder=\"LINE ID\" id=\"tag\" className=\"popUp__input__text\" ref=\"tag\" style={{marginBottom: \"20px\", color:'black'}} value={this.state.tag} onChange={(e) => this.setState({tag: e.target.value})} ></input>\r\n\r\n                            <input list=\"pids\" name=\"pids\" className=\"popUp__input__text\" placeholder=\"P&ID\" ref=\"pids\" style={{marginBottom:\"20px\", color:\"black\"}} onChange={(e) => this.setState({pid: e.target.value})}/>\r\n                            <datalist id=\"pids\">\r\n                            {this.state.pidlist}\r\n                            </datalist>\r\n\r\n                            <input type=\"text\" placeholder=\"DESCRIPTION\" id=\"sptag\"className=\"popUp__input__text\" ref=\"sptag\" style={{marginBottom: \"30px\", color:\"black\"}} value={this.state.sptag} onChange={(e) => this.setState({sptag: e.target.value})} ></input>\r\n                            <button class=\"btn btn-sm btn-success\" onClick={() => this.request()} style={{marginRight:\"5px\", fontSize:\"16px\"}}>Submit</button>\r\n                            <button class=\"btn btn-sm btn-danger\" onClick={() => this.closeModal()} style={{marginLeft:\"5px\", fontSize:\"16px\"}}>Cancel</button>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}