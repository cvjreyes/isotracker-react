{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\revisionPopUp\\\\revisionPopUp.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-awesome-modal';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RevisionPopUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      issuer_date: null,\n      issuer_designation: null,\n      issuer_draw: null,\n      issuer_check: null,\n      issuer_appr: null,\n      revision: null,\n      dateText: null\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/revision/\" + this.props.fileName, options).then(response => response.json()).then(async json => {\n      await this.setState({\n        revision: json.rows.revision,\n        issuer_date: json.rows.issuer_date,\n        issuer_designation: json.rows.issuer_designation,\n        issuer_draw: json.rows.issuer_draw,\n        issuer_check: json.rows.issuer_check,\n        issuer_appr: json.rows.issuer_appr\n      });\n      let d = null;\n\n      if (this.state.issuer_date) {\n        d = this.state.issuer_date;\n        let date = new Date(d);\n        d = date.toISOString().substr(0, 10);\n        await this.setState({\n          dateText: d\n        });\n      }\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps.issuer_appr !== this.props.issuer_appr || prevProps.issuer_date !== this.props.issuer_date || prevProps.issuer_designation !== this.props.issuer_designation || prevProps.issuer_draw !== this.props.issuer_draw || prevProps.issuer_check !== this.props.issuer_check) {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/revision/\" + this.props.fileName, options).then(response => response.json()).then(async json => {\n        await this.setState({\n          revision: json.rows.revision,\n          issuer_date: json.issuer_date,\n          issuer_designation: json.issuer_designation,\n          issuer_draw: json.issuer_draw,\n          issuer_check: json.issuer_check,\n          issuer_appr: json.issuer_appr\n        });\n        let d = null;\n\n        if (this.state.issuer_date) {\n          d = this.state.issuer_date;\n          let date = new Date(d);\n          d = date.toISOString().substr(0, 10);\n          await this.setState({\n            dateText: d\n          });\n        }\n      });\n    }\n  }\n\n  async openModal() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/revision/\" + this.props.fileName, options).then(response => response.json()).then(async json => {\n      await this.setState({\n        revision: json.rows.revision,\n        issuer_date: json.rows.issuer_date,\n        issuer_designation: json.rows.issuer_designation,\n        issuer_draw: json.rows.issuer_draw,\n        issuer_check: json.rows.issuer_check,\n        issuer_appr: json.rows.issuer_appr\n      });\n      let d = null;\n\n      if (this.state.issuer_date) {\n        d = this.state.issuer_date;\n        let date = new Date(d);\n        d = date.toISOString().substr(0, 10);\n        console.log(date, d);\n        await this.setState({\n          dateText: d\n        });\n      }\n    });\n    await this.setState({\n      visible: true\n    });\n  }\n\n  async closeModal() {\n    await this.setState({\n      visible: false\n    });\n  }\n\n  async request() {\n    const body = {\n      fileName: this.props.fileName,\n      issuer_date: this.state.issuer_date,\n      issuer_designation: this.state.issuer_designation,\n      issuer_draw: this.state.issuer_draw,\n      issuer_check: this.state.issuer_check,\n      issuer_appr: this.state.issuer_appr\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitRevision\", options).then(response => response.json()).then(json => {\n      if (json.success) {\n        this.props.successRequest();\n      }\n    });\n    this.closeModal();\n  }\n\n  async handleDateChange(event) {\n    let d = event.target.value;\n    this.setState({\n      issuer_date: d\n    });\n  }\n\n  render() {\n    let button = null;\n    let datafield;\n\n    if (this.state.issuer_date && this.state.issuer_designation && this.state.issuer_draw && this.state.issuer_check && this.state.issuer_appr) {\n      button = /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"REV\",\n        className: \"btn btn-success\",\n        style: {\n          fontSize: \"12px\",\n          padding: \"2px 5px 2px 5px\",\n          borderColor: \"#B0E0E6\",\n          width: \"40px\",\n          float: \"left\",\n          marginRight: \"5px\",\n          marginTop: \"3px\"\n        },\n        onClick: () => this.openModal()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 22\n      }, this);\n      let d = this.state.issuer_date;\n      let date = new Date(d);\n      d = date.toISOString().substr(0, 10);\n      datafield = /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: this.handleDateChange,\n        id: \"date\",\n        type: \"date\",\n        defaultValue: d,\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }, this);\n    } else {\n      datafield = /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: this.handleDateChange,\n        id: \"date\",\n        type: \"date\",\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }, this);\n      button = /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"REV\",\n        className: \"btn btn-danger\",\n        style: {\n          fontSize: \"12px\",\n          padding: \"2px 5px 2px 5px\",\n          borderColor: \"#B0E0E6\",\n          width: \"40px\",\n          float: \"left\",\n          marginRight: \"5px\",\n          marginTop: \"3px\"\n        },\n        onClick: () => this.openModal()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 22\n      }, this);\n    }\n\n    let def_designation, def_draw, def_check, def_aprr;\n\n    if (this.state.issuer_designation) {\n      def_designation = this.state.issuer_designation;\n    } else {\n      def_designation = \"IFC\";\n      this.setState({\n        issuer_designation: \"IFC\"\n      });\n    }\n\n    if (this.state.issuer_draw) {\n      def_draw = this.state.issuer_draw;\n    } else {\n      def_draw = \"ARC\";\n      this.setState({\n        issuer_draw: \"ARC\"\n      });\n    }\n\n    if (this.state.issuer_check) {\n      def_check = this.state.issuer_check;\n    } else {\n      def_check = \"GMP\";\n      this.setState({\n        issuer_check: \"GMP\"\n      });\n    }\n\n    if (this.state.issuer_appr) {\n      def_aprr = this.state.issuer_appr;\n    } else {\n      def_aprr = \"MGR\";\n      this.setState({\n        issuer_appr: \"MGR\"\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: \"5px\",\n        float: \"right\"\n      },\n      children: [button, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          visible: this.state.visible,\n          width: \"650\",\n          height: \"420\",\n          effect: \"fadeInUp\",\n          onClickAway: () => this.closeModal(),\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            className: \"popUp__title\",\n            style: {\n              marginBottom: \"30px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [this.props.fileName.split('.').slice(0, -1), \" R\", this.state.revision, \"*\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 89\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"request__container\",\n            children: [datafield, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"issuer_designation\",\n                children: \"Designation: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Designation\",\n                id: \"issuer_designation\",\n                name: \"issuer_designation\",\n                className: \"popUp__input__text\",\n                ref: \"issuer_designation\",\n                style: {\n                  marginBottom: \"20px\",\n                  color: 'black'\n                },\n                defaultValue: def_designation,\n                onChange: e => this.setState({\n                  issuer_designation: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"issuer_designation\",\n                children: \"Draw: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Draw\",\n                id: \"issuer_draw\",\n                className: \"popUp__input__text\",\n                ref: \"issuer_draw\",\n                style: {\n                  marginBottom: \"20px\",\n                  color: 'black'\n                },\n                defaultValue: def_draw,\n                onChange: e => this.setState({\n                  issuer_draw: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"issuer_designation\",\n                children: \"Check: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Check\",\n                id: \"issuer_check\",\n                className: \"popUp__input__text\",\n                ref: \"issuer_check\",\n                style: {\n                  marginBottom: \"20px\",\n                  color: 'black'\n                },\n                defaultValue: def_check,\n                onChange: e => this.setState({\n                  issuer_check: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"issuer_designation\",\n                children: \"Approval: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Approval\",\n                id: \"issuer_appr\",\n                className: \"popUp__input__text\",\n                ref: \"issuer_appr\",\n                style: {\n                  marginBottom: \"20px\",\n                  color: 'black'\n                },\n                defaultValue: def_aprr,\n                onChange: e => this.setState({\n                  issuer_appr: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.request(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-danger\",\n              onClick: () => this.closeModal(),\n              style: {\n                marginLeft: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/revisionPopUp/revisionPopUp.js"],"names":["React","Component","Modal","TextField","RevisionPopUp","constructor","props","state","visible","issuer_date","issuer_designation","issuer_draw","issuer_check","issuer_appr","revision","dateText","handleDateChange","bind","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","fileName","then","response","json","setState","rows","d","date","Date","toISOString","substr","componentDidUpdate","prevProps","prevState","openModal","console","log","closeModal","request","body","JSON","stringify","success","successRequest","event","target","value","render","button","datafield","fontSize","padding","borderColor","width","float","marginRight","marginTop","shrink","def_designation","def_draw","def_check","def_aprr","marginBottom","split","slice","color","e","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default class RevisionPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false,\r\n            issuer_date: null,\r\n            issuer_designation: null,\r\n            issuer_draw: null,\r\n            issuer_check: null,\r\n            issuer_appr: null,\r\n            revision: null,\r\n            dateText: null\r\n        }\r\n\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        \r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/revision/\"+this.props.fileName, options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            await this.setState({\r\n                revision: json.rows.revision,\r\n                issuer_date: json.rows.issuer_date,\r\n                issuer_designation: json.rows.issuer_designation,\r\n                issuer_draw: json.rows.issuer_draw,\r\n                issuer_check: json.rows.issuer_check,\r\n                issuer_appr: json.rows.issuer_appr\r\n            })\r\n            let d = null\r\n            if(this.state.issuer_date){\r\n                d = this.state.issuer_date\r\n                let date = new Date(d) \r\n                d = date.toISOString().substr(0,10)\r\n                await this.setState({dateText: d})\r\n            }\r\n        }) \r\n    \r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.issuer_appr !== this.props.issuer_appr || prevProps.issuer_date !== this.props.issuer_date || prevProps.issuer_designation !== this.props.issuer_designation || prevProps.issuer_draw !== this.props.issuer_draw || prevProps.issuer_check !== this.props.issuer_check){\r\n            const options = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            }\r\n            \r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/revision/\"+this.props.fileName, options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                await this.setState({\r\n                    revision: json.rows.revision,\r\n                    issuer_date: json.issuer_date,\r\n                    issuer_designation: json.issuer_designation,\r\n                    issuer_draw: json.issuer_draw,\r\n                    issuer_check: json.issuer_check,\r\n                    issuer_appr: json.issuer_appr\r\n                })\r\n\r\n                let d = null\r\n                if(this.state.issuer_date){\r\n                    d = this.state.issuer_date\r\n                    let date = new Date(d) \r\n                    d = date.toISOString().substr(0,10)\r\n                    await this.setState({dateText: d})\r\n                }\r\n                }) \r\n        }\r\n    \r\n    }\r\n\r\n    async openModal() {\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/revision/\"+this.props.fileName, options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            await this.setState({\r\n                revision: json.rows.revision,\r\n                issuer_date: json.rows.issuer_date,\r\n                issuer_designation: json.rows.issuer_designation,\r\n                issuer_draw: json.rows.issuer_draw,\r\n                issuer_check: json.rows.issuer_check,\r\n                issuer_appr: json.rows.issuer_appr\r\n            })\r\n\r\n            let d = null\r\n            if(this.state.issuer_date){\r\n                d = this.state.issuer_date\r\n                let date = new Date(d) \r\n                d = date.toISOString().substr(0,10)\r\n                console.log(date, d)\r\n                await this.setState({dateText: d})\r\n            }\r\n        }) \r\n\r\n        await this.setState({\r\n            visible : true,\r\n        });\r\n    }\r\n\r\n    async closeModal() {\r\n        await this.setState({\r\n            visible : false,\r\n        });\r\n    }\r\n\r\n    async request(){  \r\n        \r\n        const body ={\r\n            fileName: this.props.fileName,\r\n            issuer_date: this.state.issuer_date,\r\n            issuer_designation: this.state.issuer_designation,\r\n            issuer_draw: this.state.issuer_draw,\r\n            issuer_check: this.state.issuer_check,\r\n            issuer_appr: this.state.issuer_appr\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitRevision\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if(json.success){\r\n                    this.props.successRequest()\r\n                }\r\n            })\r\n            this.closeModal()\r\n    \r\n    }\r\n\r\n     async handleDateChange (event) {\r\n        let d = event.target.value\r\n        this.setState({issuer_date: d})\r\n      }\r\n\r\n    render() {      \r\n        \r\n        let button = null\r\n        let datafield\r\n        if(this.state.issuer_date && this.state.issuer_designation && this.state.issuer_draw && this.state.issuer_check && this.state.issuer_appr){\r\n            \r\n            button = <input type=\"button\"  value=\"REV\" className=\"btn btn-success\"  style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", borderColor:\"#B0E0E6\", width:\"40px\", float:\"left\", marginRight: \"5px\", marginTop:\"3px\"}} onClick={() => this.openModal()} />\r\n            let d = this.state.issuer_date\r\n            let date = new Date(d) \r\n            d = date.toISOString().substr(0,10)           \r\n            \r\n            datafield = <TextField\r\n            onChange={this.handleDateChange}\r\n            id=\"date\"\r\n            type=\"date\"\r\n            defaultValue= {d}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        }else{\r\n            datafield = <TextField\r\n            onChange={this.handleDateChange}\r\n            id=\"date\"\r\n            type=\"date\"\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n            />\r\n            button = <input type=\"button\"  value=\"REV\" className=\"btn btn-danger\"  style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", borderColor:\"#B0E0E6\", width:\"40px\", float:\"left\", marginRight: \"5px\", marginTop:\"3px\"}} onClick={() => this.openModal()} />\r\n        }\r\n\r\n        let def_designation, def_draw, def_check, def_aprr\r\n        if(this.state.issuer_designation){\r\n            def_designation = this.state.issuer_designation\r\n        }else{\r\n            def_designation = \"IFC\"\r\n            this.setState({issuer_designation: \"IFC\"})\r\n        }\r\n\r\n        if(this.state.issuer_draw){\r\n            def_draw = this.state.issuer_draw\r\n        }else{\r\n            def_draw = \"ARC\"\r\n            this.setState({issuer_draw: \"ARC\"})\r\n        }\r\n\r\n        if(this.state.issuer_check){\r\n            def_check = this.state.issuer_check\r\n        }else{\r\n            def_check = \"GMP\"\r\n            this.setState({issuer_check: \"GMP\"})\r\n        }\r\n\r\n        if(this.state.issuer_appr){\r\n            def_aprr = this.state.issuer_appr\r\n        }else{\r\n            def_aprr = \"MGR\"\r\n            this.setState({issuer_appr: \"MGR\"})\r\n        }\r\n            \r\n        \r\n        return (\r\n            \r\n            <div style={{marginRight:\"5px\", float:\"right\"}}>\r\n                {button}\r\n                <div>\r\n                    <Modal visible={this.state.visible} width=\"650\" height=\"420\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                        <center className=\"popUp__title\" style={{marginBottom: \"30px\"}}><h3>{this.props.fileName.split('.').slice(0, -1)} R{this.state.revision}*</h3></center>\r\n                        <div className=\"request__container\">   \r\n                            {datafield}\r\n                            <div>\r\n                                <label for=\"issuer_designation\">Designation: </label>     \r\n                                <input type=\"text\" placeholder=\"Designation\" id=\"issuer_designation\" name=\"issuer_designation\" className=\"popUp__input__text\" ref=\"issuer_designation\" style={{marginBottom: \"20px\", color:'black'}} defaultValue={def_designation} onChange={(e) => this.setState({issuer_designation: e.target.value})} ></input>\r\n                            </div>\r\n                            <div>\r\n                                <label for=\"issuer_designation\">Draw: </label>    \r\n                                <input type=\"text\" placeholder=\"Draw\" id=\"issuer_draw\" className=\"popUp__input__text\" ref=\"issuer_draw\" style={{marginBottom: \"20px\", color:'black'}} defaultValue={def_draw} onChange={(e) => this.setState({issuer_draw: e.target.value})} ></input>\r\n                            </div>\r\n                            <div>\r\n                                <label for=\"issuer_designation\">Check: </label>    \r\n                                <input type=\"text\" placeholder=\"Check\" id=\"issuer_check\" className=\"popUp__input__text\" ref=\"issuer_check\" style={{marginBottom: \"20px\", color:'black'}} defaultValue={def_check} onChange={(e) => this.setState({issuer_check: e.target.value})} ></input>\r\n                            </div>\r\n                            <div>\r\n                                <label for=\"issuer_designation\">Approval: </label>    \r\n                                <input type=\"text\" placeholder=\"Approval\" id=\"issuer_appr\" className=\"popUp__input__text\" ref=\"issuer_appr\" style={{marginBottom: \"20px\", color:'black'}} defaultValue={def_aprr} onChange={(e) => this.setState({issuer_appr: e.target.value})} ></input>\r\n                            </div>\r\n                           <button class=\"btn btn-sm btn-success\" onClick={() => this.request()} style={{marginRight:\"5px\", fontSize:\"16px\"}}>Submit</button>\r\n                            <button class=\"btn btn-sm btn-danger\" onClick={() => this.closeModal()} style={{marginLeft:\"5px\", fontSize:\"16px\"}}>Cancel</button>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}