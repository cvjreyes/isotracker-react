{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\equipTypesDataTable\\\\equipTypesDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport \"./equipTypesDataTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\n\nclass EquipTypesDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      typesData: [],\n      stepsData: [],\n      progressData: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/equipments/types\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        let mod = 0;\n\n        if (json.rows[i].modelled) {\n          mod = json.rows[i].modelled;\n        }\n\n        if (i % 2 === 0) {\n          row = {\n            key: i,\n            code: json.rows[i].code,\n            name: json.rows[i].name,\n            weight: json.rows[i].weight,\n            color: \"#fff\"\n          };\n        } else {\n          row = {\n            key: i,\n            code: json.rows[i].code,\n            name: json.rows[i].name,\n            weight: json.rows[i].weight,\n            color: \"#eee\"\n          };\n        }\n\n        for (let j = 0; j < this.state.steps.length; j++) {\n          let currentStep = this.state.steps[j].toString();\n          row[currentStep] = json.rows[i][currentStep];\n        }\n\n        rows.push(row);\n      }\n\n      this.setState({\n        data: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/equipments/types\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n      rows.push([\"Code\", \"Name\", \"Weight\"]);\n\n      for (let i = 0; i < json.rows.length; i++) {\n        let mod = 0;\n\n        if (json.rows[i].modelled) {\n          mod = json.rows[i].modelled;\n        }\n\n        row = [json.rows[i].code, json.rows[i].name, json.rows[i].weight];\n\n        for (let j = 0; j < this.state.steps.length; j++) {\n          let currentStep = this.state.steps[j].toString();\n          row[currentStep] = json.rows[i][currentStep];\n        }\n\n        rows.push(row);\n      }\n\n      this.setState({\n        typesData: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/equipments/steps\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n      rows.push([\"Name\", \"Percentage\"]);\n\n      for (let i = 0; i < json.steps.length; i++) {\n        row = [json.names[i].name, json.steps[i].percentage];\n        rows.push(row);\n      }\n\n      this.setState({\n        stepsData: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/gequips\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n      console.log(json.rows);\n      rows.push([\"Week\", \"Estimated\", \"Progress\"]);\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = [json.rows[i].week, json.rows[i].estimated, json.rows[i].progress];\n        rows.push(row);\n      }\n\n      this.setState({\n        progressData: rows,\n        selectedRows: []\n      });\n    });\n  }\n\n  addRowTypes() {\n    let rows = this.state.typesData;\n    rows.push([\"\", \"\", \"\"]);\n    this.setState({\n      typesData: rows\n    });\n  }\n\n  submitChangesTypes() {\n    const body = {\n      rows: this.state.typesData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/equipments/types\", options).then(response => response.json()).then(json => {\n      if (json.error) {\n        console.log(\"error\");\n      } else {\n        console.log(\"success\");\n      }\n    });\n  }\n\n  addRowSteps() {\n    let rows = this.state.stepsData;\n    rows.push([\"\", \"\", \"\"]);\n    this.setState({\n      stepsData: rows\n    });\n  }\n\n  submitChangesSteps() {\n    const body = {\n      rows: this.state.stepsData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/equipments/steps\", options).then(response => response.json()).then(json => {\n      if (json.error) {\n        console.log(\"error\");\n      } else {\n        console.log(\"success\");\n      }\n    });\n  }\n\n  addRowProgress() {\n    let rows = this.state.progressData;\n    rows.push([\"\", \"\", \"\"]);\n    this.setState({\n      progressData: rows\n    });\n  }\n\n  submitChangesProgress() {\n    const body = {\n      rows: this.state.progressData\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/equipments/progress\", options).then(response => response.json()).then(json => {\n      if (json.error) {\n        console.log(\"error\");\n      } else {\n        console.log(\"success\");\n      }\n    });\n  }\n\n  render() {\n    const typesSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 150 //... other options\n\n    };\n    const stepsSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 200 //... other options\n\n    };\n    const progressSettings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 130 //... other options\n\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        float: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.typesData,\n            colHeaders: true,\n            rowHeaders: true,\n            width: \"525\",\n            height: \"500\",\n            settings: typesSettings,\n            manualColumnResize: true,\n            manualRowResize: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowTypes(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Add row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesTypes(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.stepsData,\n            colHeaders: true,\n            rowHeaders: true,\n            width: \"470\",\n            height: \"500\",\n            settings: stepsSettings,\n            manualColumnResize: true,\n            manualRowResize: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowSteps(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Add row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesSteps(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          marginLeft: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          children: [/*#__PURE__*/_jsxDEV(HotTable, {\n            data: this.state.progressData,\n            colHeaders: true,\n            rowHeaders: true,\n            width: \"465\",\n            height: \"500\",\n            settings: progressSettings,\n            manualColumnResize: true,\n            manualRowResize: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-info\",\n              onClick: () => this.addRowProgress(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Add row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              onClick: () => this.submitChangesProgress(),\n              style: {\n                marginRight: \"5px\",\n                fontSize: \"16px\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EquipTypesDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/equipTypesDataTable/equipTypesDataTable.js"],"names":["React","Table","Input","Button","Space","SearchOutlined","HotTable","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","EquipTypesDataTable","Component","state","searchText","searchedColumn","typesData","stepsData","progressData","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","row","i","length","mod","modelled","code","name","weight","color","j","currentStep","push","setState","names","percentage","console","log","week","estimated","progress","addRowTypes","submitChangesTypes","body","JSON","stringify","error","addRowSteps","submitChangesSteps","addRowProgress","submitChangesProgress","render","typesSettings","licenseKey","colWidths","stepsSettings","progressSettings","float","marginLeft","marginRight","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport \"./equipTypesDataTable\"\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass EquipTypesDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    typesData: [],\r\n    stepsData: [],\r\n    progressData: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: []\r\n  };\r\n\r\n  \r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n  }\r\n\r\n  fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/types\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      \r\n      for(let i = 0; i < json.rows.length; i++){\r\n          let mod = 0\r\n          if(json.rows[i].modelled){\r\n            mod = json.rows[i].modelled\r\n          }\r\n          if(i % 2 === 0){\r\n            row = {key:i, code: json.rows[i].code, name: json.rows[i].name, weight: json.rows[i].weight, color: \"#fff\"}\r\n          }else{\r\n              row = {key:i, code: json.rows[i].code, name: json.rows[i].name, weight: json.rows[i].weight, color: \"#eee\"}\r\n          }\r\n          \r\n          for(let j = 0; j < this.state.steps.length; j++){\r\n            let currentStep = this.state.steps[j].toString()\r\n            row[currentStep] = json.rows[i][currentStep]\r\n          }\r\n          rows.push(row)\r\n      }\r\n      this.setState({data : rows, selectedRows: []});\r\n\r\n  }) \r\n\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/types\", options)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        var rows = []\r\n        var row = null\r\n        rows.push([\"Code\", \"Name\", \"Weight\"])\r\n        for(let i = 0; i < json.rows.length; i++){\r\n            let mod = 0\r\n            if(json.rows[i].modelled){\r\n              mod = json.rows[i].modelled\r\n            }\r\n\r\n            row = [json.rows[i].code, json.rows[i].name, json.rows[i].weight]\r\n\r\n            for(let j = 0; j < this.state.steps.length; j++){\r\n              let currentStep = this.state.steps[j].toString()\r\n              row[currentStep] = json.rows[i][currentStep]\r\n            }\r\n            rows.push(row)\r\n        }\r\n        this.setState({typesData : rows, selectedRows: []});\r\n\r\n    }) \r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/steps\", options)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        var rows = []\r\n        var row = null\r\n        rows.push([\"Name\", \"Percentage\"])\r\n        for(let i = 0; i < json.steps.length; i++){\r\n            row = [json.names[i].name, json.steps[i].percentage]\r\n\r\n            rows.push(row)\r\n        }\r\n        this.setState({stepsData : rows, selectedRows: []});\r\n\r\n    })\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/gequips\", options)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        var rows = []\r\n        var row = null\r\n        console.log(json.rows)\r\n        rows.push([\"Week\", \"Estimated\", \"Progress\"])\r\n        for(let i = 0; i < json.rows.length; i++){\r\n            row = [json.rows[i].week, json.rows[i].estimated, json.rows[i].progress]\r\n\r\n            rows.push(row)\r\n        }\r\n        this.setState({progressData : rows, selectedRows: []});\r\n\r\n    })\r\n  }\r\n\r\n  addRowTypes(){\r\n    let rows = this.state.typesData\r\n    rows.push([\"\",\"\",\"\"])\r\n    this.setState({typesData: rows})\r\n  }\r\n  \r\n  submitChangesTypes(){\r\n    const body = {\r\n      rows: this.state.typesData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/equipments/types\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n      if(json.error){\r\n        console.log(\"error\")\r\n      }else{\r\n        console.log(\"success\")\r\n      }\r\n    })\r\n  }\r\n\r\n  addRowSteps(){\r\n    let rows = this.state.stepsData\r\n    rows.push([\"\",\"\",\"\"])\r\n    this.setState({stepsData: rows})\r\n  }\r\n\r\n  submitChangesSteps(){\r\n    const body = {\r\n      rows: this.state.stepsData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/equipments/steps\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n      if(json.error){\r\n        console.log(\"error\")\r\n      }else{\r\n        console.log(\"success\")\r\n      }\r\n    })\r\n  }\r\n\r\n  addRowProgress(){\r\n    let rows = this.state.progressData\r\n    rows.push([\"\",\"\",\"\"])\r\n    this.setState({progressData: rows})\r\n  }\r\n\r\n  submitChangesProgress(){\r\n    const body = {\r\n      rows: this.state.progressData,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/equipments/progress\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n      if(json.error){\r\n        console.log(\"error\")\r\n      }else{\r\n        console.log(\"success\")\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    const typesSettings = {\r\n      licenseKey: 'non-commercial-and-evaluation',\r\n      colWidths: 150,\r\n      //... other options\r\n    }\r\n\r\n    const stepsSettings = {\r\n      licenseKey: 'non-commercial-and-evaluation',\r\n      colWidths: 200,\r\n      //... other options\r\n    }\r\n\r\n    const progressSettings = {\r\n      licenseKey: 'non-commercial-and-evaluation',\r\n      colWidths: 130,\r\n      //... other options\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\" style={{float:\"left\"}}>\r\n        <div className=\"column\" style={{marginLeft:\"30px\"}}>\r\n          <div id=\"hot-app\">\r\n            <HotTable\r\n              data={this.state.typesData}\r\n              colHeaders={true}\r\n              rowHeaders={true}\r\n              width=\"525\"\r\n              height=\"500\"\r\n              settings={typesSettings} \r\n              manualColumnResize={true}\r\n              manualRowResize={true}\r\n            />\r\n            <br></br>\r\n            <center>\r\n                <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowTypes()} style={{marginRight:\"5px\", fontSize:\"16px\"}}>Add row</button>\r\n                <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesTypes()} style={{marginRight:\"5px\", fontSize:\"16px\"}}>Submit</button>\r\n            </center>\r\n          </div>\r\n        </div>\r\n        <div className=\"column\" style={{marginLeft:\"50px\"}}>\r\n          <div id=\"hot-app\">\r\n            <HotTable\r\n              data={this.state.stepsData}\r\n              colHeaders={true}\r\n              rowHeaders={true}\r\n              width=\"470\"\r\n              height=\"500\"\r\n              settings={stepsSettings} \r\n              manualColumnResize={true}\r\n              manualRowResize={true}\r\n            />\r\n            <br></br>\r\n            <center>\r\n                <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowSteps()} style={{marginRight:\"5px\", fontSize:\"16px\"}}>Add row</button>\r\n                <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesSteps()} style={{marginRight:\"5px\", fontSize:\"16px\"}}>Submit</button>\r\n            </center>\r\n          </div>\r\n        </div>\r\n        <div className=\"column\" style={{marginLeft:\"50px\"}}>\r\n          <div id=\"hot-app\">\r\n            <HotTable\r\n              data={this.state.progressData}\r\n              colHeaders={true}\r\n              rowHeaders={true}\r\n              width=\"465\"\r\n              height=\"500\"\r\n              settings={progressSettings} \r\n              manualColumnResize={true}\r\n              manualRowResize={true}\r\n            />\r\n            <br></br>\r\n            <center>\r\n                <button class=\"btn btn-sm btn-info\" onClick={() => this.addRowProgress()} style={{marginRight:\"5px\", fontSize:\"16px\"}}>Add row</button>\r\n                <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChangesProgress()} style={{marginRight:\"5px\", fontSize:\"16px\"}}>Submit</button>\r\n            </center>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EquipTypesDataTable;"]},"metadata":{},"sourceType":"module"}