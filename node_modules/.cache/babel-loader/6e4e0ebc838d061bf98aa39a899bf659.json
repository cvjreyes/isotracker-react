{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\dragAndDrop\\\\dragAndDrop.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Upload, Button, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport reqwest from 'reqwest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DragAndDrop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileList: [],\n      uploading: false\n    };\n\n    this.handleUpload = () => {\n      const {\n        fileList\n      } = this.state;\n      const formData = new FormData();\n      fileList.forEach(file => {\n        formData.append('files[]', file);\n      });\n      this.setState({\n        uploading: true\n      }); // You can use any AJAX library you like\n\n      reqwest({\n        url: 'http://',\n        method: 'post',\n        processData: false,\n        data: formData,\n        success: () => {\n          this.setState({\n            fileList: [],\n            uploading: false\n          });\n          message.success('upload successfully.');\n        },\n        error: () => {\n          this.setState({\n            uploading: false\n          });\n          message.error('upload failed.');\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      uploading,\n      fileList\n    } = this.state;\n    const props = {\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      beforeUpload: file => {\n        this.setState(state => ({\n          fileList: [...state.fileList, file]\n        }));\n        return false;\n      },\n      fileList\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Upload, { ...props,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this),\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.handleUpload,\n        disabled: fileList.length === 0,\n        loading: uploading,\n        style: {\n          marginTop: 16\n        },\n        children: uploading ? 'Uploading' : 'Start Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(DragAndDrop, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 89,\n  columnNumber: 17\n}, this), document.getElementById('container'));","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/dragAndDrop/dragAndDrop.js"],"names":["React","ReactDOM","Upload","Button","message","UploadOutlined","reqwest","DragAndDrop","Component","state","fileList","uploading","handleUpload","formData","FormData","forEach","file","append","setState","url","method","processData","data","success","error","render","props","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","length","marginTop","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport reqwest from 'reqwest';\r\n\r\nclass DragAndDrop extends React.Component {\r\n  state = {\r\n    fileList: [],\r\n    uploading: false,\r\n  };\r\n\r\n  handleUpload = () => {\r\n    const { fileList } = this.state;\r\n    const formData = new FormData();\r\n    fileList.forEach(file => {\r\n      formData.append('files[]', file);\r\n    });\r\n\r\n    this.setState({\r\n      uploading: true,\r\n    });\r\n\r\n    // You can use any AJAX library you like\r\n    reqwest({\r\n      url: 'http://',\r\n      method: 'post',\r\n      processData: false,\r\n      data: formData,\r\n      success: () => {\r\n        this.setState({\r\n          fileList: [],\r\n          uploading: false,\r\n        });\r\n        message.success('upload successfully.');\r\n      },\r\n      error: () => {\r\n        this.setState({\r\n          uploading: false,\r\n        });\r\n        message.error('upload failed.');\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { uploading, fileList } = this.state;\r\n    const props = {\r\n      onRemove: file => {\r\n        this.setState(state => {\r\n          const index = state.fileList.indexOf(file);\r\n          const newFileList = state.fileList.slice();\r\n          newFileList.splice(index, 1);\r\n          return {\r\n            fileList: newFileList,\r\n          };\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [...state.fileList, file],\r\n        }));\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Upload {...props}>\r\n          <Button icon={<UploadOutlined />}>Select File</Button>\r\n        </Upload>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={this.handleUpload}\r\n          disabled={fileList.length === 0}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? 'Uploading' : 'Start Upload'}\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<DragAndDrop />, document.getElementById('container'));"]},"metadata":{},"sourceType":"module"}