{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { fastInnerText } from \"./../../../helpers/dom/element.mjs\";\nimport { objectEach } from \"./../../../helpers/object.mjs\";\n/**\r\n * @class Settings\r\n */\n\nvar Settings = /*#__PURE__*/function () {\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance.\r\n   * @param {object} settings The user defined settings.\r\n   */\n  function Settings(wotInstance, settings) {\n    var _this = this;\n\n    _classCallCheck(this, Settings);\n\n    this.wot = wotInstance; // legacy support\n\n    this.instance = wotInstance; // default settings. void 0 means it is required, null means it can be empty\n\n    this.defaults = {\n      table: void 0,\n      // Determines whether the Walkontable instance is used as dataset viewer. When its instance is used as\n      // a context menu, autocomplete list, etc, the returned value is `false`.\n      isDataViewInstance: true,\n      // presentation mode\n      externalRowCalculator: false,\n      stretchH: 'none',\n      // values: all, last, none\n      currentRowClassName: null,\n      currentColumnClassName: null,\n      preventOverflow: function preventOverflow() {\n        return false;\n      },\n      preventWheel: false,\n      // data source\n      data: void 0,\n      freezeOverlays: false,\n      // Number of renderable columns for the left overlay.\n      fixedColumnsLeft: 0,\n      // Number of renderable rows for the top overlay.\n      fixedRowsTop: 0,\n      // Number of renderable rows for the bottom overlay.\n      fixedRowsBottom: 0,\n      // Enable the left overlay when conditions are met.\n      shouldRenderLeftOverlay: function shouldRenderLeftOverlay() {\n        return _this.getSetting('fixedColumnsLeft') > 0 || _this.getSetting('rowHeaders').length > 0;\n      },\n      // Enable the top overlay when conditions are met.\n      shouldRenderTopOverlay: function shouldRenderTopOverlay() {\n        return _this.getSetting('fixedRowsTop') > 0 || _this.getSetting('columnHeaders').length > 0;\n      },\n      // Enable the bottom overlay when conditions are met.\n      shouldRenderBottomOverlay: function shouldRenderBottomOverlay() {\n        return _this.getSetting('fixedRowsBottom') > 0;\n      },\n      minSpareRows: 0,\n      // this must be array of functions: [function (row, TH) {}]\n      rowHeaders: function rowHeaders() {\n        return [];\n      },\n      // this must be array of functions: [function (column, TH) {}]\n      columnHeaders: function columnHeaders() {\n        return [];\n      },\n      totalRows: void 0,\n      totalColumns: void 0,\n      cellRenderer: function cellRenderer(row, column, TD) {\n        var cellData = _this.getSetting('data', row, column);\n\n        fastInnerText(TD, cellData === void 0 || cellData === null ? '' : cellData);\n      },\n      // columnWidth: 50,\n      columnWidth: function columnWidth() {// return undefined means use default size for the rendered cell content\n      },\n      rowHeight: function rowHeight() {// return undefined means use default size for the rendered cell content\n      },\n      defaultRowHeight: 23,\n      defaultColumnWidth: 50,\n      selections: null,\n      hideBorderOnMouseDownOver: false,\n      viewportRowCalculatorOverride: null,\n      viewportColumnCalculatorOverride: null,\n      // callbacks\n      onCellMouseDown: null,\n      onCellContextMenu: null,\n      onCellMouseOver: null,\n      onCellMouseOut: null,\n      onCellMouseUp: null,\n      //    onCellMouseOut: null,\n      onCellDblClick: null,\n      onCellCornerMouseDown: null,\n      onCellCornerDblClick: null,\n      beforeDraw: null,\n      onDraw: null,\n      onBeforeRemoveCellClassNames: null,\n      onAfterDrawSelection: null,\n      onBeforeDrawBorders: null,\n      onScrollVertically: null,\n      onScrollHorizontally: null,\n      onBeforeTouchScroll: null,\n      onAfterMomentumScroll: null,\n      onBeforeStretchingColumnWidth: function onBeforeStretchingColumnWidth(width) {\n        return width;\n      },\n      onModifyRowHeaderWidth: null,\n      onModifyGetCellCoords: null,\n      onBeforeHighlightingRowHeader: function onBeforeHighlightingRowHeader(sourceRow) {\n        return sourceRow;\n      },\n      onBeforeHighlightingColumnHeader: function onBeforeHighlightingColumnHeader(sourceCol) {\n        return sourceCol;\n      },\n      onWindowResize: null,\n      // constants\n      scrollbarWidth: 10,\n      scrollbarHeight: 10,\n      renderAllRows: false,\n      groups: false,\n      rowHeaderWidth: null,\n      columnHeaderHeight: null,\n      headerClassName: null\n    }; // reference to settings\n\n    this.settings = {};\n    objectEach(this.defaults, function (value, key) {\n      if (settings[key] !== void 0) {\n        _this.settings[key] = settings[key];\n      } else if (value === void 0) {\n        throw new Error(\"A required setting \\\"\".concat(key, \"\\\" was not provided\"));\n      } else {\n        _this.settings[key] = value;\n      }\n    });\n  }\n  /**\r\n   * Update settings.\r\n   *\r\n   * @param {object} settings The singular settings to update or if passed as object to merge with.\r\n   * @param {*} value The value to set if the first argument is passed as string.\r\n   * @returns {Walkontable}\r\n   */\n\n\n  _createClass(Settings, [{\n    key: \"update\",\n    value: function update(settings, value) {\n      var _this2 = this;\n\n      if (value === void 0) {\n        // settings is object\n        objectEach(settings, function (settingValue, key) {\n          _this2.settings[key] = settingValue;\n        });\n      } else {\n        // if value is defined then settings is the key\n        this.settings[settings] = value;\n      }\n\n      return this.wot;\n    }\n    /**\r\n     * Get setting by name.\r\n     *\r\n     * @param {string} key The settings key to retrieve.\r\n     * @param {*} [param1] Additional parameter passed to the options defined as function.\r\n     * @param {*} [param2] Additional parameter passed to the options defined as function.\r\n     * @param {*} [param3] Additional parameter passed to the options defined as function.\r\n     * @param {*} [param4] Additional parameter passed to the options defined as function.\r\n     * @returns {*}\r\n     */\n\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(key, param1, param2, param3, param4) {\n      if (typeof this.settings[key] === 'function') {\n        // this is faster than .apply - https://github.com/handsontable/handsontable/wiki/JavaScript-&-DOM-performance-tips\n        return this.settings[key](param1, param2, param3, param4);\n      } else if (param1 !== void 0 && Array.isArray(this.settings[key])) {\n        // perhaps this can be removed, it is only used in tests\n        return this.settings[key][param1];\n      }\n\n      return this.settings[key];\n    }\n    /**\r\n     * Checks if setting exists.\r\n     *\r\n     * @param {boolean} key The settings key to check.\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return !!this.settings[key];\n    }\n  }]);\n\n  return Settings;\n}();\n\nexport default Settings;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/3rdparty/walkontable/src/settings.mjs"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","fastInnerText","objectEach","Settings","wotInstance","settings","_this","wot","defaults","table","isDataViewInstance","externalRowCalculator","stretchH","currentRowClassName","currentColumnClassName","preventOverflow","preventWheel","data","freezeOverlays","fixedColumnsLeft","fixedRowsTop","fixedRowsBottom","shouldRenderLeftOverlay","getSetting","shouldRenderTopOverlay","shouldRenderBottomOverlay","minSpareRows","rowHeaders","columnHeaders","totalRows","totalColumns","cellRenderer","row","column","TD","cellData","columnWidth","rowHeight","defaultRowHeight","defaultColumnWidth","selections","hideBorderOnMouseDownOver","viewportRowCalculatorOverride","viewportColumnCalculatorOverride","onCellMouseDown","onCellContextMenu","onCellMouseOver","onCellMouseOut","onCellMouseUp","onCellDblClick","onCellCornerMouseDown","onCellCornerDblClick","beforeDraw","onDraw","onBeforeRemoveCellClassNames","onAfterDrawSelection","onBeforeDrawBorders","onScrollVertically","onScrollHorizontally","onBeforeTouchScroll","onAfterMomentumScroll","onBeforeStretchingColumnWidth","width","onModifyRowHeaderWidth","onModifyGetCellCoords","onBeforeHighlightingRowHeader","sourceRow","onBeforeHighlightingColumnHeader","sourceCol","onWindowResize","scrollbarWidth","scrollbarHeight","renderAllRows","groups","rowHeaderWidth","columnHeaderHeight","headerClassName","value","Error","concat","update","_this2","settingValue","param1","param2","param3","param4","Array","isArray","has"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nimport { fastInnerText } from \"./../../../helpers/dom/element.mjs\";\r\nimport { objectEach } from \"./../../../helpers/object.mjs\";\r\n/**\r\n * @class Settings\r\n */\r\n\r\nvar Settings = /*#__PURE__*/function () {\r\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance.\r\n   * @param {object} settings The user defined settings.\r\n   */\r\n  function Settings(wotInstance, settings) {\r\n    var _this = this;\r\n\r\n    _classCallCheck(this, Settings);\r\n\r\n    this.wot = wotInstance; // legacy support\r\n\r\n    this.instance = wotInstance; // default settings. void 0 means it is required, null means it can be empty\r\n\r\n    this.defaults = {\r\n      table: void 0,\r\n      // Determines whether the Walkontable instance is used as dataset viewer. When its instance is used as\r\n      // a context menu, autocomplete list, etc, the returned value is `false`.\r\n      isDataViewInstance: true,\r\n      // presentation mode\r\n      externalRowCalculator: false,\r\n      stretchH: 'none',\r\n      // values: all, last, none\r\n      currentRowClassName: null,\r\n      currentColumnClassName: null,\r\n      preventOverflow: function preventOverflow() {\r\n        return false;\r\n      },\r\n      preventWheel: false,\r\n      // data source\r\n      data: void 0,\r\n      freezeOverlays: false,\r\n      // Number of renderable columns for the left overlay.\r\n      fixedColumnsLeft: 0,\r\n      // Number of renderable rows for the top overlay.\r\n      fixedRowsTop: 0,\r\n      // Number of renderable rows for the bottom overlay.\r\n      fixedRowsBottom: 0,\r\n      // Enable the left overlay when conditions are met.\r\n      shouldRenderLeftOverlay: function shouldRenderLeftOverlay() {\r\n        return _this.getSetting('fixedColumnsLeft') > 0 || _this.getSetting('rowHeaders').length > 0;\r\n      },\r\n      // Enable the top overlay when conditions are met.\r\n      shouldRenderTopOverlay: function shouldRenderTopOverlay() {\r\n        return _this.getSetting('fixedRowsTop') > 0 || _this.getSetting('columnHeaders').length > 0;\r\n      },\r\n      // Enable the bottom overlay when conditions are met.\r\n      shouldRenderBottomOverlay: function shouldRenderBottomOverlay() {\r\n        return _this.getSetting('fixedRowsBottom') > 0;\r\n      },\r\n      minSpareRows: 0,\r\n      // this must be array of functions: [function (row, TH) {}]\r\n      rowHeaders: function rowHeaders() {\r\n        return [];\r\n      },\r\n      // this must be array of functions: [function (column, TH) {}]\r\n      columnHeaders: function columnHeaders() {\r\n        return [];\r\n      },\r\n      totalRows: void 0,\r\n      totalColumns: void 0,\r\n      cellRenderer: function cellRenderer(row, column, TD) {\r\n        var cellData = _this.getSetting('data', row, column);\r\n\r\n        fastInnerText(TD, cellData === void 0 || cellData === null ? '' : cellData);\r\n      },\r\n      // columnWidth: 50,\r\n      columnWidth: function columnWidth() {// return undefined means use default size for the rendered cell content\r\n      },\r\n      rowHeight: function rowHeight() {// return undefined means use default size for the rendered cell content\r\n      },\r\n      defaultRowHeight: 23,\r\n      defaultColumnWidth: 50,\r\n      selections: null,\r\n      hideBorderOnMouseDownOver: false,\r\n      viewportRowCalculatorOverride: null,\r\n      viewportColumnCalculatorOverride: null,\r\n      // callbacks\r\n      onCellMouseDown: null,\r\n      onCellContextMenu: null,\r\n      onCellMouseOver: null,\r\n      onCellMouseOut: null,\r\n      onCellMouseUp: null,\r\n      //    onCellMouseOut: null,\r\n      onCellDblClick: null,\r\n      onCellCornerMouseDown: null,\r\n      onCellCornerDblClick: null,\r\n      beforeDraw: null,\r\n      onDraw: null,\r\n      onBeforeRemoveCellClassNames: null,\r\n      onAfterDrawSelection: null,\r\n      onBeforeDrawBorders: null,\r\n      onScrollVertically: null,\r\n      onScrollHorizontally: null,\r\n      onBeforeTouchScroll: null,\r\n      onAfterMomentumScroll: null,\r\n      onBeforeStretchingColumnWidth: function onBeforeStretchingColumnWidth(width) {\r\n        return width;\r\n      },\r\n      onModifyRowHeaderWidth: null,\r\n      onModifyGetCellCoords: null,\r\n      onBeforeHighlightingRowHeader: function onBeforeHighlightingRowHeader(sourceRow) {\r\n        return sourceRow;\r\n      },\r\n      onBeforeHighlightingColumnHeader: function onBeforeHighlightingColumnHeader(sourceCol) {\r\n        return sourceCol;\r\n      },\r\n      onWindowResize: null,\r\n      // constants\r\n      scrollbarWidth: 10,\r\n      scrollbarHeight: 10,\r\n      renderAllRows: false,\r\n      groups: false,\r\n      rowHeaderWidth: null,\r\n      columnHeaderHeight: null,\r\n      headerClassName: null\r\n    }; // reference to settings\r\n\r\n    this.settings = {};\r\n    objectEach(this.defaults, function (value, key) {\r\n      if (settings[key] !== void 0) {\r\n        _this.settings[key] = settings[key];\r\n      } else if (value === void 0) {\r\n        throw new Error(\"A required setting \\\"\".concat(key, \"\\\" was not provided\"));\r\n      } else {\r\n        _this.settings[key] = value;\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Update settings.\r\n   *\r\n   * @param {object} settings The singular settings to update or if passed as object to merge with.\r\n   * @param {*} value The value to set if the first argument is passed as string.\r\n   * @returns {Walkontable}\r\n   */\r\n\r\n\r\n  _createClass(Settings, [{\r\n    key: \"update\",\r\n    value: function update(settings, value) {\r\n      var _this2 = this;\r\n\r\n      if (value === void 0) {\r\n        // settings is object\r\n        objectEach(settings, function (settingValue, key) {\r\n          _this2.settings[key] = settingValue;\r\n        });\r\n      } else {\r\n        // if value is defined then settings is the key\r\n        this.settings[settings] = value;\r\n      }\r\n\r\n      return this.wot;\r\n    }\r\n    /**\r\n     * Get setting by name.\r\n     *\r\n     * @param {string} key The settings key to retrieve.\r\n     * @param {*} [param1] Additional parameter passed to the options defined as function.\r\n     * @param {*} [param2] Additional parameter passed to the options defined as function.\r\n     * @param {*} [param3] Additional parameter passed to the options defined as function.\r\n     * @param {*} [param4] Additional parameter passed to the options defined as function.\r\n     * @returns {*}\r\n     */\r\n\r\n  }, {\r\n    key: \"getSetting\",\r\n    value: function getSetting(key, param1, param2, param3, param4) {\r\n      if (typeof this.settings[key] === 'function') {\r\n        // this is faster than .apply - https://github.com/handsontable/handsontable/wiki/JavaScript-&-DOM-performance-tips\r\n        return this.settings[key](param1, param2, param3, param4);\r\n      } else if (param1 !== void 0 && Array.isArray(this.settings[key])) {\r\n        // perhaps this can be removed, it is only used in tests\r\n        return this.settings[key][param1];\r\n      }\r\n\r\n      return this.settings[key];\r\n    }\r\n    /**\r\n     * Checks if setting exists.\r\n     *\r\n     * @param {boolean} key The settings key to check.\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"has\",\r\n    value: function has(key) {\r\n      return !!this.settings[key];\r\n    }\r\n  }]);\r\n\r\n  return Settings;\r\n}();\r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}