{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar ClipboardData = /*#__PURE__*/function () {\n  function ClipboardData() {\n    _classCallCheck(this, ClipboardData);\n\n    this.data = {};\n  }\n\n  _createClass(ClipboardData, [{\n    key: \"setData\",\n    value: function setData(type, value) {\n      this.data[type] = value;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(type) {\n      return this.data[type] || void 0;\n    }\n  }]);\n\n  return ClipboardData;\n}();\n\nexport { ClipboardData as default };","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/copyPaste/clipboardData.mjs"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","ClipboardData","data","value","setData","type","getData","default"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BC,IAAAA,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AAA4D;AAAE;;AAE7T,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACiB,SAAb,EAAwBF,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;AAA6C,SAAOhB,WAAP;AAAqB;;AAEvN,IAAIkB,aAAa,GAAG,aAAa,YAAY;AAC3C,WAASA,aAAT,GAAyB;AACvBpB,IAAAA,eAAe,CAAC,IAAD,EAAOoB,aAAP,CAAf;;AAEA,SAAKC,IAAL,GAAY,EAAZ;AACD;;AAEDL,EAAAA,YAAY,CAACI,aAAD,EAAgB,CAAC;AAC3BL,IAAAA,GAAG,EAAE,SADsB;AAE3BO,IAAAA,KAAK,EAAE,SAASC,OAAT,CAAiBC,IAAjB,EAAuBF,KAAvB,EAA8B;AACnC,WAAKD,IAAL,CAAUG,IAAV,IAAkBF,KAAlB;AACD;AAJ0B,GAAD,EAKzB;AACDP,IAAAA,GAAG,EAAE,SADJ;AAEDO,IAAAA,KAAK,EAAE,SAASG,OAAT,CAAiBD,IAAjB,EAAuB;AAC5B,aAAO,KAAKH,IAAL,CAAUG,IAAV,KAAmB,KAAK,CAA/B;AACD;AAJA,GALyB,CAAhB,CAAZ;;AAYA,SAAOJ,aAAP;AACD,CApBgC,EAAjC;;AAsBA,SAASA,aAAa,IAAIM,OAA1B","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nvar ClipboardData = /*#__PURE__*/function () {\r\n  function ClipboardData() {\r\n    _classCallCheck(this, ClipboardData);\r\n\r\n    this.data = {};\r\n  }\r\n\r\n  _createClass(ClipboardData, [{\r\n    key: \"setData\",\r\n    value: function setData(type, value) {\r\n      this.data[type] = value;\r\n    }\r\n  }, {\r\n    key: \"getData\",\r\n    value: function getData(type) {\r\n      return this.data[type] || void 0;\r\n    }\r\n  }]);\r\n\r\n  return ClipboardData;\r\n}();\r\n\r\nexport { ClipboardData as default };"]},"metadata":{},"sourceType":"module"}