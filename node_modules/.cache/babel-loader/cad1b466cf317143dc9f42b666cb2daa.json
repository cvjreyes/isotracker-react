{"ast":null,"code":"export var holder = new WeakMap();\nexport var rootInstanceSymbol = Symbol('rootInstance');\n/**\r\n * Register an object as a root instance.\r\n *\r\n * @param  {object} object An object to associate with root instance flag.\r\n */\n\nexport function registerAsRootInstance(object) {\n  holder.set(object, true);\n}\n/**\r\n * Check if the source of the root indication call is valid.\r\n *\r\n * @param  {symbol} rootSymbol A symbol as a source of truth.\r\n * @returns {boolean}\r\n */\n\nexport function hasValidParameter(rootSymbol) {\n  return rootSymbol === rootInstanceSymbol;\n}\n/**\r\n * Check if passed an object was flagged as a root instance.\r\n *\r\n * @param  {object} object An object to check.\r\n * @returns {boolean}\r\n */\n\nexport function isRootInstance(object) {\n  return holder.has(object);\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/utils/rootInstance.mjs"],"names":["holder","WeakMap","rootInstanceSymbol","Symbol","registerAsRootInstance","object","set","hasValidParameter","rootSymbol","isRootInstance","has"],"mappings":"AAOA,OAAO,IAAIA,MAAM,GAAG,IAAIC,OAAJ,EAAb;AACP,OAAO,IAAIC,kBAAkB,GAAGC,MAAM,CAAC,cAAD,CAA/B;AACP;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,sBAAT,CAAgCC,MAAhC,EAAwC;AAC7CL,EAAAA,MAAM,CAACM,GAAP,CAAWD,MAAX,EAAmB,IAAnB;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,iBAAT,CAA2BC,UAA3B,EAAuC;AAC5C,SAAOA,UAAU,KAAKN,kBAAtB;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASO,cAAT,CAAwBJ,MAAxB,EAAgC;AACrC,SAAOL,MAAM,CAACU,GAAP,CAAWL,MAAX,CAAP;AACD","sourcesContent":["import \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/es.weak-map.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nexport var holder = new WeakMap();\r\nexport var rootInstanceSymbol = Symbol('rootInstance');\r\n/**\r\n * Register an object as a root instance.\r\n *\r\n * @param  {object} object An object to associate with root instance flag.\r\n */\r\n\r\nexport function registerAsRootInstance(object) {\r\n  holder.set(object, true);\r\n}\r\n/**\r\n * Check if the source of the root indication call is valid.\r\n *\r\n * @param  {symbol} rootSymbol A symbol as a source of truth.\r\n * @returns {boolean}\r\n */\r\n\r\nexport function hasValidParameter(rootSymbol) {\r\n  return rootSymbol === rootInstanceSymbol;\r\n}\r\n/**\r\n * Check if passed an object was flagged as a root instance.\r\n *\r\n * @param  {object} object An object to check.\r\n * @returns {boolean}\r\n */\r\n\r\nexport function isRootInstance(object) {\r\n  return holder.has(object);\r\n}"]},"metadata":{},"sourceType":"module"}