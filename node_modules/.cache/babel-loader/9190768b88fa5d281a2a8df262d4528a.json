{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\pipingProduction\\\\pipingProduction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport IdleTimer from 'react-idle-timer';\nimport { useHistory } from \"react-router\";\nimport BackIcon from \"../../assets/images/back.svg\";\nimport AlertF from \"../../components/alert/alert\";\nimport './pipingProduction.css';\nimport SaveIcon from \"../../assets/images/save.svg\";\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport NavBarProdCurve from '../../components/navBarProdCurve/navBarProdCurve'; //Página de home con el menú para ir a las aplicaciones de isotracker\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PITRequests = () => {\n  _s();\n\n  const history = useHistory();\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const [updateData, setUpdateData] = useState(false);\n  const [updateRows, setUpdateRows] = useState(false);\n  const [tables, setTables] = useState([]);\n  const [materials, setMaterials] = useState();\n  const [materialsList, setMaterialsList] = useState([]);\n  const [materialsIDList, setMaterialsIDList] = useState([]);\n  const [piping, setPiping] = useState();\n  const [management, setManagement] = useState([]);\n  const [estimatedData, setEstimatedData] = useState({});\n  const [forecastData, setForecastData] = useState({});\n  const [estimatedMaterialData, setEstimatedMaterialData] = useState({});\n  const [overallTable, setOverallTable] = useState();\n  const [success, setSuccess] = useState(false);\n  const [spanAlert, setSpanAlert] = useState(false);\n  const [pipingAlert, setPipingAlert] = useState(false);\n  const [materialsAlert, setMaterialsAlert] = useState(false);\n  const [lineChart, setLineChart] = useState();\n  document.body.style.zoom = 1;\n\n  function handleOnIdle() {\n    const body = {\n      user: secureStorage.getItem(\"user\")\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {});\n    secureStorage.clear();\n    history.push(\"/\" + process.env.REACT_APP_PROJECT);\n  }\n\n  useEffect(async () => {\n    const colors = [\"rgb(0,0,255)\", \"rgb(176,224,230)\", \"rgb(0,191,255)\", \"rgb(0,128,0)\", \"rgb(124,252,0)\", \"rgb(50,205,50)\", \"rgb(255,140,0)\", \"rgb(255,215,0)\", \"rgb(255,165,0)\", \"rgb(255,20,147)\", \"rgb(255,105,180)\", \"rgb(255,192,203)\", \"rgb(112,128,144)\", \"rgb(169,169,169)\", \"rgb(220,220,220)\", \"rgb(128,0,0)\", \"rgb(205,92,92)\", \"rgb(240,128,128)\"];\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getMaterialsPipingClass\", options).then(response => response.json()).then(async json => {\n      const materials = json.materials;\n      let piping = [];\n\n      for (let i = 0; i < materials.length; i++) {\n        piping.push({\n          \"id\": materials[i].piping_id,\n          \"PipingClass\": materials[i].piping,\n          \"Material\": materials[i].material\n        });\n      }\n\n      await setPiping(piping);\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getProjectSpan\", options).then(response => response.json()).then(async json => {\n      const span = json.span;\n      await setManagement({\n        \"Starting date\": span[0].starting_date.toString().substring(8, 10) + \"/\" + span[0].starting_date.toString().substring(5, 7) + \"/\" + span[0].starting_date.toString().substring(0, 4),\n        \"Finishing date\": span[0].finishing_date.toString().substring(8, 10) + \"/\" + span[0].finishing_date.toString().substring(5, 7) + \"/\" + span[0].finishing_date.toString().substring(0, 4)\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getEstimatedByMaterial\", options).then(response => response.json()).then(async json => {\n      let est = estimatedMaterialData;\n\n      for (let i = 0; i < json.estimated.length; i++) {\n        est[json.estimated[i].id] = json.estimated[i].estimated;\n      }\n\n      await setEstimatedMaterialData(est);\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getMaterials\", options).then(response => response.json()).then(async json => {\n      const materials = json.materials;\n      let mat = [];\n      let matList = [];\n      let matIDList = [];\n\n      for (let i = 0; i < materials.length; i++) {\n        mat.push({\n          \"id\": materials[i].id,\n          \"Material\": materials[i].name\n        });\n        matList.push(materials[i].name);\n        matIDList.push(materials[i].id);\n      }\n\n      await setMaterialsIDList(matIDList);\n      await setMaterials(mat);\n      await setMaterialsList(matList);\n    });\n  }, [updateData]);\n\n  async function addRowMaterials() {\n    let m = materials;\n    m.push({\n      \"id\": \"\",\n      \"Material\": \"\"\n    });\n    await setMaterials(m);\n    await setUpdateRows(!updateRows);\n  }\n\n  async function addRowPiping() {\n    let p = piping;\n    p.push({\n      \"id\": \"\",\n      \"Material\": \"\"\n    });\n    await setPiping(p);\n    await setUpdateRows(!updateRows);\n  }\n\n  async function submitChangesMaterials() {\n    const body = {\n      materials: materials\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitMaterials\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setMaterialsAlert(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function submitChangesPiping() {\n    const body = {\n      piping: piping\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitPipingClass\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setPipingAlert(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function submitManagement() {\n    const body = {\n      span: management\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitProjectSpan\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setSpanAlert(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  async function submitEstimatedForecast(material_id) {\n    const body = {\n      material_id: material_id,\n      estimated: estimatedData[material_id],\n      forecast: forecastData[material_id]\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitEstimatedForecast\", options).then(response => response.json()).then(async json => {\n      if (json.success) {\n        await setSuccess(true);\n        await setUpdateData(!updateData);\n      }\n    });\n  }\n\n  const matSettings = {\n    licenseKey: 'non-commercial-and-evaluation',\n    colWidths: 400 //... other options\n\n  };\n  const pipingSettings = {\n    licenseKey: 'non-commercial-and-evaluation',\n    colWidths: 200 //... other options\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [updateData, updateRows, /*#__PURE__*/_jsxDEV(IdleTimer, {\n      timeout: 1000 * 60 * 15,\n      onIdle: handleOnIdle,\n      debounce: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBarProdCurve, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${spanAlert ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setSpanAlert(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Project week span saved!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${pipingAlert ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setPipingAlert(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Piping classes saved!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${materialsAlert ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setMaterialsAlert(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Materials saved!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${success ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setSuccess(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Changes saved!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back__button\",\n      onClick: () => history.push('/' + process.env.REACT_APP_PROJECT + '/piping'),\n      style: {\n        width: \"175px\",\n        marginLeft: \"100px\",\n        marginTop: \"120px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: BackIcon,\n        alt: \"hold\",\n        className: \"navBar__icon\",\n        style: {\n          marginRight: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 182\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"back__button__text\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 272\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph__container\",\n        children: lineChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"materials__pc__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(HotTable, {\n            data: materials,\n            colHeaders: [\"<b>Material</b>\"],\n            rowHeaders: true,\n            width: \"450\",\n            height: \"200\",\n            settings: matSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"Material\"\n            }],\n            filters: true,\n            dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-sm btn-info\",\n          onClick: () => addRowMaterials(),\n          style: {\n            marginRight: \"5px\",\n            fontSize: \"16px\",\n            width: \"60px\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#338DF1\",\n            marginLeft: \"165px\"\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-sm btn-success\",\n          onClick: () => submitChangesMaterials(),\n          style: {\n            marginRight: \"5px\",\n            fontSize: \"16px\",\n            width: \"60px\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#7BD36D\"\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"hot-app\",\n          style: {\n            marginBottom: \"20px\",\n            marginTop: \"40px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(HotTable, {\n            data: piping,\n            colHeaders: [\"<b>Piping class</b>\", \"<b>Material</b>\"],\n            rowHeaders: true,\n            width: \"500\",\n            height: \"200\",\n            settings: pipingSettings,\n            manualColumnResize: true,\n            manualRowResize: true,\n            columns: [{\n              data: \"PipingClass\"\n            }, {\n              data: \"Material\",\n              type: \"dropdown\",\n              strict: \"true\",\n              source: materialsList\n            }],\n            filters: true,\n            dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-sm btn-info\",\n          onClick: () => addRowPiping(),\n          style: {\n            marginRight: \"5px\",\n            fontSize: \"16px\",\n            width: \"60px\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#338DF1\",\n            marginLeft: \"165px\"\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-sm btn-success\",\n          onClick: () => submitChangesPiping(),\n          style: {\n            marginRight: \"5px\",\n            fontSize: \"16px\",\n            width: \"60px\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#7BD36D\"\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"management__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"materials__title\",\n        children: \"Project Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save__button\",\n        onClick: () => submitManagement(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: SaveIcon,\n          alt: \"save\",\n          className: \"save__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 84\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(HotTable, {\n          data: management,\n          colHeaders: [\"<b>Starting date</b>\", \"<b>Finishing date</b>\"],\n          rowHeaders: true,\n          width: \"500\",\n          height: \"120\",\n          settings: pipingSettings,\n          manualColumnResize: true,\n          manualRowResize: true,\n          columns: [{\n            data: \"Starting date\",\n            type: \"date\"\n          }, {\n            data: \"Finishing date\",\n            type: \"date\"\n          }],\n          filters: true,\n          dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"materials__tables__container\",\n      children: [overallTable, tables]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PITRequests, \"7+P0+LjgW7xp1OZeAegA2YtCwlY=\", false, function () {\n  return [useHistory];\n});\n\n_c = PITRequests;\nexport default PITRequests;\n\nvar _c;\n\n$RefreshReg$(_c, \"PITRequests\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/pipingProduction/pipingProduction.js"],"names":["React","useState","useEffect","HotTable","IdleTimer","useHistory","AlertF","Line","Chart","NavBarProdCurve","PITRequests","history","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","updateData","setUpdateData","updateRows","setUpdateRows","tables","setTables","materials","setMaterials","materialsList","setMaterialsList","materialsIDList","setMaterialsIDList","piping","setPiping","management","setManagement","estimatedData","setEstimatedData","forecastData","setForecastData","estimatedMaterialData","setEstimatedMaterialData","overallTable","setOverallTable","success","setSuccess","spanAlert","setSpanAlert","pipingAlert","setPipingAlert","materialsAlert","setMaterialsAlert","lineChart","setLineChart","document","body","style","zoom","handleOnIdle","user","getItem","options","method","headers","JSON","stringify","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","clear","push","REACT_APP_PROJECT","colors","i","length","piping_id","material","span","starting_date","substring","finishing_date","est","estimated","id","mat","matList","matIDList","name","addRowMaterials","m","addRowPiping","p","submitChangesMaterials","submitChangesPiping","submitManagement","submitEstimatedForecast","material_id","forecast","matSettings","licenseKey","colWidths","pipingSettings","width","marginLeft","marginTop","BackIcon","marginRight","marginBottom","fontSize","borderRadius","backgroundColor","type","strict","source","SaveIcon"],"mappings":"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","sourcesContent":["\r\nimport React, { useState , useEffect} from 'react'\r\nimport { HotTable } from '@handsontable/react';\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\nimport BackIcon from \"../../assets/images/back.svg\"\r\n\r\nimport AlertF from \"../../components/alert/alert\"\r\n\r\nimport './pipingProduction.css'\r\nimport SaveIcon from \"../../assets/images/save.svg\"\r\nimport { Line } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport NavBarProdCurve from '../../components/navBarProdCurve/navBarProdCurve';\r\n//Página de home con el menú para ir a las aplicaciones de isotracker\r\n\r\nconst PITRequests = () =>{\r\n\r\n    const history = useHistory();\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const [updateData, setUpdateData] = useState(false)\r\n    const [updateRows, setUpdateRows] = useState(false)\r\n    const [tables, setTables] = useState([])\r\n    const [materials, setMaterials] = useState()\r\n    const [materialsList, setMaterialsList] = useState([])\r\n    const [materialsIDList, setMaterialsIDList] = useState([])\r\n    const [piping, setPiping] = useState()\r\n    const [management, setManagement] = useState([])\r\n\r\n    const [estimatedData, setEstimatedData] = useState({})\r\n    const [forecastData, setForecastData] = useState({})\r\n    const [estimatedMaterialData, setEstimatedMaterialData] = useState({})\r\n    const [overallTable, setOverallTable] = useState()\r\n\r\n    const [success, setSuccess] = useState(false)\r\n    const [spanAlert, setSpanAlert] = useState(false)\r\n    const [pipingAlert, setPipingAlert] = useState(false)\r\n    const [materialsAlert, setMaterialsAlert] = useState(false)\r\n\r\n    const [lineChart, setLineChart] = useState()\r\n\r\n    document.body.style.zoom = 1\r\n\r\n    function handleOnIdle(){\r\n        const body = {\r\n            user: secureStorage.getItem(\"user\"),\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_PROJECT)\r\n    }\r\n\r\n    useEffect(async() =>{\r\n\r\n        const colors = [\"rgb(0,0,255)\", \"rgb(176,224,230)\", \"rgb(0,191,255)\", \"rgb(0,128,0)\", \"rgb(124,252,0)\", \"rgb(50,205,50)\", \"rgb(255,140,0)\", \"rgb(255,215,0)\", \"rgb(255,165,0)\", \"rgb(255,20,147)\", \"rgb(255,105,180)\", \"rgb(255,192,203)\", \"rgb(112,128,144)\", \"rgb(169,169,169)\", \"rgb(220,220,220)\", \"rgb(128,0,0)\", \"rgb(205,92,92)\", \"rgb(240,128,128)\"]\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getMaterialsPipingClass\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                const materials = json.materials                        \r\n                let piping = []\r\n                for(let i = 0; i < materials.length; i++){\r\n                    piping.push({\"id\": materials[i].piping_id, \"PipingClass\": materials[i].piping, \"Material\": materials[i].material})\r\n                }\r\n                \r\n                await setPiping(piping)\r\n        })\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getProjectSpan\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                const span = json.span\r\n                await setManagement({\"Starting date\": span[0].starting_date.toString().substring(8,10) + \"/\" + span[0].starting_date.toString().substring(5,7) + \"/\" + span[0].starting_date.toString().substring(0,4), \"Finishing date\": span[0].finishing_date.toString().substring(8,10) + \"/\" + span[0].finishing_date.toString().substring(5,7) + \"/\" + span[0].finishing_date.toString().substring(0,4)})\r\n            })\r\n\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getEstimatedByMaterial\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                let est = estimatedMaterialData\r\n                for(let i = 0; i < json.estimated.length; i++){\r\n                    est[json.estimated[i].id] = json.estimated[i].estimated\r\n                }\r\n                await setEstimatedMaterialData(est)\r\n            })\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getMaterials\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                const materials = json.materials\r\n                let mat = []\r\n                let matList = []\r\n                let matIDList = []\r\n                for(let i = 0; i < materials.length; i++){\r\n                    mat.push({\"id\": materials[i].id, \"Material\": materials[i].name})\r\n                    matList.push(materials[i].name)\r\n                    matIDList.push(materials[i].id)\r\n                }\r\n                await setMaterialsIDList(matIDList)\r\n                await setMaterials(mat)\r\n                await setMaterialsList(matList)\r\n            })\r\n\r\n        \r\n\r\n\r\n    }, [updateData])\r\n\r\n    async function addRowMaterials(){\r\n        let m = materials\r\n        m.push({\"id\": \"\", \"Material\": \"\"})\r\n        await setMaterials(m)\r\n        await setUpdateRows(!updateRows)\r\n    }\r\n\r\n    async function addRowPiping(){\r\n        let p = piping\r\n        p.push({\"id\": \"\", \"Material\": \"\"})\r\n        await setPiping(p)\r\n        await setUpdateRows(!updateRows)\r\n    }\r\n\r\n    async function submitChangesMaterials(){\r\n        const body ={\r\n            materials : materials\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitMaterials\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setMaterialsAlert(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function submitChangesPiping(){\r\n        const body ={\r\n            piping : piping\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitPipingClass\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setPipingAlert(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function submitManagement(){\r\n        const body ={\r\n            span : management\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitProjectSpan\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setSpanAlert(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function submitEstimatedForecast(material_id){\r\n        const body ={\r\n            material_id : material_id,\r\n            estimated: estimatedData[material_id],\r\n            forecast: forecastData[material_id]\r\n        }\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitEstimatedForecast\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            if(json.success){\r\n                await setSuccess(true)\r\n                await setUpdateData(!updateData)\r\n            }\r\n        })        \r\n    }\r\n    \r\n    const matSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 400,\r\n        //... other options\r\n    }\r\n\r\n    const pipingSettings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 200,\r\n        //... other options\r\n    }\r\n    \r\n    return(\r\n\r\n        <body>\r\n            {updateData}\r\n            {updateRows}\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBarProdCurve/>\r\n            <div className={`alert alert-success ${spanAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setSpanAlert(false)}>\r\n                <AlertF type=\"success\" text=\"Project week span saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div className={`alert alert-success ${pipingAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setPipingAlert(false)}>\r\n                <AlertF type=\"success\" text=\"Piping classes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div className={`alert alert-success ${materialsAlert ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setMaterialsAlert(false)}>\r\n                <AlertF type=\"success\" text=\"Materials saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div className={`alert alert-success ${success ? 'alert-shown' : 'alert-hidden'}`} onTransitionEnd={() => setSuccess(false)}>\r\n                <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <button className=\"back__button\" onClick={()=>history.push('/'+process.env.REACT_APP_PROJECT+'/piping')} style={{width:\"175px\", marginLeft:\"100px\", marginTop: \"120px\"}}><img src={BackIcon} alt=\"hold\" className=\"navBar__icon\" style={{marginRight:\"0px\"}}></img><p className=\"back__button__text\">Back</p></button>\r\n            <div className=\"top__container\">\r\n                <div className=\"graph__container\">\r\n                {lineChart}\r\n                </div>\r\n                <div className=\"materials__pc__container\">\r\n                <div id=\"hot-app\" style={{marginBottom:\"20px\"}}>\r\n                    <HotTable\r\n                        data={materials}\r\n                        colHeaders = {[\"<b>Material</b>\"]}\r\n                        rowHeaders={true}\r\n                        width=\"450\"\r\n                        height=\"200\"\r\n                        settings={matSettings} \r\n                        manualColumnResize={true}\r\n                        manualRowResize={true}\r\n                        columns= {[{ data: \"Material\"}]}\r\n                        filters={true}\r\n                        dropdownMenu= {[\r\n                            'make_read_only',\r\n                            '---------',\r\n                            'alignment',\r\n                            '---------',\r\n                            'filter_by_condition',\r\n                            '---------',\r\n                            'filter_operators',\r\n                            '---------',\r\n                            'filter_by_condition2',\r\n                            '---------',\r\n                            'filter_by_value',\r\n                            '---------',\r\n                            'filter_action_bar',\r\n                        ]}\r\n                    />\r\n                    </div>\r\n                        <button class=\"btn btn-sm btn-info\" onClick={() => addRowMaterials()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\", marginLeft:\"165px\"}}>Add</button>\r\n                        <button class=\"btn btn-sm btn-success\" onClick={() => submitChangesMaterials()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#7BD36D\"}}>Save</button>\r\n                    <div id=\"hot-app\" style={{marginBottom:\"20px\", marginTop:\"40px\"}}>\r\n                    <HotTable\r\n                        data={piping}\r\n                        colHeaders = {[\"<b>Piping class</b>\", \"<b>Material</b>\"]}\r\n                        rowHeaders={true}\r\n                        width=\"500\"\r\n                        height=\"200\"\r\n                        settings={pipingSettings} \r\n                        manualColumnResize={true}\r\n                        manualRowResize={true}\r\n                        columns= {[{ data: \"PipingClass\"}, { data: \"Material\", type:\"dropdown\",strict:\"true\", source: materialsList}]}\r\n                        filters={true}\r\n                        dropdownMenu= {[\r\n                            'make_read_only',\r\n                            '---------',\r\n                            'alignment',\r\n                            '---------',\r\n                            'filter_by_condition',\r\n                            '---------',\r\n                            'filter_operators',\r\n                            '---------',\r\n                            'filter_by_condition2',\r\n                            '---------',\r\n                            'filter_by_value',\r\n                            '---------',\r\n                            'filter_action_bar',\r\n                        ]}\r\n                    />\r\n                    </div>\r\n                    <button class=\"btn btn-sm btn-info\" onClick={() => addRowPiping()} style={{marginRight:\"5px\", fontSize:\"16px\",width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#338DF1\", marginLeft:\"165px\"}}>Add</button>\r\n                    <button class=\"btn btn-sm btn-success\" onClick={() => submitChangesPiping()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\", backgroundColor:\"#7BD36D\"}}>Save</button>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"management__container\">\r\n                <text className=\"materials__title\">Project Management</text>\r\n                <button className=\"save__button\" onClick={()=> submitManagement()}><img src={SaveIcon} alt=\"save\" className=\"save__icon\"></img></button>\r\n \r\n                <div style={{marginTop:\"10px\"}}>\r\n                    <HotTable\r\n                        data={management}\r\n                        colHeaders = {[\"<b>Starting date</b>\", \"<b>Finishing date</b>\"]}\r\n                        rowHeaders={true}\r\n                        width=\"500\"\r\n                        height=\"120\"\r\n                        settings={pipingSettings} \r\n                        manualColumnResize={true}\r\n                        manualRowResize={true}\r\n                        columns= {[{ data: \"Starting date\", type:\"date\"}, { data: \"Finishing date\", type:\"date\"}]}\r\n                        filters={true}\r\n                        dropdownMenu= {[\r\n                            'make_read_only',\r\n                            '---------',\r\n                            'alignment',\r\n                            '---------',\r\n                            'filter_by_condition',\r\n                            '---------',\r\n                            'filter_operators',\r\n                            '---------',\r\n                            'filter_by_condition2',\r\n                            '---------',\r\n                            'filter_by_value',\r\n                            '---------',\r\n                            'filter_action_bar',\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"materials__tables__container\">\r\n                {overallTable}\r\n                {tables}\r\n            </div>\r\n        </body>\r\n    );\r\n};\r\n\r\nexport default PITRequests;"]},"metadata":{},"sourceType":"module"}