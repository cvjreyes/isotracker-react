{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\progressPlot\\\\progressPlot.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n/*\r\nconst data = [\r\n\t{\r\n\t  name: 'Page A',\r\n\t  uv: 4000,\r\n\t  pv: 2400,\r\n\t  amt: 2400,\r\n\t},\r\n\t{\r\n\t  name: 'Page B',\r\n\t  uv: 3000,\r\n\t  pv: 1398,\r\n\t  amt: 2210,\r\n\t},\r\n\t{\r\n\t  name: 'Page C',\r\n\t  uv: 2000,\r\n\t  pv: 9800,\r\n\t  amt: 2290,\r\n\t},\r\n\t{\r\n\t  name: 'Page D',\r\n\t  uv: 2780,\r\n\t  pv: 3908,\r\n\t  amt: 2000,\r\n\t},\r\n\t{\r\n\t  name: 'Page E',\r\n\t  uv: 1890,\r\n\t  pv: 4800,\r\n\t  amt: 2181,\r\n\t},\r\n\t{\r\n\t  name: 'Page F',\r\n\t  uv: 2390,\r\n\t  pv: 3800,\r\n\t  amt: 2500,\r\n\t},\r\n\t{\r\n\t  name: 'Page G',\r\n\t  uv: 3490,\r\n\t  pv: 4300,\r\n\t  amt: 2100,\r\n\t},\r\n  ];\r\n  */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ProgressPlot extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/gpipes\", options).then(response => response.json()).then(async json => {\n      let weeks = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        weeks.push({\n          name: \"WEEK \" + json.rows[i].week,\n          estimated: json.rows[i].estimated,\n          progress: json.rows[i].progress\n        });\n      }\n\n      await this.setState({\n        data: weeks\n      });\n      console.log(this.state.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"80%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 500,\n        height: 300,\n        data: this.state.data,\n        margin: {\n          top: 25,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"progress\",\n          stroke: \"#8884d8\",\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"estimated\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }, this);\n  }\n\n}\nProgressPlot.demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/progressPlot/progressPlot.js"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ProgressPlot","PureComponent","state","data","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","weeks","i","rows","length","push","name","week","estimated","progress","setState","console","log","render","top","right","left","bottom","r","demoUrl"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n/*\r\nconst data = [\r\n\t{\r\n\t  name: 'Page A',\r\n\t  uv: 4000,\r\n\t  pv: 2400,\r\n\t  amt: 2400,\r\n\t},\r\n\t{\r\n\t  name: 'Page B',\r\n\t  uv: 3000,\r\n\t  pv: 1398,\r\n\t  amt: 2210,\r\n\t},\r\n\t{\r\n\t  name: 'Page C',\r\n\t  uv: 2000,\r\n\t  pv: 9800,\r\n\t  amt: 2290,\r\n\t},\r\n\t{\r\n\t  name: 'Page D',\r\n\t  uv: 2780,\r\n\t  pv: 3908,\r\n\t  amt: 2000,\r\n\t},\r\n\t{\r\n\t  name: 'Page E',\r\n\t  uv: 1890,\r\n\t  pv: 4800,\r\n\t  amt: 2181,\r\n\t},\r\n\t{\r\n\t  name: 'Page F',\r\n\t  uv: 2390,\r\n\t  pv: 3800,\r\n\t  amt: 2500,\r\n\t},\r\n\t{\r\n\t  name: 'Page G',\r\n\t  uv: 3490,\r\n\t  pv: 4300,\r\n\t  amt: 2100,\r\n\t},\r\n  ];\r\n  */\r\n  export default class ProgressPlot extends React.PureComponent {\r\n\tstatic demoUrl = 'https://codesandbox.io/s/simple-line-chart-kec3v';\r\n\t\r\n\tstate = {\r\n\t\tdata: []\r\n\t  };\r\n\r\n\r\n\tasync componentDidMount (){\r\n\r\n\t\tconst options = {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/gpipes\", options)\r\n\t\t.then(response => response.json())\r\n\t\t.then(async json=>{\r\n\t\t\tlet weeks = []\r\n\t\t\tfor(let i = 0; i < json.rows.length; i++){\r\n\t\t\t\tweeks.push({name: \"WEEK \"+json.rows[i].week, estimated: json.rows[i].estimated, progress: json.rows[i].progress})\r\n\t\t\t}\r\n\t\t\tawait this.setState({data: weeks})\r\n\t\t\tconsole.log(this.state.data)\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<ResponsiveContainer width=\"100%\" height=\"80%\">\r\n\t\t  <LineChart\r\n\t\t\twidth={500}\r\n\t\t\theight={300}\r\n\t\t\tdata={this.state.data}\r\n\t\t\tmargin={{\r\n\t\t\t  top: 25,\r\n\t\t\t  right: 30,\r\n\t\t\t  left: 20,\r\n\t\t\t  bottom: 5,\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t<XAxis dataKey=\"name\" />\r\n\t\t\t<YAxis />\r\n\t\t\t<Tooltip />\r\n\t\t\t<Legend />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"progress\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n\t\t\t<Line type=\"monotone\" dataKey=\"estimated\" stroke=\"#82ca9d\" />\r\n\t\t  </LineChart>\r\n\t\t</ResponsiveContainer>\r\n\t  );\r\n\t}\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}