{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\statusDataTable\\\\statusDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport './statusDataTable.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: record => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name\n  })\n};\n\nclass StatusDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      weights: [],\n      role: this.props.role\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }, this),\n      onFilter: (value, record) => this.state.searchedColumn === \"id\" ? record.id.props.children ? record.id.props.children.toString().toLowerCase().includes(value.toLowerCase()) : '' : record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => text != null ? text.props && text.type !== \"div\" ? /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => this.getMaster(text.props.children),\n        children: text.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }, this) : this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text ? text : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }, this) : text : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n  }\n\n  async componentDidMount() {\n    if (process.env.REACT_APP_PROGRESS === \"1\") {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(\"http://localhost:5000/getMaxProgress\", options).then(response => response.json()).then(json => {\n        this.setState({\n          weights: [json.weights[0].weight, json.weights[1].weight, json.weights[2].weight]\n        });\n      });\n      fetch(\"http://localhost:5000/api/statusFiles\", options).then(response => response.json()).then(json => {\n        console.log(this.state.weights);\n        var rows = [];\n        var row = null;\n\n        for (let i = 0; i < json.rows.length; i++) {\n          if (json.rows[i].tpipes_id) {\n            row = {\n              key: i,\n              status: json.rows[i].to,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 64\n              }, this),\n              MAXWeight: this.state.weights[json.rows[i].tpipes_id - 1],\n              realProgress: (json.rows[i].realprogress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].realprogress + \")\",\n              progress: (json.rows[i].progress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].progress + \")\"\n            };\n          } else {\n            row = {\n              key: i,\n              status: json.rows[i].to,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 64\n              }, this)\n            };\n          }\n\n          rows.push(row);\n        }\n\n        this.setState({\n          data: rows,\n          role: this.props.role\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"http://localhost:5000/api/statusFiles\", options).then(response => response.json()).then(json => {\n        console.log(this.state.weights);\n        var rows = [];\n        var row = null;\n\n        for (let i = 0; i < json.rows.length; i++) {\n          if (json.rows[i].tpipes_id) {\n            row = {\n              key: i,\n              status: json.rows[i].to,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 64\n              }, this),\n              MAXWeight: this.state.weights[json.rows[i].tpipes_id - 1],\n              realProgress: (json.rows[i].realprogress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].realprogress + \")\",\n              progress: (json.rows[i].progress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].progress + \")\"\n            };\n          } else {\n            row = {\n              key: i,\n              status: json.rows[i].to,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 64\n              }, this)\n            };\n          }\n\n          rows.push(row);\n        }\n\n        this.setState({\n          data: rows,\n          role: this.props.role\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(\"http://localhost:5000/getMaxProgress\", options).then(response => response.json()).then(json => {\n        this.setState({\n          weights: [json.weights[0].weight, json.weights[1].weight, json.weights[2].weight]\n        });\n      });\n      fetch(\"http://localhost:5000/api/statusFiles\", options).then(response => response.json()).then(json => {\n        console.log(json);\n        var rows = [];\n        var row = null;\n\n        for (let i = 0; i < json.rows.length; i++) {\n          if (json.rows[i].tpipes_id) {\n            row = {\n              key: i,\n              status: json.rows[i].to,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 64\n              }, this),\n              MAXWeight: this.state.weights[json.rows[i].tpipes_id - 1],\n              realProgress: (json.rows[i].realprogress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].realprogress + \")\",\n              progress: (json.rows[i].progress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].progress + \")\"\n            };\n          } else {\n            row = {\n              key: i,\n              status: json.rows[i].to,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 64\n              }, this)\n            };\n          }\n\n          rows.push(row);\n        }\n\n        this.setState({\n          data: rows,\n          role: this.props.role\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  getMaster(fileName) {\n    console.log(fileName);\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/pdf\"\n      }\n    };\n    fetch(\"http://localhost:5000/getMaster/\" + fileName, options).then(res => res.blob()).then(response => {\n      console.log(response);\n      const file = new Blob([response], {\n        type: \"application/pdf\"\n      }); //Build a URL from the file\n\n      const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n      window.open(fileURL);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 20\n      }, this),\n      dataIndex: 'status',\n      key: 'status',\n      width: '20%',\n      ...this.getColumnSearchProps('status'),\n      sorter: {\n        compare: (a, b) => {\n          return a.status.localeCompare(b.status);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"ISO ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'id',\n      key: 'id',\n      width: '20%',\n      ...this.getColumnSearchProps('id'),\n      sorter: {\n        compare: (a, b) => {\n          return a.id.localeCompare(b.id);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Condition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'condition',\n      key: 'condition',\n      ...this.getColumnSearchProps('condition'),\n      sorter: {\n        compare: (a, b) => {\n          return a.condition.localeCompare(b.condition);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"MAX Weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'MAXWeight',\n      key: 'MAXWeight',\n      ...this.getColumnSearchProps('MAXWeight'),\n      sorter: {\n        compare: (a, b) => a.MAXWeight - b.MAXWeight\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'progress',\n      key: 'progress',\n      ...this.getColumnSearchProps('progress'),\n      sorter: {\n        compare: (a, b) => a.progress - b.progress\n      }\n    }];\n\n    if (this.state.role === \"SpecialityLead\") {\n      columns.push({\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable__header__text\",\n          children: \"Real Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 16\n        }, this),\n        dataIndex: 'realProgress',\n        key: 'realProgress',\n        ...this.getColumnSearchProps('realProgress'),\n        sorter: {\n          compare: (a, b) => a.realProgress - b.realProgress\n        }\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          rowSelection: {\n            type: 'checkbox',\n            ...rowSelection\n          },\n          columns: columns,\n          dataSource: this.state.data,\n          pagination: {\n            pageSize: this.props.pagination\n          },\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            bottom: 25,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Total elements: \", this.state.data.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StatusDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/statusDataTable/statusDataTable.js"],"names":["React","Table","Input","Button","Space","Highlighter","SearchOutlined","Link","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","name","StatusDataTable","Component","state","searchText","searchedColumn","data","weights","role","props","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","id","children","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","type","getMaster","backgroundColor","componentDidMount","process","env","REACT_APP_PROGRESS","options","method","headers","fetch","then","response","json","weight","rows","row","i","length","tpipes_id","key","status","to","filename","MAXWeight","realProgress","realprogress","toFixed","progress","push","catch","error","componentDidUpdate","prevProps","prevState","fileName","res","blob","file","Blob","fileURL","URL","createObjectURL","window","open","columns","title","sorter","compare","a","b","localeCompare","condition","pageSize","pagination","position","bottom","left"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport './statusDataTable.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\nclass StatusDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    weights: [],\r\n    role: this.props.role\r\n  };\r\n  \r\n\r\n  async componentDidMount(){\r\n\r\n    if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n      }\r\n      await fetch(\"http://localhost:5000/getMaxProgress\", options)\r\n      .then(response => response.json())\r\n      .then(json =>{\r\n        this.setState({\r\n          weights: [json.weights[0].weight,json.weights[1].weight,json.weights[2].weight]\r\n        })\r\n      })\r\n\r\n      fetch(\"http://localhost:5000/api/statusFiles\", options)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            console.log(this.state.weights)\r\n              var rows = []\r\n              var row = null;\r\n              for(let i = 0; i < json.rows.length; i++){\r\n                  if(json.rows[i].tpipes_id){\r\n                    row = {key:i, status: json.rows[i].to, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link>, MAXWeight: this.state.weights[json.rows[i].tpipes_id - 1],realProgress: (json.rows[i].realprogress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].realprogress + \")\" , progress: (json.rows[i].progress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].progress + \")\"}\r\n                  }else{\r\n                    row = {key:i, status: json.rows[i].to, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link>}\r\n                  }\r\n                        \r\n                rows.push(row)\r\n              }\r\n                          \r\n              this.setState({data : rows, role: this.props.role});\r\n\r\n              }\r\n          )\r\n          .catch(error => {\r\n              console.log(error);\r\n          })\r\n    }else{\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n      }\r\n      fetch(\"http://localhost:5000/api/statusFiles\", options)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            console.log(this.state.weights)\r\n              var rows = []\r\n              var row = null;\r\n              for(let i = 0; i < json.rows.length; i++){\r\n                  if(json.rows[i].tpipes_id){\r\n                    row = {key:i, status: json.rows[i].to, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link>, MAXWeight: this.state.weights[json.rows[i].tpipes_id - 1],realProgress: (json.rows[i].realprogress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].realprogress + \")\" , progress: (json.rows[i].progress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].progress + \")\"}\r\n                  }else{\r\n                    row = {key:i, status: json.rows[i].to, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link>}\r\n                  }\r\n                        \r\n                rows.push(row)\r\n              }\r\n                          \r\n              this.setState({data : rows, role: this.props.role});\r\n\r\n              }\r\n          )\r\n          .catch(error => {\r\n              console.log(error);\r\n          })\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState){\r\n\r\n    if(prevProps !== this.props){\r\n\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n      }\r\n      await fetch(\"http://localhost:5000/getMaxProgress\", options)\r\n      .then(response => response.json())\r\n      .then(json =>{\r\n        this.setState({\r\n          weights: [json.weights[0].weight,json.weights[1].weight,json.weights[2].weight]\r\n        })\r\n      })\r\n\r\n      fetch(\"http://localhost:5000/api/statusFiles\", options)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n              console.log(json)\r\n              var rows = []\r\n              var row = null;\r\n              for(let i = 0; i < json.rows.length; i++){\r\n                  if(json.rows[i].tpipes_id){\r\n                    row = {key:i, status: json.rows[i].to, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link>, MAXWeight: this.state.weights[json.rows[i].tpipes_id - 1],realProgress: (json.rows[i].realprogress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].realprogress + \")\" , progress: (json.rows[i].progress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].progress + \")\"}\r\n                  }else{\r\n                    row = {key:i, status: json.rows[i].to, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link>}\r\n                  }\r\n                        \r\n                rows.push(row)\r\n              }\r\n                          \r\n              this.setState({data : rows, role: this.props.role});\r\n\r\n              }\r\n          )\r\n          .catch(error => {\r\n              console.log(error);\r\n          })\r\n    }\r\n  }\r\n\r\n  getMaster(fileName){\r\n\r\n    console.log(fileName)\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n          \"Content-Type\": \"application/pdf\"\r\n      }\r\n    }\r\n    fetch(\"http://localhost:5000/getMaster/\"+fileName, options)\r\n    .then(res => res.blob())\r\n    .then(response => {\r\n      console.log(response)\r\n      const file = new Blob([response], {\r\n        type: \"application/pdf\"\r\n      });\r\n      //Build a URL from the file\r\n      const fileURL = URL.createObjectURL(file);\r\n      //Open the URL on new Window\r\n      window.open(fileURL);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      this.state.searchedColumn === \"id\" ? (\r\n        record.id.props.children\r\n          ? record.id.props.children.toString().toLowerCase().includes(value.toLowerCase())\r\n          : ''\r\n        ) : (\r\n          record[dataIndex]\r\n            ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n            : ''\r\n        ),\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n    text != null ? (\r\n    text.props && text.type !== \"div\" ? (\r\n      <Link onClick={() => this.getMaster(text.props.children)}>{text.props.children}</Link>\r\n    ) : this.state.searchedColumn === dataIndex ? (\r\n      <Highlighter\r\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n        searchWords={[this.state.searchText]}\r\n        autoEscape\r\n        textToHighlight={text ? text : ''}\r\n      />\r\n    ) : (\r\n      text\r\n    )\r\n    ) : (\r\n      text\r\n    )\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n\r\n  render() {\r\n    const columns = [\r\n        {\r\n            title: <div className=\"dataTable__header__text\">Status</div>,\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: '20%',\r\n            ...this.getColumnSearchProps('status'),\r\n            sorter: {\r\n                compare: (a, b) => { return a.status.localeCompare(b.status)},\r\n            },\r\n        },\r\n          \r\n      {\r\n        title: <center className=\"dataTable__header__text\">ISO ID</center>,\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('id'),\r\n        sorter:{\r\n            compare: (a, b) => { return a.id.localeCompare(b.id)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Condition</div>,\r\n        dataIndex: 'condition',\r\n        key: 'condition',\r\n        ...this.getColumnSearchProps('condition'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.condition.localeCompare(b.condition)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">MAX Weight</div>,\r\n        dataIndex: 'MAXWeight',\r\n        key: 'MAXWeight',\r\n        ...this.getColumnSearchProps('MAXWeight'),\r\n        sorter: {\r\n            compare: (a, b) => a.MAXWeight - b.MAXWeight,\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Progress</div>,\r\n        dataIndex: 'progress',\r\n        key: 'progress',\r\n        ...this.getColumnSearchProps('progress'),\r\n        sorter: {\r\n          compare: (a, b) => a.progress - b.progress,\r\n        },\r\n      },\r\n    ];\r\n\r\n    if(this.state.role === \"SpecialityLead\"){\r\n      columns.push({\r\n        title: <div className=\"dataTable__header__text\">Real Progress</div>,\r\n        dataIndex: 'realProgress',\r\n        key: 'realProgress',\r\n        ...this.getColumnSearchProps('realProgress'),\r\n        sorter: {\r\n            compare: (a, b) => a.realProgress - b.realProgress,\r\n        },\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} columns={columns} dataSource={this.state.data} pagination={{ pageSize: this.props.pagination  }} size=\"small\"/>\r\n          <div style={{position: \"absolute\", bottom:25, left:0}}>\r\n            <b>Total elements: {this.state.data.length}</b>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatusDataTable;"]},"metadata":{},"sourceType":"module"}