{"ast":null,"code":"import { defineGetter } from \"../../../../../helpers/object.mjs\";\nvar MIXIN_NAME = 'stickyRowsTop';\n/**\r\n * Mixin for the subclasses of `Table` with implementations of\r\n * helper methods that are related to rows.\r\n * This mixin is meant to be applied in the subclasses of `Table`\r\n * that use sticky rendering of the top rows in the vertical axis.\r\n *\r\n * @type {object}\r\n */\n\nvar stickyRowsTop = {\n  /**\r\n   * Get the source index of the first rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstRenderedRow: function getFirstRenderedRow() {\n    var totalRows = this.wot.getSetting('totalRows');\n\n    if (totalRows === 0) {\n      return -1;\n    }\n\n    return 0;\n  },\n\n  /**\r\n   * Get the source index of the first row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   */\n  getFirstVisibleRow: function getFirstVisibleRow() {\n    return this.getFirstRenderedRow();\n  },\n\n  /**\r\n   * Get the source index of the last rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastRenderedRow: function getLastRenderedRow() {\n    return this.getRenderedRowsCount() - 1;\n  },\n\n  /**\r\n   * Get the source index of the last row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   */\n  getLastVisibleRow: function getLastVisibleRow() {\n    return this.getLastRenderedRow();\n  },\n\n  /**\r\n   * Get the number of rendered rows.\r\n   *\r\n   * @returns {number}\r\n   */\n  getRenderedRowsCount: function getRenderedRowsCount() {\n    var totalRows = this.wot.getSetting('totalRows');\n    return Math.min(this.wot.getSetting('fixedRowsTop'), totalRows);\n  },\n\n  /**\r\n   * Get the number of fully visible rows in the viewport.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   */\n  getVisibleRowsCount: function getVisibleRowsCount() {\n    return this.getRenderedRowsCount();\n  }\n};\ndefineGetter(stickyRowsTop, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default stickyRowsTop;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/3rdparty/walkontable/src/table/mixin/stickyRowsTop.mjs"],"names":["defineGetter","MIXIN_NAME","stickyRowsTop","getFirstRenderedRow","totalRows","wot","getSetting","getFirstVisibleRow","getLastRenderedRow","getRenderedRowsCount","getLastVisibleRow","Math","min","getVisibleRowsCount","writable","enumerable"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mCAA7B;AACA,IAAIC,UAAU,GAAG,eAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GAAG;AAClB;AACF;AACA;AACA;AACA;AACEC,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClD,QAAIC,SAAS,GAAG,KAAKC,GAAL,CAASC,UAAT,CAAoB,WAApB,CAAhB;;AAEA,QAAIF,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAO,CAAC,CAAR;AACD;;AAED,WAAO,CAAP;AACD,GAdiB;;AAgBlB;AACF;AACA;AACA;AACA;AACA;AACEG,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,WAAO,KAAKJ,mBAAL,EAAP;AACD,GAxBiB;;AA0BlB;AACF;AACA;AACA;AACA;AACEK,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,WAAO,KAAKC,oBAAL,KAA8B,CAArC;AACD,GAjCiB;;AAmClB;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C,WAAO,KAAKF,kBAAL,EAAP;AACD,GA3CiB;;AA6ClB;AACF;AACA;AACA;AACA;AACEC,EAAAA,oBAAoB,EAAE,SAASA,oBAAT,GAAgC;AACpD,QAAIL,SAAS,GAAG,KAAKC,GAAL,CAASC,UAAT,CAAoB,WAApB,CAAhB;AACA,WAAOK,IAAI,CAACC,GAAL,CAAS,KAAKP,GAAL,CAASC,UAAT,CAAoB,cAApB,CAAT,EAA8CF,SAA9C,CAAP;AACD,GArDiB;;AAuDlB;AACF;AACA;AACA;AACA;AACA;AACES,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClD,WAAO,KAAKJ,oBAAL,EAAP;AACD;AA/DiB,CAApB;AAiEAT,YAAY,CAACE,aAAD,EAAgB,YAAhB,EAA8BD,UAA9B,EAA0C;AACpDa,EAAAA,QAAQ,EAAE,KAD0C;AAEpDC,EAAAA,UAAU,EAAE;AAFwC,CAA1C,CAAZ;AAIA,eAAeb,aAAf","sourcesContent":["import { defineGetter } from \"../../../../../helpers/object.mjs\";\r\nvar MIXIN_NAME = 'stickyRowsTop';\r\n/**\r\n * Mixin for the subclasses of `Table` with implementations of\r\n * helper methods that are related to rows.\r\n * This mixin is meant to be applied in the subclasses of `Table`\r\n * that use sticky rendering of the top rows in the vertical axis.\r\n *\r\n * @type {object}\r\n */\r\n\r\nvar stickyRowsTop = {\r\n  /**\r\n   * Get the source index of the first rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getFirstRenderedRow: function getFirstRenderedRow() {\r\n    var totalRows = this.wot.getSetting('totalRows');\r\n\r\n    if (totalRows === 0) {\r\n      return -1;\r\n    }\r\n\r\n    return 0;\r\n  },\r\n\r\n  /**\r\n   * Get the source index of the first row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getFirstVisibleRow: function getFirstVisibleRow() {\r\n    return this.getFirstRenderedRow();\r\n  },\r\n\r\n  /**\r\n   * Get the source index of the last rendered row. If no rows are rendered, returns an error code: -1.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getLastRenderedRow: function getLastRenderedRow() {\r\n    return this.getRenderedRowsCount() - 1;\r\n  },\r\n\r\n  /**\r\n   * Get the source index of the last row fully visible in the viewport. If no rows are fully visible, returns an error code: -1.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getLastVisibleRow: function getLastVisibleRow() {\r\n    return this.getLastRenderedRow();\r\n  },\r\n\r\n  /**\r\n   * Get the number of rendered rows.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getRenderedRowsCount: function getRenderedRowsCount() {\r\n    var totalRows = this.wot.getSetting('totalRows');\r\n    return Math.min(this.wot.getSetting('fixedRowsTop'), totalRows);\r\n  },\r\n\r\n  /**\r\n   * Get the number of fully visible rows in the viewport.\r\n   * Assumes that all rendered rows are fully visible.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getVisibleRowsCount: function getVisibleRowsCount() {\r\n    return this.getRenderedRowsCount();\r\n  }\r\n};\r\ndefineGetter(stickyRowsTop, 'MIXIN_NAME', MIXIN_NAME, {\r\n  writable: false,\r\n  enumerable: false\r\n});\r\nexport default stickyRowsTop;"]},"metadata":{},"sourceType":"module"}