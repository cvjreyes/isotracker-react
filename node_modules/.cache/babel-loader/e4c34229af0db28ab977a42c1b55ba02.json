{"ast":null,"code":"import { align, getAlignmentClasses, checkSelectionConsistency, markLabelAsSelected } from \"../utils.mjs\";\nimport { KEY as SEPARATOR } from \"./separator.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nexport var KEY = 'alignment';\n/**\r\n * @returns {object}\r\n */\n\nexport default function alignmentItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT);\n    },\n    disabled: function disabled() {\n      if (this.countRows() === 0 || this.countCols() === 0) {\n        return true;\n      }\n\n      return !(this.getSelectedRange() && !this.selection.isSelectedByCorner());\n    },\n    submenu: {\n      items: [{\n        key: \"\".concat(KEY, \":left\"),\n        name: function name() {\n          var _this = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_LEFT);\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\n            var className = _this.getCellMeta(row, col).className;\n\n            if (className && className.indexOf('htLeft') !== -1) {\n              return true;\n            }\n          });\n\n          if (hasClass) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          var _this2 = this;\n\n          var selectedRange = this.getSelectedRange();\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\n            return _this2.getCellMeta(row, col).className;\n          });\n          var type = 'horizontal';\n          var alignment = 'htLeft';\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\n          align(selectedRange, type, alignment, function (row, col) {\n            return _this2.getCellMeta(row, col);\n          }, function (row, col, key, value) {\n            return _this2.setCellMeta(row, col, key, value);\n          });\n          this.render();\n        },\n        disabled: false\n      }, {\n        key: \"\".concat(KEY, \":center\"),\n        name: function name() {\n          var _this3 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_CENTER);\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\n            var className = _this3.getCellMeta(row, col).className;\n\n            if (className && className.indexOf('htCenter') !== -1) {\n              return true;\n            }\n          });\n\n          if (hasClass) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          var _this4 = this;\n\n          var selectedRange = this.getSelectedRange();\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\n            return _this4.getCellMeta(row, col).className;\n          });\n          var type = 'horizontal';\n          var alignment = 'htCenter';\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\n          align(selectedRange, type, alignment, function (row, col) {\n            return _this4.getCellMeta(row, col);\n          }, function (row, col, key, value) {\n            return _this4.setCellMeta(row, col, key, value);\n          });\n          this.render();\n        },\n        disabled: false\n      }, {\n        key: \"\".concat(KEY, \":right\"),\n        name: function name() {\n          var _this5 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_RIGHT);\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\n            var className = _this5.getCellMeta(row, col).className;\n\n            if (className && className.indexOf('htRight') !== -1) {\n              return true;\n            }\n          });\n\n          if (hasClass) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          var _this6 = this;\n\n          var selectedRange = this.getSelectedRange();\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\n            return _this6.getCellMeta(row, col).className;\n          });\n          var type = 'horizontal';\n          var alignment = 'htRight';\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\n          align(selectedRange, type, alignment, function (row, col) {\n            return _this6.getCellMeta(row, col);\n          }, function (row, col, key, value) {\n            return _this6.setCellMeta(row, col, key, value);\n          });\n          this.render();\n        },\n        disabled: false\n      }, {\n        key: \"\".concat(KEY, \":justify\"),\n        name: function name() {\n          var _this7 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_JUSTIFY);\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\n            var className = _this7.getCellMeta(row, col).className;\n\n            if (className && className.indexOf('htJustify') !== -1) {\n              return true;\n            }\n          });\n\n          if (hasClass) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          var _this8 = this;\n\n          var selectedRange = this.getSelectedRange();\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\n            return _this8.getCellMeta(row, col).className;\n          });\n          var type = 'horizontal';\n          var alignment = 'htJustify';\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\n          align(selectedRange, type, alignment, function (row, col) {\n            return _this8.getCellMeta(row, col);\n          }, function (row, col, key, value) {\n            return _this8.setCellMeta(row, col, key, value);\n          });\n          this.render();\n        },\n        disabled: false\n      }, {\n        name: SEPARATOR\n      }, {\n        key: \"\".concat(KEY, \":top\"),\n        name: function name() {\n          var _this9 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_TOP);\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\n            var className = _this9.getCellMeta(row, col).className;\n\n            if (className && className.indexOf('htTop') !== -1) {\n              return true;\n            }\n          });\n\n          if (hasClass) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          var _this10 = this;\n\n          var selectedRange = this.getSelectedRange();\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\n            return _this10.getCellMeta(row, col).className;\n          });\n          var type = 'vertical';\n          var alignment = 'htTop';\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\n          align(selectedRange, type, alignment, function (row, col) {\n            return _this10.getCellMeta(row, col);\n          }, function (row, col, key, value) {\n            return _this10.setCellMeta(row, col, key, value);\n          });\n          this.render();\n        },\n        disabled: false\n      }, {\n        key: \"\".concat(KEY, \":middle\"),\n        name: function name() {\n          var _this11 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_MIDDLE);\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\n            var className = _this11.getCellMeta(row, col).className;\n\n            if (className && className.indexOf('htMiddle') !== -1) {\n              return true;\n            }\n          });\n\n          if (hasClass) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          var _this12 = this;\n\n          var selectedRange = this.getSelectedRange();\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\n            return _this12.getCellMeta(row, col).className;\n          });\n          var type = 'vertical';\n          var alignment = 'htMiddle';\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\n          align(selectedRange, type, alignment, function (row, col) {\n            return _this12.getCellMeta(row, col);\n          }, function (row, col, key, value) {\n            return _this12.setCellMeta(row, col, key, value);\n          });\n          this.render();\n        },\n        disabled: false\n      }, {\n        key: \"\".concat(KEY, \":bottom\"),\n        name: function name() {\n          var _this13 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_BOTTOM);\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\n            var className = _this13.getCellMeta(row, col).className;\n\n            if (className && className.indexOf('htBottom') !== -1) {\n              return true;\n            }\n          });\n\n          if (hasClass) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          var _this14 = this;\n\n          var selectedRange = this.getSelectedRange();\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\n            return _this14.getCellMeta(row, col).className;\n          });\n          var type = 'vertical';\n          var alignment = 'htBottom';\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\n          align(selectedRange, type, alignment, function (row, col) {\n            return _this14.getCellMeta(row, col);\n          }, function (row, col, key, value) {\n            return _this14.setCellMeta(row, col, key, value);\n          });\n          this.render();\n        },\n        disabled: false\n      }]\n    }\n  };\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/contextMenu/predefinedItems/alignment.mjs"],"names":["align","getAlignmentClasses","checkSelectionConsistency","markLabelAsSelected","KEY","SEPARATOR","C","alignmentItem","key","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_ALIGNMENT","disabled","countRows","countCols","getSelectedRange","selection","isSelectedByCorner","submenu","items","concat","_this","label","CONTEXTMENU_ITEMS_ALIGNMENT_LEFT","hasClass","row","col","className","getCellMeta","indexOf","callback","_this2","selectedRange","stateBefore","type","alignment","runHooks","value","setCellMeta","render","_this3","CONTEXTMENU_ITEMS_ALIGNMENT_CENTER","_this4","_this5","CONTEXTMENU_ITEMS_ALIGNMENT_RIGHT","_this6","_this7","CONTEXTMENU_ITEMS_ALIGNMENT_JUSTIFY","_this8","_this9","CONTEXTMENU_ITEMS_ALIGNMENT_TOP","_this10","_this11","CONTEXTMENU_ITEMS_ALIGNMENT_MIDDLE","_this12","_this13","CONTEXTMENU_ITEMS_ALIGNMENT_BOTTOM","_this14"],"mappings":"AACA,SAASA,KAAT,EAAgBC,mBAAhB,EAAqCC,yBAArC,EAAgEC,mBAAhE,QAA2F,cAA3F;AACA,SAASC,GAAG,IAAIC,SAAhB,QAAiC,iBAAjC;AACA,OAAO,KAAKC,CAAZ,MAAmB,6BAAnB;AACA,OAAO,IAAIF,GAAG,GAAG,WAAV;AACP;AACA;AACA;;AAEA,eAAe,SAASG,aAAT,GAAyB;AACtC,SAAO;AACLC,IAAAA,GAAG,EAAEJ,GADA;AAELK,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,aAAO,KAAKC,mBAAL,CAAyBJ,CAAC,CAACK,2BAA3B,CAAP;AACD,KAJI;AAKLC,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,UAAI,KAAKC,SAAL,OAAqB,CAArB,IAA0B,KAAKC,SAAL,OAAqB,CAAnD,EAAsD;AACpD,eAAO,IAAP;AACD;;AAED,aAAO,EAAE,KAAKC,gBAAL,MAA2B,CAAC,KAAKC,SAAL,CAAeC,kBAAf,EAA9B,CAAP;AACD,KAXI;AAYLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,CAAC;AACNX,QAAAA,GAAG,EAAE,GAAGY,MAAH,CAAUhB,GAAV,EAAe,OAAf,CADC;AAENK,QAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,cAAIY,KAAK,GAAG,IAAZ;;AAEA,cAAIC,KAAK,GAAG,KAAKZ,mBAAL,CAAyBJ,CAAC,CAACiB,gCAA3B,CAAZ;AACA,cAAIC,QAAQ,GAAGtB,yBAAyB,CAAC,KAAKa,gBAAL,EAAD,EAA0B,UAAUU,GAAV,EAAeC,GAAf,EAAoB;AACpF,gBAAIC,SAAS,GAAGN,KAAK,CAACO,WAAN,CAAkBH,GAAlB,EAAuBC,GAAvB,EAA4BC,SAA5C;;AAEA,gBAAIA,SAAS,IAAIA,SAAS,CAACE,OAAV,CAAkB,QAAlB,MAAgC,CAAC,CAAlD,EAAqD;AACnD,qBAAO,IAAP;AACD;AACF,WANuC,CAAxC;;AAQA,cAAIL,QAAJ,EAAc;AACZF,YAAAA,KAAK,GAAGnB,mBAAmB,CAACmB,KAAD,CAA3B;AACD;;AAED,iBAAOA,KAAP;AACD,SAnBK;AAoBNQ,QAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,cAAIC,MAAM,GAAG,IAAb;;AAEA,cAAIC,aAAa,GAAG,KAAKjB,gBAAL,EAApB;AACA,cAAIkB,WAAW,GAAGhC,mBAAmB,CAAC+B,aAAD,EAAgB,UAAUP,GAAV,EAAeC,GAAf,EAAoB;AACvE,mBAAOK,MAAM,CAACH,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,EAA6BC,SAApC;AACD,WAFoC,CAArC;AAGA,cAAIO,IAAI,GAAG,YAAX;AACA,cAAIC,SAAS,GAAG,QAAhB;AACA,eAAKC,QAAL,CAAc,qBAAd,EAAqCH,WAArC,EAAkDD,aAAlD,EAAiEE,IAAjE,EAAuEC,SAAvE;AACAnC,UAAAA,KAAK,CAACgC,aAAD,EAAgBE,IAAhB,EAAsBC,SAAtB,EAAiC,UAAUV,GAAV,EAAeC,GAAf,EAAoB;AACxD,mBAAOK,MAAM,CAACH,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,CAAP;AACD,WAFI,EAEF,UAAUD,GAAV,EAAeC,GAAf,EAAoBlB,GAApB,EAAyB6B,KAAzB,EAAgC;AACjC,mBAAON,MAAM,CAACO,WAAP,CAAmBb,GAAnB,EAAwBC,GAAxB,EAA6BlB,GAA7B,EAAkC6B,KAAlC,CAAP;AACD,WAJI,CAAL;AAKA,eAAKE,MAAL;AACD,SApCK;AAqCN3B,QAAAA,QAAQ,EAAE;AArCJ,OAAD,EAsCJ;AACDJ,QAAAA,GAAG,EAAE,GAAGY,MAAH,CAAUhB,GAAV,EAAe,SAAf,CADJ;AAEDK,QAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,cAAI+B,MAAM,GAAG,IAAb;;AAEA,cAAIlB,KAAK,GAAG,KAAKZ,mBAAL,CAAyBJ,CAAC,CAACmC,kCAA3B,CAAZ;AACA,cAAIjB,QAAQ,GAAGtB,yBAAyB,CAAC,KAAKa,gBAAL,EAAD,EAA0B,UAAUU,GAAV,EAAeC,GAAf,EAAoB;AACpF,gBAAIC,SAAS,GAAGa,MAAM,CAACZ,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,EAA6BC,SAA7C;;AAEA,gBAAIA,SAAS,IAAIA,SAAS,CAACE,OAAV,CAAkB,UAAlB,MAAkC,CAAC,CAApD,EAAuD;AACrD,qBAAO,IAAP;AACD;AACF,WANuC,CAAxC;;AAQA,cAAIL,QAAJ,EAAc;AACZF,YAAAA,KAAK,GAAGnB,mBAAmB,CAACmB,KAAD,CAA3B;AACD;;AAED,iBAAOA,KAAP;AACD,SAnBA;AAoBDQ,QAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,cAAIY,MAAM,GAAG,IAAb;;AAEA,cAAIV,aAAa,GAAG,KAAKjB,gBAAL,EAApB;AACA,cAAIkB,WAAW,GAAGhC,mBAAmB,CAAC+B,aAAD,EAAgB,UAAUP,GAAV,EAAeC,GAAf,EAAoB;AACvE,mBAAOgB,MAAM,CAACd,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,EAA6BC,SAApC;AACD,WAFoC,CAArC;AAGA,cAAIO,IAAI,GAAG,YAAX;AACA,cAAIC,SAAS,GAAG,UAAhB;AACA,eAAKC,QAAL,CAAc,qBAAd,EAAqCH,WAArC,EAAkDD,aAAlD,EAAiEE,IAAjE,EAAuEC,SAAvE;AACAnC,UAAAA,KAAK,CAACgC,aAAD,EAAgBE,IAAhB,EAAsBC,SAAtB,EAAiC,UAAUV,GAAV,EAAeC,GAAf,EAAoB;AACxD,mBAAOgB,MAAM,CAACd,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,CAAP;AACD,WAFI,EAEF,UAAUD,GAAV,EAAeC,GAAf,EAAoBlB,GAApB,EAAyB6B,KAAzB,EAAgC;AACjC,mBAAOK,MAAM,CAACJ,WAAP,CAAmBb,GAAnB,EAAwBC,GAAxB,EAA6BlB,GAA7B,EAAkC6B,KAAlC,CAAP;AACD,WAJI,CAAL;AAKA,eAAKE,MAAL;AACD,SApCA;AAqCD3B,QAAAA,QAAQ,EAAE;AArCT,OAtCI,EA4EJ;AACDJ,QAAAA,GAAG,EAAE,GAAGY,MAAH,CAAUhB,GAAV,EAAe,QAAf,CADJ;AAEDK,QAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,cAAIkC,MAAM,GAAG,IAAb;;AAEA,cAAIrB,KAAK,GAAG,KAAKZ,mBAAL,CAAyBJ,CAAC,CAACsC,iCAA3B,CAAZ;AACA,cAAIpB,QAAQ,GAAGtB,yBAAyB,CAAC,KAAKa,gBAAL,EAAD,EAA0B,UAAUU,GAAV,EAAeC,GAAf,EAAoB;AACpF,gBAAIC,SAAS,GAAGgB,MAAM,CAACf,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,EAA6BC,SAA7C;;AAEA,gBAAIA,SAAS,IAAIA,SAAS,CAACE,OAAV,CAAkB,SAAlB,MAAiC,CAAC,CAAnD,EAAsD;AACpD,qBAAO,IAAP;AACD;AACF,WANuC,CAAxC;;AAQA,cAAIL,QAAJ,EAAc;AACZF,YAAAA,KAAK,GAAGnB,mBAAmB,CAACmB,KAAD,CAA3B;AACD;;AAED,iBAAOA,KAAP;AACD,SAnBA;AAoBDQ,QAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,cAAIe,MAAM,GAAG,IAAb;;AAEA,cAAIb,aAAa,GAAG,KAAKjB,gBAAL,EAApB;AACA,cAAIkB,WAAW,GAAGhC,mBAAmB,CAAC+B,aAAD,EAAgB,UAAUP,GAAV,EAAeC,GAAf,EAAoB;AACvE,mBAAOmB,MAAM,CAACjB,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,EAA6BC,SAApC;AACD,WAFoC,CAArC;AAGA,cAAIO,IAAI,GAAG,YAAX;AACA,cAAIC,SAAS,GAAG,SAAhB;AACA,eAAKC,QAAL,CAAc,qBAAd,EAAqCH,WAArC,EAAkDD,aAAlD,EAAiEE,IAAjE,EAAuEC,SAAvE;AACAnC,UAAAA,KAAK,CAACgC,aAAD,EAAgBE,IAAhB,EAAsBC,SAAtB,EAAiC,UAAUV,GAAV,EAAeC,GAAf,EAAoB;AACxD,mBAAOmB,MAAM,CAACjB,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,CAAP;AACD,WAFI,EAEF,UAAUD,GAAV,EAAeC,GAAf,EAAoBlB,GAApB,EAAyB6B,KAAzB,EAAgC;AACjC,mBAAOQ,MAAM,CAACP,WAAP,CAAmBb,GAAnB,EAAwBC,GAAxB,EAA6BlB,GAA7B,EAAkC6B,KAAlC,CAAP;AACD,WAJI,CAAL;AAKA,eAAKE,MAAL;AACD,SApCA;AAqCD3B,QAAAA,QAAQ,EAAE;AArCT,OA5EI,EAkHJ;AACDJ,QAAAA,GAAG,EAAE,GAAGY,MAAH,CAAUhB,GAAV,EAAe,UAAf,CADJ;AAEDK,QAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,cAAIqC,MAAM,GAAG,IAAb;;AAEA,cAAIxB,KAAK,GAAG,KAAKZ,mBAAL,CAAyBJ,CAAC,CAACyC,mCAA3B,CAAZ;AACA,cAAIvB,QAAQ,GAAGtB,yBAAyB,CAAC,KAAKa,gBAAL,EAAD,EAA0B,UAAUU,GAAV,EAAeC,GAAf,EAAoB;AACpF,gBAAIC,SAAS,GAAGmB,MAAM,CAAClB,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,EAA6BC,SAA7C;;AAEA,gBAAIA,SAAS,IAAIA,SAAS,CAACE,OAAV,CAAkB,WAAlB,MAAmC,CAAC,CAArD,EAAwD;AACtD,qBAAO,IAAP;AACD;AACF,WANuC,CAAxC;;AAQA,cAAIL,QAAJ,EAAc;AACZF,YAAAA,KAAK,GAAGnB,mBAAmB,CAACmB,KAAD,CAA3B;AACD;;AAED,iBAAOA,KAAP;AACD,SAnBA;AAoBDQ,QAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,cAAIkB,MAAM,GAAG,IAAb;;AAEA,cAAIhB,aAAa,GAAG,KAAKjB,gBAAL,EAApB;AACA,cAAIkB,WAAW,GAAGhC,mBAAmB,CAAC+B,aAAD,EAAgB,UAAUP,GAAV,EAAeC,GAAf,EAAoB;AACvE,mBAAOsB,MAAM,CAACpB,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,EAA6BC,SAApC;AACD,WAFoC,CAArC;AAGA,cAAIO,IAAI,GAAG,YAAX;AACA,cAAIC,SAAS,GAAG,WAAhB;AACA,eAAKC,QAAL,CAAc,qBAAd,EAAqCH,WAArC,EAAkDD,aAAlD,EAAiEE,IAAjE,EAAuEC,SAAvE;AACAnC,UAAAA,KAAK,CAACgC,aAAD,EAAgBE,IAAhB,EAAsBC,SAAtB,EAAiC,UAAUV,GAAV,EAAeC,GAAf,EAAoB;AACxD,mBAAOsB,MAAM,CAACpB,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,CAAP;AACD,WAFI,EAEF,UAAUD,GAAV,EAAeC,GAAf,EAAoBlB,GAApB,EAAyB6B,KAAzB,EAAgC;AACjC,mBAAOW,MAAM,CAACV,WAAP,CAAmBb,GAAnB,EAAwBC,GAAxB,EAA6BlB,GAA7B,EAAkC6B,KAAlC,CAAP;AACD,WAJI,CAAL;AAKA,eAAKE,MAAL;AACD,SApCA;AAqCD3B,QAAAA,QAAQ,EAAE;AArCT,OAlHI,EAwJJ;AACDH,QAAAA,IAAI,EAAEJ;AADL,OAxJI,EA0JJ;AACDG,QAAAA,GAAG,EAAE,GAAGY,MAAH,CAAUhB,GAAV,EAAe,MAAf,CADJ;AAEDK,QAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,cAAIwC,MAAM,GAAG,IAAb;;AAEA,cAAI3B,KAAK,GAAG,KAAKZ,mBAAL,CAAyBJ,CAAC,CAAC4C,+BAA3B,CAAZ;AACA,cAAI1B,QAAQ,GAAGtB,yBAAyB,CAAC,KAAKa,gBAAL,EAAD,EAA0B,UAAUU,GAAV,EAAeC,GAAf,EAAoB;AACpF,gBAAIC,SAAS,GAAGsB,MAAM,CAACrB,WAAP,CAAmBH,GAAnB,EAAwBC,GAAxB,EAA6BC,SAA7C;;AAEA,gBAAIA,SAAS,IAAIA,SAAS,CAACE,OAAV,CAAkB,OAAlB,MAA+B,CAAC,CAAjD,EAAoD;AAClD,qBAAO,IAAP;AACD;AACF,WANuC,CAAxC;;AAQA,cAAIL,QAAJ,EAAc;AACZF,YAAAA,KAAK,GAAGnB,mBAAmB,CAACmB,KAAD,CAA3B;AACD;;AAED,iBAAOA,KAAP;AACD,SAnBA;AAoBDQ,QAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,cAAIqB,OAAO,GAAG,IAAd;;AAEA,cAAInB,aAAa,GAAG,KAAKjB,gBAAL,EAApB;AACA,cAAIkB,WAAW,GAAGhC,mBAAmB,CAAC+B,aAAD,EAAgB,UAAUP,GAAV,EAAeC,GAAf,EAAoB;AACvE,mBAAOyB,OAAO,CAACvB,WAAR,CAAoBH,GAApB,EAAyBC,GAAzB,EAA8BC,SAArC;AACD,WAFoC,CAArC;AAGA,cAAIO,IAAI,GAAG,UAAX;AACA,cAAIC,SAAS,GAAG,OAAhB;AACA,eAAKC,QAAL,CAAc,qBAAd,EAAqCH,WAArC,EAAkDD,aAAlD,EAAiEE,IAAjE,EAAuEC,SAAvE;AACAnC,UAAAA,KAAK,CAACgC,aAAD,EAAgBE,IAAhB,EAAsBC,SAAtB,EAAiC,UAAUV,GAAV,EAAeC,GAAf,EAAoB;AACxD,mBAAOyB,OAAO,CAACvB,WAAR,CAAoBH,GAApB,EAAyBC,GAAzB,CAAP;AACD,WAFI,EAEF,UAAUD,GAAV,EAAeC,GAAf,EAAoBlB,GAApB,EAAyB6B,KAAzB,EAAgC;AACjC,mBAAOc,OAAO,CAACb,WAAR,CAAoBb,GAApB,EAAyBC,GAAzB,EAA8BlB,GAA9B,EAAmC6B,KAAnC,CAAP;AACD,WAJI,CAAL;AAKA,eAAKE,MAAL;AACD,SApCA;AAqCD3B,QAAAA,QAAQ,EAAE;AArCT,OA1JI,EAgMJ;AACDJ,QAAAA,GAAG,EAAE,GAAGY,MAAH,CAAUhB,GAAV,EAAe,SAAf,CADJ;AAEDK,QAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,cAAI2C,OAAO,GAAG,IAAd;;AAEA,cAAI9B,KAAK,GAAG,KAAKZ,mBAAL,CAAyBJ,CAAC,CAAC+C,kCAA3B,CAAZ;AACA,cAAI7B,QAAQ,GAAGtB,yBAAyB,CAAC,KAAKa,gBAAL,EAAD,EAA0B,UAAUU,GAAV,EAAeC,GAAf,EAAoB;AACpF,gBAAIC,SAAS,GAAGyB,OAAO,CAACxB,WAAR,CAAoBH,GAApB,EAAyBC,GAAzB,EAA8BC,SAA9C;;AAEA,gBAAIA,SAAS,IAAIA,SAAS,CAACE,OAAV,CAAkB,UAAlB,MAAkC,CAAC,CAApD,EAAuD;AACrD,qBAAO,IAAP;AACD;AACF,WANuC,CAAxC;;AAQA,cAAIL,QAAJ,EAAc;AACZF,YAAAA,KAAK,GAAGnB,mBAAmB,CAACmB,KAAD,CAA3B;AACD;;AAED,iBAAOA,KAAP;AACD,SAnBA;AAoBDQ,QAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,cAAIwB,OAAO,GAAG,IAAd;;AAEA,cAAItB,aAAa,GAAG,KAAKjB,gBAAL,EAApB;AACA,cAAIkB,WAAW,GAAGhC,mBAAmB,CAAC+B,aAAD,EAAgB,UAAUP,GAAV,EAAeC,GAAf,EAAoB;AACvE,mBAAO4B,OAAO,CAAC1B,WAAR,CAAoBH,GAApB,EAAyBC,GAAzB,EAA8BC,SAArC;AACD,WAFoC,CAArC;AAGA,cAAIO,IAAI,GAAG,UAAX;AACA,cAAIC,SAAS,GAAG,UAAhB;AACA,eAAKC,QAAL,CAAc,qBAAd,EAAqCH,WAArC,EAAkDD,aAAlD,EAAiEE,IAAjE,EAAuEC,SAAvE;AACAnC,UAAAA,KAAK,CAACgC,aAAD,EAAgBE,IAAhB,EAAsBC,SAAtB,EAAiC,UAAUV,GAAV,EAAeC,GAAf,EAAoB;AACxD,mBAAO4B,OAAO,CAAC1B,WAAR,CAAoBH,GAApB,EAAyBC,GAAzB,CAAP;AACD,WAFI,EAEF,UAAUD,GAAV,EAAeC,GAAf,EAAoBlB,GAApB,EAAyB6B,KAAzB,EAAgC;AACjC,mBAAOiB,OAAO,CAAChB,WAAR,CAAoBb,GAApB,EAAyBC,GAAzB,EAA8BlB,GAA9B,EAAmC6B,KAAnC,CAAP;AACD,WAJI,CAAL;AAKA,eAAKE,MAAL;AACD,SApCA;AAqCD3B,QAAAA,QAAQ,EAAE;AArCT,OAhMI,EAsOJ;AACDJ,QAAAA,GAAG,EAAE,GAAGY,MAAH,CAAUhB,GAAV,EAAe,SAAf,CADJ;AAEDK,QAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,cAAI8C,OAAO,GAAG,IAAd;;AAEA,cAAIjC,KAAK,GAAG,KAAKZ,mBAAL,CAAyBJ,CAAC,CAACkD,kCAA3B,CAAZ;AACA,cAAIhC,QAAQ,GAAGtB,yBAAyB,CAAC,KAAKa,gBAAL,EAAD,EAA0B,UAAUU,GAAV,EAAeC,GAAf,EAAoB;AACpF,gBAAIC,SAAS,GAAG4B,OAAO,CAAC3B,WAAR,CAAoBH,GAApB,EAAyBC,GAAzB,EAA8BC,SAA9C;;AAEA,gBAAIA,SAAS,IAAIA,SAAS,CAACE,OAAV,CAAkB,UAAlB,MAAkC,CAAC,CAApD,EAAuD;AACrD,qBAAO,IAAP;AACD;AACF,WANuC,CAAxC;;AAQA,cAAIL,QAAJ,EAAc;AACZF,YAAAA,KAAK,GAAGnB,mBAAmB,CAACmB,KAAD,CAA3B;AACD;;AAED,iBAAOA,KAAP;AACD,SAnBA;AAoBDQ,QAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,cAAI2B,OAAO,GAAG,IAAd;;AAEA,cAAIzB,aAAa,GAAG,KAAKjB,gBAAL,EAApB;AACA,cAAIkB,WAAW,GAAGhC,mBAAmB,CAAC+B,aAAD,EAAgB,UAAUP,GAAV,EAAeC,GAAf,EAAoB;AACvE,mBAAO+B,OAAO,CAAC7B,WAAR,CAAoBH,GAApB,EAAyBC,GAAzB,EAA8BC,SAArC;AACD,WAFoC,CAArC;AAGA,cAAIO,IAAI,GAAG,UAAX;AACA,cAAIC,SAAS,GAAG,UAAhB;AACA,eAAKC,QAAL,CAAc,qBAAd,EAAqCH,WAArC,EAAkDD,aAAlD,EAAiEE,IAAjE,EAAuEC,SAAvE;AACAnC,UAAAA,KAAK,CAACgC,aAAD,EAAgBE,IAAhB,EAAsBC,SAAtB,EAAiC,UAAUV,GAAV,EAAeC,GAAf,EAAoB;AACxD,mBAAO+B,OAAO,CAAC7B,WAAR,CAAoBH,GAApB,EAAyBC,GAAzB,CAAP;AACD,WAFI,EAEF,UAAUD,GAAV,EAAeC,GAAf,EAAoBlB,GAApB,EAAyB6B,KAAzB,EAAgC;AACjC,mBAAOoB,OAAO,CAACnB,WAAR,CAAoBb,GAApB,EAAyBC,GAAzB,EAA8BlB,GAA9B,EAAmC6B,KAAnC,CAAP;AACD,WAJI,CAAL;AAKA,eAAKE,MAAL;AACD,SApCA;AAqCD3B,QAAAA,QAAQ,EAAE;AArCT,OAtOI;AADA;AAZJ,GAAP;AA4RD","sourcesContent":["import \"core-js/modules/es.array.index-of.js\";\r\nimport { align, getAlignmentClasses, checkSelectionConsistency, markLabelAsSelected } from \"../utils.mjs\";\r\nimport { KEY as SEPARATOR } from \"./separator.mjs\";\r\nimport * as C from \"../../../i18n/constants.mjs\";\r\nexport var KEY = 'alignment';\r\n/**\r\n * @returns {object}\r\n */\r\n\r\nexport default function alignmentItem() {\r\n  return {\r\n    key: KEY,\r\n    name: function name() {\r\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT);\r\n    },\r\n    disabled: function disabled() {\r\n      if (this.countRows() === 0 || this.countCols() === 0) {\r\n        return true;\r\n      }\r\n\r\n      return !(this.getSelectedRange() && !this.selection.isSelectedByCorner());\r\n    },\r\n    submenu: {\r\n      items: [{\r\n        key: \"\".concat(KEY, \":left\"),\r\n        name: function name() {\r\n          var _this = this;\r\n\r\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_LEFT);\r\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\r\n            var className = _this.getCellMeta(row, col).className;\r\n\r\n            if (className && className.indexOf('htLeft') !== -1) {\r\n              return true;\r\n            }\r\n          });\r\n\r\n          if (hasClass) {\r\n            label = markLabelAsSelected(label);\r\n          }\r\n\r\n          return label;\r\n        },\r\n        callback: function callback() {\r\n          var _this2 = this;\r\n\r\n          var selectedRange = this.getSelectedRange();\r\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\r\n            return _this2.getCellMeta(row, col).className;\r\n          });\r\n          var type = 'horizontal';\r\n          var alignment = 'htLeft';\r\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\r\n          align(selectedRange, type, alignment, function (row, col) {\r\n            return _this2.getCellMeta(row, col);\r\n          }, function (row, col, key, value) {\r\n            return _this2.setCellMeta(row, col, key, value);\r\n          });\r\n          this.render();\r\n        },\r\n        disabled: false\r\n      }, {\r\n        key: \"\".concat(KEY, \":center\"),\r\n        name: function name() {\r\n          var _this3 = this;\r\n\r\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_CENTER);\r\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\r\n            var className = _this3.getCellMeta(row, col).className;\r\n\r\n            if (className && className.indexOf('htCenter') !== -1) {\r\n              return true;\r\n            }\r\n          });\r\n\r\n          if (hasClass) {\r\n            label = markLabelAsSelected(label);\r\n          }\r\n\r\n          return label;\r\n        },\r\n        callback: function callback() {\r\n          var _this4 = this;\r\n\r\n          var selectedRange = this.getSelectedRange();\r\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\r\n            return _this4.getCellMeta(row, col).className;\r\n          });\r\n          var type = 'horizontal';\r\n          var alignment = 'htCenter';\r\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\r\n          align(selectedRange, type, alignment, function (row, col) {\r\n            return _this4.getCellMeta(row, col);\r\n          }, function (row, col, key, value) {\r\n            return _this4.setCellMeta(row, col, key, value);\r\n          });\r\n          this.render();\r\n        },\r\n        disabled: false\r\n      }, {\r\n        key: \"\".concat(KEY, \":right\"),\r\n        name: function name() {\r\n          var _this5 = this;\r\n\r\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_RIGHT);\r\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\r\n            var className = _this5.getCellMeta(row, col).className;\r\n\r\n            if (className && className.indexOf('htRight') !== -1) {\r\n              return true;\r\n            }\r\n          });\r\n\r\n          if (hasClass) {\r\n            label = markLabelAsSelected(label);\r\n          }\r\n\r\n          return label;\r\n        },\r\n        callback: function callback() {\r\n          var _this6 = this;\r\n\r\n          var selectedRange = this.getSelectedRange();\r\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\r\n            return _this6.getCellMeta(row, col).className;\r\n          });\r\n          var type = 'horizontal';\r\n          var alignment = 'htRight';\r\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\r\n          align(selectedRange, type, alignment, function (row, col) {\r\n            return _this6.getCellMeta(row, col);\r\n          }, function (row, col, key, value) {\r\n            return _this6.setCellMeta(row, col, key, value);\r\n          });\r\n          this.render();\r\n        },\r\n        disabled: false\r\n      }, {\r\n        key: \"\".concat(KEY, \":justify\"),\r\n        name: function name() {\r\n          var _this7 = this;\r\n\r\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_JUSTIFY);\r\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\r\n            var className = _this7.getCellMeta(row, col).className;\r\n\r\n            if (className && className.indexOf('htJustify') !== -1) {\r\n              return true;\r\n            }\r\n          });\r\n\r\n          if (hasClass) {\r\n            label = markLabelAsSelected(label);\r\n          }\r\n\r\n          return label;\r\n        },\r\n        callback: function callback() {\r\n          var _this8 = this;\r\n\r\n          var selectedRange = this.getSelectedRange();\r\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\r\n            return _this8.getCellMeta(row, col).className;\r\n          });\r\n          var type = 'horizontal';\r\n          var alignment = 'htJustify';\r\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\r\n          align(selectedRange, type, alignment, function (row, col) {\r\n            return _this8.getCellMeta(row, col);\r\n          }, function (row, col, key, value) {\r\n            return _this8.setCellMeta(row, col, key, value);\r\n          });\r\n          this.render();\r\n        },\r\n        disabled: false\r\n      }, {\r\n        name: SEPARATOR\r\n      }, {\r\n        key: \"\".concat(KEY, \":top\"),\r\n        name: function name() {\r\n          var _this9 = this;\r\n\r\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_TOP);\r\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\r\n            var className = _this9.getCellMeta(row, col).className;\r\n\r\n            if (className && className.indexOf('htTop') !== -1) {\r\n              return true;\r\n            }\r\n          });\r\n\r\n          if (hasClass) {\r\n            label = markLabelAsSelected(label);\r\n          }\r\n\r\n          return label;\r\n        },\r\n        callback: function callback() {\r\n          var _this10 = this;\r\n\r\n          var selectedRange = this.getSelectedRange();\r\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\r\n            return _this10.getCellMeta(row, col).className;\r\n          });\r\n          var type = 'vertical';\r\n          var alignment = 'htTop';\r\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\r\n          align(selectedRange, type, alignment, function (row, col) {\r\n            return _this10.getCellMeta(row, col);\r\n          }, function (row, col, key, value) {\r\n            return _this10.setCellMeta(row, col, key, value);\r\n          });\r\n          this.render();\r\n        },\r\n        disabled: false\r\n      }, {\r\n        key: \"\".concat(KEY, \":middle\"),\r\n        name: function name() {\r\n          var _this11 = this;\r\n\r\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_MIDDLE);\r\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\r\n            var className = _this11.getCellMeta(row, col).className;\r\n\r\n            if (className && className.indexOf('htMiddle') !== -1) {\r\n              return true;\r\n            }\r\n          });\r\n\r\n          if (hasClass) {\r\n            label = markLabelAsSelected(label);\r\n          }\r\n\r\n          return label;\r\n        },\r\n        callback: function callback() {\r\n          var _this12 = this;\r\n\r\n          var selectedRange = this.getSelectedRange();\r\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\r\n            return _this12.getCellMeta(row, col).className;\r\n          });\r\n          var type = 'vertical';\r\n          var alignment = 'htMiddle';\r\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\r\n          align(selectedRange, type, alignment, function (row, col) {\r\n            return _this12.getCellMeta(row, col);\r\n          }, function (row, col, key, value) {\r\n            return _this12.setCellMeta(row, col, key, value);\r\n          });\r\n          this.render();\r\n        },\r\n        disabled: false\r\n      }, {\r\n        key: \"\".concat(KEY, \":bottom\"),\r\n        name: function name() {\r\n          var _this13 = this;\r\n\r\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ALIGNMENT_BOTTOM);\r\n          var hasClass = checkSelectionConsistency(this.getSelectedRange(), function (row, col) {\r\n            var className = _this13.getCellMeta(row, col).className;\r\n\r\n            if (className && className.indexOf('htBottom') !== -1) {\r\n              return true;\r\n            }\r\n          });\r\n\r\n          if (hasClass) {\r\n            label = markLabelAsSelected(label);\r\n          }\r\n\r\n          return label;\r\n        },\r\n        callback: function callback() {\r\n          var _this14 = this;\r\n\r\n          var selectedRange = this.getSelectedRange();\r\n          var stateBefore = getAlignmentClasses(selectedRange, function (row, col) {\r\n            return _this14.getCellMeta(row, col).className;\r\n          });\r\n          var type = 'vertical';\r\n          var alignment = 'htBottom';\r\n          this.runHooks('beforeCellAlignment', stateBefore, selectedRange, type, alignment);\r\n          align(selectedRange, type, alignment, function (row, col) {\r\n            return _this14.getCellMeta(row, col);\r\n          }, function (row, col, key, value) {\r\n            return _this14.setCellMeta(row, col, key, value);\r\n          });\r\n          this.render();\r\n        },\r\n        disabled: false\r\n      }]\r\n    }\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}