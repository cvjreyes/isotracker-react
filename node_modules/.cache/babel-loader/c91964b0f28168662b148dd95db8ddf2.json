{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport { arrayEach } from \"./array.mjs\";\n/**\n * Generate schema for passed object.\n *\n * @param {Array|object} object An object to analyze.\n * @returns {Array|object}\n */\n\nexport function duckSchema(object) {\n  var schema;\n\n  if (Array.isArray(object)) {\n    schema = [];\n  } else {\n    schema = {};\n    objectEach(object, function (value, key) {\n      if (key === '__children') {\n        return;\n      }\n\n      if (value && _typeof(value) === 'object' && !Array.isArray(value)) {\n        schema[key] = duckSchema(value);\n      } else if (Array.isArray(value)) {\n        if (value.length && _typeof(value[0]) === 'object' && !Array.isArray(value[0])) {\n          schema[key] = [duckSchema(value[0])];\n        } else {\n          schema[key] = [];\n        }\n      } else {\n        schema[key] = null;\n      }\n    });\n  }\n\n  return schema;\n}\n/**\n * Inherit without without calling parent constructor, and setting `Child.prototype.constructor` to `Child` instead of `Parent`.\n * Creates temporary dummy function to call it as constructor.\n * Described in ticket: https://github.com/handsontable/handsontable/pull/516.\n *\n * @param {object} Child The child class.\n * @param {object} Parent The parent class.\n * @returns {object}\n */\n\nexport function inherit(Child, Parent) {\n  Parent.prototype.constructor = Parent;\n  Child.prototype = new Parent();\n  Child.prototype.constructor = Child;\n  return Child;\n}\n/**\n * Perform shallow extend of a target object with extension's own properties.\n *\n * @param {object} target An object that will receive the new properties.\n * @param {object} extension An object containing additional properties to merge into the target.\n * @param {string[]} [writableKeys] An array of keys that are writable to target object.\n * @returns {object}\n */\n\nexport function extend(target, extension, writableKeys) {\n  var hasWritableKeys = Array.isArray(writableKeys);\n  objectEach(extension, function (value, key) {\n    if (hasWritableKeys === false || writableKeys.includes(key)) {\n      target[key] = value;\n    }\n  });\n  return target;\n}\n/**\n * Perform deep extend of a target object with extension's own properties.\n *\n * @param {object} target An object that will receive the new properties.\n * @param {object} extension An object containing additional properties to merge into the target.\n */\n\nexport function deepExtend(target, extension) {\n  objectEach(extension, function (value, key) {\n    if (extension[key] && _typeof(extension[key]) === 'object') {\n      if (!target[key]) {\n        if (Array.isArray(extension[key])) {\n          target[key] = [];\n        } else if (Object.prototype.toString.call(extension[key]) === '[object Date]') {\n          target[key] = extension[key];\n        } else {\n          target[key] = {};\n        }\n      }\n\n      deepExtend(target[key], extension[key]);\n    } else {\n      target[key] = extension[key];\n    }\n  });\n}\n/**\n * Perform deep clone of an object.\n * WARNING! Only clones JSON properties. Will cause error when `obj` contains a function, Date, etc.\n *\n * @param {object} obj An object that will be cloned.\n * @returns {object}\n */\n\nexport function deepClone(obj) {\n  if (_typeof(obj) === 'object') {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  return obj;\n}\n/**\n * Shallow clone object.\n *\n * @param {object} object An object to clone.\n * @returns {object}\n */\n\nexport function clone(object) {\n  var result = {};\n  objectEach(object, function (value, key) {\n    result[key] = value;\n  });\n  return result;\n}\n/**\n * Extend the Base object (usually prototype) of the functionality the `mixins` objects.\n *\n * @param {object} Base Base object which will be extended.\n * @param {object} mixins The object of the functionality will be \"copied\".\n * @returns {object}\n */\n\nexport function mixin(Base) {\n  if (!Base.MIXINS) {\n    Base.MIXINS = [];\n  }\n\n  for (var _len = arguments.length, mixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    mixins[_key - 1] = arguments[_key];\n  }\n\n  arrayEach(mixins, function (mixinItem) {\n    Base.MIXINS.push(mixinItem.MIXIN_NAME);\n    objectEach(mixinItem, function (value, key) {\n      if (Base.prototype[key] !== void 0) {\n        throw new Error(\"Mixin conflict. Property '\".concat(key, \"' already exist and cannot be overwritten.\"));\n      }\n\n      if (typeof value === 'function') {\n        Base.prototype[key] = value;\n      } else {\n        var getter = function _getter(property, initialValue) {\n          var propertyName = \"_\".concat(property);\n\n          var initValue = function initValue(newValue) {\n            var result = newValue;\n\n            if (Array.isArray(result) || isObject(result)) {\n              result = deepClone(result);\n            }\n\n            return result;\n          };\n\n          return function () {\n            if (this[propertyName] === void 0) {\n              this[propertyName] = initValue(initialValue);\n            }\n\n            return this[propertyName];\n          };\n        };\n\n        var setter = function _setter(property) {\n          var propertyName = \"_\".concat(property);\n          return function (newValue) {\n            this[propertyName] = newValue;\n          };\n        };\n\n        Object.defineProperty(Base.prototype, key, {\n          get: getter(key, value),\n          set: setter(key),\n          configurable: true\n        });\n      }\n    });\n  });\n  return Base;\n}\n/**\n * Checks if two objects or arrays are (deep) equal.\n *\n * @param {object|Array} object1 The first object to compare.\n * @param {object|Array} object2 The second object to compare.\n * @returns {boolean}\n */\n\nexport function isObjectEqual(object1, object2) {\n  return JSON.stringify(object1) === JSON.stringify(object2);\n}\n/**\n * Determines whether given object is a plain Object.\n * Note: String and Array are not plain Objects.\n *\n * @param {*} object An object to check.\n * @returns {boolean}\n */\n\nexport function isObject(object) {\n  return Object.prototype.toString.call(object) === '[object Object]';\n}\n/**\n * @param {object} object The object on which to define the property.\n * @param {string} property The name of the property to be defined or modified.\n * @param {*} value The value associated with the property.\n * @param {object} options The descriptor for the property being defined or modified.\n */\n\nexport function defineGetter(object, property, value, options) {\n  options.value = value;\n  options.writable = options.writable !== false;\n  options.enumerable = options.enumerable !== false;\n  options.configurable = options.configurable !== false;\n  Object.defineProperty(object, property, options);\n}\n/**\n * A specialized version of `.forEach` for objects.\n *\n * @param {object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {object} Returns `object`.\n */\n\nexport function objectEach(object, iteratee) {\n  // eslint-disable-next-line no-restricted-syntax\n  for (var key in object) {\n    if (!object.hasOwnProperty || object.hasOwnProperty && Object.prototype.hasOwnProperty.call(object, key)) {\n      if (iteratee(object[key], key, object) === false) {\n        break;\n      }\n    }\n  }\n\n  return object;\n}\n/**\n * Get object property by its name. Access to sub properties can be achieved by dot notation (e.q. `'foo.bar.baz'`).\n *\n * @param {object} object Object which value will be exported.\n * @param {string} name Object property name.\n * @returns {*}\n */\n\nexport function getProperty(object, name) {\n  var names = name.split('.');\n  var result = object;\n  objectEach(names, function (nameItem) {\n    result = result[nameItem];\n\n    if (result === void 0) {\n      result = void 0;\n      return false;\n    }\n  });\n  return result;\n}\n/**\n * Set a property value on the provided object. Works on nested object prop names as well (e.g. `first.name`).\n *\n * @param {object} object Object to work on.\n * @param {string} name Prop name.\n * @param {*} value Value to be assigned at the provided property.\n */\n\nexport function setProperty(object, name, value) {\n  var names = name.split('.');\n  var workingObject = object;\n  names.forEach(function (propName, index) {\n    if (index !== names.length - 1) {\n      if (!hasOwnProperty(workingObject, propName)) {\n        workingObject[propName] = {};\n      }\n\n      workingObject = workingObject[propName];\n    } else {\n      workingObject[propName] = value;\n    }\n  });\n}\n/**\n * Return object length (recursively).\n *\n * @param {*} object Object for which we want get length.\n * @returns {number}\n */\n\nexport function deepObjectSize(object) {\n  if (!isObject(object)) {\n    return 0;\n  }\n\n  var recursObjLen = function recursObjLen(obj) {\n    var result = 0;\n\n    if (isObject(obj)) {\n      objectEach(obj, function (value, key) {\n        if (key === '__children') {\n          return;\n        }\n\n        result += recursObjLen(value);\n      });\n    } else {\n      result += 1;\n    }\n\n    return result;\n  };\n\n  return recursObjLen(object);\n}\n/**\n * Create object with property where its value change will be observed.\n *\n * @param {*} [defaultValue=undefined] Default value.\n * @param {string} [propertyToListen='value'] Property to listen.\n * @returns {object}\n */\n\nexport function createObjectPropListener(defaultValue) {\n  var _holder;\n\n  var propertyToListen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'value';\n  var privateProperty = \"_\".concat(propertyToListen);\n  var holder = (_holder = {\n    _touched: false\n  }, _defineProperty(_holder, privateProperty, defaultValue), _defineProperty(_holder, \"isTouched\", function isTouched() {\n    return this._touched;\n  }), _holder);\n  Object.defineProperty(holder, propertyToListen, {\n    get: function get() {\n      return this[privateProperty];\n    },\n    set: function set(value) {\n      this._touched = true;\n      this[privateProperty] = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return holder;\n}\n/**\n * Check if at specified `key` there is any value for `object`.\n *\n * @param {object} object Object to search value at specyfic key.\n * @param {string} key String key to check.\n * @returns {boolean}\n */\n\nexport function hasOwnProperty(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/helpers/object.mjs"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","arrayEach","duckSchema","object","schema","Array","isArray","objectEach","length","inherit","Child","Parent","extend","target","extension","writableKeys","hasWritableKeys","includes","deepExtend","toString","call","deepClone","JSON","parse","stringify","clone","result","mixin","Base","MIXINS","_len","arguments","mixins","_key","mixinItem","push","MIXIN_NAME","Error","concat","getter","_getter","property","initialValue","propertyName","initValue","newValue","isObject","setter","_setter","get","set","isObjectEqual","object1","object2","defineGetter","options","iteratee","hasOwnProperty","getProperty","name","names","split","nameItem","setProperty","workingObject","forEach","propName","index","deepObjectSize","recursObjLen","createObjectPropListener","defaultValue","_holder","propertyToListen","undefined","privateProperty","holder","_touched","isTouched"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { arrayEach } from \"./array.mjs\";\n/**\n * Generate schema for passed object.\n *\n * @param {Array|object} object An object to analyze.\n * @returns {Array|object}\n */\n\nexport function duckSchema(object) {\n  var schema;\n\n  if (Array.isArray(object)) {\n    schema = [];\n  } else {\n    schema = {};\n    objectEach(object, function (value, key) {\n      if (key === '__children') {\n        return;\n      }\n\n      if (value && _typeof(value) === 'object' && !Array.isArray(value)) {\n        schema[key] = duckSchema(value);\n      } else if (Array.isArray(value)) {\n        if (value.length && _typeof(value[0]) === 'object' && !Array.isArray(value[0])) {\n          schema[key] = [duckSchema(value[0])];\n        } else {\n          schema[key] = [];\n        }\n      } else {\n        schema[key] = null;\n      }\n    });\n  }\n\n  return schema;\n}\n/**\n * Inherit without without calling parent constructor, and setting `Child.prototype.constructor` to `Child` instead of `Parent`.\n * Creates temporary dummy function to call it as constructor.\n * Described in ticket: https://github.com/handsontable/handsontable/pull/516.\n *\n * @param {object} Child The child class.\n * @param {object} Parent The parent class.\n * @returns {object}\n */\n\nexport function inherit(Child, Parent) {\n  Parent.prototype.constructor = Parent;\n  Child.prototype = new Parent();\n  Child.prototype.constructor = Child;\n  return Child;\n}\n/**\n * Perform shallow extend of a target object with extension's own properties.\n *\n * @param {object} target An object that will receive the new properties.\n * @param {object} extension An object containing additional properties to merge into the target.\n * @param {string[]} [writableKeys] An array of keys that are writable to target object.\n * @returns {object}\n */\n\nexport function extend(target, extension, writableKeys) {\n  var hasWritableKeys = Array.isArray(writableKeys);\n  objectEach(extension, function (value, key) {\n    if (hasWritableKeys === false || writableKeys.includes(key)) {\n      target[key] = value;\n    }\n  });\n  return target;\n}\n/**\n * Perform deep extend of a target object with extension's own properties.\n *\n * @param {object} target An object that will receive the new properties.\n * @param {object} extension An object containing additional properties to merge into the target.\n */\n\nexport function deepExtend(target, extension) {\n  objectEach(extension, function (value, key) {\n    if (extension[key] && _typeof(extension[key]) === 'object') {\n      if (!target[key]) {\n        if (Array.isArray(extension[key])) {\n          target[key] = [];\n        } else if (Object.prototype.toString.call(extension[key]) === '[object Date]') {\n          target[key] = extension[key];\n        } else {\n          target[key] = {};\n        }\n      }\n\n      deepExtend(target[key], extension[key]);\n    } else {\n      target[key] = extension[key];\n    }\n  });\n}\n/**\n * Perform deep clone of an object.\n * WARNING! Only clones JSON properties. Will cause error when `obj` contains a function, Date, etc.\n *\n * @param {object} obj An object that will be cloned.\n * @returns {object}\n */\n\nexport function deepClone(obj) {\n  if (_typeof(obj) === 'object') {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  return obj;\n}\n/**\n * Shallow clone object.\n *\n * @param {object} object An object to clone.\n * @returns {object}\n */\n\nexport function clone(object) {\n  var result = {};\n  objectEach(object, function (value, key) {\n    result[key] = value;\n  });\n  return result;\n}\n/**\n * Extend the Base object (usually prototype) of the functionality the `mixins` objects.\n *\n * @param {object} Base Base object which will be extended.\n * @param {object} mixins The object of the functionality will be \"copied\".\n * @returns {object}\n */\n\nexport function mixin(Base) {\n  if (!Base.MIXINS) {\n    Base.MIXINS = [];\n  }\n\n  for (var _len = arguments.length, mixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    mixins[_key - 1] = arguments[_key];\n  }\n\n  arrayEach(mixins, function (mixinItem) {\n    Base.MIXINS.push(mixinItem.MIXIN_NAME);\n    objectEach(mixinItem, function (value, key) {\n      if (Base.prototype[key] !== void 0) {\n        throw new Error(\"Mixin conflict. Property '\".concat(key, \"' already exist and cannot be overwritten.\"));\n      }\n\n      if (typeof value === 'function') {\n        Base.prototype[key] = value;\n      } else {\n        var getter = function _getter(property, initialValue) {\n          var propertyName = \"_\".concat(property);\n\n          var initValue = function initValue(newValue) {\n            var result = newValue;\n\n            if (Array.isArray(result) || isObject(result)) {\n              result = deepClone(result);\n            }\n\n            return result;\n          };\n\n          return function () {\n            if (this[propertyName] === void 0) {\n              this[propertyName] = initValue(initialValue);\n            }\n\n            return this[propertyName];\n          };\n        };\n\n        var setter = function _setter(property) {\n          var propertyName = \"_\".concat(property);\n          return function (newValue) {\n            this[propertyName] = newValue;\n          };\n        };\n\n        Object.defineProperty(Base.prototype, key, {\n          get: getter(key, value),\n          set: setter(key),\n          configurable: true\n        });\n      }\n    });\n  });\n  return Base;\n}\n/**\n * Checks if two objects or arrays are (deep) equal.\n *\n * @param {object|Array} object1 The first object to compare.\n * @param {object|Array} object2 The second object to compare.\n * @returns {boolean}\n */\n\nexport function isObjectEqual(object1, object2) {\n  return JSON.stringify(object1) === JSON.stringify(object2);\n}\n/**\n * Determines whether given object is a plain Object.\n * Note: String and Array are not plain Objects.\n *\n * @param {*} object An object to check.\n * @returns {boolean}\n */\n\nexport function isObject(object) {\n  return Object.prototype.toString.call(object) === '[object Object]';\n}\n/**\n * @param {object} object The object on which to define the property.\n * @param {string} property The name of the property to be defined or modified.\n * @param {*} value The value associated with the property.\n * @param {object} options The descriptor for the property being defined or modified.\n */\n\nexport function defineGetter(object, property, value, options) {\n  options.value = value;\n  options.writable = options.writable !== false;\n  options.enumerable = options.enumerable !== false;\n  options.configurable = options.configurable !== false;\n  Object.defineProperty(object, property, options);\n}\n/**\n * A specialized version of `.forEach` for objects.\n *\n * @param {object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {object} Returns `object`.\n */\n\nexport function objectEach(object, iteratee) {\n  // eslint-disable-next-line no-restricted-syntax\n  for (var key in object) {\n    if (!object.hasOwnProperty || object.hasOwnProperty && Object.prototype.hasOwnProperty.call(object, key)) {\n      if (iteratee(object[key], key, object) === false) {\n        break;\n      }\n    }\n  }\n\n  return object;\n}\n/**\n * Get object property by its name. Access to sub properties can be achieved by dot notation (e.q. `'foo.bar.baz'`).\n *\n * @param {object} object Object which value will be exported.\n * @param {string} name Object property name.\n * @returns {*}\n */\n\nexport function getProperty(object, name) {\n  var names = name.split('.');\n  var result = object;\n  objectEach(names, function (nameItem) {\n    result = result[nameItem];\n\n    if (result === void 0) {\n      result = void 0;\n      return false;\n    }\n  });\n  return result;\n}\n/**\n * Set a property value on the provided object. Works on nested object prop names as well (e.g. `first.name`).\n *\n * @param {object} object Object to work on.\n * @param {string} name Prop name.\n * @param {*} value Value to be assigned at the provided property.\n */\n\nexport function setProperty(object, name, value) {\n  var names = name.split('.');\n  var workingObject = object;\n  names.forEach(function (propName, index) {\n    if (index !== names.length - 1) {\n      if (!hasOwnProperty(workingObject, propName)) {\n        workingObject[propName] = {};\n      }\n\n      workingObject = workingObject[propName];\n    } else {\n      workingObject[propName] = value;\n    }\n  });\n}\n/**\n * Return object length (recursively).\n *\n * @param {*} object Object for which we want get length.\n * @returns {number}\n */\n\nexport function deepObjectSize(object) {\n  if (!isObject(object)) {\n    return 0;\n  }\n\n  var recursObjLen = function recursObjLen(obj) {\n    var result = 0;\n\n    if (isObject(obj)) {\n      objectEach(obj, function (value, key) {\n        if (key === '__children') {\n          return;\n        }\n\n        result += recursObjLen(value);\n      });\n    } else {\n      result += 1;\n    }\n\n    return result;\n  };\n\n  return recursObjLen(object);\n}\n/**\n * Create object with property where its value change will be observed.\n *\n * @param {*} [defaultValue=undefined] Default value.\n * @param {string} [propertyToListen='value'] Property to listen.\n * @returns {object}\n */\n\nexport function createObjectPropListener(defaultValue) {\n  var _holder;\n\n  var propertyToListen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'value';\n  var privateProperty = \"_\".concat(propertyToListen);\n  var holder = (_holder = {\n    _touched: false\n  }, _defineProperty(_holder, privateProperty, defaultValue), _defineProperty(_holder, \"isTouched\", function isTouched() {\n    return this._touched;\n  }), _holder);\n  Object.defineProperty(holder, propertyToListen, {\n    get: function get() {\n      return this[privateProperty];\n    },\n    set: function set(value) {\n      this._touched = true;\n      this[privateProperty] = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return holder;\n}\n/**\n * Check if at specified `key` there is any value for `object`.\n *\n * @param {object} object Object to search value at specyfic key.\n * @param {string} key String key to check.\n * @returns {boolean}\n */\n\nexport function hasOwnProperty(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}"]},"metadata":{},"sourceType":"module"}