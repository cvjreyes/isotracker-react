{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\estimatedPipesExcel\\\\estimatedPipesExcel.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport \"./estimatedPipesExcel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EstimatedPipesExcel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      diameters: [],\n      areas: [],\n      trains: [\"01\", \"02\", \"03\", \"04\", \"05\"],\n      line_refs: [],\n      new_data: []\n    };\n\n    this.handleChange = (changes, source) => {\n      // console.log(this.state.data[changes[0][0]])\n      if (source !== 'loadData') {\n        if (changes[0][1] === 'Line reference') {\n          const options = {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getDataByRef/\" + changes[0][3], options).then(response => response.json()).then(json => {\n            let pipe_data = [];\n\n            for (let i = 0; i < json.length; i++) {\n              areas_options.push(json[i].name);\n            }\n\n            this.setState({\n              areas: areas_options\n            });\n          });\n        }\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/areas\", options).then(response => response.json()).then(json => {\n      let areas_options = [];\n\n      for (let i = 0; i < json.length; i++) {\n        areas_options.push(json[i].name);\n      }\n\n      this.setState({\n        areas: areas_options\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/diameters\", options).then(response => response.json()).then(json => {\n      let diameters = [];\n\n      for (let i = 0; i < json.diameters.length; i++) {\n        diameters.push(json.diameters[i].diameter);\n      }\n\n      this.setState({\n        diameters: diameters\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/lineRefs\", options).then(response => response.json()).then(json => {\n      let line_refs = [];\n      console.log(json);\n\n      for (let i = 0; i < json.line_refs.length; i++) {\n        line_refs.push(json.line_refs[i].line_ref);\n      }\n\n      this.setState({\n        line_refs: line_refs\n      });\n    });\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/modelledEstimatedPipes\", options).then(response => response.json()).then(async json => {\n      let rows = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        rows.push({\n          \"Line reference\": json.rows[i].line_reference,\n          \"Tag\": json.rows[i].tag,\n          \"Unit\": json.rows[i].unit,\n          \"Area\": json.rows[i].area,\n          \"Fluid\": json.rows[i].fluid,\n          \"Seq\": json.rows[i].seq,\n          \"Spec\": json.rows[i].spec,\n          \"Diameter\": json.rows[i].diameter,\n          \"Insulation\": json.rows[i].insulation,\n          \"Train\": json.rows[i].train,\n          \"Status\": json.rows[i].status,\n          \"id\": json.rows[i].id\n        });\n      }\n\n      await this.setState({\n        data: rows\n      });\n    });\n  }\n\n  addRow() {\n    let rows = this.state.data;\n    rows.push({\n      \"Line reference\": \"\",\n      \"Tag\": \"\",\n      \"Unit\": \"\",\n      \"Area\": \"\",\n      \"Fluid\": \"\",\n      \"Seq\": \"\",\n      \"Spec\": \"\",\n      \"Diameter\": \"\",\n      \"Insulation\": \"\",\n      \"Train\": \"\",\n      \"Status\": \"\"\n    });\n    this.setState({\n      data: rows\n    });\n  }\n\n  submitChanges() {\n    const body = {\n      rows: this.state.data\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    this.props.success();\n  }\n\n  render() {\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: [300, 400, 110, 210, 140, 130, 140, 110, 130, 110, 143],\n      fontSize: 24 //... other options\n\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hot-app\",\n        children: [/*#__PURE__*/_jsxDEV(HotTable, {\n          data: this.state.data,\n          colHeaders: [\"<b className='header'>Line reference</b>\", \"<b>Tag</b>\", \"<b>Unit</b>\", \"<b>Area</b>\", \"<b>Fluid</b>\", \"<b>Seq</b>\", \"<b>Spec</b>\", \"<b>Diameter</b>\", \"<b>Insulation</b>\", \"<b>Train</b>\", \"<b>Status</b>\"],\n          rowHeaders: true,\n          rowHeights: \"30px\",\n          columnHeaderHeight: 30,\n          width: \"100%\",\n          height: \"520\",\n          settings: settings,\n          manualColumnResize: true,\n          manualRowResize: true,\n          columns: [{\n            data: \"Line reference\",\n            type: 'dropdown',\n            source: this.state.line_refs,\n            strict: true\n          }, {\n            data: \"Tag\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Unit\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Area\",\n            type: 'dropdown',\n            source: this.state.areas,\n            strict: true\n          }, {\n            data: \"Fluid\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Seq\",\n            type: 'text',\n            readOnly: true\n          }.data, {\n            data: \"Spec\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Diameter\",\n            type: 'dropdown',\n            source: this.state.diameters,\n            strict: true\n          }, {\n            data: \"Insulation\",\n            type: 'text',\n            readOnly: true\n          }, {\n            data: \"Train\",\n            type: 'dropdown',\n            source: this.state.trains,\n            strict: true\n          }, {\n            data: \"Status\",\n            type: 'text',\n            readOnly: true\n          }],\n          filters: true,\n          dropdownMenu: ['make_read_only', '---------', 'alignment', '---------', 'filter_by_condition', '---------', 'filter_operators', '---------', 'filter_by_condition2', '---------', 'filter_by_value', '---------', 'filter_action_bar'],\n          afterChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"803px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-info\",\n            onClick: () => this.addRow(),\n            style: {\n              marginRight: \"5px\",\n              fontSize: \"16px\",\n              width: \"60px\",\n              borderRadius: \"10px\"\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-success\",\n            onClick: () => this.submitChanges(),\n            style: {\n              marginRight: \"5px\",\n              fontSize: \"16px\",\n              width: \"60px\",\n              borderRadius: \"10px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default EstimatedPipesExcel;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/estimatedPipesExcel/estimatedPipesExcel.js"],"names":["React","HotTable","EstimatedPipesExcel","Component","state","searchText","searchedColumn","data","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","diameters","areas","trains","line_refs","new_data","handleChange","changes","source","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","pipe_data","i","length","areas_options","push","name","setState","componentDidMount","diameter","console","log","line_ref","rows","line_reference","tag","unit","area","fluid","seq","spec","insulation","train","status","id","addRow","submitChanges","body","JSON","stringify","success","render","settings","licenseKey","colWidths","fontSize","type","strict","readOnly","marginLeft","marginRight","width","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport \"./estimatedPipesExcel.css\"\r\n\r\nclass EstimatedPipesExcel extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    diameters: [],\r\n    areas: [],\r\n    trains: [\"01\", \"02\", \"03\", \"04\", \"05\"],\r\n    line_refs: [],\r\n    new_data: []\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n\r\n  fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/areas\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      let areas_options = []\r\n      for(let i = 0; i < json.length; i++){\r\n        areas_options.push(json[i].name)\r\n      }\r\n      this.setState({areas : areas_options});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/diameters\", options)\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    let diameters = []\r\n    for(let i = 0; i < json.diameters.length; i++){\r\n      diameters.push(json.diameters[i].diameter)\r\n    }\r\n    this.setState({diameters : diameters});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/lineRefs\", options)\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    let line_refs = []\r\n    console.log(json)\r\n    for(let i = 0; i < json.line_refs.length; i++){\r\n      line_refs.push(json.line_refs[i].line_ref)\r\n    }\r\n    this.setState({line_refs : line_refs});\r\n\r\n  })\r\n\r\n  await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/modelledEstimatedPipes\", options)\r\n  .then(response => response.json())\r\n  .then(async json => {\r\n    let rows = [] \r\n    for(let i = 0; i < json.rows.length; i++){\r\n      rows.push({\"Line reference\": json.rows[i].line_reference, \"Tag\": json.rows[i].tag, \"Unit\": json.rows[i].unit, \"Area\": json.rows[i].area, \"Fluid\": json.rows[i].fluid, \"Seq\": json.rows[i].seq, \"Spec\": json.rows[i].spec, \"Diameter\": json.rows[i].diameter, \"Insulation\": json.rows[i].insulation, \"Train\": json.rows[i].train, \"Status\": json.rows[i].status, \"id\":json.rows[i].id})\r\n    }\r\n    await this.setState({data: rows})\r\n  })\r\n}\r\n\r\n  addRow(){\r\n    let rows = this.state.data\r\n    rows.push({\"Line reference\": \"\", \"Tag\": \"\", \"Unit\": \"\", \"Area\": \"\", \"Fluid\": \"\", \"Seq\": \"\", \"Spec\": \"\", \"Diameter\": \"\", \"Insulation\": \"\", \"Train\": \"\", \"Status\": \"\"})\r\n    this.setState({data: rows})\r\n  }\r\n  \r\n  submitChanges(){\r\n    const body = {\r\n      rows: this.state.data,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n\r\n    this.props.success()\r\n  }\r\n\r\n  handleChange = (changes, source) =>{\r\n    // console.log(this.state.data[changes[0][0]])\r\n    if (source !== 'loadData'){\r\n      if (changes[0][1] === 'Line reference'){\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n        }\r\n      \r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getDataByRef/\" + changes[0][3], options)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            let pipe_data = []\r\n            for(let i = 0; i < json.length; i++){\r\n              areas_options.push(json[i].name)\r\n            }\r\n            this.setState({areas : areas_options});\r\n      \r\n        })\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const settings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: [300, 400, 110, 210, 140, 130, 140, 110, 130, 110, 143],\r\n        fontSize: 24\r\n        //... other options\r\n      }\r\n  \r\n\r\n      return (\r\n          <div>\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.data}\r\n                colHeaders={[\"<b className='header'>Line reference</b>\", \"<b>Tag</b>\", \"<b>Unit</b>\", \"<b>Area</b>\", \"<b>Fluid</b>\", \"<b>Seq</b>\", \"<b>Spec</b>\", \"<b>Diameter</b>\", \"<b>Insulation</b>\", \"<b>Train</b>\", \"<b>Status</b>\"]}\r\n                rowHeaders={true}\r\n                rowHeights=\"30px\"\r\n                columnHeaderHeight={30}\r\n                width=\"100%\"\r\n                height=\"520\"\r\n                settings={settings}\r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Line reference\", type:'dropdown', source: this.state.line_refs, strict: true },{ data: \"Tag\", type:'text', readOnly: true},{ data: \"Unit\", type:'text', readOnly: true},{ data: \"Area\", type:'dropdown', source: this.state.areas, strict: true }, { data: \"Fluid\", type:'text', readOnly: true}, { data: \"Seq\", type:'text', readOnly: true}.data, { data: \"Spec\", type:'text', readOnly: true}, { data: \"Diameter\", type:'dropdown', source: this.state.diameters, strict: true}, { data: \"Insulation\", type:'text', readOnly: true},{ data: \"Train\", type:'dropdown', source: this.state.trains, strict: true},{ data: \"Status\", type:'text', readOnly: true}]}\r\n                filters={true}\r\n                dropdownMenu= {[\r\n                    'make_read_only',\r\n                    '---------',\r\n                    'alignment',\r\n                    '---------',\r\n                    'filter_by_condition',\r\n                    '---------',\r\n                    'filter_operators',\r\n                    '---------',\r\n                    'filter_by_condition2',\r\n                    '---------',\r\n                    'filter_by_value',\r\n                    '---------',\r\n                    'filter_action_bar',\r\n                  ]}\r\n                  afterChange={this.handleChange}\r\n              />\r\n              <br></br>\r\n              <div style={{marginLeft:\"803px\"}}>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRow()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChanges()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\", borderRadius:\"10px\"}}>Save</button>\r\n              </div>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default EstimatedPipesExcel;"]},"metadata":{},"sourceType":"module"}