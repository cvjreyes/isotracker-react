{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\instExcelEdit\\\\instExcelEdit.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\n\nclass InstExcelEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: [],\n      areas: [],\n      types: []\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/equipments/estimated\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n      rows.push({\n        \"Area\": \"Area\",\n        \"Type\": \"Type\",\n        \"Quantity\": \"Quantity\"\n      });\n\n      for (let i = 0; i < json.rows.length; i++) {\n        row = {\n          \"Area\": json.rows[i].area,\n          \"Type\": json.rows[i].type,\n          \"Quantity\": json.rows[i].quantity\n        };\n        rows.push(row);\n      }\n\n      this.setState({\n        data: rows,\n        selectedRows: []\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/areas\", options).then(response => response.json()).then(json => {\n      let areas_options = [];\n\n      for (let i = 0; i < json.length; i++) {\n        areas_options.push(json[i].name);\n      }\n\n      this.setState({\n        areas: areas_options\n      });\n    });\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/equipments/types\", options).then(response => response.json()).then(json => {\n      console.log(json);\n      let types_options = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        types_options.push(json.rows[i].name);\n      }\n\n      this.setState({\n        types: types_options\n      });\n    });\n  }\n\n  addRow() {\n    let rows = this.state.data;\n    rows.push([\"\", \"\", \"\"]);\n    this.setState({\n      data: rows\n    });\n  }\n\n  submitChanges() {\n    const body = {\n      rows: this.state.data\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submit/equipments/estimated\", options).then(response => response.json()).then(json => {\n      if (json.error) {\n        console.log(\"error\");\n      } else {\n        console.log(\"success\");\n      }\n    });\n  }\n\n  render() {\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      colWidths: 400 //... other options\n\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"12%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hot-app\",\n        children: [/*#__PURE__*/_jsxDEV(HotTable, {\n          data: this.state.data,\n          colHeaders: true,\n          rowHeaders: true,\n          width: \"1276\",\n          height: \"650\",\n          settings: settings,\n          manualColumnResize: true,\n          manualRowResize: true,\n          columns: [{\n            data: \"Area\",\n            type: 'dropdown',\n            source: this.state.areas\n          }, {\n            data: \"Type\",\n            type: 'dropdown',\n            source: this.state.types\n          }, {\n            data: \"Quantity\",\n            type: \"numeric\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"580px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-info\",\n            onClick: () => this.addRow(),\n            style: {\n              marginRight: \"5px\",\n              fontSize: \"16px\",\n              width: \"60px\"\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-sm btn-success\",\n            onClick: () => this.submitChanges(),\n            style: {\n              marginRight: \"5px\",\n              fontSize: \"16px\",\n              width: \"60px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default InstExcelEdit;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/instExcelEdit/instExcelEdit.js"],"names":["React","HotTable","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","InstExcelEdit","Component","state","searchText","searchedColumn","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","areas","types","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","row","push","i","length","area","type","quantity","setState","areas_options","name","console","log","types_options","addRow","submitChanges","body","JSON","stringify","error","render","settings","licenseKey","colWidths","marginLeft","source","marginRight","fontSize","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\n\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass InstExcelEdit extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: [],\r\n    areas: [],\r\n    types: [],\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/estimated\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      var rows = []\r\n      var row = null\r\n      rows.push({\"Area\": \"Area\", \"Type\": \"Type\", \"Quantity\": \"Quantity\"})\r\n      for(let i = 0; i < json.rows.length; i++){\r\n\r\n          row = {\"Area\": json.rows[i].area, \"Type\": json.rows[i].type, \"Quantity\": json.rows[i].quantity}\r\n\r\n          rows.push(row)\r\n      }\r\n      this.setState({data : rows, selectedRows: []});\r\n\r\n  }) \r\n\r\n  fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/areas\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      let areas_options = []\r\n      for(let i = 0; i < json.length; i++){\r\n        areas_options.push(json[i].name)\r\n      }\r\n      this.setState({areas : areas_options});\r\n\r\n  })\r\n\r\n  fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/types\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n        console.log(json)\r\n      let types_options = []\r\n      for(let i = 0; i < json.rows.length; i++){\r\n        types_options.push(json.rows[i].name)\r\n      }\r\n      this.setState({types : types_options});\r\n\r\n  })\r\n}\r\n\r\n  addRow(){\r\n    let rows = this.state.data\r\n    rows.push([\"\",\"\",\"\"])\r\n    this.setState({data: rows})\r\n  }\r\n  \r\n  submitChanges(){\r\n    const body = {\r\n      rows: this.state.data,\r\n    }\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submit/equipments/estimated\", options)\r\n    .then(response => response.json())\r\n    .then(json =>{\r\n      if(json.error){\r\n        console.log(\"error\")\r\n      }else{\r\n        console.log(\"success\")\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const settings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 400,\r\n        //... other options\r\n      }\r\n  \r\n\r\n      return (\r\n          <div style={{marginLeft:\"12%\"}}>\r\n            <div id=\"hot-app\">\r\n              <HotTable\r\n                data={this.state.data}\r\n                colHeaders={true}\r\n                rowHeaders={true}\r\n                width=\"1276\"\r\n                height=\"650\"\r\n                settings={settings} \r\n                manualColumnResize={true}\r\n                manualRowResize={true}\r\n                columns= {[{ data: \"Area\", type:'dropdown', source: this.state.areas }, { data: \"Type\", type:'dropdown', source: this.state.types }, {data: \"Quantity\", type:\"numeric\"}]}\r\n              />\r\n              <br></br>\r\n              <div style={{marginLeft:\"580px\"}}>\r\n                  <button class=\"btn btn-sm btn-info\" onClick={() => this.addRow()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\"}}>Add</button>\r\n                  <button class=\"btn btn-sm btn-success\" onClick={() => this.submitChanges()} style={{marginRight:\"5px\", fontSize:\"16px\", width:\"60px\"}}>Save</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default InstExcelEdit;"]},"metadata":{},"sourceType":"module"}