{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\isoCtrl\\\\isoCtrl.js\",\n    _s = $RefreshSig$();\n\nimport DataTable from \"../../components/datatable/datatable\";\nimport ReportBtns from \"../../components/reportBtns/reportBtns\";\nimport StateTable from \"../../components/stateTable/stateTable\";\nimport NavBtns from \"../../components/navBtns/navBtns\";\nimport DragAndDrop from \"../../components/dragAndDrop/dragAndDrop\";\nimport \"./isoCtrl.css\";\nimport React, { useState, useEffect } from 'react';\nimport ActionButtons from \"../../components/actionBtns/actionBtns\";\nimport SelectPag from \"../../components/selectPag/selectPag\";\nimport CheckInTable from \"../../components/checkInTable/checkInTable\";\nimport NavBar from '../../components/navBar/navBar';\nimport MyTrayBtn from \"../../components/myTrayBtn/myTrayBtn\";\nimport MyTrayTable from \"../../components/myTrayTable/myTrayTable\";\nimport BinBtn from '../../components/binBtn/binBtn';\nimport BinTable from \"../../components/binTable/binTable\";\nimport OnHoldTable from \"../../components/onHoldTable/onHoldTable\";\nimport StatusDataTable from \"../../components/statusDataTable/statusDataTable\";\nimport HistoryDataTable from \"../../components/historyDataTable/historyDataTable\";\nimport RoleDropDown from \"../../components/roleDropDown/roleDropDown\";\nimport Alert from '@material-ui/lab/Alert';\nimport Collapse from '@material-ui/core/Collapse';\nimport OnHoldBtn from \"../../components/onHoldBtn/onHoldBtn\";\nimport ProcInsBtn from \"../../components/procInsBtn/procInsBtn\";\nimport ReportsBtn from \"../../components/reportsBtn/reportsBtn\";\nimport ProcInstTable from \"../../components/procInstTable/procInstTable\";\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport ReportBoxBtns from \"../../components/reportBoxBtns/reportBoxBtns\";\nimport IssuedBtn from \"../../components/issuedBtn/issuedBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IsoCtrl = () => {\n  _s();\n\n  document.body.style.zoom = 0.9;\n  const [pagination, setPagination] = useState(8); //Controla el numero de entradas por pagina de la tabla\n\n  const [currentRole, setCurrentRole] = useState();\n  const [roles, setRoles] = useState();\n  const [selected, setSelected] = useState([]);\n  const [updateData, setUpdateData] = useState();\n  const [comment, setComment] = useState(\" \");\n  const [commentAlert, setCommentAlert] = useState(false);\n  const [downloadZip, setDownloadzip] = useState(new JSZip());\n  const [loading, setLoading] = useState(false);\n  const [errorUnclaim, setErrorUnclaim] = useState(false);\n  const [errorPI, setErrorPI] = useState(false);\n  const [errorCL, setErrorCL] = useState(false);\n  const [transactionSuccess, setTransactionSuccess] = useState(false);\n  const [errorReports, setErrorReports] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [realProgress, setRealProgress] = useState(0);\n  const [progressISO, setProgressISO] = useState(0);\n  const [realProgressISO, setRealProgressISO] = useState(0);\n  const [errorUnclaimR, setErrorUnclaimR] = useState(false);\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"tab\")); //Controla la tabla y botones que se muestran\n  //La altura de la tabla es fija en funcion de la paginacion para evitar que los botones se muevan\n\n  var dataTableHeight = 8;\n\n  if (pagination === 8) {\n    dataTableHeight = \"520px\";\n  }\n\n  if (pagination === 25) {\n    dataTableHeight = \"1220px\";\n  }\n\n  if (pagination === 50) {\n    dataTableHeight = \"2230px\";\n  }\n\n  if (pagination === 100) {\n    dataTableHeight = \"4300px\";\n  } //Componentes de la pagina que varian en funcion del estado\n\n\n  var uploadButton, actionButtons, actionText, commentBox, tableContent, procInsBtn, issuedBtn;\n  var currentTabText = currentTab;\n\n  if (currentTabText === \"LDE/IsoControl\") {\n    currentTabText = \"LOS/IsoControl\";\n  }\n\n  tableContent = /*#__PURE__*/_jsxDEV(DataTable, {\n    forceUnclaim: forceUnclaim.bind(this),\n    onChange: value => setSelected(value),\n    selected: selected,\n    pagination: pagination,\n    currentTab: currentTab,\n    currentRole: currentRole,\n    updateData: updateData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 20\n  }, this);\n\n  var pageSelector = /*#__PURE__*/_jsxDEV(SelectPag, {\n    onChange: value => setPagination(value),\n    pagination: pagination\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 24\n  }, this);\n\n  var currentUser = secureStorage.getItem('user');\n  const body = {\n    user: currentUser\n  };\n  useEffect(() => {\n    setUpdateData(!updateData);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://localhost:5000/api/roles/user\", options).then(response => response.json()).then(json => {\n      setRoles(json.roles);\n\n      if (secureStorage.getItem('role') !== null) {\n        setCurrentRole(secureStorage.getItem('role'));\n      } else {\n        secureStorage.setItem('role', json.roles[0]);\n        setCurrentRole(secureStorage.getItem('role'));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    setErrorPI(false);\n    setErrorUnclaimR(false);\n    setErrorCL(false);\n    setUpdateData(!updateData);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setErrorReports(false);\n    setLoading(false);\n  }, [currentRole]);\n  useEffect(() => {\n    setErrorUnclaimR(false);\n    setErrorPI(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setLoading(false);\n    setErrorReports(false);\n  }, [currentTab]);\n\n  const getProgress = () => {\n    const options = {\n      method: \"GET\"\n    };\n    fetch(\"http://localhost:5000/currentProgressISO\", options).then(response => response.json()).then(async json => {\n      await setProgressISO(json.progressISO);\n      await setRealProgressISO(json.realprogressISO);\n    });\n    fetch(\"http://localhost:5000/currentProgress\", options).then(response => response.json()).then(async json => {\n      await setProgress(json.progress);\n      await setRealProgress(json.realprogress);\n    });\n  };\n\n  const claim = async event => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    console.log(selected);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      if (currentTab === \"Process\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/claimProc\", options);\n        }\n      } else if (currentTab === \"Instrument\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/claimInst\", options);\n        }\n      } else {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/claim\", options);\n        }\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n    }\n  };\n\n  const forceClaim = async username => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: username,\n          file: selected[i],\n          los: currentUser\n        };\n        console.log(body);\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://localhost:5000/forceClaim\", options);\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n    }\n  };\n\n  const unclaim = async event => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      if (currentRole === \"Process\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/unclaimProc\", options);\n        }\n      } else if (currentRole === \"Instrument\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          console.log(body);\n          await fetch(\"http://localhost:5000/unclaimInst\", options);\n        }\n      } else {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/unclaim\", options).then(response => response.json()).then(json => {\n            if (json.error === \"forced\") {\n              setErrorUnclaim(true);\n            } else if (json.error === \"returned\") {\n              setErrorUnclaimR(true);\n            }\n          }).catch(err => {});\n        }\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n    }\n  };\n\n  async function forceUnclaim(fileName) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    console.log(body);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    console.log(body);\n    await fetch(\"http://localhost:5000/forceUnclaim\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n  }\n\n  const verifyClick = async event => {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setLoading(true);\n    console.log(\"Envio a verify\");\n\n    if (selected.length > 0) {\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://localhost:5000/verify\", options);\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n    }\n  };\n\n  async function cancelVerifyClick(filename) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: filename,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://localhost:5000/cancelVerify\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n  }\n\n  async function transaction(destiny) {\n    if (selected.length > 0) {\n      setErrorUnclaimR(false);\n      setErrorReports(false);\n      setErrorCL(false);\n      setErrorUnclaim(false);\n      setErrorPI(false);\n      setTransactionSuccess(false);\n      setLoading(true);\n\n      if (destiny === \"Design\") {\n        if (comment.length > 1) {\n          setComment(\" \");\n          setCommentAlert(false);\n          localStorage.setItem(\"update\", true);\n\n          for (let i = 0; i < selected.length; i++) {\n            const body = {\n              user: currentUser,\n              fileName: selected[i],\n              to: destiny,\n              role: secureStorage.getItem(\"role\"),\n              comment: comment,\n              deleted: 0,\n              onhold: 0\n            };\n            const options = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(body)\n            };\n            await fetch(\"http://localhost:5000/api/transaction\", options);\n            setTransactionSuccess(true);\n          }\n        } else {\n          console.log(\"vacio\");\n          setCommentAlert(true);\n        }\n      } else if (destiny === \"LDE/Isocontrol\") {\n        for (let i = 0; i < selected.length; i++) {\n          const options = {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          await fetch(\"http://localhost:5000/piStatus/\" + selected[i], options).then(response => response.json()).then(async json => {\n            if (json.sit === 1 || json.sit === 4 || json.spo === 1 || json.spo === 4) {\n              localStorage.setItem(\"update\", true);\n              setErrorPI(true);\n              setTransactionSuccess(false);\n            } else {\n              setCommentAlert(false);\n              localStorage.setItem(\"update\", true);\n              let deleted,\n                  hold = 0;\n              const body = {\n                user: currentUser,\n                fileName: selected[i],\n                to: destiny,\n                role: secureStorage.getItem(\"role\"),\n                comment: null,\n                deleted: deleted,\n                onhold: hold\n              };\n              const options = {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              };\n              await fetch(\"http://localhost:5000/api/transaction\", options).then(response => response.json()).then(json => {\n                console.log(json);\n              }).catch(async error => {\n                await setErrorCL(true);\n                console.log(errorCL);\n              });\n\n              if (!errorCL) {\n                setTransactionSuccess(true);\n              }\n            }\n          });\n        }\n\n        await setUpdateData(!updateData);\n        setLoading(false);\n      } else {\n        setCommentAlert(false);\n        localStorage.setItem(\"update\", true);\n        let deleted,\n            hold = 0;\n\n        if (destiny === \"Recycle bin\") {\n          deleted = 1;\n        }\n\n        if (destiny === \"On hold\") {\n          hold = 1;\n        }\n\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            fileName: selected[i],\n            to: destiny,\n            role: secureStorage.getItem(\"role\"),\n            comment: null,\n            deleted: deleted,\n            onhold: hold\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/api/transaction\", options);\n          setTransactionSuccess(true);\n        }\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n    }\n  }\n\n  async function returnLead(destiny) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setErrorUnclaimR(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n\n    for (let i = 0; i < selected.length; i++) {\n      const body = {\n        user: currentUser,\n        fileName: selected[i],\n        to: destiny\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      await fetch(\"http://localhost:5000/api/returnLead\", options);\n      setTransactionSuccess(true);\n    }\n\n    await setUpdateData(!updateData);\n    setLoading(false);\n    await getProgress();\n  }\n\n  function handleComment(event) {\n    setComment(event.target.value);\n  }\n\n  async function restore() {\n    setErrorReports(false);\n    setErrorUnclaimR(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    console.log(selected.length);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          fileName: selected[i],\n          user: currentUser,\n          deleted: 0,\n          onhold: 0\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://localhost:5000/restore\", options);\n        setTransactionSuccess(true);\n      }\n\n      await setUpdateData(!updateData);\n      console.log(\"restored\");\n      setLoading(false);\n      await getProgress();\n    }\n  }\n\n  function procOrInst(tab) {\n    if (tab === \"Process\" || tab === \"Instrument\") {\n      setCurrentTab(tab);\n    } else if (currentRole === \"Process\") {\n      setCurrentTab(\"Process\");\n    } else {\n      setCurrentTab(\"Instrument\");\n    }\n  }\n\n  async function sendProcessClick(fileName) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://localhost:5000/process\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n  }\n\n  async function sendInstrumentClick(fileName) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setErrorUnclaimR(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://localhost:5000/instrument\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n  }\n\n  function updateD() {\n    setUpdateData(!updateData);\n  }\n\n  async function downloadFiles() {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setErrorCL(false);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n    /*\r\n    if(selected.length === 1){\r\n        localStorage.setItem(\"update\", true)\r\n        for (let i = 0; i < selected.length; i++){\r\n            const options = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/pdf\"\r\n                }\r\n            }\r\n            await fetch(\"http://localhost:5000/download/\"+selected[i], options)\r\n            .then(res => res.blob())\r\n                .then(response =>{\r\n                    console.log(\"Se descarga\")\r\n                    download(new Blob([response]), selected[i], \"application/pdf\")\r\n                })\r\n        }\r\n    }else if (selected.length > 1){\r\n        localStorage.setItem(\"update\", true)\r\n        for (let i = 0; i < selected.length; i++){\r\n              const options = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/pdf\"\r\n                }\r\n            }\r\n            await fetch(\"http://localhost:5000/download/\"+selected[i], options)\r\n            .then(res => res.blob())\r\n                .then(response =>{\r\n                    setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                })\r\n        }\r\n        const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n        downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n            saveAs(blob,  zipname)\r\n        })\r\n        \r\n    }\r\n    await setUpdateData(!updateData)\r\n    await setDownloadzip(new JSZip())   \r\n    setLoading(false)\r\n    */\n\n    for (let i = 0; i < selected.length; i++) {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/pdf\"\n        }\n      };\n      await fetch(\"http://localhost:5000/getAttach/\" + selected[i], options).then(response => response.json()).then(async json => {\n        await fetch(\"http://localhost:5000/download/\" + selected[i], options).then(res => res.blob()).then(async response => {\n          setDownloadzip(downloadZip.file(selected[i], new Blob([response]), {\n            binary: true\n          }));\n\n          for (let i = 0; i < json.length; i++) {\n            await fetch(\"http://localhost:5000/download/\" + json[i], options).then(res => res.blob()).then(response => {\n              setDownloadzip(downloadZip.file(json[i], new Blob([response]), {\n                binary: true\n              }));\n            });\n          }\n        });\n      });\n    }\n\n    const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1));\n    downloadZip.generateAsync({\n      type: \"blob\"\n    }).then(function (blob) {\n      // 1) generate the zip file\n      saveAs(blob, zipname);\n    });\n    await setDownloadzip(new JSZip()); //await setAttachFiles(null)\n\n    await setUpdateData(!updateData);\n    setLoading(false);\n  }\n\n  async function downloadHistory() {\n    setErrorReports(false);\n    await fetch(\"http://localhost:5000/downloadHistory/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"FROM\", \"TO\", \"DATE\", \"COMMENT\", \"USER\"];\n      exportToExcel(JSON.parse(json), \"Comments\", headers);\n    });\n  }\n\n  async function downloadStatus() {\n    setErrorReports(false);\n    await fetch(\"http://localhost:5000/downloadStatus/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"START_DATE\", \"CURRENT_DATE\", \"CONDITION\"];\n      exportToExcel(JSON.parse(json), \"Status\", headers);\n    });\n  }\n\n  async function downloadPI() {\n    setErrorReports(false);\n    await fetch(\"http://localhost:5000/downloadPI/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"PROCESS\", \"INSTRUMENTATION\", \"UPDATED_AT\"];\n      exportToExcel(JSON.parse(json), \"IsoStatusSIT-SPO\", headers);\n    });\n  }\n\n  async function downloadIssued() {\n    setErrorReports(false);\n    await fetch(\"http://localhost:5000/downloadIssued/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"REV0\", \"REV1\", \"REV2\", \"REV3\", \"REV4\"];\n      exportToExcel(JSON.parse(json), \"IsoStatusIssued\", headers);\n    });\n  }\n\n  const exportToExcel = (apiData, fileName, headers) => {\n    setErrorReports(false);\n    const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1'];\n    const fileExtension = \".xlsx\";\n    let wscols = [];\n\n    for (let i = 0; i < headers.length; i++) {\n      wscols.push({\n        width: 35\n      });\n    }\n\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    ws[\"!cols\"] = wscols;\n\n    for (let i = 0; i < headers.length; i++) {\n      ws[header_cells[i]].v = headers[i];\n    }\n\n    const wb = {\n      Sheets: {\n        data: ws\n      },\n      SheetNames: [\"data\"]\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  async function setUploading(active) {\n    setErrorReports(false);\n    setLoading(active);\n\n    if (!active) {\n      setTransactionSuccess(true);\n    }\n  }\n\n  async function setErrorReport() {\n    setErrorReports(true);\n  }\n\n  async function issue(transmittal, date) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setLoading(true);\n    console.log(transmittal);\n\n    if (selected.length > 0) {\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole,\n          transmittal: transmittal,\n          date: date\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://localhost:5000/toIssue\", options);\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n    }\n  }\n\n  async function newRev() {\n    setErrorReports(false);\n    setErrorUnclaimR(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setLoading(true);\n\n    if (selected.length > 0) {\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://localhost:5000/newRev\", options);\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n    }\n  }\n\n  async function request() {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setLoading(true);\n\n    if (selected.length > 0) {\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://localhost:5000/request\", options);\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n    }\n  }\n\n  async function returnIso(destiny, comments) {\n    setErrorUnclaimR(false);\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorCL(false);\n    setErrorUnclaim(false);\n    setLoading(true);\n\n    if (selected.length > 0) {\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole,\n          from: currentTab,\n          destiny: destiny,\n          comments: comments\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://localhost:5000/returnIso\", options);\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n    }\n  }\n\n  if (currentTab === \"Upload IsoFiles\") {\n    secureStorage.setItem(\"tab\", \"Upload IsoFiles\");\n    uploadButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info btn-lg\",\n      style: {\n        backgroundColor: \"#17a2b8\",\n        width: \"180px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 127\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 24\n    }, this);\n    tableContent = /*#__PURE__*/_jsxDEV(DragAndDrop, {\n      mode: \"upload\",\n      user: currentUser,\n      uploaded: getProgress.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 24\n    }, this);\n    pageSelector = null;\n  }\n\n  if (currentTab === \"Design\" && currentRole === \"Design\") {\n    uploadButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info btn-lg\",\n      style: {\n        backgroundColor: \"lightblue\",\n        width: \"180px\"\n      },\n      onClick: () => setCurrentTab(\"Upload IsoFiles\"),\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 182\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"CheckBy\") {\n    tableContent = /*#__PURE__*/_jsxDEV(CheckInTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"My Tray\") {\n    tableContent = /*#__PURE__*/_jsxDEV(MyTrayTable, {\n      onChange: value => setSelected(value),\n      cancelVerifyClick: cancelVerifyClick.bind(this),\n      sendProcessClick: sendProcessClick.bind(this),\n      sendInstrumentClick: sendInstrumentClick.bind(this),\n      updateD: updateD.bind(this),\n      pagination: pagination,\n      currentRole: currentRole,\n      currentUser: currentUser,\n      selected: selected,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Recycle bin\") {\n    tableContent = /*#__PURE__*/_jsxDEV(BinTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"On hold\") {\n    tableContent = /*#__PURE__*/_jsxDEV(OnHoldTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Status\") {\n    tableContent = /*#__PURE__*/_jsxDEV(StatusDataTable, {\n      pagination: pagination,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"History\") {\n    tableContent = /*#__PURE__*/_jsxDEV(HistoryDataTable, {\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1038,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentRole === \"Process\" || currentRole === \"Instrument\" || currentRole === \"SpecialityLead\") {\n    procInsBtn = /*#__PURE__*/_jsxDEV(ProcInsBtn, {\n      onChange: value => procOrInst(value),\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 22\n    }, this);\n  }\n\n  if (currentTab === \"Process\" || currentTab === \"Instrument\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ProcInstTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Reports\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ReportBoxBtns, {\n      downloadHistory: downloadHistory.bind(this),\n      downloadStatus: downloadStatus.bind(this),\n      downloadPI: downloadPI.bind(this),\n      downloadIssued: downloadIssued.bind(this),\n      setErrorReport: setErrorReport.bind(this),\n      setUploading: setUploading.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"My Tray\" || currentTab === \"LDE/IsoControl\") {\n    commentBox = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Comments\",\n        class: \"comments\",\n        cols: \"100\",\n        rows: \"2\",\n        required: \"\",\n        maxlength: \"400\",\n        name: \"comments\",\n        value: comment,\n        onChange: handleComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1049,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 22\n    }, this);\n  }\n\n  if ((currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Design\" || (currentRole === \"Stress\" || currentRole === \"StressLead\") && currentTab === \"Stress\" || (currentRole === \"Supports\" || currentRole === \"SupportsLead\") && currentTab === \"Supports\" || currentRole === \"Materials\" && currentTab === \"Materials\" || currentRole === \"Issuer\" && currentTab === \"Issuer\" || currentRole === \"SpecialityLead\" || currentTab === \"SpecialityLead\" || currentTab === \"My Tray\" || (currentTab === \"Recycle bin\" || currentTab === \"On hold\") && currentRole === \"DesignLead\" || currentRole === \"SpecialityLead\" || currentTab === \"Process\" && currentRole === \"Process\" || currentRole === \"Instrument\" && currentTab === \"Instrument\" || (currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Issued\") {\n    actionText = /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"progress__text\",\n      children: \"Click an action for selected IsoFiles:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 22\n    }, this);\n    actionButtons = /*#__PURE__*/_jsxDEV(ActionButtons, {\n      claimClick: claim.bind(this),\n      verifyClick: verifyClick.bind(this),\n      unclaimClick: unclaim.bind(this),\n      transaction: transaction.bind(this),\n      restoreClick: restore.bind(this),\n      returnLead: returnLead.bind(this),\n      downloadFiles: downloadFiles.bind(this),\n      forceClaim: forceClaim.bind(this),\n      issue: issue.bind(this),\n      newRev: newRev.bind(this),\n      request: request.bind(this),\n      returnIso: returnIso.bind(this),\n      onlyDownload: false,\n      currentTab: currentTab,\n      user: currentUser,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 25\n    }, this);\n  } else if (currentTab !== \"History\" && currentTab !== \"Upload IsoFiles\" && currentTab !== \"Recycle bin\" && currentTab !== \"Reports\") {\n    actionText = /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"progress__text\",\n      children: \"Click an action for selected IsoFiles:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 22\n    }, this);\n    actionButtons = /*#__PURE__*/_jsxDEV(ActionButtons, {\n      claimClick: claim.bind(this),\n      verifyClick: verifyClick.bind(this),\n      unclaimClick: unclaim.bind(this),\n      transaction: transaction.bind(this),\n      restoreClick: restore.bind(this),\n      returnLead: returnLead.bind(this),\n      downloadFiles: downloadFiles.bind(this),\n      forceClaim: forceClaim.bind(this),\n      issue: issue.bind(this),\n      newRev: newRev.bind(this),\n      request: request.bind(this),\n      returnIso: returnIso.bind(this),\n      onlyDownload: true,\n      currentTab: currentTab,\n      user: currentUser,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1067,\n      columnNumber: 25\n    }, this);\n  }\n\n  if (currentTab === \"LDE/IsoControl\" || currentTab === \"Issued\") {\n    issuedBtn = /*#__PURE__*/_jsxDEV(IssuedBtn, {\n      onChange: value => setCurrentTab(\"Issued\"),\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1070,\n      columnNumber: 21\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onChange: value => setCurrentTab(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isoCtrl__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(Collapse, {\n          in: loading,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"info\",\n            children: \"Processing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorPI,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"At least one isometric was on revision and wasn't sent to LDE/Isocontrol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: transactionSuccess,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"success\",\n            children: \"Successful!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorUnclaim,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"Can't unclaim an iso assigned by LOS!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorUnclaimR,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"Can't unclaim a returned ISO!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorReports,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"Missing columns!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorCL,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              fontSize: \"22px\",\n              position: \"fixed\",\n              left: \"50%\",\n              top: \"10%\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"Missing clean!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roleSelector__container\",\n            children: /*#__PURE__*/_jsxDEV(RoleDropDown, {\n              style: {\n                paddingLeft: \"2px\"\n              },\n              onChange: value => setCurrentRole(value),\n              roles: roles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iso__title\",\n              children: \"IsoTracker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"iso__subtitle\",\n          children: currentTabText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(MyTrayBtn, {\n              onChange: value => setCurrentTab(value),\n              currentTab: currentTab\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"reportBtns__container\",\n              style: {\n                width: \"380px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ReportBtns, {\n                onChange: value => setCurrentTab(value),\n                currentTab: currentTab\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: uploadButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stateTable__container\",\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: \"75 %\"\n                },\n                children: /*#__PURE__*/_jsxDEV(StateTable, {\n                  updateData: updateData,\n                  currentRole: currentRole,\n                  progress: progress,\n                  realProgress: realProgress,\n                  progressISO: progressISO,\n                  realProgressISO: realProgressISO\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1149,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          width: \"500px\"\n        },\n        children: [pageSelector, /*#__PURE__*/_jsxDEV(BinBtn, {\n          onChange: value => setCurrentTab(\"Recycle bin\"),\n          currentTab: currentTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(OnHoldBtn, {\n          onChange: value => setCurrentTab(\"On hold\"),\n          currentTab: currentTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ReportsBtn, {\n          onChange: value => setCurrentTab(\"Reports\"),\n          currentTab: currentTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 19\n        }, this), procInsBtn, issuedBtn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: dataTableHeight\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 21\n        }, this), tableContent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom__container\",\n        children: [/*#__PURE__*/_jsxDEV(Collapse, {\n          in: commentAlert,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: \"Add a comment before sending the isos back to design!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          className: \"actionBtns__container\",\n          children: [actionText, actionButtons]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          className: \"commentBox__container\",\n          children: commentBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      className: \"navBtns__center\",\n      children: /*#__PURE__*/_jsxDEV(NavBtns, {\n        onChange: value => setCurrentTab(value),\n        currentTab: currentTab,\n        currentRole: currentRole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1076,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IsoCtrl, \"R0Rp9qqVlzTIZcqITENILvsMsHc=\");\n\n_c = IsoCtrl;\nexport default IsoCtrl;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsoCtrl\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/isoCtrl/isoCtrl.js"],"names":["DataTable","ReportBtns","StateTable","NavBtns","DragAndDrop","React","useState","useEffect","ActionButtons","SelectPag","CheckInTable","NavBar","MyTrayBtn","MyTrayTable","BinBtn","BinTable","OnHoldTable","StatusDataTable","HistoryDataTable","RoleDropDown","Alert","Collapse","OnHoldBtn","ProcInsBtn","ReportsBtn","ProcInstTable","JSZip","saveAs","FileSaver","XLSX","ReportBoxBtns","IssuedBtn","IsoCtrl","document","body","style","zoom","pagination","setPagination","currentRole","setCurrentRole","roles","setRoles","selected","setSelected","updateData","setUpdateData","comment","setComment","commentAlert","setCommentAlert","downloadZip","setDownloadzip","loading","setLoading","errorUnclaim","setErrorUnclaim","errorPI","setErrorPI","errorCL","setErrorCL","transactionSuccess","setTransactionSuccess","errorReports","setErrorReports","progress","setProgress","realProgress","setRealProgress","progressISO","setProgressISO","realProgressISO","setRealProgressISO","errorUnclaimR","setErrorUnclaimR","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","currentTab","setCurrentTab","getItem","dataTableHeight","uploadButton","actionButtons","actionText","commentBox","tableContent","procInsBtn","issuedBtn","currentTabText","forceUnclaim","bind","value","pageSelector","currentUser","user","options","method","headers","JSON","stringify","fetch","then","response","json","setItem","catch","error","console","log","getProgress","realprogressISO","realprogress","claim","event","length","i","file","role","forceClaim","username","los","unclaim","err","fileName","verifyClick","cancelVerifyClick","filename","transaction","destiny","to","deleted","onhold","sit","spo","hold","returnLead","handleComment","target","restore","procOrInst","tab","sendProcessClick","sendInstrumentClick","updateD","downloadFiles","res","blob","Blob","binary","zipname","String","Date","toLocaleString","replace","split","slice","generateAsync","type","downloadHistory","exportToExcel","parse","downloadStatus","downloadPI","downloadIssued","apiData","fileType","header_cells","fileExtension","wscols","push","width","ws","utils","json_to_sheet","v","wb","Sheets","SheetNames","excelBuffer","write","bookType","setUploading","active","setErrorReport","issue","transmittal","date","newRev","request","returnIso","comments","from","backgroundColor","fontSize","position","left","top","transform","zIndex","paddingLeft","display","height"],"mappings":"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","sourcesContent":["import DataTable from \"../../components/datatable/datatable\"\r\nimport ReportBtns from \"../../components/reportBtns/reportBtns\"\r\nimport StateTable from \"../../components/stateTable/stateTable\"\r\nimport NavBtns from \"../../components/navBtns/navBtns\"\r\nimport DragAndDrop from \"../../components/dragAndDrop/dragAndDrop\"\r\nimport \"./isoCtrl.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport ActionButtons from \"../../components/actionBtns/actionBtns\"\r\nimport SelectPag from \"../../components/selectPag/selectPag\"\r\nimport CheckInTable from \"../../components/checkInTable/checkInTable\"\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport MyTrayBtn from \"../../components/myTrayBtn/myTrayBtn\"\r\nimport MyTrayTable from \"../../components/myTrayTable/myTrayTable\"\r\nimport BinBtn from '../../components/binBtn/binBtn'\r\nimport BinTable from \"../../components/binTable/binTable\"\r\nimport OnHoldTable from \"../../components/onHoldTable/onHoldTable\"\r\nimport StatusDataTable from \"../../components/statusDataTable/statusDataTable\"\r\nimport HistoryDataTable from \"../../components/historyDataTable/historyDataTable\"\r\nimport RoleDropDown from \"../../components/roleDropDown/roleDropDown\"\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport OnHoldBtn from \"../../components/onHoldBtn/onHoldBtn\"\r\nimport ProcInsBtn from \"../../components/procInsBtn/procInsBtn\"\r\nimport ReportsBtn from \"../../components/reportsBtn/reportsBtn\"\r\nimport ProcInstTable from \"../../components/procInstTable/procInstTable\"\r\nimport JSZip from 'jszip'\r\nimport { saveAs } from 'file-saver';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport ReportBoxBtns from \"../../components/reportBoxBtns/reportBoxBtns\"\r\nimport IssuedBtn from \"../../components/issuedBtn/issuedBtn\"\r\n\r\n\r\nconst IsoCtrl = () => {\r\n   \r\n    document.body.style.zoom = 0.9\r\n    const[pagination, setPagination] = useState(8) //Controla el numero de entradas por pagina de la tabla\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const [selected, setSelected] = useState([]);\r\n    const [updateData, setUpdateData] = useState();\r\n    const [comment, setComment] = useState(\" \");\r\n    const [commentAlert, setCommentAlert] = useState(false);\r\n    const [downloadZip, setDownloadzip] = useState(new JSZip());\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorUnclaim, setErrorUnclaim] = useState(false);\r\n    const [errorPI, setErrorPI] = useState(false);\r\n    const [errorCL, setErrorCL] = useState(false);\r\n    const [transactionSuccess, setTransactionSuccess] = useState(false);\r\n    const [errorReports, setErrorReports] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [realProgress, setRealProgress] = useState(0);\r\n    const [progressISO, setProgressISO] = useState(0);\r\n    const [realProgressISO, setRealProgressISO] = useState(0);\r\n    const [errorUnclaimR, setErrorUnclaimR] = useState(false);\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"tab\")) //Controla la tabla y botones que se muestran\r\n    //La altura de la tabla es fija en funcion de la paginacion para evitar que los botones se muevan\r\n    var dataTableHeight = 8\r\n\r\n    if (pagination === 8){\r\n        dataTableHeight = \"520px\"\r\n    }if(pagination === 25){\r\n        dataTableHeight = \"1220px\"\r\n    }if(pagination === 50){\r\n        dataTableHeight = \"2230px\"\r\n    }if(pagination === 100){\r\n        dataTableHeight = \"4300px\"\r\n    }\r\n\r\n    //Componentes de la pagina que varian en funcion del estado\r\n    var uploadButton, actionButtons, actionText, commentBox, tableContent, procInsBtn, issuedBtn\r\n    var currentTabText = currentTab\r\n    if(currentTabText === \"LDE/IsoControl\"){\r\n        currentTabText = \"LOS/IsoControl\"\r\n    }\r\n    tableContent = <DataTable forceUnclaim = {forceUnclaim.bind(this)} onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} currentRole={currentRole} updateData = {updateData}/>\r\n    var pageSelector = <SelectPag onChange={value => setPagination(value)} pagination = {pagination}/>\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    const body = {\r\n        user: currentUser,\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        setUpdateData(!updateData)\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://localhost:5000/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            setErrorPI(false)\r\n            setErrorUnclaimR(false)\r\n            setErrorCL(false)\r\n            setUpdateData(!updateData)\r\n            setTransactionSuccess(false);\r\n            setErrorUnclaim(false)\r\n            setErrorReports(false)\r\n            setLoading(false)\r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n        setErrorUnclaimR(false)\r\n        setErrorPI(false);\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false)\r\n        setErrorUnclaim(false)\r\n        setLoading(false)\r\n        setErrorReports(false)\r\n    }, [currentTab])\r\n\r\n    const getProgress = () =>{\r\n        const options = {\r\n            method: \"GET\",\r\n        }\r\n        fetch(\"http://localhost:5000/currentProgressISO\", options)\r\n        .then(response => response.json())\r\n        .then(async json =>{\r\n             await setProgressISO(json.progressISO)\r\n             await setRealProgressISO(json.realprogressISO)\r\n        })\r\n        \r\n        fetch(\"http://localhost:5000/currentProgress\", options)\r\n        .then(response => response.json())\r\n        .then(async json =>{\r\n             await setProgress(json.progress)\r\n             await setRealProgress(json.realprogress)\r\n        })\r\n\r\n    }\r\n\r\n    const claim = async(event) => {\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        console.log(selected)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if(currentTab === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/claimProc\", options)\r\n                }\r\n            }else if(currentTab === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/claimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/claim\", options)\r\n                }\r\n            \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            \r\n        }\r\n     \r\n    }   \r\n    \r\n    const forceClaim = async(username) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : username,\r\n                    file: selected[i],\r\n                    los: currentUser\r\n                }\r\n                console.log(body)\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://localhost:5000/forceClaim\", options)\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const unclaim = async (event) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if (currentRole === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/unclaimProc\", options)\r\n                }\r\n            }else if(currentRole === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    console.log(body)\r\n                    await fetch(\"http://localhost:5000/unclaimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/unclaim\", options)\r\n                    .then(response => response.json())\r\n                    .then(json=>{\r\n                        if(json.error === \"forced\"){\r\n                            setErrorUnclaim(true)\r\n                        }else if(json.error === \"returned\"){\r\n                            setErrorUnclaimR(true)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                    });\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n        }\r\n        \r\n    }\r\n\r\n    async function forceUnclaim(fileName){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n        const body ={\r\n            user : currentUser,\r\n            file: fileName,\r\n            role: currentRole\r\n        }\r\n        console.log(body)\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        console.log(body)\r\n        await fetch(\"http://localhost:5000/forceUnclaim\", options)\r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    const verifyClick = async(event) =>{\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setLoading(true)\r\n        console.log(\"Envio a verify\")\r\n        if(selected.length > 0){\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://localhost:5000/verify\", options)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n        }    \r\n    }\r\n\r\n    async function cancelVerifyClick(filename){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: filename,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://localhost:5000/cancelVerify\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n            \r\n    }\r\n\r\n    async function transaction(destiny){\r\n        \r\n        if(selected.length > 0){\r\n            setErrorUnclaimR(false)\r\n            setErrorReports(false)\r\n            setErrorCL(false)\r\n            setErrorUnclaim(false)\r\n            setErrorPI(false);\r\n            setTransactionSuccess(false);\r\n            setLoading(true)\r\n            if(destiny === \"Design\"){\r\n                if(comment.length > 1){\r\n                    setComment(\" \")\r\n                    setCommentAlert(false)\r\n                    localStorage.setItem(\"update\", true)\r\n                    for (let i = 0; i < selected.length; i++){\r\n                        const body ={\r\n                            user : currentUser,\r\n                            fileName: selected[i],\r\n                            to: destiny,\r\n                            role: secureStorage.getItem(\"role\"),\r\n                            comment: comment,\r\n                            deleted: 0,\r\n                            onhold: 0\r\n                        }\r\n                        const options = {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            body: JSON.stringify(body)\r\n                        }\r\n                        await fetch(\"http://localhost:5000/api/transaction\", options)\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                }else{\r\n                    console.log(\"vacio\")\r\n                    setCommentAlert(true)\r\n                }\r\n            }else if (destiny === \"LDE/Isocontrol\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                    }\r\n                    await fetch(\"http://localhost:5000/piStatus/\"+selected[i], options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                        if(json.sit === 1 || json.sit === 4 || json.spo === 1 || json.spo === 4){\r\n                            localStorage.setItem(\"update\", true)\r\n                            setErrorPI(true);\r\n                            setTransactionSuccess(false);\r\n                        }else{\r\n                            setCommentAlert(false)\r\n                            localStorage.setItem(\"update\", true)\r\n                            let deleted, hold = 0\r\n                    \r\n                            const body ={\r\n                                user : currentUser,\r\n                                fileName: selected[i],\r\n                                to: destiny,\r\n                                role: secureStorage.getItem(\"role\"),\r\n                                comment: null,\r\n                                deleted: deleted,\r\n                                onhold: hold\r\n                            }\r\n                            const options = {\r\n                                method: \"POST\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                },\r\n                                body: JSON.stringify(body)\r\n                            }\r\n                            await fetch(\"http://localhost:5000/api/transaction\", options)\r\n                            .then(response => response.json())\r\n                            .then(json=>{\r\n                                console.log(json)\r\n                            })\r\n                            .catch(async error =>{\r\n                                \r\n                                await setErrorCL(true) \r\n                                console.log(errorCL)                            \r\n                            })\r\n                            if(!errorCL){\r\n                                setTransactionSuccess(true)\r\n                            }\r\n                            \r\n                        }\r\n                    })\r\n                }\r\n                await setUpdateData(!updateData)\r\n                setLoading(false)\r\n            }else{\r\n                setCommentAlert(false)\r\n                localStorage.setItem(\"update\", true)\r\n                let deleted, hold = 0\r\n\r\n                if(destiny === \"Recycle bin\"){\r\n                    deleted = 1\r\n                }\r\n\r\n                if(destiny === \"On hold\"){\r\n                    hold = 1\r\n                }\r\n                for (let i = 0; i < selected.length; i++){\r\n                    \r\n                    const body ={\r\n                        user : currentUser,\r\n                        fileName: selected[i],\r\n                        to: destiny,\r\n                        role: secureStorage.getItem(\"role\"),\r\n                        comment: null,\r\n                        deleted: deleted,\r\n                        onhold: hold\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/api/transaction\", options)\r\n                    setTransactionSuccess(true)\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n        }    \r\n    }\r\n\r\n    async function returnLead(destiny){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setErrorUnclaimR(false)\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n        for (let i = 0; i < selected.length; i++){\r\n                    \r\n            const body ={\r\n                user : currentUser,\r\n                fileName: selected[i],\r\n                to: destiny,\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://localhost:5000/api/returnLead\", options)\r\n            setTransactionSuccess(true)\r\n        }\r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        await getProgress()\r\n    }\r\n    \r\n\r\n    function handleComment(event){\r\n        setComment(event.target.value)\r\n    }\r\n\r\n    async function restore(){\r\n        setErrorReports(false)\r\n        setErrorUnclaimR(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        console.log(selected.length)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    fileName: selected[i],\r\n                    user: currentUser,\r\n                    deleted: 0,\r\n                    onhold: 0\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://localhost:5000/restore\", options)\r\n                setTransactionSuccess(true)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            console.log(\"restored\")\r\n            setLoading(false)\r\n            await getProgress()\r\n        }\r\n    }\r\n\r\n    function procOrInst(tab) {\r\n        if(tab === \"Process\" || tab === \"Instrument\"){\r\n            setCurrentTab(tab)\r\n        }else if (currentRole === \"Process\"){\r\n            setCurrentTab(\"Process\")\r\n        }else{\r\n            setCurrentTab(\"Instrument\")\r\n        }\r\n    }\r\n\r\n    async function sendProcessClick(fileName){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://localhost:5000/process\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n    }\r\n\r\n    async function sendInstrumentClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://localhost:5000/instrument\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n    }\r\n\r\n    function updateD(){\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function downloadFiles(){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setErrorCL(false)\r\n        setTransactionSuccess(false);\r\n        setErrorUnclaim(false)\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n        /*\r\n        if(selected.length === 1){\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const options = {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/pdf\"\r\n                    }\r\n                }\r\n                await fetch(\"http://localhost:5000/download/\"+selected[i], options)\r\n                .then(res => res.blob())\r\n                    .then(response =>{\r\n                        console.log(\"Se descarga\")\r\n                        download(new Blob([response]), selected[i], \"application/pdf\")\r\n                    })\r\n            }\r\n        }else if (selected.length > 1){\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n\r\n                const options = {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/pdf\"\r\n                    }\r\n                }\r\n                await fetch(\"http://localhost:5000/download/\"+selected[i], options)\r\n                .then(res => res.blob())\r\n                    .then(response =>{\r\n                        setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                    })\r\n            }\r\n            const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n            downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n                saveAs(blob,  zipname)\r\n            })\r\n            \r\n        }\r\n        await setUpdateData(!updateData)\r\n        await setDownloadzip(new JSZip())   \r\n        setLoading(false)\r\n        */\r\n        for (let i = 0; i < selected.length; i++){\r\n\r\n            const options = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/pdf\"\r\n                }\r\n            }\r\n            \r\n            await fetch(\"http://localhost:5000/getAttach/\"+selected[i], options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                await fetch(\"http://localhost:5000/download/\"+selected[i], options)\r\n                .then(res => res.blob())\r\n                .then( async response =>{\r\n                    setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                    for(let i = 0; i < json.length; i++){\r\n                        await fetch(\"http://localhost:5000/download/\"+json[i], options)\r\n                        .then(res => res.blob())\r\n                        .then(response =>{\r\n                            setDownloadzip(downloadZip.file(json[i], new Blob([response]),{binary:true}))   \r\n                        })\r\n                    }\r\n                     \r\n                })\r\n            })\r\n        \r\n\r\n            \r\n    \r\n        }\r\n        const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n        downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n            saveAs(blob,  zipname)\r\n        })  \r\n        \r\n        await setDownloadzip(new JSZip())   \r\n        //await setAttachFiles(null)\r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        \r\n    }\r\n\r\n    async function downloadHistory(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://localhost:5000/downloadHistory/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"FROM\", \"TO\", \"DATE\", \"COMMENT\", \"USER\"]\r\n            exportToExcel(JSON.parse(json), \"Comments\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadStatus(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://localhost:5000/downloadStatus/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"START_DATE\", \"CURRENT_DATE\", \"CONDITION\"]\r\n            exportToExcel(JSON.parse(json), \"Status\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadPI(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://localhost:5000/downloadPI/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"PROCESS\", \"INSTRUMENTATION\", \"UPDATED_AT\"]\r\n            exportToExcel(JSON.parse(json), \"IsoStatusSIT-SPO\", headers)\r\n        })\r\n    }\r\n\r\n    async function downloadIssued(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://localhost:5000/downloadIssued/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"REV0\", \"REV1\", \"REV2\", \"REV3\", \"REV4\"]\r\n            exportToExcel(JSON.parse(json), \"IsoStatusIssued\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        setErrorReports(false)\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n\r\n        let wscols = []\r\n        for(let i = 0; i < headers.length; i++){\r\n            wscols.push({width:35})\r\n        }\r\n\r\n        const ws = XLSX.utils.json_to_sheet(apiData);   \r\n        ws[\"!cols\"] = wscols\r\n        for(let i = 0; i < headers.length; i++){\r\n            ws[header_cells[i]].v = headers[i]\r\n        }\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n    async function setUploading(active){\r\n        setErrorReports(false)\r\n        setLoading(active)\r\n        if(!active){\r\n            setTransactionSuccess(true)\r\n        }\r\n    }\r\n\r\n    async function setErrorReport(){\r\n        setErrorReports(true)\r\n    }\r\n\r\n    async function issue(transmittal, date){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setLoading(true)\r\n\r\n        console.log(transmittal)\r\n        \r\n        if (selected.length > 0){\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                    transmittal: transmittal,\r\n                    date: date\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://localhost:5000/toIssue\", options)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n        }\r\n    }\r\n\r\n    async function newRev() {\r\n        setErrorReports(false)\r\n        setErrorUnclaimR(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setLoading(true)\r\n        if (selected.length > 0){\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://localhost:5000/newRev\", options)\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n        }\r\n    }\r\n\r\n    async function request() {\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setLoading(true)\r\n        if (selected.length > 0){\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://localhost:5000/request\", options)\r\n                \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    async function returnIso(destiny, comments){\r\n        setErrorUnclaimR(false)\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorCL(false)\r\n        setErrorUnclaim(false)\r\n        setLoading(true)\r\n        if (selected.length > 0){\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole,\r\n                    from: currentTab,\r\n                    destiny: destiny,\r\n                    comments: comments\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://localhost:5000/returnIso\", options)\r\n                \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    if(currentTab === \"Upload IsoFiles\"){\r\n        secureStorage.setItem(\"tab\", \"Upload IsoFiles\")\r\n        uploadButton = <button  type=\"button\" class=\"btn btn-info btn-lg\" style={{backgroundColor: \"#17a2b8\", width:\"180px\"}}><b>Upload</b></button>\r\n        tableContent = <DragAndDrop mode={\"upload\"} user={currentUser} uploaded={getProgress.bind(this)}/>\r\n        pageSelector = null\r\n    }if(currentTab === \"Design\" && currentRole === \"Design\"){\r\n        uploadButton = <button  type=\"button\" className=\"btn btn-info btn-lg\" style={{backgroundColor: \"lightblue\", width:\"180px\"}} onClick={() => setCurrentTab(\"Upload IsoFiles\")}><b>Upload</b></button>\r\n    }if(currentTab === \"CheckBy\"){\r\n        tableContent = <CheckInTable/>\r\n    }if(currentTab === \"My Tray\"){\r\n        tableContent = <MyTrayTable  onChange={value=> setSelected(value)} cancelVerifyClick={cancelVerifyClick.bind(this)} sendProcessClick={sendProcessClick.bind(this)} sendInstrumentClick = {sendInstrumentClick.bind(this)} updateD = {updateD.bind(this)} pagination = {pagination} currentRole = {currentRole} currentUser = {currentUser} selected={selected} updateData = {updateData}/>\r\n    }if(currentTab === \"Recycle bin\"){\r\n        tableContent = <BinTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"On hold\"){\r\n        tableContent = <OnHoldTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"Status\"){\r\n        tableContent = <StatusDataTable pagination = {pagination} role = {currentRole}/>\r\n    }if(currentTab === \"History\"){\r\n        tableContent = <HistoryDataTable pagination = {pagination}/>   \r\n    }if(currentRole === \"Process\" || currentRole === \"Instrument\" || currentRole === \"SpecialityLead\"){\r\n        procInsBtn = <ProcInsBtn onChange={value => procOrInst(value)} currentTab = {currentTab} />\r\n    }if(currentTab === \"Process\" || currentTab === \"Instrument\"){\r\n        tableContent = <ProcInstTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData} />\r\n    }if(currentTab === \"Reports\"){\r\n        tableContent = <ReportBoxBtns downloadHistory={downloadHistory.bind(this)} downloadStatus={downloadStatus.bind(this)} downloadPI={downloadPI.bind(this)} downloadIssued={downloadIssued.bind(this)} setErrorReport={setErrorReport.bind(this)} setUploading={setUploading.bind(this)}/>\r\n    }\r\n\r\n    if(currentTab === \"My Tray\" || currentTab === \"LDE/IsoControl\"){\r\n        commentBox = <div>\r\n            <textarea placeholder=\"Comments\" class=\"comments\" cols=\"100\" rows=\"2\" required=\"\" maxlength=\"400\" name=\"comments\" value={comment} onChange={handleComment}></textarea>\r\n        </div>\r\n    }\r\n\r\n    if(((currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Design\") || \r\n    ((currentRole === \"Stress\" || currentRole === \"StressLead\") && currentTab === \"Stress\") ||\r\n    ((currentRole === \"Supports\" || currentRole === \"SupportsLead\") && currentTab === \"Supports\") ||\r\n    ((currentRole === \"Materials\") && currentTab === \"Materials\") ||\r\n    ((currentRole === \"Issuer\") && currentTab === \"Issuer\") ||\r\n    ((currentRole === \"SpecialityLead\" || currentTab ===\"SpecialityLead\") ||\r\n    (currentTab=== \"My Tray\")) || (((currentTab === \"Recycle bin\" || currentTab === \"On hold\") && currentRole === \"DesignLead\") || \r\n    currentRole === \"SpecialityLead\") || (currentTab === \"Process\" && currentRole === \"Process\") ||\r\n    (currentRole === \"Instrument\" && currentTab === \"Instrument\") ||\r\n    (currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Issued\"){\r\n        actionText = <b className=\"progress__text\">Click an action for selected IsoFiles:</b>\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} issue={issue.bind(this)} newRev={newRev.bind(this)} request={request.bind(this)} returnIso={returnIso.bind(this)} onlyDownload = {false} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }else if(currentTab !== \"History\" && currentTab !== \"Upload IsoFiles\" && currentTab !== \"Recycle bin\" && currentTab !== \"Reports\"){\r\n        actionText = <b className=\"progress__text\">Click an action for selected IsoFiles:</b>\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} issue={issue.bind(this)} newRev={newRev.bind(this)} request={request.bind(this)} returnIso={returnIso.bind(this)} onlyDownload = {true} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }\r\n    if(currentTab === \"LDE/IsoControl\" || currentTab === \"Issued\"){\r\n        issuedBtn = <IssuedBtn onChange={value => setCurrentTab(\"Issued\")} currentTab = {currentTab}/>\r\n    }\r\n    \r\n    \r\n    return (\r\n        \r\n        <body>\r\n            \r\n            <NavBar onChange={value => setCurrentTab(value)}/>\r\n\r\n            <div className=\"isoCtrl__container\">     \r\n                <center>\r\n                    <Collapse in={loading}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\",zIndex:\"3\"}} severity=\"info\"\r\n                            >\r\n                            Processing...\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorPI}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            At least one isometric was on revision and wasn't sent to LDE/Isocontrol\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={transactionSuccess}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"success\"\r\n                            >\r\n                            Successful!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorUnclaim}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Can't unclaim an iso assigned by LOS!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorUnclaimR}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Can't unclaim a returned ISO!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorReports}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Missing columns!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorCL}>\r\n                        <Alert style={{fontSize:\"22px\",position: \"fixed\", left: \"50%\", top:\"10%\", transform: \"translate(-50%, -50%)\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Missing clean!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <h2 className=\"title__container\">\r\n                        <div className=\"roleSelector__container\">\r\n                            <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                         </div>\r\n                        <b >      \r\n                            <i className=\"iso__title\">IsoTracker</i>\r\n                        </b>\r\n                    </h2>\r\n                    <h3 className=\"iso__subtitle\">{currentTabText}</h3>\r\n                </center>\r\n                \r\n                <div>\r\n                    <div>\r\n                        <div style={{display:\"inline\"}}>\r\n                        <MyTrayBtn onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n                            <td className=\"reportBtns__container\" style={{width:\"380px\"}}>\r\n                                \r\n                                <ReportBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n                                \r\n                            </td>\r\n                            <td>\r\n                                {uploadButton}\r\n                            </td>   \r\n                            <div className=\"stateTable__container\">\r\n                                <td style={{width: \"75 %\"}}>\r\n                                    <StateTable updateData={updateData} currentRole = {currentRole} progress={progress} realProgress={realProgress} progressISO={progressISO} realProgressISO={realProgressISO}/>\r\n                                </td>\r\n                            </div>            \r\n\r\n                        </div>\r\n                    </div>\r\n                </div>              \r\n                \r\n                \r\n                <div style={{position: \"relative\", width:\"500px\"}}>\r\n                  {pageSelector}\r\n                  <BinBtn onChange={value => setCurrentTab(\"Recycle bin\")} currentTab = {currentTab}/>\r\n                  <OnHoldBtn onChange={value => setCurrentTab(\"On hold\")} currentTab = {currentTab}/>\r\n                  <ReportsBtn onChange={value => setCurrentTab(\"Reports\")} currentTab = {currentTab}/>\r\n                  {procInsBtn}\r\n                  {issuedBtn}\r\n\r\n                </div>\r\n                    \r\n                \r\n                <div style={{height: dataTableHeight}}>\r\n                    <br></br>\r\n                    <br></br> \r\n                    {tableContent}\r\n                </div>\r\n                <div className=\"bottom__container\">\r\n                    <Collapse in={commentAlert}>\r\n                        <Alert severity=\"error\"\r\n                            >\r\n                            Add a comment before sending the isos back to design!\r\n\r\n                            </Alert>\r\n                    </Collapse>\r\n                    <center className=\"actionBtns__container\">\r\n                        {actionText}\r\n                        {actionButtons}\r\n                    </center>\r\n                    <br></br>\r\n                    <center className=\"commentBox__container\">\r\n                        {commentBox}\r\n                    </center>\r\n                 \r\n                    \r\n                </div>\r\n            </div>\r\n            <center className=\"navBtns__center\">              \r\n                <NavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole}/>               \r\n            </center>\r\n            <br></br>\r\n        </body>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default IsoCtrl;\r\n"]},"metadata":{},"sourceType":"module"}