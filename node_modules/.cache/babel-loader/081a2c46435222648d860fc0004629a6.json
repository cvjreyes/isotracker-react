{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var color = ownerState.color,\n      fontSize = ownerState.fontSize,\n      classes = ownerState.classes;\n  var slots = {\n    root: ['root', color !== 'inherit' && \"color\".concat(capitalize(color)), \"fontSize\".concat(capitalize(fontSize))]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\n\nvar SvgIconRoot = styled('svg', {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, ownerState.color !== 'inherit' && styles[\"color\".concat(capitalize(ownerState.color))], styles[\"fontSize\".concat(capitalize(ownerState.fontSize))]];\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n\n  var _theme$palette$ownerS, _theme$palette$ownerS2;\n\n  return {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    transition: theme.transitions.create('fill', {\n      duration: theme.transitions.duration.shorter\n    }),\n    fontSize: {\n      inherit: 'inherit',\n      small: theme.typography.pxToRem(20),\n      medium: theme.typography.pxToRem(24),\n      large: theme.typography.pxToRem(35)\n    }[ownerState.fontSize],\n    // TODO v5 deprecate, v6 remove for sx\n    color: (_theme$palette$ownerS = (_theme$palette$ownerS2 = theme.palette[ownerState.color]) == null ? void 0 : _theme$palette$ownerS2.main) != null ? _theme$palette$ownerS : {\n      action: theme.palette.action.active,\n      disabled: theme.palette.action.disabled,\n      inherit: undefined\n    }[ownerState.color]\n  };\n});\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n\n  var children = props.children,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = _extends({}, props, {\n    color: color,\n    component: component,\n    fontSize: fontSize,\n    viewBox: viewBox\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SvgIconRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other, {\n    children: [children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Node passed into the SVG element.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\r\n   * @default 'inherit'\r\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\r\n   * @default 'medium'\r\n   */\n  fontSize: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n\n  /**\r\n   * Applies a color attribute to the SVG element.\r\n   */\n  htmlColor: PropTypes.string,\n\n  /**\r\n   * The shape-rendering attribute. The behavior of the different options is described on the\r\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\r\n   * If you are having issues with blurry icons you should investigate this prop.\r\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object,\n\n  /**\r\n   * Provides a human-readable title for the element that contains it.\r\n   * https://www.w3.org/TR/SVG-access/#Equivalent\r\n   */\n  titleAccess: PropTypes.string,\n\n  /**\r\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\r\n   * For example, if the SVG element is 500 (width) by 200 (height),\r\n   * and you pass viewBox=\"0 0 50 20\",\r\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\r\n   * to bottom right (50,20) and each unit will be worth 10px.\r\n   * @default '0 0 24 24'\r\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default SvgIcon;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@mui/material/SvgIcon/SvgIcon.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","capitalize","useThemeProps","styled","getSvgIconUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","color","fontSize","classes","slots","root","SvgIconRoot","name","slot","overridesResolver","props","styles","theme","_theme$palette$ownerS","_theme$palette$ownerS2","userSelect","width","height","display","fill","flexShrink","transition","transitions","create","duration","shorter","inherit","small","typography","pxToRem","medium","large","palette","main","action","active","disabled","undefined","SvgIcon","forwardRef","inProps","ref","children","className","component","htmlColor","titleAccess","viewBox","other","as","focusable","role","process","env","NODE_ENV","propTypes","node","object","string","oneOfType","oneOf","elementType","shapeRendering","sx","muiName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\r\nimport capitalize from '../utils/capitalize';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport styled from '../styles/styled';\r\nimport { getSvgIconUtilityClass } from './svgIconClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    color,\r\n    fontSize,\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\r\n  };\r\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\r\n};\r\n\r\nconst SvgIconRoot = styled('svg', {\r\n  name: 'MuiSvgIcon',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\r\n  }\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  var _theme$palette$ownerS, _theme$palette$ownerS2;\r\n\r\n  return {\r\n    userSelect: 'none',\r\n    width: '1em',\r\n    height: '1em',\r\n    display: 'inline-block',\r\n    fill: 'currentColor',\r\n    flexShrink: 0,\r\n    transition: theme.transitions.create('fill', {\r\n      duration: theme.transitions.duration.shorter\r\n    }),\r\n    fontSize: {\r\n      inherit: 'inherit',\r\n      small: theme.typography.pxToRem(20),\r\n      medium: theme.typography.pxToRem(24),\r\n      large: theme.typography.pxToRem(35)\r\n    }[ownerState.fontSize],\r\n    // TODO v5 deprecate, v6 remove for sx\r\n    color: (_theme$palette$ownerS = (_theme$palette$ownerS2 = theme.palette[ownerState.color]) == null ? void 0 : _theme$palette$ownerS2.main) != null ? _theme$palette$ownerS : {\r\n      action: theme.palette.action.active,\r\n      disabled: theme.palette.action.disabled,\r\n      inherit: undefined\r\n    }[ownerState.color]\r\n  };\r\n});\r\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiSvgIcon'\r\n  });\r\n\r\n  const {\r\n    children,\r\n    className,\r\n    color = 'inherit',\r\n    component = 'svg',\r\n    fontSize = 'medium',\r\n    htmlColor,\r\n    titleAccess,\r\n    viewBox = '0 0 24 24'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const ownerState = _extends({}, props, {\r\n    color,\r\n    component,\r\n    fontSize,\r\n    viewBox\r\n  });\r\n\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsxs(SvgIconRoot, _extends({\r\n    as: component,\r\n    className: clsx(classes.root, className),\r\n    ownerState: ownerState,\r\n    focusable: \"false\",\r\n    viewBox: viewBox,\r\n    color: htmlColor,\r\n    \"aria-hidden\": titleAccess ? undefined : true,\r\n    role: titleAccess ? 'img' : undefined,\r\n    ref: ref\r\n  }, other, {\r\n    children: [children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\r\n      children: titleAccess\r\n    }) : null]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * Node passed into the SVG element.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\r\n   * @default 'inherit'\r\n   */\r\n  color: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\r\n   * @default 'medium'\r\n   */\r\n  fontSize: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\r\n\r\n  /**\r\n   * Applies a color attribute to the SVG element.\r\n   */\r\n  htmlColor: PropTypes.string,\r\n\r\n  /**\r\n   * The shape-rendering attribute. The behavior of the different options is described on the\r\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\r\n   * If you are having issues with blurry icons you should investigate this prop.\r\n   */\r\n  shapeRendering: PropTypes.string,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object,\r\n\r\n  /**\r\n   * Provides a human-readable title for the element that contains it.\r\n   * https://www.w3.org/TR/SVG-access/#Equivalent\r\n   */\r\n  titleAccess: PropTypes.string,\r\n\r\n  /**\r\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\r\n   * For example, if the SVG element is 500 (width) by 200 (height),\r\n   * and you pass viewBox=\"0 0 50 20\",\r\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\r\n   * to bottom right (50,20) and each unit will be worth 10px.\r\n   * @default '0 0 24 24'\r\n   */\r\n  viewBox: PropTypes.string\r\n} : void 0;\r\nSvgIcon.muiName = 'SvgIcon';\r\nexport default SvgIcon;"]},"metadata":{},"sourceType":"module"}