{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\sptracker\\\\sptracker.js\",\n    _s = $RefreshSig$();\n\nimport \"./sptracker.css\";\nimport React, { useState, useEffect } from 'react';\nimport NavBar from '../../components/navBar/navBar';\nimport IsoTrackerLogo from \"../../assets/images/3DTracker.svg\";\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown';\nimport IdleTimer from 'react-idle-timer';\nimport { useHistory } from \"react-router\";\nimport SelectPag from \"../../components/selectPag/selectPag\";\nimport CSPTrackerdDataTable from \"../../components/csptrackerDataTable/csptrackerDataTable\";\nimport HotTable from \"@handsontable/react\";\nimport SaveIcon from \"../../assets/images/FolderOpen.png\";\nimport AlertF from \"../../components/alert/alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CSPTracker = () => {\n  _s();\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const settings = {\n    licenseKey: 'non-commercial-and-evaluation',\n    colWidths: 250\n  };\n  const [currentRole, setCurrentRole] = useState();\n  const [currentTab, setCurrentTab] = useState(\"View\");\n  const [roles, setRoles] = useState();\n  const [pagination, setPagination] = useState(10);\n  const [successAlert, setSuccessAlert] = useState(false);\n  const [uploadDrawingSuccess, setUploadDrawingSuccess] = useState(false);\n  const [updateDrawingSuccess, setUpdateDrawingSuccess] = useState(false);\n  const [drawingError, setDrawingError] = useState(false);\n  const [noTagError, setNoTagError] = useState(false);\n  const [invalidFieldError, setInvalidFieldError] = useState(false);\n  const [errorIndex, setErrorIndex] = useState(null);\n  const [viewData, setViewData] = useState();\n  const [editData, setEditData] = useState();\n  const [descriptionPlaneData, setDescriptionPlaneData] = useState();\n  const [diametersData, setDiametersData] = useState();\n  const [ratingData, setRatingData] = useState();\n  const [specData, setSpecData] = useState();\n  const [endPreparationData, setEndPrepartaionData] = useState();\n  const [boltTypesData, setBoltTypesData] = useState();\n  const [busy, setBusy] = useState(false);\n  const [editingUser, setEditingUser] = useState();\n  const [updateData, setUpdateData] = useState(false);\n  const history = useHistory();\n  var currentUser = secureStorage.getItem('user');\n  let p1bore,\n      p2bore,\n      p3bore = \"\";\n\n  if (process.env.REACT_APP_MMDN === \"0\") {\n    p1bore = \"p1diameter_nps\";\n    p2bore = \"p2diameter_nps\";\n    p3bore = \"p3diameter_nps\";\n  } else {\n    p1bore = \"p1diameter_dn\";\n    p2bore = \"p2diameter_dn\";\n    p3bore = \"p3diameter_dn\";\n  }\n\n  useEffect(() => {\n    const body = {\n      user: currentUser\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/roles/user\", options).then(response => response.json()).then(json => {\n      setRoles(json.roles);\n\n      if (secureStorage.getItem('role') !== null) {\n        setCurrentRole(secureStorage.getItem('role'));\n      } else {\n        secureStorage.setItem('role', json.roles[0]);\n        setCurrentRole(secureStorage.getItem('role'));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [currentRole]);\n  useEffect(() => {\n    const body = {\n      user: currentUser\n    };\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {});\n  }, [updateData]);\n  useEffect(async () => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/csptracker\", options).then(response => response.json()).then(async json => {\n      await setEditData(json.rows);\n    });\n\n    if (currentTab === \"View\") {\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getListsData\", options).then(response => response.json()).then(async json => {\n        await setDescriptionPlaneData(json.descriptionPlaneData);\n        await setDiametersData(json.diametersData);\n        await setRatingData(json.ratingData);\n        await setSpecData(json.specData);\n        await setEndPrepartaionData(json.endPreparationData);\n        await setBoltTypesData(json.boltTypesData);\n      });\n    }\n  }, [currentTab]);\n\n  function uploadSuccess() {\n    setUploadDrawingSuccess(true);\n  }\n\n  function updateSuccess() {\n    setUpdateDrawingSuccess(true);\n  }\n\n  function drawingUploadError() {\n    setDrawingError(true);\n  }\n\n  function handleOnIdle() {\n    saveChanges();\n    const body = {\n      user: currentUser\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {});\n    secureStorage.clear();\n    history.push(\"/\" + process.env.REACT_APP_APP_NAMEPROJ);\n  }\n\n  async function handleToggle() {\n    if (currentTab === \"View\") {\n      const body = {\n        user: currentUser\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/editCSP\", options).then(response => response.json()).then(async json => {\n        if (json.user) {\n          await setBusy(true);\n          await setEditingUser(json.user);\n        } else {\n          await setBusy(false);\n        }\n\n        await setCurrentTab(\"Edit\");\n      });\n    } else {\n      const body = {\n        user: currentUser\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/exitEditCSP\", options).then(response => response.json()).then(async json => {\n        if (json.success) {\n          await saveChanges();\n          await setCurrentTab(\"View\");\n        }\n      });\n    }\n  }\n\n  async function addRow() {\n    let rows = editData; //rows.push({tag:null, description: null, description_plan_code: null, drawing_filename: null, description_iso: null, ident: null, p1diameter_dn: null, p1diameter_nps: null, p2diameter_dn: null, p2diameter_nps: null, p3diameter_dn: null, p3diameter_nps: null, rating: null, spec: null, face_to_face: null, end_preparation: null, description_drawing: null, bolts: null, bolt_type: null, ready_load: null, ready_e3d: null, comments: null})\n\n    rows.push({\n      tag: \"\",\n      quantity: \"\",\n      description: \"\",\n      description_plan_code: \"\",\n      drawing_filename: \"\",\n      description_iso: \"\",\n      ident: \"\",\n      p1diameter_dn: \"\",\n      p1diameter_nps: \"\",\n      p2diameter_dn: \"\",\n      p2diameter_nps: \"\",\n      p3diameter_dn: \"\",\n      p3diameter_nps: \"\",\n      rating: \"\",\n      spec: \"\",\n      type: \"\",\n      end_preparation: \"\",\n      description_drawing: \"\",\n      face_to_face: \"\",\n      bolts: \"\",\n      bolt_type: \"\",\n      ready_load: \"\",\n      ready_e3d: \"\",\n      comments: \"\"\n    });\n    await setEditData(rows);\n    await setUpdateData(!updateData);\n  }\n\n  async function saveChanges() {\n    let blank = false;\n\n    for (let i = 0; i < editData.length; i++) {\n      if (editData[i].tag === null || editData[i].tag === \"\") {\n        blank = true;\n        let index = i + 1;\n        await setErrorIndex(\"Invalid or blank tag at entry \" + index + \"!\");\n      }\n    }\n\n    if (blank) {\n      await setNoTagError(true);\n    }\n\n    const body = {\n      rows: editData\n    };\n    let options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/tags\", options).then(response => response.json()).then(async json => {\n      let unique = true;\n\n      if (json.none) {} else {\n        let tags = [];\n\n        for (let i = 0; i < editData.length; i++) {\n          if (tags.indexOf(editData[i].tag) > -1) {\n            unique = false;\n            let index = i + 1;\n            await setErrorIndex(\"Invalid or blank tag at entry \" + index + \"!\");\n          } else {\n            tags.push(editData[i].tag);\n          }\n        }\n      }\n\n      if (!unique) {\n        await setNoTagError(true);\n      }\n\n      options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/submitCSP\", options).then(response => response.json()).then(async json => {\n        if (json.success) {\n          await setSuccessAlert(true);\n        }\n      });\n    });\n  }\n\n  async function updateDataMethod() {\n    setUpdateData(!updateData);\n  }\n\n  document.body.style.zoom = 0.8;\n\n  var pageSelector = /*#__PURE__*/_jsxDEV(SelectPag, {\n    onChange: value => setPagination(value),\n    pagination: pagination\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 24\n  }, this);\n\n  var dataTableHeight = \"510px\";\n\n  if (pagination === 10) {\n    dataTableHeight = \"510px\";\n  }\n\n  if (pagination === 25) {\n    dataTableHeight = \"1070px\";\n  }\n\n  if (pagination === 50) {\n    dataTableHeight = \"2080px\";\n  }\n\n  if (pagination === 100) {\n    dataTableHeight = \"4040px\";\n  }\n\n  if (pagination === 500) {\n    dataTableHeight = \"19000px\";\n  }\n\n  let editBtn,\n      addRowBtn,\n      saveBtn,\n      upload = null;\n\n  let table = /*#__PURE__*/_jsxDEV(CSPTrackerdDataTable, {\n    currentRole: currentRole,\n    updateDataMethod: updateDataMethod.bind(this),\n    updateData: updateData,\n    uploadDrawingSuccess: uploadSuccess.bind(this),\n    updateDrawingSuccess: updateSuccess.bind(this),\n    drawingUploadError: drawingUploadError.bind(this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 17\n  }, this);\n\n  if (currentRole === \"Materials\") {\n    editBtn = /*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"switchBtn\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"edit\",\n        onClick: () => handleToggle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"slide round\",\n        children: \"Edit mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 20\n    }, this);\n  }\n\n  if (currentTab === \"View\") {\n    table = /*#__PURE__*/_jsxDEV(CSPTrackerdDataTable, {\n      pagination: pagination,\n      currentRole: currentRole,\n      updateDataMethod: updateDataMethod.bind(this),\n      updateData: updateData,\n      uploadDrawingSuccess: uploadSuccess.bind(this),\n      updateDrawingSuccess: updateSuccess.bind(this),\n      drawingUploadError: drawingUploadError.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }, this);\n\n    if (currentRole === \"Materials\") {\n      pageSelector = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"87%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(SelectPag, {\n          onChange: value => setPagination(value),\n          pagination: pagination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 28\n      }, this);\n    } else {\n      pageSelector = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"94%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(SelectPag, {\n          onChange: value => setPagination(value),\n          pagination: pagination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 28\n      }, this);\n    }\n\n    addRowBtn = null;\n    saveBtn = null;\n  } else {\n    if (!busy) {\n      table = /*#__PURE__*/_jsxDEV(HotTable, {\n        data: editData,\n        colHeaders: [\"TAG\", \"QUANTITY\", \"TYPE\", \"DESCRIPTION\", \"DRAWING DESCRIPION\", \"DESCRIPTION ISO\", \"IDENT\", \"P1BORE\", \"P2BORE\", \"P3BORE\", \"RATING\", \"SPEC\", \"FACE TO FACE\", \"END PREPARATION\", \"FACE_TO_FACE\", \"BOLTS\", \"TYPE OF BOLT\", \"COMMENTS\"],\n        rowHeaders: true,\n        width: \"2200\",\n        height: \"635\",\n        settings: settings,\n        manualColumnResize: true,\n        manualRowResize: true,\n        columns: [{\n          data: \"tag\",\n          type: 'text'\n        }, {\n          data: \"quantity\",\n          type: \"numeric\"\n        }, {\n          data: \"type\",\n          type: \"text\"\n        }, {\n          data: \"description\",\n          type: 'text'\n        }, {\n          data: \"description_plan_code\",\n          type: \"dropdown\",\n          allowInvalid: true,\n          source: descriptionPlaneData\n        }, {\n          data: \"description_iso\",\n          type: \"text\"\n        }, {\n          data: \"ident\",\n          type: \"text\"\n        }, {\n          data: p1bore,\n          type: \"dropdown\",\n          strict: \"true\",\n          source: diametersData\n        }, {\n          data: p2bore,\n          type: \"dropdown\",\n          strict: \"true\",\n          source: diametersData\n        }, {\n          data: p3bore,\n          type: \"dropdown\",\n          strict: \"true\",\n          source: diametersData\n        }, {\n          data: \"rating\",\n          type: \"dropdown\",\n          strict: \"true\",\n          source: ratingData\n        }, {\n          data: \"spec\",\n          type: \"dropdown\",\n          strict: \"true\",\n          source: specData\n        }, {\n          data: \"end_preparation\",\n          type: \"dropdown\",\n          strict: \"true\",\n          source: endPreparationData\n        }, {\n          data: \"face_to_face\",\n          type: \"\"\n        }, {\n          data: \"bolts\",\n          type: \"dropdown\",\n          strict: \"true\",\n          source: [\"YES\", \"NO\"]\n        }, {\n          data: \"bolt_type\",\n          type: \"dropdown\",\n          strict: \"true\",\n          source: boltTypesData\n        }, {\n          data: \"comments\",\n          type: \"text\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }, this);\n      pageSelector = null;\n      dataTableHeight = \"700px\";\n      addRowBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-sm btn-success\",\n        onClick: () => addRow(),\n        style: {\n          marginRight: \"5px\",\n          fontSize: \"18px\",\n          width: \"35px\",\n          height: \"35px\",\n          borderRadius: \"10px\",\n          float: \"right\",\n          marginTop: \"8px\"\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 25\n      }, this);\n      saveBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navBar__button\",\n        onClick: () => saveChanges(),\n        style: {\n          marginTop: \"7px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: SaveIcon,\n          alt: \"save\",\n          className: \"navBar__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 113\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"navBar__button__text\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 175\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 23\n      }, this);\n    } else {\n      table = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connected__panel\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"connected__text\",\n          children: [\"The user \", editingUser, \" is already editing!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [updateData, /*#__PURE__*/_jsxDEV(IdleTimer, {\n      timeout: 1000 * 60 * 15,\n      onIdle: handleOnIdle,\n      debounce: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      onChange: value => setCurrentTab(currentTab)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${successAlert ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setSuccessAlert(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Changes saved!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${uploadDrawingSuccess ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setUploadDrawingSuccess(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Drawing uploaded successfully!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${updateDrawingSuccess ? 'alert-shown' : 'alert-hidden'}`,\n      onTransitionEnd: () => setUpdateDrawingSuccess(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"success\",\n        text: \"Drawing updated successfully!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${noTagError ? 'alert-shown' : 'alert-error-hidden'}`,\n      onTransitionEnd: () => setNoTagError(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"waring\",\n        text: errorIndex,\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${invalidFieldError ? 'alert-shown' : 'alert-error-hidden'}`,\n      onTransitionEnd: () => setInvalidFieldError(false),\n      children: /*#__PURE__*/_jsxDEV(AlertF, {\n        type: \"error\",\n        subtext: \"At least one of the entries had an invalid field!\",\n        margin: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isotracker__row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"isotracker__column\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: IsoTrackerLogo,\n          alt: \"isoTrackerLogo\",\n          className: \"isoTrackerLogo__image2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roleSelector__containerF\",\n          children: /*#__PURE__*/_jsxDEV(RoleDropDown, {\n            style: {\n              paddingLeft: \"2px\"\n            },\n            onChange: value => setCurrentRole(value),\n            roles: roles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"isotracker__table__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"isotracker__table__navBar__container\",\n        style: {\n          height: \"65px \"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"isotracker__table__navBar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [editBtn, saveBtn, pageSelector]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"isotracker__table__tray__and__table__container\",\n        style: {\n          height: dataTableHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"discplines__table__table\",\n          style: {\n            height: dataTableHeight\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: dataTableHeight\n            },\n            className: \"isotracker__table__table__container\",\n            style: {\n              width: \"2200px\"\n            },\n            children: [table, addRowBtn]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 397,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CSPTracker, \"nNr3YmX6mykIVQJ8t0e3ngLI5q0=\", false, function () {\n  return [useHistory];\n});\n\n_c = CSPTracker;\nexport default CSPTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSPTracker\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/sptracker/sptracker.js"],"names":["React","useState","useEffect","NavBar","RoleDropDown","IdleTimer","useHistory","SelectPag","CSPTrackerdDataTable","HotTable","SaveIcon","AlertF","CSPTracker","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","settings","licenseKey","colWidths","currentRole","setCurrentRole","currentTab","setCurrentTab","roles","setRoles","pagination","setPagination","successAlert","setSuccessAlert","uploadDrawingSuccess","setUploadDrawingSuccess","updateDrawingSuccess","setUpdateDrawingSuccess","drawingError","setDrawingError","noTagError","setNoTagError","invalidFieldError","setInvalidFieldError","errorIndex","setErrorIndex","viewData","setViewData","editData","setEditData","descriptionPlaneData","setDescriptionPlaneData","diametersData","setDiametersData","ratingData","setRatingData","specData","setSpecData","endPreparationData","setEndPrepartaionData","boltTypesData","setBoltTypesData","busy","setBusy","editingUser","setEditingUser","updateData","setUpdateData","history","currentUser","getItem","p1bore","p2bore","p3bore","process","env","REACT_APP_MMDN","body","user","options","method","headers","JSON","stringify","fetch","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","setItem","catch","error","console","log","rows","uploadSuccess","updateSuccess","drawingUploadError","handleOnIdle","saveChanges","clear","push","REACT_APP_APP_NAMEPROJ","handleToggle","success","addRow","tag","quantity","description","description_plan_code","drawing_filename","description_iso","ident","p1diameter_dn","p1diameter_nps","p2diameter_dn","p2diameter_nps","p3diameter_dn","p3diameter_nps","rating","spec","type","end_preparation","description_drawing","face_to_face","bolts","bolt_type","ready_load","ready_e3d","comments","blank","i","length","index","unique","none","tags","indexOf","updateDataMethod","document","style","zoom","pageSelector","value","dataTableHeight","editBtn","addRowBtn","saveBtn","upload","table","bind","marginLeft","allowInvalid","source","strict","marginRight","fontSize","width","height","borderRadius","float","marginTop","IsoTrackerLogo","paddingLeft","display"],"mappings":"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","sourcesContent":["import \"./sptracker.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport IsoTrackerLogo from \"../../assets/images/3DTracker.svg\"\r\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown'\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport {useHistory} from \"react-router\";\r\nimport SelectPag from \"../../components/selectPag/selectPag\"\r\nimport CSPTrackerdDataTable from \"../../components/csptrackerDataTable/csptrackerDataTable\"\r\nimport HotTable from \"@handsontable/react\"\r\n\r\nimport SaveIcon from \"../../assets/images/FolderOpen.png\"\r\nimport AlertF from \"../../components/alert/alert\"\r\n\r\nconst CSPTracker = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const settings = {\r\n        licenseKey: 'non-commercial-and-evaluation',\r\n        colWidths: 250,\r\n      }\r\n\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [currentTab, setCurrentTab] = useState(\"View\")\r\n    const [roles, setRoles] = useState();\r\n    const [pagination, setPagination] = useState(10)\r\n\r\n    const [successAlert, setSuccessAlert] = useState(false);\r\n    const [uploadDrawingSuccess, setUploadDrawingSuccess] = useState(false);\r\n    const [updateDrawingSuccess, setUpdateDrawingSuccess] = useState(false);\r\n    const [drawingError, setDrawingError] = useState(false);\r\n    const [noTagError, setNoTagError] = useState(false);\r\n    const [invalidFieldError, setInvalidFieldError] = useState(false);\r\n    const [errorIndex, setErrorIndex] = useState(null);\r\n\r\n    const [viewData, setViewData] = useState()\r\n    const [editData, setEditData] = useState()\r\n    const [descriptionPlaneData, setDescriptionPlaneData] = useState()\r\n    const [diametersData, setDiametersData] = useState()\r\n    const [ratingData, setRatingData] = useState()\r\n    const [specData, setSpecData] = useState()\r\n    const [endPreparationData, setEndPrepartaionData] = useState()\r\n    const [boltTypesData, setBoltTypesData] = useState()\r\n\r\n    const [busy, setBusy] = useState(false)\r\n    const [editingUser, setEditingUser] = useState()\r\n\r\n    const [updateData, setUpdateData] = useState(false)    \r\n\r\n    const history = useHistory()\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    let p1bore, p2bore, p3bore = \"\"\r\n\r\n    if(process.env.REACT_APP_MMDN === \"0\"){\r\n        p1bore = \"p1diameter_nps\"\r\n        p2bore = \"p2diameter_nps\"\r\n        p3bore = \"p3diameter_nps\"\r\n    }else{\r\n        p1bore = \"p1diameter_dn\"\r\n        p2bore = \"p2diameter_dn\"\r\n        p3bore = \"p3diameter_dn\"\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        let options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n\r\n    },[updateData])\r\n\r\n    useEffect(async()=>{\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/csptracker\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                await setEditData(json.rows)\r\n            })\r\n\r\n        if(currentTab === \"View\"){  \r\n    \r\n            await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getListsData\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                await setDescriptionPlaneData(json.descriptionPlaneData)\r\n                await setDiametersData(json.diametersData)\r\n                await setRatingData(json.ratingData)\r\n                await setSpecData(json.specData)\r\n                await setEndPrepartaionData(json.endPreparationData)\r\n                await setBoltTypesData(json.boltTypesData)\r\n            })\r\n        }    \r\n    }, [currentTab])\r\n\r\n    function uploadSuccess(){\r\n        setUploadDrawingSuccess(true)\r\n    }\r\n\r\n    function updateSuccess(){\r\n        setUpdateDrawingSuccess(true)\r\n    }\r\n\r\n    function drawingUploadError(){\r\n        setDrawingError(true)\r\n    }\r\n\r\n    function handleOnIdle(){\r\n        saveChanges()\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n\r\n            })\r\n        secureStorage.clear()\r\n        history.push(\"/\" + process.env.REACT_APP_APP_NAMEPROJ)\r\n    }\r\n\r\n    async function handleToggle(){\r\n        if(currentTab === \"View\"){\r\n            const body = {\r\n                user: currentUser,\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/editCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                if(json.user){\r\n                    await setBusy(true)\r\n                    await setEditingUser(json.user)\r\n                }else{\r\n                    await setBusy(false)\r\n                }\r\n                await setCurrentTab(\"Edit\")\r\n            })\r\n            \r\n        }else{\r\n            const body = {\r\n                user: currentUser,\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/exitEditCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                if(json.success){\r\n                    await saveChanges()\r\n                    await setCurrentTab(\"View\")\r\n                }\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    async function addRow(){\r\n        let rows = editData\r\n        //rows.push({tag:null, description: null, description_plan_code: null, drawing_filename: null, description_iso: null, ident: null, p1diameter_dn: null, p1diameter_nps: null, p2diameter_dn: null, p2diameter_nps: null, p3diameter_dn: null, p3diameter_nps: null, rating: null, spec: null, face_to_face: null, end_preparation: null, description_drawing: null, bolts: null, bolt_type: null, ready_load: null, ready_e3d: null, comments: null})\r\n        rows.push({tag:\"\", quantity: \"\", description: \"\", description_plan_code: \"\", drawing_filename: \"\", description_iso: \"\", ident: \"\", p1diameter_dn: \"\", p1diameter_nps: \"\", p2diameter_dn: \"\", p2diameter_nps: \"\", p3diameter_dn: \"\", p3diameter_nps: \"\", rating: \"\", spec: \"\", type: \"\", end_preparation: \"\", description_drawing: \"\", face_to_face: \"\", bolts: \"\", bolt_type: \"\", ready_load: \"\", ready_e3d: \"\", comments: \"\"})\r\n        await setEditData(rows)\r\n        await setUpdateData(!updateData)\r\n      }\r\n\r\n    async function saveChanges(){\r\n\r\n        let blank = false\r\n\r\n        for(let i = 0; i < editData.length; i++){\r\n            if(editData[i].tag === null || editData[i].tag === \"\"){\r\n                blank = true\r\n                let index = i+1 \r\n                await setErrorIndex(\"Invalid or blank tag at entry \" + index +\"!\")\r\n            }\r\n        }\r\n\r\n        if(blank){\r\n            await setNoTagError(true)\r\n        }\r\n\r\n        const body = {\r\n            rows: editData,\r\n        }\r\n        let options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/tags\", options)\r\n        .then(response => response.json())\r\n        .then(async json =>{\r\n            let unique = true\r\n            if(json.none){\r\n\r\n            }else{\r\n                let tags = []\r\n                for(let i = 0; i < editData.length; i++){\r\n                    if(tags.indexOf(editData[i].tag) > -1){\r\n                        unique = false\r\n                        let index =  i+1 \r\n                        await setErrorIndex(\"Invalid or blank tag at entry \" + index +\"!\")\r\n                    \r\n                    }else{\r\n                        tags.push(editData[i].tag)\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if(!unique){\r\n                await setNoTagError(true)\r\n            }\r\n            options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/submitCSP\", options)\r\n            .then(response => response.json())\r\n            .then(async json =>{\r\n                if(json.success){\r\n                    await setSuccessAlert(true)\r\n                }\r\n            })\r\n                                \r\n        })                \r\n             \r\n    }\r\n\r\n    async function updateDataMethod(){\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    document.body.style.zoom = 0.8\r\n\r\n    var pageSelector = <SelectPag onChange={value => setPagination(value)} pagination = {pagination}/>\r\n\r\n    var dataTableHeight = \"510px\"\r\n\r\n    if (pagination === 10){\r\n        dataTableHeight = \"510px\"\r\n    }if(pagination === 25){\r\n        dataTableHeight = \"1070px\"\r\n    }if(pagination === 50){\r\n        dataTableHeight = \"2080px\"\r\n    }if(pagination === 100){\r\n        dataTableHeight = \"4040px\"\r\n    }if(pagination === 500){\r\n        dataTableHeight = \"19000px\"    \r\n    }\r\n\r\n    let editBtn, addRowBtn, saveBtn, upload = null\r\n    let table = <CSPTrackerdDataTable currentRole = {currentRole} updateDataMethod = {updateDataMethod.bind(this)} updateData = {updateData} uploadDrawingSuccess = {uploadSuccess.bind(this)} updateDrawingSuccess = {updateSuccess.bind(this)} drawingUploadError={drawingUploadError.bind(this)}/>\r\n\r\n    if(currentRole === \"Materials\"){\r\n        editBtn =  <label class=\"switchBtn\">\r\n                        <input type=\"checkbox\" id=\"edit\" onClick={()=>handleToggle()}/>\r\n                        <div class=\"slide round\">Edit mode</div>\r\n                    </label>    \r\n    }\r\n\r\n\r\n    if(currentTab === \"View\"){\r\n        table = <CSPTrackerdDataTable pagination={pagination} currentRole = {currentRole} updateDataMethod = {updateDataMethod.bind(this)} updateData = {updateData} uploadDrawingSuccess = {uploadSuccess.bind(this)} updateDrawingSuccess = {updateSuccess.bind(this)} drawingUploadError={drawingUploadError.bind(this)}/>\r\n        if(currentRole === \"Materials\"){\r\n            pageSelector = <div style={{marginLeft:\"87%\"}}><SelectPag onChange={value => setPagination(value)} pagination = {pagination}/></div>\r\n        }else{\r\n            pageSelector = <div style={{marginLeft:\"94%\"}}><SelectPag onChange={value => setPagination(value)} pagination = {pagination}/></div>\r\n        }\r\n        addRowBtn = null\r\n        saveBtn = null\r\n        \r\n    }else{\r\n        if(!busy){\r\n            table = <HotTable\r\n            data={editData}\r\n            colHeaders = {[\"TAG\", \"QUANTITY\", \"TYPE\", \"DESCRIPTION\", \"DRAWING DESCRIPION\", \"DESCRIPTION ISO\", \"IDENT\", \"P1BORE\", \"P2BORE\", \"P3BORE\", \"RATING\", \"SPEC\", \"FACE TO FACE\", \"END PREPARATION\", \"FACE_TO_FACE\", \"BOLTS\", \"TYPE OF BOLT\", \"COMMENTS\"]}\r\n            rowHeaders={true}\r\n            width=\"2200\"\r\n            height=\"635\"\r\n            settings={settings} \r\n            manualColumnResize={true}\r\n            manualRowResize={true}\r\n            columns= {[{ data: \"tag\", type:'text'}, {data:\"quantity\", type:\"numeric\"}, {data: \"type\", type:\"text\"}, { data: \"description\", type:'text'}, {data: \"description_plan_code\", type:\"dropdown\", allowInvalid:true, source: descriptionPlaneData}, {data: \"description_iso\", type:\"text\"},{data: \"ident\", type:\"text\"}, {data: p1bore, type:\"dropdown\", strict:\"true\", source: diametersData}, {data: p2bore, type:\"dropdown\", strict:\"true\", source: diametersData}, {data: p3bore, type:\"dropdown\", strict:\"true\", source: diametersData}, {data: \"rating\", type:\"dropdown\", strict:\"true\", source: ratingData}, {data: \"spec\", type:\"dropdown\", strict:\"true\", source: specData},{data: \"end_preparation\", type:\"dropdown\", strict:\"true\", source: endPreparationData}, {data: \"face_to_face\", type:\"\"}, {data: \"bolts\", type:\"dropdown\", strict:\"true\", source:[\"YES\", \"NO\"]}, {data: \"bolt_type\", type:\"dropdown\", strict:\"true\", source: boltTypesData}, {data:\"comments\", type:\"text\"}]}\r\n            />\r\n          \r\n            pageSelector = null\r\n            dataTableHeight= \"700px\"\r\n            addRowBtn = <button class=\"btn btn-sm btn-success\" onClick={() => addRow()} style={{marginRight:\"5px\", fontSize:\"18px\", width:\"35px\", height:\"35px\", borderRadius:\"10px\", float:\"right\", marginTop:\"8px\"}}>+</button>\r\n    \r\n            saveBtn = <button className=\"navBar__button\" onClick={()=> saveChanges()} style={{marginTop:\"7px\"}}><img src={SaveIcon} alt=\"save\" className=\"navBar__icon\"></img><p className=\"navBar__button__text\">Save</p></button>\r\n        }else{\r\n            table = <div className=\"connected__panel\"><p className=\"connected__text\">The user {editingUser} is already editing!</p></div>\r\n        }    \r\n\r\n    }    \r\n\r\n    return(\r\n        \r\n        <body>\r\n            {updateData}\r\n            <IdleTimer\r\n                timeout={1000 * 60 * 15}\r\n                onIdle={handleOnIdle}\r\n                debounce={250}\r\n            />\r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n            <div\r\n            className={`alert alert-success ${successAlert ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setSuccessAlert(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Changes saved!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${uploadDrawingSuccess ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setUploadDrawingSuccess(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Drawing uploaded successfully!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${updateDrawingSuccess ? 'alert-shown' : 'alert-hidden'}`}\r\n            onTransitionEnd={() => setUpdateDrawingSuccess(false)}\r\n            >\r\n                <AlertF type=\"success\" text=\"Drawing updated successfully!\" margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${noTagError ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setNoTagError(false)}\r\n            >\r\n                <AlertF type=\"waring\" text={errorIndex} margin=\"0px\"/>\r\n            </div>\r\n            <div\r\n            className={`alert alert-success ${invalidFieldError ? 'alert-shown' : 'alert-error-hidden'}`}\r\n            onTransitionEnd={() => setInvalidFieldError(false)}\r\n            >\r\n                <AlertF type=\"error\" subtext=\"At least one of the entries had an invalid field!\" margin=\"0px\"/>\r\n            </div>\r\n            <div className=\"isotracker__row\">\r\n                  <div className=\"isotracker__column\">\r\n                      <img src={IsoTrackerLogo} alt=\"isoTrackerLogo\" className=\"isoTrackerLogo__image2\"/>\r\n                      \r\n                      <div className=\"roleSelector__containerF\">\r\n                              <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                      </div>\r\n                      \r\n                  </div>\r\n            </div>\r\n            <table className=\"isotracker__table__container\">\r\n                      <tr className=\"isotracker__table__navBar__container\" style={{height:\"65px \"}}>\r\n                          <th  className=\"isotracker__table__navBar\">\r\n                              <div style={{display:\"flex\"}}>\r\n                                {editBtn}\r\n                                {saveBtn} \r\n                                {pageSelector}  \r\n                              </div>                           \r\n                               \r\n                          </th>\r\n                      </tr>\r\n                      <tr className=\"isotracker__table__tray__and__table__container\" style={{height: dataTableHeight}}>\r\n                          <td className=\"discplines__table__table\" style={{height: dataTableHeight}} >\r\n                              <div  style={{height: dataTableHeight}} className=\"isotracker__table__table__container\" style={{width:\"2200px\"}}>\r\n                                {table}\r\n                                {addRowBtn}\r\n                              </div>\r\n                          </td>\r\n                          \r\n                      </tr>\r\n                  </table>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default CSPTracker;"]},"metadata":{},"sourceType":"module"}