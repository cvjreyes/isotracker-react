{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\pipingNavBtns\\\\pipingNavBtns.js\";\n//Botones inferiores para navegar por isoControl\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\n\nconst PipingNavBtns = props => {\n  var myTrayButton, modelledButton, componentsButton, sStressButton, rStressButton, stressButton, sDesignButtn;\n\n  if (props.currentTab === \"PipinMyTray\") {\n    secureStorage.setItem(\"tab\", \"PipinMyTray\");\n    myTrayButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      style: {\n        backgroundColor: \"#99C6F8\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      children: \"My Tray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }, this);\n  } else {\n    myTrayButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      onClick: () => {\n        props.onChange(\"PipinMyTray\");\n      },\n      children: \"My tray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (props.currentTab === \"PipingModelled\") {\n    secureStorage.setItem(\"tab\", \"PipingModelled\");\n    modelledButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      style: {\n        backgroundColor: \"#99C6F8\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      children: \"Modelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 26\n    }, this);\n  } else {\n    modelledButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      onClick: () => {\n        props.onChange(\"PipingModelled\");\n      },\n      children: \"Modelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 26\n    }, this);\n  }\n\n  if (props.currentTab === \"PipingComponents\") {\n    secureStorage.setItem(\"tab\", \"PipingComponents\");\n    componentsButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      style: {\n        backgroundColor: \"#99C6F8\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      children: \"Components\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }, this);\n  } else {\n    componentsButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      onClick: () => {\n        props.onChange(\"PipingComponents\");\n      },\n      children: \"Components\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }, this);\n  }\n\n  if (props.currentTab === \"PipingSStressButton\") {\n    secureStorage.setItem(\"tab\", \"PipingSStressButton\");\n    sStressButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      style: {\n        backgroundColor: \"#99C6F8\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      children: \"S-Stress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this);\n  } else {\n    sStressButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      onClick: () => {\n        props.onChange(\"PipingSStressButton\");\n      },\n      children: \"S-Stress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this);\n  }\n\n  if (props.currentTab === \"PipingRStressButton\") {\n    secureStorage.setItem(\"tab\", \"PipingRStressButton\");\n    rStressButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      style: {\n        backgroundColor: \"#99C6F8\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      children: \"R-Stress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }, this);\n  } else {\n    rStressButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      onClick: () => {\n        props.onChange(\"PipingRStressButton\");\n      },\n      children: \"R-Stress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }, this);\n  }\n\n  if (props.currentTab === \"PipingStressButton\") {\n    secureStorage.setItem(\"tab\", \"PipingStressButton\");\n    issuerButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      style: {\n        backgroundColor: \"#99C6F8\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      children: \"Stress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }, this);\n  } else {\n    issuerButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      onClick: () => {\n        props.onChange(\"PipingRStressButton\");\n      },\n      children: \"Stress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (props.currentTab === \"PipingRStressButton\") {\n    secureStorage.setItem(\"tab\", \"PipingRStressButton\");\n    issuerButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      style: {\n        backgroundColor: \"#99C6F8\",\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      children: \"R-Stress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }, this);\n  } else {\n    issuerButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"nav__button text-left\",\n      onClick: () => {\n        props.onChange(\"PipingRStressButton\");\n      },\n      children: \"R-Stress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 24\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"isotracker__table__trays__group\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), myTrayButton, /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"isotracker__table__trays__group\",\n      children: \"Trays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), stressButton, supportsButton, materialsButton, issuerButton, ldeIsocontrolButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PipingNavBtns;\nexport default PipingNavBtns;\n\nvar _c;\n\n$RefreshReg$(_c, \"PipingNavBtns\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/pipingNavBtns/pipingNavBtns.js"],"names":["CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","PipingNavBtns","props","myTrayButton","modelledButton","componentsButton","sStressButton","rStressButton","stressButton","sDesignButtn","currentTab","setItem","backgroundColor","color","fontWeight","onChange","issuerButton","supportsButton","materialsButton","ldeIsocontrolButton"],"mappings":"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","sourcesContent":["//Botones inferiores para navegar por isoControl\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nconst PipingNavBtns = props =>{\r\n    var myTrayButton, modelledButton, componentsButton, sStressButton, rStressButton, stressButton, sDesignButtn\r\n    if(props.currentTab === \"PipinMyTray\"){\r\n        secureStorage.setItem(\"tab\", \"PipinMyTray\")\r\n        myTrayButton = <button  type=\"button\" className=\"nav__button text-left\" style={{backgroundColor:\"#99C6F8\", color:\"black\", fontWeight:\"bold\"}}>My Tray</button>\r\n    }else{\r\n        myTrayButton = <button  type=\"button\" className=\"nav__button text-left\"  onClick={() => {props.onChange(\"PipinMyTray\")}}>My tray</button>\r\n        \r\n    }\r\n    if(props.currentTab === \"PipingModelled\"){\r\n        secureStorage.setItem(\"tab\", \"PipingModelled\")\r\n        modelledButton = <button  type=\"button\" className=\"nav__button text-left\" style={{backgroundColor:\"#99C6F8\", color:\"black\", fontWeight:\"bold\"}} >Modelled</button>\r\n    }else{\r\n        modelledButton = <button  type=\"button\" className=\"nav__button text-left\"  onClick={() => {props.onChange(\"PipingModelled\")}}>Modelled</button>\r\n        \r\n    }\r\n    if(props.currentTab === \"PipingComponents\"){\r\n        secureStorage.setItem(\"tab\", \"PipingComponents\")\r\n        componentsButton = <button  type=\"button\" className=\"nav__button text-left\" style={{backgroundColor:\"#99C6F8\", color:\"black\", fontWeight:\"bold\"}} >Components</button>\r\n    }else{\r\n        componentsButton = <button  type=\"button\" className=\"nav__button text-left\"  onClick={() => {props.onChange(\"PipingComponents\")}}>Components</button>\r\n        \r\n    }\r\n    if(props.currentTab === \"PipingSStressButton\"){\r\n        secureStorage.setItem(\"tab\", \"PipingSStressButton\")\r\n        sStressButton = <button  type=\"button\" className=\"nav__button text-left\" style={{backgroundColor:\"#99C6F8\", color:\"black\", fontWeight:\"bold\"}} >S-Stress</button>\r\n    }else{\r\n        sStressButton = <button  type=\"button\" className=\"nav__button text-left\"  onClick={() => {props.onChange(\"PipingSStressButton\")}}>S-Stress</button>    \r\n    }\r\n    if(props.currentTab === \"PipingRStressButton\"){\r\n        secureStorage.setItem(\"tab\", \"PipingRStressButton\")\r\n        rStressButton = <button  type=\"button\" className=\"nav__button text-left\" style={{backgroundColor:\"#99C6F8\", color:\"black\", fontWeight:\"bold\"}} >R-Stress</button>\r\n    }else{\r\n        rStressButton = <button  type=\"button\" className=\"nav__button text-left\"  onClick={() => {props.onChange(\"PipingRStressButton\")}}>R-Stress</button>\r\n        \r\n    }\r\n    if(props.currentTab === \"PipingStressButton\"){\r\n        secureStorage.setItem(\"tab\", \"PipingStressButton\")\r\n        issuerButton = <button  type=\"button\" className=\"nav__button text-left\" style={{backgroundColor:\"#99C6F8\", color:\"black\", fontWeight:\"bold\"}} >Stress</button>\r\n    }else{\r\n        issuerButton = <button  type=\"button\" className=\"nav__button text-left\"  onClick={() => {props.onChange(\"PipingRStressButton\")}}>Stress</button>\r\n        \r\n    }\r\n    if(props.currentTab === \"PipingRStressButton\"){\r\n        secureStorage.setItem(\"tab\", \"PipingRStressButton\")\r\n        issuerButton = <button  type=\"button\" className=\"nav__button text-left\" style={{backgroundColor:\"#99C6F8\", color:\"black\", fontWeight:\"bold\"}} >R-Stress</button>\r\n    }else{\r\n        issuerButton = <button  type=\"button\" className=\"nav__button text-left\"  onClick={() => {props.onChange(\"PipingRStressButton\")}}>R-Stress</button>\r\n        \r\n    }\r\n\r\n    \r\n    return(\r\n        <div>                                  \r\n            <p className=\"isotracker__table__trays__group\">Home</p>\r\n            {myTrayButton}\r\n            <p className=\"isotracker__table__trays__group\">Trays</p>\r\n            {stressButton}\r\n            {supportsButton}\r\n            {materialsButton}\r\n            {issuerButton}\r\n            {ldeIsocontrolButton}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PipingNavBtns;"]},"metadata":{},"sourceType":"module"}