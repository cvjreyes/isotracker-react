{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\renamePopUp\\\\renamePopUp.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-awesome-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RenamePopUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  openModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  rename() {\n    const newName = document.getElementById(\"comments\").value;\n    const oldName = this.props.filename;\n    this.props.rename(newName, oldName);\n    this.closeModal();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"inline-flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-sm btn-danger\",\n        style: {\n          fontSize: \"12px\",\n          padding: \"2px 5px 2px 5px\",\n          marginRight: \"5px\",\n          float: \"left\"\n        },\n        onClick: () => this.openModal(),\n        children: \"LOCKED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          visible: this.state.visible,\n          width: \"550\",\n          height: \"100\",\n          effect: \"fadeInUp\",\n          onClickAway: () => this.closeModal(),\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: this.props.filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"30px\",\n              display: \"inline-block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"comments\",\n              placeholder: \"New name\",\n              class: \"comments\",\n              cols: \"51\",\n              rows: \"1\",\n              required: \"\",\n              maxlength: \"400\",\n              name: \"comments\",\n              style: {\n                margin: \"2px 10px 10px 10px\",\n                float: 'left'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-sm btn-success\",\n              style: {\n                fontSize: \"15px\",\n                float: \"left\"\n              },\n              onClick: () => this.rename(),\n              children: \"Rename\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/renamePopUp/renamePopUp.js"],"names":["React","Component","Modal","RenamePopUp","constructor","props","state","visible","openModal","setState","closeModal","rename","newName","document","getElementById","value","oldName","filename","render","display","fontSize","padding","marginRight","float","marginTop","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAC/CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG;AADD,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAG;AACR,SAAKC,QAAL,CAAc;AACVF,MAAAA,OAAO,EAAG;AADA,KAAd;AAGH;;AAEDG,EAAAA,UAAU,GAAG;AACT,SAAKD,QAAL,CAAc;AACVF,MAAAA,OAAO,EAAG;AADA,KAAd;AAGH;;AAEDI,EAAAA,MAAM,GAAE;AACJ,UAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApD;AACA,UAAMC,OAAO,GAAG,KAAKX,KAAL,CAAWY,QAA3B;AAEA,SAAKZ,KAAL,CAAWM,MAAX,CAAkBC,OAAlB,EAA2BI,OAA3B;AAEA,SAAKN,UAAL;AAEH;;AAEDQ,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAZ;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAC,uBAAd;AAAsC,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAC,MAAV;AAAmBC,UAAAA,OAAO,EAAC,iBAA3B;AAA8CC,UAAAA,WAAW,EAAC,KAA1D;AAAiEC,UAAAA,KAAK,EAAC;AAAvE,SAA7C;AAA6H,QAAA,OAAO,EAAE,MAAM,KAAKf,SAAL,EAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OAA3B;AAAoC,UAAA,KAAK,EAAC,KAA1C;AAAgD,UAAA,MAAM,EAAC,KAAvD;AAA6D,UAAA,MAAM,EAAC,UAApE;AAA+E,UAAA,WAAW,EAAE,MAAM,KAAKG,UAAL,EAAlG;AAAA,kCACI;AAAA,mCACI;AAAA,wBAAK,KAAKL,KAAL,CAAWY;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,KAAK,EAAE;AAACO,cAAAA,SAAS,EAAC,MAAX;AAAmBL,cAAAA,OAAO,EAAC;AAA3B,aAAZ;AAAA,oCAEI;AAAU,cAAA,EAAE,EAAC,UAAb;AAAwB,cAAA,WAAW,EAAC,UAApC;AAA+C,cAAA,KAAK,EAAC,UAArD;AAAgE,cAAA,IAAI,EAAC,IAArE;AAA0E,cAAA,IAAI,EAAC,GAA/E;AAAmF,cAAA,QAAQ,EAAC,EAA5F;AAA+F,cAAA,SAAS,EAAC,KAAzG;AAA+G,cAAA,IAAI,EAAC,UAApH;AAA+H,cAAA,KAAK,EAAE;AAACM,gBAAAA,MAAM,EAAE,oBAAT;AAA+BF,gBAAAA,KAAK,EAAC;AAArC;AAAtI;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,KAAK,EAAC,wBAAd;AAAuC,cAAA,KAAK,EAAE;AAACH,gBAAAA,QAAQ,EAAC,MAAV;AAAkBG,gBAAAA,KAAK,EAAC;AAAxB,eAA9C;AAA+E,cAAA,OAAO,EAAE,MAAI,KAAKZ,MAAL,EAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AAnD8C","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\n\r\nexport default class RenamePopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible : false\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            visible : true\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            visible : false\r\n        });\r\n    }\r\n\r\n    rename(){\r\n        const newName = document.getElementById(\"comments\").value\r\n        const oldName = this.props.filename\r\n\r\n        this.props.rename(newName, oldName)\r\n\r\n        this.closeModal()\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div style={{display:\"inline-flex\"}}>\r\n                <button class=\"btn btn-sm btn-danger\" style={{fontSize:\"12px\",  padding:\"2px 5px 2px 5px\", marginRight:\"5px\", float:\"left\"}} onClick={() => this.openModal()}>LOCKED</button>\r\n                <div>\r\n                    <Modal visible={this.state.visible} width=\"550\" height=\"100\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                        <center>\r\n                            <h4>{this.props.filename}</h4>\r\n                        </center>\r\n                        <div style={{marginTop:\"30px\", display:\"inline-block\"}}> \r\n                              \r\n                            <textarea id=\"comments\" placeholder=\"New name\" class=\"comments\" cols=\"51\" rows=\"1\" required=\"\" maxlength=\"400\" name=\"comments\" style={{margin: \"2px 10px 10px 10px\", float:'left'}}></textarea>\r\n                            <button class=\"btn btn-sm btn-success\" style={{fontSize:\"15px\", float:\"left\"}} onClick={()=>this.rename()}>Rename</button>\r\n                        </div>\r\n                                \r\n                            \r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}