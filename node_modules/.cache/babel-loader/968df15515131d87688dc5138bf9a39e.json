{"ast":null,"code":"import * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {CopyPaste} copyPastePlugin The plugin instance.\n * @returns {object}\n */\n\nexport default function cutItem(copyPastePlugin) {\n  return {\n    key: 'cut',\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_CUT);\n    },\n    callback: function callback() {\n      copyPastePlugin.cut();\n    },\n    disabled: function disabled() {\n      if (this.countRows() === 0 || this.countCols() === 0) {\n        return true;\n      }\n\n      var selected = this.getSelected(); // Disable for no selection or for non-contiquous selection.\n\n      if (!selected || selected.length > 1) {\n        return true;\n      }\n\n      return false;\n    },\n    hidden: false\n  };\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/copyPaste/contextMenuItem/cut.mjs"],"names":["C","cutItem","copyPastePlugin","key","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_CUT","callback","cut","disabled","countRows","countCols","selected","getSelected","length","hidden"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,6BAAnB;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,OAAT,CAAiBC,eAAjB,EAAkC;AAC/C,SAAO;AACLC,IAAAA,GAAG,EAAE,KADA;AAELC,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,aAAO,KAAKC,mBAAL,CAAyBL,CAAC,CAACM,qBAA3B,CAAP;AACD,KAJI;AAKLC,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5BL,MAAAA,eAAe,CAACM,GAAhB;AACD,KAPI;AAQLC,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,UAAI,KAAKC,SAAL,OAAqB,CAArB,IAA0B,KAAKC,SAAL,OAAqB,CAAnD,EAAsD;AACpD,eAAO,IAAP;AACD;;AAED,UAAIC,QAAQ,GAAG,KAAKC,WAAL,EAAf,CAL4B,CAKO;;AAEnC,UAAI,CAACD,QAAD,IAAaA,QAAQ,CAACE,MAAT,GAAkB,CAAnC,EAAsC;AACpC,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD,KApBI;AAqBLC,IAAAA,MAAM,EAAE;AArBH,GAAP;AAuBD","sourcesContent":["import * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {CopyPaste} copyPastePlugin The plugin instance.\n * @returns {object}\n */\n\nexport default function cutItem(copyPastePlugin) {\n  return {\n    key: 'cut',\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_CUT);\n    },\n    callback: function callback() {\n      copyPastePlugin.cut();\n    },\n    disabled: function disabled() {\n      if (this.countRows() === 0 || this.countCols() === 0) {\n        return true;\n      }\n\n      var selected = this.getSelected(); // Disable for no selection or for non-contiquous selection.\n\n      if (!selected || selected.length > 1) {\n        return true;\n      }\n\n      return false;\n    },\n    hidden: false\n  };\n}"]},"metadata":{},"sourceType":"module"}