{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { isFunction } from \"../../helpers/function.mjs\";\n\nvar DEFAULT_ERROR_ID_EXISTS = function DEFAULT_ERROR_ID_EXISTS(id) {\n  return \"The id '\".concat(id, \"' is already declared in a map.\");\n};\n/**\r\n * @typedef {object} UniqueMap\r\n * @property {Function} addItem Adds a new item to the unique map.\r\n * @property {Function} clear Clears the map.\r\n * @property {Function} getId Returns ID for the passed item.\r\n * @property {Function} getItem Gets item from the passed ID.\r\n * @property {Function} getItems Gets all items from the map.\r\n * @property {Function} hasItem Verifies if the passed ID exists in a map.\r\n */\n\n/**\r\n * Creates a new unique map.\r\n *\r\n * @param {object} config The config for priority queue.\r\n * @param {Function} config.errorIdExists The function to generate custom message if ID is already taken.\r\n * @returns {UniqueMap}\r\n */\n\n\nexport function createUniqueMap() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      errorIdExists = _ref.errorIdExists;\n\n  var uniqueMap = new Map();\n  errorIdExists = isFunction(errorIdExists) ? errorIdExists : DEFAULT_ERROR_ID_EXISTS;\n  /**\r\n   * Adds a new item to the unique map. Throws error if `id` is already added.\r\n   *\r\n   * @param {*} id The ID of the adding item.\r\n   * @param {*} item The adding item.\r\n   */\n\n  function addItem(id, item) {\n    if (hasItem(id)) {\n      throw new Error(errorIdExists(id));\n    }\n\n    uniqueMap.set(id, item);\n  }\n  /**\r\n   * Clears the map.\r\n   */\n\n\n  function clear() {\n    uniqueMap.clear();\n  }\n  /**\r\n   * Returns ID for the passed item.\r\n   *\r\n   * @param {*} item The item of the getting ID.\r\n   * @returns {*}\r\n   */\n\n\n  function getId(item) {\n    var _ref2 = getItems().find(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          id = _ref5[0],\n          element = _ref5[1];\n\n      if (item === element) {\n        return id;\n      }\n\n      return false;\n    }) || [null],\n        _ref3 = _slicedToArray(_ref2, 1),\n        itemId = _ref3[0];\n\n    return itemId;\n  }\n  /**\r\n   * Returns item from the passed ID.\r\n   *\r\n   * @param {*} id The ID of the getting item.\r\n   * @returns {*}\r\n   */\n\n\n  function getItem(id) {\n    return uniqueMap.get(id);\n  }\n  /**\r\n   * Gets all items from the map.\r\n   *\r\n   * @returns {Array}\r\n   */\n\n\n  function getItems() {\n    return _toConsumableArray(uniqueMap);\n  }\n  /**\r\n   * Verifies if the passed ID exists in a map.\r\n   *\r\n   * @param {*} id The ID to check if registered.\r\n   * @returns {boolean}\r\n   */\n\n\n  function hasItem(id) {\n    return uniqueMap.has(id);\n  }\n\n  return {\n    addItem: addItem,\n    clear: clear,\n    getId: getId,\n    getItem: getItem,\n    getItems: getItems,\n    hasItem: hasItem\n  };\n}","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/utils/dataStructures/uniqueMap.mjs"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_slicedToArray","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","len","length","arr2","_i","_arr","_n","_d","_s","_e","next","done","push","value","err","isFunction","DEFAULT_ERROR_ID_EXISTS","id","concat","createUniqueMap","_ref","arguments","undefined","errorIdExists","uniqueMap","Map","addItem","item","hasItem","Error","set","clear","getId","_ref2","getItems","find","_ref4","_ref5","element","_ref3","itemId","getItem","get","has"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\r\n\r\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\r\n\r\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\r\n\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nimport \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.map.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\nimport \"core-js/modules/es.array.find.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.symbol.iterator.js\";\r\nimport \"core-js/modules/es.array.slice.js\";\r\nimport \"core-js/modules/es.function.name.js\";\r\nimport \"core-js/modules/es.array.from.js\";\r\nimport { isFunction } from \"../../helpers/function.mjs\";\r\n\r\nvar DEFAULT_ERROR_ID_EXISTS = function DEFAULT_ERROR_ID_EXISTS(id) {\r\n  return \"The id '\".concat(id, \"' is already declared in a map.\");\r\n};\r\n/**\r\n * @typedef {object} UniqueMap\r\n * @property {Function} addItem Adds a new item to the unique map.\r\n * @property {Function} clear Clears the map.\r\n * @property {Function} getId Returns ID for the passed item.\r\n * @property {Function} getItem Gets item from the passed ID.\r\n * @property {Function} getItems Gets all items from the map.\r\n * @property {Function} hasItem Verifies if the passed ID exists in a map.\r\n */\r\n\r\n/**\r\n * Creates a new unique map.\r\n *\r\n * @param {object} config The config for priority queue.\r\n * @param {Function} config.errorIdExists The function to generate custom message if ID is already taken.\r\n * @returns {UniqueMap}\r\n */\r\n\r\n\r\nexport function createUniqueMap() {\r\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\r\n      errorIdExists = _ref.errorIdExists;\r\n\r\n  var uniqueMap = new Map();\r\n  errorIdExists = isFunction(errorIdExists) ? errorIdExists : DEFAULT_ERROR_ID_EXISTS;\r\n  /**\r\n   * Adds a new item to the unique map. Throws error if `id` is already added.\r\n   *\r\n   * @param {*} id The ID of the adding item.\r\n   * @param {*} item The adding item.\r\n   */\r\n\r\n  function addItem(id, item) {\r\n    if (hasItem(id)) {\r\n      throw new Error(errorIdExists(id));\r\n    }\r\n\r\n    uniqueMap.set(id, item);\r\n  }\r\n  /**\r\n   * Clears the map.\r\n   */\r\n\r\n\r\n  function clear() {\r\n    uniqueMap.clear();\r\n  }\r\n  /**\r\n   * Returns ID for the passed item.\r\n   *\r\n   * @param {*} item The item of the getting ID.\r\n   * @returns {*}\r\n   */\r\n\r\n\r\n  function getId(item) {\r\n    var _ref2 = getItems().find(function (_ref4) {\r\n      var _ref5 = _slicedToArray(_ref4, 2),\r\n          id = _ref5[0],\r\n          element = _ref5[1];\r\n\r\n      if (item === element) {\r\n        return id;\r\n      }\r\n\r\n      return false;\r\n    }) || [null],\r\n        _ref3 = _slicedToArray(_ref2, 1),\r\n        itemId = _ref3[0];\r\n\r\n    return itemId;\r\n  }\r\n  /**\r\n   * Returns item from the passed ID.\r\n   *\r\n   * @param {*} id The ID of the getting item.\r\n   * @returns {*}\r\n   */\r\n\r\n\r\n  function getItem(id) {\r\n    return uniqueMap.get(id);\r\n  }\r\n  /**\r\n   * Gets all items from the map.\r\n   *\r\n   * @returns {Array}\r\n   */\r\n\r\n\r\n  function getItems() {\r\n    return _toConsumableArray(uniqueMap);\r\n  }\r\n  /**\r\n   * Verifies if the passed ID exists in a map.\r\n   *\r\n   * @param {*} id The ID to check if registered.\r\n   * @returns {boolean}\r\n   */\r\n\r\n\r\n  function hasItem(id) {\r\n    return uniqueMap.has(id);\r\n  }\r\n\r\n  return {\r\n    addItem: addItem,\r\n    clear: clear,\r\n    getId: getId,\r\n    getItem: getItem,\r\n    getItems: getItems,\r\n    hasItem: hasItem\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}