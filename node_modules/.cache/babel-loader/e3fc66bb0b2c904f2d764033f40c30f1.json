{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport { addClass, getScrollbarWidth, getScrollLeft, getWindowScrollTop, hasClass, outerWidth, removeClass, setOverlayPosition, resetCssTransform } from \"./../../../../helpers/dom/element.mjs\";\nimport LeftOverlayTable from \"./../table/left.mjs\";\nimport { Overlay } from \"./_base.mjs\";\nimport { CLONE_LEFT } from \"./constants.mjs\";\n/**\r\n * @class LeftOverlay\r\n */\n\nexport var LeftOverlay = /*#__PURE__*/function (_Overlay) {\n  _inherits(LeftOverlay, _Overlay);\n\n  var _super = _createSuper(LeftOverlay);\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance.\r\n   */\n\n\n  function LeftOverlay(wotInstance) {\n    var _this;\n\n    _classCallCheck(this, LeftOverlay);\n\n    _this = _super.call(this, wotInstance);\n    _this.clone = _this.makeClone(CLONE_LEFT);\n    return _this;\n  }\n  /**\r\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\r\n   *\r\n   * @see Table#constructor\r\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\r\n   * @returns {Table}\r\n   */\n\n\n  _createClass(LeftOverlay, [{\n    key: \"createTable\",\n    value: function createTable() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _construct(LeftOverlayTable, args);\n    }\n    /**\r\n     * Checks if overlay should be fully rendered.\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"shouldBeRendered\",\n    value: function shouldBeRendered() {\n      return this.wot.getSetting('shouldRenderLeftOverlay');\n    }\n    /**\r\n     * Updates the left overlay position.\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"resetFixedPosition\",\n    value: function resetFixedPosition() {\n      var wtTable = this.wot.wtTable;\n\n      if (!this.needFullRender || !wtTable.holder.parentNode) {\n        // removed from DOM\n        return;\n      }\n\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var headerPosition = 0;\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n\n      if (this.trimmingContainer === this.wot.rootWindow && (!preventOverflow || preventOverflow !== 'horizontal')) {\n        var hiderRect = wtTable.hider.getBoundingClientRect();\n        var left = Math.ceil(hiderRect.left);\n        var right = Math.ceil(hiderRect.right);\n        var finalLeft;\n        var finalTop;\n        finalTop = wtTable.hider.style.top;\n        finalTop = finalTop === '' ? 0 : finalTop;\n\n        if (left < 0 && right - overlayRoot.offsetWidth > 0) {\n          finalLeft = -left;\n        } else {\n          finalLeft = 0;\n        }\n\n        headerPosition = finalLeft;\n        finalLeft += 'px';\n        setOverlayPosition(overlayRoot, finalLeft, finalTop);\n      } else {\n        headerPosition = this.getScrollPosition();\n        resetCssTransform(overlayRoot);\n      }\n\n      var positionChanged = this.adjustHeaderBordersPosition(headerPosition);\n      this.adjustElementsSize();\n      return positionChanged;\n    }\n    /**\r\n     * Sets the main overlay's horizontal scroll position.\r\n     *\r\n     * @param {number} pos The scroll position.\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"setScrollPosition\",\n    value: function setScrollPosition(pos) {\n      var rootWindow = this.wot.rootWindow;\n      var result = false;\n\n      if (this.mainTableScrollableElement === rootWindow && rootWindow.scrollX !== pos) {\n        rootWindow.scrollTo(pos, getWindowScrollTop(rootWindow));\n        result = true;\n      } else if (this.mainTableScrollableElement.scrollLeft !== pos) {\n        this.mainTableScrollableElement.scrollLeft = pos;\n        result = true;\n      }\n\n      return result;\n    }\n    /**\r\n     * Triggers onScroll hook callback.\r\n     */\n\n  }, {\n    key: \"onScroll\",\n    value: function onScroll() {\n      this.wot.getSetting('onScrollVertically');\n    }\n    /**\r\n     * Calculates total sum cells width.\r\n     *\r\n     * @param {number} from Column index which calculates started from.\r\n     * @param {number} to Column index where calculation is finished.\r\n     * @returns {number} Width sum.\r\n     */\n\n  }, {\n    key: \"sumCellSizes\",\n    value: function sumCellSizes(from, to) {\n      var defaultColumnWidth = this.wot.wtSettings.defaultColumnWidth;\n      var column = from;\n      var sum = 0;\n\n      while (column < to) {\n        sum += this.wot.wtTable.getStretchedColumnWidth(column) || defaultColumnWidth;\n        column += 1;\n      }\n\n      return sum;\n    }\n    /**\r\n     * Adjust overlay root element, childs and master table element sizes (width, height).\r\n     *\r\n     * @param {boolean} [force=false] When `true`, it adjusts the DOM nodes sizes for that overlay.\r\n     */\n\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.updateTrimmingContainer();\n\n      if (this.needFullRender || force) {\n        this.adjustRootElementSize();\n        this.adjustRootChildrenSize();\n      }\n    }\n    /**\r\n     * Adjust overlay root element size (width and height).\r\n     */\n\n  }, {\n    key: \"adjustRootElementSize\",\n    value: function adjustRootElementSize() {\n      var _this$wot = this.wot,\n          wtTable = _this$wot.wtTable,\n          rootDocument = _this$wot.rootDocument,\n          rootWindow = _this$wot.rootWindow;\n      var scrollbarHeight = getScrollbarWidth(rootDocument);\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\n      var overlayRootStyle = overlayRoot.style;\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n\n      if (this.trimmingContainer !== rootWindow || preventOverflow === 'vertical') {\n        var height = this.wot.wtViewport.getWorkspaceHeight();\n\n        if (this.wot.wtOverlays.hasScrollbarBottom) {\n          height -= scrollbarHeight;\n        }\n\n        height = Math.min(height, wtTable.wtRootElement.scrollHeight);\n        overlayRootStyle.height = \"\".concat(height, \"px\");\n      } else {\n        overlayRootStyle.height = '';\n      }\n\n      this.clone.wtTable.holder.style.height = overlayRootStyle.height;\n      var tableWidth = outerWidth(this.clone.wtTable.TABLE);\n      overlayRootStyle.width = \"\".concat(tableWidth, \"px\");\n    }\n    /**\r\n     * Adjust overlay root childs size.\r\n     */\n\n  }, {\n    key: \"adjustRootChildrenSize\",\n    value: function adjustRootChildrenSize() {\n      var _selections$getCell$g;\n\n      var holder = this.clone.wtTable.holder;\n      var selections = this.wot.selections;\n      var selectionCornerOffset = Math.abs((_selections$getCell$g = selections === null || selections === void 0 ? void 0 : selections.getCell().getBorder(this.wot).cornerCenterPointOffset) !== null && _selections$getCell$g !== void 0 ? _selections$getCell$g : 0);\n      this.clone.wtTable.hider.style.height = this.hider.style.height;\n      holder.style.height = holder.parentNode.style.height; // Add selection corner protruding part to the holder total width to make sure that\n      // borders' corner won't be cut after horizontal scroll (#6937).\n\n      holder.style.width = \"\".concat(parseInt(holder.parentNode.style.width, 10) + selectionCornerOffset, \"px\");\n    }\n    /**\r\n     * Adjust the overlay dimensions and position.\r\n     */\n\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      var total = this.wot.getSetting('totalColumns');\n\n      if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\n        this.spreader.style.left = \"\".concat(this.wot.wtViewport.columnsRenderCalculator.startPosition, \"px\");\n      } else if (total === 0) {\n        this.spreader.style.left = '0';\n      } else {\n        throw new Error('Incorrect value of the columnsRenderCalculator');\n      }\n\n      this.spreader.style.right = '';\n\n      if (this.needFullRender) {\n        this.syncOverlayOffset();\n      }\n    }\n    /**\r\n     * Synchronize calculated top position to an element.\r\n     */\n\n  }, {\n    key: \"syncOverlayOffset\",\n    value: function syncOverlayOffset() {\n      if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\n        this.clone.wtTable.spreader.style.top = \"\".concat(this.wot.wtViewport.rowsRenderCalculator.startPosition, \"px\");\n      } else {\n        this.clone.wtTable.spreader.style.top = '';\n      }\n    }\n    /**\r\n     * Scrolls horizontally to a column at the left edge of the viewport.\r\n     *\r\n     * @param {number} sourceCol  Column index which you want to scroll to.\r\n     * @param {boolean} [beyondRendered]  If `true`, scrolls according to the bottom\r\n     *                                    edge (top edge is by default).\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(sourceCol, beyondRendered) {\n      var newX = this.getTableParentOffset();\n      var sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;\n      var mainHolder = sourceInstance.wtTable.holder;\n      var scrollbarCompensation = 0;\n\n      if (beyondRendered && mainHolder.offsetWidth !== mainHolder.clientWidth) {\n        scrollbarCompensation = getScrollbarWidth(this.wot.rootDocument);\n      }\n\n      if (beyondRendered) {\n        newX += this.sumCellSizes(0, sourceCol + 1);\n        newX -= this.wot.wtViewport.getViewportWidth();\n      } else {\n        newX += this.sumCellSizes(this.wot.getSetting('fixedColumnsLeft'), sourceCol);\n      }\n\n      newX += scrollbarCompensation;\n      return this.setScrollPosition(newX);\n    }\n    /**\r\n     * Gets table parent left position.\r\n     *\r\n     * @returns {number}\r\n     */\n\n  }, {\n    key: \"getTableParentOffset\",\n    value: function getTableParentOffset() {\n      var preventOverflow = this.wot.getSetting('preventOverflow');\n      var offset = 0;\n\n      if (!preventOverflow && this.trimmingContainer === this.wot.rootWindow) {\n        offset = this.wot.wtTable.holderOffset.left;\n      }\n\n      return offset;\n    }\n    /**\r\n     * Gets the main overlay's horizontal scroll position.\r\n     *\r\n     * @returns {number} Main table's vertical scroll position.\r\n     */\n\n  }, {\n    key: \"getScrollPosition\",\n    value: function getScrollPosition() {\n      return getScrollLeft(this.mainTableScrollableElement, this.wot.rootWindow);\n    }\n    /**\r\n     * Adds css classes to hide the header border's header (cell-selection border hiding issue).\r\n     *\r\n     * @param {number} position Header X position if trimming container is window or scroll top if not.\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"adjustHeaderBordersPosition\",\n    value: function adjustHeaderBordersPosition(position) {\n      var masterParent = this.wot.wtTable.holder.parentNode;\n      var rowHeaders = this.wot.getSetting('rowHeaders');\n      var fixedColumnsLeft = this.wot.getSetting('fixedColumnsLeft');\n      var totalRows = this.wot.getSetting('totalRows');\n\n      if (totalRows) {\n        removeClass(masterParent, 'emptyRows');\n      } else {\n        addClass(masterParent, 'emptyRows');\n      }\n\n      var positionChanged = false;\n\n      if (fixedColumnsLeft && !rowHeaders.length) {\n        addClass(masterParent, 'innerBorderLeft');\n      } else if (!fixedColumnsLeft && rowHeaders.length) {\n        var previousState = hasClass(masterParent, 'innerBorderLeft');\n\n        if (position) {\n          addClass(masterParent, 'innerBorderLeft');\n          positionChanged = !previousState;\n        } else {\n          removeClass(masterParent, 'innerBorderLeft');\n          positionChanged = previousState;\n        }\n      }\n\n      return positionChanged;\n    }\n  }], [{\n    key: \"OVERLAY_NAME\",\n    get: function get() {\n      return CLONE_LEFT;\n    }\n  }]);\n\n  return LeftOverlay;\n}(Overlay);","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/3rdparty/walkontable/src/overlay/left.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_construct","Parent","args","Class","_isNativeReflectConstruct","Reflect","construct","a","push","apply","Constructor","Function","bind","instance","_setPrototypeOf","arguments","_classCallCheck","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","addClass","getScrollbarWidth","getScrollLeft","getWindowScrollTop","hasClass","outerWidth","removeClass","setOverlayPosition","resetCssTransform","LeftOverlayTable","Overlay","CLONE_LEFT","LeftOverlay","_Overlay","_super","wotInstance","_this","clone","makeClone","createTable","_len","Array","_key","shouldBeRendered","wot","getSetting","resetFixedPosition","wtTable","needFullRender","holder","parentNode","overlayRoot","headerPosition","preventOverflow","trimmingContainer","rootWindow","hiderRect","hider","getBoundingClientRect","left","Math","ceil","right","finalLeft","finalTop","style","top","offsetWidth","getScrollPosition","positionChanged","adjustHeaderBordersPosition","adjustElementsSize","setScrollPosition","pos","mainTableScrollableElement","scrollX","scrollTo","scrollLeft","onScroll","sumCellSizes","from","to","defaultColumnWidth","wtSettings","column","sum","getStretchedColumnWidth","force","undefined","updateTrimmingContainer","adjustRootElementSize","adjustRootChildrenSize","_this$wot","rootDocument","scrollbarHeight","overlayRootStyle","height","wtViewport","getWorkspaceHeight","wtOverlays","hasScrollbarBottom","min","wtRootElement","scrollHeight","concat","tableWidth","TABLE","width","_selections$getCell$g","selections","selectionCornerOffset","abs","getCell","getBorder","cornerCenterPointOffset","parseInt","applyToDOM","total","columnsRenderCalculator","startPosition","spreader","Error","syncOverlayOffset","rowsRenderCalculator","sourceCol","beyondRendered","newX","getTableParentOffset","sourceInstance","cloneSource","mainHolder","scrollbarCompensation","clientWidth","getViewportWidth","offset","holderOffset","position","masterParent","rowHeaders","fixedColumnsLeft","totalRows","previousState","get"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\r\n\r\nimport \"core-js/modules/es.object.set-prototype-of.js\";\r\nimport \"core-js/modules/es.object.get-prototype-of.js\";\r\nimport \"core-js/modules/es.reflect.construct.js\";\r\nimport \"core-js/modules/es.symbol.js\";\r\nimport \"core-js/modules/es.symbol.description.js\";\r\nimport \"core-js/modules/es.object.to-string.js\";\r\nimport \"core-js/modules/es.symbol.iterator.js\";\r\nimport \"core-js/modules/es.array.iterator.js\";\r\nimport \"core-js/modules/es.string.iterator.js\";\r\nimport \"core-js/modules/web.dom-collections.iterator.js\";\r\n\r\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\r\n\r\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\r\n\r\nimport { addClass, getScrollbarWidth, getScrollLeft, getWindowScrollTop, hasClass, outerWidth, removeClass, setOverlayPosition, resetCssTransform } from \"./../../../../helpers/dom/element.mjs\";\r\nimport LeftOverlayTable from \"./../table/left.mjs\";\r\nimport { Overlay } from \"./_base.mjs\";\r\nimport { CLONE_LEFT } from \"./constants.mjs\";\r\n/**\r\n * @class LeftOverlay\r\n */\r\n\r\nexport var LeftOverlay = /*#__PURE__*/function (_Overlay) {\r\n  _inherits(LeftOverlay, _Overlay);\r\n\r\n  var _super = _createSuper(LeftOverlay);\r\n\r\n  /**\r\n   * @param {Walkontable} wotInstance The Walkontable instance.\r\n   */\r\n  function LeftOverlay(wotInstance) {\r\n    var _this;\r\n\r\n    _classCallCheck(this, LeftOverlay);\r\n\r\n    _this = _super.call(this, wotInstance);\r\n    _this.clone = _this.makeClone(CLONE_LEFT);\r\n    return _this;\r\n  }\r\n  /**\r\n   * Factory method to create a subclass of `Table` that is relevant to this overlay.\r\n   *\r\n   * @see Table#constructor\r\n   * @param {...*} args Parameters that will be forwarded to the `Table` constructor.\r\n   * @returns {Table}\r\n   */\r\n\r\n\r\n  _createClass(LeftOverlay, [{\r\n    key: \"createTable\",\r\n    value: function createTable() {\r\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      return _construct(LeftOverlayTable, args);\r\n    }\r\n    /**\r\n     * Checks if overlay should be fully rendered.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"shouldBeRendered\",\r\n    value: function shouldBeRendered() {\r\n      return this.wot.getSetting('shouldRenderLeftOverlay');\r\n    }\r\n    /**\r\n     * Updates the left overlay position.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"resetFixedPosition\",\r\n    value: function resetFixedPosition() {\r\n      var wtTable = this.wot.wtTable;\r\n\r\n      if (!this.needFullRender || !wtTable.holder.parentNode) {\r\n        // removed from DOM\r\n        return;\r\n      }\r\n\r\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\r\n      var headerPosition = 0;\r\n      var preventOverflow = this.wot.getSetting('preventOverflow');\r\n\r\n      if (this.trimmingContainer === this.wot.rootWindow && (!preventOverflow || preventOverflow !== 'horizontal')) {\r\n        var hiderRect = wtTable.hider.getBoundingClientRect();\r\n        var left = Math.ceil(hiderRect.left);\r\n        var right = Math.ceil(hiderRect.right);\r\n        var finalLeft;\r\n        var finalTop;\r\n        finalTop = wtTable.hider.style.top;\r\n        finalTop = finalTop === '' ? 0 : finalTop;\r\n\r\n        if (left < 0 && right - overlayRoot.offsetWidth > 0) {\r\n          finalLeft = -left;\r\n        } else {\r\n          finalLeft = 0;\r\n        }\r\n\r\n        headerPosition = finalLeft;\r\n        finalLeft += 'px';\r\n        setOverlayPosition(overlayRoot, finalLeft, finalTop);\r\n      } else {\r\n        headerPosition = this.getScrollPosition();\r\n        resetCssTransform(overlayRoot);\r\n      }\r\n\r\n      var positionChanged = this.adjustHeaderBordersPosition(headerPosition);\r\n      this.adjustElementsSize();\r\n      return positionChanged;\r\n    }\r\n    /**\r\n     * Sets the main overlay's horizontal scroll position.\r\n     *\r\n     * @param {number} pos The scroll position.\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"setScrollPosition\",\r\n    value: function setScrollPosition(pos) {\r\n      var rootWindow = this.wot.rootWindow;\r\n      var result = false;\r\n\r\n      if (this.mainTableScrollableElement === rootWindow && rootWindow.scrollX !== pos) {\r\n        rootWindow.scrollTo(pos, getWindowScrollTop(rootWindow));\r\n        result = true;\r\n      } else if (this.mainTableScrollableElement.scrollLeft !== pos) {\r\n        this.mainTableScrollableElement.scrollLeft = pos;\r\n        result = true;\r\n      }\r\n\r\n      return result;\r\n    }\r\n    /**\r\n     * Triggers onScroll hook callback.\r\n     */\r\n\r\n  }, {\r\n    key: \"onScroll\",\r\n    value: function onScroll() {\r\n      this.wot.getSetting('onScrollVertically');\r\n    }\r\n    /**\r\n     * Calculates total sum cells width.\r\n     *\r\n     * @param {number} from Column index which calculates started from.\r\n     * @param {number} to Column index where calculation is finished.\r\n     * @returns {number} Width sum.\r\n     */\r\n\r\n  }, {\r\n    key: \"sumCellSizes\",\r\n    value: function sumCellSizes(from, to) {\r\n      var defaultColumnWidth = this.wot.wtSettings.defaultColumnWidth;\r\n      var column = from;\r\n      var sum = 0;\r\n\r\n      while (column < to) {\r\n        sum += this.wot.wtTable.getStretchedColumnWidth(column) || defaultColumnWidth;\r\n        column += 1;\r\n      }\r\n\r\n      return sum;\r\n    }\r\n    /**\r\n     * Adjust overlay root element, childs and master table element sizes (width, height).\r\n     *\r\n     * @param {boolean} [force=false] When `true`, it adjusts the DOM nodes sizes for that overlay.\r\n     */\r\n\r\n  }, {\r\n    key: \"adjustElementsSize\",\r\n    value: function adjustElementsSize() {\r\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\r\n      this.updateTrimmingContainer();\r\n\r\n      if (this.needFullRender || force) {\r\n        this.adjustRootElementSize();\r\n        this.adjustRootChildrenSize();\r\n      }\r\n    }\r\n    /**\r\n     * Adjust overlay root element size (width and height).\r\n     */\r\n\r\n  }, {\r\n    key: \"adjustRootElementSize\",\r\n    value: function adjustRootElementSize() {\r\n      var _this$wot = this.wot,\r\n          wtTable = _this$wot.wtTable,\r\n          rootDocument = _this$wot.rootDocument,\r\n          rootWindow = _this$wot.rootWindow;\r\n      var scrollbarHeight = getScrollbarWidth(rootDocument);\r\n      var overlayRoot = this.clone.wtTable.holder.parentNode;\r\n      var overlayRootStyle = overlayRoot.style;\r\n      var preventOverflow = this.wot.getSetting('preventOverflow');\r\n\r\n      if (this.trimmingContainer !== rootWindow || preventOverflow === 'vertical') {\r\n        var height = this.wot.wtViewport.getWorkspaceHeight();\r\n\r\n        if (this.wot.wtOverlays.hasScrollbarBottom) {\r\n          height -= scrollbarHeight;\r\n        }\r\n\r\n        height = Math.min(height, wtTable.wtRootElement.scrollHeight);\r\n        overlayRootStyle.height = \"\".concat(height, \"px\");\r\n      } else {\r\n        overlayRootStyle.height = '';\r\n      }\r\n\r\n      this.clone.wtTable.holder.style.height = overlayRootStyle.height;\r\n      var tableWidth = outerWidth(this.clone.wtTable.TABLE);\r\n      overlayRootStyle.width = \"\".concat(tableWidth, \"px\");\r\n    }\r\n    /**\r\n     * Adjust overlay root childs size.\r\n     */\r\n\r\n  }, {\r\n    key: \"adjustRootChildrenSize\",\r\n    value: function adjustRootChildrenSize() {\r\n      var _selections$getCell$g;\r\n\r\n      var holder = this.clone.wtTable.holder;\r\n      var selections = this.wot.selections;\r\n      var selectionCornerOffset = Math.abs((_selections$getCell$g = selections === null || selections === void 0 ? void 0 : selections.getCell().getBorder(this.wot).cornerCenterPointOffset) !== null && _selections$getCell$g !== void 0 ? _selections$getCell$g : 0);\r\n      this.clone.wtTable.hider.style.height = this.hider.style.height;\r\n      holder.style.height = holder.parentNode.style.height; // Add selection corner protruding part to the holder total width to make sure that\r\n      // borders' corner won't be cut after horizontal scroll (#6937).\r\n\r\n      holder.style.width = \"\".concat(parseInt(holder.parentNode.style.width, 10) + selectionCornerOffset, \"px\");\r\n    }\r\n    /**\r\n     * Adjust the overlay dimensions and position.\r\n     */\r\n\r\n  }, {\r\n    key: \"applyToDOM\",\r\n    value: function applyToDOM() {\r\n      var total = this.wot.getSetting('totalColumns');\r\n\r\n      if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {\r\n        this.spreader.style.left = \"\".concat(this.wot.wtViewport.columnsRenderCalculator.startPosition, \"px\");\r\n      } else if (total === 0) {\r\n        this.spreader.style.left = '0';\r\n      } else {\r\n        throw new Error('Incorrect value of the columnsRenderCalculator');\r\n      }\r\n\r\n      this.spreader.style.right = '';\r\n\r\n      if (this.needFullRender) {\r\n        this.syncOverlayOffset();\r\n      }\r\n    }\r\n    /**\r\n     * Synchronize calculated top position to an element.\r\n     */\r\n\r\n  }, {\r\n    key: \"syncOverlayOffset\",\r\n    value: function syncOverlayOffset() {\r\n      if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {\r\n        this.clone.wtTable.spreader.style.top = \"\".concat(this.wot.wtViewport.rowsRenderCalculator.startPosition, \"px\");\r\n      } else {\r\n        this.clone.wtTable.spreader.style.top = '';\r\n      }\r\n    }\r\n    /**\r\n     * Scrolls horizontally to a column at the left edge of the viewport.\r\n     *\r\n     * @param {number} sourceCol  Column index which you want to scroll to.\r\n     * @param {boolean} [beyondRendered]  If `true`, scrolls according to the bottom\r\n     *                                    edge (top edge is by default).\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"scrollTo\",\r\n    value: function scrollTo(sourceCol, beyondRendered) {\r\n      var newX = this.getTableParentOffset();\r\n      var sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;\r\n      var mainHolder = sourceInstance.wtTable.holder;\r\n      var scrollbarCompensation = 0;\r\n\r\n      if (beyondRendered && mainHolder.offsetWidth !== mainHolder.clientWidth) {\r\n        scrollbarCompensation = getScrollbarWidth(this.wot.rootDocument);\r\n      }\r\n\r\n      if (beyondRendered) {\r\n        newX += this.sumCellSizes(0, sourceCol + 1);\r\n        newX -= this.wot.wtViewport.getViewportWidth();\r\n      } else {\r\n        newX += this.sumCellSizes(this.wot.getSetting('fixedColumnsLeft'), sourceCol);\r\n      }\r\n\r\n      newX += scrollbarCompensation;\r\n      return this.setScrollPosition(newX);\r\n    }\r\n    /**\r\n     * Gets table parent left position.\r\n     *\r\n     * @returns {number}\r\n     */\r\n\r\n  }, {\r\n    key: \"getTableParentOffset\",\r\n    value: function getTableParentOffset() {\r\n      var preventOverflow = this.wot.getSetting('preventOverflow');\r\n      var offset = 0;\r\n\r\n      if (!preventOverflow && this.trimmingContainer === this.wot.rootWindow) {\r\n        offset = this.wot.wtTable.holderOffset.left;\r\n      }\r\n\r\n      return offset;\r\n    }\r\n    /**\r\n     * Gets the main overlay's horizontal scroll position.\r\n     *\r\n     * @returns {number} Main table's vertical scroll position.\r\n     */\r\n\r\n  }, {\r\n    key: \"getScrollPosition\",\r\n    value: function getScrollPosition() {\r\n      return getScrollLeft(this.mainTableScrollableElement, this.wot.rootWindow);\r\n    }\r\n    /**\r\n     * Adds css classes to hide the header border's header (cell-selection border hiding issue).\r\n     *\r\n     * @param {number} position Header X position if trimming container is window or scroll top if not.\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"adjustHeaderBordersPosition\",\r\n    value: function adjustHeaderBordersPosition(position) {\r\n      var masterParent = this.wot.wtTable.holder.parentNode;\r\n      var rowHeaders = this.wot.getSetting('rowHeaders');\r\n      var fixedColumnsLeft = this.wot.getSetting('fixedColumnsLeft');\r\n      var totalRows = this.wot.getSetting('totalRows');\r\n\r\n      if (totalRows) {\r\n        removeClass(masterParent, 'emptyRows');\r\n      } else {\r\n        addClass(masterParent, 'emptyRows');\r\n      }\r\n\r\n      var positionChanged = false;\r\n\r\n      if (fixedColumnsLeft && !rowHeaders.length) {\r\n        addClass(masterParent, 'innerBorderLeft');\r\n      } else if (!fixedColumnsLeft && rowHeaders.length) {\r\n        var previousState = hasClass(masterParent, 'innerBorderLeft');\r\n\r\n        if (position) {\r\n          addClass(masterParent, 'innerBorderLeft');\r\n          positionChanged = !previousState;\r\n        } else {\r\n          removeClass(masterParent, 'innerBorderLeft');\r\n          positionChanged = previousState;\r\n        }\r\n      }\r\n\r\n      return positionChanged;\r\n    }\r\n  }], [{\r\n    key: \"OVERLAY_NAME\",\r\n    get: function get() {\r\n      return CLONE_LEFT;\r\n    }\r\n  }]);\r\n\r\n  return LeftOverlay;\r\n}(Overlay);"]},"metadata":{},"sourceType":"module"}