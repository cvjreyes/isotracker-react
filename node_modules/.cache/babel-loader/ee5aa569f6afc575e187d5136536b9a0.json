{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ssaez1\\\\technip-repositories\\\\isotracker\\\\isotracker-react\\\\src\\\\components\\\\statusDataTable\\\\statusDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\nimport './statusDataTable.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StatusDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      displayData: [],\n      filterData: [\"\", \"\", \"\", \"\", \"\", \"\"],\n      weights: [],\n      role: this.props.role,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      filters: []\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      render: text => text != null ? text.props && text.type !== \"div\" ? /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => this.getMaster(text.props.children),\n        children: text.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this) : this.state.searchedColumn === dataIndex ? text : text : text\n    });\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id.props.children);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      });\n      this.props.onChange(ids);\n    };\n  }\n\n  async componentDidMount() {\n    if (process.env.REACT_APP_PROGRESS === \"1\") {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getMaxProgress\", options).then(response => response.json()).then(json => {\n        this.setState({\n          weights: [json.weights[0].weight, json.weights[1].weight, json.weights[2].weight]\n        });\n      });\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/statusFiles\", options).then(response => response.json()).then(async json => {\n        var rows = [];\n        var row = null;\n\n        for (let i = 0; i < json.rows.length; i++) {\n          var condition = \"\";\n\n          if (json.rows[i].issued === null) {\n            condition = \"ON GOING R\" + json.rows[i].revision + \"*\";\n          } else {\n            condition = \"ISSUED R\" + (json.rows[i].revision - 1);\n          }\n\n          if (json.rows[i].deleted === 1) {\n            condition = \"DELETED\";\n          }\n\n          if (json.rows[i].onhold === 1) {\n            condition = \"ON HOLD\";\n          }\n\n          if (json.rows[i].tpipes_id) {\n            row = {\n              key: i,\n              status: json.rows[i].to,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 62\n              }, this),\n              type: json.rows[i].code,\n              condition: condition,\n              MAXWeight: this.state.weights[json.rows[i].tpipes_id - 1],\n              realProgress: (json.rows[i].realprogress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].realprogress + \")\",\n              progress: (json.rows[i].progress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].progress + \")\"\n            };\n          } else {\n            row = {\n              key: i,\n              status: json.rows[i].to,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 62\n              }, this)\n            };\n          }\n\n          if (row) {\n            if (i % 2 === 0) {\n              row[\"color\"] = \"#fff\";\n            } else {\n              row[\"color\"] = \"#eee\";\n            }\n\n            rows.push(row);\n          }\n        }\n\n        let filterRow = [{\n          key: 0,\n          status: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"filter__input\",\n              placeholder: \"Status\",\n              onChange: e => this.filter(0, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 48\n          }, this),\n          id: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"filter__input\",\n              placeholder: \"ISO ID\",\n              onChange: e => this.filter(1, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 186\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 181\n          }, this),\n          type: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"filter__input\",\n              placeholder: \"Type\",\n              onChange: e => this.filter(2, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 321\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 316\n          }, this),\n          condition: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"filter__input\",\n              placeholder: \"Condition\",\n              onChange: e => this.filter(3, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 458\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 453\n          }, this),\n          MAXWeight: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"filter__input\",\n              placeholder: \"MAX Weight\",\n              onChange: e => this.filter(4, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 600\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 595\n          }, this),\n          progress: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"filter__input\",\n              placeholder: \"Progress\",\n              onChange: e => this.filter(5, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 742\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 737\n          }, this)\n        }];\n        this.setState({\n          data: rows,\n          role: this.props.role,\n          displayData: rows\n        });\n        await this.setState({\n          filters: filterRow\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/statusFiles\", options).then(response => response.json()).then(async json => {\n        var rows = [];\n        var row = null;\n\n        for (let i = 0; i < json.rows.length; i++) {\n          var condition = \"\";\n\n          if (json.rows[i].issued === null) {\n            condition = \"ON GOING R\" + String(json.rows[i].revision) + \"*\";\n          } else {\n            condition = \"ISSUED R\" + String(json.rows[i].revision - 1);\n          }\n\n          if (json.rows[i].deleted === 1) {\n            condition = \"DELETED\";\n          }\n\n          if (json.rows[i].onhold === 1) {\n            condition = \"ON HOLD\";\n          }\n\n          row = {\n            key: i,\n            status: json.rows[i].to,\n            id: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => this.getMaster(json.rows[i].filename),\n              children: json.rows[i].filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 60\n            }, this),\n            condition: condition\n          };\n\n          if (row) {\n            if (i % 2 === 0) {\n              row[\"color\"] = \"#fff\";\n            } else {\n              row[\"color\"] = \"#eee\";\n            }\n\n            rows.push(row);\n          }\n        }\n\n        let filterRow = [{\n          key: 0,\n          status: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"filter__input\",\n              placeholder: \"Status\",\n              onChange: e => this.filter(0, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 48\n          }, this),\n          id: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"filter__input\",\n              placeholder: \"ISO ID\",\n              onChange: e => this.filter(1, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 186\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 181\n          }, this),\n          condition: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"filter__input\",\n              placeholder: \"Condition\",\n              onChange: e => this.filter(2, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 326\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 321\n          }, this)\n        }];\n        this.setState({\n          data: rows,\n          role: this.props.role,\n          displayData: rows\n        });\n        await this.setState({\n          filters: filterRow\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  async filter(column, value) {\n    let fd = this.state.filterData;\n    fd[column] = value;\n    await this.setState({\n      filterData: fd\n    });\n    let auxDisplayData = this.state.data;\n    let resultData = [];\n    let fil,\n        exists = null;\n\n    for (let i = 0; i < auxDisplayData.length; i++) {\n      exists = true;\n\n      for (let column = 0; column < Object.keys(auxDisplayData[i]).length - 2; column++) {\n        fil = Object.keys(auxDisplayData[i])[column + 1];\n\n        if (fil === \"id\") {\n          if (this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].props.children.includes(this.state.filterData[column])) {\n            exists = false;\n          }\n        } else {\n          if (this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])) {\n            exists = false;\n          }\n        }\n      }\n\n      if (exists) {\n        resultData.push(auxDisplayData[i]);\n      }\n    }\n\n    await this.setState({\n      displayData: resultData\n    });\n  }\n\n  getMaster(fileName) {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/pdf\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getMaster/\" + fileName, options).then(res => res.blob()).then(response => {\n      const file = new Blob([response], {\n        type: \"application/pdf\"\n      }); //Build a URL from the file\n\n      const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n      let w = window.open(fileURL);\n      w.addEventListener(\"load\", function () {\n        setTimeout(() => w.document.title = fileName, 300);\n      }); // create <a> tag dinamically\n\n      var fileLink = document.createElement('a');\n      fileLink.href = fileURL; // it forces the name of the downloaded file\n\n      fileLink.download = fileName; // triggers the click event\n\n      fileLink.click();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => ({\n        disabled: record.name === 'Disabled User',\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n    const rowSelectionFilter = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => ({\n        disabled: true,\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n    let columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"ISO ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'id',\n      key: 'id',\n      width: '23%',\n      ...this.getColumnSearchProps('id'),\n      sorter: {\n        compare: (a, b) => a.id.props.children.localeCompare(b.id.props.children)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'status',\n      key: 'status',\n      width: '20%',\n      ...this.getColumnSearchProps('status'),\n      sorter: {\n        compare: (a, b) => {\n          return a.status.localeCompare(b.status);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'type',\n      key: 'type',\n      ...this.getColumnSearchProps('type'),\n      sorter: {\n        compare: (a, b) => {\n          return a.type.localeCompare(b.type);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Condition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'condition',\n      key: 'condition',\n      ...this.getColumnSearchProps('condition'),\n      sorter: {\n        compare: (a, b) => {\n          return a.condition.localeCompare(b.condition);\n        }\n      }\n    }];\n\n    if (process.env.REACT_APP_PROGRESS === \"0\") {\n      columns = [{\n        title: /*#__PURE__*/_jsxDEV(\"center\", {\n          className: \"dataTable__header__text\",\n          children: \"ISO ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 18\n        }, this),\n        dataIndex: 'id',\n        key: 'id',\n        width: '23%',\n        ...this.getColumnSearchProps('id'),\n        sorter: {\n          compare: (a, b) => a.id.props.children.localeCompare(b.id.props.children)\n        }\n      }, {\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable__header__text\",\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 20\n        }, this),\n        dataIndex: 'status',\n        key: 'status',\n        width: '20%',\n        ...this.getColumnSearchProps('status'),\n        sorter: {\n          compare: (a, b) => {\n            return a.status.localeCompare(b.status);\n          }\n        }\n      }, {\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable__header__text\",\n          children: \"Condition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 16\n        }, this),\n        dataIndex: 'condition',\n        key: 'condition',\n        ...this.getColumnSearchProps('condition'),\n        sorter: {\n          compare: (a, b) => {\n            return a.condition.localeCompare(b.condition);\n          }\n        }\n      }];\n    }\n\n    if (process.env.REACT_APP_PROGRESS === \"1\") {\n      columns.push({\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable__header__text\",\n          children: \"MAX Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 16\n        }, this),\n        dataIndex: 'MAXWeight',\n        key: 'MAXWeight',\n        ...this.getColumnSearchProps('MAXWeight'),\n        sorter: {\n          compare: (a, b) => a.MAXWeight - b.MAXWeight\n        }\n      });\n      columns.push({\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable__header__text\",\n          children: \"Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 16\n        }, this),\n        dataIndex: 'progress',\n        key: 'progress',\n        ...this.getColumnSearchProps('progress'),\n        sorter: {\n          compare: (a, b) => a.progress - b.progress\n        }\n      });\n\n      if (this.state.role === \"SpecialityLead\") {\n        columns.push({\n          title: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dataTable__header__text\",\n            children: \"Real Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 18\n          }, this),\n          dataIndex: 'realProgress',\n          key: 'realProgress',\n          ...this.getColumnSearchProps('realProgress'),\n          sorter: {\n            compare: (a, b) => a.realProgress - b.realProgress\n          }\n        });\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          style: {\n            height: '430px'\n          },\n          bordered: true,\n          rowSelection: {\n            type: 'checkbox',\n            ...rowSelection\n          },\n          columns: columns,\n          dataSource: this.state.displayData,\n          scroll: {\n            y: 330\n          },\n          pagination: {\n            disabled: true,\n            defaultPageSize: 5000,\n            hideOnSinglePage: true\n          },\n          size: \"small\",\n          rowClassName: record => record.color.replace('#', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"filter__table\",\n          pagination: {\n            disabled: true\n          },\n          rowSelection: {\n            type: 'checkbox',\n            ...rowSelectionFilter\n          },\n          scroll: {\n            y: 400\n          },\n          showHeader: false,\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.filters,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            bottom: 25,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Total elements: \", this.state.data.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StatusDataTable;","map":{"version":3,"sources":["C:/Users/ssaez1/technip-repositories/isotracker/isotracker-react/src/components/statusDataTable/statusDataTable.js"],"names":["React","Table","Link","StatusDataTable","Component","state","searchText","searchedColumn","data","displayData","filterData","weights","role","props","selectedRows","selectedRowsKeys","filters","getColumnSearchProps","dataIndex","render","text","type","getMaster","children","handleReset","clearFilters","setState","onSelectChange","selectedRowKeys","ids","i","length","push","id","onChange","componentDidMount","process","env","REACT_APP_PROGRESS","options","method","headers","fetch","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","weight","rows","row","condition","issued","revision","deleted","onhold","tpipes_id","key","status","to","filename","code","MAXWeight","realProgress","realprogress","toFixed","progress","filterRow","e","filter","target","value","catch","error","console","log","String","column","fd","auxDisplayData","resultData","fil","exists","Object","keys","includes","fileName","res","blob","file","Blob","fileURL","URL","createObjectURL","w","window","open","addEventListener","setTimeout","document","title","fileLink","createElement","href","download","click","rowSelection","getCheckboxProps","record","disabled","name","rowSelectionFilter","columns","width","sorter","compare","a","b","localeCompare","height","y","defaultPageSize","hideOnSinglePage","color","replace","position","bottom","left"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\nimport './statusDataTable.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass StatusDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    displayData: [],\r\n    filterData: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n    weights: [],\r\n    role: this.props.role,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    filters: []\r\n  };\r\n  \r\n\r\n  async componentDidMount(){\r\n\r\n    if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n      }\r\n      await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getMaxProgress\", options)\r\n      .then(response => response.json())\r\n      .then(json =>{\r\n        this.setState({\r\n          weights: [json.weights[0].weight,json.weights[1].weight,json.weights[2].weight]\r\n        })\r\n      })\r\n\r\n      fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/statusFiles\", options)\r\n          .then(response => response.json())\r\n          .then(async json => {\r\n              var rows = []\r\n              var row = null;\r\n              \r\n              for(let i = 0; i < json.rows.length; i++){\r\n                var condition = \"\"\r\n                if(json.rows[i].issued === null){\r\n                  condition = \"ON GOING R\" + json.rows[i].revision + \"*\"\r\n                }else{\r\n                  condition = \"ISSUED R\" + (json.rows[i].revision - 1)\r\n                }\r\n                if(json.rows[i].deleted === 1){\r\n                  condition = \"DELETED\"\r\n                }\r\n                if(json.rows[i].onhold === 1){\r\n                  condition = \"ON HOLD\"\r\n                }\r\n                if(json.rows[i].tpipes_id){\r\n                  row = {key:i, status: json.rows[i].to, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link>, type: json.rows[i].code, condition: condition, MAXWeight: this.state.weights[json.rows[i].tpipes_id - 1],realProgress: (json.rows[i].realprogress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].realprogress + \")\" , progress: (json.rows[i].progress / this.state.weights[json.rows[i].tpipes_id - 1] * 100).toFixed(2) + \"% (\" + json.rows[i].progress + \")\"}\r\n                }else{\r\n                  row = {key:i, status: json.rows[i].to, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link>}\r\n                }\r\n                        \r\n                if(row){\r\n                  if(i % 2 === 0){\r\n                    row[\"color\"] = \"#fff\"\r\n                  }else{\r\n                    row[\"color\"] = \"#eee\"\r\n                  }\r\n                   \r\n                  rows.push(row)\r\n                }\r\n              }\r\n                          \r\n              let filterRow = [{key:0, status: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Status\" onChange={(e) => this.filter(0, e.target.value)}/></div>, id: <div><input type=\"text\" className=\"filter__input\" placeholder=\"ISO ID\" onChange={(e) => this.filter(1, e.target.value)}/></div>, type: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Type\" onChange={(e) => this.filter(2,e.target.value)}/></div>, condition: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Condition\" onChange={(e) => this.filter(3,e.target.value)}/></div>, MAXWeight: <div><input type=\"text\" className=\"filter__input\" placeholder=\"MAX Weight\" onChange={(e) => this.filter(4,e.target.value)}/></div>, progress: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Progress\" onChange={(e) => this.filter(5,e.target.value)}/></div>}]\r\n             \r\n              this.setState({data : rows, role: this.props.role, displayData: rows});\r\n              await this.setState({filters : filterRow})\r\n              }\r\n          )\r\n          .catch(error => {\r\n              console.log(error);\r\n          })\r\n    }else{\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n\r\n      }\r\n      fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/statusFiles\", options)\r\n          .then(response => response.json())\r\n          .then(async json => {\r\n              var rows = []\r\n              var row = null;\r\n              for(let i = 0; i < json.rows.length; i++){\r\n                var condition = \"\"\r\n                if(json.rows[i].issued === null){\r\n                  condition = \"ON GOING R\" + String(json.rows[i].revision) + \"*\"\r\n                }else{\r\n                  condition = \"ISSUED R\" + String(json.rows[i].revision - 1)\r\n                }\r\n                if(json.rows[i].deleted === 1){\r\n                  condition = \"DELETED\"\r\n                }\r\n                if(json.rows[i].onhold === 1){\r\n                  condition = \"ON HOLD\"\r\n                }\r\n                row = {key:i, status: json.rows[i].to, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link>, condition: condition}                    \r\n                if(row){\r\n                  if(i % 2 === 0){\r\n                    row[\"color\"] = \"#fff\"\r\n                  }else{\r\n                    row[\"color\"] = \"#eee\"\r\n                  }\r\n                   \r\n                  rows.push(row)\r\n                }\r\n              }\r\n\r\n              let filterRow = [{key:0, status: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Status\" onChange={(e) => this.filter(0, e.target.value)}/></div>, id: <div><input type=\"text\" className=\"filter__input\" placeholder=\"ISO ID\" onChange={(e) => this.filter(1, e.target.value)}/></div>, condition: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Condition\" onChange={(e) => this.filter(2,e.target.value)}/></div>}]\r\n             \r\n              this.setState({data : rows, role: this.props.role, displayData: rows});\r\n              await this.setState({filters : filterRow})\r\n                          \r\n              \r\n              }\r\n          \r\n          )\r\n          .catch(error => {\r\n              console.log(error);\r\n          })\r\n    }\r\n    \r\n  }\r\n\r\n  async filter(column, value){\r\n    let fd = this.state.filterData\r\n    fd[column] = value\r\n    await this.setState({filterData: fd})\r\n\r\n    let auxDisplayData = this.state.data\r\n    let resultData = []\r\n    let fil, exists = null\r\n    for(let i = 0; i < auxDisplayData.length; i++){\r\n      exists = true\r\n      for(let column = 0; column < Object.keys(auxDisplayData[i]).length-2; column ++){\r\n        fil = Object.keys(auxDisplayData[i])[column+1]\r\n        if(fil === \"id\"){\r\n          if(this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].props.children.includes(this.state.filterData[column])){\r\n            exists = false\r\n          }\r\n        }else{\r\n          if(this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])){\r\n            exists = false\r\n          }\r\n        }\r\n        \r\n      }\r\n      if(exists){\r\n        resultData.push(auxDisplayData[i])\r\n      }\r\n    }\r\n    await this.setState({displayData: resultData})\r\n  }\r\n\r\n  getMaster(fileName){\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n          \"Content-Type\": \"application/pdf\"\r\n      }\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getMaster/\"+fileName, options)\r\n    .then(res => res.blob())\r\n    .then(response => {\r\n      const file = new Blob([response], {\r\n        type: \"application/pdf\"\r\n      });\r\n      //Build a URL from the file\r\n      const fileURL = URL.createObjectURL(file);\r\n      //Open the URL on new Window\r\n      let w = window.open(fileURL);\r\n\r\n        w.addEventListener(\"load\", function() {\r\n          setTimeout(()=> w.document.title = fileName\r\n          , 300);\r\n\r\n\r\n        });\r\n\r\n        // create <a> tag dinamically\r\n        var fileLink = document.createElement('a');\r\n        fileLink.href = fileURL;\r\n\r\n        // it forces the name of the downloaded file\r\n        fileLink.download = fileName;\r\n\r\n        // triggers the click event\r\n        fileLink.click();\r\n\r\n\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    \r\n    render:  text => \r\n    text != null ? (\r\n    text.props && text.type !== \"div\" ? (\r\n      <Link onClick={() => this.getMaster(text.props.children)}>{text.props.children}</Link>\r\n    ) : this.state.searchedColumn === dataIndex ? (\r\n      text\r\n    ) : (\r\n      text\r\n    )\r\n    ) : (\r\n      text\r\n    )\r\n  });\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    this.props.onChange(ids);\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => ({\r\n        disabled: record.name === 'Disabled User',\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n\r\n    const rowSelectionFilter = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => ({\r\n        disabled: true,\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n\r\n    let columns = [      \r\n      {\r\n        title: <center className=\"dataTable__header__text\">ISO ID</center>,\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: '23%',\r\n        ...this.getColumnSearchProps('id'),\r\n        sorter:{\r\n          compare: (a, b) => a.id.props.children.localeCompare(b.id.props.children),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Status</div>,\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('status'),\r\n        sorter: {\r\n            compare: (a, b) => { return a.status.localeCompare(b.status)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Type</div>,\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n        ...this.getColumnSearchProps('type'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.type.localeCompare(b.type)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Condition</div>,\r\n        dataIndex: 'condition',\r\n        key: 'condition',\r\n        ...this.getColumnSearchProps('condition'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.condition.localeCompare(b.condition)},\r\n        },\r\n      }\r\n    ];\r\n\r\n    if(process.env.REACT_APP_PROGRESS === \"0\"){\r\n      columns = [\r\n        {\r\n          title: <center className=\"dataTable__header__text\">ISO ID</center>,\r\n          dataIndex: 'id',\r\n          key: 'id',\r\n          width: '23%',\r\n          ...this.getColumnSearchProps('id'),\r\n          sorter:{\r\n            compare: (a, b) => a.id.props.children.localeCompare(b.id.props.children),\r\n          },\r\n        },\r\n        {\r\n            title: <div className=\"dataTable__header__text\">Status</div>,\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: '20%',\r\n            ...this.getColumnSearchProps('status'),\r\n            sorter: {\r\n                compare: (a, b) => { return a.status.localeCompare(b.status)},\r\n            },\r\n        },\r\n              \r\n      {\r\n        title: <div className=\"dataTable__header__text\">Condition</div>,\r\n        dataIndex: 'condition',\r\n        key: 'condition',\r\n        ...this.getColumnSearchProps('condition'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.condition.localeCompare(b.condition)},\r\n        },\r\n      }\r\n    ];\r\n    }\r\n\r\n    if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n      columns.push({\r\n        title: <div className=\"dataTable__header__text\">MAX Weight</div>,\r\n        dataIndex: 'MAXWeight',\r\n        key: 'MAXWeight',\r\n        ...this.getColumnSearchProps('MAXWeight'),\r\n        sorter: {\r\n            compare: (a, b) => a.MAXWeight - b.MAXWeight,\r\n        },\r\n      })\r\n      columns.push({\r\n        title: <div className=\"dataTable__header__text\">Progress</div>,\r\n        dataIndex: 'progress',\r\n        key: 'progress',\r\n        ...this.getColumnSearchProps('progress'),\r\n        sorter: {\r\n          compare: (a, b) => a.progress - b.progress,\r\n        },\r\n      })\r\n      if(this.state.role === \"SpecialityLead\"){\r\n        columns.push({\r\n          title: <div className=\"dataTable__header__text\">Real Progress</div>,\r\n          dataIndex: 'realProgress',\r\n          key: 'realProgress',\r\n          ...this.getColumnSearchProps('realProgress'),\r\n          sorter: {\r\n              compare: (a, b) => a.realProgress - b.realProgress,\r\n          },\r\n        })\r\n      }\r\n    } \r\n\r\n    return (\r\n      <div>\r\n        <div className=\"dataTable__container\">\r\n        <Table className='customTable'style={{ height: '430px' }} bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} columns={columns} dataSource={this.state.displayData} scroll={{y:330}} pagination={{disabled:true, defaultPageSize:5000, hideOnSinglePage:true}} size=\"small\" rowClassName= {(record) => record.color.replace('#', '')}/>\r\n        <Table className=\"filter__table\" pagination={{disabled:true}} rowSelection={{type: 'checkbox', ...rowSelectionFilter}} scroll={{y:400}} showHeader = {false} bordered = {true} columns={columns} dataSource={this.state.filters} size=\"small\"/>\r\n          <div style={{position: \"absolute\", bottom:25, left:0}}>\r\n            <b>Total elements: {this.state.data.length}</b>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatusDataTable;"]},"metadata":{},"sourceType":"module"}