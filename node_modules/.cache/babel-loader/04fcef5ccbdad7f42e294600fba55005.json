{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport Trigger from 'rc-trigger';\nimport classNames from 'classnames';\n\nvar getBuiltInPlacements = function getBuiltInPlacements(dropdownMatchSelectWidth) {\n  // Enable horizontal overflow auto-adjustment when a custom dropdown width is provided\n  var adjustX = typeof dropdownMatchSelectWidth !== 'number' ? 0 : 1;\n  return {\n    bottomLeft: {\n      points: ['tl', 'bl'],\n      offset: [0, 4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      }\n    },\n    bottomRight: {\n      points: ['tr', 'br'],\n      offset: [0, 4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      }\n    },\n    topLeft: {\n      points: ['bl', 'tl'],\n      offset: [0, -4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      }\n    },\n    topRight: {\n      points: ['br', 'tr'],\n      offset: [0, -4],\n      overflow: {\n        adjustX: adjustX,\n        adjustY: 1\n      }\n    }\n  };\n};\n\nvar SelectTrigger = function SelectTrigger(props, ref) {\n  var prefixCls = props.prefixCls,\n      disabled = props.disabled,\n      visible = props.visible,\n      children = props.children,\n      popupElement = props.popupElement,\n      containerWidth = props.containerWidth,\n      animation = props.animation,\n      transitionName = props.transitionName,\n      dropdownStyle = props.dropdownStyle,\n      dropdownClassName = props.dropdownClassName,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'ltr' : _props$direction,\n      _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n      dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\n      dropdownRender = props.dropdownRender,\n      dropdownAlign = props.dropdownAlign,\n      getPopupContainer = props.getPopupContainer,\n      empty = props.empty,\n      getTriggerDOMNode = props.getTriggerDOMNode,\n      restProps = _objectWithoutProperties(props, [\"prefixCls\", \"disabled\", \"visible\", \"children\", \"popupElement\", \"containerWidth\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"direction\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"getPopupContainer\", \"empty\", \"getTriggerDOMNode\"]);\n\n  var dropdownPrefixCls = \"\".concat(prefixCls, \"-dropdown\");\n  var popupNode = popupElement;\n\n  if (dropdownRender) {\n    popupNode = dropdownRender(popupElement);\n  }\n\n  var builtInPlacements = React.useMemo(function () {\n    return getBuiltInPlacements(dropdownMatchSelectWidth);\n  }, [dropdownMatchSelectWidth]); // ===================== Motion ======================\n\n  var mergedTransitionName = animation ? \"\".concat(dropdownPrefixCls, \"-\").concat(animation) : transitionName; // ======================= Ref =======================\n\n  var popupRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      getPopupElement: function getPopupElement() {\n        return popupRef.current;\n      }\n    };\n  });\n\n  var popupStyle = _objectSpread({\n    minWidth: containerWidth\n  }, dropdownStyle);\n\n  if (typeof dropdownMatchSelectWidth === 'number') {\n    popupStyle.width = dropdownMatchSelectWidth;\n  } else if (dropdownMatchSelectWidth) {\n    popupStyle.width = containerWidth;\n  }\n\n  return /*#__PURE__*/React.createElement(Trigger, Object.assign({}, restProps, {\n    showAction: [],\n    hideAction: [],\n    popupPlacement: direction === 'rtl' ? 'bottomRight' : 'bottomLeft',\n    builtinPlacements: builtInPlacements,\n    prefixCls: dropdownPrefixCls,\n    popupTransitionName: mergedTransitionName,\n    popup: /*#__PURE__*/React.createElement(\"div\", {\n      ref: popupRef\n    }, popupNode),\n    popupAlign: dropdownAlign,\n    popupVisible: visible,\n    getPopupContainer: getPopupContainer,\n    popupClassName: classNames(dropdownClassName, _defineProperty({}, \"\".concat(dropdownPrefixCls, \"-empty\"), empty)),\n    popupStyle: popupStyle,\n    getTriggerDOMNode: getTriggerDOMNode\n  }), children);\n};\n\nvar RefSelectTrigger = /*#__PURE__*/React.forwardRef(SelectTrigger);\nRefSelectTrigger.displayName = 'SelectTrigger';\nexport default RefSelectTrigger;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/rc-select/es/SelectTrigger.js"],"names":["_defineProperty","_objectSpread","_objectWithoutProperties","React","Trigger","classNames","getBuiltInPlacements","dropdownMatchSelectWidth","adjustX","bottomLeft","points","offset","overflow","adjustY","bottomRight","topLeft","topRight","SelectTrigger","props","ref","prefixCls","disabled","visible","children","popupElement","containerWidth","animation","transitionName","dropdownStyle","dropdownClassName","_props$direction","direction","_props$dropdownMatchS","dropdownRender","dropdownAlign","getPopupContainer","empty","getTriggerDOMNode","restProps","dropdownPrefixCls","concat","popupNode","builtInPlacements","useMemo","mergedTransitionName","popupRef","useRef","useImperativeHandle","getPopupElement","current","popupStyle","minWidth","width","createElement","Object","assign","showAction","hideAction","popupPlacement","builtinPlacements","popupTransitionName","popup","popupAlign","popupVisible","popupClassName","RefSelectTrigger","forwardRef","displayName"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport Trigger from 'rc-trigger';\r\nimport classNames from 'classnames';\r\n\r\nvar getBuiltInPlacements = function getBuiltInPlacements(dropdownMatchSelectWidth) {\r\n  // Enable horizontal overflow auto-adjustment when a custom dropdown width is provided\r\n  var adjustX = typeof dropdownMatchSelectWidth !== 'number' ? 0 : 1;\r\n  return {\r\n    bottomLeft: {\r\n      points: ['tl', 'bl'],\r\n      offset: [0, 4],\r\n      overflow: {\r\n        adjustX: adjustX,\r\n        adjustY: 1\r\n      }\r\n    },\r\n    bottomRight: {\r\n      points: ['tr', 'br'],\r\n      offset: [0, 4],\r\n      overflow: {\r\n        adjustX: adjustX,\r\n        adjustY: 1\r\n      }\r\n    },\r\n    topLeft: {\r\n      points: ['bl', 'tl'],\r\n      offset: [0, -4],\r\n      overflow: {\r\n        adjustX: adjustX,\r\n        adjustY: 1\r\n      }\r\n    },\r\n    topRight: {\r\n      points: ['br', 'tr'],\r\n      offset: [0, -4],\r\n      overflow: {\r\n        adjustX: adjustX,\r\n        adjustY: 1\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nvar SelectTrigger = function SelectTrigger(props, ref) {\r\n  var prefixCls = props.prefixCls,\r\n      disabled = props.disabled,\r\n      visible = props.visible,\r\n      children = props.children,\r\n      popupElement = props.popupElement,\r\n      containerWidth = props.containerWidth,\r\n      animation = props.animation,\r\n      transitionName = props.transitionName,\r\n      dropdownStyle = props.dropdownStyle,\r\n      dropdownClassName = props.dropdownClassName,\r\n      _props$direction = props.direction,\r\n      direction = _props$direction === void 0 ? 'ltr' : _props$direction,\r\n      _props$dropdownMatchS = props.dropdownMatchSelectWidth,\r\n      dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\r\n      dropdownRender = props.dropdownRender,\r\n      dropdownAlign = props.dropdownAlign,\r\n      getPopupContainer = props.getPopupContainer,\r\n      empty = props.empty,\r\n      getTriggerDOMNode = props.getTriggerDOMNode,\r\n      restProps = _objectWithoutProperties(props, [\"prefixCls\", \"disabled\", \"visible\", \"children\", \"popupElement\", \"containerWidth\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"direction\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"getPopupContainer\", \"empty\", \"getTriggerDOMNode\"]);\r\n\r\n  var dropdownPrefixCls = \"\".concat(prefixCls, \"-dropdown\");\r\n  var popupNode = popupElement;\r\n\r\n  if (dropdownRender) {\r\n    popupNode = dropdownRender(popupElement);\r\n  }\r\n\r\n  var builtInPlacements = React.useMemo(function () {\r\n    return getBuiltInPlacements(dropdownMatchSelectWidth);\r\n  }, [dropdownMatchSelectWidth]); // ===================== Motion ======================\r\n\r\n  var mergedTransitionName = animation ? \"\".concat(dropdownPrefixCls, \"-\").concat(animation) : transitionName; // ======================= Ref =======================\r\n\r\n  var popupRef = React.useRef(null);\r\n  React.useImperativeHandle(ref, function () {\r\n    return {\r\n      getPopupElement: function getPopupElement() {\r\n        return popupRef.current;\r\n      }\r\n    };\r\n  });\r\n\r\n  var popupStyle = _objectSpread({\r\n    minWidth: containerWidth\r\n  }, dropdownStyle);\r\n\r\n  if (typeof dropdownMatchSelectWidth === 'number') {\r\n    popupStyle.width = dropdownMatchSelectWidth;\r\n  } else if (dropdownMatchSelectWidth) {\r\n    popupStyle.width = containerWidth;\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(Trigger, Object.assign({}, restProps, {\r\n    showAction: [],\r\n    hideAction: [],\r\n    popupPlacement: direction === 'rtl' ? 'bottomRight' : 'bottomLeft',\r\n    builtinPlacements: builtInPlacements,\r\n    prefixCls: dropdownPrefixCls,\r\n    popupTransitionName: mergedTransitionName,\r\n    popup: /*#__PURE__*/React.createElement(\"div\", {\r\n      ref: popupRef\r\n    }, popupNode),\r\n    popupAlign: dropdownAlign,\r\n    popupVisible: visible,\r\n    getPopupContainer: getPopupContainer,\r\n    popupClassName: classNames(dropdownClassName, _defineProperty({}, \"\".concat(dropdownPrefixCls, \"-empty\"), empty)),\r\n    popupStyle: popupStyle,\r\n    getTriggerDOMNode: getTriggerDOMNode\r\n  }), children);\r\n};\r\n\r\nvar RefSelectTrigger = /*#__PURE__*/React.forwardRef(SelectTrigger);\r\nRefSelectTrigger.displayName = 'SelectTrigger';\r\nexport default RefSelectTrigger;"]},"metadata":{},"sourceType":"module"}