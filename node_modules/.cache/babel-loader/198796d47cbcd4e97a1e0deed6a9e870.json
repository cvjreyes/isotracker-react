{"ast":null,"code":"import _objectSpread from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'antd/dist/antd.css';import{Table,Input,Button,Space}from'antd';import{SearchOutlined}from'@ant-design/icons';import*as FileSaver from\"file-saver\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NavisTable=/*#__PURE__*/function(_React$Component){_inherits(NavisTable,_React$Component);var _super=_createSuper(NavisTable);function NavisTable(){var _this;_classCallCheck(this,NavisTable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={searchText:'',searchedColumn:'',data:[],selectedRows:[],selectedRowsKeys:[],updateData:_this.props.updateData};_this.getColumnSearchProps=function(dataIndex){return{filterDropdown:function filterDropdown(_ref){var setSelectedKeys=_ref.setSelectedKeys,selectedKeys=_ref.selectedKeys,confirm=_ref.confirm,clearFilters=_ref.clearFilters;return/*#__PURE__*/_jsxs(\"div\",{style:{padding:8},children:[/*#__PURE__*/_jsx(Input,{ref:function ref(node){_this.searchInput=node;},placeholder:\"Search \".concat(dataIndex),value:selectedKeys[0],onChange:function onChange(e){return setSelectedKeys(e.target.value?[e.target.value]:[]);},onPressEnter:function onPressEnter(){return _this.handleSearch(selectedKeys,confirm,dataIndex);},style:{width:188,marginBottom:8,display:'block'}}),/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:function onClick(){return _this.handleSearch(selectedKeys,confirm,dataIndex);},icon:/*#__PURE__*/_jsx(SearchOutlined,{}),size:\"small\",style:{width:90},children:\"Search\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return _this.handleReset(clearFilters);},size:\"small\",style:{width:90},children:\"Reset\"}),/*#__PURE__*/_jsx(Button,{type:\"link\",size:\"small\",onClick:function onClick(){confirm({closeDropdown:false});_this.setState({searchText:selectedKeys[0],searchedColumn:dataIndex});},children:\"Filter\"})]})]});},filterIcon:function filterIcon(filtered){return/*#__PURE__*/_jsx(SearchOutlined,{style:{color:filtered?'#1890ff':undefined}});},onFilter:function onFilter(value,record){return record[dataIndex].toString().toLowerCase().includes(value.toLowerCase());},onFilterDropdownVisibleChange:function onFilterDropdownVisibleChange(visible){if(visible){setTimeout(function(){return _this.searchInput.select();},100);}},render:function render(text){return text;}};};_this.handleSearch=function(selectedKeys,confirm,dataIndex){confirm();_this.setState({searchText:selectedKeys[0],searchedColumn:dataIndex});};_this.handleReset=function(clearFilters){clearFilters();_this.setState({searchText:''});};_this.onSelectChange=function(selectedRowKeys,selectedRows){_this.setState({selectedRowsKeys:selectedRowKeys,selectedRows:selectedRows});//this.setState({ selectedRows: selectedRows });\n//this.props.onChange(ids);\n};return _this;}_createClass(NavisTable,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;var options;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:options={method:\"GET\",headers:{\"Content-Type\":\"application/json\"}};fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/navis\",options).then(function(response){return response.json();}).then(function(json){var rows=[];for(var i=0;i<json.rows.length;i++){if(i%2===0){rows.push({key:i,object:json.rows[i].object,attribute:json.rows[i].value,color:\"#fff\"});}else{rows.push({key:i,object:json.rows[i].object,attribute:json.rows[i].value,color:\"#eee\"});}}_this2.setState({data:rows});});case 2:case\"end\":return _context.stop();}}},_callee);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"generateXML\",value:function generateXML(){var xml='<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\\n    <exchange xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"http://download.autodesk.com/us/navisworks/schemas/nw-exchange-12.0.xsd\">\\n      <optionset name=\"\">\\n           <optionset name=\"interface\">\\n              <optionset name=\"smart_tags\">\\n                     <option name=\"enabled\">\\n                           <data type=\"bool\">true</data>\\n                     </option>\\n                     <option name=\"hide_category\" flags=\"32\">\\n                           <data type=\"bool\">false</data>\\n                     </option>\\n                     <optionarray name=\"definitions\">\\n';for(var i=0;i<this.state.selectedRows.length;i++){var option=this.state.selectedRows[i].attribute.toLowerCase();xml+='                                 <optionset name=\"\">\\n                                       <option name=\"category\">\\n                                          <data type=\"name\">\\n                                              <name internal=\"lcldrvm_props\">PDMS</name>\\n                                          </data>\\n                                       </option>\\n                                       <option name=\"property\">\\n                                          <data type=\"name\">\\n                                              <name internal=\"lcldrvm_prop_'+option+'\">'+option.toUpperCase()+'</name>\\n                                          </data>\\n                                       </option>\\n                                </optionset>\\n';}xml+='                  </optionarray>\\n               </optionset>\\n         </optionset>\\n      </optionset>\\n  </exchange>';var data=new Blob([xml],{type:'txt'});FileSaver.saveAs(data,\"navis.xml\");}},{key:\"render\",value:function render(){var _this3=this;var rowSelection={onChange:function onChange(selectedRowKeys,selectedRows){_this3.onSelectChange(selectedRowKeys,selectedRows);},getCheckboxProps:function getCheckboxProps(record){return{// Column configuration not to be checked\nname:record.name};}};var columns=[_objectSpread(_objectSpread({title:/*#__PURE__*/_jsx(\"center\",{className:\"dataTable__header__text\",children:\"Object 3D\"}),dataIndex:'object',key:'object',width:'15%'},this.getColumnSearchProps('object')),{},{sorter:{compare:function compare(a,b){return a.object.localeCompare(b.object);}},align:\"center\"}),_objectSpread(_objectSpread({title:/*#__PURE__*/_jsx(\"center\",{className:\"dataTable__header__text\",children:\"Attribute\"}),dataIndex:'attribute',key:'attribute'},this.getColumnSearchProps('attribute')),{},{sorter:{compare:function compare(a,b){return a.attribute.localeCompare(b.attribute);}}})];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-warning\",style:{width:\"78%\",fontSize:\"24px\",top:\"0\",left:\"11%\",zIndex:\"999\",backgroundColor:\"#CBB956\",position:\"fixed\",color:\"white\",paddingTop:\"13px\",paddingBottom:\"13px\"},onClick:function onClick(){return _this3.generateXML();},children:\"Generate XML\"}),/*#__PURE__*/_jsx(\"div\",{className:\"estimatedDataTable__container\",style:{marginTop:\"5px\"},children:/*#__PURE__*/_jsx(Table,{className:\"customTable\",bordered:true,columns:columns,rowSelection:_objectSpread({type:'checkbox'},rowSelection),dataSource:this.state.data,pagination:{pageSize:this.state.data.length},size:\"small\",rowClassName:function rowClassName(record){return record.color.replace('#','');}})})]});}}]);return NavisTable;}(React.Component);export default NavisTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/navisTable/navisTable.js"],"names":["React","Table","Input","Button","Space","SearchOutlined","FileSaver","NavisTable","state","searchText","searchedColumn","data","selectedRows","selectedRowsKeys","updateData","props","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","onSelectChange","selectedRowKeys","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","i","length","push","key","object","attribute","xml","option","toUpperCase","Blob","type","saveAs","rowSelection","onChange","getCheckboxProps","name","columns","title","sorter","compare","a","b","localeCompare","align","fontSize","top","left","zIndex","backgroundColor","position","paddingTop","paddingBottom","generateXML","marginTop","pageSize","replace","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport * as FileSaver from \"file-saver\";\r\n\r\n\r\nclass NavisTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/navis\", options)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n        let rows = []\r\n        for(let i = 0; i < json.rows.length; i++){\r\n            if(i % 2 === 0){\r\n                rows.push({key:i, object: json.rows[i].object, attribute: json.rows[i].value, color:\"#fff\"})\r\n              }else{\r\n                rows.push({key:i, object: json.rows[i].object, attribute: json.rows[i].value, color:\"#eee\"})              }\r\n            \r\n        }\r\n        this.setState({data : rows});\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n\r\n\r\n      \r\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n          \r\n\r\n\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    //this.props.onChange(ids);\r\n    \r\n  };\r\n\r\n  generateXML(){\r\n    let xml = '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\\n    <exchange xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"http://download.autodesk.com/us/navisworks/schemas/nw-exchange-12.0.xsd\">\\n      <optionset name=\"\">\\n           <optionset name=\"interface\">\\n              <optionset name=\"smart_tags\">\\n                     <option name=\"enabled\">\\n                           <data type=\"bool\">true</data>\\n                     </option>\\n                     <option name=\"hide_category\" flags=\"32\">\\n                           <data type=\"bool\">false</data>\\n                     </option>\\n                     <optionarray name=\"definitions\">\\n'\r\n    \r\n    for(let i = 0; i < this.state.selectedRows.length; i++){\r\n        let option = this.state.selectedRows[i].attribute.toLowerCase()\r\n        xml+= '                                 <optionset name=\"\">\\n                                       <option name=\"category\">\\n                                          <data type=\"name\">\\n                                              <name internal=\"lcldrvm_props\">PDMS</name>\\n                                          </data>\\n                                       </option>\\n                                       <option name=\"property\">\\n                                          <data type=\"name\">\\n                                              <name internal=\"lcldrvm_prop_'+option+'\">'+option.toUpperCase()+'</name>\\n                                          </data>\\n                                       </option>\\n                                </optionset>\\n'\r\n    }\r\n    xml+='                  </optionarray>\\n               </optionset>\\n         </optionset>\\n      </optionset>\\n  </exchange>'\r\n    const data = new Blob([xml], { type: 'txt' });\r\n    FileSaver.saveAs(data, \"navis.xml\");\r\n}\r\n  \r\n\r\n  render() {\r\n    \r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => (      \r\n        {\r\n        \r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n\r\n\r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Object 3D</center>,\r\n        dataIndex: 'object',\r\n        key: 'object',\r\n        width: '15%',\r\n        ...this.getColumnSearchProps('object'),\r\n        sorter:{\r\n          compare: (a, b) => a.object.localeCompare(b.object),\r\n        },\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Attribute</center>,\r\n        dataIndex: 'attribute',\r\n        key: 'attribute',\r\n        ...this.getColumnSearchProps('attribute'),\r\n        sorter:{\r\n          compare: (a, b) => a.attribute.localeCompare(b.attribute),\r\n        },\r\n      },\r\n      \r\n    ];\r\n    \r\n\r\n    return (\r\n      <div>\r\n\r\n          <button className=\"btn btn-warning\" style={{width:\"78%\", fontSize:\"24px\", top:\"0\",left:\"11%\",zIndex:\"999\", backgroundColor:\"#CBB956\", position:\"fixed\", color:\"white\", paddingTop:\"13px\", paddingBottom:\"13px\"}} onClick={()=> this.generateXML()}>Generate XML</button>\r\n\r\n        <div className=\"estimatedDataTable__container\" style={{marginTop:\"5px\"}}>\r\n        <Table className=\"customTable\" bordered = {true} columns={columns} rowSelection={{type: 'checkbox', ...rowSelection}} dataSource={this.state.data} pagination={{ pageSize: this.state.data.length  }} size=\"small\"\r\n         rowClassName= {(record) => record.color.replace('#', '')}/>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavisTable;"]},"metadata":{},"sourceType":"module"}