{"ast":null,"code":"import { themes } from '../constants/themes';\nimport { isDebugMode, defaultOptions } from '../constants/options';\n\nfunction CanvasJSObject(defaultsKey, options, theme, parent) {\n  this._defaultsKey = defaultsKey;\n  this.parent = parent;\n  this._eventListeners = []; //Multidimentional array with an array for each event type\n\n  var currentThemeOptions = {};\n  if (theme && themes[theme] && themes[theme][defaultsKey]) currentThemeOptions = themes[theme][defaultsKey];\n  this._options = options ? options : {};\n  this.setOptions(this._options, currentThemeOptions);\n}\n\nCanvasJSObject.prototype.setOptions = function (options, currentThemeOptions) {\n  if (!defaultOptions[this._defaultsKey]) {\n    if (isDebugMode && window.console) console.log(\"defaults not set\");\n  } else {\n    var defaults = defaultOptions[this._defaultsKey];\n\n    for (var prop in defaults) {\n      if (defaults.hasOwnProperty(prop)) {\n        if (options && prop in options) this[prop] = options[prop];else if (currentThemeOptions && prop in currentThemeOptions) this[prop] = currentThemeOptions[prop];else this[prop] = defaults[prop]; //if (typeof this[prop] === \"function\") {\n        //    alert(\"function\");\n        //    this[prop] = this[prop]();\n        //}\n      }\n    }\n  }\n}; // Update options. Returns true if changed or else false\n\n\nCanvasJSObject.prototype.updateOption = function (prop) {\n  if (!defaultOptions[this._defaultsKey] && isDebugMode && window.console) console.log(\"defaults not set\");\n  var defaults = defaultOptions[this._defaultsKey];\n  var theme = this._options.theme ? this._options.theme : this.chart && this.chart._options.theme ? this.chart._options.theme : \"theme1\";\n  var currentThemeOptions = {};\n  var newValue = this[prop];\n  if (theme && themes[theme] && themes[theme][this._defaultsKey]) currentThemeOptions = themes[theme][this._defaultsKey];\n\n  if (prop in defaults) {\n    if (prop in this._options) newValue = this._options[prop];else if (currentThemeOptions && prop in currentThemeOptions) newValue = currentThemeOptions[prop];else newValue = defaults[prop];\n  }\n\n  if (newValue === this[prop]) return false;\n  this[prop] = newValue;\n  return true;\n}; //Stores values in _oldOptions so that it can be tracked for any changes\n\n\nCanvasJSObject.prototype.trackChanges = function (option) {\n  if (!this.sessionVariables) throw \"Session Variable Store not set\";\n  this.sessionVariables[option] = this._options[option];\n};\n\nCanvasJSObject.prototype.isBeingTracked = function (option) {\n  if (!this._options._oldOptions) this._options._oldOptions = {};\n  if (this._options._oldOptions[option]) return true;else return false;\n};\n\nCanvasJSObject.prototype.hasOptionChanged = function (option) {\n  if (!this.sessionVariables) throw \"Session Variable Store not set\";\n  var hasChanged = !(this.sessionVariables[option] === this._options[option]);\n  return hasChanged;\n};\n\nCanvasJSObject.prototype.addEventListener = function (eventName, eventHandler, context) {\n  if (!eventName || !eventHandler) return;\n  context = context || this;\n  this._eventListeners[eventName] = this._eventListeners[eventName] || [];\n\n  this._eventListeners[eventName].push({\n    context: context,\n    eventHandler: eventHandler\n  });\n};\n\nCanvasJSObject.prototype.removeEventListener = function (eventName, eventHandler) {\n  if (!eventName || !eventHandler || !this._eventListeners[eventName]) return;\n  var listeners = this._eventListeners[eventName];\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].eventHandler === eventHandler) {\n      listeners[i].splice(i, 1);\n      break;\n    }\n  }\n};\n\nCanvasJSObject.prototype.removeAllEventListeners = function () {\n  this._eventListeners = [];\n};\n\nCanvasJSObject.prototype.dispatchEvent = function (eventName, eventParameter, context) {\n  //For Internal Events\n  if (eventName && this._eventListeners[eventName]) {\n    eventParameter = eventParameter || {};\n    var listeners = this._eventListeners[eventName];\n\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].eventHandler.call(listeners[i].context, eventParameter);\n    }\n  } //External Events do not require registering as the property name is suffient to fire the event.\n\n\n  if (typeof this[eventName] === \"function\") {\n    this[eventName].call(context || this.chart._publicChartReference, eventParameter);\n  }\n};\n\nexport default CanvasJSObject;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/canvasjs/src/core/canvasjs.js"],"names":["themes","isDebugMode","defaultOptions","CanvasJSObject","defaultsKey","options","theme","parent","_defaultsKey","_eventListeners","currentThemeOptions","_options","setOptions","prototype","window","console","log","defaults","prop","hasOwnProperty","updateOption","chart","newValue","trackChanges","option","sessionVariables","isBeingTracked","_oldOptions","hasOptionChanged","hasChanged","addEventListener","eventName","eventHandler","context","push","removeEventListener","listeners","i","length","splice","removeAllEventListeners","dispatchEvent","eventParameter","call","_publicChartReference"],"mappings":"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","sourcesContent":["import {themes} from '../constants/themes';\r\nimport {isDebugMode, defaultOptions} from '../constants/options';\r\n\r\nfunction CanvasJSObject(defaultsKey, options, theme, parent) {\r\n  this._defaultsKey = defaultsKey;\r\n\r\n  this.parent = parent;\r\n\r\n  this._eventListeners = [];//Multidimentional array with an array for each event type\r\n\r\n  var currentThemeOptions = {};\r\n\r\n  if (theme && themes[theme] && themes[theme][defaultsKey])\r\n    currentThemeOptions = themes[theme][defaultsKey];\r\n\r\n  this._options = options ? options : {};\r\n  this.setOptions(this._options, currentThemeOptions);\r\n}\r\n\r\nCanvasJSObject.prototype.setOptions = function (options, currentThemeOptions) {\r\n\r\n  if (!defaultOptions[this._defaultsKey]) {\r\n    if (isDebugMode && window.console)\r\n      console.log(\"defaults not set\");\r\n  }\r\n  else {\r\n    var defaults = defaultOptions[this._defaultsKey];\r\n\r\n    for (var prop in defaults) {\r\n\r\n      if (defaults.hasOwnProperty(prop)) {\r\n      if (options && prop in options)\r\n        this[prop] = options[prop];\r\n      else if (currentThemeOptions && prop in currentThemeOptions)\r\n        this[prop] = currentThemeOptions[prop];\r\n      else this[prop] = defaults[prop];\r\n\r\n      //if (typeof this[prop] === \"function\") {\r\n      //    alert(\"function\");\r\n      //    this[prop] = this[prop]();\r\n      //}\r\n    }\r\n\r\n  }\r\n  }\r\n};\r\n\r\n// Update options. Returns true if changed or else false\r\nCanvasJSObject.prototype.updateOption = function (prop) {\r\n\r\n  if (!defaultOptions[this._defaultsKey] && isDebugMode && window.console)\r\n    console.log(\"defaults not set\");\r\n\r\n  var defaults = defaultOptions[this._defaultsKey];\r\n  var theme = this._options.theme ? this._options.theme : (this.chart && this.chart._options.theme) ? this.chart._options.theme : \"theme1\";\r\n\r\n  var currentThemeOptions = {};\r\n  var newValue = this[prop];\r\n\r\n  if (theme && themes[theme] && themes[theme][this._defaultsKey])\r\n    currentThemeOptions = themes[theme][this._defaultsKey];\r\n\r\n  if (prop in defaults) {\r\n    if (prop in this._options)\r\n      newValue = this._options[prop];\r\n    else if (currentThemeOptions && prop in currentThemeOptions)\r\n      newValue = currentThemeOptions[prop];\r\n    else newValue = defaults[prop];\r\n  }\r\n\r\n  if (newValue === this[prop])\r\n    return false;\r\n\r\n  this[prop] = newValue;\r\n  return true;\r\n}\r\n\r\n//Stores values in _oldOptions so that it can be tracked for any changes\r\nCanvasJSObject.prototype.trackChanges = function (option) {\r\n  if (!this.sessionVariables)\r\n    throw \"Session Variable Store not set\";\r\n\r\n  this.sessionVariables[option] = this._options[option];\r\n};\r\n\r\nCanvasJSObject.prototype.isBeingTracked = function (option) {\r\n  if (!this._options._oldOptions)\r\n    this._options._oldOptions = {};\r\n\r\n  if (this._options._oldOptions[option])\r\n    return true;\r\n  else\r\n    return false;\r\n};\r\n\r\nCanvasJSObject.prototype.hasOptionChanged = function (option) {\r\n  if (!this.sessionVariables)\r\n    throw \"Session Variable Store not set\";\r\n\r\n  var hasChanged = !(this.sessionVariables[option] === this._options[option]);\r\n\r\n  return hasChanged;\r\n};\r\n\r\nCanvasJSObject.prototype.addEventListener = function (eventName, eventHandler, context) {\r\n  if (!eventName || !eventHandler)\r\n    return;\r\n\r\n  context = context || this;\r\n\r\n  this._eventListeners[eventName] = this._eventListeners[eventName] || [];\r\n\r\n  this._eventListeners[eventName].push({ context: context, eventHandler: eventHandler });\r\n}\r\n\r\nCanvasJSObject.prototype.removeEventListener = function (eventName, eventHandler) {\r\n  if (!eventName || !eventHandler || !this._eventListeners[eventName])\r\n    return;\r\n\r\n  var listeners = this._eventListeners[eventName];\r\n  for (var i = 0; i < listeners.length; i++) {\r\n\r\n    if (listeners[i].eventHandler === eventHandler) {\r\n      listeners[i].splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nCanvasJSObject.prototype.removeAllEventListeners = function () {\r\n  this._eventListeners = [];\r\n}\r\n\r\nCanvasJSObject.prototype.dispatchEvent = function (eventName, eventParameter, context) {\r\n\r\n  //For Internal Events\r\n  if (eventName && this._eventListeners[eventName]) {\r\n\r\n  eventParameter = eventParameter || {};\r\n\r\n  var listeners = this._eventListeners[eventName];\r\n  for (var i = 0; i < listeners.length; i++) {\r\n\r\n    listeners[i].eventHandler.call(listeners[i].context, eventParameter);\r\n  }\r\n}\r\n\r\n  //External Events do not require registering as the property name is suffient to fire the event.\r\n  if (typeof (this[eventName]) === \"function\") {\r\n    this[eventName].call(context || this.chart._publicChartReference, eventParameter);\r\n  }\r\n}\r\n\r\nexport default CanvasJSObject;\r\n"]},"metadata":{},"sourceType":"module"}