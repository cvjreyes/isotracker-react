{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\pipingBinTable\\\\pipingBinTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PipingBinTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      displayData: [],\n      filterData: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      tab: this.props.currentTab,\n      role: this.props.currentRole,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      filters: []\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      render: text => text\n    });\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }); //this.setState({ selectedRows: selectedRows });\n\n      this.props.onChange(ids);\n    };\n  }\n\n  async componentDidMount() {\n    let options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getDeletedPipes\", options).then(response => response.json()).then(async json => {\n      let rows = [];\n\n      for (let i = 0; i < json.rows.length; i++) {\n        let row = {\n          key: json.rows[i].id,\n          id: json.rows[i].id,\n          tag: json.rows[i].tag,\n          type: json.rows[i].code,\n          date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n          user: json.rows[i].name\n        };\n\n        if (row) {\n          if (i % 2 === 0) {\n            row[\"color\"] = \"#fff\";\n          } else {\n            row[\"color\"] = \"#eee\";\n          }\n        }\n\n        rows.push(row);\n      }\n\n      const filterRow = [{\n        tag: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"TAG\",\n            onChange: e => this.filter(1, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 38\n        }, this),\n        type: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Type\",\n            onChange: e => this.filter(2, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 175\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 170\n        }, this),\n        date: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Date\",\n            onChange: e => this.filter(3, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 308\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 303\n        }, this),\n        user: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"User\",\n            onChange: e => this.filter(4, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 440\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 435\n        }, this)\n      }];\n      this.setState({\n        data: rows,\n        displayData: rows\n      });\n      await this.setState({\n        filters: filterRow\n      });\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      let options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getDeletedPipes\", options).then(response => response.json()).then(async json => {\n        let rows = [];\n\n        for (let i = 0; i < json.rows.length; i++) {\n          let row = {\n            key: json.rows[i].id,\n            id: json.rows[i].id,\n            tag: json.rows[i].tag,\n            type: json.rows[i].code,\n            date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n            user: json.rows[i].name\n          };\n\n          if (row) {\n            if (i % 2 === 0) {\n              row[\"color\"] = \"#fff\";\n            } else {\n              row[\"color\"] = \"#eee\";\n            }\n          }\n\n          rows.push(row);\n        }\n\n        await this.setState({\n          data: rows,\n          displayData: rows\n        });\n      });\n    }\n  }\n\n  async filter(column, value) {\n    let fd = this.state.filterData;\n    fd[column] = value;\n    await this.setState({\n      filterData: fd\n    });\n    let auxDisplayData = this.state.data;\n    let resultData = [];\n    let fil,\n        exists = null;\n\n    for (let i = 0; i < auxDisplayData.length; i++) {\n      exists = true;\n\n      for (let column = 0; column < Object.keys(auxDisplayData[i]).length - 1; column++) {\n        fil = Object.keys(auxDisplayData[i])[column + 1];\n\n        if (auxDisplayData[i][fil]) {\n          if (this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])) {\n            exists = false;\n          }\n        } else {\n          exists = false;\n        }\n      }\n\n      if (exists) {\n        resultData.push(auxDisplayData[i]);\n      }\n    }\n\n    await this.setState({\n      displayData: resultData\n    });\n  }\n\n  render() {\n    const selectedRows = this.state.selectedRows;\n    const selectedRowsKeys = this.state.selectedRowsKeys;\n    const rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => record.actions ? {\n        disabled: true,\n        // Column configuration not to be checked\n        name: record.name\n      } : {\n        name: record.name\n      }\n    };\n    const rowSelectionFilter = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => ({\n        disabled: true,\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n\n    if (localStorage.getItem(\"update\") === \"true\") {\n      this.setState({\n        selectedRows: [],\n        selectedRowsKeys: []\n      });\n      rowSelection.selectedRowKeys = [];\n      rowSelection.selectedRows = [];\n      localStorage.setItem(\"update\", false);\n    } else {\n      rowSelection.selectedRowKeys = selectedRowsKeys;\n      rowSelection.selectedRows = selectedRows;\n    }\n\n    let columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"TAG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'tag',\n      key: 'tag',\n      ...this.getColumnSearchProps('tag'),\n      sorter: {\n        compare: (a, b) => a.tag.props.children.localeCompare(b.tag.props.children)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'type',\n      key: 'type',\n      ...this.getColumnSearchProps('type'),\n      width: \"100px\",\n      sorter: {\n        compare: (a, b) => {\n          return a.type.localeCompare(b.type);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'date',\n      key: 'date',\n      ...this.getColumnSearchProps('date'),\n      sorter: {\n        compare: (a, b) => a.date.replace(/\\D/g, '') - b.date.replace(/\\D/g, '')\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'user',\n      key: 'user',\n      ...this.getColumnSearchProps('user'),\n      sorter: {\n        compare: (a, b) => {\n          return a.user.localeCompare(b.user);\n        }\n      }\n    }];\n    var totalElements = null;\n\n    if (this.state.data.length === 0) {\n      totalElements = null;\n    } else {\n      totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          rowSelection: {\n            type: 'checkbox',\n            ...rowSelection\n          },\n          style: {\n            height: '540px'\n          },\n          columns: columns,\n          dataSource: this.state.displayData,\n          scroll: {\n            y: 437\n          },\n          pagination: {\n            disabled: true,\n            defaultPageSize: 5000\n          },\n          size: \"small\",\n          rowClassName: record => record.color.replace('#', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"filter__table\",\n          pagination: {\n            disabled: true\n          },\n          rowSelection: {\n            type: 'checkbox',\n            ...rowSelectionFilter\n          },\n          scroll: {\n            y: 437\n          },\n          showHeader: false,\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.filters,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PipingBinTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/pipingBinTable/pipingBinTable.js"],"names":["React","Table","PipingBinTable","Component","state","searchText","searchedColumn","data","displayData","filterData","tab","props","currentTab","role","currentRole","selectedRows","selectedRowsKeys","updateData","username","acronyms","filters","getColumnSearchProps","dataIndex","render","text","handleReset","clearFilters","setState","onSelectChange","selectedRowKeys","ids","i","length","push","id","onChange","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","row","key","tag","type","code","date","updated_at","toString","substring","user","name","filterRow","e","filter","target","value","componentDidUpdate","prevProps","prevState","column","fd","auxDisplayData","resultData","fil","exists","Object","keys","includes","rowSelection","getCheckboxProps","record","actions","disabled","rowSelectionFilter","localStorage","getItem","setItem","columns","title","sorter","compare","a","b","children","localeCompare","width","replace","totalElements","position","bottom","left","height","y","defaultPageSize","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\n\r\nclass PipingBinTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    displayData: [],\r\n    filterData: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    tab: this.props.currentTab,\r\n    role: this.props.currentRole,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    filters: []\r\n  }; \r\n\r\n  async componentDidMount(){\r\n    let options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getDeletedPipes\", options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            let rows = []\r\n            for(let i = 0; i < json.rows.length; i++){\r\n              let row = {key: json.rows[i].id, id: json.rows[i].id, tag: json.rows[i].tag, type: json.rows[i].code, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), user: json.rows[i].name}\r\n              if(row){\r\n                  if(i % 2 === 0){\r\n                      row[\"color\"] = \"#fff\"\r\n                  }else{\r\n                      row[\"color\"] = \"#eee\"\r\n                  }\r\n              }\r\n              rows.push(row)\r\n            }\r\n            \r\n            const filterRow = [{tag: <div><input type=\"text\" className=\"filter__input\" placeholder=\"TAG\" onChange={(e) => this.filter(1, e.target.value)}/></div>, type: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Type\" onChange={(e) => this.filter(2, e.target.value)}/></div>, date: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Date\" onChange={(e) => this.filter(3,e.target.value)}/></div>, user: <div><input type=\"text\" className=\"filter__input\" placeholder=\"User\" onChange={(e) => this.filter(4,e.target.value)}/></div>}]\r\n                \r\n            this.setState({data : rows, displayData: rows});\r\n            await this.setState({filters : filterRow})\r\n        })\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState){\r\n\r\n    if(prevProps !== this.props){\r\n\r\n        let options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n        await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getDeletedPipes\", options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                let rows = []\r\n                for(let i = 0; i < json.rows.length; i++){\r\n                  let row = {key: json.rows[i].id, id: json.rows[i].id, tag: json.rows[i].tag, type: json.rows[i].code, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), user: json.rows[i].name}\r\n                  if(row){\r\n                        if(i % 2 === 0){\r\n                            row[\"color\"] = \"#fff\"\r\n                        }else{\r\n                            row[\"color\"] = \"#eee\"\r\n                        }\r\n                    }\r\n                    \r\n                    rows.push(row)\r\n                }\r\n                \r\n                await this.setState({data : rows, displayData: rows});\r\n            })\r\n    }\r\n\r\n  }\r\n\r\n  async filter(column, value){\r\n    let fd = this.state.filterData\r\n    fd[column] = value\r\n    await this.setState({filterData: fd})\r\n\r\n    let auxDisplayData = this.state.data\r\n    let resultData = []\r\n    let fil, exists = null\r\n    for(let i = 0; i < auxDisplayData.length; i++){\r\n      exists = true\r\n      for(let column = 0; column < Object.keys(auxDisplayData[i]).length-1; column ++){\r\n        fil = Object.keys(auxDisplayData[i])[column+1]\r\n        if(auxDisplayData[i][fil]){\r\n          if(this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].includes(this.state.filterData[column])){\r\n            exists = false\r\n          }\r\n        }else{\r\n            exists = false\r\n        }\r\n      }\r\n      if(exists){\r\n        resultData.push(auxDisplayData[i])\r\n      }\r\n    }\r\n    await this.setState({displayData: resultData})\r\n  }\r\n  \r\n\r\n  \r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    render: text => \r\n    text\r\n      \r\n  });\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n    const selectedRows = this.state.selectedRows;\r\n    const selectedRowsKeys = this.state.selectedRowsKeys;\r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => record.actions ?(\r\n        {\r\n        \r\n        disabled: true,\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }) : ({\r\n        name: record.name,\r\n      }),\r\n    };\r\n\r\n    const rowSelectionFilter = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => ({\r\n        disabled: true,\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n\r\n    if(localStorage.getItem(\"update\") === \"true\"){\r\n      this.setState({\r\n        selectedRows: [],\r\n        selectedRowsKeys: []\r\n      })\r\n      rowSelection.selectedRowKeys = []\r\n      rowSelection.selectedRows = []\r\n      localStorage.setItem(\"update\", false)\r\n    }else{\r\n      rowSelection.selectedRowKeys = selectedRowsKeys \r\n      rowSelection.selectedRows = selectedRows;\r\n    }  \r\n    \r\n    \r\n    let columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">TAG</center>,\r\n        dataIndex: 'tag',\r\n        key: 'tag',\r\n        ...this.getColumnSearchProps('tag'),\r\n        sorter:{\r\n          compare: (a, b) => a.tag.props.children.localeCompare(b.tag.props.children),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Type</center>,\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n        ...this.getColumnSearchProps('type'),\r\n        width: \"100px\",\r\n        sorter:{\r\n          compare: (a, b) => { return a.type.localeCompare(b.type)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Date</div>,\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        ...this.getColumnSearchProps('date'),\r\n        sorter: {\r\n          compare: (a, b) => a.date.replace(/\\D/g,'') - b.date.replace(/\\D/g,''),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">User</div>,\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        ...this.getColumnSearchProps('user'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.user.localeCompare(b.user)},\r\n        },\r\n      }\r\n    ];\r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} style={{ height: '540px' }} columns={columns} dataSource={this.state.displayData} scroll={{y:437}} pagination={{disabled:true, defaultPageSize:5000}} size=\"small\" rowClassName= {(record) => record.color.replace('#', '')}/>\r\n        <Table className=\"filter__table\" pagination={{disabled:true}} rowSelection={{type: 'checkbox', ...rowSelectionFilter}} scroll={{y:437}} showHeader = {false} bordered = {true} columns={columns} dataSource={this.state.filters} size=\"small\"/> \r\n          {totalElements}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PipingBinTable;"]},"metadata":{},"sourceType":"module"}