{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\pages\\\\isoCtrl\\\\isoCtrl.js\",\n    _s = $RefreshSig$();\n\nimport DataTable from \"../../components/datatable/datatable\";\nimport ReportBtns from \"../../components/reportBtns/reportBtns\";\nimport StateTable from \"../../components/stateTable/stateTable\";\nimport NavBtns from \"../../components/navBtns/navBtns\";\nimport DragAndDrop from \"../../components/dragAndDrop/dragAndDrop\";\nimport \"./isoCtrl.css\";\nimport React, { useState, useEffect } from 'react';\nimport ActionButtons from \"../../components/actionBtns/actionBtns\";\nimport ActionExtra from \"../../components/actionExtra/actionExtra\";\nimport ProgressTable from \"../../components/progressTable/progressTable\";\nimport SelectPag from \"../../components/selectPag/selectPag\";\nimport CheckInTable from \"../../components/checkInTable/checkInTable\";\nimport NavBar from '../../components/navBar/navBar';\nimport MyTrayBtn from \"../../components/myTrayBtn/myTrayBtn\";\nimport MyTrayTable from \"../../components/myTrayTable/myTrayTable\";\nimport BinBtn from '../../components/binBtn/binBtn';\nimport BinTable from \"../../components/binTable/binTable\";\nimport OnHoldTable from \"../../components/onHoldTable/onHoldTable\";\nimport StatusDataTable from \"../../components/statusDataTable/statusDataTable\";\nimport HistoryDataTable from \"../../components/historyDataTable/historyDataTable\";\nimport RoleDropDown from \"../../components/roleDropDown/roleDropDown\";\nimport Alert from '@material-ui/lab/Alert';\nimport Collapse from '@material-ui/core/Collapse';\nimport OnHoldBtn from \"../../components/onHoldBtn/onHoldBtn\";\nimport ProcInsBtn from \"../../components/procInsBtn/procInsBtn\";\nimport ReportsBtn from \"../../components/reportsBtn/reportsBtn\";\nimport ProcInstTable from \"../../components/procInstTable/procInstTable\";\nimport download from 'downloadjs';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport ReportBoxBtns from \"../../components/reportBoxBtns/reportBoxBtns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IsoCtrl = () => {\n  _s();\n\n  const [pagination, setPagination] = useState(8); //Controla el numero de entradas por pagina de la tabla\n\n  const user = \"admin\"; //De momento esta variable controla el tipo de user\n\n  const [currentRole, setCurrentRole] = useState();\n  const [roles, setRoles] = useState();\n  const [selected, setSelected] = useState([]);\n  const [updateData, setUpdateData] = useState();\n  const [comment, setComment] = useState(\" \");\n  const [commentAlert, setCommentAlert] = useState(false);\n  const [downloadZip, setDownloadzip] = useState(new JSZip());\n  const [loading, setLoading] = useState(false);\n  const [errorUnclaim, setErrorUnclaim] = useState(false);\n  const [errorPI, setErrorPI] = useState(false);\n  const [transactionSuccess, setTransactionSuccess] = useState(false);\n  const [errorReports, setErrorReports] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [realProgress, setRealProgress] = useState(0);\n  const [progressISO, setProgressISO] = useState(0);\n  const [realProgressISO, setRealProgressISO] = useState(0);\n\n  const CryptoJS = require(\"crypto-js\");\n\n  const SecureStorage = require(\"secure-web-storage\");\n\n  var SECRET_KEY = 'sanud2ha8shd72h';\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SECRET_KEY);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"tab\")); //Controla la tabla y botones que se muestran\n  //La altura de la tabla es fija en funcion de la paginacion para evitar que los botones se muevan\n\n  var dataTableHeight = 8;\n\n  if (pagination === 8) {\n    dataTableHeight = \"520px\";\n  }\n\n  if (pagination === 25) {\n    dataTableHeight = \"1220px\";\n  }\n\n  if (pagination === 50) {\n    dataTableHeight = \"2230px\";\n  }\n\n  if (pagination === 100) {\n    dataTableHeight = \"4300px\";\n  } //Componentes de la pagina que varian en funcion del estado\n\n\n  var uploadButton, actionButtons, actionText, actionExtra, commentBox, progressTableWidth, tableContent, procInsBtn;\n  var currentTabText = currentTab;\n  tableContent = /*#__PURE__*/_jsxDEV(DataTable, {\n    forceUnclaim: forceUnclaim.bind(this),\n    onChange: value => setSelected(value),\n    selected: selected,\n    pagination: pagination,\n    currentTab: currentTab,\n    currentRole: currentRole,\n    updateData: updateData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 20\n  }, this);\n\n  var pageSelector = /*#__PURE__*/_jsxDEV(SelectPag, {\n    onChange: value => setPagination(value),\n    pagination: pagination\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 24\n  }, this);\n\n  var currentUser = secureStorage.getItem('user');\n  const body = {\n    user: currentUser\n  };\n  useEffect(() => {\n    setUpdateData(!updateData);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://localhost:5000/api/roles/user\", options).then(response => response.json()).then(json => {\n      setRoles(json.roles);\n\n      if (secureStorage.getItem('role') !== null) {\n        setCurrentRole(secureStorage.getItem('role'));\n      } else {\n        secureStorage.setItem('role', json.roles[0]);\n        setCurrentRole(secureStorage.getItem('role'));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    setErrorPI(false);\n    setUpdateData(!updateData);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setErrorReports(false);\n    setLoading(false);\n  }, [currentRole]);\n  useEffect(() => {\n    setErrorPI(false);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setLoading(false);\n    setErrorReports(false);\n  }, [currentTab]);\n  useEffect(async () => {\n    if (process.env.REACT_APP_PROGRESS === \"1\") {\n      await getProgress();\n    }\n  }, []);\n\n  const getProgress = async () => {\n    const options = {\n      method: \"GET\"\n    };\n    await fetch(\"http://localhost:5000/currentProgressISO\", options).then(response => response.json()).then(async json => {\n      await setProgressISO(json.progressISO);\n      await setRealProgressISO(json.realprogressISO);\n    });\n  };\n\n  const claim = async event => {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    console.log(selected);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      if (currentTab === \"Process\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/claimProc\", options);\n        }\n      } else if (currentTab === \"Instrument\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/claimInst\", options);\n        }\n      } else {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/claim\", options);\n        }\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n    }\n  };\n\n  const forceClaim = async username => {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: username,\n          file: selected[i],\n          los: currentUser\n        };\n        console.log(body);\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://localhost:5000/forceClaim\", options);\n      }\n\n      setUpdateData(!updateData);\n      setLoading(false);\n    }\n  };\n\n  const unclaim = async event => {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      if (currentRole === \"Process\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/unclaimProc\", options);\n        }\n      } else if (currentRole === \"Instrument\") {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          console.log(body);\n          await fetch(\"http://localhost:5000/unclaimInst\", options);\n        }\n      } else {\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            file: selected[i],\n            role: currentRole\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/unclaim\", options).then(response => response.json()).catch(err => {\n            setErrorUnclaim(true);\n          });\n        }\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n    }\n  };\n\n  async function forceUnclaim(fileName) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    console.log(body);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    console.log(body);\n    await fetch(\"http://localhost:5000/forceUnclaim\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n  }\n\n  const verifyClick = async event => {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setLoading(true);\n    console.log(\"Envio a verify\");\n\n    if (selected.length > 0) {\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          user: currentUser,\n          file: selected[i],\n          role: currentRole\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://localhost:5000/verify\", options);\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n    }\n  };\n\n  async function cancelVerifyClick(filename) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: filename,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://localhost:5000/cancelVerify\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n  }\n\n  async function transaction(destiny) {\n    if (selected.length > 0) {\n      setErrorReports(false);\n      setErrorUnclaim(false);\n      setErrorPI(false);\n      setTransactionSuccess(false);\n      setLoading(true);\n\n      if (destiny === \"Design\") {\n        if (comment.length > 1) {\n          setComment(\" \");\n          setCommentAlert(false);\n          localStorage.setItem(\"update\", true);\n\n          for (let i = 0; i < selected.length; i++) {\n            const body = {\n              user: currentUser,\n              fileName: selected[i],\n              to: destiny,\n              role: secureStorage.getItem(\"role\"),\n              comment: comment,\n              deleted: 0,\n              onhold: 0\n            };\n            const options = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(body)\n            };\n            await fetch(\"http://localhost:5000/api/transaction\", options);\n            setTransactionSuccess(true);\n          }\n        } else {\n          console.log(\"vacio\");\n          setCommentAlert(true);\n        }\n      } else if (destiny === \"LDE/Isocontrol\") {\n        for (let i = 0; i < selected.length; i++) {\n          const options = {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          await fetch(\"http://localhost:5000/piStatus/\" + selected[i], options).then(response => response.json()).then(async json => {\n            if (json.sit === 1 || json.sit === 4 || json.spo === 1 || json.spo === 4) {\n              localStorage.setItem(\"update\", true);\n              setErrorPI(true);\n            } else {\n              setCommentAlert(false);\n              localStorage.setItem(\"update\", true);\n              let deleted,\n                  hold = 0;\n              const body = {\n                user: currentUser,\n                fileName: selected[i],\n                to: destiny,\n                role: secureStorage.getItem(\"role\"),\n                comment: null,\n                deleted: deleted,\n                onhold: hold\n              };\n              const options = {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              };\n              await fetch(\"http://localhost:5000/api/transaction\", options);\n              setTransactionSuccess(true);\n            }\n          });\n        }\n\n        await setUpdateData(!updateData);\n        setLoading(false);\n      } else {\n        setCommentAlert(false);\n        localStorage.setItem(\"update\", true);\n        let deleted,\n            hold = 0;\n\n        if (destiny === \"Recycle bin\") {\n          deleted = 1;\n        }\n\n        if (destiny === \"On hold\") {\n          hold = 1;\n        }\n\n        for (let i = 0; i < selected.length; i++) {\n          const body = {\n            user: currentUser,\n            fileName: selected[i],\n            to: destiny,\n            role: secureStorage.getItem(\"role\"),\n            comment: null,\n            deleted: deleted,\n            onhold: hold\n          };\n          const options = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          };\n          await fetch(\"http://localhost:5000/api/transaction\", options);\n          setTransactionSuccess(true);\n        }\n      }\n\n      await setUpdateData(!updateData);\n      setLoading(false);\n      await getProgress();\n    }\n  }\n\n  async function returnLead(destiny) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n\n    for (let i = 0; i < selected.length; i++) {\n      const body = {\n        user: currentUser,\n        fileName: selected[i],\n        to: destiny\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      await fetch(\"http://localhost:5000/api/returnLead\", options);\n      setTransactionSuccess(true);\n    }\n\n    await setUpdateData(!updateData);\n    setLoading(false);\n  }\n\n  function handleComment(event) {\n    setComment(event.target.value);\n  }\n\n  async function restore() {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setErrorPI(false);\n    console.log(selected.length);\n\n    if (selected.length > 0) {\n      setLoading(true);\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const body = {\n          fileName: selected[i],\n          user: currentUser,\n          deleted: 0,\n          onhold: 0\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"http://localhost:5000/restore\", options);\n        setTransactionSuccess(true);\n      }\n\n      await setUpdateData(!updateData);\n      console.log(\"restored\");\n      setLoading(false);\n    }\n  }\n\n  function procOrInst(tab) {\n    if (tab === \"Process\" || tab === \"Instrument\") {\n      setCurrentTab(tab);\n    } else if (currentRole === \"Process\") {\n      setCurrentTab(\"Process\");\n    } else {\n      setCurrentTab(\"Instrument\");\n    }\n  }\n\n  async function sendProcessClick(fileName) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://localhost:5000/process\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n  }\n\n  async function sendInstrumentClick(fileName) {\n    setErrorReports(false);\n    setErrorUnclaim(false);\n    setTransactionSuccess(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n    const body = {\n      user: currentUser,\n      file: fileName,\n      role: currentRole\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"http://localhost:5000/instrument\", options);\n    await setUpdateData(!updateData);\n    setLoading(false);\n  }\n\n  function updateD() {\n    setUpdateData(!updateData);\n  }\n\n  async function downloadFiles() {\n    setErrorReports(false);\n    setTransactionSuccess(false);\n    setErrorUnclaim(false);\n    setLoading(true);\n    localStorage.setItem(\"update\", true);\n\n    if (selected.length === 1) {\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const options = {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/pdf\"\n          }\n        };\n        await fetch(\"http://localhost:5000/download/\" + selected[i], options).then(res => res.blob()).then(response => {\n          console.log(\"Se descarga\");\n          download(new Blob([response]), selected[i], \"application/pdf\");\n        });\n      }\n    } else if (selected.length > 1) {\n      localStorage.setItem(\"update\", true);\n\n      for (let i = 0; i < selected.length; i++) {\n        const options = {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/pdf\"\n          }\n        };\n        await fetch(\"http://localhost:5000/download/\" + selected[i], options).then(res => res.blob()).then(response => {\n          setDownloadzip(downloadZip.file(selected[i], new Blob([response]), {\n            binary: true\n          }));\n        });\n      }\n\n      const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1));\n      downloadZip.generateAsync({\n        type: \"blob\"\n      }).then(function (blob) {\n        // 1) generate the zip file\n        saveAs(blob, zipname);\n      });\n    }\n\n    await setUpdateData(!updateData);\n    await setDownloadzip(new JSZip());\n    setLoading(false);\n    /* EN CASO DE QUERER ADJUNTOS\r\n    for (let i = 0; i < selected.length; i++){\r\n        const body ={\r\n            fileName: selected[i]\r\n        }\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/pdf\"\r\n            }\r\n        }\r\n        \r\n        await fetch(\"http://localhost:5000/getAttach/\"+selected[i], options)\r\n        .then(response => response.json())\r\n        .then(async json => {\r\n            await fetch(\"http://localhost:5000/download/\"+selected[i], options)\r\n            .then(res => res.blob())\r\n            .then( async response =>{\r\n                setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                for(let i = 0; i < json.length; i++){\r\n                    await fetch(\"http://localhost:5000/download/\"+json[i], options)\r\n                    .then(res => res.blob())\r\n                    .then(response =>{\r\n                        setDownloadzip(downloadZip.file(json[i], new Blob([response]),{binary:true}))   \r\n                    })\r\n                }\r\n                 \r\n            })\r\n        })\r\n    \r\n          \r\n          }\r\n    const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n    downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n        saveAs(blob,  zipname)\r\n    })  \r\n    \r\n    await setDownloadzip(new JSZip())   \r\n    await setAttachFiles(null)\r\n    await setUpdateData(!updateData)\r\n    setLoading(false)\r\n    */\n  }\n\n  async function downloadHistory() {\n    setErrorReports(false);\n    await fetch(\"http://localhost:5000/downloadHistory/\").then(response => response.json()).then(json => {\n      const headers = [\"ISO_ID\", \"FROM\", \"TO\", \"DATE\", \"COMMENT\", \"USER\"];\n      exportToExcel(JSON.parse(json), \"Comments\", headers);\n    });\n  }\n\n  const exportToExcel = (apiData, fileName, headers) => {\n    setErrorReports(false);\n    const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1'];\n    const fileExtension = \".xlsx\";\n    const ws = XLSX.utils.json_to_sheet(apiData);\n\n    for (let i = 0; i < headers.length; i++) {\n      ws[header_cells[i]].v = headers[i];\n    }\n\n    const wb = {\n      Sheets: {\n        data: ws\n      },\n      SheetNames: [\"data\"]\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  async function setUploading(active) {\n    setErrorReports(false);\n    setLoading(active);\n\n    if (!active) {\n      setTransactionSuccess(true);\n    }\n  }\n\n  async function setErrorReport() {\n    setErrorReports(true);\n  }\n\n  if (currentTab === \"Upload IsoFiles\") {\n    secureStorage.setItem(\"tab\", \"Upload IsoFiles\");\n    uploadButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info btn-lg\",\n      style: {\n        backgroundColor: \"#17a2b8\",\n        width: \"180px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 127\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 24\n    }, this);\n    tableContent = /*#__PURE__*/_jsxDEV(DragAndDrop, {\n      mode: \"upload\",\n      user: currentUser,\n      uploaded: getProgress.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 24\n    }, this);\n    pageSelector = null;\n  }\n\n  if (currentTab === \"Design\" && currentRole === \"Design\") {\n    uploadButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info btn-lg\",\n      style: {\n        backgroundColor: \"lightblue\",\n        width: \"180px\"\n      },\n      onClick: () => setCurrentTab(\"Upload IsoFiles\"),\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 182\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"LDE/IsoControl\") {\n    actionExtra = /*#__PURE__*/_jsxDEV(ActionExtra, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 23\n    }, this);\n  }\n\n  if (currentTab === \"CheckBy\") {\n    tableContent = /*#__PURE__*/_jsxDEV(CheckInTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"My Tray\") {\n    tableContent = /*#__PURE__*/_jsxDEV(MyTrayTable, {\n      onChange: value => setSelected(value),\n      cancelVerifyClick: cancelVerifyClick.bind(this),\n      sendProcessClick: sendProcessClick.bind(this),\n      sendInstrumentClick: sendInstrumentClick.bind(this),\n      updateD: updateD.bind(this),\n      pagination: pagination,\n      currentRole: currentRole,\n      currentUser: currentUser,\n      selected: selected,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Recycle bin\") {\n    tableContent = /*#__PURE__*/_jsxDEV(BinTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"On hold\") {\n    tableContent = /*#__PURE__*/_jsxDEV(OnHoldTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Status\") {\n    tableContent = /*#__PURE__*/_jsxDEV(StatusDataTable, {\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"History\") {\n    tableContent = /*#__PURE__*/_jsxDEV(HistoryDataTable, {\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentRole === \"Process\" || currentRole === \"Instrument\" || currentRole === \"SpecialityLead\") {\n    procInsBtn = /*#__PURE__*/_jsxDEV(ProcInsBtn, {\n      onChange: value => procOrInst(value),\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 22\n    }, this);\n  }\n\n  if (currentTab === \"Process\" || currentTab === \"Instrument\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ProcInstTable, {\n      onChange: value => setSelected(value),\n      selected: selected,\n      pagination: pagination,\n      currentTab: currentTab,\n      updateData: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"Reports\") {\n    tableContent = /*#__PURE__*/_jsxDEV(ReportBoxBtns, {\n      downloadHistory: downloadHistory.bind(this),\n      setErrorReport: setErrorReport.bind(this),\n      setUploading: setUploading.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (currentTab === \"My Tray\" || currentTab === \"LDE/IsoControl\") {\n    commentBox = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Comments\",\n        class: \"comments\",\n        cols: \"100\",\n        rows: \"2\",\n        required: \"\",\n        maxlength: \"400\",\n        name: \"comments\",\n        value: comment,\n        onChange: handleComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 22\n    }, this);\n  }\n\n  if ((currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Design\" || (currentRole === \"Stress\" || currentRole === \"StressLead\") && currentTab === \"Stress\" || (currentRole === \"Supports\" || currentRole === \"SupportsLead\") && currentTab === \"Supports\" || currentRole === \"Materials\" && currentTab === \"Materials\" || currentRole === \"Issuer\" && currentTab === \"Issuer\" || currentRole === \"SpecialityLead\" || currentTab === \"SpecialityLead\" || currentTab === \"My Tray\" || (currentTab === \"Recycle bin\" || currentTab === \"On hold\") && currentRole === \"DesignLead\" || currentRole === \"SpecialityLead\" || currentTab === \"Process\" && currentRole === \"Process\" || currentRole === \"Instrument\" && currentTab === \"Instrument\") {\n    actionText = /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"progress__text\",\n      children: \"Click an action for selected IsoFiles:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 22\n    }, this);\n    actionButtons = /*#__PURE__*/_jsxDEV(ActionButtons, {\n      claimClick: claim.bind(this),\n      verifyClick: verifyClick.bind(this),\n      unclaimClick: unclaim.bind(this),\n      transaction: transaction.bind(this),\n      restoreClick: restore.bind(this),\n      returnLead: returnLead.bind(this),\n      downloadFiles: downloadFiles.bind(this),\n      forceClaim: forceClaim.bind(this),\n      onlyDownload: false,\n      currentTab: currentTab,\n      user: currentUser,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 25\n    }, this);\n  } else if (currentTab !== \"History\" && currentTab !== \"Upload IsoFiles\" && currentTab !== \"Recycle bin\" && currentTab !== \"Reports\") {\n    actionText = /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"progress__text\",\n      children: \"Click an action for selected IsoFiles:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 22\n    }, this);\n    actionButtons = /*#__PURE__*/_jsxDEV(ActionButtons, {\n      claimClick: claim.bind(this),\n      verifyClick: verifyClick.bind(this),\n      unclaimClick: unclaim.bind(this),\n      transaction: transaction.bind(this),\n      restoreClick: restore.bind(this),\n      returnLead: returnLead.bind(this),\n      downloadFiles: downloadFiles.bind(this),\n      forceClaim: forceClaim.bind(this),\n      onlyDownload: true,\n      currentTab: currentTab,\n      user: currentUser,\n      role: currentRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 25\n    }, this);\n  } //El usuario admin ve mas parte de la tabla de progreso\n\n\n  if (user === \"admin\") {\n    progressTableWidth = \"35%\";\n  } else {\n    progressTableWidth = \"15%\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onChange: value => setCurrentTab(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"isoCtrl__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(Collapse, {\n          in: loading,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              position: \"fixed\",\n              left: \"47%\",\n              zIndex: \"3\"\n            },\n            severity: \"info\",\n            children: \"Processing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorPI,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              position: \"fixed\",\n              left: \"37%\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"At least one isometric was on revision and wasn't sent to LDE/Isocontrol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: transactionSuccess,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              position: \"fixed\",\n              left: \"47%\",\n              zIndex: \"3\"\n            },\n            severity: \"success\",\n            children: \"Successful!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorUnclaim,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              position: \"fixed\",\n              left: \"44%\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"Can't unclaim an iso assigned by LOS!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: errorReports,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            style: {\n              position: \"fixed\",\n              left: \"45%\",\n              zIndex: \"3\"\n            },\n            severity: \"error\",\n            children: \"Missing columns!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roleSelector__container\",\n            children: /*#__PURE__*/_jsxDEV(RoleDropDown, {\n              style: {\n                paddingLeft: \"2px\"\n              },\n              onChange: value => setCurrentRole(value),\n              roles: roles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iso__title\",\n              children: \"IsoTracker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"iso__subtitle\",\n          children: currentTabText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(MyTrayBtn, {\n              onChange: value => setCurrentTab(value),\n              currentTab: currentTab\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"reportBtns__container\",\n              style: {\n                width: \"380px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ReportBtns, {\n                onChange: value => setCurrentTab(value),\n                currentTab: currentTab\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: uploadButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: progressTableWidth,\n                position: \"inline-block\",\n                right: \"0\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ProgressTable, {\n                user: user,\n                updateData: updateData,\n                progress: progress,\n                realProgress: realProgress,\n                progressISO: progressISO,\n                realProgressISO: realProgressISO\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stateTable__container\",\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            width: \"75 %\"\n          },\n          children: /*#__PURE__*/_jsxDEV(StateTable, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          width: \"500px\"\n        },\n        children: [pageSelector, /*#__PURE__*/_jsxDEV(BinBtn, {\n          onChange: value => setCurrentTab(\"Recycle bin\"),\n          currentTab: currentTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(OnHoldBtn, {\n          onChange: value => setCurrentTab(\"On hold\"),\n          currentTab: currentTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ReportsBtn, {\n          onChange: value => setCurrentTab(\"Reports\"),\n          currentTab: currentTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 19\n        }, this), procInsBtn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: dataTableHeight\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 21\n        }, this), tableContent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom__container\",\n        children: [/*#__PURE__*/_jsxDEV(Collapse, {\n          in: commentAlert,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: \"Add a comment before sending the isos back to design!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          className: \"actionBtns__container\",\n          children: [actionText, actionExtra, actionButtons]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          className: \"commentBox__container\",\n          children: commentBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      className: \"navBtns__center\",\n      children: /*#__PURE__*/_jsxDEV(NavBtns, {\n        onChange: value => setCurrentTab(value),\n        currentTab: currentTab,\n        currentRole: currentRole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 860,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IsoCtrl, \"AuL40jMkJvc7wFT0TdbMVRWil0M=\");\n\n_c = IsoCtrl;\nexport default IsoCtrl;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsoCtrl\");","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/pages/isoCtrl/isoCtrl.js"],"names":["DataTable","ReportBtns","StateTable","NavBtns","DragAndDrop","React","useState","useEffect","ActionButtons","ActionExtra","ProgressTable","SelectPag","CheckInTable","NavBar","MyTrayBtn","MyTrayTable","BinBtn","BinTable","OnHoldTable","StatusDataTable","HistoryDataTable","RoleDropDown","Alert","Collapse","OnHoldBtn","ProcInsBtn","ReportsBtn","ProcInstTable","download","JSZip","saveAs","FileSaver","XLSX","ReportBoxBtns","IsoCtrl","pagination","setPagination","user","currentRole","setCurrentRole","roles","setRoles","selected","setSelected","updateData","setUpdateData","comment","setComment","commentAlert","setCommentAlert","downloadZip","setDownloadzip","loading","setLoading","errorUnclaim","setErrorUnclaim","errorPI","setErrorPI","transactionSuccess","setTransactionSuccess","errorReports","setErrorReports","progress","setProgress","realProgress","setRealProgress","progressISO","setProgressISO","realProgressISO","setRealProgressISO","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","currentTab","setCurrentTab","getItem","dataTableHeight","uploadButton","actionButtons","actionText","actionExtra","commentBox","progressTableWidth","tableContent","procInsBtn","currentTabText","forceUnclaim","bind","value","pageSelector","currentUser","body","options","method","headers","JSON","stringify","fetch","then","response","json","setItem","catch","error","console","log","process","env","REACT_APP_PROGRESS","getProgress","realprogressISO","claim","event","length","i","file","role","forceClaim","username","los","unclaim","err","fileName","verifyClick","cancelVerifyClick","filename","transaction","destiny","to","deleted","onhold","sit","spo","hold","returnLead","handleComment","target","restore","procOrInst","tab","sendProcessClick","sendInstrumentClick","updateD","downloadFiles","res","blob","Blob","binary","zipname","String","Date","toLocaleString","replace","split","slice","generateAsync","type","downloadHistory","exportToExcel","parse","apiData","fileType","header_cells","fileExtension","ws","utils","json_to_sheet","v","wb","Sheets","SheetNames","excelBuffer","write","bookType","setUploading","active","setErrorReport","backgroundColor","width","position","left","zIndex","paddingLeft","right","height"],"mappings":"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","sourcesContent":["import DataTable from \"../../components/datatable/datatable\"\r\nimport ReportBtns from \"../../components/reportBtns/reportBtns\"\r\nimport StateTable from \"../../components/stateTable/stateTable\"\r\nimport NavBtns from \"../../components/navBtns/navBtns\"\r\nimport DragAndDrop from \"../../components/dragAndDrop/dragAndDrop\"\r\nimport \"./isoCtrl.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport ActionButtons from \"../../components/actionBtns/actionBtns\"\r\nimport ActionExtra from \"../../components/actionExtra/actionExtra\"\r\nimport ProgressTable from \"../../components/progressTable/progressTable\"\r\nimport SelectPag from \"../../components/selectPag/selectPag\"\r\nimport CheckInTable from \"../../components/checkInTable/checkInTable\"\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport MyTrayBtn from \"../../components/myTrayBtn/myTrayBtn\"\r\nimport MyTrayTable from \"../../components/myTrayTable/myTrayTable\"\r\nimport BinBtn from '../../components/binBtn/binBtn'\r\nimport BinTable from \"../../components/binTable/binTable\"\r\nimport OnHoldTable from \"../../components/onHoldTable/onHoldTable\"\r\nimport StatusDataTable from \"../../components/statusDataTable/statusDataTable\"\r\nimport HistoryDataTable from \"../../components/historyDataTable/historyDataTable\"\r\nimport RoleDropDown from \"../../components/roleDropDown/roleDropDown\"\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport OnHoldBtn from \"../../components/onHoldBtn/onHoldBtn\"\r\nimport ProcInsBtn from \"../../components/procInsBtn/procInsBtn\"\r\nimport ReportsBtn from \"../../components/reportsBtn/reportsBtn\"\r\nimport ProcInstTable from \"../../components/procInstTable/procInstTable\"\r\nimport download from 'downloadjs'\r\nimport JSZip from 'jszip'\r\nimport { saveAs } from 'file-saver';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport ReportBoxBtns from \"../../components/reportBoxBtns/reportBoxBtns\"\r\n\r\n\r\nconst IsoCtrl = () => {\r\n   \r\n    \r\n    const[pagination, setPagination] = useState(8) //Controla el numero de entradas por pagina de la tabla\r\n    const user = \"admin\" //De momento esta variable controla el tipo de user\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const [selected, setSelected] = useState([]);\r\n    const [updateData, setUpdateData] = useState();\r\n    const [comment, setComment] = useState(\" \");\r\n    const [commentAlert, setCommentAlert] = useState(false);\r\n    const [downloadZip, setDownloadzip] = useState(new JSZip());\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorUnclaim, setErrorUnclaim] = useState(false);\r\n    const [errorPI, setErrorPI] = useState(false);\r\n    const [transactionSuccess, setTransactionSuccess] = useState(false);\r\n    const [errorReports, setErrorReports] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [realProgress, setRealProgress] = useState(0);\r\n    const [progressISO, setProgressISO] = useState(0);\r\n    const [realProgressISO, setRealProgressISO] = useState(0);\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"tab\")) //Controla la tabla y botones que se muestran\r\n    //La altura de la tabla es fija en funcion de la paginacion para evitar que los botones se muevan\r\n    var dataTableHeight = 8\r\n\r\n    if (pagination === 8){\r\n        dataTableHeight = \"520px\"\r\n    }if(pagination === 25){\r\n        dataTableHeight = \"1220px\"\r\n    }if(pagination === 50){\r\n        dataTableHeight = \"2230px\"\r\n    }if(pagination === 100){\r\n        dataTableHeight = \"4300px\"\r\n    }\r\n\r\n    //Componentes de la pagina que varian en funcion del estado\r\n    var uploadButton, actionButtons, actionText, actionExtra, commentBox, progressTableWidth, tableContent, procInsBtn\r\n    var currentTabText = currentTab\r\n    tableContent = <DataTable forceUnclaim = {forceUnclaim.bind(this)} onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} currentRole={currentRole} updateData = {updateData}/>\r\n    var pageSelector = <SelectPag onChange={value => setPagination(value)} pagination = {pagination}/>\r\n    var currentUser = secureStorage.getItem('user')\r\n\r\n    const body = {\r\n        user: currentUser,\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        setUpdateData(!updateData)\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://localhost:5000/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            setErrorPI(false)\r\n            setUpdateData(!updateData)\r\n            setTransactionSuccess(false);\r\n            setErrorUnclaim(false)\r\n            setErrorReports(false)\r\n            setLoading(false)\r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n        setErrorPI(false);\r\n        setTransactionSuccess(false)\r\n        setErrorUnclaim(false)\r\n        setLoading(false)\r\n        setErrorReports(false)\r\n    }, [currentTab])\r\n\r\n    useEffect(async()=>{\r\n        if(process.env.REACT_APP_PROGRESS === \"1\"){\r\n            await getProgress()\r\n        }\r\n    },[])\r\n\r\n    const getProgress = async() =>{\r\n        const options = {\r\n            method: \"GET\",\r\n        }\r\n        await fetch(\"http://localhost:5000/currentProgressISO\", options)\r\n        .then(response => response.json())\r\n        .then(async json =>{\r\n            await setProgressISO(json.progressISO)\r\n            await setRealProgressISO(json.realprogressISO)\r\n        })\r\n    }\r\n\r\n    const claim = async(event) => {\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        console.log(selected)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if(currentTab === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/claimProc\", options)\r\n                }\r\n            }else if(currentTab === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/claimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                \r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/claim\", options)\r\n                }\r\n            \r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n            \r\n        }\r\n     \r\n    }   \r\n    \r\n    const forceClaim = async(username) =>{\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : username,\r\n                    file: selected[i],\r\n                    los: currentUser\r\n                }\r\n                console.log(body)\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://localhost:5000/forceClaim\", options)\r\n            }\r\n            setUpdateData(!updateData)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const unclaim = async (event) =>{\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            if (currentRole === \"Process\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/unclaimProc\", options)\r\n                }\r\n            }else if(currentRole === \"Instrument\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    console.log(body)\r\n                    await fetch(\"http://localhost:5000/unclaimInst\", options)\r\n                }\r\n            }else{\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const body ={\r\n                        user : currentUser,\r\n                        file: selected[i],\r\n                        role: currentRole\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/unclaim\", options)\r\n                    .then(response => response.json())\r\n                    .catch(err => {\r\n                        setErrorUnclaim(true)\r\n                    });\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n        }\r\n        \r\n    }\r\n\r\n    async function forceUnclaim(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n        const body ={\r\n            user : currentUser,\r\n            file: fileName,\r\n            role: currentRole\r\n        }\r\n        console.log(body)\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        console.log(body)\r\n        await fetch(\"http://localhost:5000/forceUnclaim\", options)\r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    const verifyClick = async(event) =>{\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setLoading(true)\r\n        console.log(\"Envio a verify\")\r\n        if(selected.length > 0){\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                \r\n                const body ={\r\n                    user : currentUser,\r\n                    file: selected[i],\r\n                    role: currentRole\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://localhost:5000/verify\", options)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n        }    \r\n    }\r\n\r\n    async function cancelVerifyClick(filename){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: filename,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://localhost:5000/cancelVerify\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n            \r\n    }\r\n\r\n    async function transaction(destiny){\r\n        \r\n        if(selected.length > 0){\r\n            setErrorReports(false)\r\n            setErrorUnclaim(false)\r\n            setErrorPI(false);\r\n            setTransactionSuccess(false);\r\n            setLoading(true)\r\n            if(destiny === \"Design\"){\r\n                if(comment.length > 1){\r\n                    setComment(\" \")\r\n                    setCommentAlert(false)\r\n                    localStorage.setItem(\"update\", true)\r\n                    for (let i = 0; i < selected.length; i++){\r\n                        const body ={\r\n                            user : currentUser,\r\n                            fileName: selected[i],\r\n                            to: destiny,\r\n                            role: secureStorage.getItem(\"role\"),\r\n                            comment: comment,\r\n                            deleted: 0,\r\n                            onhold: 0\r\n                        }\r\n                        const options = {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            body: JSON.stringify(body)\r\n                        }\r\n                        await fetch(\"http://localhost:5000/api/transaction\", options)\r\n                        setTransactionSuccess(true)\r\n                    }\r\n                }else{\r\n                    console.log(\"vacio\")\r\n                    setCommentAlert(true)\r\n                }\r\n            }else if (destiny === \"LDE/Isocontrol\"){\r\n                for (let i = 0; i < selected.length; i++){\r\n                    const options = {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                    }\r\n                    await fetch(\"http://localhost:5000/piStatus/\"+selected[i], options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                        if(json.sit === 1 || json.sit === 4 || json.spo === 1 || json.spo === 4){\r\n                            localStorage.setItem(\"update\", true)\r\n                            setErrorPI(true);\r\n                        }else{\r\n                            setCommentAlert(false)\r\n                            localStorage.setItem(\"update\", true)\r\n                            let deleted, hold = 0\r\n                    \r\n                            const body ={\r\n                                user : currentUser,\r\n                                fileName: selected[i],\r\n                                to: destiny,\r\n                                role: secureStorage.getItem(\"role\"),\r\n                                comment: null,\r\n                                deleted: deleted,\r\n                                onhold: hold\r\n                            }\r\n                            const options = {\r\n                                method: \"POST\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                },\r\n                                body: JSON.stringify(body)\r\n                            }\r\n                            await fetch(\"http://localhost:5000/api/transaction\", options)\r\n                            setTransactionSuccess(true)\r\n                        }\r\n                    })\r\n                }\r\n                await setUpdateData(!updateData)\r\n                setLoading(false)\r\n            }else{\r\n                setCommentAlert(false)\r\n                localStorage.setItem(\"update\", true)\r\n                let deleted, hold = 0\r\n\r\n                if(destiny === \"Recycle bin\"){\r\n                    deleted = 1\r\n                }\r\n\r\n                if(destiny === \"On hold\"){\r\n                    hold = 1\r\n                }\r\n                for (let i = 0; i < selected.length; i++){\r\n                    \r\n                    const body ={\r\n                        user : currentUser,\r\n                        fileName: selected[i],\r\n                        to: destiny,\r\n                        role: secureStorage.getItem(\"role\"),\r\n                        comment: null,\r\n                        deleted: deleted,\r\n                        onhold: hold\r\n                    }\r\n                    const options = {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify(body)\r\n                    }\r\n                    await fetch(\"http://localhost:5000/api/transaction\", options)\r\n                    setTransactionSuccess(true)\r\n                }\r\n            }\r\n            await setUpdateData(!updateData)\r\n            setLoading(false)\r\n            await getProgress()\r\n        }    \r\n    }\r\n\r\n    async function returnLead(destiny){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n        for (let i = 0; i < selected.length; i++){\r\n                    \r\n            const body ={\r\n                user : currentUser,\r\n                fileName: selected[i],\r\n                to: destiny,\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://localhost:5000/api/returnLead\", options)\r\n            setTransactionSuccess(true)\r\n        }\r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n    }\r\n    \r\n\r\n    function handleComment(event){\r\n        setComment(event.target.value)\r\n    }\r\n\r\n    async function restore(){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setErrorPI(false)\r\n        console.log(selected.length)\r\n        if(selected.length > 0){\r\n            setLoading(true)\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const body ={\r\n                    fileName: selected[i],\r\n                    user: currentUser,\r\n                    deleted: 0,\r\n                    onhold: 0\r\n                }\r\n                const options = {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(body)\r\n                }\r\n                await fetch(\"http://localhost:5000/restore\", options)\r\n                setTransactionSuccess(true)\r\n            }\r\n            await setUpdateData(!updateData)\r\n            console.log(\"restored\")\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    function procOrInst(tab) {\r\n        if(tab === \"Process\" || tab === \"Instrument\"){\r\n            setCurrentTab(tab)\r\n        }else if (currentRole === \"Process\"){\r\n            setCurrentTab(\"Process\")\r\n        }else{\r\n            setCurrentTab(\"Instrument\")\r\n        }\r\n    }\r\n\r\n    async function sendProcessClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://localhost:5000/process\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n    }\r\n\r\n    async function sendInstrumentClick(fileName){\r\n        setErrorReports(false)\r\n        setErrorUnclaim(false)\r\n        setTransactionSuccess(false);\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n            \r\n            const body ={\r\n                user : currentUser,\r\n                file: fileName,\r\n                role: currentRole\r\n            }\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n            await fetch(\"http://localhost:5000/instrument\", options)\r\n        \r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n    }\r\n\r\n    function updateD(){\r\n        setUpdateData(!updateData)\r\n    }\r\n\r\n    async function downloadFiles(){\r\n        setErrorReports(false)\r\n        setTransactionSuccess(false);\r\n        setErrorUnclaim(false)\r\n        setLoading(true)\r\n        localStorage.setItem(\"update\", true)\r\n        if(selected.length === 1){\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n                const options = {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/pdf\"\r\n                    }\r\n                }\r\n                await fetch(\"http://localhost:5000/download/\"+selected[i], options)\r\n                .then(res => res.blob())\r\n                    .then(response =>{\r\n                        console.log(\"Se descarga\")\r\n                        download(new Blob([response]), selected[i], \"application/pdf\")\r\n                    })\r\n            }\r\n        }else if (selected.length > 1){\r\n            localStorage.setItem(\"update\", true)\r\n            for (let i = 0; i < selected.length; i++){\r\n\r\n                const options = {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/pdf\"\r\n                    }\r\n                }\r\n                await fetch(\"http://localhost:5000/download/\"+selected[i], options)\r\n                .then(res => res.blob())\r\n                    .then(response =>{\r\n                        setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                    })\r\n            }\r\n            const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n            downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n                saveAs(blob,  zipname)\r\n            })\r\n            \r\n        }\r\n        await setUpdateData(!updateData)\r\n        await setDownloadzip(new JSZip())   \r\n        setLoading(false)\r\n        /* EN CASO DE QUERER ADJUNTOS\r\n        for (let i = 0; i < selected.length; i++){\r\n            const body ={\r\n                fileName: selected[i]\r\n            }\r\n            const options = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/pdf\"\r\n                }\r\n            }\r\n            \r\n            await fetch(\"http://localhost:5000/getAttach/\"+selected[i], options)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                await fetch(\"http://localhost:5000/download/\"+selected[i], options)\r\n                .then(res => res.blob())\r\n                .then( async response =>{\r\n                    setDownloadzip(downloadZip.file(selected[i], new Blob([response]),{binary:true}))   \r\n                    for(let i = 0; i < json.length; i++){\r\n                        await fetch(\"http://localhost:5000/download/\"+json[i], options)\r\n                        .then(res => res.blob())\r\n                        .then(response =>{\r\n                            setDownloadzip(downloadZip.file(json[i], new Blob([response]),{binary:true}))   \r\n                        })\r\n                    }\r\n                     \r\n                })\r\n            })\r\n        \r\n\r\n            \r\n    \r\n        }\r\n        const zipname = String(Date().toLocaleString().replace(/\\s/g, '-').split('-G').slice(0, -1))\r\n        downloadZip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\r\n            saveAs(blob,  zipname)\r\n        })  \r\n        \r\n        await setDownloadzip(new JSZip())   \r\n        await setAttachFiles(null)\r\n        await setUpdateData(!updateData)\r\n        setLoading(false)\r\n        */ \r\n    }\r\n\r\n    async function downloadHistory(){\r\n        setErrorReports(false)\r\n\r\n        await fetch(\"http://localhost:5000/downloadHistory/\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const headers = [\"ISO_ID\", \"FROM\", \"TO\", \"DATE\", \"COMMENT\", \"USER\"]\r\n            exportToExcel(JSON.parse(json), \"Comments\", headers)\r\n        })\r\n    }\r\n\r\n    const exportToExcel = (apiData, fileName, headers) => {\r\n        setErrorReports(false)\r\n        const fileType =\r\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const header_cells = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'O1']\r\n        const fileExtension = \".xlsx\";\r\n      \r\n          const ws = XLSX.utils.json_to_sheet(apiData);   \r\n          for(let i = 0; i < headers.length; i++){\r\n              ws[header_cells[i]].v = headers[i]\r\n          }\r\n          const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n          const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n          const data = new Blob([excelBuffer], { type: fileType });\r\n          FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n    async function setUploading(active){\r\n        setErrorReports(false)\r\n        setLoading(active)\r\n        if(!active){\r\n            setTransactionSuccess(true)\r\n        }\r\n    }\r\n\r\n    async function setErrorReport(){\r\n        setErrorReports(true)\r\n    }\r\n\r\n    if(currentTab === \"Upload IsoFiles\"){\r\n        secureStorage.setItem(\"tab\", \"Upload IsoFiles\")\r\n        uploadButton = <button  type=\"button\" class=\"btn btn-info btn-lg\" style={{backgroundColor: \"#17a2b8\", width:\"180px\"}}><b>Upload</b></button>\r\n        tableContent = <DragAndDrop mode={\"upload\"} user={currentUser} uploaded={getProgress.bind(this)}/>\r\n        pageSelector = null\r\n    }if(currentTab === \"Design\" && currentRole === \"Design\"){\r\n        uploadButton = <button  type=\"button\" className=\"btn btn-info btn-lg\" style={{backgroundColor: \"lightblue\", width:\"180px\"}} onClick={() => setCurrentTab(\"Upload IsoFiles\")}><b>Upload</b></button>\r\n    }if(currentTab === \"LDE/IsoControl\"){\r\n        actionExtra = <ActionExtra/>\r\n    }if(currentTab === \"CheckBy\"){\r\n        tableContent = <CheckInTable/>\r\n    }if(currentTab === \"My Tray\"){\r\n        tableContent = <MyTrayTable  onChange={value=> setSelected(value)} cancelVerifyClick={cancelVerifyClick.bind(this)} sendProcessClick={sendProcessClick.bind(this)} sendInstrumentClick = {sendInstrumentClick.bind(this)} updateD = {updateD.bind(this)} pagination = {pagination} currentRole = {currentRole} currentUser = {currentUser} selected={selected} updateData = {updateData}/>\r\n    }if(currentTab === \"Recycle bin\"){\r\n        tableContent = <BinTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"On hold\"){\r\n        tableContent = <OnHoldTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData}/>\r\n    }if(currentTab === \"Status\"){\r\n        tableContent = <StatusDataTable pagination = {pagination}/>\r\n    }if(currentTab === \"History\"){\r\n        tableContent = <HistoryDataTable pagination = {pagination}/>   \r\n    }if(currentRole === \"Process\" || currentRole === \"Instrument\" || currentRole === \"SpecialityLead\"){\r\n        procInsBtn = <ProcInsBtn onChange={value => procOrInst(value)} currentTab = {currentTab} />\r\n    }if(currentTab === \"Process\" || currentTab === \"Instrument\"){\r\n        tableContent = <ProcInstTable onChange={value=> setSelected(value)} selected = {selected} pagination = {pagination} currentTab = {currentTab} updateData = {updateData} />\r\n    }if(currentTab === \"Reports\"){\r\n        tableContent = <ReportBoxBtns downloadHistory={downloadHistory.bind(this)} setErrorReport={setErrorReport.bind(this)} setUploading={setUploading.bind(this)}/>\r\n    }\r\n\r\n    if(currentTab === \"My Tray\" || currentTab === \"LDE/IsoControl\"){\r\n        commentBox = <div>\r\n            <textarea placeholder=\"Comments\" class=\"comments\" cols=\"100\" rows=\"2\" required=\"\" maxlength=\"400\" name=\"comments\" value={comment} onChange={handleComment}></textarea>\r\n        </div>\r\n    }\r\n\r\n    if(((currentRole === \"Design\" || currentRole === \"DesignLead\") && currentTab === \"Design\") || \r\n    ((currentRole === \"Stress\" || currentRole === \"StressLead\") && currentTab === \"Stress\") ||\r\n    ((currentRole === \"Supports\" || currentRole === \"SupportsLead\") && currentTab === \"Supports\") ||\r\n    ((currentRole === \"Materials\") && currentTab === \"Materials\") ||\r\n    ((currentRole === \"Issuer\") && currentTab === \"Issuer\") ||\r\n    ((currentRole === \"SpecialityLead\" || currentTab ===\"SpecialityLead\") ||\r\n    (currentTab=== \"My Tray\")) || (((currentTab === \"Recycle bin\" || currentTab === \"On hold\") && currentRole === \"DesignLead\") || \r\n    currentRole === \"SpecialityLead\") || (currentTab === \"Process\" && currentRole === \"Process\") ||\r\n    (currentRole === \"Instrument\" && currentTab === \"Instrument\")){\r\n        actionText = <b className=\"progress__text\">Click an action for selected IsoFiles:</b>\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} onlyDownload = {false} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }else if(currentTab !== \"History\" && currentTab !== \"Upload IsoFiles\" && currentTab !== \"Recycle bin\" && currentTab !== \"Reports\"){\r\n        actionText = <b className=\"progress__text\">Click an action for selected IsoFiles:</b>\r\n        actionButtons = <ActionButtons claimClick={claim.bind(this)} verifyClick={verifyClick.bind(this)} unclaimClick={unclaim.bind(this)} transaction={transaction.bind(this)} restoreClick={restore.bind(this)} returnLead={returnLead.bind(this)} downloadFiles={downloadFiles.bind(this)} forceClaim={forceClaim.bind(this)} onlyDownload = {true} currentTab = {currentTab} user={currentUser} role = {currentRole}/>\r\n    }\r\n\r\n    //El usuario admin ve mas parte de la tabla de progreso\r\n    if (user === \"admin\"){\r\n        progressTableWidth = \"35%\";\r\n    }else{\r\n        progressTableWidth = \"15%\";\r\n    }\r\n    \r\n    return (\r\n        \r\n        <body>\r\n            <NavBar onChange={value => setCurrentTab(value)}/>\r\n\r\n            <div className=\"isoCtrl__container\">     \r\n                <center>\r\n                    <Collapse in={loading}>\r\n                        <Alert style={{position: \"fixed\", left: \"47%\", zIndex:\"3\"}} severity=\"info\"\r\n                            >\r\n                            Processing...\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorPI}>\r\n                        <Alert style={{position: \"fixed\", left: \"37%\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            At least one isometric was on revision and wasn't sent to LDE/Isocontrol\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={transactionSuccess}>\r\n                        <Alert style={{position: \"fixed\", left: \"47%\", zIndex:\"3\"}} severity=\"success\"\r\n                            >\r\n                            Successful!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorUnclaim}>\r\n                        <Alert style={{position: \"fixed\", left: \"44%\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Can't unclaim an iso assigned by LOS!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={errorReports}>\r\n                        <Alert style={{position: \"fixed\", left: \"45%\", zIndex:\"3\"}} severity=\"error\"\r\n                            >\r\n                            Missing columns!\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <h2 className=\"title__container\">\r\n                        <div className=\"roleSelector__container\">\r\n                            <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                         </div>\r\n                        <b >      \r\n                            <i className=\"iso__title\">IsoTracker</i>\r\n                        </b>\r\n                    </h2>\r\n                    <h3 className=\"iso__subtitle\">{currentTabText}</h3>\r\n                </center>\r\n                \r\n                <table style={{width: \"100%\"}}>\r\n                    <tbody>\r\n                        <tr>\r\n                        <MyTrayBtn onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n                            <td className=\"reportBtns__container\" style={{width:\"380px\"}}>\r\n                                \r\n                                <ReportBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab}/>\r\n                                \r\n                            </td>\r\n                            <td>\r\n                                {uploadButton}\r\n                            </td>   \r\n                                           \r\n                            <td style={{width: progressTableWidth,position:\"inline-block\", right: \"0\"}}>\r\n                                <ProgressTable user = {user} updateData = {updateData} progress={progress} realProgress={realProgress} progressISO={progressISO} realProgressISO={realProgressISO}/>\r\n                            </td>    \r\n                            \r\n                        </tr>\r\n                    </tbody>\r\n                </table>              \r\n                \r\n                <div className=\"stateTable__container\">\r\n                    <td style={{width: \"75 %\"}}>\r\n                        <StateTable/>\r\n                    </td>\r\n                </div>\r\n                <div style={{position: \"relative\", width:\"500px\"}}>\r\n                  {pageSelector}\r\n                  <BinBtn onChange={value => setCurrentTab(\"Recycle bin\")} currentTab = {currentTab}/>\r\n                  <OnHoldBtn onChange={value => setCurrentTab(\"On hold\")} currentTab = {currentTab}/>\r\n                  <ReportsBtn onChange={value => setCurrentTab(\"Reports\")} currentTab = {currentTab}/>\r\n                  {procInsBtn}\r\n\r\n                </div>\r\n                    \r\n                \r\n                <div style={{height: dataTableHeight}}>\r\n                    <br></br>\r\n                    <br></br> \r\n                    {tableContent}\r\n                </div>\r\n                <div className=\"bottom__container\">\r\n                    <Collapse in={commentAlert}>\r\n                        <Alert severity=\"error\"\r\n                            >\r\n                            Add a comment before sending the isos back to design!\r\n\r\n                            </Alert>\r\n                    </Collapse>\r\n                    <center className=\"actionBtns__container\">\r\n                        {actionText}\r\n                        {actionExtra}\r\n                        {actionButtons}\r\n                    </center>\r\n                    <br></br>\r\n                    <center className=\"commentBox__container\">\r\n                        {commentBox}\r\n                    </center>\r\n                 \r\n                    \r\n                </div>\r\n            </div>\r\n            <center className=\"navBtns__center\">              \r\n                <NavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole}/>               \r\n            </center>\r\n            <br></br>\r\n        </body>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default IsoCtrl;\r\n"]},"metadata":{},"sourceType":"module"}