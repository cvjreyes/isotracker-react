{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { mixin } from \"../../../helpers/object.mjs\";\nimport localHooks from \"../../../mixins/localHooks.mjs\";\nimport { LinkedPhysicalIndexToValueMap as IndexToValueMap } from \"../../../translations/index.mjs\";\n/**\n * @plugin Filters\n * @class BaseComponent\n */\n\nvar BaseComponent = /*#__PURE__*/function () {\n  function BaseComponent(hotInstance, _ref) {\n    var id = _ref.id,\n        _ref$stateless = _ref.stateless,\n        stateless = _ref$stateless === void 0 ? true : _ref$stateless;\n\n    _classCallCheck(this, BaseComponent);\n    /**\n     * The Handsontable instance.\n     *\n     * @type {Core}\n     */\n\n\n    this.hot = hotInstance;\n    /**\n     * The component uniq id.\n     *\n     * @type {string}\n     */\n\n    this.id = id;\n    /**\n     * List of registered component UI elements.\n     *\n     * @type {Array}\n     */\n\n    this.elements = [];\n    /**\n     * Flag which determines if element is hidden.\n     *\n     * @type {boolean}\n     */\n\n    this.hidden = false;\n    /**\n     * The component states id.\n     *\n     * @type {string}\n     */\n\n    this.stateId = \"Filters.component.\".concat(this.id);\n    /**\n     * Index map which stores component states for each column.\n     *\n     * @type {LinkedPhysicalIndexToValueMap|null}\n     */\n\n    this.state = stateless ? null : this.hot.columnIndexMapper.registerMap(this.stateId, new IndexToValueMap());\n  }\n  /**\n   * Reset elements to its initial state.\n   */\n\n\n  _createClass(BaseComponent, [{\n    key: \"reset\",\n    value: function reset() {\n      arrayEach(this.elements, function (ui) {\n        return ui.reset();\n      });\n    }\n    /**\n     * Hide component.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.hidden = true;\n    }\n    /**\n     * Show component.\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.hidden = false;\n    }\n    /**\n     * Check if component is hidden.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden() {\n      return this.hot === null || this.hidden;\n    }\n    /**\n     * Restores the component state from the given physical column index. The method\n     * internally calls the `setState` method. The state then is individually processed\n     * by each component.\n     *\n     * @param {number} physicalColumn The physical column index.\n     */\n\n  }, {\n    key: \"restoreState\",\n    value: function restoreState(physicalColumn) {\n      if (this.state) {\n        this.setState(this.state.getValueAtIndex(physicalColumn));\n      }\n    }\n    /**\n     * The custom logic for component state restoring.\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState() {\n      throw new Error('The state setting logic is not implemented');\n    }\n    /**\n     * Saves the component state to the given physical column index. The method\n     * internally calls the `getState` method, which returns the current state of\n     * the component.\n     *\n     * @param {number} physicalColumn The physical column index.\n     */\n\n  }, {\n    key: \"saveState\",\n    value: function saveState(physicalColumn) {\n      if (this.state) {\n        this.state.setValueAtIndex(physicalColumn, this.getState());\n      }\n    }\n    /**\n     * The custom logic for component state gathering (for stateful components).\n     */\n\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      throw new Error('The state gathering logic is not implemented');\n    }\n    /**\n     * Destroy element.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.hot.columnIndexMapper.unregisterMap(this.stateId);\n      this.clearLocalHooks();\n      arrayEach(this.elements, function (ui) {\n        return ui.destroy();\n      });\n      this.state = null;\n      this.elements = null;\n      this.hot = null;\n    }\n  }]);\n\n  return BaseComponent;\n}();\n\nmixin(BaseComponent, localHooks);\nexport default BaseComponent;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/handsontable/plugins/filters/component/_base.mjs"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","arrayEach","mixin","localHooks","LinkedPhysicalIndexToValueMap","IndexToValueMap","BaseComponent","hotInstance","_ref","id","_ref$stateless","stateless","hot","elements","hidden","stateId","concat","state","columnIndexMapper","registerMap","value","reset","ui","hide","show","isHidden","restoreState","physicalColumn","setState","getValueAtIndex","Error","saveState","setValueAtIndex","getState","destroy","unregisterMap","clearLocalHooks"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BC,IAAAA,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AAA4D;AAAE;;AAE7T,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACiB,SAAb,EAAwBF,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;AAA6C,SAAOhB,WAAP;AAAqB;;AAEvN,SAASkB,SAAT,QAA0B,4BAA1B;AACA,SAASC,KAAT,QAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,6BAA6B,IAAIC,eAA1C,QAAiE,iCAAjE;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GAAG,aAAa,YAAY;AAC3C,WAASA,aAAT,CAAuBC,WAAvB,EAAoCC,IAApC,EAA0C;AACxC,QAAIC,EAAE,GAAGD,IAAI,CAACC,EAAd;AAAA,QACIC,cAAc,GAAGF,IAAI,CAACG,SAD1B;AAAA,QAEIA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,IAA5B,GAAmCA,cAFnD;;AAIA7B,IAAAA,eAAe,CAAC,IAAD,EAAOyB,aAAP,CAAf;AAEA;AACJ;AACA;AACA;AACA;;;AACI,SAAKM,GAAL,GAAWL,WAAX;AACA;AACJ;AACA;AACA;AACA;;AAEI,SAAKE,EAAL,GAAUA,EAAV;AACA;AACJ;AACA;AACA;AACA;;AAEI,SAAKI,QAAL,GAAgB,EAAhB;AACA;AACJ;AACA;AACA;AACA;;AAEI,SAAKC,MAAL,GAAc,KAAd;AACA;AACJ;AACA;AACA;AACA;;AAEI,SAAKC,OAAL,GAAe,qBAAqBC,MAArB,CAA4B,KAAKP,EAAjC,CAAf;AACA;AACJ;AACA;AACA;AACA;;AAEI,SAAKQ,KAAL,GAAaN,SAAS,GAAG,IAAH,GAAU,KAAKC,GAAL,CAASM,iBAAT,CAA2BC,WAA3B,CAAuC,KAAKJ,OAA5C,EAAqD,IAAIV,eAAJ,EAArD,CAAhC;AACD;AACD;AACF;AACA;;;AAGER,EAAAA,YAAY,CAACS,aAAD,EAAgB,CAAC;AAC3BV,IAAAA,GAAG,EAAE,OADsB;AAE3BwB,IAAAA,KAAK,EAAE,SAASC,KAAT,GAAiB;AACtBpB,MAAAA,SAAS,CAAC,KAAKY,QAAN,EAAgB,UAAUS,EAAV,EAAc;AACrC,eAAOA,EAAE,CAACD,KAAH,EAAP;AACD,OAFQ,CAAT;AAGD;AACD;AACJ;AACA;;AAT+B,GAAD,EAWzB;AACDzB,IAAAA,GAAG,EAAE,MADJ;AAEDwB,IAAAA,KAAK,EAAE,SAASG,IAAT,GAAgB;AACrB,WAAKT,MAAL,GAAc,IAAd;AACD;AACD;AACJ;AACA;;AAPK,GAXyB,EAoBzB;AACDlB,IAAAA,GAAG,EAAE,MADJ;AAEDwB,IAAAA,KAAK,EAAE,SAASI,IAAT,GAAgB;AACrB,WAAKV,MAAL,GAAc,KAAd;AACD;AACD;AACJ;AACA;AACA;AACA;;AATK,GApByB,EA+BzB;AACDlB,IAAAA,GAAG,EAAE,UADJ;AAEDwB,IAAAA,KAAK,EAAE,SAASK,QAAT,GAAoB;AACzB,aAAO,KAAKb,GAAL,KAAa,IAAb,IAAqB,KAAKE,MAAjC;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAXK,GA/ByB,EA4CzB;AACDlB,IAAAA,GAAG,EAAE,cADJ;AAEDwB,IAAAA,KAAK,EAAE,SAASM,YAAT,CAAsBC,cAAtB,EAAsC;AAC3C,UAAI,KAAKV,KAAT,EAAgB;AACd,aAAKW,QAAL,CAAc,KAAKX,KAAL,CAAWY,eAAX,CAA2BF,cAA3B,CAAd;AACD;AACF;AACD;AACJ;AACA;;AATK,GA5CyB,EAuDzB;AACD/B,IAAAA,GAAG,EAAE,UADJ;AAEDwB,IAAAA,KAAK,EAAE,SAASQ,QAAT,GAAoB;AACzB,YAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAXK,GAvDyB,EAoEzB;AACDlC,IAAAA,GAAG,EAAE,WADJ;AAEDwB,IAAAA,KAAK,EAAE,SAASW,SAAT,CAAmBJ,cAAnB,EAAmC;AACxC,UAAI,KAAKV,KAAT,EAAgB;AACd,aAAKA,KAAL,CAAWe,eAAX,CAA2BL,cAA3B,EAA2C,KAAKM,QAAL,EAA3C;AACD;AACF;AACD;AACJ;AACA;;AATK,GApEyB,EA+EzB;AACDrC,IAAAA,GAAG,EAAE,UADJ;AAEDwB,IAAAA,KAAK,EAAE,SAASa,QAAT,GAAoB;AACzB,YAAM,IAAIH,KAAJ,CAAU,8CAAV,CAAN;AACD;AACD;AACJ;AACA;;AAPK,GA/EyB,EAwFzB;AACDlC,IAAAA,GAAG,EAAE,SADJ;AAEDwB,IAAAA,KAAK,EAAE,SAASc,OAAT,GAAmB;AACxB,WAAKtB,GAAL,CAASM,iBAAT,CAA2BiB,aAA3B,CAAyC,KAAKpB,OAA9C;AACA,WAAKqB,eAAL;AACAnC,MAAAA,SAAS,CAAC,KAAKY,QAAN,EAAgB,UAAUS,EAAV,EAAc;AACrC,eAAOA,EAAE,CAACY,OAAH,EAAP;AACD,OAFQ,CAAT;AAGA,WAAKjB,KAAL,GAAa,IAAb;AACA,WAAKJ,QAAL,GAAgB,IAAhB;AACA,WAAKD,GAAL,GAAW,IAAX;AACD;AAXA,GAxFyB,CAAhB,CAAZ;;AAsGA,SAAON,aAAP;AACD,CA9JgC,EAAjC;;AAgKAJ,KAAK,CAACI,aAAD,EAAgBH,UAAhB,CAAL;AACA,eAAeG,aAAf","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { mixin } from \"../../../helpers/object.mjs\";\nimport localHooks from \"../../../mixins/localHooks.mjs\";\nimport { LinkedPhysicalIndexToValueMap as IndexToValueMap } from \"../../../translations/index.mjs\";\n/**\n * @plugin Filters\n * @class BaseComponent\n */\n\nvar BaseComponent = /*#__PURE__*/function () {\n  function BaseComponent(hotInstance, _ref) {\n    var id = _ref.id,\n        _ref$stateless = _ref.stateless,\n        stateless = _ref$stateless === void 0 ? true : _ref$stateless;\n\n    _classCallCheck(this, BaseComponent);\n\n    /**\n     * The Handsontable instance.\n     *\n     * @type {Core}\n     */\n    this.hot = hotInstance;\n    /**\n     * The component uniq id.\n     *\n     * @type {string}\n     */\n\n    this.id = id;\n    /**\n     * List of registered component UI elements.\n     *\n     * @type {Array}\n     */\n\n    this.elements = [];\n    /**\n     * Flag which determines if element is hidden.\n     *\n     * @type {boolean}\n     */\n\n    this.hidden = false;\n    /**\n     * The component states id.\n     *\n     * @type {string}\n     */\n\n    this.stateId = \"Filters.component.\".concat(this.id);\n    /**\n     * Index map which stores component states for each column.\n     *\n     * @type {LinkedPhysicalIndexToValueMap|null}\n     */\n\n    this.state = stateless ? null : this.hot.columnIndexMapper.registerMap(this.stateId, new IndexToValueMap());\n  }\n  /**\n   * Reset elements to its initial state.\n   */\n\n\n  _createClass(BaseComponent, [{\n    key: \"reset\",\n    value: function reset() {\n      arrayEach(this.elements, function (ui) {\n        return ui.reset();\n      });\n    }\n    /**\n     * Hide component.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.hidden = true;\n    }\n    /**\n     * Show component.\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.hidden = false;\n    }\n    /**\n     * Check if component is hidden.\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden() {\n      return this.hot === null || this.hidden;\n    }\n    /**\n     * Restores the component state from the given physical column index. The method\n     * internally calls the `setState` method. The state then is individually processed\n     * by each component.\n     *\n     * @param {number} physicalColumn The physical column index.\n     */\n\n  }, {\n    key: \"restoreState\",\n    value: function restoreState(physicalColumn) {\n      if (this.state) {\n        this.setState(this.state.getValueAtIndex(physicalColumn));\n      }\n    }\n    /**\n     * The custom logic for component state restoring.\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState() {\n      throw new Error('The state setting logic is not implemented');\n    }\n    /**\n     * Saves the component state to the given physical column index. The method\n     * internally calls the `getState` method, which returns the current state of\n     * the component.\n     *\n     * @param {number} physicalColumn The physical column index.\n     */\n\n  }, {\n    key: \"saveState\",\n    value: function saveState(physicalColumn) {\n      if (this.state) {\n        this.state.setValueAtIndex(physicalColumn, this.getState());\n      }\n    }\n    /**\n     * The custom logic for component state gathering (for stateful components).\n     */\n\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      throw new Error('The state gathering logic is not implemented');\n    }\n    /**\n     * Destroy element.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.hot.columnIndexMapper.unregisterMap(this.stateId);\n      this.clearLocalHooks();\n      arrayEach(this.elements, function (ui) {\n        return ui.destroy();\n      });\n      this.state = null;\n      this.elements = null;\n      this.hot = null;\n    }\n  }]);\n\n  return BaseComponent;\n}();\n\nmixin(BaseComponent, localHooks);\nexport default BaseComponent;"]},"metadata":{},"sourceType":"module"}