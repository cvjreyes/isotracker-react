{"ast":null,"code":"var global = require('../internals/global');\n\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\n\nvar macrotask = require('../internals/task').set;\n\nvar IS_IOS = require('../internals/engine-is-ios');\n\nvar IS_WEBOS_WEBKIT = require('../internals/engine-is-webos-webkit');\n\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar document = global.document;\nvar process = global.process;\nvar Promise = global.Promise; // Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\n\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\nvar flush, head, last, notify, toggle, node, promise, then; // modern engines have queueMicrotask method\n\nif (!queueMicrotask) {\n  flush = function flush() {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();else last = undefined;\n        throw error;\n      }\n    }\n\n    last = undefined;\n    if (parent) parent.enter();\n  }; // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\n\n\n  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, {\n      characterData: true\n    });\n\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    }; // environments with maybe non-completely correct, but existent Promise\n\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    then = promise.then;\n\n    notify = function notify() {\n      then.call(promise, flush);\n    }; // Node.js without promises\n\n  } else if (IS_NODE) {\n    notify = function notify() {\n      process.nextTick(flush);\n    }; // for other environments - macrotask based on:\n    // - setImmediate\n    // - MessageChannel\n    // - window.postMessag\n    // - onreadystatechange\n    // - setTimeout\n\n  } else {\n    notify = function notify() {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = {\n    fn: fn,\n    next: undefined\n  };\n  if (last) last.next = task;\n\n  if (!head) {\n    head = task;\n    notify();\n  }\n\n  last = task;\n};","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/node_modules/core-js/internals/microtask.js"],"names":["global","require","getOwnPropertyDescriptor","f","macrotask","set","IS_IOS","IS_WEBOS_WEBKIT","IS_NODE","MutationObserver","WebKitMutationObserver","document","process","Promise","queueMicrotaskDescriptor","queueMicrotask","value","flush","head","last","notify","toggle","node","promise","then","parent","fn","domain","exit","next","error","undefined","enter","createTextNode","observe","characterData","data","resolve","call","nextTick","module","exports","task"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,wBAAwB,GAAGD,OAAO,CAAC,iDAAD,CAAP,CAA2DE,CAA1F;;AACA,IAAIC,SAAS,GAAGH,OAAO,CAAC,mBAAD,CAAP,CAA6BI,GAA7C;;AACA,IAAIC,MAAM,GAAGL,OAAO,CAAC,4BAAD,CAApB;;AACA,IAAIM,eAAe,GAAGN,OAAO,CAAC,qCAAD,CAA7B;;AACA,IAAIO,OAAO,GAAGP,OAAO,CAAC,6BAAD,CAArB;;AAEA,IAAIQ,gBAAgB,GAAGT,MAAM,CAACS,gBAAP,IAA2BT,MAAM,CAACU,sBAAzD;AACA,IAAIC,QAAQ,GAAGX,MAAM,CAACW,QAAtB;AACA,IAAIC,OAAO,GAAGZ,MAAM,CAACY,OAArB;AACA,IAAIC,OAAO,GAAGb,MAAM,CAACa,OAArB,C,CACA;;AACA,IAAIC,wBAAwB,GAAGZ,wBAAwB,CAACF,MAAD,EAAS,gBAAT,CAAvD;AACA,IAAIe,cAAc,GAAGD,wBAAwB,IAAIA,wBAAwB,CAACE,KAA1E;AAEA,IAAIC,KAAJ,EAAWC,IAAX,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6CC,OAA7C,EAAsDC,IAAtD,C,CAEA;;AACA,IAAI,CAACT,cAAL,EAAqB;AACnBE,EAAAA,KAAK,GAAG,iBAAY;AAClB,QAAIQ,MAAJ,EAAYC,EAAZ;AACA,QAAIlB,OAAO,KAAKiB,MAAM,GAAGb,OAAO,CAACe,MAAtB,CAAX,EAA0CF,MAAM,CAACG,IAAP;;AAC1C,WAAOV,IAAP,EAAa;AACXQ,MAAAA,EAAE,GAAGR,IAAI,CAACQ,EAAV;AACAR,MAAAA,IAAI,GAAGA,IAAI,CAACW,IAAZ;;AACA,UAAI;AACFH,QAAAA,EAAE;AACH,OAFD,CAEE,OAAOI,KAAP,EAAc;AACd,YAAIZ,IAAJ,EAAUE,MAAM,GAAhB,KACKD,IAAI,GAAGY,SAAP;AACL,cAAMD,KAAN;AACD;AACF;;AAACX,IAAAA,IAAI,GAAGY,SAAP;AACF,QAAIN,MAAJ,EAAYA,MAAM,CAACO,KAAP;AACb,GAfD,CADmB,CAkBnB;AACA;;;AACA,MAAI,CAAC1B,MAAD,IAAW,CAACE,OAAZ,IAAuB,CAACD,eAAxB,IAA2CE,gBAA3C,IAA+DE,QAAnE,EAA6E;AAC3EU,IAAAA,MAAM,GAAG,IAAT;AACAC,IAAAA,IAAI,GAAGX,QAAQ,CAACsB,cAAT,CAAwB,EAAxB,CAAP;AACA,QAAIxB,gBAAJ,CAAqBQ,KAArB,EAA4BiB,OAA5B,CAAoCZ,IAApC,EAA0C;AAAEa,MAAAA,aAAa,EAAE;AAAjB,KAA1C;;AACAf,IAAAA,MAAM,GAAG,kBAAY;AACnBE,MAAAA,IAAI,CAACc,IAAL,GAAYf,MAAM,GAAG,CAACA,MAAtB;AACD,KAFD,CAJ2E,CAO7E;;AACC,GARD,MAQO,IAAIR,OAAO,IAAIA,OAAO,CAACwB,OAAvB,EAAgC;AACrC;AACAd,IAAAA,OAAO,GAAGV,OAAO,CAACwB,OAAR,CAAgBN,SAAhB,CAAV;AACAP,IAAAA,IAAI,GAAGD,OAAO,CAACC,IAAf;;AACAJ,IAAAA,MAAM,GAAG,kBAAY;AACnBI,MAAAA,IAAI,CAACc,IAAL,CAAUf,OAAV,EAAmBN,KAAnB;AACD,KAFD,CAJqC,CAOvC;;AACC,GARM,MAQA,IAAIT,OAAJ,EAAa;AAClBY,IAAAA,MAAM,GAAG,kBAAY;AACnBR,MAAAA,OAAO,CAAC2B,QAAR,CAAiBtB,KAAjB;AACD,KAFD,CADkB,CAIpB;AACA;AACA;AACA;AACA;AACA;;AACC,GAVM,MAUA;AACLG,IAAAA,MAAM,GAAG,kBAAY;AACnB;AACAhB,MAAAA,SAAS,CAACkC,IAAV,CAAetC,MAAf,EAAuBiB,KAAvB;AACD,KAHD;AAID;AACF;;AAEDuB,MAAM,CAACC,OAAP,GAAiB1B,cAAc,IAAI,UAAUW,EAAV,EAAc;AAC/C,MAAIgB,IAAI,GAAG;AAAEhB,IAAAA,EAAE,EAAEA,EAAN;AAAUG,IAAAA,IAAI,EAAEE;AAAhB,GAAX;AACA,MAAIZ,IAAJ,EAAUA,IAAI,CAACU,IAAL,GAAYa,IAAZ;;AACV,MAAI,CAACxB,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAGwB,IAAP;AACAtB,IAAAA,MAAM;AACP;;AAACD,EAAAA,IAAI,GAAGuB,IAAP;AACH,CAPD","sourcesContent":["var global = require('../internals/global');\r\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\r\nvar macrotask = require('../internals/task').set;\r\nvar IS_IOS = require('../internals/engine-is-ios');\r\nvar IS_WEBOS_WEBKIT = require('../internals/engine-is-webos-webkit');\r\nvar IS_NODE = require('../internals/engine-is-node');\r\n\r\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\r\nvar document = global.document;\r\nvar process = global.process;\r\nvar Promise = global.Promise;\r\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\r\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\r\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\r\n\r\nvar flush, head, last, notify, toggle, node, promise, then;\r\n\r\n// modern engines have queueMicrotask method\r\nif (!queueMicrotask) {\r\n  flush = function () {\r\n    var parent, fn;\r\n    if (IS_NODE && (parent = process.domain)) parent.exit();\r\n    while (head) {\r\n      fn = head.fn;\r\n      head = head.next;\r\n      try {\r\n        fn();\r\n      } catch (error) {\r\n        if (head) notify();\r\n        else last = undefined;\r\n        throw error;\r\n      }\r\n    } last = undefined;\r\n    if (parent) parent.enter();\r\n  };\r\n\r\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\r\n  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\r\n  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {\r\n    toggle = true;\r\n    node = document.createTextNode('');\r\n    new MutationObserver(flush).observe(node, { characterData: true });\r\n    notify = function () {\r\n      node.data = toggle = !toggle;\r\n    };\r\n  // environments with maybe non-completely correct, but existent Promise\r\n  } else if (Promise && Promise.resolve) {\r\n    // Promise.resolve without an argument throws an error in LG WebOS 2\r\n    promise = Promise.resolve(undefined);\r\n    then = promise.then;\r\n    notify = function () {\r\n      then.call(promise, flush);\r\n    };\r\n  // Node.js without promises\r\n  } else if (IS_NODE) {\r\n    notify = function () {\r\n      process.nextTick(flush);\r\n    };\r\n  // for other environments - macrotask based on:\r\n  // - setImmediate\r\n  // - MessageChannel\r\n  // - window.postMessag\r\n  // - onreadystatechange\r\n  // - setTimeout\r\n  } else {\r\n    notify = function () {\r\n      // strange IE + webpack dev server bug - use .call(global)\r\n      macrotask.call(global, flush);\r\n    };\r\n  }\r\n}\r\n\r\nmodule.exports = queueMicrotask || function (fn) {\r\n  var task = { fn: fn, next: undefined };\r\n  if (last) last.next = task;\r\n  if (!head) {\r\n    head = task;\r\n    notify();\r\n  } last = task;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}