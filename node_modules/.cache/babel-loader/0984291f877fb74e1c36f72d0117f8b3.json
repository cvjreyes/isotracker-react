{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\procInstTable\\\\procInstTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport CommentPopUp from '../commentPopUp/commentPopUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst SecureStorage = require(\"secure-web-storage\");\n\nvar SECRET_KEY = 'sanud2ha8shd72h';\nvar secureStorage = new SecureStorage(localStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});\n\nclass procInstTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }, this),\n      onFilter: (value, record) => this.state.searchedColumn === \"id\" ? record.id.props.children ? record.id.props.children.toString().toLowerCase().includes(value.toLowerCase()) : '' : record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => text.props ? /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => this.getMaster(text.props.children),\n        children: text.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 7\n      }, this) : this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text ? text : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 7\n      }, this) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id.props.children);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }); //this.setState({ selectedRows: selectedRows });\n\n      this.props.onChange(ids);\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/api/roles/acronyms\").then(response => response.json()).then(json => {\n      let dict = {};\n\n      for (let i = 0; i < json.length; i++) {\n        dict[json[i].name] = json[i].code;\n      }\n\n      this.setState({\n        acronyms: dict\n      });\n    });\n    const body = {\n      type: this.props.currentTab\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/filesProcInst\", options).then(response => response.json()).then(json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        let cButton = null;\n\n        if (json.rows[i].comments) {\n          cButton = /*#__PURE__*/_jsxDEV(CommentPopUp, {\n            comments: json.rows[i].comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this);\n        } else {\n          cButton = null;\n        }\n\n        if (json.rows[i].spoclaimed === 1 && this.props.currentTab === \"Process\") {\n          row = {\n            key: i,\n            id: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => this.getMaster(json.rows[i].filename),\n              children: json.rows[i].filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 43\n            }, this),\n            date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n            from: json.rows[i].from,\n            to: json.rows[i].to,\n            user: json.rows[i].spouser,\n            actions: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                disabled: true,\n                style: {\n                  fontSize: \"12px\",\n                  padding: \"2px 5px 2px 5px\",\n                  marginRight: \"5px\"\n                },\n                children: \"CLAIMED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 341\n              }, this), \" \", cButton]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 336\n            }, this)\n          };\n        } else if (json.rows[i].sitclaimed === 1 && this.props.currentTab === \"Instrument\") {\n          row = {\n            key: i,\n            id: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => this.getMaster(json.rows[i].filename),\n              children: json.rows[i].filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 41\n            }, this),\n            date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n            from: json.rows[i].from,\n            to: json.rows[i].to,\n            user: json.rows[i].situser,\n            actions: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                disabled: true,\n                style: {\n                  fontSize: \"12px\",\n                  padding: \"2px 5px 2px 5px\",\n                  marginRight: \"5px\"\n                },\n                children: \"CLAIMED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 339\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 334\n            }, this)\n          };\n        } else {\n          row = {\n            key: i,\n            id: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => this.getMaster(json.rows[i].filename),\n              children: json.rows[i].filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 43\n            }, this),\n            date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n            from: json.rows[i].from,\n            to: json.rows[i].to,\n            user: \"None\",\n            actions: \"\"\n          };\n        }\n\n        if (row) {\n          if (i % 2 === 0) {\n            row[\"color\"] = \"#fff\";\n          } else {\n            row[\"color\"] = \"#eee\";\n          }\n\n          rows.push(row);\n        }\n      }\n\n      this.setState({\n        data: rows,\n        selectedRows: []\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const body = {\n        type: this.props.currentTab\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/filesProcInst\", options).then(response => response.json()).then(json => {\n        var rows = [];\n        let row = null;\n\n        for (let i = 0; i < json.rows.length; i++) {\n          if (json.rows[i].spoclaimed === 1 && this.props.currentTab === \"Process\") {\n            row = {\n              key: i,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 43\n              }, this),\n              date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n              from: json.rows[i].from,\n              to: json.rows[i].to,\n              user: json.rows[i].spouser,\n              actions: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  disabled: true,\n                  style: {\n                    fontSize: \"12px\",\n                    padding: \"2px 5px 2px 5px\",\n                    marginRight: \"5px\"\n                  },\n                  children: \"CLAIMED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 340\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 335\n              }, this)\n            };\n          } else if (json.rows[i].sitclaimed === 1 && this.props.currentTab === \"Instrument\") {\n            row = {\n              key: i,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 41\n              }, this),\n              date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n              from: json.rows[i].from,\n              to: json.rows[i].to,\n              user: json.rows[i].situser,\n              actions: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  disabled: true,\n                  style: {\n                    fontSize: \"12px\",\n                    padding: \"2px 5px 2px 5px\",\n                    marginRight: \"5px\"\n                  },\n                  children: \"CLAIMED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 339\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 334\n              }, this)\n            };\n          } else {\n            row = {\n              key: i,\n              id: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => this.getMaster(json.rows[i].filename),\n                children: json.rows[i].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 43\n              }, this),\n              date: json.rows[i].updated_at.toString().substring(0, 10) + \" \" + json.rows[i].updated_at.toString().substring(11, 19),\n              from: json.rows[i].from,\n              to: json.rows[i].to,\n              user: \"None\",\n              actions: \"\"\n            };\n          }\n\n          if (row) {\n            if (i % 2 === 0) {\n              row[\"color\"] = \"#fff\";\n            } else {\n              row[\"color\"] = \"#eee\";\n            }\n\n            rows.push(row);\n          }\n        }\n\n        this.setState({\n          data: rows\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  getMaster(fileName) {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/pdf\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/getMaster/\" + fileName, options).then(res => res.blob()).then(response => {\n      const file = new Blob([response], {\n        type: \"application/pdf\"\n      }); //Build a URL from the file\n\n      const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n      let w = window.open(fileURL);\n      w.addEventListener(\"load\", function () {\n        setTimeout(() => w.document.title = fileName, 300);\n      }); // create <a> tag dinamically\n\n      var fileLink = document.createElement('a');\n      fileLink.href = fileURL; // it forces the name of the downloaded file\n\n      fileLink.download = fileName; // triggers the click event\n\n      fileLink.click();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const selectedRows = this.state.selectedRows;\n    const selectedRowsKeys = this.state.selectedRowsKeys;\n    const rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.onSelectChange(selectedRowKeys, selectedRows);\n      },\n      getCheckboxProps: record => ({\n        disabled: record.actions.props != null | (record.actions.type === 'button' && secureStorage.getItem(\"role\") !== \"DesignLead\" && secureStorage.getItem(\"role\") !== \"StressLead\" && secureStorage.getItem(\"role\") !== \"SupportsLead\" && secureStorage.getItem(\"role\") !== \"SpecialityLead\") | (record.actions.type !== 'button' && secureStorage.getItem(\"role\") === \"DesignLead\" | secureStorage.getItem(\"role\") === \"StressLead\" | secureStorage.getItem(\"role\") === \"SupportsLead\"),\n        // Column configuration not to be checked\n        name: record.name\n      })\n    };\n\n    if (localStorage.getItem(\"update\") === \"true\") {\n      this.setState({\n        selectedRows: [],\n        selectedRowsKeys: []\n      });\n      rowSelection.selectedRowKeys = [];\n      rowSelection.selectedRows = [];\n      localStorage.setItem(\"update\", false);\n    } else {\n      rowSelection.selectedRowKeys = selectedRowsKeys;\n      rowSelection.selectedRows = selectedRows;\n    }\n\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"ISO ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'id',\n      key: 'id',\n      width: '23%',\n      ...this.getColumnSearchProps('id'),\n      sorter: {\n        compare: (a, b) => a.id.props.children.localeCompare(b.id.props.children)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'date',\n      key: 'date',\n      width: '20%',\n      ...this.getColumnSearchProps('date'),\n      sorter: {\n        compare: (a, b) => a.date.replace(/\\D/g, '') - b.date.replace(/\\D/g, '')\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"From\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'from',\n      key: 'from',\n      ...this.getColumnSearchProps('from'),\n      sorter: {\n        compare: (a, b) => {\n          return a.from.localeCompare(b.from);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"To\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'to',\n      key: 'to',\n      ...this.getColumnSearchProps('to'),\n      sorter: {\n        compare: (a, b) => {\n          return a.to.localeCompare(b.to);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'user',\n      key: 'user',\n      ...this.getColumnSearchProps('user'),\n      sorter: {\n        compare: (a, b) => {\n          return a.user.localeCompare(b.user);\n        }\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'actions',\n      key: 'actions',\n      ...this.getColumnSearchProps('actions'),\n      sorter: {\n        compare: (a, b) => a.actions.localeCompare(b.actions)\n      }\n    }];\n    var totalElements = null;\n\n    if (this.state.data.length === 0) {\n      totalElements = null;\n    } else {\n      totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          rowSelection: {\n            type: 'checkbox',\n            ...rowSelection\n          },\n          columns: columns,\n          dataSource: this.state.data,\n          pagination: {\n            pageSize: this.props.pagination\n          },\n          size: \"small\",\n          rowClassName: record => record.color.replace('#', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 9\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default procInstTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/procInstTable/procInstTable.js"],"names":["React","Table","Input","Button","Space","Highlighter","SearchOutlined","Link","CommentPopUp","CryptoJS","require","SecureStorage","SECRET_KEY","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","procInstTable","Component","state","searchText","searchedColumn","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","id","children","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","getMaster","backgroundColor","onSelectChange","selectedRowKeys","ids","i","length","push","onChange","componentDidMount","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","dict","name","code","body","type","options","method","headers","JSON","stringify","rows","row","cButton","comments","spoclaimed","filename","date","updated_at","substring","from","to","user","spouser","actions","fontSize","marginRight","sitclaimed","situser","catch","error","console","log","componentDidUpdate","prevProps","prevState","fileName","res","blob","file","Blob","fileURL","URL","createObjectURL","w","window","open","addEventListener","document","title","fileLink","createElement","href","download","click","rowSelection","getCheckboxProps","disabled","getItem","setItem","columns","sorter","compare","a","b","localeCompare","replace","totalElements","position","bottom","left","pageSize","pagination"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentPopUp from '../commentPopUp/commentPopUp';\r\n\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass procInstTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null\r\n  };\r\n\r\n  \r\n\r\n  componentDidMount(){\r\n\r\n    \r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/acronyms\")\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        let dict = {}\r\n\r\n        for(let i = 0; i < json.length; i++){\r\n          dict[json[i].name] = json[i].code\r\n        }\r\n        this.setState({\r\n          acronyms: dict\r\n        })\r\n      })\r\n\r\n\r\n      \r\n    \r\n    const body ={\r\n      type : this.props.currentTab\r\n    }\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body)\r\n  }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/filesProcInst\", options)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n                var rows = []\r\n                var row = null\r\n                \r\n                for(let i = 0; i < json.rows.length; i++){\r\n                    let cButton = null\r\n                    if(json.rows[i].comments){\r\n                      cButton = <CommentPopUp comments={json.rows[i].comments}/>\r\n                    }else{\r\n                      cButton = null\r\n                    }\r\n                    if(json.rows[i].spoclaimed === 1 && this.props.currentTab ===  \"Process\"){ \r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].spouser, actions: <div><button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button> {cButton}</div> }\r\n                    }else if (json.rows[i].sitclaimed === 1 && this.props.currentTab ===  \"Instrument\"){\r\n                      row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].situser, actions: <div><button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button></div>}   \r\n                    }else{\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: \"None\", actions:\"\"}\r\n                    }\r\n                    if(row){\r\n                      if(i % 2 === 0){\r\n                        row[\"color\"] = \"#fff\"\r\n                      }else{\r\n                        row[\"color\"] = \"#eee\"\r\n                      }\r\n                       \r\n                      rows.push(row)\r\n                    }\r\n                  }\r\n                \r\n                this.setState({data : rows, selectedRows: []});\r\n\r\n            }\r\n        )\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n        \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n\r\n    if(prevProps !== this.props){\r\n      \r\n      const body ={\r\n        type : this.props.currentTab\r\n      }\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n      fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/filesProcInst\", options)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n                  var rows = []\r\n                  let row = null\r\n                  for(let i = 0; i < json.rows.length; i++){\r\n                    if(json.rows[i].spoclaimed === 1 && this.props.currentTab ===  \"Process\"){ \r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].spouser, actions:<div><button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button></div>}\r\n                    }else if (json.rows[i].sitclaimed === 1 && this.props.currentTab ===  \"Instrument\"){\r\n                      row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].situser, actions: <div><button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button></div> }   \r\n                    }else{\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: \"None\", actions:\"\"}\r\n                    }\r\n                    if(row){\r\n                      if(i % 2 === 0){\r\n                        row[\"color\"] = \"#fff\"\r\n                      }else{\r\n                        row[\"color\"] = \"#eee\"\r\n                      }\r\n                       \r\n                      rows.push(row)\r\n                    }\r\n                  }\r\n                  this.setState({\r\n                    data : rows,\r\n                  });\r\n              }\r\n          )\r\n          .catch(error => {\r\n              console.log(error);\r\n          })\r\n      }\r\n\r\n  }\r\n\r\n  getMaster(fileName){\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n          \"Content-Type\": \"application/pdf\"\r\n      }\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getMaster/\"+fileName, options)\r\n    .then(res => res.blob())\r\n    .then(response => {\r\n      const file = new Blob([response], {\r\n        type: \"application/pdf\"\r\n      });\r\n      //Build a URL from the file\r\n      const fileURL = URL.createObjectURL(file);\r\n      //Open the URL on new Window\r\n      let w = window.open(fileURL);\r\n\r\n        w.addEventListener(\"load\", function() {\r\n          setTimeout(()=> w.document.title = fileName\r\n          , 300);\r\n\r\n\r\n        });\r\n\r\n        // create <a> tag dinamically\r\n        var fileLink = document.createElement('a');\r\n        fileLink.href = fileURL;\r\n\r\n        // it forces the name of the downloaded file\r\n        fileLink.download = fileName;\r\n\r\n        // triggers the click event\r\n        fileLink.click();\r\n\r\n\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n\r\n    this.state.searchedColumn === \"id\" ? (\r\n      record.id.props.children\r\n        ? record.id.props.children.toString().toLowerCase().includes(value.toLowerCase())\r\n        : ''\r\n      ) : (\r\n        record[dataIndex]\r\n          ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n          : ''\r\n      ),\r\n\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text => \r\n      text.props ? (\r\n      <Link onClick={() => this.getMaster(text.props.children)}>{text.props.children}</Link>\r\n    ) : this.state.searchedColumn === dataIndex ? (\r\n      <Highlighter\r\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n        searchWords={[this.state.searchText]}\r\n        autoEscape\r\n        textToHighlight={text ? text : ''}\r\n      />\r\n    ) : (\r\n      text\r\n    ),\r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n    const selectedRows = this.state.selectedRows;\r\n    const selectedRowsKeys = this.state.selectedRowsKeys;\r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => (      \r\n        {\r\n        \r\n        disabled:  record.actions.props != null | (record.actions.type === 'button' && (secureStorage.getItem(\"role\") !== \"DesignLead\" && secureStorage.getItem(\"role\") !== \"StressLead\" && secureStorage.getItem(\"role\") !== \"SupportsLead\" && secureStorage.getItem(\"role\") !== \"SpecialityLead\")) | (record.actions.type !== 'button' && (secureStorage.getItem(\"role\") === \"DesignLead\" | secureStorage.getItem(\"role\") === \"StressLead\" | secureStorage.getItem(\"role\") === \"SupportsLead\")),\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n    if(localStorage.getItem(\"update\") === \"true\"){\r\n      this.setState({\r\n        selectedRows: [],\r\n        selectedRowsKeys: []\r\n      })\r\n      rowSelection.selectedRowKeys = []\r\n      rowSelection.selectedRows = []\r\n      localStorage.setItem(\"update\", false)\r\n    }else{\r\n      rowSelection.selectedRowKeys = selectedRowsKeys \r\n      rowSelection.selectedRows = selectedRows;\r\n    }  \r\n    \r\n    \r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">ISO ID</center>,\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: '23%',\r\n        ...this.getColumnSearchProps('id'),\r\n        sorter:{\r\n          compare: (a, b) => a.id.props.children.localeCompare(b.id.props.children),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Date</div>,\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('date'),\r\n        sorter: {\r\n          compare: (a, b) => a.date.replace(/\\D/g,'') - b.date.replace(/\\D/g,''),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">From</div>,\r\n        dataIndex: 'from',\r\n        key: 'from',\r\n        ...this.getColumnSearchProps('from'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.from.localeCompare(b.from)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">To</div>,\r\n        dataIndex: 'to',\r\n        key: 'to',\r\n        ...this.getColumnSearchProps('to'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.to.localeCompare(b.to)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">User</div>,\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        ...this.getColumnSearchProps('user'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.user.localeCompare(b.user)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Actions</div>,\r\n        dataIndex: 'actions',\r\n        key: 'actions',\r\n        ...this.getColumnSearchProps('actions'),\r\n        sorter: {\r\n          compare: (a, b) => a.actions.localeCompare(b.actions),\r\n        },\r\n      },\r\n    ];\r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} columns={columns} dataSource={this.state.data} pagination={{ pageSize: this.props.pagination  }} size=\"small\" rowClassName= {(record) => record.color.replace('#', '')}/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default procInstTable;"]},"metadata":{},"sourceType":"module"}