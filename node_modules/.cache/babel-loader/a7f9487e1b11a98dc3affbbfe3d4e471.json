{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\isotracker-dev\\\\isotracker-react\\\\src\\\\components\\\\pipingEstimatedDataTable\\\\pipingEstimatedDataTable.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PipingEstimatedDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: '',\n      data: [],\n      displayData: [],\n      filterData: [\"\", \"\", \"\"],\n      tab: this.props.currentTab,\n      selectedRows: [],\n      selectedRowsKeys: [],\n      updateData: this.props.updateData,\n      username: \"\",\n      acronyms: null,\n      steps: [],\n      filters: []\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      render: text => text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      let ids = [];\n\n      for (let i = 0; i < selectedRows.length; i++) {\n        ids.push(selectedRows[i].id.props.children);\n      }\n\n      this.setState({\n        selectedRowsKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }); //this.setState({ selectedRows: selectedRows });\n\n      this.props.onChange(ids);\n    };\n  }\n\n  async componentDidMount() {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://\" + process.env.REACT_APP_SERVER + \":\" + process.env.REACT_APP_NODE_PORT + \"/piping/estimated\", options).then(response => response.json()).then(async json => {\n      var rows = [];\n      var row = null;\n\n      for (let i = 0; i < json.rows.length; i++) {\n        if (i % 2 === 0) {\n          row = {\n            area: json.rows[i].area,\n            type: json.rows[i].type,\n            quantity: json.rows[i].quantity,\n            color: \"#fff\"\n          };\n        } else {\n          row = {\n            area: json.rows[i].area,\n            type: json.rows[i].type,\n            quantity: json.rows[i].quantity,\n            color: \"#eee\"\n          };\n        }\n\n        rows.push(row);\n      }\n\n      let filterRow = [{\n        area: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Area\",\n            onChange: e => this.filter(0, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }, this),\n        type: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Type\",\n            onChange: e => this.filter(1, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 171\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 166\n        }, this),\n        quantity: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter__input\",\n            placeholder: \"Qty\",\n            onChange: e => this.filter(2, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 308\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 303\n        }, this)\n      }];\n      this.setState({\n        data: rows,\n        role: this.props.role,\n        displayData: rows\n      });\n      await this.setState({\n        filters: filterRow\n      });\n    });\n  }\n\n  async filter(column, value) {\n    let fd = this.state.filterData;\n    fd[column] = value;\n    await this.setState({\n      filterData: fd\n    });\n    let auxDisplayData = this.state.data;\n    let resultData = [];\n    let fil,\n        exists = null;\n\n    for (let i = 0; i < auxDisplayData.length; i++) {\n      exists = true;\n\n      for (let column = 0; column < Object.keys(auxDisplayData[i]).length - 1; column++) {\n        fil = Object.keys(auxDisplayData[i])[column];\n\n        if (auxDisplayData[i][fil]) {\n          if (this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].toString().includes(this.state.filterData[column])) {\n            exists = false;\n            console.log(auxDisplayData[i][fil].toString(), this.state.filterData[column]);\n          }\n        } else {\n          exists = false;\n        }\n      }\n\n      if (exists) {\n        resultData.push(auxDisplayData[i]);\n      }\n    }\n\n    await this.setState({\n      displayData: resultData\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'area',\n      key: 'area',\n      ...this.getColumnSearchProps('area'),\n      sorter: {\n        compare: (a, b) => a.area.localeCompare(b.area)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"center\", {\n        className: \"dataTable__header__text\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'type',\n      key: 'type',\n      ...this.getColumnSearchProps('type'),\n      sorter: {\n        compare: (a, b) => a.type.localeCompare(b.type)\n      }\n    }, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable__header__text\",\n        children: \"Qty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 16\n      }, this),\n      dataIndex: 'quantity',\n      key: 'quantity',\n      ...this.getColumnSearchProps('quantity'),\n      sorter: {\n        compare: (a, b) => a.quantity - b.quantity\n      }\n    }];\n    var totalElements = null;\n\n    if (this.state.data.length === 0) {\n      totalElements = null;\n    } else {\n      totalElements = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: 25,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total elements: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.updateData, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"estimatedDataTable__container\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"customTable\",\n          bordered: true,\n          style: {\n            height: '540px'\n          },\n          columns: columns,\n          dataSource: this.state.displayData,\n          scroll: {\n            y: 437\n          },\n          pagination: {\n            disabled: true,\n            defaultPageSize: 5000\n          },\n          size: \"small\",\n          rowClassName: record => record.color.replace('#', '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"filter__table\",\n          pagination: {\n            disabled: true\n          },\n          scroll: {\n            y: 437\n          },\n          showHeader: false,\n          bordered: true,\n          columns: columns,\n          dataSource: this.state.filters,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PipingEstimatedDataTable;","map":{"version":3,"sources":["C:/xampp/htdocs/isotracker-dev/isotracker-react/src/components/pipingEstimatedDataTable/pipingEstimatedDataTable.js"],"names":["React","Table","PipingEstimatedDataTable","Component","state","searchText","searchedColumn","data","displayData","filterData","tab","props","currentTab","selectedRows","selectedRowsKeys","updateData","username","acronyms","steps","filters","getColumnSearchProps","dataIndex","render","text","handleSearch","selectedKeys","confirm","setState","handleReset","clearFilters","onSelectChange","selectedRowKeys","ids","i","length","push","id","children","onChange","componentDidMount","options","method","headers","fetch","process","env","REACT_APP_SERVER","REACT_APP_NODE_PORT","then","response","json","rows","row","area","type","quantity","color","filterRow","e","filter","target","value","role","column","fd","auxDisplayData","resultData","fil","exists","Object","keys","toString","includes","console","log","columns","title","key","sorter","compare","a","b","localeCompare","totalElements","position","bottom","left","height","y","disabled","defaultPageSize","record","replace"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\n\r\n\r\n\r\nclass PipingEstimatedDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    displayData: [],\r\n    filterData: [\"\", \"\", \"\"],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: [],\r\n    filters: []\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/piping/estimated\", options)\r\n      .then(response => response.json())\r\n      .then(async json => {\r\n        var rows = []\r\n        var row = null\r\n        \r\n        for(let i = 0; i < json.rows.length; i++){\r\n\r\n            if(i % 2 === 0){\r\n              row = {area: json.rows[i].area, type: json.rows[i].type, quantity: json.rows[i].quantity, color: \"#fff\"}\r\n            }else{\r\n              row = {area: json.rows[i].area, type: json.rows[i].type, quantity: json.rows[i].quantity, color: \"#eee\"}\r\n            }\r\n\r\n            rows.push(row)\r\n        }\r\n        let filterRow = [{area: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Area\" onChange={(e) => this.filter(0, e.target.value)}/></div>, type: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Type\" onChange={(e) => this.filter(1, e.target.value)}/></div>, quantity: <div><input type=\"text\" className=\"filter__input\" placeholder=\"Qty\" onChange={(e) => this.filter(2,e.target.value)}/></div>}]\r\n             \r\n        this.setState({data : rows, role: this.props.role, displayData: rows});\r\n        await this.setState({filters : filterRow})\r\n\r\n    }) \r\n  }\r\n\r\n  async filter(column, value){\r\n    let fd = this.state.filterData\r\n    fd[column] = value\r\n    await this.setState({filterData: fd})\r\n\r\n    let auxDisplayData = this.state.data\r\n    let resultData = []\r\n    let fil, exists = null\r\n    for(let i = 0; i < auxDisplayData.length; i++){\r\n      exists = true\r\n      for(let column = 0; column < Object.keys(auxDisplayData[i]).length-1; column ++){\r\n        fil = Object.keys(auxDisplayData[i])[column]\r\n        if(auxDisplayData[i][fil]){\r\n          if(this.state.filterData[column] !== \"\" && this.state.filterData[column] && !auxDisplayData[i][fil].toString().includes(this.state.filterData[column])){\r\n            exists = false\r\n            console.log(auxDisplayData[i][fil].toString(), this.state.filterData[column])\r\n          }\r\n        }else{\r\n          \r\n          exists = false\r\n        }\r\n          \r\n        \r\n      }\r\n      if(exists){\r\n        resultData.push(auxDisplayData[i])\r\n      }\r\n    }\r\n    await this.setState({displayData: resultData})\r\n  }\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    \r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Area</center>,\r\n        dataIndex: 'area',\r\n        key: 'area',\r\n        ...this.getColumnSearchProps('area'),\r\n        sorter:{\r\n          compare: (a, b) => a.area.localeCompare(b.area),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Type</center>,\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n        ...this.getColumnSearchProps('type'),\r\n        sorter:{\r\n          compare: (a, b) => a.type.localeCompare(b.type),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Qty</div>,\r\n        dataIndex: 'quantity',\r\n        key: 'quantity',\r\n        ...this.getColumnSearchProps('quantity'),\r\n        sorter: {\r\n          compare: (a, b) => a.quantity-b.quantity,\r\n        },\r\n      },\r\n    ]\r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"estimatedDataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} style={{ height: '540px' }} columns={columns} dataSource={this.state.displayData} scroll={{y:437}} pagination={{disabled:true, defaultPageSize:5000}} size=\"small\"\r\n         rowClassName= {(record) => record.color.replace('#', '')}/>\r\n        <Table className=\"filter__table\" pagination={{disabled:true}} scroll={{y:437}} showHeader = {false} bordered = {true} columns={columns} dataSource={this.state.filters} size=\"small\"/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PipingEstimatedDataTable;"]},"metadata":{},"sourceType":"module"}